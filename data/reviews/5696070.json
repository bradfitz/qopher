{
	"description": "net: delete dead, confusional method toAddr",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-25 09:41:47.149311",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2012-02-28 08:56:58.689131",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Got it.\n\nOn Wed, Feb 29, 2012 at 2:27 AM, Russ Cox <rsc@golang.org> wrote:\n\n> I do not believe this is dead code. \u00a0The toAddr method takes\n> care of making sure that a nil *SpecificAddr turns into a\n> nil interface. \u00a0A simple conversion does not do that.\n> http://weekly.golang.org/doc/go_faq.html#nil_error\n>\n> Just to pick one example:\n>\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return 0, nil, syscall.EINVAL\n> \u00a0 \u00a0 \u00a0 }\n> \u00a0 \u00a0 \u00a0 n, uaddr, err := c.ReadFromUnix(b)\n> - \u00a0 \u00a0 \u00a0 return n, uaddr.toAddr(), err\n> + \u00a0 \u00a0 \u00a0 return n, uaddr, err\n>\n> Here if err != nil uaddr will be == nil, and then the call to\n> toAddr makes sure that the returned Addr is also nil.\n>\n> Russ\n",
			"disapproval": false,
			"date": "2012-02-28 22:48:51.623978",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry for the delayed response.\n\nI do not believe this is dead code.  The toAddr method takes\ncare of making sure that a nil *SpecificAddr turns into a\nnil interface.  A simple conversion does not do that.\nhttp://weekly.golang.org/doc/go_faq.html#nil_error\n\nJust to pick one example:\n\n               return 0, nil, syscall.EINVAL\n       }\n       n, uaddr, err := c.ReadFromUnix(b)\n-       return n, uaddr.toAddr(), err\n+       return n, uaddr, err\n\nHere if err != nil uaddr will be == nil, and then the call to\ntoAddr makes sure that the returned Addr is also nil.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-28 17:27:56.728664",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-02-28 22:49:03.953862",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 5696070: net: delete dead, confusional method toAddr",
	"created": "2012-02-25 09:02:05.057242",
	"patchsets": [
		7011,
		9001
	],
	"modified": "2012-02-28 22:49:05.670342",
	"closed": true,
	"issue": 5696070
}