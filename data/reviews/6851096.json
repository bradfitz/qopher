{
	"description": "net: check read and write deadlines before doing syscalls\n\nOtherwise a fast sender or receiver can make sockets always\nreadable or writable, preventing deadline checks from ever\noccuring.\n\nUpdate issue 4191 (fixes it with other CL, coming separately)\nFixes issue 4403",
	"cc": [
		"golang-dev@googlegroups.com",
		"alex.brainman@gmail.com",
		"dave@cheney.net",
		"mikioh.mikioh@gmail.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ffd1e075c260 ***\n\nnet: check read and write deadlines before doing syscalls\n\nOtherwise a fast sender or receiver can make sockets always\nreadable or writable, preventing deadline checks from ever\noccuring.\n\nUpdate issue 4191 (fixes it with other CL, coming separately)\nFixes issue 4403\n\nR=golang-dev, alex.brainman, dave, mikioh.mikioh\nCC=golang-dev\nhttp://codereview.appspot.com/6851096\n\nhttp://codereview.appspot.com/6851096/diff/10001/src/pkg/net/fd_unix.go\nFile src/pkg/net/fd_unix.go (right):\n\nhttp://codereview.appspot.com/6851096/diff/10001/src/pkg/net/fd_unix.go#newcode522\nsrc/pkg/net/fd_unix.go:522: if time.Now().UnixNano() >= fd.rdeadline {\nwhoops, this should have been wdeadline, not rdeadline.",
			"disapproval": false,
			"date": "2012-11-24 06:15:31.759730",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, dave@cheney.net, mikioh.mikioh@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-24 01:03:54.132050",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-11-26 19:22:56.165470",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Seems to work on OS X.\r\n\r\nMust be an epoll pollster bug.\r\n\r\n\r\nOn Thu, Nov 22, 2012 at 11:01 AM, <bradfitz@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> net: failing timeout test\r\n>\r\n> There are two tests: one runs with GOMAXPROCS=1 (which fails),\r\n> and one runs with GOMAXPROCS=4 (which passes).\r\n>\r\n> So far only tested on Linux (where it fails).\r\n>\r\n> Please review this at http://codereview.appspot.com/**6851096/<http://codereview.appspot.com/6851096/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/net_test.go\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-22 21:08:06.710710",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I can move it. It started as a different test and morphed into that test.\r\n On Nov 23, 2012 6:45 AM, <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> why not in timeout_test.go?\r\n>\r\n> https://codereview.appspot.**com/6851096/<https://codereview.appspot.com/6851096/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-23 19:16:06.919840",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-11-22 19:01:37.744100",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks Brad, what an epic!\n\nI think same fix needs to be made to the other Read* and Write* methods on netFD.\n\nhttps://codereview.appspot.com/6851096/diff/10001/src/pkg/net/fd_unix.go\nFile src/pkg/net/fd_unix.go (right):\n\nhttps://codereview.appspot.com/6851096/diff/10001/src/pkg/net/fd_unix.go#newcode462\nsrc/pkg/net/fd_unix.go:462: n, sa, err = syscall.Recvfrom(fd.sysfd, p, 0)\nWhat about RecvFrom ?\n\nhttps://codereview.appspot.com/6851096/diff/10001/src/pkg/net/fd_unix.go#newcode490\nsrc/pkg/net/fd_unix.go:490: n, oobn, flags, sa, err = syscall.Recvmsg(fd.sysfd, p, oob, 0)\nAnd this one\n\nhttps://codereview.appspot.com/6851096/diff/10001/src/pkg/net/fd_unix.go#newcode566\nsrc/pkg/net/fd_unix.go:566: err = syscall.Sendto(fd.sysfd, p, 0, sa)\nAnd this one\n\nhttps://codereview.appspot.com/6851096/diff/10001/src/pkg/net/fd_unix.go#newcode593\nsrc/pkg/net/fd_unix.go:593: err = syscall.Sendmsg(fd.sysfd, p, oob, sa, 0)\nAnd this one",
			"disapproval": false,
			"date": "2012-11-24 05:06:26.778710",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": ".... but still very sporadic timing on GOMAXPROCS=1 on OS X.  GOMAXPROCS >\r\n1 is consistent.\r\n\r\nOn Thu, Nov 22, 2012 at 1:08 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> Seems to work on OS X.\r\n>\r\n> Must be an epoll pollster bug.\r\n>\r\n>\r\n> On Thu, Nov 22, 2012 at 11:01 AM, <bradfitz@golang.org> wrote:\r\n>\r\n>> Reviewers: golang-dev_googlegroups.com,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com,\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://go.googlecode.com/hg/\r\n>>\r\n>>\r\n>> Description:\r\n>> net: failing timeout test\r\n>>\r\n>> There are two tests: one runs with GOMAXPROCS=1 (which fails),\r\n>> and one runs with GOMAXPROCS=4 (which passes).\r\n>>\r\n>> So far only tested on Linux (where it fails).\r\n>>\r\n>> Please review this at http://codereview.appspot.com/**6851096/<http://codereview.appspot.com/6851096/>\r\n>>\r\n>> Affected files:\r\n>>   M src/pkg/net/net_test.go\r\n>>\r\n>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-22 21:08:48.023590",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PASSes on windows, but only if http://codereview.appspot.com/6851098 applied. Thank you.\n\nYou, probably, want to clean this test before submitting.\n\nAlex",
			"disapproval": false,
			"date": "2012-11-23 01:43:04.639360",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Nov 23, 2012 at 9:06 PM, <dave@cheney.net> wrote:\r\n\r\n> Thanks Brad, what an epic!\r\n>\r\n\r\nThanks for your help, too.  The Dustin HTTP mystery in Issue 4191 is not\r\nentirely over yet, but things are getting better and consistent now.\r\n\r\nI think same fix needs to be made to the other Read* and Write* methods\r\n> on netFD.\r\n>\r\n\r\nDone in several, but untested.\r\n",
			"disapproval": false,
			"date": "2012-11-24 05:36:07.489270",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think their is a bug in netFD.Read (and others) where the timeout logic is not applied unless the syscall.Read blocks and takes a trip through the pollster via Wait{Read,Write}\n\nhttps://codereview.appspot.com/6851096/diff/2001/src/pkg/net/net_test.go\nFile src/pkg/net/net_test.go (right):\n\nhttps://codereview.appspot.com/6851096/diff/2001/src/pkg/net/net_test.go#newcode271\nsrc/pkg/net/net_test.go:271: d := time.Now().Sub(t0)\ntime.Since(t0)\n\nhttps://codereview.appspot.com/6851096/diff/2001/src/pkg/net/net_test.go#newcode312\nsrc/pkg/net/net_test.go:312: d := time.Now().Sub(t0)\ntime.Since(t0)",
			"disapproval": false,
			"date": "2012-11-23 13:08:06.430420",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "why not in timeout_test.go?",
			"disapproval": false,
			"date": "2012-11-23 14:45:28.796480",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, with minor comments.\n\nThank you for fixing this Brad. I'm really happy that there are better tests around this code.\n\nhttps://codereview.appspot.com/6851096/diff/11001/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/6851096/diff/11001/src/pkg/net/timeout_test.go#newcode331\nsrc/pkg/net/timeout_test.go:331: println(name)\nt.Log(name)",
			"disapproval": false,
			"date": "2012-11-24 05:57:51.860190",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, dave@cheney.net, mikioh.mikioh@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-24 05:32:18.554050",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6851096: net: check read and write deadlines before doing syscalls",
	"created": "2012-11-22 19:00:00.703580",
	"patchsets": [
		1,
		2001,
		10001,
		11001,
		12002
	],
	"modified": "2012-11-26 19:22:56.323780",
	"closed": true,
	"issue": 6851096
}