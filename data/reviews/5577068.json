{
	"description": "spec: emphasize that compilers may round or reject constants.\n\nFixes issue 2789.",
	"cc": [
		"golang-dev@googlegroups.com",
		"remy@archlinux.org"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bsiegert@gmail.com",
		"rsc@golang.org",
		"r@golang.org"
	],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-28 11:18:06.594751",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5577068/diff/3001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5577068/diff/3001/doc/go_spec.html#newcode597\ndoc/go_spec.html:597: In particular, a compilar may refuse to handle integral numeric constants that\ncompiler",
			"disapproval": false,
			"date": "2012-01-28 12:15:20.458539",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bsiegert@gmail.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-28 13:04:53.422943",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This proposal aims at clearly making issue 2789 a non-issue and explains why it is legal to have\n\npackage main\n\nfunc main() {\n\tprintln(0.1 + 0.2 == 0.3)\n\tprintln(int64(1e2012 + 1 - 1e2012))\n}\n\nprint:\n\nfalse\n0",
			"disapproval": false,
			"date": "2012-01-28 11:20:21.832634",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please add\n    Fixes issue 2789.\nto the CL description.\n",
			"disapproval": false,
			"date": "2012-01-29 16:02:00.136287",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i agree this should be settled but we need to define it better\n\nhttp://codereview.appspot.com/5577068/diff/5001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5577068/diff/5001/doc/go_spec.html#newcode558\ndoc/go_spec.html:558: Precision of numeric constants may be subject to implementation\ns/Precision/The precision/\n\nhowever, this feels too vague to me. i want to write code that i know will work; what can i depend on?\n\nhttp://codereview.appspot.com/5577068/diff/5001/doc/go_spec.html#newcode599\ndoc/go_spec.html:599: floating-point or complex constants.\nagain, this is too vague",
			"disapproval": false,
			"date": "2012-01-29 16:07:15.430337",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5577068/diff/5001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5577068/diff/5001/doc/go_spec.html#newcode558\ndoc/go_spec.html:558: Precision of numeric constants may be subject to implementation\nWhat about moving the \"Implementation restrictions\" paragraph up here?\n\nhttp://codereview.appspot.com/5577068/diff/5001/doc/go_spec.html#newcode599\ndoc/go_spec.html:599: floating-point or complex constants.\nActually, what does the \"any machine type\" thing means. Is it about hardware support? Since the spec already defines what are the integer and floating-point types, can we say 128 bits here?\n\nWe could rewrite the paragraph as \"A compiler must guarantee exact constant arithmetic for all integral values under 2^128. Rounding errors for operations on floating-point or complex constants must be not greater than those obtained using a mantissa and exponent twice as large as float64.\"",
			"disapproval": false,
			"date": "2012-01-29 16:35:44.401146",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-02-10 07:45:36.216618",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 5577068: spec: emphasize that compilers may round or reject cons...",
	"created": "2012-01-28 11:17:28.719142",
	"patchsets": [
		1,
		3,
		3001,
		5001
	],
	"modified": "2012-02-10 07:45:37.567077",
	"closed": true,
	"issue": 5577068
}