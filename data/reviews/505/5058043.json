{
	"description": "websocket: add mutex to make websocket full-duplex\n\nOne benefit of websocket is that it is full-duplex so that it could\nsend and receive at the same time.\nThis CL makes websocket goroutine safe, so user could use websocket\nboth on goroutine for read and on goroutine for write.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "ukai@google.com",
			"recipients": [
				"ukai@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-20 08:41:26.965293",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I'm confused.  It looks like the websocket code already\nallows one goroutine to read at the same time another\ngoroutine writes.  What this CL seems to do is make it\nsafe for multiple goroutines to read at the same time,\nand also to make it safe for multiple goroutines to write\nat the same time.  Is that correct?\n\nRuss\n",
			"disapproval": false,
			"date": "2011-09-20 14:47:42.312862",
			"approval": false
		},
		{
			"sender": "ukai@google.com",
			"recipients": [
				"ukai@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/20 14:47:42, rsc wrote:\n> I'm confused.  It looks like the websocket code already\n> allows one goroutine to read at the same time another\n> goroutine writes.  What this CL seems to do is make it\n> safe for multiple goroutines to read at the same time,\n> and also to make it safe for multiple goroutines to write\n> at the same time.  Is that correct?\n\nrio is to make it safe for multiple goroutines to read at the same time.\nI'm not sure it would be necessary, because typical usage would be to read on one goroutine.\n\nwio is to make it safe for one goroutine to read at the same time another goroutine writes.  Read would cause some writes (such as sending pong message to response ping message) and each message should be written in atomic (not interleaved with write on another goroutine).  That's why I added wio in this CL.\n\nThanks,\nukai",
			"disapproval": false,
			"date": "2011-09-21 00:16:28.195453",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-09-23 01:39:44.789354",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ukai@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=671d87eec5df ***\n\nwebsocket: add mutex to make websocket full-duplex\n\nOne benefit of websocket is that it is full-duplex so that it could\nsend and receive at the same time.\nThis CL makes websocket goroutine safe, so user could use websocket\nboth on goroutine for read and on goroutine for write.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5058043\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-09-23 01:49:57.756337",
			"approval": false
		}
	],
	"owner_email": "ukai@google.com",
	"private": false,
	"base_url": "",
	"owner": "ukai",
	"subject": "code review 5058043: websocket: add mutex to make websocket full-duplex",
	"created": "2011-09-19 06:41:08.762352",
	"patchsets": [
		1,
		2001,
		5001,
		7001
	],
	"modified": "2011-09-23 01:49:57.756337",
	"closed": false,
	"issue": 5058043
}