{
	"description": "syscall: workaround accept() bug on Darwin\n\nDarwin kernels have a bug in accept() where error result from\nan internal call is not checked and socket is accepted instead\nof ECONNABORTED error. However, such sockets have no sockaddr,\nwhich results in EAFNOSUPPORT error from anyToSockaddr, making\nGo http servers running on Mac OS X easily susceptible to\ndenial of service from simple port scans with nmap.\nFixes issue 3849.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"mikioh.mikioh@gmail.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=0eae95b0307a ***\n\nsyscall: workaround accept() bug on Darwin\n\nDarwin kernels have a bug in accept() where error result from\nan internal call is not checked and socket is accepted instead\nof ECONNABORTED error. However, such sockets have no sockaddr,\nwhich results in EAFNOSUPPORT error from anyToSockaddr, making\nGo http servers running on Mac OS X easily susceptible to\ndenial of service from simple port scans with nmap.\nFixes issue 3849.\n\nR=golang-dev, adg, mikioh.mikioh\nCC=golang-dev\nhttp://codereview.appspot.com/6456045\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2012-07-29 23:02:43.652430",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "mikioh's comment did not get done. I will send it in as a separate CL.\r\n",
			"disapproval": false,
			"date": "2012-07-29 23:36:40.766180",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-07-26 17:57:20.848830",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6456045/diff/5001/src/pkg/syscall/syscall_bsd.go\nFile src/pkg/syscall/syscall_bsd.go (right):\n\nhttp://codereview.appspot.com/6456045/diff/5001/src/pkg/syscall/syscall_bsd.go#newcode306\nsrc/pkg/syscall/syscall_bsd.go:306: if len == 0 {\nAlso you could state that the bug depends on darwin explicitly like:\nconst darwin := runtime.GO == \"darwin\"\nif darwin && len == 0 {",
			"disapproval": false,
			"date": "2012-07-28 12:07:27.840390",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI'll leave it a couple of days before I submit in case anyone else wants to weigh in",
			"disapproval": false,
			"date": "2012-07-26 23:26:27.434670",
			"approval": true
		}
	],
	"owner_email": "snaury@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "snaury",
	"subject": "code review 6456045: syscall: workaround accept() bug on Darwin",
	"created": "2012-07-26 17:55:53.855640",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2012-07-30 20:21:39.188480",
	"closed": true,
	"issue": 6456045
}