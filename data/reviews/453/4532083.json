{
	"description": "godoc: javascript linkify keywords, packages, etc\n\nWORK IN PROGRESS.  proof of concept only.  map\nshould probably live elsewhere.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"adg@golang.org",
		"rsc@google.com",
		"bradfitz@google.com",
		"gri@golang.org",
		"dsymonds@golang.org"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"rsc@google.com",
				"bradfitz@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "The JS code looks good, but I feel like it could be a bit smarter, making it easier to expand later.\n\nFor example, you have \"init\" and \"init()\" as keywords, but with something like:\n\nvar FUNC = 0;\nvar KEYW = 1;\nvar TYPE = 2;\nvar links = [\n  [FUNC, \"append\", \"/doc/go_spec.html#Appending_and_copying_slices\"],\n  [KEYW, \"break\", \"/doc/go_spec.html#Break_statements\"],\n  [TYPE, \"complex128\": \"/doc/go_spec.html#Numeric_types\"],\n  etc\n]\n\nYou could build the linkMap programmatically and then this would pave the way to link foo inside larger code blocks, not just <code>foo</code>.",
			"disapproval": false,
			"date": "2011-05-25 00:03:35.610403",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> It's currently only exact matches inside <code> tags.\n\naha; that's a good signal.\n",
			"disapproval": false,
			"date": "2011-05-24 20:09:27.034588",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, May 24, 2011 at 12:35 PM, Russ Cox <rsc@google.com> wrote:\n> I like the idea.\n>\n> Godoc has a list of packages; probably it\n> should synthesize the list.\n\nLet's get this simple form in; I'm happy to have godoc generate a more\nelaborate table afterwards.\n- Robert\n\n>\n> Where did you find init() make() and new()?\n> Those are mistakes and should be fixed (s/()//).\n>\n> I don't think the links should be a mix of\n> spec and wiki. \u00a0They should all be to the spec.\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-05-24 20:35:29.479755",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello adg@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-05-24 19:25:47.955411",
			"approval": false
		},
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, May 24, 2011 at 12:35 PM, Russ Cox <rsc@google.com> wrote:\n\n> I like the idea.\n>\n> Godoc has a list of packages; probably it\n> should synthesize the list.\n>\n\nyes\n\n\n> Where did you find init() make() and new()?\n> Those are mistakes and should be fixed (s/()//).\n>\n\neffective go.  there are plenty of such mistakes or <code> omissions.\n\nI don't think the links should be a mix of\n> spec and wiki.  They should all be to the spec.\n>\n\nor both.  I have a UI idea that I think would be clean & not\noffensive/annoying, but my js/dom is rusty.  all spec works for now, though.\n\nI'm also not yet identifying tokens inside <pre> tags, etc.\n",
			"disapproval": false,
			"date": "2011-05-24 19:46:46.718158",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> I'm also not yet identifying tokens inside <pre> tags, etc.\n\nOh, I thought you were only identifying tokens inside pre tags.\nI am not sure we want every instance of every word to\nbe linked.  For example, words like continue and break have\nno business being linked in English text.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-05-24 19:52:55.995181",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 25 May 2011 10:41, Robert Griesemer <gri@golang.org> wrote:\n> Let's get a basic form working that is easy to expand.\n\nThat's what I'm suggesting.\n",
			"disapproval": false,
			"date": "2011-05-25 00:45:16.611355",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I like the idea.\n\nGodoc has a list of packages; probably it\nshould synthesize the list.\n\nWhere did you find init() make() and new()?\nThose are mistakes and should be fixed (s/()//).\n\nI don't think the links should be a mix of\nspec and wiki.  They should all be to the spec.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-05-24 19:36:03.746190",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, May 24, 2011 at 12:52 PM, Russ Cox <rsc@google.com> wrote:\n\n> > I'm also not yet identifying tokens inside <pre> tags, etc.\n>\n> Oh, I thought you were only identifying tokens inside pre tags.\n> I am not sure we want every instance of every word to\n> be linked.  For example, words like continue and break have\n> no business being linked in English text.\n\n\nIt's currently only exact matches inside <code> tags.\n\nSo <code>for</code> but not <code>for serious</code>.\n\nIt's a prototype at this point.  I suck at the JavaScript.  I agree we\nwouldn't want every \"for\" or \"go\" word linked everywhere in a <p> tag.\n",
			"disapproval": false,
			"date": "2011-05-24 20:01:02.810133",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": ">\u00a0I suck at the JavaScript.\n\ndoesn't everyone?\n",
			"disapproval": false,
			"date": "2011-05-24 20:09:51.590465",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Let's get a basic form working that is easy to expand.\n- Robert\n\nOn Tue, May 24, 2011 at 5:03 PM,  <adg@golang.org> wrote:\n> The JS code looks good, but I feel like it could be a bit smarter,\n> making it easier to expand later.\n>\n> For example, you have \"init\" and \"init()\" as keywords, but with\n> something like:\n>\n> var FUNC = 0;\n> var KEYW = 1;\n> var TYPE = 2;\n> var links = [\n> \u00a0[FUNC, \"append\", \"/doc/go_spec.html#Appending_and_copying_slices\"],\n> \u00a0[KEYW, \"break\", \"/doc/go_spec.html#Break_statements\"],\n> \u00a0[TYPE, \"complex128\": \"/doc/go_spec.html#Numeric_types\"],\n> \u00a0etc\n> ]\n>\n> You could build the linkMap programmatically and then this would pave\n> the way to link foo inside larger code blocks, not just\n> <code>foo</code>.\n>\n> http://codereview.appspot.com/4532083/\n>\n",
			"disapproval": false,
			"date": "2011-05-25 00:41:56.666152",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "It would be much easier for godoc to add the tags, with enough classes\nto do this much more accurately.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2011-05-25 00:06:46.371558",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, May 24, 2011 at 5:03 PM, <adg@golang.org> wrote:\n\n> The JS code looks good, but I feel like it could be a bit smarter,\n> making it easier to expand later.\n>\n\nYou might have missed the loud WORK IN PROGRESS in the CL description.  :-)\n\nIt's a hack and we all know it.  I'd like us to all talk about our dream\nponies at this stage & not discussion implementation which is relatively\nobvious & boring.\n",
			"disapproval": false,
			"date": "2011-05-25 00:44:52.461166",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 4532083: godoc: javascript linkify keywords, packages, etc",
	"created": "2011-05-24 19:25:13.516242",
	"patchsets": [
		1,
		1001,
		4001
	],
	"modified": "2011-10-06 18:22:11.277828",
	"closed": true,
	"issue": 4532083
}