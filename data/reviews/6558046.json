{
	"description": "pkg/go/ast: Avoid doing zero-length writes to the fd.\n\nAfter each line, ast.Print would do a zero-length write,\nwhich would hit the boundary condition on Plan 9 when\nreading over pipes (since message boundaries are\npreserved). This change makes sure we only do positive-\nlength writes.",
	"cc": [
		"rsc@golang.org",
		"rminnich@gmail.com",
		"dave@cheney.net",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/23 22:02:58, r wrote:\n> http://codereview.appspot.com/6558046/diff/9001/src/pkg/go/ast/print.go\n> File src/pkg/go/ast/print.go (right):\n> \n> http://codereview.appspot.com/6558046/diff/9001/src/pkg/go/ast/print.go#newcode111\n> src/pkg/go/ast/print.go:111: if len(data) > n {\n> it would be simpler to put\n> if len(data) == 0 {\n>   return\n> }\n> at the top\n\nIt's not necessary that len(data) = 0; we can have len(data) = n > 0\nwhen the data is being pushed out at the end of that loop, as is\nthe case when we do p.printf(\"\\n\") I believe.",
			"disapproval": false,
			"date": "2012-09-23 22:21:46.604430",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Sep 23, 2012 at 6:58 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> I assume you'll also fix the plan9 pkg os code to just work with 0-length\r\n> writes? That seems like the real problem.\r\n\r\nTrust me, you don't want to start this discussion.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-09-24 03:13:35.720060",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, rminnich@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-23 21:47:50.851750",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6558046/diff/4001/src/pkg/go/ast/print.go\nFile src/pkg/go/ast/print.go (right):\n\nhttp://codereview.appspot.com/6558046/diff/4001/src/pkg/go/ast/print.go#newcode112\nsrc/pkg/go/ast/print.go:112: if len(data)-n > 0 {\nif len(data) > n",
			"disapproval": false,
			"date": "2012-09-23 21:56:01.672250",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6558046/diff/4001/src/pkg/go/ast/print.go\nFile src/pkg/go/ast/print.go (right):\n\nhttp://codereview.appspot.com/6558046/diff/4001/src/pkg/go/ast/print.go#newcode111\nsrc/pkg/go/ast/print.go:111: // Avoid doing zero-length writes.\ndelete this comment. it's not an accurate summary of the code that follows - it's writing, not avoiding - and the avoidance of zero-length writes is self-evident.",
			"disapproval": false,
			"date": "2012-09-23 21:57:34.004850",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I assume you'll also fix the plan9 pkg os code to just work with 0-length\r\nwrites? That seems like the real problem.\r\nOn Sep 23, 2012 2:47 PM, <seed@mail.nanosouffle.net> wrote:\r\n\r\n> Reviewers: rsc, rminnich,\r\n>\r\n> Message:\r\n> Hello rsc@golang.org, rminnich@gmail.com (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> pkg/go/ast: Avoid doing zero-length writes to the fd.\r\n>\r\n> After each line, ast.Print would do a zero-length write,\r\n> which would hit the boundary condition on Plan 9 when\r\n> reading over pipes (since message boundaries are\r\n> preserved). This change makes sure we only do positive-\r\n> length writes.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6558046/<http://codereview.appspot.com/6558046/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/go/ast/print.go\r\n>\r\n>\r\n> Index: src/pkg/go/ast/print.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/go/ast/print.go\r\n> +++ b/src/pkg/go/ast/print.go\r\n> @@ -108,8 +108,11 @@\r\n>                 }\r\n>                 p.last = b\r\n>         }\r\n> -       m, err = p.output.Write(data[n:])\r\n> -       n += m\r\n> +       // Avoid doing zero-length writes.\r\n> +       if len(data)-n > 0 {\r\n> +               m, err = p.output.Write(data[n:])\r\n> +               n += m\r\n> +       }\r\n>         return\r\n>  }\r\n>\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-09-23 22:58:38.667500",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This CL sounds reasonable, but wouldn't output be buffered by something\r\nthat is coalescing writes?\r\nOn 24 Sep 2012 07:47, <seed@mail.nanosouffle.net> wrote:\r\n\r\n> Reviewers: rsc, rminnich,\r\n>\r\n> Message:\r\n> Hello rsc@golang.org, rminnich@gmail.com (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> pkg/go/ast: Avoid doing zero-length writes to the fd.\r\n>\r\n> After each line, ast.Print would do a zero-length write,\r\n> which would hit the boundary condition on Plan 9 when\r\n> reading over pipes (since message boundaries are\r\n> preserved). This change makes sure we only do positive-\r\n> length writes.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6558046/<http://codereview.appspot.com/6558046/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/go/ast/print.go\r\n>\r\n>\r\n> Index: src/pkg/go/ast/print.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/go/ast/print.go\r\n> +++ b/src/pkg/go/ast/print.go\r\n> @@ -108,8 +108,11 @@\r\n>                 }\r\n>                 p.last = b\r\n>         }\r\n> -       m, err = p.output.Write(data[n:])\r\n> -       n += m\r\n> +       // Avoid doing zero-length writes.\r\n> +       if len(data)-n > 0 {\r\n> +               m, err = p.output.Write(data[n:])\r\n> +               n += m\r\n> +       }\r\n>         return\r\n>  }\r\n>\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-09-23 21:50:30.191200",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nhttp://codereview.appspot.com/6558046/diff/4001/src/pkg/go/ast/print.go\nFile src/pkg/go/ast/print.go (right):\n\nhttp://codereview.appspot.com/6558046/diff/4001/src/pkg/go/ast/print.go#newcode111\nsrc/pkg/go/ast/print.go:111: // Avoid doing zero-length writes.\nOn 2012/09/23 21:57:34, r wrote:\n> delete this comment. it's not an accurate summary of the code that follows -\n> it's writing, not avoiding - and the avoidance of zero-length writes is\n> self-evident.\n\nDone.\n\nhttp://codereview.appspot.com/6558046/diff/4001/src/pkg/go/ast/print.go#newcode112\nsrc/pkg/go/ast/print.go:112: if len(data)-n > 0 {\nOn 2012/09/23 21:56:01, r wrote:\n> if len(data) > n\n\nDone.",
			"disapproval": false,
			"date": "2012-09-23 22:00:41.495860",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6558046/diff/9001/src/pkg/go/ast/print.go\nFile src/pkg/go/ast/print.go (right):\n\nhttp://codereview.appspot.com/6558046/diff/9001/src/pkg/go/ast/print.go#newcode111\nsrc/pkg/go/ast/print.go:111: if len(data) > n {\nit would be simpler to put\nif len(data) == 0 {\n  return\n}\nat the top",
			"disapproval": false,
			"date": "2012-09-23 22:02:58.488320",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-23 22:27:19.855270",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=6fdbfbfa8813 ***\n\npkg/go/ast: Avoid doing zero-length writes to the fd.\n\nAfter each line, ast.Print would do a zero-length write,\nwhich would hit the boundary condition on Plan 9 when\nreading over pipes (since message boundaries are\npreserved). This change makes sure we only do positive-\nlength writes.\n\nR=rsc, rminnich, dave, r\nCC=golang-dev\nhttp://codereview.appspot.com/6558046\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2012-09-23 22:30:54.062820",
			"approval": false
		}
	],
	"owner_email": "seed@mail.nanosouffle.net",
	"private": false,
	"base_url": "",
	"owner": "akumar",
	"subject": "code review 6558046: pkg/go/ast: Avoid doing zero-length writes to the fd.",
	"created": "2012-09-23 21:45:08.233960",
	"patchsets": [
		1,
		2001,
		4001,
		2003,
		9001
	],
	"modified": "2012-09-23 23:12:28.799140",
	"closed": true,
	"issue": 6558046
}