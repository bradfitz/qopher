{
	"description": "net/http: add missing error checking reading trailers\n\nThis is a simplified version of earlier versions of this CL\nand now only fixes obviously incorrect things, without\nchanging the locking on bodyEOFReader.\n\nI'd like to see if this is sufficient before changing the\nlocking.\n\nUpdate issue 4191",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-10-22 21:26:03.191560",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer.go\nFile src/pkg/net/http/transfer.go (right):\n\nhttps://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer.go#newcode544\nsrc/pkg/net/http/transfer.go:544: err = io.ErrUnexpectedEOF\nLooks like readTrailer already does this for you?\n\nhttps://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer.go#newcode603\nsrc/pkg/net/http/transfer.go:603: return err\nShould this look for EOF and use the same error as line 583?\n\nhttps://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer_test.go\nFile src/pkg/net/http/transfer_test.go (right):\n\nhttps://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer_test.go#newcode1\nsrc/pkg/net/http/transfer_test.go:1: package http\ncopyright",
			"disapproval": false,
			"date": "2012-11-01 16:28:36.061220",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-13 21:46:46.596740",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "[+dustin]\r\n\r\nDustin, could you test this latest version of the patch?  It's only half of\r\nthe previous one you were happy with.  This is missing the locking changes,\r\nbut I hope they're unnecessary.  I'm hoping the trailer reading checks are\r\nsufficient.\r\n\r\nAny LGTMs on this version alone also welcome.  This version stands alone,\r\neven if there's more to be done.\r\n\r\n\r\nOn Tue, Nov 13, 2012 at 1:47 PM, <bradfitz@golang.org> wrote:\r\n\r\n> PTAL\r\n>\r\n> I removed the locking changes and updated the CL description.\r\n>\r\n> I want to get this minimal safe CL in first, before any locking changes\r\n> are made.\r\n>\r\n>\r\n> https://codereview.appspot.**com/6739055/diff/3/src/pkg/**\r\n> net/http/transfer.go<https://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer.go>\r\n> File src/pkg/net/http/transfer.go (right):\r\n>\r\n> https://codereview.appspot.**com/6739055/diff/3/src/pkg/**\r\n> net/http/transfer.go#**newcode544<https://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer.go#newcode544>\r\n> src/pkg/net/http/transfer.go:**544: err = io.ErrUnexpectedEOF\r\n> On 2012/11/01 16:28:36, rsc wrote:\r\n>\r\n>> Looks like readTrailer already does this for you?\r\n>>\r\n>\r\n> Done.\r\n>\r\n> https://codereview.appspot.**com/6739055/diff/3/src/pkg/**\r\n> net/http/transfer.go#**newcode603<https://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer.go#newcode603>\r\n> src/pkg/net/http/transfer.go:**603: return err\r\n> On 2012/11/01 16:28:36, rsc wrote:\r\n>\r\n>> Should this look for EOF and use the same error as line 583?\r\n>>\r\n>\r\n> Done.\r\n>\r\n> https://codereview.appspot.**com/6739055/diff/3/src/pkg/**\r\n> net/http/transfer_test.go<https://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer_test.go>\r\n> File src/pkg/net/http/transfer_**test.go (right):\r\n>\r\n> https://codereview.appspot.**com/6739055/diff/3/src/pkg/**\r\n> net/http/transfer_test.go#**newcode1<https://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer_test.go#newcode1>\r\n> src/pkg/net/http/transfer_**test.go:1: package http\r\n> On 2012/11/01 16:28:36, rsc wrote:\r\n>\r\n>> copyright\r\n>>\r\n>\r\n> Done.\r\n>\r\n> https://codereview.appspot.**com/6739055/<https://codereview.appspot.com/6739055/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-14 05:11:47.882870",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Please fix the description\n\nUpdate issue 4191.",
			"disapproval": false,
			"date": "2012-11-14 05:31:22.351780",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nI removed the locking changes and updated the CL description.\n\nI want to get this minimal safe CL in first, before any locking changes are made.\n\nhttps://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer.go\nFile src/pkg/net/http/transfer.go (right):\n\nhttps://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer.go#newcode544\nsrc/pkg/net/http/transfer.go:544: err = io.ErrUnexpectedEOF\nOn 2012/11/01 16:28:36, rsc wrote:\n> Looks like readTrailer already does this for you?\n\nDone.\n\nhttps://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer.go#newcode603\nsrc/pkg/net/http/transfer.go:603: return err\nOn 2012/11/01 16:28:36, rsc wrote:\n> Should this look for EOF and use the same error as line 583?\n\nDone.\n\nhttps://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer_test.go\nFile src/pkg/net/http/transfer_test.go (right):\n\nhttps://codereview.appspot.com/6739055/diff/3/src/pkg/net/http/transfer_test.go#newcode1\nsrc/pkg/net/http/transfer_test.go:1: package http\nOn 2012/11/01 16:28:36, rsc wrote:\n> copyright\n\nDone.",
			"disapproval": false,
			"date": "2012-11-13 21:47:30.659790",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4d72f3689b54 ***\n\nnet/http: add missing error checking reading trailers\n\nThis is a simplified version of earlier versions of this CL\nand now only fixes obviously incorrect things, without\nchanging the locking on bodyEOFReader.\n\nI'd like to see if this is sufficient before changing the\nlocking.\n\nUpdate issue 4191\n\nR=golang-dev, rsc, dave\nCC=golang-dev\nhttp://codereview.appspot.com/6739055",
			"disapproval": false,
			"date": "2012-11-14 06:38:28.543520",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6739055: net/http: add missing error checking reading trailers",
	"created": "2012-10-22 21:25:35.191290",
	"patchsets": [
		1,
		2001,
		3,
		10001,
		14001
	],
	"modified": "2012-11-15 19:26:27.165670",
	"closed": true,
	"issue": 6739055
}