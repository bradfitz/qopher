{
	"description": "goauth2: add exchange and refresh tests",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/goauth2",
			"disapproval": false,
			"date": "2012-10-30 15:34:45.148700",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go\nFile oauth/oauth_test.go (right):\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go#newcode56\noauth/oauth_test.go:56: \"\",\nOn 2012/10/30 16:03:07, bradfitz wrote:\n> would prefer both this be omitted and the other fields named.\n\nDone.\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go#newcode92\noauth/oauth_test.go:92: server := httptest.NewServer(http.HandlerFunc(handler))\nOn 2012/10/30 16:03:07, bradfitz wrote:\n> defer server.Close() after\n\nDone.\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go#newcode128\noauth/oauth_test.go:128: func checkToken(t *testing.T, tok *Token, access, refresh string) {\nOn 2012/10/30 16:03:07, bradfitz wrote:\n> wantAccess, wantRefresh string ?\n\nI prefer them as-is.\n\n> also, this test helper relies on wantAccess and wantRefresh being unique enough\n> to identify the failing position.\n> \n> that's currently the case (\"token1\" vs \"token2\", etc), but in general I like\n> test helpers taking a \"what\" string.\n> \n> I wish test helpers had a mechanism to override the reported line number to be\n> the caller's.  Tangent.\n> \n> This is fine.\n\nAgree, but I think this is ok. If it gets more elaborate i'll report the specific test in the messages.\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go#newcode141\noauth/oauth_test.go:141: func checkBody(t *testing.T, r *http.Response, contentType, body string) {\nOn 2012/10/30 16:03:07, bradfitz wrote:\n> wantContentType, wantBody ?\nnah\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go#newcode144\noauth/oauth_test.go:144: t.Error(\"reading reponse body: %v\", err)\nOn 2012/10/30 16:03:07, bradfitz wrote:\n> which response body?  this will just show this line number.  at least print the\n> expected body here.\n\nDone.",
			"disapproval": false,
			"date": "2012-10-30 16:22:53.594890",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go\nFile oauth/oauth_test.go (right):\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go#newcode56\noauth/oauth_test.go:56: \"\",\nwould prefer both this be omitted and the other fields named.\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go#newcode92\noauth/oauth_test.go:92: server := httptest.NewServer(http.HandlerFunc(handler))\ndefer server.Close() after\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go#newcode128\noauth/oauth_test.go:128: func checkToken(t *testing.T, tok *Token, access, refresh string) {\nwantAccess, wantRefresh string ?\n\nalso, this test helper relies on wantAccess and wantRefresh being unique enough to identify the failing position.\n\nthat's currently the case (\"token1\" vs \"token2\", etc), but in general I like test helpers taking a \"what\" string.\n\nI wish test helpers had a mechanism to override the reported line number to be the caller's.  Tangent.\n\nThis is fine.\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go#newcode141\noauth/oauth_test.go:141: func checkBody(t *testing.T, r *http.Response, contentType, body string) {\nwantContentType, wantBody ?\n\nhttps://codereview.appspot.com/6775078/diff/1/oauth/oauth_test.go#newcode144\noauth/oauth_test.go:144: t.Error(\"reading reponse body: %v\", err)\nwhich response body?  this will just show this line number.  at least print the expected body here.",
			"disapproval": false,
			"date": "2012-10-30 16:03:06.977840",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/goauth2/source/detail?r=f77b3584c59b ***\n\ngoauth2: add exchange and refresh tests\n\nR=bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6775078",
			"disapproval": false,
			"date": "2012-11-01 17:05:52.069550",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 6775078: goauth2: add exchange and refresh tests",
	"created": "2012-10-30 15:34:42.234950",
	"patchsets": [
		1,
		4001,
		3
	],
	"modified": "2012-11-01 17:05:53.550440",
	"closed": true,
	"issue": 6775078
}