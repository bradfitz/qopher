{
	"description": "image/jpeg: don't call ensureNBits unless we have to.\n\nbenchmark                     old ns/op    new ns/op    delta\nBenchmarkDecodeBaseline         3155638      2783998  -11.78%\nBenchmarkDecodeProgressive      4008088      3660310   -8.68%",
	"cc": [
		"r@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=e489928c34ef ***\n\nimage/jpeg: don't call ensureNBits unless we have to.\n\nbenchmark                     old ns/op    new ns/op    delta\nBenchmarkDecodeBaseline         3155638      2783998  -11.78%\nBenchmarkDecodeProgressive      4008088      3660310   -8.68%\n\nR=r, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6775072",
			"disapproval": false,
			"date": "2012-10-30 23:02:35.309690",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Nice!\r\nOn Oct 30, 2012 1:38 AM, <nigeltao@golang.org> wrote:\r\n\r\n> Reviewers: r,\r\n>\r\n> Message:\r\n> Hello r@golang.org (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> image/jpeg: don't call ensureNBits unless we have to.\r\n>\r\n> benchmark                     old ns/op    new ns/op    delta\r\n> BenchmarkDecodeBaseline         3155638      2783998  -11.78%\r\n> BenchmarkDecodeProgressive      4008088      3660310   -8.68%\r\n>\r\n> Please review this at http://codereview.appspot.com/**6775072/<http://codereview.appspot.com/6775072/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/image/jpeg/huffman.go\r\n>\r\n>\r\n> Index: src/pkg/image/jpeg/huffman.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/image/jpeg/huffman.**go\r\n> +++ b/src/pkg/image/jpeg/huffman.**go\r\n> @@ -62,9 +62,10 @@\r\n>\r\n>  // The composition of RECEIVE and EXTEND, specified in section F.2.2.1.\r\n>  func (d *decoder) receiveExtend(t uint8) (int32, error) {\r\n> -       err := d.ensureNBits(int(t))\r\n> -       if err != nil {\r\n> -               return 0, err\r\n> +       if d.b.n < int(t) {\r\n> +               if err := d.ensureNBits(int(t)); err != nil {\r\n> +                       return 0, err\r\n> +               }\r\n>         }\r\n>         d.b.n -= int(t)\r\n>         d.b.m >>= t\r\n> @@ -168,9 +169,10 @@\r\n>                 return 0, FormatError(\"uninitialized Huffman table\")\r\n>         }\r\n>         for i, code := 0, 0; i < maxCodeLength; i++ {\r\n> -               err := d.ensureNBits(1)\r\n> -               if err != nil {\r\n> -                       return 0, err\r\n> +               if d.b.n == 0 {\r\n> +                       if err := d.ensureNBits(1); err != nil {\r\n> +                               return 0, err\r\n> +                       }\r\n>                 }\r\n>                 if d.b.a&d.b.m != 0 {\r\n>                         code |= 1\r\n> @@ -187,8 +189,7 @@\r\n>\r\n>  func (d *decoder) decodeBit() (bool, error) {\r\n>         if d.b.n == 0 {\r\n> -               err := d.ensureNBits(1)\r\n> -               if err != nil {\r\n> +               if err := d.ensureNBits(1); err != nil {\r\n>                         return false, err\r\n>                 }\r\n>         }\r\n> @@ -199,9 +200,10 @@\r\n>  }\r\n>\r\n>  func (d *decoder) decodeBits(n int) (uint32, error) {\r\n> -       err := d.ensureNBits(n)\r\n> -       if err != nil {\r\n> -               return 0, err\r\n> +       if d.b.n < n {\r\n> +               if err := d.ensureNBits(n); err != nil {\r\n> +                       return 0, err\r\n> +               }\r\n>         }\r\n>         ret := d.b.a >> uint(d.b.n-n)\r\n>         ret &= (1 << uint(n)) - 1\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-30 08:58:09.036230",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-10-30 00:38:10.961580",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-10-30 15:25:33.984020",
			"approval": true
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6775072: image/jpeg: don't call ensureNBits unless we have to.",
	"created": "2012-10-30 00:37:52.602530",
	"patchsets": [
		1,
		2001,
		5001,
		5003
	],
	"modified": "2012-10-30 23:02:37.080330",
	"closed": true,
	"issue": 6775072
}