{
	"description": "io: Pipes and ReadAt are safe to use concurrently.\n\nUpdates issue 1599.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"rsc@golang.org",
		"r@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-02-29 02:38:06.027685",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n On Feb 29, 2012 1:38 PM, <r@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go/\n>\n>\n> Description:\n> io: Pipes are safe to use concurrently.\n>\n> Updates issue 1599.\n>\n> Please review this at http://codereview.appspot.com/**5708056/<http://codereview.appspot.com/5708056/>\n>\n> Affected files:\n>  M src/pkg/io/pipe.go\n>\n>\n> Index: src/pkg/io/pipe.go\n> ==============================**==============================**=======\n> --- a/src/pkg/io/pipe.go\n> +++ b/src/pkg/io/pipe.go\n> @@ -175,6 +175,10 @@\n>  // with code expecting an io.Writer.\n>  // Reads on one end are matched with writes on the other,\n>  // copying data directly between the two; there is no internal buffering.\n> +// It is safe to call Read and Write in parallel with each other or with\n> +// Close. Close will complete once pending I/O is done. Parallel calls to\n> +// Read, and parallel calls to Write, are also safe:\n> +// the invidual calls will be gated sequentially.\n>  func Pipe() (*PipeReader, *PipeWriter) {\n>        p := new(pipe)\n>        p.rwait.L = &p.l\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-29 02:43:29.935445",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Want to include io.ReaderAt in this CL too? It says as such now,\nimplicitly, but consistent wording would be nice considering the new\nwarning at top.\n On Feb 29, 2012 1:38 PM, <r@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go/\n>\n>\n> Description:\n> io: Pipes are safe to use concurrently.\n>\n> Updates issue 1599.\n>\n> Please review this at http://codereview.appspot.com/**5708056/<http://codereview.appspot.com/5708056/>\n>\n> Affected files:\n>  M src/pkg/io/pipe.go\n>\n>\n> Index: src/pkg/io/pipe.go\n> ==============================**==============================**=======\n> --- a/src/pkg/io/pipe.go\n> +++ b/src/pkg/io/pipe.go\n> @@ -175,6 +175,10 @@\n>  // with code expecting an io.Writer.\n>  // Reads on one end are matched with writes on the other,\n>  // copying data directly between the two; there is no internal buffering.\n> +// It is safe to call Read and Write in parallel with each other or with\n> +// Close. Close will complete once pending I/O is done. Parallel calls to\n> +// Read, and parallel calls to Write, are also safe:\n> +// the invidual calls will be gated sequentially.\n>  func Pipe() (*PipeReader, *PipeWriter) {\n>        p := new(pipe)\n>        p.rwait.L = &p.l\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-29 02:43:29.487064",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-29 08:54:58.577984",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-29 03:08:00.461778",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5708056/diff/2002/src/pkg/io/io.go\nFile src/pkg/io/io.go (right):\n\nhttp://codereview.appspot.com/5708056/diff/2002/src/pkg/io/io.go#newcode164\nsrc/pkg/io/io.go:164: // Clients of ReadAt should be able to execute parallel ReadAt\ns/of ReadAt should be able to/can/",
			"disapproval": false,
			"date": "2012-02-29 16:36:37.050189",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Mar 1, 2012, at 3:36 AM, rsc@golang.org wrote:\n\n> LGTM\n> \n> \n> \n> http://codereview.appspot.com/5708056/diff/2002/src/pkg/io/io.go\n> File src/pkg/io/io.go (right):\n> \n> http://codereview.appspot.com/5708056/diff/2002/src/pkg/io/io.go#newcode164\n> src/pkg/io/io.go:164: // Clients of ReadAt should be able to execute\n> parallel ReadAt\n> s/of ReadAt should be able to/can/\n\nok, although the 'should' was really directed at the implementers rather than the users.\n\n\n",
			"disapproval": false,
			"date": "2012-03-01 00:23:47.933792",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=c8afb6fb97a0 ***\n\nio: Pipes and ReadAt are safe to use concurrently.\n\nUpdates issue 1599.\n\nR=golang-dev, bradfitz, rsc, r\nCC=golang-dev\nhttp://codereview.appspot.com/5708056",
			"disapproval": false,
			"date": "2012-03-01 00:24:19.691486",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5708056: io: Pipes and ReadAt are safe to use concurrently.",
	"created": "2012-02-29 02:37:57.862574",
	"patchsets": [
		1,
		3001,
		2002,
		7001
	],
	"modified": "2012-03-01 00:24:21.924512",
	"closed": true,
	"issue": 5708056
}