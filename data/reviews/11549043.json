{
	"description": "spec: clarify a couple of issues about channels\n\n1. They are FIFOs.\n2. They are safe for concurrent access.\n\nFixes issue 5911.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dvyukov@google.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-18 22:16:35.206760",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11549043/diff/1/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/11549043/diff/1/doc/go_spec.html#newcode4130\ndoc/go_spec.html:4130: Channels act as first-in-first-out queues: if a single goroutine sends on a channel values\nWhy is this in the \"Send statements\" section? I would expect it to be in \"Channel types\".\n\nhttps://codereview.appspot.com/11549043/diff/1/doc/go_spec.html#newcode4135\ndoc/go_spec.html:4135: A single channel may be used for send and receive\nthis should also include close/cap/len",
			"disapproval": false,
			"date": "2013-07-19 12:09:14.290340",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11549043/diff/1/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/11549043/diff/1/doc/go_spec.html#newcode4130\ndoc/go_spec.html:4130: Channels act as first-in-first-out queues: if a single goroutine sends on a channel values\nOn 2013/07/19 12:09:14, dvyukov wrote:\n> Why is this in the \"Send statements\" section? I would expect it to be in\n> \"Channel types\".\n\nIt's not a property of the types, it's a property of operations on the types. A somewhat artificial distinction I admit but I started by trying to put the text there and it just didn't feel right, so I put it here.\n\nhttps://codereview.appspot.com/11549043/diff/1/doc/go_spec.html#newcode4135\ndoc/go_spec.html:4135: A single channel may be used for send and receive\nOn 2013/07/19 12:09:14, dvyukov wrote:\n> this should also include close/cap/len\n\nDone.",
			"disapproval": false,
			"date": "2013-07-22 11:44:43.054700",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dvyukov@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-22 11:45:33.091700",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/11549043/diff/7001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/11549043/diff/7001/doc/go_spec.html#newcode4131\ndoc/go_spec.html:4131: that are received by a single goroutine, the values are received in the order sent.\nJust want to make sure that the \"if a single goroutine sends...\" part is meant only as an example of FIFO. Because it's possible to observe and rely on FIFO in scenarios with multiple senders and receivers as well. Readers must understand that FIFO guarantees are not limited to \"single sender goroutine\" case.",
			"disapproval": false,
			"date": "2013-07-23 08:50:37.550340",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "That's what I mean and what I believe it says. Anyone else?",
			"disapproval": false,
			"date": "2013-07-25 06:23:09.486710",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11549043/diff/7001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/11549043/diff/7001/doc/go_spec.html#newcode4130\ndoc/go_spec.html:4130: Channels act as first-in-first-out queues: if a single goroutine sends on a channel values\nI would split.\n\n...queues. For example, if a single...\n\nhttps://codereview.appspot.com/11549043/diff/7001/doc/go_spec.html#newcode4139\ndoc/go_spec.html:4139: by any number of goroutines without further synchronization.\nhow about\n\n\"by concurrently executing goroutines\" ?",
			"disapproval": false,
			"date": "2013-07-25 06:29:40.196010",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11549043/diff/7001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/11549043/diff/7001/doc/go_spec.html#newcode4130\ndoc/go_spec.html:4130: Channels act as first-in-first-out queues: if a single goroutine sends on a channel values\nOn 2013/07/25 06:29:40, adg wrote:\n> I would split.\n> \n> ...queues. For example, if a single...\n\nDone.\n\nhttps://codereview.appspot.com/11549043/diff/7001/doc/go_spec.html#newcode4131\ndoc/go_spec.html:4131: that are received by a single goroutine, the values are received in the order sent.\nOn 2013/07/23 08:50:37, dvyukov wrote:\n> Just want to make sure that the \"if a single goroutine sends...\" part is meant\n> only as an example of FIFO. Because it's possible to observe and rely on FIFO in\n> scenarios with multiple senders and receivers as well. Readers must understand\n> that FIFO guarantees are not limited to \"single sender goroutine\" case.\n\nDone.\n\nhttps://codereview.appspot.com/11549043/diff/7001/doc/go_spec.html#newcode4139\ndoc/go_spec.html:4139: by any number of goroutines without further synchronization.\nOn 2013/07/25 06:29:40, adg wrote:\n> how about\n> \n> \"by concurrently executing goroutines\" ?\n\nthat's redundant.",
			"disapproval": false,
			"date": "2013-07-25 12:04:56.851710",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dvyukov@google.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-25 12:05:16.377940",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=43f967f62292 ***\n\nspec: clarify a couple of issues about channels\n\n1. They are FIFOs.\n2. They are safe for concurrent access.\n\nFixes issue 5911.\n\nR=golang-dev, dvyukov, adg\nCC=golang-dev\nhttps://codereview.appspot.com/11549043",
			"disapproval": false,
			"date": "2013-07-31 21:12:43.719950",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 11549043: spec: clarify a couple of issues about channels",
	"created": "2013-07-18 22:15:52.423300",
	"patchsets": [
		1,
		7001,
		16001,
		21001,
		24001
	],
	"modified": "2013-07-31 21:12:46.372070",
	"closed": true,
	"issue": 11549043
}