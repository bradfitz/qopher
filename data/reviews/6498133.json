{
	"description": "cmd/gc: fix double evaluation in interface comparison\n\nDuring interface compare, the operands will be evaluated twice. The operands might include function calls for conversion, so make them cheap before comparing them.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"daniel.morsing@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks good, and ouch, but can you add a test please? I don't want this creeping back in later.",
			"disapproval": false,
			"date": "2012-09-17 21:16:19.156210",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-09-14 18:03:11.602190",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"daniel.morsing@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/17 21:16:19, rsc wrote:\n> Looks good, and ouch, but can you add a test please? I don't want this creeping\n> back in later.\n\nI've yet to find a case where the double evaluation actually changes the state of the program, so that I can test it. Only symptom I've found so far is calling the idempotent convT2[EI] functions twice.\n\nI'll take a closer look at this later today and see if I can find a proper testable case. If anyone got any ideas, please chime in.",
			"disapproval": false,
			"date": "2012-09-18 06:22:39.357250",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nI see. It's not fixing a bug, because the side effects have already\r\nbeen removed. It is just removing things like redundant map lookups.\r\n",
			"disapproval": false,
			"date": "2012-09-18 14:35:29.506850",
			"approval": true
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"daniel.morsing@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ac57e49ab58b ***\n\ncmd/gc: fix double evaluation in interface comparison\n\nDuring interface compare, the operands will be evaluated twice. The operands might include function calls for conversion, so make them cheap before comparing them.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6498133",
			"disapproval": false,
			"date": "2012-09-18 15:40:59.501870",
			"approval": false
		}
	],
	"owner_email": "daniel.morsing@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "DMorsing",
	"subject": "code review 6498133: cmd/gc: fix double evaluation in interface comparison",
	"created": "2012-09-14 18:01:58.362670",
	"patchsets": [
		1,
		2001,
		5001,
		10001
	],
	"modified": "2012-09-18 15:41:01.073430",
	"closed": true,
	"issue": 6498133
}