{
	"description": "image/draw: add Drawer, FloydSteinberg and the op.Draw method.",
	"cc": [
		"r@golang.org",
		"andybons@chromium.org",
		"andybons@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\r\n\r\nFloydSteinberg now applies to any draw.Image, not just an\r\n*image.Paletted. NaiveQuantizer was removed; use the Src Op instead.\r\nThe Quantizer interface was renamed Drawer, and now takes an arbitrary\r\ndraw.Image as a dst, not just *image.Paletted. The Quantizer name is\r\nnow free to use for the thing that derives a color.Palette from a\r\ncolor.Image. That'll be a follow-up CL.\r\n\r\nI've attached a couple more images, from ye olde CGA palette of my youth.\r\n",
			"disapproval": false,
			"date": "2013-07-09 23:33:01.613100",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybons@chromium.org",
				"andybons@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-10 03:10:43.418860",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybons@chromium.org",
				"andybons@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ddb4f9feee8b ***\n\nimage/draw: add Drawer, FloydSteinberg and the op.Draw method.\n\nR=r, andybons\nCC=andybons, golang-dev\nhttps://codereview.appspot.com/10977043",
			"disapproval": false,
			"date": "2013-07-10 22:47:44.587040",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "With https://codereview.appspot.com/10890045/ and the source image at\r\nhttp://blog.golang.org/go-at-google-io-2011-videos_gopher.jpg the\r\nprogram below produces the attached paletted PNG images.\r\n\r\n--------\r\npackage main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"image\"\r\n    \"image/color\"\r\n    \"image/draw\"\r\n    \"image/jpeg\"\r\n    \"image/png\"\r\n    \"log\"\r\n    \"os\"\r\n)\r\n\r\nfunc main() {\r\n    f, err := os.Open(\"gopher.jpeg\")\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n    defer f.Close()\r\n    src, err := jpeg.Decode(f)\r\n    if err != nil {\r\n        log.Fatal(err)\r\n    }\r\n\r\n    palettes := map[string]color.Palette{\r\n        \"bw\":      color.Palette{color.Black, color.White},\r\n        \"plan9\":   color.Plan9Palette,\r\n        \"websafe\": color.WebSafePalette,\r\n    }\r\n    quantizers := map[string]draw.Quantizer{\r\n        \"naive\": draw.NaiveQuantizer,\r\n        \"floyd\": draw.FloydSteinberg,\r\n    }\r\n    for pName, p := range palettes {\r\n        for qName, q := range quantizers {\r\n            filename := fmt.Sprintf(\"out-%s-%s.png\", pName, qName)\r\n            fmt.Printf(\"Making %s\\n\", filename)\r\n            dst := image.NewPaletted(src.Bounds(), p)\r\n            q.Quantize(dst, dst.Bounds(), src, image.ZP)\r\n            g, err := os.Create(filename)\r\n            if err != nil {\r\n                log.Fatal(err)\r\n            }\r\n            defer g.Close()\r\n            err = png.Encode(g, dst)\r\n            if err != nil {\r\n                log.Fatal(err)\r\n            }\r\n        }\r\n    }\r\n}\r\n--------\r\n",
			"disapproval": false,
			"date": "2013-07-07 12:41:14.817980",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybons@chromium.org",
				"andybons@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go\nFile src/pkg/image/draw/quantize.go (right):\n\nhttps://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go#newcode16\nsrc/pkg/image/draw/quantize.go:16: Quantize(dst *image.Paletted, r image.Rectangle, src image.Image, sp image.Point)\nif you made the dst an image.Image, this is a more general convert operation. i'm not convinced (nor am i unconvinced) that we want to define this narrow interface",
			"disapproval": false,
			"date": "2013-07-08 01:52:23.426560",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybons@chromium.org",
				"andybons@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go\nFile src/pkg/image/draw/quantize.go (right):\n\nhttps://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go#newcode16\nsrc/pkg/image/draw/quantize.go:16: Quantize(dst *image.Paletted, r image.Rectangle, src image.Image, sp image.Point)\nfloyd-steinberg makes sense for any image type, and is genuinely useful on low-pixel-depth grayscale images.\n\nhttps://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go#newcode78\nsrc/pkg/image/draw/quantize.go:78: bestIndex, bestSSD := 0, uint32(1<<32-1)\njust put in a TODO to consider smarter algorithms.",
			"disapproval": false,
			"date": "2013-07-08 03:10:22.628730",
			"approval": false
		},
		{
			"sender": "andybons@chromium.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybons@chromium.org",
				"andybons@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go\nFile src/pkg/image/draw/quantize.go (right):\n\nhttps://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go#newcode1\nsrc/pkg/image/draw/quantize.go:1: // Copyright 2013 The Go Authors.  All rights reserved.\nNit: Some source files have one space after the period. Some have two.",
			"disapproval": false,
			"date": "2013-07-07 20:15:26.070720",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybons@chromium.org",
				"andybons@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go\nFile src/pkg/image/draw/quantize.go (right):\n\nhttps://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go#newcode16\nsrc/pkg/image/draw/quantize.go:16: Quantize(dst *image.Paletted, r image.Rectangle, src image.Image, sp image.Point)\nOn 2013/07/08 01:52:23, r wrote:\n> if you made the dst an image.Image, this is a more general convert operation.\n> i'm not convinced (nor am i unconvinced) that we want to define this narrow\n> interface\n\nThat would be more general in a sense, but the Palette information is then implicit rather than explicit. I suppose this could instead be\n\ntype Drawer interface {\n  Draw(dst Image, r image.Rectangle, src image.Image, sp image.Point)\n}\n\nand Floyd-Steinberg had a fast-path if dst was an *image.Paletted. Does it make sense to apply Floyd-Steinberg to an *image.Gray dst?? Hmm...\n\nhttps://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go#newcode78\nsrc/pkg/image/draw/quantize.go:78: bestIndex, bestSSD := 0, uint32(1<<32-1)\nOn 2013/07/08 01:51:25, r wrote:\n> this is fine but it can be done more efficiently. you have a 32-bit color value\n> but the RGB in the palette is only 8 bits, which suggests some clever options.\n> caching can also help, but you need to watch out for bloat (again, remember the\n> 8 bit rule).\n\nI'm curious what optimizations you had in mind (what's the 8-bit rule?). I guess you could cache recent dst colors keyed by (er, eg, eb) although with Floyd-Steinberg I wouldn't expect many cache hits.\n\nAlso, in theory, the colors in a color.Palette aren't restricted to 8 bits; they could be color.RGBA64 values. In package color, it's\ntype Palette []Color\nand not\ntype Palette []RGBA",
			"disapproval": false,
			"date": "2013-07-08 03:06:38.866530",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybons@chromium.org",
				"andybons@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go\nFile src/pkg/image/draw/quantize.go (right):\n\nhttps://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go#newcode78\nsrc/pkg/image/draw/quantize.go:78: bestIndex, bestSSD := 0, uint32(1<<32-1)\nthis is fine but it can be done more efficiently. you have a 32-bit color value but the RGB in the palette is only 8 bits, which suggests some clever options. caching can also help, but you need to watch out for bloat (again, remember the 8 bit rule).\nmaybe just a TODO for now.\n\nhttps://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize.go#newcode81\nsrc/pkg/image/draw/quantize.go:81: ssd := delta * delta\nif you're going to square it, why do you need a signed diff?\n\nhttps://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize_test.go\nFile src/pkg/image/draw/quantize_test.go (right):\n\nhttps://codereview.appspot.com/10977043/diff/6001/src/pkg/image/draw/quantize_test.go#newcode31\nsrc/pkg/image/draw/quantize_test.go:31: return\n-s/Error/Fatal/\nd",
			"disapproval": false,
			"date": "2013-07-08 01:51:25.619190",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybons@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: andybons@gmail.com, golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-07-07 12:34:22.761730",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 10977043: image/draw: add Quantizer, NaiveQuantizer and FloydStei...",
	"created": "2013-07-07 12:32:23.957650",
	"patchsets": [
		1,
		3001,
		6001,
		15001,
		19001,
		24001
	],
	"modified": "2013-07-10 22:47:50.663900",
	"closed": true,
	"issue": 10977043
}