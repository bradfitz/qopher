{
	"description": "time: find correct zone abbreviations even on non-English windows systems\n\nFixes issue 5783",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-07-09 02:58:15.875850",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Windows is a wonder.\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go\nFile src/pkg/time/zoneinfo_windows.go (right):\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode21\nsrc/pkg/time/zoneinfo_windows.go:21: // getKeyValue retrieves string value kname associated with an open registry key kh.\ns/string/the string/\ns/an/the/\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode23\nsrc/pkg/time/zoneinfo_windows.go:23: var buf [200]uint16\nwhere does 200 come from? (seems kinda big in any case)\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode25\nsrc/pkg/time/zoneinfo_windows.go:25: n := uint32(len(buf) * 2) // api expects array of bytes, not uint16\ns/api/RegQueryValueEx's signature/\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode36\nsrc/pkg/time/zoneinfo_windows.go:36: // matchZoneKey checks if stdname and dstname matches correspondent \"Std\"\n// matchZoneKey checks if stdname and dstname match the corresponding \"Std\"\n// and \"Dlt\" key values in the kname key stored under the open registry key zones.\n\nare they really spelled \"Std\" and \"Dlt\"\n\n\nbut: i don't understand how a key value in a key can be stored under a key. there are too many keys involved. the registry is stranger than i thought or the comment could be clarified. maybe both.\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode63\nsrc/pkg/time/zoneinfo_windows.go:63: // toEnglishName searches registry for English name of timezone with\n// toEnglishName searches the registry for an English name of a time zone whose\n// zone names are stdname and dstname and returns the English name.\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode90\nsrc/pkg/time/zoneinfo_windows.go:90: return \"\", errors.New(`English name for \"` + stdname + `\" is not found`)\nmaybe\n\nreturn \"\", errors.New(`English name for time zone \"` + stdname + `\" not found in registry`)\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode110\nsrc/pkg/time/zoneinfo_windows.go:110: // prehaps stdName is non-English, try to convert it\n// Perhaps stdName is not English. Try to convert it.",
			"disapproval": false,
			"date": "2013-07-09 03:27:32.740910",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I realize I just wrote \"Windows is\" without flinching.\r\n",
			"disapproval": false,
			"date": "2013-07-09 03:28:24.386350",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Windows is a wonder.\n\nNo argument. Especially this time zones part is bad.\n\nBut it grows on you :-) Nothing is perfect.\n\nAlex\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go\nFile src/pkg/time/zoneinfo_windows.go (right):\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode21\nsrc/pkg/time/zoneinfo_windows.go:21: // getKeyValue retrieves string value kname associated with an open registry key kh.\nOn 2013/07/09 03:27:32, r wrote:\n> s/string/the string/\n> s/an/the/\n\nDone.\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode23\nsrc/pkg/time/zoneinfo_windows.go:23: var buf [200]uint16\nOn 2013/07/09 03:27:32, r wrote:\n> where does 200 come from?\n\nThis needs to be large enough to fit zone descriptions. I have collected all posible candidates in zoneinfo_abbrs_windows.go. But, as I discovered later, these could at least be in non-English too.\n\n> (seems kinda big in any case)\n\nI agree. Changed to 50. I have also changed similar array in toEnglishName\n to 50 too.\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode25\nsrc/pkg/time/zoneinfo_windows.go:25: n := uint32(len(buf) * 2) // api expects array of bytes, not uint16\nOn 2013/07/09 03:27:32, r wrote:\n> s/api/RegQueryValueEx's signature/\n\nDone.\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode36\nsrc/pkg/time/zoneinfo_windows.go:36: // matchZoneKey checks if stdname and dstname matches correspondent \"Std\"\nOn 2013/07/09 03:27:32, r wrote:\n> // matchZoneKey checks if stdname and dstname match the corresponding \"Std\"\n> // and \"Dlt\" key values in the kname key stored under the open registry key\n> zones.\n\nDone.\n\n> \n> are they really spelled \"Std\" and \"Dlt\"\n\nYes. This is an example of a key with its values:\n\n[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\\Alaskan Standard Time]\n\"MUI_Display\"=\"@tzres.dll,-220\"\n\"MUI_Dlt\"=\"@tzres.dll,-221\"\n\"MUI_Std\"=\"@tzres.dll,-222\"\n\"Display\"=\"(UTC-09:00) Alaska\"\n\"Dlt\"=\"Alaska (czas letni)\"\n\"Std\"=\"Alaska (czas standardowy)\"\n\"TZI\"=hex:1c,02,00,00,00,00,00,00,c4,ff,ff,ff,00,00,0b,00,00,00,01,00,02,00,00,\\\n  00,00,00,00,00,00,00,03,00,00,00,02,00,02,00,00,00,00,00,00,00\n\n> \n> but: i don't understand how a key value in a key can be stored under a key.\n> there are too many keys involved. the registry is stranger than i thought or the\n> comment could be clarified. maybe both.\n\nI am sure it is me. Registry keys are similar to directories - they can contain other keys (like directories) and values (like files). You need to \"open\" keys before you can interrogate them - enumerate keys inside or read / write values. All \"open\" operations require an already \"opened\" key - this key will be used as a root in the open operation. For example, to have access to [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\\Alaskan Standard Time], you would provide handle to (already opened) HKEY_LOCAL_MACHINE and a key name \"SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\\Alaskan Standard Time\", alternatively you could provide a handle to (already opened) \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\" key and a key name \"Alaskan Standard Time\". Some Windows root key opened handles are just fixed numbers (just like stdin and stdout), for example HKEY_LOCAL_MACHINE and HKEY_CURRENT_USER an some others.\n\nMy matchZoneKey function here takes handle to already opened key \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\" and a key name (for example \"Alaskan Standard Time\") and checks to see if the key (\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones\\Alaskan Standard Time\") has values named \"Std\" and Dlt\" and these values match provided stdname and dstname parameters. If you have better way to document that, I am happy to use it.\n\nThis is a second place in Go library where we use registry access, the other one is mime. Do you think it is worth creating some common \"handle windows registry\" api in syscall to simplify code here?\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode63\nsrc/pkg/time/zoneinfo_windows.go:63: // toEnglishName searches registry for English name of timezone with\nOn 2013/07/09 03:27:32, r wrote:\n> // toEnglishName searches the registry for an English name of a time zone whose\n> // zone names are stdname and dstname and returns the English name.\n\nDone.\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode90\nsrc/pkg/time/zoneinfo_windows.go:90: return \"\", errors.New(`English name for \"` + stdname + `\" is not found`)\nOn 2013/07/09 03:27:32, r wrote:\n> maybe\n> \n> return \"\", errors.New(`English name for time zone \"` + stdname + `\" not found in\n> registry`)\n\nDone.\n\nhttps://codereview.appspot.com/10956043/diff/5001/src/pkg/time/zoneinfo_windows.go#newcode110\nsrc/pkg/time/zoneinfo_windows.go:110: // prehaps stdName is non-English, try to convert it\nOn 2013/07/09 03:27:32, r wrote:\n> // Perhaps stdName is not English. Try to convert it.\n\nDone.",
			"disapproval": false,
			"date": "2013-07-10 02:52:49.686390",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-10 02:53:20.836150",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "An interface to the registry would make sense, perhaps in syscall or\r\nperhaps outside. But that can be a separate discussion, not part of\r\nthis CL.\r\n",
			"disapproval": false,
			"date": "2013-07-10 02:58:48.998900",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/10956043/diff/13001/src/pkg/time/zoneinfo_windows.go\nFile src/pkg/time/zoneinfo_windows.go (right):\n\nhttps://codereview.appspot.com/10956043/diff/13001/src/pkg/time/zoneinfo_windows.go#newcode23\nsrc/pkg/time/zoneinfo_windows.go:23: var buf [50]uint16\nadd a comment about 50. a precis of the text you had in the CL response would be good.",
			"disapproval": false,
			"date": "2013-07-10 03:01:54.091870",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/10 02:58:48, r wrote:\n> An interface to the registry would make sense, perhaps in syscall or\n> perhaps outside. But that can be a separate discussion, not part of\n> this CL.\n\nSure. I'll think about it. The hard part is to make it future proof. We don't use registry extensively enough to cover all possible scenarios.\n\nAlex",
			"disapproval": false,
			"date": "2013-07-10 03:02:23.044910",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=2fc4f0ee4234 ***\n\ntime: find correct zone abbreviations even on non-English windows systems\n\nFixes issue 5783\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/10956043\n\nhttps://codereview.appspot.com/10956043/diff/13001/src/pkg/time/zoneinfo_windows.go\nFile src/pkg/time/zoneinfo_windows.go (right):\n\nhttps://codereview.appspot.com/10956043/diff/13001/src/pkg/time/zoneinfo_windows.go#newcode23\nsrc/pkg/time/zoneinfo_windows.go:23: var buf [50]uint16\nOn 2013/07/10 03:01:54, r wrote:\n> add a comment about 50. a precis of the text you had in the CL response would be\n> good.\n\nDone.",
			"disapproval": false,
			"date": "2013-07-10 05:34:31.750590",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 10956043: time: find correct zone abbreviations even on non-Engli...",
	"created": "2013-07-05 07:20:38.822930",
	"patchsets": [
		1,
		3001,
		5001,
		13001,
		21001
	],
	"modified": "2013-07-10 05:34:34.720050",
	"closed": true,
	"issue": 10956043
}