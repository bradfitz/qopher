{
	"description": "cmd/gc: don't dereference a nil Type pointer in widstruct\n\nThe nil dereference in the next few lines doesn't seem\nto cause a segmentation fault on Unix, but does seem\nto halt the Go compiler.\n\nThe following is a test case:\n\n>>>\npackage main\n\nfunc mine(int b) int {\n        return b + 2\n}\n\nfunc main() {\n        mine()\n\n        c = mine()\n}\n<<<\n\nWithout this change only the following is caught:\n\ntypecheck.go:3: undefined: b\ntypecheck.go:4: undefined: b\n\nwith it, we catch all the errors:\n\ntypecheck.go:3: undefined: b\ntypecheck.go:4: undefined: b\ntypecheck.go:10: undefined: c\ntypecheck.go:10: cannot assign to c .",
	"cc": [
		"rsc@golang.org",
		"minux.ma@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-23 05:06:56.963960",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I just realized that, that is perhaps not the best place to end the loop. I've updated the CL.\n\nPTAL.",
			"disapproval": false,
			"date": "2012-09-23 06:46:19.372930",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Just to update the message for convenience, the new diff is:\n\nIndex: src/cmd/gc/align.c\n===================================================================\n--- a/src/cmd/gc/align.c\n+++ b/src/cmd/gc/align.c\n@@ -54,6 +54,8 @@\n \tfor(f=t->type; f!=T; f=f->down) {\n \t\tif(f->etype != TFIELD)\n \t\t\tfatal(\"widstruct: not TFIELD: %lT\", f);\n+\t\tif(f->type == T)\n+\t\t\tbreak;\n \t\tdowidth(f->type);\n \t\tif(f->type->align > maxalign)\n \t\t\tmaxalign = f->type->align;\n\nOn 2012/09/23 06:46:19, akumar wrote:\n> I just realized that, that is perhaps not the best place to end the loop. I've\n> updated the CL.\n> \n> PTAL.",
			"disapproval": false,
			"date": "2012-09-23 20:36:10.173550",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?\r\n\r\nOn 23 September 2012 13:36,  <seed@mail.nanosouffle.net> wrote:\r\n> Just to update the message for convenience, the new diff is:\r\n>\r\n>\r\n> Index: src/cmd/gc/align.c\r\n> ===================================================================\r\n> --- a/src/cmd/gc/align.c\r\n> +++ b/src/cmd/gc/align.c\r\n> @@ -54,6 +54,8 @@\r\n>\r\n>         for(f=t->type; f!=T; f=f->down) {\r\n>                 if(f->etype != TFIELD)\r\n>                         fatal(\"widstruct: not TFIELD: %lT\", f);\r\n> +               if(f->type == T)\r\n> +                       break;\r\n>                 dowidth(f->type);\r\n>                 if(f->type->align > maxalign)\r\n>                         maxalign = f->type->align;\r\n>\r\n>\r\n> On 2012/09/23 06:46:19, akumar wrote:\r\n>>\r\n>> I just realized that, that is perhaps not the best place to end the\r\n>\r\n> loop. I've\r\n>>\r\n>> updated the CL.\r\n>\r\n>\r\n>> PTAL.\r\n>\r\n>\r\n>\r\n> http://codereview.appspot.com/6542060/\r\n",
			"disapproval": false,
			"date": "2012-09-24 12:34:21.168580",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "you need to at least make a test for it.\n\nSee tests under /test/ for examples.",
			"disapproval": false,
			"date": "2012-09-24 12:52:58.216600",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\n\nOn 2012/09/24 12:52:58, minux wrote:\n> you need to at least make a test for it.\n> \n> See tests under /test/ for examples.\n\nDone.",
			"disapproval": false,
			"date": "2012-10-03 00:47:53.784980",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The test as written won't work for gccgo. Can you use an errorcheck test instead of a cmpout test? \n\nThanks.",
			"disapproval": false,
			"date": "2012-10-05 20:39:38.887790",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nOn 2012/10/05 20:39:38, rsc wrote:\n> The test as written won't work for gccgo. Can you use an errorcheck test instead\n> of a cmpout test? \n> \n> Thanks.\n\nDone.",
			"disapproval": false,
			"date": "2012-10-05 21:23:25.431400",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-10-06 22:27:00.554430",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=035960d0711f ***\n\ncmd/gc: don't dereference a nil Type pointer in widstruct\n\nThe nil dereference in the next few lines doesn't seem\nto cause a segmentation fault on Unix, but does seem\nto halt the Go compiler.\n\nThe following is a test case:\n\n>>>\npackage main\n\nfunc mine(int b) int {\n        return b + 2\n}\n\nfunc main() {\n        mine()\n\n        c = mine()\n}\n<<<\n\nWithout this change only the following is caught:\n\ntypecheck.go:3: undefined: b\ntypecheck.go:4: undefined: b\n\nwith it, we catch all the errors:\n\ntypecheck.go:3: undefined: b\ntypecheck.go:4: undefined: b\ntypecheck.go:10: undefined: c\ntypecheck.go:10: cannot assign to c .\n\nR=rsc, minux.ma\nCC=golang-dev\nhttp://codereview.appspot.com/6542060\n\nCommitter: Shenghou Ma <minux.ma@gmail.com>",
			"disapproval": false,
			"date": "2012-10-07 06:12:14.923920",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-10-24 01:41:38.181080",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/24 01:41:38, akumar wrote:\n> *** Abandoned ***\n\nUgh, this was actually submitted, then changed. I merged the changes locally then did `hg sync', which asked me to do `hg change -d 6542060'. My apologies for listening to mercurial.",
			"disapproval": false,
			"date": "2012-10-24 02:09:40.460790",
			"approval": false
		}
	],
	"owner_email": "seed@mail.nanosouffle.net",
	"private": false,
	"base_url": "",
	"owner": "akumar",
	"subject": "code review 6542060: cmd/gc: don't dereference a nil Type pointer in widstruct",
	"created": "2012-09-23 05:03:40.370500",
	"patchsets": [
		1,
		2001,
		4001,
		1002,
		11001,
		15002
	],
	"modified": "2012-10-24 02:09:40.753450",
	"closed": true,
	"issue": 6542060
}