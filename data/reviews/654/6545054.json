{
	"description": "os/user : use username as fullname if all else fails (on windows)\n\nFixes issue 4113.",
	"cc": [
		"golang-dev@googlegroups.com",
		"alex.brainman@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I appreciate your effort, but I do not see how your changes fixes issue 4113. I have applied your patch, and running test on computer that is part of a domain, but is disconnected from network. I still get similar error message:\n\nC:\\>user.test.exe -test.v -test.run=Current\n=== RUN TestCurrent\n--- FAIL: TestCurrent (0.00 seconds)\nuser_test.go:34:        Current: The specified domain either does not exist or could not be contacted.\nFAIL\n\nIsn't your change suppose to handle these situations? I am confused.\n\nAlex",
			"disapproval": false,
			"date": "2012-09-24 04:40:04.982790",
			"approval": false
		},
		{
			"sender": "shivakumar.gn@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/24 04:40:04, brainman wrote:\n<snip>\n> have applied your patch, and running test on computer that is part of a domain,\n> but is disconnected from network. I still get similar error message:\n> \n<snip>\n\nAlex, I suspect you found a discrepancy across Windows versions.\nI tested the fix on Windows 7 where the bug was originally found.\nWhat is your windows version?\n\nAs noted in the patch & bug-report, for the name lookup, I have used the API call\nsyscall.GetUserNameEx(syscall.NameDisplay, &b[0], &n)\n\nAs per MS documentation, only syscall.NameSamCompatible is supported.\n\nBut in reality on my Win7 system, I can confirm that syscall.NameSamCompatible does work (I have sent a clarification mail to MS doc team via the website, do not know when the feedback will come)\n\nsyscall.NameDisplay => fetches the \"full name\"\nsyscall.NameSamCompatible => fetches only \"domainname\\username\"\n\nUsing syscall.NameSamCompatible is not useful since that is not what is needed.\n\nI found below URL (see comments section) that mentions about this discrepancy\nhttp://sjohannes.wordpress.com/2010/06/19/win32-python-getting-users-display-name-using-ctypes/\n\nCan you please confirm this is the case?",
			"disapproval": false,
			"date": "2012-09-24 07:48:52.543340",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/24 07:48:52, gns wrote:\n> ...\n> What is your windows version?\n> \n\nWindows 2000. But, I suspect, Windows XP will be the same. Would you like me to try it?\n\nAlso testing on \"Windows 7 Home Premium\", as per your suggestion. Standalone computer - not part of any domain. You proposed change fails:\n\nC:\\>\\\\rex\\go\\src\\pkg\\os\\user\\user.test.exe -test.v\n=== RUN TestCurrent\n--- FAIL: TestCurrent (0.02 seconds)\nuser_test.go:34:        Current: No mapping between account names and security IDs was done.\n=== RUN TestLookup\n--- FAIL: TestLookup (0.00 seconds)\nuser_test.go:74:        Current: No mapping between account names and security IDs was done.\n=== RUN TestLookupId\n--- FAIL: TestLookupId (0.00 seconds)\nuser_test.go:90:        Current: No mapping between account names and security IDs was done.\nFAIL\n\nwhile our existing code PASSes. I do not think we should go ahead with your propsal.\n\nAlex",
			"disapproval": false,
			"date": "2012-09-24 10:57:19.893110",
			"approval": false
		},
		{
			"sender": "shivakumar.gn@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-21 15:07:33.021230",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6545054/diff/5001/src/pkg/os/user/lookup_windows.go\nFile src/pkg/os/user/lookup_windows.go (right):\n\nhttp://codereview.appspot.com/6545054/diff/5001/src/pkg/os/user/lookup_windows.go#newcode13\nsrc/pkg/os/user/lookup_windows.go:13: return username, nil\nAre you sure, you want to return here?",
			"disapproval": false,
			"date": "2012-09-23 04:12:34.689960",
			"approval": false
		},
		{
			"sender": "shivakumar.gn@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-23 06:57:16.129000",
			"approval": false
		},
		{
			"sender": "shivakumar.gn@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/23 04:12:34, brainman wrote:\n> http://codereview.appspot.com/6545054/diff/5001/src/pkg/os/user/lookup_windows.go#newcode13\n> src/pkg/os/user/lookup_windows.go:13: return username, nil\n> Are you sure, you want to return here?\n\nMy bad. Updated patch is made available for review.",
			"disapproval": false,
			"date": "2012-09-23 07:00:33.091610",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "@gns\n\nThinking again about your problem. Perhaps, you could leave all existing code alone and just add call to syscall.GetUserNameEx at the end of lookupFullName, when everything else (syscall.TranslateAccountName and syscall.NetUserGetInfo) fails.\n\nIt is an extra code, but, I guess, if it fixes issue 4113, then we should do it.\n\nAnother suggestion would be to use \"username\" instead of failing. That is, probably, last resort solution.\n\nAlex",
			"disapproval": false,
			"date": "2012-09-25 01:41:17.415030",
			"approval": false
		},
		{
			"sender": "shivakumar.gn@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Returning GetUserNameEx() when everything else fails may not be good enough improvement on the current situation.\n\nissue 4113 affects 2 kind of users:\n[1] Users who are mobile - computer is connected-to/disconnected-from domain as they move about\n[2] Servers having AD authentication and running go service - if these have intermittent network errors\n\n\nFor [1] returning GetUserNameEx() \"finally\" is ok.\n[2] which is lot more critical, if likely, then Go will not be a production quality base in such cases.\n\n\nI was considering having a init function at file level which initializes itself with details about the computer (windows version) so that when lookup is done, appropriate execution path unique to that windows version can be done.\nI haven't checked if this is feasible.\n\nDo you see this workable?",
			"disapproval": false,
			"date": "2012-09-26 13:56:29.140000",
			"approval": false
		},
		{
			"sender": "shivakumar.gn@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/26 13:56:29, gns wrote:\n> \n> [2] Servers having AD authentication and running go service - if these have\n> intermittent network errors\n> \n\nFYI: The timeout for such users is 20-30 seconds.",
			"disapproval": false,
			"date": "2012-09-26 13:59:54.593620",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/26 13:56:29, gns wrote:\n> ...\n> issue 4113 affects 2 kind of users:\n> [1] Users who are mobile - computer is connected-to/disconnected-from domain as\n> they move about\n> [2] Servers having AD authentication and running go service - if these have\n> intermittent network errors\n> \n> \n> For [1] returning GetUserNameEx() \"finally\" is ok.\n\nGood. That is what your original problem was about. So that covers it. Right?\n\n> [2] which is lot more critical, ...\n\nI am not concerned about that scenario at this stage. Not many people run Go executables as windows service yet. And, I believe, most of the time, windows services should be running in \"Local System\" account.\n\n> I was considering having a init function at file level which initializes itself\n> with details about the computer (windows version) so that when lookup is done,\n> appropriate execution path unique to that windows version can be done.\n> I haven't checked if this is feasible.\n\nHow is knowledge of \"windows version\" going to help you here? What is wrong with trying all our APIs in turn and stopping when it works?\n\n> FYI: The timeout for such users is 20-30 seconds.\n\nThat could be a problem. But I do not see how we can avoid it. It is what it is.\n\nLastly, I do not think many people use this package. So, I do not want to put too much effort into it. Also, I would like to keep complexity to the minimum required.\n\nAlex",
			"disapproval": false,
			"date": "2012-09-27 04:08:00.912670",
			"approval": false
		},
		{
			"sender": "shivakumar.gn@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-29 03:19:20.111110",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI will leave for others to comment. For a day or so.\n\nThank you.\n\nAlex",
			"disapproval": false,
			"date": "2012-09-29 12:52:14.488630",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=c763565f31ff ***\n\nos/user : use username as fullname if all else fails (on windows)\n\nFixes issue 4113.\n\nR=golang-dev, alex.brainman\nCC=golang-dev\nhttp://codereview.appspot.com/6545054\n\nCommitter: Alex Brainman <alex.brainman@gmail.com>",
			"disapproval": false,
			"date": "2012-10-03 00:33:32.191260",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "CL description is too long. Please, just say what it does. For example:\n\n>>>\nos/user: use username as fullname if all else fails (on windows)\n\nFixes issue 4113.\n<<<\n\nor something similar.\n\nAlex\n\nhttp://codereview.appspot.com/6545054/diff/18001/src/pkg/os/user/lookup_windows.go\nFile src/pkg/os/user/lookup_windows.go (right):\n\nhttp://codereview.appspot.com/6545054/diff/18001/src/pkg/os/user/lookup_windows.go#newcode32\nsrc/pkg/os/user/lookup_windows.go:32: // username is returned as a least destructive action\nLets not claim that we know what is happening here. Just say\n\n// give up looking for the fullname.\n// pretend that username is fullname.\n\nor something to that effect.",
			"disapproval": false,
			"date": "2012-09-29 12:30:44.408050",
			"approval": false
		},
		{
			"sender": "shivakumar.gn@gmail.com",
			"recipients": [
				"shivakumar.gn@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-29 12:47:08.933080",
			"approval": false
		}
	],
	"owner_email": "shivakumar.gn@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "shiv",
	"subject": "code review 6545054: os/user : use username as fullname if all else fails (o...",
	"created": "2012-09-21 14:08:49.016910",
	"patchsets": [
		1,
		2001,
		5001,
		10001,
		18001,
		22003
	],
	"modified": "2012-09-29 12:47:08.933080",
	"closed": false,
	"issue": 6545054
}