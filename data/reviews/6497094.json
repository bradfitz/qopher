{
	"description": "cmd/yacc: always import fmt, safely\nThe parser depends on it but the client might not import it, so make sure it's there.\nFixes issue 4038.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-06 21:55:30.550400",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-06 21:47:40.701900",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i need to count lines too, for the //line update, so i'll leave it as is.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-09-06 21:58:22.873580",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nAn alternative to the line based approach would be to write a loop over the raw rune slice: it should be easy to skip over /* */ and // comments during the loop, and 'package' has to be the first non-comment you see. But this is fine too.\n\nThanks for the fix.\n\nhttp://codereview.appspot.com/6497094/diff/1/src/cmd/yacc/yacc.go\nFile src/cmd/yacc/yacc.go (right):\n\nhttp://codereview.appspot.com/6497094/diff/1/src/cmd/yacc/yacc.go#newcode1116\nsrc/cmd/yacc/yacc.go:1116: // adds an import for __fmt__ after the package clause\nyy",
			"disapproval": false,
			"date": "2012-09-06 21:52:27.686350",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=95fb3bcdc941 ***\n\ncmd/yacc: always import fmt, safely\nThe parser depends on it but the client might not import it, so make sure it's there.\nFixes issue 4038.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6497094",
			"disapproval": false,
			"date": "2012-09-06 21:59:01.784980",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6497094: cmd/yacc: always import fmt, safely",
	"created": "2012-09-06 21:47:37.080350",
	"patchsets": [
		1,
		5001,
		7001,
		9001,
		7002
	],
	"modified": "2012-09-06 21:59:02.866990",
	"closed": true,
	"issue": 6497094
}