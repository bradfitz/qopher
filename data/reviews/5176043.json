{
	"description": "strings: implement a faster byte->string Replacer\n\nThis implements a replacer for when all old strings are single\nbytes, but new values are not.\n\nBenchmarkHTMLEscapeNew   1000000   1090 ns/op\nBenchmarkHTMLEscapeOld   1000000   2049 ns/op",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-10-03 21:33:53.361004",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/mime/multipart/writer.go\nFile src/pkg/mime/multipart/writer.go (right):\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/mime/multipart/writer.go#newcode88\nsrc/pkg/mime/multipart/writer.go:88: var quoteEscaper = strings.NewReplacer(\"\\\\\", \"\\\\\\\\\", \"\\\"\", \"\\\\\\\"\")\nUse `` strings.\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/path/filepath/path.go\nFile src/pkg/path/filepath/path.go (right):\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/path/filepath/path.go#newcode119\nsrc/pkg/path/filepath/path.go:119: var toSlashReplacer = strings.NewReplacer(string(Separator), \"/\")\nThis is causing init-time work on all platforms even though\nit is only needed on Windows.  Can these stay as they were?\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/strings/replace.go\nFile src/pkg/strings/replace.go (right):\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/strings/replace.go#newcode265\nsrc/pkg/strings/replace.go:265: bufsize := 32 << 10\nThis is fine (as is the byteByteReplacer) but you can do\nbetter if you omit the buffer entirely and just call io.WriteString\nwith slices of s.  Then there's no allocation.",
			"disapproval": false,
			"date": "2011-10-03 21:41:46.563945",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=890790c993b3 ***\n\nstrings: implement a faster byte->string Replacer\n\nThis implements a replacer for when all old strings are single\nbytes, but new values are not.\n\nBenchmarkHTMLEscapeNew   1000000   1090 ns/op\nBenchmarkHTMLEscapeOld   1000000   2049 ns/op\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5176043\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/mime/multipart/writer.go\nFile src/pkg/mime/multipart/writer.go (right):\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/mime/multipart/writer.go#newcode88\nsrc/pkg/mime/multipart/writer.go:88: var quoteEscaper = strings.NewReplacer(\"\\\\\", \"\\\\\\\\\", \"\\\"\", \"\\\\\\\"\")\nOn 2011/10/03 21:41:46, rsc wrote:\n> Use `` strings.\n\nSince I tend to maintain this file, can I wait until http://code.google.com/p/go/issues/detail?id=2330 is fixed?\n\nMore than syntax highlighting, it breaks everything about the Go mode, including indentation and such.  :/\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/path/filepath/path.go\nFile src/pkg/path/filepath/path.go (right):\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/path/filepath/path.go#newcode119\nsrc/pkg/path/filepath/path.go:119: var toSlashReplacer = strings.NewReplacer(string(Separator), \"/\")\nOn 2011/10/03 21:41:46, rsc wrote:\n> This is causing init-time work on all platforms even though\n> it is only needed on Windows.  Can these stay as they were?\n\nSure.\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/strings/replace.go\nFile src/pkg/strings/replace.go (right):\n\nhttp://codereview.appspot.com/5176043/diff/5005/src/pkg/strings/replace.go#newcode265\nsrc/pkg/strings/replace.go:265: bufsize := 32 << 10\nOn 2011/10/03 21:41:46, rsc wrote:\n> This is fine (as is the byteByteReplacer) but you can do\n> better if you omit the buffer entirely and just call io.WriteString\n> with slices of s.  Then there's no allocation.\n\nAh, yes.  Added a TODO.",
			"disapproval": false,
			"date": "2011-10-03 22:19:09.518196",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5176043: strings: implement a faster byte->string Replacer",
	"created": "2011-10-03 21:17:38.972491",
	"patchsets": [
		1,
		2001,
		1002,
		5005,
		11001,
		14001,
		17001
	],
	"modified": "2011-10-03 22:19:10.417200",
	"closed": true,
	"issue": 5176043
}