{
	"description": "xml: Benchmarks for unmarshaling of large arrays\n\nI proposed these to rsc@golang.org when they originally\nexposed a performance problem in R60.  (Performance appeared\nto be dominated by stack grow/shrink operations).  The problem\nappears to have been fixed, but I still think these provide a\nrealistic use case.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org",
		"r@golang.org"
	],
	"messages": [
		{
			"sender": "rochberg@google.com",
			"recipients": [
				"rochberg@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-25 19:44:50.666204",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rochberg@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5316048/diff/4001/src/pkg/xml/marshal_test.go\nFile src/pkg/xml/marshal_test.go (right):\n\nhttp://codereview.appspot.com/5316048/diff/4001/src/pkg/xml/marshal_test.go#newcode451\nsrc/pkg/xml/marshal_test.go:451: buf := buildSpaceshipBuffer(b)\nUsing N to control the size of the array is not going\nto give a reliable result, because the time does not\nscale linearly with N (at some point you start swapping,\ngarbage collecting more, etc).  It would be better to pick \na fixed size, build the string the first time you get called,\nand then run the benchmark b.N times.",
			"disapproval": false,
			"date": "2011-10-31 15:44:44.924308",
			"approval": false
		},
		{
			"sender": "rochberg@google.com",
			"recipients": [
				"rochberg@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is back from the beyond.  PTAL",
			"disapproval": false,
			"date": "2011-11-23 03:23:32.949173",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rochberg@google.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5316048/diff/10002/src/pkg/encoding/xml/marshal_test.go\nFile src/pkg/encoding/xml/marshal_test.go (right):\n\nhttp://codereview.appspot.com/5316048/diff/10002/src/pkg/encoding/xml/marshal_test.go#newcode429\nsrc/pkg/encoding/xml/marshal_test.go:429: func init() {\nthis is for benchmarks, not the package at large, so it should be done only if we're running benchmarks. i suggest moving this code into a function that returns the buffer, and either remembering the value or just calculating it again the second time. then in the benchmarks, suspend the timer while you build the buffer.  lots of examples like this to look at in other packages.",
			"disapproval": false,
			"date": "2011-11-23 16:56:53.840918",
			"approval": false
		},
		{
			"sender": "rochberg@google.com",
			"recipients": [
				"rochberg@google.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sure.  Done.",
			"disapproval": false,
			"date": "2011-11-25 17:07:45.701791",
			"approval": false
		},
		{
			"sender": "rochberg@google.com",
			"recipients": [
				"rochberg@google.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2011/11/25 17:07:45, rochberg_go wrote:\n> Sure.  Done.\n\nping",
			"disapproval": false,
			"date": "2011-12-21 21:36:59.770945",
			"approval": false
		}
	],
	"owner_email": "rochberg@google.com",
	"private": false,
	"base_url": "",
	"owner": "rochberg_go",
	"subject": "code review 5316048: xml: Benchmarks for unmarshaling of large arrays",
	"created": "2011-10-25 14:39:14.239447",
	"patchsets": [
		1,
		1001,
		4001,
		7002,
		10002,
		12002
	],
	"modified": "2011-12-21 21:36:59.770945",
	"closed": false,
	"issue": 5316048
}