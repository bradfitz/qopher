{
	"description": "io: fix race condition in Pipe.\nAlso use copy() rather then explicit loop to fill read buffer.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "i see what you're getting at, thanks.\nthe race is still there in your code though, since\nassignments are not guaranteed to be observed\nin order in another goroutine.\ni think i can solve the race by getting rid of\nrclosed and wclosed entirely.  i'll take a look at\nthis later today.\n\nthanks again\nruss\n\n\nOn Fri, Jan 29, 2010 at 03:14,  <hurtonm@gmail.com> wrote:\n> Reviewers: r,\n>\n> Message:\n> Hello r (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change.\n>\n>\n> Description:\n> io: fix race condition in Pipe.\n> Also use copy() rather then explicit loop to fill read buffer.\n>\n> Please review this at http://codereview.appspot.com/194136/show\n>\n> Affected files:\n> \u00a0M src/pkg/io/pipe.go\n>\n>\n> Index: src/pkg/io/pipe.go\n> ===================================================================\n> --- a/src/pkg/io/pipe.go\n> +++ b/src/pkg/io/pipe.go\n> @@ -46,13 +46,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> \u00a0 \u00a0 \u00a0 \u00a0// Read from current write block.\n> - \u00a0 \u00a0 \u00a0 n = len(data)\n> - \u00a0 \u00a0 \u00a0 if n > len(p.wpend) {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 n = len(p.wpend)\n> - \u00a0 \u00a0 \u00a0 }\n> - \u00a0 \u00a0 \u00a0 for i := 0; i < n; i++ {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 data[i] = p.wpend[i]\n> - \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 n = copy(data, p.wpend)\n> \u00a0 \u00a0 \u00a0 \u00a0p.wtot += n\n> \u00a0 \u00a0 \u00a0 \u00a0p.wpend = p.wpend[n:]\n>\n> @@ -87,13 +81,14 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return os.EINVAL\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> - \u00a0 \u00a0 \u00a0 // Stop any future writes.\n> - \u00a0 \u00a0 \u00a0 p.rclosed = true\n> \u00a0 \u00a0 \u00a0 \u00a0if rerr == nil {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0rerr = os.EPIPE\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0p.rerr = rerr\n>\n> + \u00a0 \u00a0 \u00a0 // Stop any future writes.\n> + \u00a0 \u00a0 \u00a0 p.rclosed = true\n> +\n> \u00a0 \u00a0 \u00a0 \u00a0// Stop the current write.\n> \u00a0 \u00a0 \u00a0 \u00a0if !p.wclosed {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p.cw <- pipeReturn{p.wtot, rerr}\n> @@ -103,16 +98,17 @@\n> \u00a0}\n>\n> \u00a0func (p *pipe) CloseWriter(werr os.Error) os.Error {\n> - \u00a0 \u00a0 \u00a0 if werr == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 werr = os.EOF\n> - \u00a0 \u00a0 \u00a0 }\n> \u00a0 \u00a0 \u00a0 \u00a0if p == nil || p.wclosed {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return os.EINVAL\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> + \u00a0 \u00a0 \u00a0 if werr == nil {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 werr = os.EOF\n> + \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 p.werr = werr\n> +\n> \u00a0 \u00a0 \u00a0 \u00a0// Stop any future reads.\n> \u00a0 \u00a0 \u00a0 \u00a0p.wclosed = true\n> - \u00a0 \u00a0 \u00a0 p.werr = werr\n>\n> \u00a0 \u00a0 \u00a0 \u00a0// Stop the current read.\n> \u00a0 \u00a0 \u00a0 \u00a0if !p.rclosed {\n>\n>\n>\n",
			"disapproval": false,
			"date": "2010-01-29 18:54:34.825526",
			"approval": false
		},
		{
			"sender": "hurtonm@gmail.com",
			"recipients": [
				"hurtonm@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change.",
			"disapproval": false,
			"date": "2010-01-29 11:14:52.414745",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"hurtonm@gmail.com",
				"rsc@golang.org",
				"nigel.tao.gnome@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "russ and nigel have been working on this code so i'm handing it off to them.",
			"disapproval": false,
			"date": "2010-01-29 11:18:24.501275",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"hurtonm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2010-02-04 06:49:19.780293",
			"approval": false
		}
	],
	"owner_email": "hurtonm@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "hurtonm",
	"subject": "code review 194136: io: fix race condition in Pipe.",
	"created": "2010-01-29 10:40:07.106673",
	"patchsets": [
		1,
		1001
	],
	"modified": "2010-02-04 06:49:19.780549",
	"closed": false,
	"issue": 194136
}