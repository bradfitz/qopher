{
	"description": "runtime: change netpoll in preparation for windows implementation\n\n- change runtime_pollWait so it does not return\n  closed or timeout if IO is ready - windows must\n  know if IO has completed or not even after\n  interruption;\n- add (*pollDesc).Prepare(mode int) that can be\n  used for both read and write, same for Wait;\n- introduce runtime_pollWaitCanceled and expose\n  it in net as (*pollDesc).WaitCanceled(mode int);\n\nFull windows netpoll changes are\nhere https://codereview.appspot.com/8670044/.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dvyukov@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-06-24 04:39:12.974590",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/10485043/diff/5001/src/pkg/runtime/netpoll.goc\nFile src/pkg/runtime/netpoll.goc (right):\n\nhttps://codereview.appspot.com/10485043/diff/5001/src/pkg/runtime/netpoll.goc#newcode273\nsrc/pkg/runtime/netpoll.goc:273: if(*gpp == READY) {\ndrop {}\n\nhttps://codereview.appspot.com/10485043/diff/5001/src/pkg/runtime/netpoll.goc#newcode288\nsrc/pkg/runtime/netpoll.goc:288: old->param = 0;\nthis should be nil\nprobably just old->param = (void*)ioready;",
			"disapproval": false,
			"date": "2013-06-24 09:16:36.671350",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=8de6d4c58935 ***\n\nruntime: change netpoll in preparation for windows implementation\n\n- change runtime_pollWait so it does not return\n  closed or timeout if IO is ready - windows must\n  know if IO has completed or not even after\n  interruption;\n- add (*pollDesc).Prepare(mode int) that can be\n  used for both read and write, same for Wait;\n- introduce runtime_pollWaitCanceled and expose\n  it in net as (*pollDesc).WaitCanceled(mode int);\n\nFull windows netpoll changes are\nhere https://codereview.appspot.com/8670044/.\n\nR=golang-dev, dvyukov\nCC=golang-dev\nhttps://codereview.appspot.com/10485043\n\nhttps://codereview.appspot.com/10485043/diff/5001/src/pkg/runtime/netpoll.goc\nFile src/pkg/runtime/netpoll.goc (right):\n\nhttps://codereview.appspot.com/10485043/diff/5001/src/pkg/runtime/netpoll.goc#newcode273\nsrc/pkg/runtime/netpoll.goc:273: if(*gpp == READY) {\nOn 2013/06/24 09:16:36, dvyukov wrote:\n> drop {}\n\nDone.\n\nhttps://codereview.appspot.com/10485043/diff/5001/src/pkg/runtime/netpoll.goc#newcode288\nsrc/pkg/runtime/netpoll.goc:288: old->param = 0;\nOn 2013/06/24 09:16:36, dvyukov wrote:\n> this should be nil\n> probably just old->param = (void*)ioready;\n\nDone.",
			"disapproval": false,
			"date": "2013-06-25 02:29:09.270860",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 10485043: runtime: change netpoll in preparation for windows impl...",
	"created": "2013-06-24 04:32:28.603710",
	"patchsets": [
		1,
		2,
		5001,
		9001
	],
	"modified": "2013-06-25 02:29:12.309510",
	"closed": true,
	"issue": 10485043
}