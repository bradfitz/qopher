{
	"description": "runtime: fix netbsd syscalls\n\nUse correct system calls/syscall numbers for NetBSD.",
	"cc": [
		"golang-dev@googlegroups.com",
		"for.go.yong@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-05-15 16:51:34.160328",
			"approval": true
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-13 13:31:27.364810",
			"approval": false
		},
		{
			"sender": "for.go.yong@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, thanks\r\nOn May 13, 2012 10:31 PM, <jsing@google.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> runtime: fix netbsd syscalls\r\n>\r\n> Use correct system calls/syscall numbers for NetBSD.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6200070/<http://codereview.appspot.com/6200070/>\r\n>\r\n> Affected files:\r\n>  M src/pkg/runtime/sys_netbsd_**386.s\r\n>  M src/pkg/runtime/sys_netbsd_**amd64.s\r\n>\r\n>\r\n> Index: src/pkg/runtime/sys_netbsd_**386.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/sys_netbsd_**386.s\r\n> +++ b/src/pkg/runtime/sys_netbsd_**386.s\r\n> @@ -16,7 +16,7 @@\r\n>        RET\r\n>\r\n>  TEXT runtime\u00b7exit1(SB),7,$-4\r\n> -       MOVL    $302, AX                // sys_threxit\r\n> +       MOVL    $310, AX                // sys__lwp_exit\r\n>        INT     $0x80\r\n>        JAE     2(PC)\r\n>        MOVL    $0xf1, 0xf1  // crash\r\n> @@ -41,17 +41,17 @@\r\n>        LEAL    12(SP), AX\r\n>        MOVL    AX, 4(SP)               // arg 1 - rqtp\r\n>        MOVL    $0, 8(SP)               // arg 2 - rmtp\r\n> -       MOVL    $240, AX                // sys_nanosleep\r\n> +       MOVL    $430, AX                // sys_nanosleep\r\n>        INT     $0x80\r\n>        RET\r\n>\r\n>  TEXT runtime\u00b7raisesigpipe(SB),7,$12\r\n> -       MOVL    $299, AX                // sys_getthrid\r\n> +       MOVL    $311, AX                // sys__lwp_self\r\n>        INT     $0x80\r\n>        MOVL    $0, 0(SP)\r\n> -       MOVL    AX, 4(SP)               // arg 1 - pid\r\n> -       MOVL    $13, 8(SP)              // arg 2 - signum == SIGPIPE\r\n> -       MOVL    $37, AX                 // sys_kill\r\n> +       MOVL    AX, 4(SP)               // arg 1 - target\r\n> +       MOVL    $13, 8(SP)              // arg 2 - signo == SIGPIPE\r\n> +       MOVL    $318, AX                // sys__lwp_kill\r\n>        INT     $0x80\r\n>        RET\r\n>\r\n> @@ -83,16 +83,16 @@\r\n>        RET\r\n>\r\n>  TEXT runtime\u00b7setitimer(SB),7,$-4\r\n> -       MOVL    $83, AX\r\n> +       MOVL    $425, AX                // sys_setitimer\r\n>        INT     $0x80\r\n>        RET\r\n>\r\n>  // func now() (sec int64, nsec int32)\r\n>  TEXT time\u00b7now(SB), 7, $32\r\n> -       MOVL    $116, AX\r\n>        LEAL    12(SP), BX\r\n> -       MOVL    BX, 4(SP)\r\n> -       MOVL    $0, 8(SP)\r\n> +       MOVL    BX, 4(SP)               // arg 1 - tp\r\n> +       MOVL    $0, 8(SP)               // arg 2 - tzp\r\n> +       MOVL    $418, AX                // sys_gettimeofday\r\n>        INT     $0x80\r\n>        MOVL    12(SP), AX              // sec\r\n>        MOVL    16(SP), BX              // usec\r\n> @@ -107,10 +107,10 @@\r\n>  // int64 nanotime(void) so really\r\n>  // void nanotime(int64 *nsec)\r\n>  TEXT runtime\u00b7nanotime(SB),7,$32\r\n> -       MOVL    $116, AX\r\n>        LEAL    12(SP), BX\r\n> -       MOVL    BX, 4(SP)\r\n> -       MOVL    $0, 8(SP)\r\n> +       MOVL    BX, 4(SP)               // arg 1 - tp\r\n> +       MOVL    $0, 8(SP)               // arg 2 - tzp\r\n> +       MOVL    $418, AX                // sys_gettimeofday\r\n>        INT     $0x80\r\n>        MOVL    12(SP), AX              // sec\r\n>        MOVL    16(SP), BX              // usec\r\n> @@ -309,7 +309,7 @@\r\n>        RET\r\n>\r\n>  TEXT runtime\u00b7osyield(SB),7,$-4\r\n> -       MOVL    $298, AX                // sys_sched_yield\r\n> +       MOVL    $350, AX                // sys_sched_yield\r\n>        INT     $0x80\r\n>        RET\r\n>\r\n> Index: src/pkg/runtime/sys_netbsd_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/sys_netbsd_**amd64.s\r\n> +++ b/src/pkg/runtime/sys_netbsd_**amd64.s\r\n> @@ -58,7 +58,7 @@\r\n>        JMP     -3(PC)                  // keep exiting\r\n>\r\n>  TEXT runtime\u00b7osyield(SB),7,$0\r\n> -       MOVL $298, AX                   // sys_sched_yield\r\n> +       MOVL    $350, AX                // sys_sched_yield\r\n>        SYSCALL\r\n>        RET\r\n>\r\n> @@ -87,7 +87,7 @@\r\n>        RET\r\n>\r\n>  TEXT runtime\u00b7exit1(SB),7,$-8\r\n> -       MOVL    $302, AX                // sys_threxit\r\n> +       MOVL    $310, AX                // sys__lwp_exit\r\n>        SYSCALL\r\n>        MOVL    $0xf1, 0xf1  // crash\r\n>        RET\r\n> @@ -112,16 +112,16 @@\r\n>\r\n>        MOVQ    SP, DI                  // arg 1 - rqtp\r\n>        MOVQ    $0, SI                  // arg 2 - rmtp\r\n> -       MOVL    $240, AX                // sys_nanosleep\r\n> +       MOVL    $430, AX                // sys_nanosleep\r\n>        SYSCALL\r\n>        RET\r\n>\r\n>  TEXT runtime\u00b7raisesigpipe(SB),7,$16\r\n> -       MOVL    $299, AX                // sys_getthrid\r\n> +       MOVL    $311, AX                // sys__lwp_self\r\n>        SYSCALL\r\n> -       MOVQ    AX, DI                  // arg 1 - pid\r\n> -       MOVQ    $13, SI                 // arg 2 - signum == SIGPIPE\r\n> -       MOVL    $37, AX                 // sys_kill\r\n> +       MOVQ    AX, DI                  // arg 1 - target\r\n> +       MOVQ    $13, SI                 // arg 2 - signo == SIGPIPE\r\n> +       MOVL    $318, AX                // sys__lwp_kill\r\n>        SYSCALL\r\n>        RET\r\n>\r\n> @@ -129,7 +129,7 @@\r\n>        MOVL    8(SP), DI               // arg 1 - which\r\n>        MOVQ    16(SP), SI              // arg 2 - itv\r\n>        MOVQ    24(SP), DX              // arg 3 - oitv\r\n> -       MOVL    $83, AX                 // sys_setitimer\r\n> +       MOVL    $425, AX                // sys_setitimer\r\n>        SYSCALL\r\n>        RET\r\n>\r\n> @@ -137,10 +137,10 @@\r\n>  TEXT time\u00b7now(SB), 7, $32\r\n>        LEAQ    8(SP), DI               // arg 1 - tp\r\n>        MOVQ    $0, SI                  // arg 2 - tzp\r\n> -       MOVL    $116, AX                // sys_gettimeofday\r\n> +       MOVL    $418, AX                // sys_gettimeofday\r\n>        SYSCALL\r\n>        MOVQ    8(SP), AX               // sec\r\n> -       MOVL    16(SP), DX      // usec\r\n> +       MOVL    16(SP), DX              // usec\r\n>\r\n>        // sec is in AX, usec in DX\r\n>        MOVQ    AX, sec+0(FP)\r\n> @@ -151,10 +151,10 @@\r\n>  TEXT runtime\u00b7nanotime(SB),7,$32\r\n>        LEAQ    8(SP), DI               // arg 1 - tp\r\n>        MOVQ    $0, SI                  // arg 2 - tzp\r\n> -       MOVL    $116, AX                // sys_gettimeofday\r\n> +       MOVL    $418, AX                // sys_gettimeofday\r\n>        SYSCALL\r\n>        MOVQ    8(SP), AX               // sec\r\n> -       MOVL    16(SP), DX      // usec\r\n> +       MOVL    16(SP), DX              // usec\r\n>\r\n>        // sec is in AX, usec in DX\r\n>        // return nsec in AX\r\n> @@ -225,7 +225,7 @@\r\n>        SUBQ    $16, SP\r\n>        MOVQ    R9, 8(SP)               // arg 7 - offset (passed on stack)\r\n>        MOVQ    $0, R9                  // arg 6 - pad\r\n> -       MOVL    $197, AX\r\n> +       MOVL    $197, AX                // sys_mmap\r\n>        SYSCALL\r\n>        JCC     2(PC)\r\n>        NEGL    AX\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-13 18:27:03.079219",
			"approval": true
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"for.go.yong@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=8b586e9f25de ***\n\nruntime: fix netbsd syscalls\n\nUse correct system calls/syscall numbers for NetBSD.\n\nR=golang-dev, for.go.yong, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6200070",
			"disapproval": false,
			"date": "2012-05-15 17:33:51.611140",
			"approval": false
		}
	],
	"owner_email": "jsing@google.com",
	"private": false,
	"base_url": "",
	"owner": "jsing",
	"subject": "code review 6200070: runtime: fix netbsd syscalls",
	"created": "2012-05-13 12:59:46.441129",
	"patchsets": [
		5003,
		8001,
		3005
	],
	"modified": "2012-05-15 17:33:56.090297",
	"closed": true,
	"issue": 6200070
}