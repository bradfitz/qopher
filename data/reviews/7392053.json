{
	"description": "exp/ssa: a number of bug fixes.\n\nssadump:\n- permit naming a package (not just *.go files) on command line.\n- set BuildSerially flag when setting Log* flags\n  (Q. should instead the logging functions take a lock?)\n\nBuilder:\n- fixed bug when calling variadic function with zero '...'-params.\n  Added regression test.\n\ninterp:\n- more external functions:\n   the 'error' interface\n   bytes.{Equal,IndexByte}\n   reflect.(Value).{Bool,NumOut,Out}\n   syscall.{Close,Fstat,Read,Open,Stat,Lstat,Fstat,\n     Getdents,ParseDirents,Getwd}\n- permit comparisons between *Function and *closure.\n\nWith this CL, ssadump can now interpret ssadump itself (!),\nloading, parsing, typing, SSA-building, and running\nprintln(\"Hello, World!\").  While a fmt-based equivalent still\nlacks some external routines, e.g. math/big, I think there are\ndiminishing returns in expanding the interpreter (and\ndebugging it is starting to feel like \"Inception\").\n\nI'm pretty confident this package is now good enough for wider use.",
	"cc": [
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This broke darwin, freebsd.  Apologies.\r\n\r\nFix pending...\r\n\r\nOn 27 February 2013 16:43, <adonovan@google.com> wrote:\r\n\r\n> *** Submitted as\r\n> https://code.google.com/p/go/**source/detail?r=580da0187392<https://code.google.com/p/go/source/detail?r=580da0187392>***\r\n>\r\n>\r\n> exp/ssa: a number of bug fixes.\r\n>\r\n> ssadump:\r\n> - permit naming a package (not just *.go files) on command line.\r\n> - set BuildSerially flag when setting Log* flags\r\n>   (Q. should instead the logging functions take a lock?)\r\n>\r\n> Builder:\r\n> - fixed bug when calling variadic function with zero '...'-params.\r\n>   Added regression test.\r\n>\r\n> interp:\r\n> - more external functions:\r\n>    the 'error' interface\r\n>    bytes.{Equal,IndexByte}\r\n>    reflect.(Value).{Bool,NumOut,**Out}\r\n>    syscall.{Close,Fstat,Read,**Open,Stat,Lstat,Fstat,\r\n>      Getdents,ParseDirents,Getwd}\r\n> - permit comparisons between *Function and *closure.\r\n>\r\n> With this CL, ssadump can now interpret ssadump itself (!),\r\n> loading, parsing, typing, SSA-building, and running\r\n> println(\"Hello, World!\").  While a fmt-based equivalent still\r\n> lacks some external routines, e.g. math/big, I think there are\r\n> diminishing returns in expanding the interpreter (and\r\n> debugging it is starting to feel like \"Inception\").\r\n>\r\n> I'm pretty confident this package is now good enough for wider use.\r\n>\r\n> R=gri\r\n> CC=golang-dev\r\n> https://codereview.appspot.**com/7392053<https://codereview.appspot.com/7392053>\r\n>\r\n>\r\n> https://codereview.appspot.**com/7392053/<https://codereview.appspot.com/7392053/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-27 21:55:14.219090",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/interp/external_unix.go\nFile src/pkg/exp/ssa/interp/external_unix.go (right):\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/interp/external_unix.go#newcode14\nsrc/pkg/exp/ssa/interp/external_unix.go:14: func bytesToHost(in []value) []byte {\nnot a good name - I would have expected something like ...ToBytes, ...Bytes\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/interp/external_unix.go#newcode15\nsrc/pkg/exp/ssa/interp/external_unix.go:15: b := make([]byte, 0, len(in))\nb := make([]byte, len(in))\nfor i := range in {\n   b[i] = in[i].byte\n}\nreturn b\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/ssadump.go\nFile src/pkg/exp/ssa/ssadump.go (right):\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/ssadump.go#newcode130\nsrc/pkg/exp/ssa/ssadump.go:130: args = args[i:]\nthis modifies the underlying array returned by the flag package - not a good idea\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/ssadump.go#newcode144\nsrc/pkg/exp/ssa/ssadump.go:144: // duplicate (e.g.) main functions in the same package.\nIsn't this the case now?",
			"disapproval": false,
			"date": "2013-02-27 19:47:49.274900",
			"approval": true
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-27 18:24:17.599950",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/interp/external_unix.go\nFile src/pkg/exp/ssa/interp/external_unix.go (right):\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/interp/external_unix.go#newcode14\nsrc/pkg/exp/ssa/interp/external_unix.go:14: func bytesToHost(in []value) []byte {\nOn 2013/02/27 19:47:49, gri wrote:\n> not a good name - I would have expected something like ...ToBytes, ...Bytes\n\nChanged to valueToBytes; I also moved the typeassert from the callers into the function, so the arg is now a value not a []value.\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/interp/external_unix.go#newcode15\nsrc/pkg/exp/ssa/interp/external_unix.go:15: b := make([]byte, 0, len(in))\nOn 2013/02/27 19:47:49, gri wrote:\n> b := make([]byte, len(in))\n> for i := range in {\n>    b[i] = in[i].byte\n> }\n> return b\n\nMuch better.\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/ssadump.go\nFile src/pkg/exp/ssa/ssadump.go (right):\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/ssadump.go#newcode130\nsrc/pkg/exp/ssa/ssadump.go:130: args = args[i:]\nOn 2013/02/27 19:47:49, gri wrote:\n> this modifies the underlying array returned by the flag package - not a good\n> idea\n\nNo, it only modifies the slice, which is local to main.\n\nhttps://codereview.appspot.com/7392053/diff/7001/src/pkg/exp/ssa/ssadump.go#newcode144\nsrc/pkg/exp/ssa/ssadump.go:144: // duplicate (e.g.) main functions in the same package.\nOn 2013/02/27 19:47:49, gri wrote:\n> Isn't this the case now?\n\nOnly if the two occurrences appear in the same source file; if they're in different files in the same package, no error is reported.",
			"disapproval": false,
			"date": "2013-02-27 21:38:47.603440",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=580da0187392 ***\n\nexp/ssa: a number of bug fixes.\n\nssadump:\n- permit naming a package (not just *.go files) on command line.\n- set BuildSerially flag when setting Log* flags\n  (Q. should instead the logging functions take a lock?)\n\nBuilder:\n- fixed bug when calling variadic function with zero '...'-params.\n  Added regression test.\n\ninterp:\n- more external functions:\n   the 'error' interface\n   bytes.{Equal,IndexByte}\n   reflect.(Value).{Bool,NumOut,Out}\n   syscall.{Close,Fstat,Read,Open,Stat,Lstat,Fstat,\n     Getdents,ParseDirents,Getwd}\n- permit comparisons between *Function and *closure.\n\nWith this CL, ssadump can now interpret ssadump itself (!),\nloading, parsing, typing, SSA-building, and running\nprintln(\"Hello, World!\").  While a fmt-based equivalent still\nlacks some external routines, e.g. math/big, I think there are\ndiminishing returns in expanding the interpreter (and\ndebugging it is starting to feel like \"Inception\").\n\nI'm pretty confident this package is now good enough for wider use.\n\nR=gri\nCC=golang-dev\nhttps://codereview.appspot.com/7392053",
			"disapproval": false,
			"date": "2013-02-27 21:43:22.331460",
			"approval": false
		}
	],
	"owner_email": "adonovan@google.com",
	"private": false,
	"base_url": "",
	"owner": "adonovan",
	"subject": "code review 7392053: exp/ssa: a number of bug fixes.",
	"created": "2013-02-27 17:07:06.501840",
	"patchsets": [
		1,
		2001,
		4001,
		7001,
		12001
	],
	"modified": "2013-02-27 21:43:23.037230",
	"closed": true,
	"issue": 7392053
}