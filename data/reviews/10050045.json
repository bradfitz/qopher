{
	"description": "cmd/go: add coverage analysis\nThis feature is not yet ready for real use. The CL marks a bite-sized\npiece that is ready for review. TODOs that remain:\n        provide control over output\n        produce output without setting -v\n        make work on reflect, sync and time packages\n                (fail now due to link errors caused by inlining)\n        better documentation\nAlmost all packages work now, though, if clumsily; try:\n        go test -v -cover=count encoding/binary",
	"cc": [
		"rsc@golang.org",
		"gobot@golang.org",
		"golang-dev@googlegroups.com",
		"remyoudompheng@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-10 21:49:26.906180",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/10 21:49:26, r wrote:\n> Hello mailto:golang-dev@googlegroups.com,\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go\n\n\n\nWhat are these link errors? are they in the tool or are they toolchain bugs?",
			"disapproval": false,
			"date": "2013-06-10 22:25:30.454790",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Long story. Short version: dependencies of the tested code are\r\ncompiled with a function whose inline state changes when coverage\r\nanalysis is turned on, and there is an inconsistency that the linker\r\nrejects.\r\n\r\nLet's not worry about this yet; it's distracting and rare.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-10 23:00:03.592620",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=rsc (assigned by r)",
			"disapproval": false,
			"date": "2013-06-10 23:27:49.759840",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Only doc.go is here. Missing some files?",
			"disapproval": false,
			"date": "2013-06-11 05:37:52.058310",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/10050045/diff/5001/src/cmd/go/build.go\nFile src/cmd/go/build.go (right):\n\nhttps://codereview.appspot.com/10050045/diff/5001/src/cmd/go/build.go#newcode1117\nsrc/cmd/go/build.go:1117: return err\nThe easiest way to make the output handling work is to give cover a -o option and then use it here and change b.runOut to b.run. The latter knows that any output is bad output, and so it displays it appropriately.\n\nhttps://codereview.appspot.com/10050045/diff/5001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttps://codereview.appspot.com/10050045/diff/5001/src/cmd/go/test.go#newcode562\nsrc/cmd/go/test.go:562: if err := writeTestmain(filepath.Join(testDir, \"_testmain.go\"), p, ptest.coverVars); err != nil {\nI guess this is fine, but it seems like this could go back up to 508 or so where it was before, and s/ptest./p./\n\nhttps://codereview.appspot.com/10050045/diff/5001/src/cmd/go/test.go#newcode1008\nsrc/cmd/go/test.go:1008: coverDump()\nFine for now but eventually I think you'll want this in a library that can be more easily modified, like maybe testing.PrintCover.",
			"disapproval": false,
			"date": "2013-06-11 06:05:57.983890",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "oh for heaven's sake.\r\n\r\nPTAL\r\n",
			"disapproval": false,
			"date": "2013-06-11 05:53:38.034110",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "will add -o and fix that in a separate CL",
			"disapproval": false,
			"date": "2013-06-11 16:32:51.589680",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=a14bbc9436a3 ***\n\ncmd/go: add coverage analysis\nThis feature is not yet ready for real use. The CL marks a bite-sized\npiece that is ready for review. TODOs that remain:\n        provide control over output\n        produce output without setting -v\n        make work on reflect, sync and time packages\n                (fail now due to link errors caused by inlining)\n        better documentation\nAlmost all packages work now, though, if clumsily; try:\n        go test -v -cover=count encoding/binary\n\nR=rsc\nCC=gobot, golang-dev, remyoudompheng\nhttps://codereview.appspot.com/10050045",
			"disapproval": false,
			"date": "2013-06-11 16:35:13.180950",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 10050045: cmd/go: add coverage analysis",
	"created": "2013-06-10 21:49:23.398480",
	"patchsets": [
		1,
		5001,
		11001
	],
	"modified": "2013-06-11 16:35:14.435770",
	"closed": true,
	"issue": 10050045
}