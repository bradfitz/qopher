{
	"description": "crypto/elliptic: add constant-time, P-256 implementation.\n\nOn my 64-bit machine, despite being 32-bit code, fixed-base\nmultiplications are 7.1x faster and arbitary multiplications are 2.6x\nfaster.\n\nIt is difficult to review this change. However, the code is essentially\nthe same as code that has been open-sourced in Chromium. There it has\nbeen successfully performing P-256 operations for several months on\nmany machines so the arithmetic of the code should be sound.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-06-25 18:41:58.449190",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThe tests look good. I trust you on the code given that the tests work.\n\nhttps://codereview.appspot.com/10551044/diff/4002/src/pkg/crypto/elliptic/elliptic_test.go\nFile src/pkg/crypto/elliptic/elliptic_test.go (right):\n\nhttps://codereview.appspot.com/10551044/diff/4002/src/pkg/crypto/elliptic/elliptic_test.go#newcode329\nsrc/pkg/crypto/elliptic/elliptic_test.go:329: for i, e := range p224BaseMultTests {\nIs there any worry that the numbers you're testing with, being 224-bit numbers, won't provoke important cases in the implementation? Is it worth adding some 256-bit tests?\n\nhttps://codereview.appspot.com/10551044/diff/4002/src/pkg/crypto/elliptic/elliptic_test.go#newcode418\nsrc/pkg/crypto/elliptic/elliptic_test.go:418: params := p256.Params()\nDoes this compile? I don't see where params is used.",
			"disapproval": false,
			"date": "2013-06-25 21:06:09.545090",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3a9551481ad1 ***\n\ncrypto/elliptic: add constant-time, P-256 implementation.\n\nOn my 64-bit machine, despite being 32-bit code, fixed-base\nmultiplications are 7.1x faster and arbitary multiplications are 2.6x\nfaster.\n\nIt is difficult to review this change. However, the code is essentially\nthe same as code that has been open-sourced in Chromium. There it has\nbeen successfully performing P-256 operations for several months on\nmany machines so the arithmetic of the code should be sound.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/10551044\n\nhttps://codereview.appspot.com/10551044/diff/4002/src/pkg/crypto/elliptic/elliptic_test.go\nFile src/pkg/crypto/elliptic/elliptic_test.go (right):\n\nhttps://codereview.appspot.com/10551044/diff/4002/src/pkg/crypto/elliptic/elliptic_test.go#newcode329\nsrc/pkg/crypto/elliptic/elliptic_test.go:329: for i, e := range p224BaseMultTests {\nOn 2013/06/25 21:06:09, rsc wrote:\n> Is there any worry that the numbers you're testing with, being 224-bit numbers,\n> won't provoke important cases in the implementation? Is it worth adding some\n> 256-bit tests?\n\nThat's a fair point. I'll use the p224 values plus a huge value for P-256 to check that reduction in the scalar group is working.\n\nhttps://codereview.appspot.com/10551044/diff/4002/src/pkg/crypto/elliptic/elliptic_test.go#newcode418\nsrc/pkg/crypto/elliptic/elliptic_test.go:418: params := p256.Params()\nOn 2013/06/25 21:06:09, rsc wrote:\n> Does this compile? I don't see where params is used.\n\nSorry, that was me failing to hg upload after some quick benchmarking. Fixed.",
			"disapproval": false,
			"date": "2013-06-27 17:31:26.714020",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 10551044: crypto/elliptic: add constant-time, P-256 implementation.",
	"created": "2013-06-25 18:23:48.436290",
	"patchsets": [
		1,
		3001,
		4001,
		4002,
		11001
	],
	"modified": "2013-06-27 17:31:28.023180",
	"closed": true,
	"issue": 10551044
}