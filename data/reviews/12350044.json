{
	"description": "build: on OS X 10.8 and later, use clang instead of gcc\n\nFixes issue 5822.\nWill no doubt cause other problems, but Apple has forced our hand.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"khr@google.com"
	],
	"reviewers": [
		"franciscossouza@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-02 16:08:33.624690",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn all versions? Even 10.6? Did clang work then, having all the flags we\r\nneed?\r\n On Aug 2, 2013 9:08 AM, <rsc@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> build: on OS X use clang instead of gcc\r\n>\r\n> Fixes issue 5822.\r\n> Will no doubt cause other problems, but Apple has forced our hand.\r\n>\r\n> Please review this at https://codereview.appspot.**com/12350044/<https://codereview.appspot.com/12350044/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/dist/build.c\r\n>   M src/cmd/go/build.go\r\n>\r\n>\r\n> Index: src/cmd/dist/build.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/dist/build.c\r\n> +++ b/src/cmd/dist/build.c\r\n> @@ -617,8 +617,17 @@\r\n>         // set up gcc command line on first run.\r\n>         if(gccargs.len == 0) {\r\n>                 xgetenv(&b, \"CC\");\r\n> -               if(b.len == 0)\r\n> -                       bprintf(&b, \"gcc\");\r\n> +               if(b.len == 0) {\r\n> +                       // Use clang on OS X, because gcc is deprecated\r\n> there.\r\n> +                       // Xcode for OS X 10.9 Mavericks will ship a fake\r\n> \"gcc\" binary that\r\n> +                       // actually runs clang. We prepare different\r\n> command\r\n> +                       // lines for the two binaries, so it matters what\r\n> we call it.\r\n> +                       // See golang.org/issue/5822.\r\n> +                       if(streq(gohostos, \"darwin\")\r\n> +                               bprintf(&b, \"clang\");\r\n> +                       else\r\n> +                               bprintf(&b, \"gcc\");\r\n> +               }\r\n>                 clang = contains(bstr(&b), \"clang\");\r\n>                 splitfields(&gccargs, bstr(&b));\r\n>                 for(i=0; i<nelem(proto_gccargs); i++)\r\n> Index: src/cmd/go/build.go\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/go/build.go\r\n> +++ b/src/cmd/go/build.go\r\n> @@ -1771,6 +1771,19 @@\r\n>         return b.run(p.Dir, p.ImportPath, nil, cmd, \"-o\", out, obj, flags)\r\n>  }\r\n>\r\n> +var defaultCC = \"gcc\"\r\n> +\r\n> +func init() {\r\n> +       // Use clang on OS X, because gcc is deprecated there.\r\n> +       // Xcode for OS X 10.9 Mavericks will ship a fake \"gcc\" binary that\r\n> +       // actually runs clang. We prepare different command\r\n> +       // lines for the two binaries, so it matters what we call it.\r\n> +       // See golang.org/issue/5822.\r\n> +       if runtime.GOOS == \"darwin\" {\r\n> +               defaultCC = \"clang\"\r\n> +       }\r\n> +}\r\n> +\r\n>  // gccCmd returns a gcc command line prefix\r\n>  func (b *builder) gccCmd(objdir string) []string {\r\n>         return b.ccompilerCmd(\"CC\", \"gcc\", objdir)\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-02 16:12:28.515130",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I have no idea what the version story is. We may need to be more precise\r\nabout that. For now I want to see what breaks.\r\n",
			"disapproval": false,
			"date": "2013-08-02 17:23:49.991820",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Breaks on 10.8 too:\r\n\r\n% clang --version\r\nApple LLVM version 4.2 (clang-425.0.24) (based on LLVM 3.2svn)\r\nTarget: x86_64-apple-darwin12.4.0\r\nThread model: posix\r\n% ./make.bash\r\n# Building C bootstrap tool.\r\ncmd/dist\r\ncmd/dist/build.c:642:6: error: variable 'clang' is uninitialized when\r\nused here [-Werror,-Wuninitialized]\r\n                if(clang) {\r\n                   ^~~~~\r\ncmd/dist/build.c:592:39: note: initialize the variable 'clang' to\r\nsilence this warning\r\n        bool islib, ispkg, isgo, stale, clang;\r\n                                             ^\r\n                                              = 0\r\n1 error generated.\r\n\r\n\r\n\r\nOn Fri, Aug 2, 2013 at 3:59 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> Breaks on Linux:\r\n>\r\n> # Building C bootstrap tool.\r\n> cmd/dist\r\n> cmd/dist/build.c: In function 'install':\r\n> cmd/dist/build.c:642:5: error: 'clang' may be used uninitialized in this\r\n> function [-Werror=uninitialized]\r\n> cc1: all warnings being treated as errors\r\n> Build complete, duration 1.367061013s. Result: error: exit status 1\r\n>\r\n>\r\n>\r\n> On Fri, Aug 2, 2013 at 11:58 AM, <rsc@golang.org> wrote:\r\n>>\r\n>> *** Submitted as\r\n>> https://code.google.com/p/go/source/detail?r=ede1d772501b ***\r\n>>\r\n>> build: on OS X 10.8 and later, use clang instead of gcc\r\n>>\r\n>>\r\n>> Fixes issue 5822.\r\n>> Will no doubt cause other problems, but Apple has forced our hand.\r\n>>\r\n>> R=golang-dev, bradfitz, khr\r\n>> CC=golang-dev\r\n>> https://codereview.appspot.com/12350044\r\n>>\r\n>>\r\n>> https://codereview.appspot.com/12350044/\r\n>\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n\r\n\r\n\r\n-- \r\nFrancisco Souza\r\n",
			"disapproval": false,
			"date": "2013-08-02 19:13:20.880620",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Go for it.  I have a 10.6 machine at home still which I can test later.\r\n\r\n\r\n\r\nOn Fri, Aug 2, 2013 at 10:23 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> I have no idea what the version story is. We may need to be more precise\r\n> about that. For now I want to see what breaks.\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-02 17:33:40.380140",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-02 17:46:41.325420",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\r\n\r\nAdded logic to cmd/cgo and disabled the cgo -godefs test.\r\n",
			"disapproval": false,
			"date": "2013-08-02 17:46:52.656460",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I get errors when running this on 10.6:\r\n\r\n# crypto/x509\r\n/var/folders/a0/a0ATNr3xHliked0p+c3lIU+++TI/-Tmp-/go-build255322058/crypto/x509/_obj/_cgo_gotypes.go:14:\r\nsyntax error: unexpected type, expecting name\r\n/var/folders/a0/a0ATNr3xHliked0p+c3lIU+++TI/-Tmp-/go-build255322058/crypto/x509/_obj/_cgo_gotypes.go:26:\r\nsyntax error: unexpected .\r\n:7[/var/folders/a0/a0ATNr3xHliked0p+c3lIU+++TI/-Tmp-/go-build255322058/crypto/x509/_obj/_cgo_gotypes.go:34]:\r\nsyntax error: unexpected type, expecting name\r\n:8[/var/folders/a0/a0ATNr3xHliked0p+c3lIU+++TI/-Tmp-/go-build255322058/crypto/x509/_obj/_cgo_gotypes.go:35]:\r\nsyntax error: unexpected type, expecting name\r\n\r\n\r\n\r\nOn Fri, Aug 2, 2013 at 10:46 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> PTAL\r\n>\r\n> Added logic to cmd/cgo and disabled the cgo -godefs test.\r\n>\r\n>  --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-02 17:59:30.887470",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\r\n\r\nClang is now only used as the default on OS X 10.8 and later.\r\n",
			"disapproval": false,
			"date": "2013-08-02 18:43:58.726030",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"khr@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-02 18:55:53.631630",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"khr@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ede1d772501b ***\n\nbuild: on OS X 10.8 and later, use clang instead of gcc\n\nFixes issue 5822.\nWill no doubt cause other problems, but Apple has forced our hand.\n\nR=golang-dev, bradfitz, khr\nCC=golang-dev\nhttps://codereview.appspot.com/12350044",
			"disapproval": false,
			"date": "2013-08-02 18:58:34.284040",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Breaks on Linux:\r\n\r\n# Building C bootstrap tool.\r\ncmd/dist\r\ncmd/dist/build.c: In function 'install':\r\ncmd/dist/build.c:642:5: error: 'clang' may be used uninitialized in this\r\nfunction [-Werror=uninitialized]\r\ncc1: all warnings being treated as errors\r\nBuild complete, duration 1.367061013s. Result: error: exit status 1\r\n\r\n\r\n\r\nOn Fri, Aug 2, 2013 at 11:58 AM, <rsc@golang.org> wrote:\r\n\r\n> *** Submitted as\r\n> https://code.google.com/p/go/**source/detail?r=ede1d772501b<https://code.google.com/p/go/source/detail?r=ede1d772501b>***\r\n>\r\n> build: on OS X 10.8 and later, use clang instead of gcc\r\n>\r\n>\r\n> Fixes issue 5822.\r\n> Will no doubt cause other problems, but Apple has forced our hand.\r\n>\r\n> R=golang-dev, bradfitz, khr\r\n> CC=golang-dev\r\n> https://codereview.appspot.**com/12350044<https://codereview.appspot.com/12350044>\r\n>\r\n>\r\n> https://codereview.appspot.**com/12350044/<https://codereview.appspot.com/12350044/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-02 18:59:47.233260",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fixing, thanks.\r\n",
			"disapproval": false,
			"date": "2013-08-02 19:11:10.617730",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 12350044: build: on OS X use clang instead of gcc",
	"created": "2013-08-02 16:08:12.297360",
	"patchsets": [
		1,
		3001,
		6001,
		10001,
		13001,
		17001,
		23001,
		28001
	],
	"modified": "2013-08-02 19:13:21.101740",
	"closed": true,
	"issue": 12350044
}