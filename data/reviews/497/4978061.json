{
	"description": "cgo: cgo to use GOARCH from the environment, not runtime.GOARCH (otherwise it results in necessity of having 8cgo and 6cgo)",
	"cc": [
		"rsc@golang.org",
		"adg@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"jp@webmaster.ms",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4978061/diff/5001/src/cmd/cgo/gcc.go\nFile src/cmd/cgo/gcc.go (right):\n\nhttp://codereview.appspot.com/4978061/diff/5001/src/cmd/cgo/gcc.go#newcode691\nsrc/cmd/cgo/gcc.go:691: switch os.Getenv(\"GOARCH\") {\nOn 2011/09/12 04:41:20, adg wrote:\n> and what if it's not set?\n> \n> it should default to runtime.GOARCH\n\ncgo does not work unless $GOARCH is set\n\nfrom src\\cmd\\cgo\\main.go:\n\n  arch := os.Getenv(\"GOARCH\")\n  if arch == \"\" {\n    fatalf(\"$GOARCH is not set\")\n  }",
			"disapproval": false,
			"date": "2011-09-12 08:48:48.987077",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jp@webmaster.ms",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "It is true: cgo right now depends on $GOOS and $GOARCH\nhaving been set by being run from inside make.\nThere are other references to runtime.GOOS and runtime.GOARCH\nin this file that should also be os.Getenv instead.  Please add\na global\n\nvar goarch, goos string\n\nand then set them in main.go (where the arch := is).\nThen you can use them in place of the runtime references.\n\nThanks.",
			"disapproval": false,
			"date": "2011-09-12 17:09:45.324107",
			"approval": false
		},
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"jp@webmaster.ms",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-10 11:27:06.077560",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jp@webmaster.ms",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4978061/diff/5001/src/cmd/cgo/gcc.go\nFile src/cmd/cgo/gcc.go (right):\n\nhttp://codereview.appspot.com/4978061/diff/5001/src/cmd/cgo/gcc.go#newcode691\nsrc/cmd/cgo/gcc.go:691: switch os.Getenv(\"GOARCH\") {\nand what if it's not set?\n\nit should default to runtime.GOARCH",
			"disapproval": false,
			"date": "2011-09-12 04:41:20.401664",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jp@webmaster.ms",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4978061/diff/13001/src/cmd/cgo/main.go\nFile src/cmd/cgo/main.go (right):\n\nhttp://codereview.appspot.com/4978061/diff/13001/src/cmd/cgo/main.go#newcode126\nsrc/cmd/cgo/main.go:126: var goarch = os.Getenv(\"GOARCH\")\nA bit of a nit, but I would prefer it if these were\n\nvar goarch, goos string\n\nand the os.Getenv calls were in main. Just to stay the temptation of using these variables before they're properly initialized.",
			"disapproval": false,
			"date": "2011-09-16 00:56:19.175695",
			"approval": false
		},
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"jp@webmaster.ms",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-16 00:30:49.853313",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 16 September 2011 13:51,  <jp@webmaster.ms> wrote:\n> On 2011/09/16 03:25:55, adg wrote:\n>\n>\n>> last one :)\n>\n>> http://codereview.appspot.com/4978061/diff/19002/src/cmd/cgo/main.go\n>> File src/cmd/cgo/main.go (right):\n>\n>\n> http://codereview.appspot.com/4978061/diff/19002/src/cmd/cgo/main.go#newcode168\n>>\n>> src/cmd/cgo/main.go:168: goarch = os.Getenv(\"GOARCH\")\n>> this is more idiomatic and clearer\n>\n>> goarch = runtime.GOARCH\n>> if s := os.Getenv(\"GOARCH\"); s != \"\" {\n>> \u00a0 goarch = s\n>> }\n>> goos = runtime.GOOS\n>> if s := os.Getenv(\"GOOS\"); s != \"\" {\n>> \u00a0 goos = s\n>> }\n>\n> I disagree that this is clearer.\n> It does not look like the defaults for Getenv's fail\n\nIt makes a lot of sense when you think of it as \"runtime provides the\ndefault that the environment variables may override.\"\n\nBut I won't force the issue.\n",
			"disapproval": false,
			"date": "2011-09-16 03:59:08.008951",
			"approval": false
		},
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"jp@webmaster.ms",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/16 00:56:19, adg wrote:\n> http://codereview.appspot.com/4978061/diff/13001/src/cmd/cgo/main.go\n> File src/cmd/cgo/main.go (right):\n> \n> http://codereview.appspot.com/4978061/diff/13001/src/cmd/cgo/main.go#newcode126\n> src/cmd/cgo/main.go:126: var goarch = os.Getenv(\"GOARCH\")\n> A bit of a nit, but I would prefer it if these were\n> \n> var goarch, goos string\n> \n> and the os.Getenv calls were in main. Just to stay the temptation of using these\n> variables before they're properly initialized.\n\nPTAL",
			"disapproval": false,
			"date": "2011-09-16 01:19:07.910708",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jp@webmaster.ms",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "last one :)\n\nhttp://codereview.appspot.com/4978061/diff/19002/src/cmd/cgo/main.go\nFile src/cmd/cgo/main.go (right):\n\nhttp://codereview.appspot.com/4978061/diff/19002/src/cmd/cgo/main.go#newcode168\nsrc/cmd/cgo/main.go:168: goarch = os.Getenv(\"GOARCH\")\nthis is more idiomatic and clearer\n\ngoarch = runtime.GOARCH\nif s := os.Getenv(\"GOARCH\"); s != \"\" {\n  goarch = s\n}\ngoos = runtime.GOOS\nif s := os.Getenv(\"GOOS\"); s != \"\" {\n  goos = s\n}",
			"disapproval": false,
			"date": "2011-09-16 03:25:55.034119",
			"approval": false
		},
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"jp@webmaster.ms",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/16 03:25:55, adg wrote:\n\n\n> last one :)\n> \n> http://codereview.appspot.com/4978061/diff/19002/src/cmd/cgo/main.go\n> File src/cmd/cgo/main.go (right):\n> \n> http://codereview.appspot.com/4978061/diff/19002/src/cmd/cgo/main.go#newcode168\n> src/cmd/cgo/main.go:168: goarch = os.Getenv(\"GOARCH\")\n> this is more idiomatic and clearer\n> \n> goarch = runtime.GOARCH\n> if s := os.Getenv(\"GOARCH\"); s != \"\" {\n>   goarch = s\n> }\n> goos = runtime.GOOS\n> if s := os.Getenv(\"GOOS\"); s != \"\" {\n>   goos = s\n> }\n\nI disagree that this is clearer. \nIt does not look like the defaults for Getenv's fail\n\nMaybe something like this, if you want idiomatic code:\n\nif s := os.Getenv(\"GOARCH\"); s != \"\" {\n  goarch = s\n} else {\n  goarch = runtime.GOARCH\n}\n\nor, the shortest:\n\nif goarch = os.Getenv(\"GOARCH\"); goarch != \"\" {\n  goarch = runtime.GOARCH\n}",
			"disapproval": false,
			"date": "2011-09-16 03:51:58.543481",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-09-19 13:50:42.279443",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jp@webmaster.ms",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=48ca05dad153 ***\n\ncgo: cgo to use GOARCH from the environment, not runtime.GOARCH (otherwise it results in necessity of having 8cgo and 6cgo)\n\nR=rsc, adg\nCC=golang-dev\nhttp://codereview.appspot.com/4978061\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-09-19 15:51:02.846550",
			"approval": false
		}
	],
	"owner_email": "jp@webmaster.ms",
	"private": false,
	"base_url": "",
	"owner": "jp",
	"subject": "code review 4978061: cgo: cgo to use GOARCH from the environment, not runtim...",
	"created": "2011-09-10 11:26:11.137878",
	"patchsets": [
		1,
		2001,
		5001,
		10002,
		13001,
		13003,
		19002,
		23001
	],
	"modified": "2011-09-24 00:03:24.978732",
	"closed": true,
	"issue": 4978061
}