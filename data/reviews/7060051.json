{
	"description": "exp/locale/collate: added functionality for sorting.\nEliminates the need for the user to fiddle with keys.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"r@golang.org"
	],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2013-01-07 19:27:08.939930",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7060051/diff/2001/src/pkg/exp/locale/collate/sort.go\nFile src/pkg/exp/locale/collate/sort.go (right):\n\nhttps://codereview.appspot.com/7060051/diff/2001/src/pkg/exp/locale/collate/sort.go#newcode65\nsrc/pkg/exp/locale/collate/sort.go:65: // A type that satisfies Lister can be sorted by Collator's Sort method.\ns/type that satisfies //\n\nhttps://codereview.appspot.com/7060051/diff/2001/src/pkg/exp/locale/collate/sort.go#newcode73\nsrc/pkg/exp/locale/collate/sort.go:73: // Sort uses sort.Sort to sort the strings represented by a using the rules of c.\nPerhaps name the variable l or x?\nVariables named a look like the English article in doc comments.\n\nhttps://codereview.appspot.com/7060051/diff/2001/src/pkg/exp/locale/collate/sort.go#newcode83\nsrc/pkg/exp/locale/collate/sort.go:83: // Strings sorts a using the rules of c.\ns/a/l/\nor x",
			"disapproval": false,
			"date": "2013-01-18 21:59:31.793760",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7060051/diff/2001/src/pkg/exp/locale/collate/sort.go\nFile src/pkg/exp/locale/collate/sort.go (right):\n\nhttps://codereview.appspot.com/7060051/diff/2001/src/pkg/exp/locale/collate/sort.go#newcode65\nsrc/pkg/exp/locale/collate/sort.go:65: // A type that satisfies Lister can be sorted by Collator's Sort method.\nOn 2013/01/18 21:59:31, rsc wrote:\n> s/type that satisfies //\n\nDone.\n\nhttps://codereview.appspot.com/7060051/diff/2001/src/pkg/exp/locale/collate/sort.go#newcode73\nsrc/pkg/exp/locale/collate/sort.go:73: // Sort uses sort.Sort to sort the strings represented by a using the rules of c.\nOn 2013/01/18 21:59:31, rsc wrote:\n> Perhaps name the variable l or x?\n> Variables named a look like the English article in doc comments.\n\nDone.\n\nhttps://codereview.appspot.com/7060051/diff/2001/src/pkg/exp/locale/collate/sort.go#newcode83\nsrc/pkg/exp/locale/collate/sort.go:83: // Strings sorts a using the rules of c.\nOn 2013/01/18 21:59:31, rsc wrote:\n> s/a/l/\n> or x\n\nDone.",
			"disapproval": false,
			"date": "2013-01-23 13:11:01.980630",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=7f25ce26f38f ***\n\nexp/locale/collate: added functionality for sorting.\nEliminates the need for the user to fiddle with keys.\n\nR=rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7060051",
			"disapproval": false,
			"date": "2013-01-23 13:16:26.098020",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort.go\nFile src/pkg/exp/locale/collate/sort.go (right):\n\nhttps://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort.go#newcode38\nsrc/pkg/exp/locale/collate/sort.go:38: func (s *sorter) clean() {\nwhere is this used?\n\nhttps://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort.go#newcode65\nsrc/pkg/exp/locale/collate/sort.go:65: // A Lister can be sorted by Collator's Sort method.\nwhy is this a Lister? odd name.\n\nhttps://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort.go#newcode83\nsrc/pkg/exp/locale/collate/sort.go:83: // Strings sorts x using the rules of c.\nrephrase to be like the comment for the previous method\n\nhttps://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort.go#newcode84\nsrc/pkg/exp/locale/collate/sort.go:84: func (c *Collator) Strings(x []string) {\nshould this be called SortStrings?\n\nhttps://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort_test.go\nFile src/pkg/exp/locale/collate/sort_test.go (right):\n\nhttps://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort_test.go#newcode16\nsrc/pkg/exp/locale/collate/sort_test.go:16: \"ad\",\nput \"ab\" in here for fun.\n\nhttps://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort_test.go#newcode41\nsrc/pkg/exp/locale/collate/sort_test.go:41: strings := []string{\nstrings := sorter {\n}\n\nthen you don't need the conversion below\n\nby analogy with sort.StringSlice etc., you might want to export this type.",
			"disapproval": false,
			"date": "2013-02-21 00:08:29.693870",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "changed added in CL 7402048.\n\nSee comments on the use of Lister, though.\n\nhttps://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort.go\nFile src/pkg/exp/locale/collate/sort.go (right):\n\nhttps://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort.go#newcode38\nsrc/pkg/exp/locale/collate/sort.go:38: func (s *sorter) clean() {\ngood catch.  no longer used.\nOn 2013/02/21 00:08:29, r wrote:\n> where is this used?\n\nhttps://codereview.appspot.com/7060051/diff/8001/src/pkg/exp/locale/collate/sort.go#newcode65\nsrc/pkg/exp/locale/collate/sort.go:65: // A Lister can be sorted by Collator's Sort method.\nOn 2013/02/21 00:08:29, r wrote:\n> why is this a Lister? odd name.\nIt is not really a sorter, as it doesn't compare.  It merely provides access to text in a list and allows for swapping.  Any suggestions for another name?",
			"disapproval": false,
			"date": "2013-02-21 17:16:39.967330",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i can't think of one, so leave it as is but please explain the name in\r\nthe comment.\r\n",
			"disapproval": false,
			"date": "2013-02-21 18:57:10.455500",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 7060051: exp/locale/collate: added functionality for sorting.",
	"created": "2013-01-07 19:26:38.350430",
	"patchsets": [
		1,
		2001,
		8001
	],
	"modified": "2013-02-21 17:16:40.274150",
	"closed": true,
	"issue": 7060051
}