{
	"description": "runtime: clarify comment for m->locked",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"dsymonds@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-22 11:08:17.092670",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM with my version if that's OK\n\nhttps://codereview.appspot.com/11671043/diff/6001/src/pkg/runtime/runtime.h\nFile src/pkg/runtime/runtime.h (right):\n\nhttps://codereview.appspot.com/11671043/diff/6001/src/pkg/runtime/runtime.h#newcode367\nsrc/pkg/runtime/runtime.h:367: // e.g. lock for cgo call can be inside of main goroutine initialization lock.\nhow about this:\n\n// The m->locked word holds two pieces of state counting active calls to LockOSThread.\n// The low bit (LockExternal) is a boolean reporting whether any external call is active.\n// External locks are not recursive; a second lock is silently ignored.\n// The upper bits of m->lockedcount record the nesting depth of calls to lockOSThread\n// (counting up by LockInternal) , popped by unlockOSThread (counting  down by LockInternal.\n// Internal locks can be recursive. For instance, a lock for cgo can occur while the main\n// goroutine is holding the lock during the innitialization phase.",
			"disapproval": false,
			"date": "2013-07-22 11:24:58.916460",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "s/innitialization/initialization/",
			"disapproval": false,
			"date": "2013-07-22 11:25:13.084680",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/11671043/diff/11001/src/pkg/runtime/runtime.h\nFile src/pkg/runtime/runtime.h (right):\n\nhttps://codereview.appspot.com/11671043/diff/11001/src/pkg/runtime/runtime.h#newcode362\nsrc/pkg/runtime/runtime.h:362: // The m->locked word holds two pieces of state counting active calls to LockOSThread/lockOSThread.\nI've changed \"LockOSThread\" to \"LockOSThread/lockOSThread\", because LockOSThread refers only to external locks.\n\nhttps://codereview.appspot.com/11671043/diff/11001/src/pkg/runtime/runtime.h#newcode363\nsrc/pkg/runtime/runtime.h:363: // The low bit (LockExternal) is a boolean reporting whether any LockOSThread call is active.\nI've changed \"external\" to \"LockOSThread\", otherwise it's unclear what is \"external call\".",
			"disapproval": false,
			"date": "2013-07-22 11:45:52.520230",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-22 12:29:43.467290",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=86a2e482982f ***\n\nruntime: clarify comment for m->locked\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/11671043",
			"disapproval": false,
			"date": "2013-07-22 12:37:49.799890",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks, this is much better.",
			"disapproval": false,
			"date": "2013-07-23 00:48:59.651740",
			"approval": true
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 11671043: runtime: clarify comment for m->locked",
	"created": "2013-07-22 11:08:02.960190",
	"patchsets": [
		1,
		3001,
		6001,
		11001,
		17001
	],
	"modified": "2013-07-23 00:48:59.900590",
	"closed": true,
	"issue": 11671043
}