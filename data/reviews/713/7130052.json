{
	"description": "cmd/go: suppress extraneous newlines in list\n\nBefore:\n$ go list -f '{{range .Deps}}{{println $.Name .}}{{end}}' math time\nmath runtime\nmath unsafe\n\ntime errors\ntime runtime\ntime sync\ntime sync/atomic\ntime syscall\ntime unsafe\n\n$\n\nAfter:\n$ go list -f '{{range .Deps}}{{println $.Name .}}{{end}}' math time\nmath runtime\nmath unsafe\ntime errors\ntime runtime\ntime sync\ntime sync/atomic\ntime syscall\ntime unsafe\n$",
	"cc": [
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jan 18, 2013 at 8:14 AM, Anthony Martin <ality@pbrane.org> wrote:\r\n\r\n> minux <minux.ma@gmail.com> once said:\r\n> > I made a similar suggestion in\r\n> https://codereview.appspot.com/6680044#msg3\r\n> > however, it was rejected, and instead, a function named \"join\" is\r\n> > introduced to\r\n> > solve this problem.\r\n>\r\n> I'm not very familiar with text/template so how do you\r\n> capture the output of a {{range}} and pass it to join?\r\n>\r\nI don't think it's possible. and that's part of reason I proposed this in\r\nthat CL.\r\n",
			"disapproval": false,
			"date": "2013-01-18 09:26:28.274400",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-17 00:09:36.323750",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I made a similar suggestion in https://codereview.appspot.com/6680044#msg3\r\nhowever, it was rejected, and instead, a function named \"join\" is\r\nintroduced to\r\nsolve this problem.\r\n",
			"disapproval": false,
			"date": "2013-01-17 17:56:04.078040",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "minux <minux.ma@gmail.com> once said:\r\n> I made a similar suggestion in https://codereview.appspot.com/6680044#msg3\r\n> however, it was rejected, and instead, a function named \"join\" is\r\n> introduced to\r\n> solve this problem.\r\n\r\nI'm not very familiar with text/template so how do you\r\ncapture the output of a {{range}} and pass it to join?\r\n\r\n  Anthony\r\n",
			"disapproval": false,
			"date": "2013-01-18 00:15:00.709880",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This seems fine. I like this better than the counting writer.\n\nhttps://codereview.appspot.com/7130052/diff/5001/src/cmd/go/list.go\nFile src/cmd/go/list.go (right):\n\nhttps://codereview.appspot.com/7130052/diff/5001/src/cmd/go/list.go#newcode122\nsrc/cmd/go/list.go:122: out.Reset()\ndelete\n\nhttps://codereview.appspot.com/7130052/diff/5001/src/cmd/go/list.go#newcode127\nsrc/cmd/go/list.go:127: if out.NeedNL() {\nout.Write([]byte{'\\n'})\n\nhttps://codereview.appspot.com/7130052/diff/5001/src/cmd/go/list.go#newcode148\nsrc/cmd/go/list.go:148: wrote bool\nDelete.\n\nhttps://codereview.appspot.com/7130052/diff/5001/src/cmd/go/list.go#newcode154\nsrc/cmd/go/list.go:154: w: bufio.NewWriter(w),\nlast: '\\n'",
			"disapproval": false,
			"date": "2013-01-18 21:53:04.582890",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-19 03:35:15.727730",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-22 22:04:57.742140",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=6b1a1bb92ac2 ***\n\ncmd/go: suppress extraneous newlines in list\n\nBefore:\n$ go list -f '{{range .Deps}}{{println $.Name .}}{{end}}' math time\nmath runtime\nmath unsafe\n\ntime errors\ntime runtime\ntime sync\ntime sync/atomic\ntime syscall\ntime unsafe\n\n$\n\nAfter:\n$ go list -f '{{range .Deps}}{{println $.Name .}}{{end}}' math time\nmath runtime\nmath unsafe\ntime errors\ntime runtime\ntime sync\ntime sync/atomic\ntime syscall\ntime unsafe\n$\n\nR=minux.ma, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7130052\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-22 22:05:20.115150",
			"approval": false
		}
	],
	"owner_email": "ality@pbrane.org",
	"private": false,
	"base_url": "",
	"owner": "ality",
	"subject": "code review 7130052: cmd/go: suppress extraneous newlines in list",
	"created": "2013-01-17 00:09:05.060830",
	"patchsets": [
		1,
		2001,
		5001,
		6002,
		9002
	],
	"modified": "2013-01-23 01:19:32.916000",
	"closed": true,
	"issue": 7130052
}