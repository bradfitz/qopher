{
	"description": "runtime: local allocation in mprof.goc\n\nBinary data in mprof.goc may prevent the garbage collector from freeing\nmemory blocks. This patch replaces all calls to runtime\u00b7mallocgc() with\ncalls to an allocator private to mprof.goc, thus making the private\nmemory invisible to the garbage collector. The addrhash variable is\nmoved outside of the .bss section.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dvyukov@google.com",
		"rsc@golang.org",
		"minux.ma@gmail.com",
		"dave@cheney.net",
		"remyoudompheng@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: rsc, dvyukov, dfc, minux, remyoudompheng),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-01-19 12:58:29.302520",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/19 12:58:29, atom wrote:\n> Hello mailto:golang-dev@googlegroups.com (cc: rsc, dvyukov, dfc, minux,\n> remyoudompheng),\n> \n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n\nmgc0.c will also call the function markonly() as part of precise garbage collection of hashmaps which will be submitted in a next CL.\n\nWhile markonly() contains redundant code, it seems the function cannot be removed or simplified. CL 6114046 implements a suboptimal (performance-wise) garbage collection of hashmaps, so the function markonly() may be removed or adjusted as part of a faster GC of hashmaps.",
			"disapproval": false,
			"date": "2013-01-19 13:10:37.128080",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Perhaps it will be simpler to allocate all mprof-related memory from Sys regions, then they will be automatically not scanned. No need for any special marking, etc.\n\nhttps://codereview.appspot.com/7135063/diff/1/src/pkg/runtime/mprof.goc\nFile src/pkg/runtime/mprof.goc (right):\n\nhttps://codereview.appspot.com/7135063/diff/1/src/pkg/runtime/mprof.goc#newcode518\nsrc/pkg/runtime/mprof.goc:518: for(e=addrfree; e; e=e->next) {\nall objects in addrfree list are allocated with single malloc() call, so you must not mark them all",
			"disapproval": false,
			"date": "2013-01-20 10:00:06.136380",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7135063/diff/1/src/pkg/runtime/mprof.goc\nFile src/pkg/runtime/mprof.goc (right):\n\nhttps://codereview.appspot.com/7135063/diff/1/src/pkg/runtime/mprof.goc#newcode518\nsrc/pkg/runtime/mprof.goc:518: for(e=addrfree; e; e=e->next) {\nOn 2013/01/20 10:00:06, dvyukov wrote:\n> all objects in addrfree list are allocated with single malloc() call,\n\nNot true.\n\n> so you must not mark them all\n\nIt is safe to call runtime\u00b7markobject() multiple times with arguments pointing to the same block of memory.",
			"disapproval": false,
			"date": "2013-01-20 10:24:25.832970",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/20 10:00:06, dvyukov wrote:\n> Perhaps it will be simpler to allocate all mprof-related memory from Sys\n> regions, then they will be automatically not scanned. No need for any special\n> marking, etc.\n\nIf we will agree upon that this does not constrain the future development (whatever it will be) of mprof.goc then I will reimplement this CL with calls to runtime\u00b7SysAlloc() and without any calls to mallocgc().",
			"disapproval": false,
			"date": "2013-01-20 10:58:42.883080",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "As far as I see google heap profiler frees memory only during\r\nstop/shutdown (here we can unmap all mapped memory at once) or for\r\ntemp storage (e.g. snapshots, here we can use normal heap memory since\r\nit's transient):\r\nhttp://code.google.com/p/gperftools/source/browse/trunk/src/heap-profiler.cc?spec=svn169&r=169\r\nhttp://code.google.com/p/gperftools/source/browse/trunk/src/heap-profile-table.cc\r\n\r\nOn Sun, Jan 20, 2013 at 2:58 PM,  <0xE2.0x9A.0x9B@gmail.com> wrote:\r\n> On 2013/01/20 10:00:06, dvyukov wrote:\r\n>>\r\n>> Perhaps it will be simpler to allocate all mprof-related memory from\r\n>\r\n> Sys\r\n>>\r\n>> regions, then they will be automatically not scanned. No need for any\r\n>\r\n> special\r\n>>\r\n>> marking, etc.\r\n>\r\n>\r\n> If we will agree upon that this does not constrain the future\r\n> development (whatever it will be) of mprof.goc then I will reimplement\r\n> this CL with calls to runtime\u00b7SysAlloc() and without any calls to\r\n> mallocgc().\r\n>\r\n> https://codereview.appspot.com/7135063/\r\n",
			"disapproval": false,
			"date": "2013-01-21 06:13:08.332280",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/22 14:26:56, atom wrote:\n> Hello mailto:golang-dev@googlegroups.com, mailto:dvyukov@google.com (cc: mailto:dave@cheney.net,\n> mailto:golang-dev@googlegroups.com, mailto:minux.ma@gmail.com, mailto:remyoudompheng@gmail.com,\n> mailto:rsc@golang.org),\n> \n> Please take another look.\n\nShould the code also update mstats?",
			"disapproval": false,
			"date": "2013-01-22 14:30:36.962480",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dvyukov@google.com (cc: dave@cheney.net, golang-dev@googlegroups.com, minux.ma@gmail.com, remyoudompheng@gmail.com, rsc@golang.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-22 14:26:56.348980",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dvyukov@google.com, rsc@golang.org, minux.ma@gmail.com (cc: dave@cheney.net, golang-dev@googlegroups.com, remyoudompheng@gmail.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-23 08:46:16.318510",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7135063/diff/12001/src/pkg/runtime/mprof.goc\nFile src/pkg/runtime/mprof.goc (right):\n\nhttps://codereview.appspot.com/7135063/diff/12001/src/pkg/runtime/mprof.goc#newcode30\nsrc/pkg/runtime/mprof.goc:30: allocate(uintptr size) {\nbrace on next line please",
			"disapproval": false,
			"date": "2013-01-23 04:44:19.814730",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Regarding mstats, SysAlloc will already bump mstats.sys. I'd rather not add\r\na new field to mstat until we know it's necessary.\r\n",
			"disapproval": false,
			"date": "2013-01-23 04:45:27.973870",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7135063/diff/18001/src/pkg/runtime/mprof.goc\nFile src/pkg/runtime/mprof.goc (right):\n\nhttps://codereview.appspot.com/7135063/diff/18001/src/pkg/runtime/mprof.goc#newcode19\nsrc/pkg/runtime/mprof.goc:19: // The profiler is forbidden from refering to garbage-collected memory.\nOn 2013/01/23 08:22:34, minux wrote:\n> s/refering/referring/\n\nDone.\n\nhttps://codereview.appspot.com/7135063/diff/18001/src/pkg/runtime/mprof.goc#newcode38\nsrc/pkg/runtime/mprof.goc:38: return runtime\u00b7SysAlloc(size);\nOn 2013/01/23 08:22:34, minux wrote:\n> perhaps you need to check for nil?\n\nThere are multiple places in package runtime where this chech is omitted. I suggest to submit this in a separate CL.",
			"disapproval": false,
			"date": "2013-01-23 08:47:53.059290",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dvyukov@google.com, rsc@golang.org (cc: dave@cheney.net, golang-dev@googlegroups.com, minux.ma@gmail.com, remyoudompheng@gmail.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-23 07:16:55.461690",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7135063/diff/18001/src/pkg/runtime/mprof.goc\nFile src/pkg/runtime/mprof.goc (right):\n\nhttps://codereview.appspot.com/7135063/diff/18001/src/pkg/runtime/mprof.goc#newcode19\nsrc/pkg/runtime/mprof.goc:19: // The profiler is forbidden from refering to garbage-collected memory.\ns/refering/referring/\n\nhttps://codereview.appspot.com/7135063/diff/18001/src/pkg/runtime/mprof.goc#newcode38\nsrc/pkg/runtime/mprof.goc:38: return runtime\u00b7SysAlloc(size);\nperhaps you need to check for nil?",
			"disapproval": false,
			"date": "2013-01-23 08:22:34.139540",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/23 04:45:27, rsc wrote:\n> Regarding mstats, SysAlloc will already bump mstats.sys. I'd rather not add\n> a new field to mstat until we know it's necessary.\n\nhttp://golang.org/pkg/runtime/#MemStats says that \"should be sum of XxxSys below\". The sum is already off by an amount.",
			"disapproval": false,
			"date": "2013-01-23 07:19:00.568340",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/23 07:19:00, atom wrote:\n> On 2013/01/23 04:45:27, rsc wrote:\n> > Regarding mstats, SysAlloc will already bump mstats.sys. I'd rather not add\n> > a new field to mstat until we know it's necessary.\n> \n> http://golang.org/pkg/runtime/#MemStats says that \"should be sum of XxxSys\n> below\". The sum is already off by an amount.\n\nI think there are already other such cases, e.g. GC allocates some Sys memory.",
			"disapproval": false,
			"date": "2013-01-23 07:21:13.997940",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-23 07:23:09.925850",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nhttps://codereview.appspot.com/7135063/diff/18001/src/pkg/runtime/mprof.goc\nFile src/pkg/runtime/mprof.goc (right):\n\nhttps://codereview.appspot.com/7135063/diff/18001/src/pkg/runtime/mprof.goc#newcode38\nsrc/pkg/runtime/mprof.goc:38: return runtime\u00b7SysAlloc(size);\nOn 2013/01/23 08:47:53, atom wrote:\n> On 2013/01/23 08:22:34, minux wrote:\n> > perhaps you need to check for nil?\n> \n> There are multiple places in package runtime where this chech is omitted. I\n> suggest to submit this in a separate CL.\nok. we need a thorough review of existing code for this problem.",
			"disapproval": false,
			"date": "2013-01-23 09:07:22.662750",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-30 17:01:04.378020",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=5758baae671c ***\n\nruntime: local allocation in mprof.goc\n\nBinary data in mprof.goc may prevent the garbage collector from freeing\nmemory blocks. This patch replaces all calls to runtime\u00b7mallocgc() with\ncalls to an allocator private to mprof.goc, thus making the private\nmemory invisible to the garbage collector. The addrhash variable is\nmoved outside of the .bss section.\n\nR=golang-dev, dvyukov, rsc, minux.ma\nCC=dave, golang-dev, remyoudompheng\nhttps://codereview.appspot.com/7135063\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-30 17:01:34.677000",
			"approval": false
		}
	],
	"owner_email": "0xE2.0x9A.0x9B@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "atom",
	"subject": "code review 7135063: runtime: local allocation in mprof.goc",
	"created": "2013-01-19 12:58:14.630840",
	"patchsets": [
		1,
		9001,
		12001,
		18001,
		25001
	],
	"modified": "2013-01-30 17:08:38.900850",
	"closed": true,
	"issue": 7135063
}