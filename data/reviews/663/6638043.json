{
	"description": "lib9, cmd/dist, cmd/5l: embed GOARM into cmd/5l and auto detect GOARM",
	"cc": [
		"rsc@golang.org",
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "+rsc, dfc\r\n\r\nTwo ways to auto detect GOARM.\r\n\r\n1. detect by SIGILL\r\nFirst register a signal handler, and execute one VFPv1 instruction and one\r\nVFPv3 instruction.\r\nbased on whether SIGILL kicks in and when, I can know the right value for\r\nGOARM.\r\nThis only depends on signal(2), which is Unix-specific. (Anyone working on\r\nporting to Go on ARM\r\nto non-Unix platforms?)\r\nWe can abstract signal(SIGILL, fn) as xregsigill(void(*fn)(void)); even if\r\nwe want to support Plan 9\r\nor Windows, I'm sure this functionality can be easily implemented.\r\n\r\n2. detect by parsing /proc/cpuinfo\r\njust grep for vfp and vfpv3 in Features line in /proc/cpuinfo.\r\nthe downside is that this is Linux-specific.\r\n\r\nWhich one do you prefer?\r\nI like the 1st approach (because I already get FreeBSD/ARM port ready, so I\r\nintend to avoid\r\nLinux specific things in cmd/dist).\r\n",
			"disapproval": false,
			"date": "2012-10-08 17:59:04.743450",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Oct 9, 2012 at 10:32 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> I don't understand what detect means. GOARM should report what the\r\n> binary was compiled with, not be something that changes if you copy\r\n> the binary to a new machine. It is okay for cmd/dist to pick a good\r\n> initial value, but the other code should use what dist bakes in during\r\n> make.bash. Otherwise things get very confusing very fast.\r\n>\r\nIf user doesn't give GOARM, and cmd/dist is bootstrapping on ARM system,\r\nthen it detects the feature of current system and set up a default GOARM\r\nfor it, and embed it to cmd/5l, so that the user won't need to set it later\r\nwhen using the toolchain (so that normal native-compile user won't need to\r\nbother with GOARM anymore).\r\n",
			"disapproval": false,
			"date": "2012-10-09 06:54:17.752010",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-10-08 17:49:25.271940",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't understand what detect means. GOARM should report what the\r\nbinary was compiled with, not be something that changes if you copy\r\nthe binary to a new machine. It is okay for cmd/dist to pick a good\r\ninitial value, but the other code should use what dist bakes in during\r\nmake.bash. Otherwise things get very confusing very fast.\r\n",
			"disapproval": false,
			"date": "2012-10-09 02:32:23.443050",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This looks good, and moves the GOARM detected up a level higher. Have you started to work on your follow on CL that fleshes out xgetgoarm() ? This change may be more convincing if we can try both CL's together.\n\nhttp://codereview.appspot.com/6638043/diff/11001/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttp://codereview.appspot.com/6638043/diff/11001/src/cmd/dist/build.c#newcode100\nsrc/cmd/dist/build.c:100: xgetenv(&b, \"GOARM\");\nmaybe a small comment\n\n// set goarm to $GOARM, or use the arm arch from the running host.\n\nhttp://codereview.appspot.com/6638043/diff/11001/src/cmd/dist/build.c#newcode1381\nsrc/cmd/dist/build.c:1381: xprintf(format, \"GOCHAR\", gochar);\nFrom memory rsc said always show this value, and default to 6.",
			"disapproval": false,
			"date": "2012-10-10 09:02:58.996810",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Russ, FYI, this is the related golang-dev post:\nhttps://groups.google.com/forum/#!msg/golang-dev/WqJuNnZr8pw/YkgFEz3MJeAJ\n\nAnd this CL implements your suggestion in that email (without GOARM\nauto detection).",
			"disapproval": false,
			"date": "2012-10-09 18:55:35.956690",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/10 09:02:58, dfc wrote:\n> This looks good, and moves the GOARM detected up a level higher. Have you\n> started to work on your follow on CL that fleshes out xgetgoarm() ? This change\n> may be more convincing if we can try both CL's together.\nOK, Patch Set 8 contains all required code for GOARM auto detection.\n\nI've tried \"dist env\" on ARM926EJ-S(no VFP), ARM1136JF-S (VFPv2) and\nCortex-A8 (VFPv3), so I think it's working.",
			"disapproval": false,
			"date": "2012-10-20 10:47:13.097660",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but switch it back to -O2\n\nhttps://codereview.appspot.com/6638043/diff/17002/src/cmd/dist/arm.c\nFile src/cmd/dist/arm.c (right):\n\nhttps://codereview.appspot.com/6638043/diff/17002/src/cmd/dist/arm.c#newcode8\nsrc/cmd/dist/arm.c:8: char *xgetgoarm(void) {\nxgetgoarm on next line\n{ on next line\n\nhttps://codereview.appspot.com/6638043/diff/17002/src/cmd/dist/arm.c#newcode16\nsrc/cmd/dist/arm.c:16: xgetgoarm(void) {\n{ on next line\n\nhttps://codereview.appspot.com/6638043/diff/17002/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttps://codereview.appspot.com/6638043/diff/17002/src/cmd/dist/build.c#newcode399\nsrc/cmd/dist/build.c:399: \"-O0\",\n?",
			"disapproval": false,
			"date": "2012-10-21 21:09:17.074510",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=65241fa50264 ***\n\nlib9, cmd/dist, cmd/5l: embed GOARM into cmd/5l and auto detect GOARM\n\nR=rsc, dave\nCC=golang-dev\nhttp://codereview.appspot.com/6638043",
			"disapproval": false,
			"date": "2012-10-22 06:26:49.486690",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6638043: lib9, cmd/dist, cmd/5l: embed GOARM setting into cmd/5l",
	"created": "2012-10-08 17:08:53.735160",
	"patchsets": [
		1,
		2001,
		4001,
		6001,
		11001,
		8008,
		13002,
		17002,
		27001,
		28001
	],
	"modified": "2012-10-22 06:26:52.671920",
	"closed": true,
	"issue": 6638043
}