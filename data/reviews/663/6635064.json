{
	"description": "cmd/go: don't ignore error when 'go clean'\n        Fixes issue 4208.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@google.com"
	],
	"reviewers": [
		"anacrolix@gmail.com"
	],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-10-10 16:21:44.669860",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Wed, Oct 10, 2012 at 9:21 AM,  <minux.ma@gmail.com> wrote:\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> cmd/go: don't ignore error when 'go clean'\r\n>         Fixes issue 4208.\r\n>\r\n> Please review this at http://codereview.appspot.com/6635064/\r\n>\r\n> Affected files:\r\n>   M src/cmd/go/clean.go\r\n>\r\n>\r\n> Index: src/cmd/go/clean.go\r\n> ===================================================================\r\n> --- a/src/cmd/go/clean.go\r\n> +++ b/src/cmd/go/clean.go\r\n> @@ -170,7 +170,10 @@\r\n>                                                 continue\r\n>                                         }\r\n>                                 }\r\n> -                               os.RemoveAll(filepath.Join(p.Dir, name))\r\n> +                               f := filepath.Join(p.Dir, name)\r\n> +                               if err := os.RemoveAll(f); err != nil {\r\n> +                                       errorf(\"go clean: %v\", err)\r\n> +                               }\r\n>                         }\r\n>                         continue\r\n>                 }\r\n> @@ -180,7 +183,7 @@\r\n>                 }\r\n>\r\n>                 if cleanFile[name] || cleanExt[filepath.Ext(name)] ||\r\n> toRemove[name] {\r\n> -                       os.Remove(filepath.Join(p.Dir, name))\r\n> +                       removeFile(filepath.Join(p.Dir, name))\r\n>                 }\r\n>         }\r\n>\r\n> @@ -189,7 +192,7 @@\r\n>                         b.showcmd(\"\", \"rm -f %s\", p.target)\r\n>                 }\r\n>                 if !cleanN {\r\n> -                       os.Remove(p.target)\r\n> +                       removeFile(p.target)\r\n>                 }\r\n>         }\r\n>\r\n> @@ -202,7 +205,7 @@\r\n>                                 b.showcmd(\"\", \"rm -f %s\", target)\r\n>                         }\r\n>                         if !cleanN {\r\n> -                               os.Remove(target)\r\n> +                               removeFile(target)\r\n>                         }\r\n>                 }\r\n>         }\r\n> @@ -213,3 +216,11 @@\r\n>                 }\r\n>         }\r\n>  }\r\n> +\r\n> +// removeFile tries to remove file f, if error other than file doesn't\r\n> exist\r\n> +// occurs, it will report the error.\r\n> +func removeFile(f string) {\r\n> +       if err := os.Remove(f); err != nil && !os.IsNotExist(err) {\r\n> +               errorf(\"go clean: %v\", err)\r\n> +       }\r\n> +}\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-10 17:30:49.409110",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=bc50fc903d6e ***\n\ncmd/go: don't ignore error when 'go clean'\n        Fixes issue 4208.\n\nR=golang-dev, iant\nCC=golang-dev\nhttp://codereview.appspot.com/6635064",
			"disapproval": false,
			"date": "2012-10-10 17:34:38.005380",
			"approval": false
		},
		{
			"sender": "anacrolix@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"anacrolix@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/10 16:21:44, minux wrote:\n> Hello mailto:golang-dev@googlegroups.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go/\n\nENOENT will be ignored when removing files, but now all errors will be shown for failure to remove directories. Have I read this wrong? Is there no way or need to discriminate this error when using RemoveAll?",
			"disapproval": false,
			"date": "2012-10-10 18:49:16.582830",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Oct 10, 2012 at 11:49 AM,  <anacrolix@gmail.com> wrote:\r\n>\r\n> ENOENT will be ignored when removing files, but now all errors will be\r\n> shown for failure to remove directories. Have I read this wrong? Is\r\n> there no way or need to discriminate this error when using RemoveAll?\r\n>\r\n> https://codereview.appspot.com/6635064/\r\n\r\nIn the directory case the code has already verified that the name\r\nexists and is a directory, so there should never be an ENOENT error in\r\nthat case.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2012-10-10 18:53:54.668140",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"anacrolix@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/10 18:53:54, iant2 wrote:\n> On Wed, Oct 10, 2012 at 11:49 AM,  <mailto:anacrolix@gmail.com> wrote:\n> > ENOENT will be ignored when removing files, but now all errors will be\n> > shown for failure to remove directories. Have I read this wrong? Is\n> > there no way or need to discriminate this error when using RemoveAll? \n> In the directory case the code has already verified that the name\n> exists and is a directory, so there should never be an ENOENT error in\n> that case.\nAlso note that according godoc, os.RemoveAll doesn't return an error\nwhen the path can't be found.",
			"disapproval": false,
			"date": "2012-10-11 15:22:51.210880",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6635064: cmd/go: don't ignore error when 'go clean'",
	"created": "2012-10-10 16:16:13.779360",
	"patchsets": [
		1,
		4,
		5001,
		3002,
		10001,
		8002
	],
	"modified": "2012-10-11 15:22:51.357080",
	"closed": true,
	"issue": 6635064
}