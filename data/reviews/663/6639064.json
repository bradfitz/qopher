{
	"description": "doc/faq: discuss virtual memory use by go processes\n\nFixes issue 3948.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"dave@cheney.net",
		"dsymonds@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"dave@cheney.net",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=8f3e3876b690 ***\n\ndoc/faq: discuss virtual memory use by go processes\n\nFixes issue 3948.\n\nR=golang-dev, r, dave, dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/6639064",
			"disapproval": false,
			"date": "2012-10-11 03:22:34.400900",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-10-11 00:56:28.478070",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1106\ndoc/go_faq.html:1106: The Go memory allocator allocates a large slab of virtual memory on startup to\nOn 2012/10/11 02:02:36, r wrote:\n> s/slab/region/\n\nDone.",
			"disapproval": false,
			"date": "2012-10-11 02:09:56.684320",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6639064/diff/1/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttp://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1107\ndoc/go_faq.html:1107: use as an arena for future allocations. Note that this virtual memory is\ns/Note that this/This/\n\nhttp://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1116\ndoc/go_faq.html:1116: <code>RSIZE</code> (Mac OS X) columns.\nfind out how on windows",
			"disapproval": false,
			"date": "2012-10-11 00:59:26.158920",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6639064/diff/1/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1106\ndoc/go_faq.html:1106: The Go memory allocator allocates a large slab of virtual memory on startup to\ns/allocates/uses/\ns/on startup to//\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1107\ndoc/go_faq.html:1107: use as an arena for future allocations. Note that this virtual memory is\ns/use //",
			"disapproval": false,
			"date": "2012-10-11 00:59:42.241340",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for taking a stab at this.\n\nFixes issue 3948.\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1106\ndoc/go_faq.html:1106: The Go memory allocator allocates a large slab of virtual memory on startup to\ns/allocates/reserves/\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1107\ndoc/go_faq.html:1107: use as an arena for future allocations. Note that this virtual memory is\n<em>virtual</em>\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1108\ndoc/go_faq.html:1108: local to the specific Go process; the allocation does not deprive other\ns/allocation/reservation/\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1109\ndoc/go_faq.html:1109: processes of memory. For more detail read\n... of memory unless your program's heap usage grows substantially.",
			"disapproval": false,
			"date": "2012-10-11 01:00:34.406870",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1106\ndoc/go_faq.html:1106: The Go memory allocator allocates a large slab of virtual memory on startup to\nOn 2012/10/11 00:59:42, dsymonds wrote:\n> s/allocates/uses/\n> s/on startup to//\n\nDone.\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1106\ndoc/go_faq.html:1106: The Go memory allocator allocates a large slab of virtual memory on startup to\nOn 2012/10/11 01:00:34, dfc wrote:\n> s/allocates/reserves/\n\nDone.\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1107\ndoc/go_faq.html:1107: use as an arena for future allocations. Note that this virtual memory is\nOn 2012/10/11 01:00:34, dfc wrote:\n> <em>virtual</em>\n\nnah\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1107\ndoc/go_faq.html:1107: use as an arena for future allocations. Note that this virtual memory is\nOn 2012/10/11 00:59:42, dsymonds wrote:\n> s/use //\n\nDone.\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1107\ndoc/go_faq.html:1107: use as an arena for future allocations. Note that this virtual memory is\nOn 2012/10/11 00:59:26, r wrote:\n> s/Note that this/This/\n\nDone.\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1108\ndoc/go_faq.html:1108: local to the specific Go process; the allocation does not deprive other\nOn 2012/10/11 01:00:34, dfc wrote:\n> s/allocation/reservation/\n\nDone.\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1109\ndoc/go_faq.html:1109: processes of memory. For more detail read\nOn 2012/10/11 01:00:34, dfc wrote:\n> ... of memory unless your program's heap usage grows substantially.\n\nseems unnecessary\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1116\ndoc/go_faq.html:1116: <code>RSIZE</code> (Mac OS X) columns.\nOn 2012/10/11 00:59:26, r wrote:\n> find out how on windows\n\nAdded a TODO, for now. I think the task manager just displays the resident memory.",
			"disapproval": false,
			"date": "2012-10-11 01:53:54.450500",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6639064/diff/1/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/6639064/diff/1/doc/go_faq.html#newcode1106\ndoc/go_faq.html:1106: The Go memory allocator allocates a large slab of virtual memory on startup to\ns/slab/region/",
			"disapproval": false,
			"date": "2012-10-11 02:02:36.315100",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"dave@cheney.net",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-10-11 02:10:07.281210",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"dave@cheney.net",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM after deletion\n\nhttps://codereview.appspot.com/6639064/diff/10001/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/6639064/diff/10001/doc/go_faq.html#newcode1107\ndoc/go_faq.html:1107: for future allocations. This virtual memory is local to the specific Go\ns/future //\n\nhttps://codereview.appspot.com/6639064/diff/10001/doc/go_faq.html#newcode1110\ndoc/go_faq.html:1110: <a href=\"https://groups.google.com/forum/#!msg/golang-dev/EpUlHQXWykg/LN2o9fV6R3wJ\">this discussion on golang-dev</a>.\ndelete this sentence and the reference.  it's unnecessary. cross-connecting like this will drive traffic to the list, generating more misinformation. reference only curated, fixed content.",
			"disapproval": false,
			"date": "2012-10-11 03:20:16.508960",
			"approval": true
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 6639064: doc/faq: discuss virtual memory use by go processes",
	"created": "2012-10-11 00:56:20.282210",
	"patchsets": [
		1,
		6001,
		10001,
		12002
	],
	"modified": "2012-10-11 03:22:37.282380",
	"closed": true,
	"issue": 6639064
}