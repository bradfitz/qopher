{
	"description": "runtime: optimize calls to addroot()",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"dvyukov@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: dvyukov, rsc),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-17 11:35:43.101610",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think we can skip the various looking for pointers in these data structures. The reflect package has it cached in real data structures.\n\nhttps://codereview.appspot.com/7879043/diff/3001/src/pkg/runtime/mgc0.c\nFile src/pkg/runtime/mgc0.c (right):\n\nhttps://codereview.appspot.com/7879043/diff/3001/src/pkg/runtime/mgc0.c#newcode1389\nsrc/pkg/runtime/mgc0.c:1389: if((byte*)type >= arena_start && (byte*)type < arena_used)\nThroughout, please write these as \n\narena_start <= x && x < arena_used\n\nso that all the values are ordered smallest to largest in the comparisons.",
			"disapproval": false,
			"date": "2013-03-18 14:49:44.397810",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: dvyukov@google.com, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-18 16:36:09.434370",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-03-19 18:44:20.819880",
			"approval": true
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1f90b5850ae2 ***\n\nruntime: optimize calls to addroot()\n\nR=golang-dev, rsc\nCC=dvyukov, golang-dev\nhttps://codereview.appspot.com/7879043",
			"disapproval": false,
			"date": "2013-03-19 18:57:27.051630",
			"approval": false
		}
	],
	"owner_email": "0xE2.0x9A.0x9B@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "atom",
	"subject": "code review 7879043: runtime: optimize calls to addroot()",
	"created": "2013-03-17 11:35:37.917370",
	"patchsets": [
		1,
		3001,
		9001,
		14001
	],
	"modified": "2013-03-19 18:57:28.897280",
	"closed": true,
	"issue": 7879043
}