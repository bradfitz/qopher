{
	"description": "net/http/cgi: make it work without REQUEST_URI environment variable\n\nFixes issue 4367.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-01-08 01:35:49.598480",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Mon, Jan 7, 2013 at 5:35 PM, <alex.brainman@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> net/http/cgi: make it work without REQUEST_URI environment variable\r\n>\r\n> Fixes issue 4367.\r\n>\r\n> Please review this at https://codereview.appspot.**com/7062052/<https://codereview.appspot.com/7062052/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/http/cgi/child.go\r\n>   M src/pkg/net/http/cgi/child_**test.go\r\n>\r\n>\r\n> Index: src/pkg/net/http/cgi/child.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/http/cgi/child.**go\r\n> +++ b/src/pkg/net/http/cgi/child.**go\r\n> @@ -91,10 +91,19 @@\r\n>\r\n>         // TODO: cookies.  parsing them isn't exported, though.\r\n>\r\n> +       uriStr := params[\"REQUEST_URI\"]\r\n> +       if uriStr == \"\" {\r\n> +               // Fallback to SCRIPT_NAME, PATH_INFO and QUERY_STRING.\r\n> +               uriStr = params[\"SCRIPT_NAME\"] + params[\"PATH_INFO\"]\r\n> +               s := params[\"QUERY_STRING\"]\r\n> +               if s != \"\" {\r\n> +                       uriStr += \"?\" + s\r\n> +               }\r\n> +       }\r\n>         if r.Host != \"\" {\r\n>                 // Hostname is provided, so we can reasonably construct a\r\n> URL,\r\n>                 // even if we have to assume 'http' for the scheme.\r\n> -               rawurl := \"http://\" + r.Host + params[\"REQUEST_URI\"]\r\n> +               rawurl := \"http://\" + r.Host + uriStr\r\n>                 url, err := url.Parse(rawurl)\r\n>                 if err != nil {\r\n>                         return nil, errors.New(\"cgi: failed to parse host\r\n> and REQUEST_URI into a URL: \" + rawurl)\r\n> @@ -104,7 +113,6 @@\r\n>         // Fallback logic if we don't have a Host header or the URL\r\n>         // failed to parse\r\n>         if r.URL == nil {\r\n> -               uriStr := params[\"REQUEST_URI\"]\r\n>                 url, err := url.Parse(uriStr)\r\n>                 if err != nil {\r\n>                         return nil, errors.New(\"cgi: failed to parse\r\n> REQUEST_URI into a URL: \" + uriStr)\r\n> Index: src/pkg/net/http/cgi/child_**test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/http/cgi/child_**test.go\r\n> +++ b/src/pkg/net/http/cgi/child_**test.go\r\n> @@ -85,3 +85,25 @@\r\n>                 t.Errorf(\"expected URL %q; got %q\", e, g)\r\n>         }\r\n>  }\r\n> +\r\n> +func TestRequestWithoutRequestURI(t *testing.T) {\r\n> +       env := map[string]string{\r\n> +               \"SERVER_PROTOCOL\": \"HTTP/1.1\",\r\n> +               \"HTTP_HOST\":       \"example.com\",\r\n> +               \"REQUEST_METHOD\":  \"GET\",\r\n> +               \"SCRIPT_NAME\":     \"/dir/scriptname\",\r\n> +               \"PATH_INFO\":       \"/p1/p2\",\r\n> +               \"QUERY_STRING\":    \"a=1&b=2\",\r\n> +               \"CONTENT_LENGTH\":  \"123\",\r\n> +       }\r\n> +       req, err := RequestFromMap(env)\r\n> +       if err != nil {\r\n> +               t.Fatalf(\"RequestFromMap: %v\", err)\r\n> +       }\r\n> +       if req.URL == nil {\r\n> +               t.Fatalf(\"unexpected nil URL\")\r\n> +       }\r\n> +       if g, e := req.URL.String(), \"http://example.com/dir/**\r\n> scriptname/p1/p2?a=1&b=2 <http://example.com/dir/scriptname/p1/p2?a=1&b=2>\";\r\n> e != g {\r\n> +               t.Errorf(\"expected URL %q; got %q\", e, g)\r\n> +       }\r\n> +}\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-08 03:36:46.766330",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7062052/diff/5001/src/pkg/net/http/cgi/child_test.go\nFile src/pkg/net/http/cgi/child_test.go (right):\n\nhttps://codereview.appspot.com/7062052/diff/5001/src/pkg/net/http/cgi/child_test.go#newcode107\nsrc/pkg/net/http/cgi/child_test.go:107: t.Errorf(\"expected URL %q; got %q\", e, g)\nGo style error message & order is:\n\nErrorf(\"URL = %q; want %q\", g, e)",
			"disapproval": false,
			"date": "2013-01-08 03:37:54.834440",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=08a1396e9aa7 ***\n\nnet/http/cgi: make it work without REQUEST_URI environment variable\n\nFixes issue 4367.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7062052\n\nhttps://codereview.appspot.com/7062052/diff/5001/src/pkg/net/http/cgi/child_test.go\nFile src/pkg/net/http/cgi/child_test.go (right):\n\nhttps://codereview.appspot.com/7062052/diff/5001/src/pkg/net/http/cgi/child_test.go#newcode107\nsrc/pkg/net/http/cgi/child_test.go:107: t.Errorf(\"expected URL %q; got %q\", e, g)\nOn 2013/01/08 03:37:54, bradfitz wrote:\n> Go style error message & order is:\n> \n> Errorf(\"URL = %q; want %q\", g, e)\n\nDone. But I have also changed the original line in TestRequestWithoutHost now.",
			"disapproval": false,
			"date": "2013-01-08 06:23:56.681030",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 7062052: net/http/cgi: make it work without REQUEST_URI environm...",
	"created": "2013-01-08 01:34:00.599680",
	"patchsets": [
		1,
		2001,
		5001,
		11001
	],
	"modified": "2013-01-08 06:23:59.819060",
	"closed": true,
	"issue": 7062052
}