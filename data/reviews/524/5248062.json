{
	"description": "exp/kevent: implements a wrapper for the BSD kevent/kqueue system.\n\nThis is meant to be a file watcher package for BSD systems.\nSee os/inotify for a similar package on Linux systems.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "howeyc@gmail.com",
			"recipients": [
				"howeyc@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-12 14:08:12.446883",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"howeyc@gmail.com",
				"dave@cheney.net",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I think it will be necessary to define a common interface to the file watcher systems across the various OSes.  I tried to submit a change to implement file watching for Windows and rsc prompted that we should be doing this.  Can we try to hammer out a proposal for such an interface on golang-dev?  The reference to my changelist is http://codereview.appspot.com/4188047/.",
			"disapproval": false,
			"date": "2011-10-13 12:57:31.210426",
			"approval": false
		},
		{
			"sender": "howeyc@gmail.com",
			"recipients": [
				"howeyc@gmail.com",
				"dave@cheney.net",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/13 12:57:31, hector wrote:\n> I think it will be necessary to define a common interface to the file watcher\n> systems across the various OSes.  I tried to submit a change to implement file\n> watching for Windows and rsc prompted that we should be doing this.  Can we try\n> to hammer out a proposal for such an interface on golang-dev?  The reference to\n> my changelist is http://codereview.appspot.com/4188047/.\n\nThat sounds like a good idea to me. I was actually thinking about a unified file monitoring package for all supported OSs, but I don't have a windows or linux box to test those platforms. It looks like you have a windows box based on your changelist, and I can get a Linux box up and running pretty quick if you don't have one, as we'll need to modify its interface a bit to make a common API.\n\nAre you thinking of starting another thread to talk about the interface? Here are my thoughts that you can use/disregard if you start one:\n\nCreate a FileEvent type similar to FileInfo returned from Stat() that has common functions between OSs (Path(), IsDelete(), IsWrite(), ...)\n\nAs we cannot push an interface over a channel I was thinking we may need to make a blocking NextFileEvent() (FileEvent, Error) function with simple code (not valid, off the top my of head):\n\nfunc Nextfileevent(watch w) ( fileevent, error) {\n   select {\n      case err := <-w.Error:\n      case event := <-w.Event:\n   }\n   return event, err\n}\n\nThe channels would then become private.\n\nI'm also thinking of removing an external facing AddWatch(name, flags)\nas the flags are OS dependent, just have AddWatch(name) as an external function that adds all flags. The user of package can use the interface functions of FileEvent to disregard the events they don't care about. Also, removing the flag consts from being public would be something to discuss.\n\nI'd also like to change the package name from inotify to something more OS-agnostic, perhaps filemon or filewatch? I'm not attached to any name in particular, I'm okay with whatever others feel is appropriate.",
			"disapproval": false,
			"date": "2011-10-13 13:37:21.769924",
			"approval": false
		},
		{
			"sender": "howeyc@gmail.com",
			"recipients": [
				"howeyc@gmail.com",
				"dave@cheney.net",
				"hectorchu@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/13 15:15:50, rog wrote:\n> On 13 October 2011 14:37,  <mailto:howeyc@gmail.com> wrote:\n> > As we cannot push an interface over a channel [...]\n> \n> er, why not?\n\nin my head I was thinking of something like this...\nhttp://groups.google.com/group/golang-nuts/browse_thread/thread/71bba09a30918319/3a15c4e509f3d2ef?#3a15c4e509f3d2ef",
			"disapproval": false,
			"date": "2011-10-13 15:34:17.195532",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Thanks for working on this.  I agree with Hector that we\nneed to figure out an API that works for all the systems.\nHowever, trying to design the API without code to look at\nhas not worked in the past, so let's try something else.\nPlease change the CL to make this package exp/kevent,\nand we'll move os/inotify to exp/inotify, and then we\ncan have Windows's exp/whatever, and then once all three\nare there it will be easier to compare APIs and decide\nwhat the eventual, mostly portable os/fsnotify should be.\n\nThanks.\nRuss\n",
			"disapproval": false,
			"date": "2011-10-13 13:50:56.770645",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 13 October 2011 14:37,  <howeyc@gmail.com> wrote:\n> As we cannot push an interface over a channel [...]\n\ner, why not?\n",
			"disapproval": false,
			"date": "2011-10-13 15:15:50.625783",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Oct 13, 2011 at 9:00 AM, Russ Cox <rsc@golang.org> wrote:\n\n> Let's bikeshed later.  I don't see a point to syscall/whatever\n> if we can just have one portable API.  We don't have syscall/epoll\n> syscall/select etc.  We just have net.\n>\n\nYeah, agree that'd be ideal.\n",
			"disapproval": false,
			"date": "2011-10-13 16:03:50.694870",
			"approval": false
		},
		{
			"sender": "howeyc@gmail.com",
			"recipients": [
				"howeyc@gmail.com",
				"dave@cheney.net",
				"hectorchu@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, hectorchu@gmail.com, rsc@golang.org, rogpeppe@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-13 15:45:32.041694",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Just to bikeshed,\n\nI think kevent, inotify, etc should be:\n\nsyscall/inotify\nsyscall/kevent\n\nexp/ works for now, but I never want to see these graduate out of exp/ into\nsomewhere suggesting they're portable (which to me means anywhere that's not\nsyscall)\n\nBoth the names os/inotify and exp/kevent make me a bit uncomfortable.\n\n\nOn Thu, Oct 13, 2011 at 8:45 AM, <howeyc@gmail.com> wrote:\n\n> Hello dave@cheney.net, hectorchu@gmail.com, rsc@golang.org,\n> rogpeppe@gmail.com (cc: golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**5248062/<http://codereview.appspot.com/5248062/>\n>\n",
			"disapproval": false,
			"date": "2011-10-13 15:55:50.471677",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Let's bikeshed later.  I don't see a point to syscall/whatever\nif we can just have one portable API.  We don't have syscall/epoll\nsyscall/select etc.  We just have net.\n\n",
			"disapproval": false,
			"date": "2011-10-13 16:00:34.057512",
			"approval": false
		},
		{
			"sender": "rcostu@gmail.com",
			"recipients": [
				"howeyc@gmail.com",
				"dave@cheney.net",
				"hectorchu@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"bradfitz@golang.org",
				"rcostu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/13 16:03:50, bradfitz wrote:\n> On Thu, Oct 13, 2011 at 9:00 AM, Russ Cox <mailto:rsc@golang.org> wrote:\n> \n> > Let's bikeshed later.  I don't see a point to syscall/whatever\n> > if we can just have one portable API.  We don't have syscall/epoll\n> > syscall/select etc.  We just have net.\n> >\n> \n> Yeah, agree that'd be ideal.\n\nI asked yesterday on go-nuts list something like this to be done and Hector redirected me here.\n\nI've been thinking for a while and I have taken a look to exp/winfsnotify, exp/inotify and this patch. I think that a common interface API could be done, although I don't know a lot about Notifying system on Windows and its implementation differs somehow from inotify/kevent.\n\nI'd rather rebuild the package and wrap it under os/fsnotify or os/nodenotify.\n\nCould I start trying to do some code about it to further discuss over the final interface? Is there anywhere else an opened discussion on this topic?",
			"disapproval": false,
			"date": "2011-10-20 17:57:59.203238",
			"approval": false
		},
		{
			"sender": "howeyc@gmail.com",
			"recipients": [
				"howeyc@gmail.com",
				"dave@cheney.net",
				"hectorchu@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"bradfitz@golang.org",
				"rcostu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/20 17:57:59, rcostu wrote:\n> I asked yesterday on go-nuts list something like this to be done and Hector\n> redirected me here.\n> \n> I've been thinking for a while and I have taken a look to exp/winfsnotify,\n> exp/inotify and this patch. I think that a common interface API could be done,\n> although I don't know a lot about Notifying system on Windows and its\n> implementation differs somehow from inotify/kevent.\n> \n> I'd rather rebuild the package and wrap it under os/fsnotify or os/nodenotify.\n> \n> Could I start trying to do some code about it to further discuss over the final\n> interface? Is there anywhere else an opened discussion on this topic?\n\nI started working on it and submitted my take on a possible os/fsnotify here: http://codereview.appspot.com/5304046/\n\nIt's really up to the community if what I submitted is the chosen direction and whether or not it's in a format that Windows functionality can be integrated to provide a consistent interface.",
			"disapproval": false,
			"date": "2011-10-20 21:02:03.307491",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"howeyc@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "removing reviewer list",
			"disapproval": false,
			"date": "2012-06-03 04:33:34.569660",
			"approval": false
		}
	],
	"owner_email": "howeyc@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "howeyc",
	"subject": "code review 5248062: exp/kevent: implements a wrapper for the BSD kevent/kqu...",
	"created": "2011-10-12 14:04:25.552019",
	"patchsets": [
		1,
		1001,
		8001
	],
	"modified": "2012-06-03 04:33:34.569660",
	"closed": false,
	"issue": 5248062
}