{
	"description": "fmt: document width and flags a bit more\n\nFixes issue 4581.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=0e46a7190338 ***\n\nfmt: document width and flags a bit more\n\nFixes issue 4581.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7000052",
			"disapproval": false,
			"date": "2012-12-22 18:36:45.322590",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-12-22 15:37:28.387850",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Sat, Dec 22, 2012 at 7:37 AM, <rsc@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> fmt: document width and flags a bit more\r\n>\r\n> Fixes issue 4581.\r\n>\r\n> Please review this at https://codereview.appspot.**com/7000052/<https://codereview.appspot.com/7000052/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/fmt/doc.go\r\n>\r\n>\r\n> Index: src/pkg/fmt/doc.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/fmt/doc.go\r\n> +++ b/src/pkg/fmt/doc.go\r\n> @@ -63,9 +63,10 @@\r\n>         The default precision for %e and %f is 6; for %g it is the smallest\r\n>         number of digits necessary to identify the value uniquely.\r\n>\r\n> -       For strings, width is the minimum number of characters to output,\r\n> -       padding with spaces if necessary, and precision is the maximum\r\n> -       number of characters to output, truncating if necessary.\r\n> +       For most values, width is the minimum number of characters to\r\n> output,\r\n> +       padding the formatted form with spaces if necessary.\r\n> +       For strings, precision is the maximum number of characters to\r\n> output,\r\n> +       truncating if necessary.\r\n>\r\n>         Other flags:\r\n>                 +       always print a sign for numeric values;\r\n> @@ -77,7 +78,12 @@\r\n>                         write e.g. U+0078 'x' if the character is\r\n> printable for %U (%#U).\r\n>                 ' '     (space) leave a space for elided sign in numbers\r\n> (% d);\r\n>                         put spaces between bytes printing strings or\r\n> slices in hex (% x, % X)\r\n> -               0       pad with leading zeros rather than spaces\r\n> +               0       pad with leading zeros rather than spaces;\r\n> +                       for numbers, this moves the padding after the sign\r\n> +\r\n> +       Flags are ignored by verbs that do not expect them.\r\n> +       For example there is no alternate decimal format, so %#d and %d\r\n> +       behave identically.\r\n>\r\n>         For each Printf-like function, there is also a Print function\r\n>         that takes no format and is equivalent to saying %v for every\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-12-22 16:51:23.420690",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7000052: fmt: document width and flags a bit more",
	"created": "2012-12-22 15:37:13.923450",
	"patchsets": [
		1,
		2001,
		5001,
		10001
	],
	"modified": "2012-12-22 18:36:46.394570",
	"closed": true,
	"issue": 7000052
}