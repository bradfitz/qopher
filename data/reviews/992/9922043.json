{
	"description": "go.crypto/ssh: add hook for host key checking.",
	"cc": [
		"dave@cheney.net",
		"agl@golang.org",
		"gobot@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2013-05-31 22:22:24.811690",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=dfc (assigned by dfc)",
			"disapproval": false,
			"date": "2013-06-01 02:07:04.743620",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Adam, you may want to look at this too. \n\nI was wondering about the location of the hostkey check. I think it does not any difference, but I'd rather have a crypto expert say so.",
			"disapproval": false,
			"date": "2013-06-06 14:47:31.275370",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9922043/diff/9002/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/9002/ssh/client.go#newcode192\nssh/client.go:192: checker := c.config.HostKeyChecker\nI don't think it matters from a security point of view. I would, personally, do it immediately after unmarshal on the general principle that things should be validated ASAP. In this case it would mean that we could skip the expensive group.diffieHellman operation.\n\nhttps://codereview.appspot.com/9922043/diff/9002/ssh/client.go#newcode465\nssh/client.go:465: // HostKeyChecker is called to check host keys for unexpected\n// HostKeyChecker, if not nil, is called during the cryptographic handshake to validate the server's host key. A nil HostKeyChecker implies that all host keys are accepted.\n\nhttps://codereview.appspot.com/9922043/diff/9002/ssh/client_auth.go\nFile ssh/client_auth.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/9002/ssh/client_auth.go#newcode71\nssh/client_auth.go:71: // DO NOT SUBMIT - should we pass the hostname if using ssh.Dial?\nUnless the hostname is passed then it's difficult to have much security. Consider a user that ssh'es to two machines: a and b. If b can compromise a DNS lookup to a then they can inject their own IP address. Then the user, who tries to connect to a, will actually connect to b and the HostKeyChecker will think it's ok because it'll be b's address and key.",
			"disapproval": false,
			"date": "2013-06-07 16:06:55.124930",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9922043/diff/9002/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/9002/ssh/client.go#newcode192\nssh/client.go:192: checker := c.config.HostKeyChecker\nOn 2013/06/07 16:06:55, agl1 wrote:\n> I don't think it matters from a security point of view. I would, personally, do\n> it immediately after unmarshal on the general principle that things should be\n> validated ASAP. In this case it would mean that we could skip the expensive\n> group.diffieHellman operation. \n\nDone.\n\nhttps://codereview.appspot.com/9922043/diff/9002/ssh/client.go#newcode465\nssh/client.go:465: // HostKeyChecker is called to check host keys for unexpected\nOn 2013/06/07 16:06:55, agl1 wrote:\n> // HostKeyChecker, if not nil, is called during the cryptographic handshake to\n> validate the server's host key. A nil HostKeyChecker implies that all host keys\n> are accepted.\n\nDone.\n\nhttps://codereview.appspot.com/9922043/diff/9002/ssh/client_auth.go\nFile ssh/client_auth.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/9002/ssh/client_auth.go#newcode71\nssh/client_auth.go:71: // DO NOT SUBMIT - should we pass the hostname if using ssh.Dial?\nOn 2013/06/07 16:06:55, agl1 wrote:\n> Unless the hostname is passed then it's difficult to have much security.\n> Consider a user that ssh'es to two machines: a and b. If b can compromise a DNS\n> lookup to a then they can inject their own IP address. Then the user, who tries\n> to connect to a, will actually connect to b and the HostKeyChecker will think\n> it's ok because it'll be b's address and key.\n\nI'm now inserting the original argument of the Dial function, which I hope is better.",
			"disapproval": false,
			"date": "2013-06-07 16:51:54.509640",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jun 7, 2013 at 6:51 PM,  <hanwen@google.com> wrote:\r\n>> to connect to a, will actually connect to b and the HostKeyChecker\r\n>\r\n> will think\r\n>>\r\n>> it's ok because it'll be b's address and key.\r\n>\r\n>\r\n> I'm now inserting the original argument of the Dial function, which I\r\n> hope is better.\r\n>\r\n> https://codereview.appspot.com/9922043/\r\n\r\nI now wonder: would it be better to pass both the original adress and\r\nthe connection, so you could check both hostname and IP address?\r\n\r\n\r\n--\r\nHan-Wen Nienhuys\r\nGoogle Munich\r\nhanwen@google.com\r\n",
			"disapproval": false,
			"date": "2013-06-08 10:26:02.207910",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Some small comments. Sorry I haven't had time for a full review.\n\nhttps://codereview.appspot.com/9922043/diff/3001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/3001/ssh/client.go#newcode192\nssh/client.go:192: checker := c.config.HostKeyChecker\nif checker := c.config.HostKeyChecker; checker != nil {\n   if err := checker.Check(c.transport.RemoteAddr(), hostKeyAlgo, ... ); err != nil {\n     return nil, nil, err\n   }\n}\n\nhttps://codereview.appspot.com/9922043/diff/15001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/15001/ssh/client.go#newcode33\nssh/client.go:33: serverAddress string\nI think this should go into *ClientConfig",
			"disapproval": false,
			"date": "2013-06-10 01:15:06.395020",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I've changed the checker function so it takes both string address and the net.Addr\n\nhttps://codereview.appspot.com/9922043/diff/3001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/3001/ssh/client.go#newcode192\nssh/client.go:192: checker := c.config.HostKeyChecker\nOn 2013/06/10 01:15:06, dfc wrote:\n> if checker := c.config.HostKeyChecker; checker != nil {\n>    if err := checker.Check(c.transport.RemoteAddr(), hostKeyAlgo, ... ); err !=\n> nil {\n>      return nil, nil, err\n>    }\n> }\n\nDone.\n\nhttps://codereview.appspot.com/9922043/diff/15001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/15001/ssh/client.go#newcode33\nssh/client.go:33: serverAddress string\nOn 2013/06/10 01:15:06, dfc wrote:\n> I think this should go into *ClientConfig\n\nWhy?\n\nIf it's in ClientConfig, it suggests that setting it affects what is dialed.\n\nIs it assumed that most people use Client() or Dial() to setup a connection?\n\nPeople that use Client() can still check the address by instantiating a special HostKeyChecker for each connection. For that case, a callback rather than interface may be a little more convenient.",
			"disapproval": false,
			"date": "2013-06-10 17:12:38.997230",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9922043/diff/23001/ssh/test/test_unix_test.go\nFile ssh/test/test_unix_test.go (left):\n\nhttps://codereview.appspot.com/9922043/diff/23001/ssh/test/test_unix_test.go#oldcode168\nssh/test/test_unix_test.go:168: // from that that package provide.\nwhy has all this been removed, is your working copy out of date ?",
			"disapproval": false,
			"date": "2013-06-11 10:52:30.018180",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/10 17:12:38, hanwen wrote:\n> I've changed the checker function so it takes both string address and the\n> net.Addr\n> \n> https://codereview.appspot.com/9922043/diff/3001/ssh/client.go\n> File ssh/client.go (right):\n> \n> https://codereview.appspot.com/9922043/diff/3001/ssh/client.go#newcode192\n> ssh/client.go:192: checker := c.config.HostKeyChecker\n> On 2013/06/10 01:15:06, dfc wrote:\n> > if checker := c.config.HostKeyChecker; checker != nil {\n> >    if err := checker.Check(c.transport.RemoteAddr(), hostKeyAlgo, ... ); err\n> !=\n> > nil {\n> >      return nil, nil, err\n> >    }\n> > }\n> \n> Done.\n> \n> https://codereview.appspot.com/9922043/diff/15001/ssh/client.go\n> File ssh/client.go (right):\n> \n> https://codereview.appspot.com/9922043/diff/15001/ssh/client.go#newcode33\n> ssh/client.go:33: serverAddress string\n> On 2013/06/10 01:15:06, dfc wrote:\n> > I think this should go into *ClientConfig\n> \n> Why?\n> \n> If it's in ClientConfig, it suggests that setting it affects what is dialed.\n\nYes, that sounds correct.\n\n> Is it assumed that most people use Client() or Dial() to setup a connection?\n\nYes, how else would they create a connection. You either have a net.Conn or an address, as a string.\n\n> People that use Client() can still check the address by instantiating a special\n> HostKeyChecker for each connection. For that case, a callback rather than\n> interface may be a little more convenient.\n\nIt is assumed that people will be creating a new *ClientConfig for each dial as they will be passing connection specific information like their username.",
			"disapproval": false,
			"date": "2013-06-11 10:55:38.394480",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jun 11, 2013 at 12:55 PM,  <dave@cheney.net> wrote:\r\n>> Is it assumed that most people use Client() or Dial() to setup a\r\n>\r\n> connection?\r\n>\r\n> Yes, how else would they create a connection. You either have a net.Conn\r\n> or an address, as a string.\r\n\r\nSorry - I meant to say, is Client() the preferred interface, or rather Dial() ?\r\n\r\n>> People that use Client() can still check the address by instantiating\r\n>\r\n> a special\r\n>>\r\n>> HostKeyChecker for each connection. For that case, a callback rather\r\n>\r\n> than\r\n>>\r\n>> interface may be a little more convenient.\r\n>\r\n>\r\n> It is assumed that people will be creating a new *ClientConfig for each\r\n> dial as they will be passing connection specific information like their\r\n> username.\r\n\r\nFair enough; I didn't realize that. I'll have another look at this\r\nfrom that perspective. Isn't it somewhat inconsistent that the address\r\nto dial is an argument to Dial rather than a field in ClientConfig,\r\nthough?\r\n\r\n--\r\nGoogle Germany GmbH - ABC-Str. 19 - 20354 Hamburg\r\nRegistergericht und -nummer: Hamburg, HRB 86891\r\nSitz der Gesellschaft: Hamburg - Gesch\u00e4ftsf\u00fchrer: Graham Law, Katherine Stephens\r\n",
			"disapproval": false,
			"date": "2013-06-11 12:24:35.433640",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Fair enough; I didn't realize that. I'll have another look at this\r\n> from that perspective. Isn't it somewhat inconsistent that the address\r\n> to dial is an argument to Dial rather than a field in ClientConfig,\r\n> though?\r\n\r\nIn retrospect maybe, but I think (not sure if agl agrees) that the ssh\r\npackage follows the lead of the crypto/tls package. So if you can find\r\nan example of that way that package does things, that is a sound\r\nargument to implement it in the ssh package.\r\n",
			"disapproval": false,
			"date": "2013-06-11 12:56:50.591910",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nmoved the unresolved address into Config, and fixed the merge snafu.\n\nhttps://codereview.appspot.com/9922043/diff/23001/ssh/test/test_unix_test.go\nFile ssh/test/test_unix_test.go (left):\n\nhttps://codereview.appspot.com/9922043/diff/23001/ssh/test/test_unix_test.go#oldcode168\nssh/test/test_unix_test.go:168: // from that that package provide.\nOn 2013/06/11 10:52:30, dfc wrote:\n> why has all this been removed, is your working copy out of date ?\n\nI have no idea. Pressed ^C at the wrong moment? \nI'm not very skilled in mercurial  \n\nI tried to fix it up manually.",
			"disapproval": false,
			"date": "2013-06-11 13:44:12.639600",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9922043/diff/42001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/42001/ssh/client.go#newcode475\nssh/client.go:475: DialAddress string\nI'm sorry, one last thing. The form of the comments should be\n\n// DialAddress is the original address ...\n\nIf I leave this empty, and HostKeyChecker empty, will the Client/Dial functions still operate as before ? If so, please note that in the comment as well as note that if HostKeyChecker is used, DialAddress should also be set.\n\nhttps://codereview.appspot.com/9922043/diff/42001/ssh/test/session_test.go\nFile ssh/test/session_test.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/42001/ssh/test/session_test.go#newcode52\nssh/test/session_test.go:52: }\ncan you please add tests for the other permutations\n\nHostKeyChecker set, and DialAddress set \nHostKeyChecker not set, and DialAddress set \nHostKetChecker not set, and DialAddress not set\n\nby my reading, the last two should be noops.",
			"disapproval": false,
			"date": "2013-06-11 14:14:49.109780",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9922043/diff/42001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/42001/ssh/client.go#newcode475\nssh/client.go:475: DialAddress string\nOn 2013/06/11 14:14:49, dfc wrote:\n> I'm sorry, one last thing. The form of the comments should be\n> \n> // DialAddress is the original address ...\n> \n\nI fixed the form\n\n> If I leave this empty, and HostKeyChecker empty, will the Client/Dial functions\n> still operate as before ? If so, please note that in the comment as well as note\n> that if HostKeyChecker is used, DialAddress should also be set.\n\nThat is up to the HostKeyChecker (which receives a pointer to the Config) to implement. The current test does not look at the server address at all, for example. \n\nI tried tweaking the comment a bit, but not sure if it got any clearer. Suggestions?\n\nhttps://codereview.appspot.com/9922043/diff/42001/ssh/test/session_test.go\nFile ssh/test/session_test.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/42001/ssh/test/session_test.go#newcode52\nssh/test/session_test.go:52: }\nOn 2013/06/11 14:14:49, dfc wrote:\n> can you please add tests for the other permutations\n> \n> HostKeyChecker set, and DialAddress set \n> HostKeyChecker not set, and DialAddress set \n> HostKetChecker not set, and DialAddress not set\n> \n> by my reading, the last two should be noops.\n\nthe test doesn't address this part at all, primarily because SSHD is started with -i, so the client is not really talking to a network address. Since we're not even running ssh.Dial, we wouldn't be testing if it is set correctly in the normal use case. \n\nWe could mock things out more, but IMO the test should \n\n1. generate a RSA key\n2. run sshd with that key as authorized key on a TCP/IP port\n3. use ssh.Dial(\"localhost:PORT\") to setup the connection\n\nthen we'd have a more representative test of real-life usage. I'm happy to take this on, but I'd rather do it in a separate CL.",
			"disapproval": false,
			"date": "2013-06-11 15:02:53.893730",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "My main concern is this change does not break existing code. ie, if there is existing code that does not set these two fields, will it continue to work. If the answer is yes, the existing code will continue to work, then LGTM.",
			"disapproval": false,
			"date": "2013-06-12 02:28:02.903590",
			"approval": true
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The default is a nil HostKeyChecker, which is equivalent to what we have today.\r\n\r\nOn Wed, Jun 12, 2013 at 4:28 AM,  <dave@cheney.net> wrote:\r\n> My main concern is this change does not break existing code. ie, if\r\n> there is existing code that does not set these two fields, will it\r\n> continue to work. If the answer is yes, the existing code will continue\r\n> to work, then LGTM.\r\n>\r\n> https://codereview.appspot.com/9922043/\r\n\r\n\r\n\r\n-- \r\nHan-Wen Nienhuys\r\nGoogle Munich\r\nhanwen@google.com\r\n",
			"disapproval": false,
			"date": "2013-06-12 09:09:34.529020",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM in that case.\r\n\r\nOn Wed, Jun 12, 2013 at 7:09 PM, Han-Wen Nienhuys <hanwen@google.com> wrote:\r\n> The default is a nil HostKeyChecker, which is equivalent to what we have today.\r\n>\r\n> On Wed, Jun 12, 2013 at 4:28 AM,  <dave@cheney.net> wrote:\r\n>> My main concern is this change does not break existing code. ie, if\r\n>> there is existing code that does not set these two fields, will it\r\n>> continue to work. If the answer is yes, the existing code will continue\r\n>> to work, then LGTM.\r\n>>\r\n>> https://codereview.appspot.com/9922043/\r\n>\r\n>\r\n>\r\n> --\r\n> Han-Wen Nienhuys\r\n> Google Munich\r\n> hanwen@google.com\r\n",
			"disapproval": false,
			"date": "2013-06-12 09:20:21.640700",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9922043/diff/48001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/48001/ssh/client.go#newcode444\nssh/client.go:444: config.DialAddress = addr\nThe config argument cannot be mutated like this. It may be used, concurrently, by many connections.",
			"disapproval": false,
			"date": "2013-06-14 19:32:02.712880",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9922043/diff/48001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/48001/ssh/client.go#newcode444\nssh/client.go:444: config.DialAddress = addr\nOn 2013/06/14 19:32:03, agl1 wrote:\n> The config argument cannot be mutated like this. It may be used, concurrently,\n> by many connections.\n\nI guess that brings up back to an earlier version of this patch.\n\n(Is there much use for for concurrent use, though? Each connection would connect as the same username, and the SSH channel system would be more efficient for that use-case.)",
			"disapproval": false,
			"date": "2013-06-17 13:05:03.465560",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Note: I'll make these changes before landing in order to avoid delaying this any further.\n\nhttps://codereview.appspot.com/9922043/diff/59001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/59001/ssh/client.go#newcode46\nssh/client.go:46: address := \"\"\nRather than create a new type (dialedConn), I've split this function into clientWithAddress and Client is now just a small wrapper around it.\n\nhttps://codereview.appspot.com/9922043/diff/59001/ssh/test/test_unix_test.go\nFile ssh/test/test_unix_test.go (right):\n\nhttps://codereview.appspot.com/9922043/diff/59001/ssh/test/test_unix_test.go#newcode113\nssh/test/test_unix_test.go:113: copied := make([]byte, len(public))\nCan just append to nil to do this.",
			"disapproval": false,
			"date": "2013-06-21 16:46:02.086910",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL \n\nreverted to storing the dial address separately.",
			"disapproval": false,
			"date": "2013-06-18 13:01:09.087270",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "friendly ping?\r\n\r\nOn Tue, Jun 18, 2013 at 3:01 PM,  <hanwen@google.com> wrote:\r\n> PTAL\r\n>\r\n> reverted to storing the dial address separately.\r\n>\r\n> https://codereview.appspot.com/9922043/\r\n\r\n\r\n\r\n--\r\nHan-Wen Nienhuys\r\nGoogle Munich\r\nhanwen@google.com\r\n",
			"disapproval": false,
			"date": "2013-06-20 11:21:23.338940",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I really planned to get to this today, honest.\n\nIt's not quite ready to land, but I'll probably just fix the nits before submitting to save a round trip. Tomorrow hopefully.",
			"disapproval": false,
			"date": "2013-06-20 22:26:11.749360",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=5f8544e29ba7&repo=crypto ***\n\ngo.crypto/ssh: add hook for host key checking.\n\nR=dave, agl\nCC=gobot, golang-dev\nhttps://codereview.appspot.com/9922043\n\nCommitter: Adam Langley <agl@golang.org>",
			"disapproval": false,
			"date": "2013-06-21 16:46:54.445400",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"agl@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-07-23 10:13:19.136170",
			"approval": false
		}
	],
	"owner_email": "hanwen@google.com",
	"private": false,
	"base_url": "",
	"owner": "hanwen",
	"subject": "code review 9922043: go.crypto/ssh: add hook for host key checking.",
	"created": "2013-05-31 22:18:03.862480",
	"patchsets": [
		1,
		1001,
		3001,
		9002,
		15001,
		20001,
		21001,
		23001,
		35001,
		38001,
		37005,
		42001,
		48001,
		56001,
		59001
	],
	"modified": "2013-07-23 10:13:23.026980",
	"closed": true,
	"issue": 9922043
}