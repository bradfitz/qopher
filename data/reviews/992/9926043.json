{
	"description": "testing: fix rounding error in roundDown10\n\nFixes issue 5599.\n\nThanks to minux.ma for the suggested fix.\n\nAs we now have a harness to test testing internal functions I added some coverage for testing.roundUp, as it is the main consumer of roundDown10.",
	"cc": [
		"minux.ma@gmail.com",
		"kr@xph.us",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"kr@xph.us",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, kr@xph.us (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-05-31 23:37:59.744810",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No, \"round down\" means \"round to the nearest integer, downwards if\r\nnecessary.\"  If you round down 2.1, you get 2; if you round down 2,\r\nyou still get 2 because it's already rounded down.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-01 03:07:55.029120",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"kr@xph.us",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, kr@xph.us (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-01 01:58:02.282860",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"kr@xph.us",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2013-06-01 02:13:48.271490",
			"approval": true
		},
		{
			"sender": "kr@xph.us",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"kr@xph.us",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Should roundUp and roundDown10 return n if n\nis already of the desired form? Doesn't seem\nimportant one way or the other, but they should\nat least be consistent.\n\nhttps://codereview.appspot.com/9926043/diff/7001/src/pkg/testing/benchmark_test.go\nFile src/pkg/testing/benchmark_test.go (right):\n\nhttps://codereview.appspot.com/9926043/diff/7001/src/pkg/testing/benchmark_test.go#newcode18\nsrc/pkg/testing/benchmark_test.go:18: {100, 10},\nHere n is a power of 10.\nDoesn't return n.\n\nhttps://codereview.appspot.com/9926043/diff/7001/src/pkg/testing/benchmark_test.go#newcode39\nsrc/pkg/testing/benchmark_test.go:39: {1000, 1000},\nHere n is of the form [1eX, 2eX, 5eX].\nReturns n.\n\nhttps://codereview.appspot.com/9926043/diff/7001/src/pkg/testing/benchmark_test.go#newcode43\nsrc/pkg/testing/benchmark_test.go:43: {5000, 10000},\nHere n is of the form [1eX, 2eX, 5eX].\nDoesn't return n.",
			"disapproval": false,
			"date": "2013-06-01 02:17:31.649460",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"kr@xph.us",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/01 03:07:55, r wrote:\n> No, \"round down\" means \"round to the nearest integer, downwards if\n> necessary.\"  If you round down 2.1, you get 2; if you round down 2,\n> you still get 2 because it's already rounded down.\n> \n> -rob\n\nPTAL. Thanks to r and minux for clarification. There was a mistake in my original test data. \n\nI've reverted to khr's fix in 9915045 (with permission).\n\nPlease observe the latest change to the roundUp test.",
			"disapproval": false,
			"date": "2013-06-01 04:35:32.091870",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jun 1, 2013 at 10:17 AM, <kr@xph.us> wrote:\r\n\r\n> Should roundUp and roundDown10 return n if n\r\n> is already of the desired form? Doesn't seem\r\n> important one way or the other, but they should\r\n> at least be consistent.\r\n>\r\nif we decide to do this, we should fix the docs (the docs is not clear\r\nabout this corner case\r\nin roundDown10 (i'm assuming that the \"down\" there means the output should\r\nalways < input).\r\n",
			"disapproval": false,
			"date": "2013-06-01 02:23:46.630070",
			"approval": false
		},
		{
			"sender": "kr@xph.us",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"kr@xph.us",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Analogously to \"round down\", \"round up\" must mean\n\"round to the nearest integer, upwards if necessary\".\n\nSo, the tests for roundUp should reflect that.\n\nhttps://codereview.appspot.com/9926043/diff/14001/src/pkg/testing/benchmark_test.go\nFile src/pkg/testing/benchmark_test.go (right):\n\nhttps://codereview.appspot.com/9926043/diff/14001/src/pkg/testing/benchmark_test.go#newcode38\nsrc/pkg/testing/benchmark_test.go:38: {1, 2},\nShould be {1, 1}\n\nhttps://codereview.appspot.com/9926043/diff/14001/src/pkg/testing/benchmark_test.go#newcode41\nsrc/pkg/testing/benchmark_test.go:41: {1000, 2000},\nShould be {1000, 1000}\n\nhttps://codereview.appspot.com/9926043/diff/14001/src/pkg/testing/benchmark_test.go#newcode45\nsrc/pkg/testing/benchmark_test.go:45: {5000, 10000},\nLikewise, {5000, 5000}",
			"disapproval": false,
			"date": "2013-06-01 06:12:54.086610",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"kr@xph.us",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL. Code and test adjusted to match the specification in the comment.",
			"disapproval": false,
			"date": "2013-06-01 06:29:16.334260",
			"approval": false
		},
		{
			"sender": "kr@xph.us",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"kr@xph.us",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-06-01 06:32:50.570410",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"kr@xph.us",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-06-01 13:43:53.303490",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"kr@xph.us",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=a115231d557b ***\n\ntesting: fix rounding error in roundDown10\n\nFixes issue 5599.\n\nThanks to minux.ma for the suggested fix.\n\nAs we now have a harness to test testing internal functions I added some coverage for testing.roundUp, as it is the main consumer of roundDown10.\n\nR=minux.ma, kr, r\nCC=golang-dev\nhttps://codereview.appspot.com/9926043",
			"disapproval": false,
			"date": "2013-06-01 23:13:33.441250",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 9926043: testing: fix rounding error in roundDown10",
	"created": "2013-05-31 23:35:45.688630",
	"patchsets": [
		1,
		2001,
		2002,
		7001,
		14001,
		19001,
		14002,
		26001
	],
	"modified": "2013-06-03 01:47:23.913130",
	"closed": true,
	"issue": 9926043
}