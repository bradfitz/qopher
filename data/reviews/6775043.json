{
	"description": "crypto/tls: add support for ECDH ECDSA\n\nAdd support for ECDH ECDSA (RFC4492). ECDH ECDSA implements a TLS key\nagreement where the client generates an ephemeral EC public/private\nkey pair and signs it. The pre-master secret is then calculated using\nECDH. Alternatively a fixed client EC public/private key pair can be\nused.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"agl@golang.org"
	],
	"messages": [
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-11-24 16:14:42.070340",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"jsing@google.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I stopped the review at this point.\n\nFixed ECDH is a very obscure corner of TLS that very little supports. Client-auth with fixed ECDH is basically unheard of.\n\nI'm hesitant that we want the cost of code this odd. Are you sure that you don't want ECDHE_ECDSA?\n\nhttps://codereview.appspot.com/6775043/diff/17001/src/pkg/crypto/tls/cipher_suites.go\nFile src/pkg/crypto/tls/cipher_suites.go (right):\n\nhttps://codereview.appspot.com/6775043/diff/17001/src/pkg/crypto/tls/cipher_suites.go#newcode59\nsrc/pkg/crypto/tls/cipher_suites.go:59: {TLS_ECDH_ECDSA_WITH_RC4_128_SHA, 16, 20, 0, ecdhECDSAKA, true, cipherRC4, macSHA1},\nECDH_ECDSA, not ECDHE_ECDSA? That's a very obscure ciphersuite and probably not what you wanted.\n\nhttps://codereview.appspot.com/6775043/diff/17001/src/pkg/crypto/tls/common.go\nFile src/pkg/crypto/tls/common.go (right):\n\nhttps://codereview.appspot.com/6775043/diff/17001/src/pkg/crypto/tls/common.go#newcode99\nsrc/pkg/crypto/tls/common.go:99: certTypeRSAFixedECDH   = 65 // A certificate containing an ECDH-capable public key, signed with RSA.\n\"A certificate containing an ECDH public value, signed with RSA\"\n\nhttps://codereview.appspot.com/6775043/diff/17001/src/pkg/crypto/tls/common.go#newcode100\nsrc/pkg/crypto/tls/common.go:100: certTypeECDSAFixedECDH = 66 // A certificate containing an ECDH-capable public key, signed with ECDSA.\nditto, but with ECDSA of course.\n\nhttps://codereview.appspot.com/6775043/diff/17001/src/pkg/crypto/tls/handshake_client.go\nFile src/pkg/crypto/tls/handshake_client.go (right):\n\nhttps://codereview.appspot.com/6775043/diff/17001/src/pkg/crypto/tls/handshake_client.go#newcode199\nsrc/pkg/crypto/tls/handshake_client.go:199: case certTypeECDSAFixedECDH:\nclient auth with fixed ECDH is even more obscure than fixed ECDH server-side!",
			"disapproval": false,
			"date": "2012-11-26 15:33:06.554160",
			"approval": false
		}
	],
	"owner_email": "jsing@google.com",
	"private": false,
	"base_url": "",
	"owner": "jsing",
	"subject": "code review 6775043: crypto/tls: add support for ECDH ECDSA",
	"created": "2012-10-25 14:28:10.012420",
	"patchsets": [
		5001,
		8001,
		9007,
		12001,
		13001,
		6016,
		17001
	],
	"modified": "2012-11-26 15:33:06.554160",
	"closed": false,
	"issue": 6775043
}