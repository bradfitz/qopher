{
	"description": "goinstall: More intelligent vcs selection for common sites\n\ngoinstall has built in support for a few common code hosting sites.  The\nidentification of which vcs tool should be used was based purely on a\nregex match against the provided import path.  The problem with this\napproach is that it requires distinct import paths for different vcs\ntools on the same site.\n\nSince bitbucket has recently starting hosting Git repositories under the\nsame bitbucket.org/user/project scheme as it already hosts Mercurial\nrepositories, now would seem a good time to take a more flexible\napproach.\n\nWe still match the import path against a list of regexes, but now the\nmatch is purely to distinguish the different hosting sites.  Once the\nsite is identified, the specified function is called with the repo and\npath matched out of the import string.  This function is responsible for\ncreating the vcsMatch structure that tells us what we need to download\nthe code.\n\nFor github and launchpad, only one vcs tool is currently supported, so\nthese functions can simply return a vcsMatch structure.  For googlecode,\nwe retain the behaviour of determing the vcs from the import path - but\nnow it is done by the function instead of the regex.  For bitbucket, we\nuse api.bitbucket.org to find out what sort of repository the specified\nimport path corresponds to - and then construct the appropriate vcsMatch\nstructure.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "julian@quantumfyre.co.uk",
			"recipients": [
				"julian@quantumfyre.co.uk",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: adg@golang.org, golang-dev@googlegroups.com, rsc@golang.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-26 23:06:31.435663",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"julian@quantumfyre.co.uk",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nIt would be nice to have some tests for this, but I think it's worth going ahead and committing this one for now.",
			"disapproval": false,
			"date": "2011-10-27 08:44:04.676098",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"julian@quantumfyre.co.uk",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=69423942510b ***\n\ngoinstall: More intelligent vcs selection for common sites\n\ngoinstall has built in support for a few common code hosting sites.  The\nidentification of which vcs tool should be used was based purely on a\nregex match against the provided import path.  The problem with this\napproach is that it requires distinct import paths for different vcs\ntools on the same site.\n\nSince bitbucket has recently starting hosting Git repositories under the\nsame bitbucket.org/user/project scheme as it already hosts Mercurial\nrepositories, now would seem a good time to take a more flexible\napproach.\n\nWe still match the import path against a list of regexes, but now the\nmatch is purely to distinguish the different hosting sites.  Once the\nsite is identified, the specified function is called with the repo and\npath matched out of the import string.  This function is responsible for\ncreating the vcsMatch structure that tells us what we need to download\nthe code.\n\nFor github and launchpad, only one vcs tool is currently supported, so\nthese functions can simply return a vcsMatch structure.  For googlecode,\nwe retain the behaviour of determing the vcs from the import path - but\nnow it is done by the function instead of the regex.  For bitbucket, we\nuse api.bitbucket.org to find out what sort of repository the specified\nimport path corresponds to - and then construct the appropriate vcsMatch\nstructure.\n\nR=golang-dev, adg\nCC=golang-dev, rsc\nhttp://codereview.appspot.com/5306069\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2011-10-27 08:45:14.660865",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"julian@quantumfyre.co.uk",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Please add some tests, to make it less likely\nthat I will break this when moving it into \"go\".\n\nThanks.",
			"disapproval": false,
			"date": "2011-10-31 16:16:39.803842",
			"approval": false
		},
		{
			"sender": "julian@quantumfyre.co.uk",
			"recipients": [
				"julian@quantumfyre.co.uk",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: adg@golang.org, golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-26 22:56:13.694132",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"julian@quantumfyre.co.uk",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "I like this.\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go\nFile src/cmd/goinstall/download.go (right):\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode127\nsrc/cmd/goinstall/download.go:127: {regexp.MustCompile(`^([a-z0-9\\-]+\\.googlecode\\.com/(svn|git|hg))(/[a-z0-9A-Z_.\\-/]*)?$`), googleVcs},\nplease expand these lines to be of the form:\n{\n   regexp.Must...,\n   googleVcs,\n},\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode149\nsrc/cmd/goinstall/download.go:149: panic(\"Unknown googlecode vcs: \" + parts[1])\nreturn nil, os.NewError(\"unsupported googlecode vcs: \" + parts[1])\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode154\nsrc/cmd/goinstall/download.go:154: return nil, os.NewError(\"repository \" + repo + path + \" should not have .git suffix\")\nI think the repo + path context is provided upstream (in the install function), so this should be simply\nreturn nil, os.NewError(\"path must not include .git suffix\")\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode159\nsrc/cmd/goinstall/download.go:159: type bitbucketInfo struct {\nPut this type definition inside the bitbuckedVcs function.\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode165\nsrc/cmd/goinstall/download.go:165: return nil, os.NewError(\"repository \" + repo + path + \" should not have .git suffix\")\nditto my earlier comment from githubVcs\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode170\nsrc/cmd/goinstall/download.go:170: // Use a GET request to api.bitbucket.org to find out about the repository\n// Ask the bitbucket API what kind of repository this is.\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode171\nsrc/cmd/goinstall/download.go:171: r, err := http.Get(\"https://api.bitbucket.org/1.0/repositories/\" + parts[1])\nPlease put this URL in a constant (at the top of the function)\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode174\nsrc/cmd/goinstall/download.go:174: return nil, os.NewError(s)\nreturn nil, fmt.Errorf(\"error querying BitBucket API: %v\", err)\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode181\nsrc/cmd/goinstall/download.go:181: return nil, os.NewError(s)\nditto\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode184\nsrc/cmd/goinstall/download.go:184: var info bitbucketInfo\nvar response struct { Vcs string `json:\"scm\"` }\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode186\nsrc/cmd/goinstall/download.go:186: // Decode the JSON into a bitbucketInfo structure - currently the only\ndrop this comment and the blank line above\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode189\nsrc/cmd/goinstall/download.go:189: err = d.Decode(&info)\nerr = json.NewDecoder(r.Body).Decode(&repsonse)\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode192\nsrc/cmd/goinstall/download.go:192: return nil, os.NewError(s)\nditto previous error changes (use the same message for each - the err string itself will explain what went wrong)\n\nhttp://codereview.appspot.com/5306069/diff/8001/src/cmd/goinstall/download.go#newcode203\nsrc/cmd/goinstall/download.go:203: return nil, os.NewError(\"Unknown vcs type \" + info.Vcs + \"received from api.bitbucket.org\")\nreturn nil, os.NewError(\"unsupported bitbucket vcs: \" + info.Vcs)",
			"disapproval": false,
			"date": "2011-10-27 04:58:49.513557",
			"approval": false
		},
		{
			"sender": "julian@quantumfyre.co.uk",
			"recipients": [
				"julian@quantumfyre.co.uk",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-27 07:40:26.605541",
			"approval": false
		}
	],
	"owner_email": "julian@quantumfyre.co.uk",
	"private": false,
	"base_url": "",
	"owner": "quantumfyre",
	"subject": "code review 5306069: goinstall: More intelligent vcs selection for common sites",
	"created": "2011-10-26 22:55:00.169933",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		10001
	],
	"modified": "2011-10-31 16:16:39.986805",
	"closed": true,
	"issue": 5306069
}