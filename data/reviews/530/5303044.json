{
	"description": "godoc: generate package toc in template, not in JavaScript\n\n1. Generate TOC for package pages using template,\ninstead of using JavaScript magic.  This makes the\npages generated by godoc -html easier to export\nto other systems.\n\n2. Make TOC one column.  It's hard to do two columns\nportably without invoking JavaScript.\n\n3. Since the TOC is only one column, show full type\nsignatures for functions and methods.  Many times\nthat's all you need to see anyway.\n\n4. Name the section after the TOC \"Overview\".\nNaming it something is important, to set it off\nfrom the TOC and so that there's a quick link to\nit in the TOC.\n\nFor now, some illustrative examples:\n\nhttp://swtch.com:6060/pkg/io/\nhttp://swtch.com:6060/pkg/strings/\nhttp://swtch.com:6060/pkg/tabwriter/\nhttp://swtch.com:6060/pkg/unicode/\n\nFixes issue 1982.",
	"cc": [
		"gri@golang.org",
		"bradfitz@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> http://codereview.appspot.com/5303044/diff/3/lib/godoc/package.html#newcode11\n> lib/godoc/package.html:11: {{with .Consts}}\n> this \"with\" is not needed\n> \n> http://codereview.appspot.com/5303044/diff/3/lib/godoc/package.html#newcode14\n> lib/godoc/package.html:14: {{with .Vars}}\n> same here\n> \n> http://codereview.appspot.com/5303044/diff/3/lib/godoc/package.html#newcode34\n> lib/godoc/package.html:34: {{with .Bugs}}\n> and here\n\nI think those {{with}} are needed.  They serve as if statements.\nI forgot there was an {{if}}.  Will change to that.\n",
			"disapproval": false,
			"date": "2011-10-18 20:19:14.282311",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I am fine with this change. Presumably you don't want to have the summary in the textual template? (not sure it's needed or even makes sense).",
			"disapproval": false,
			"date": "2011-10-18 19:56:20.257767",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> I think the identifier names in the list should be bold or some other\n> color, or the surrounding text should be de-emphasized somehow.\n> It's all useful information, but more often than not I'm just looking\n> for a name.\n\nI am skeptical.  They're all lined up, at least in chunks,\nso it's easy to scan.  Syntax highlighting and all that.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-10-18 21:42:38.965350",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I think package http is a bad example.\nPackage http is way way way too big.\nA presentation that makes that clearer is not a bad thing.\n\n",
			"disapproval": false,
			"date": "2011-10-18 19:07:18.256010",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello gri@golang.org, bradfitz@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-18 20:08:36.449346",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello gri (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-18 18:39:29.317563",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I like generating it server-side and not jumping around, and I think I could\nlike the full signatures, but I'm not a fan of the typography as-is.  It\nlooks like a big block of text.\n\nOn my 30\" monitor, the block of text continues well past the \"fold\":\nhttp://swtch.com:6060/pkg/http/\n\nLooks so much lighter at http://golang.org/pkg/http/ and the start of the\npage is above the fold too.\n\n\nOn Tue, Oct 18, 2011 at 11:39 AM, <rsc@golang.org> wrote:\n\n> Reviewers: gri,\n>\n> Message:\n> Hello gri (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> PROPOSAL: godoc: generate package toc manually\n>\n> 1. Generate TOC for package pages using template,\n> instead of using JavaScript magic.  This makes the\n> pages generated by godoc -html easier to export\n> to other systems.\n>\n> 2. Make TOC one column.  It's hard to do two columns\n> portably without invoking JavaScript.\n>\n> 3. Since the TOC is only one column, show full type\n> signatures for functions and methods.  Many times\n> that's all you need to see anyway.\n>\n> 4. Name the section after the TOC \"Overview\".\n> Naming it something is important, to set it off\n> from the TOC and so that there's a quick link to\n> it in the TOC.  Happy to change the name.\n>\n> For now, some illustrative examples:\n>\n> http://swtch.com:6060/pkg/io/\n> http://swtch.com:6060/pkg/**strings/ <http://swtch.com:6060/pkg/strings/>\n> http://swtch.com:6060/pkg/**tabwriter/<http://swtch.com:6060/pkg/tabwriter/>\n> http://swtch.com:6060/pkg/**unicode/ <http://swtch.com:6060/pkg/unicode/>\n>\n> Would fix issue 1982.\n>\n> Please review this at http://codereview.appspot.com/**5303044/<http://codereview.appspot.com/5303044/>\n>\n> Affected files:\n>  M doc/godocs.js\n>  M lib/godoc/package.html\n>\n>\n> Index: doc/godocs.js\n> ==============================**==============================**=======\n> --- a/doc/godocs.js\n> +++ b/doc/godocs.js\n> @@ -57,6 +57,7 @@\n>  * links.  \"Decorates\" the element with id==\"nav\" with this table of\n> contents.\n>  */\n>  function godocs_generateTOC() {\n> +  if (document.getElementById('**manual-nav')) { return; }\n>   var navbar = document.getElementById('nav')**;\n>   if (!navbar) { return; }\n>\n> Index: lib/godoc/package.html\n> ==============================**==============================**=======\n> --- a/lib/godoc/package.html\n> +++ b/lib/godoc/package.html\n> @@ -3,10 +3,51 @@\n>        Use of this source code is governed by a BSD-style\n>        license that can be found in the LICENSE file.\n>  -->\n> +<!-- Table of contents; must be named manual-nav to turn off auto nav. -->\n> +<div id=\"manual-nav\">\n> +{{with .PDoc}}\n> +       <dl>\n> +       <dd><a href=\"#Overview\">Overview</a><**/dd>\n> +       {{with .Consts}}\n> +               <dd><a href=\"#Constants\">Constants</**a></dd>\n> +       {{end}}\n> +       {{with .Vars}}\n> +               <dd><a href=\"#Variables\">Variables</**a></dd>\n> +       {{end}}\n> +       {{with .Funcs}}\n> +               {{range .}}\n> +                       {{$name_html := html .Name}}\n> +                       <dd><a href=\"#{{$name_html}}\">{{node_**html .Decl\n> $.FSet}}</a></dd>\n> +               {{end}}\n> +       {{end}}\n> +       {{with .Types}}\n> +               {{range .}}\n> +                       {{$tname := printf \"%s\" .Type.Name}}\n> +                       {{$tname_html := node_html .Type.Name $.FSet}}\n> +                       <dd><a href=\"#{{$tname_html}}\">type\n> {{$tname_html}}</a></dd>\n> +                       {{range .Factories}}\n> +                               {{$name_html := html .Name}}\n> +                               <dd>&nbsp; &nbsp; <a\n> href=\"#{{$name_html}}\">{{node_**html .Decl $.FSet}}</a></dd>\n> +                       {{end}}\n> +                       {{range .Methods}}\n> +                               {{$name_html := html .Name}}\n> +                               <dd>&nbsp; &nbsp; <a\n> href=\"#{{$tname_html}}.{{$**name_html}}\">{{node_html .Decl\n> $.FSet}}</a></dd>\n> +                       {{end}}\n> +               {{end}}\n> +       {{end}}\n> +       {{with .Bugs}}\n> +               <dd><a href=\"#Bugs\">Bugs</a></dd>\n> +       {{end}}\n> +       </dl>\n> +{{end}}\n> +</div>\n> +\n> +<!-- Main page -->\n>  {{with .PAst}}\n>        <pre>{{node_html . $.FSet}}</pre>\n>  {{end}}\n>  {{with .PDoc}}\n> +       <h2 id=\"Overview\">Overview</h2>\n>        <!-- PackageName is printed as title by the top-level template -->\n>        {{if $.IsPkg}}\n>                <p><code>import \"{{html .ImportPath}}\"</code></p>\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-10-18 18:58:49.269886",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Oct 18, 2011 at 15:56, gri@golang.org wrote:\n> I am fine with this change. Presumably you don't want to have the\n> summary in the textual template? (not sure it's needed or even makes\n> sense).\n\nI think that's okay (no TOC in text output), since\non the command line people do 'godoc strings Split'\nif they know what they're looking for.\n\nI will remove the PROPOSAL part, apply Rob's fixes,\nand resend.\n\n",
			"disapproval": false,
			"date": "2011-10-18 20:05:06.357522",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "i think this is an improvement.\n\nhttp://codereview.appspot.com/5303044/diff/4001/lib/godoc/package.html\nFile lib/godoc/package.html (right):\n\nhttp://codereview.appspot.com/5303044/diff/4001/lib/godoc/package.html#newcode23\nlib/godoc/package.html:23: {{with .Types}}\nthis could be just {{range .Types}}\nsimilar changes elsewhere.",
			"disapproval": false,
			"date": "2011-10-18 19:32:09.474039",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I like it.\n\nI think the identifier names in the list should be bold or some other\ncolor, or the surrounding text should be de-emphasized somehow.\nIt's all useful information, but more often than not I'm just looking\nfor a name.\n\nOn 19 October 2011 05:39,  <rsc@golang.org> wrote:\n> Reviewers: gri,\n>\n> Message:\n> Hello gri (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> PROPOSAL: godoc: generate package toc manually\n>\n> 1. Generate TOC for package pages using template,\n> instead of using JavaScript magic. \u00a0This makes the\n> pages generated by godoc -html easier to export\n> to other systems.\n>\n> 2. Make TOC one column. \u00a0It's hard to do two columns\n> portably without invoking JavaScript.\n>\n> 3. Since the TOC is only one column, show full type\n> signatures for functions and methods. \u00a0Many times\n> that's all you need to see anyway.\n>\n> 4. Name the section after the TOC \"Overview\".\n> Naming it something is important, to set it off\n> from the TOC and so that there's a quick link to\n> it in the TOC. \u00a0Happy to change the name.\n>\n> For now, some illustrative examples:\n>\n> http://swtch.com:6060/pkg/io/\n> http://swtch.com:6060/pkg/strings/\n> http://swtch.com:6060/pkg/tabwriter/\n> http://swtch.com:6060/pkg/unicode/\n>\n> Would fix issue 1982.\n>\n> Please review this at http://codereview.appspot.com/5303044/\n>\n> Affected files:\n> \u00a0M doc/godocs.js\n> \u00a0M lib/godoc/package.html\n>\n>\n> Index: doc/godocs.js\n> ===================================================================\n> --- a/doc/godocs.js\n> +++ b/doc/godocs.js\n> @@ -57,6 +57,7 @@\n> \u00a0* links. \u00a0\"Decorates\" the element with id==\"nav\" with this table of\n> contents.\n> \u00a0*/\n> \u00a0function godocs_generateTOC() {\n> + \u00a0if (document.getElementById('manual-nav')) { return; }\n> \u00a0 var navbar = document.getElementById('nav');\n> \u00a0 if (!navbar) { return; }\n>\n> Index: lib/godoc/package.html\n> ===================================================================\n> --- a/lib/godoc/package.html\n> +++ b/lib/godoc/package.html\n> @@ -3,10 +3,51 @@\n> \u00a0 \u00a0 \u00a0 \u00a0Use of this source code is governed by a BSD-style\n> \u00a0 \u00a0 \u00a0 \u00a0license that can be found in the LICENSE file.\n> \u00a0-->\n> +<!-- Table of contents; must be named manual-nav to turn off auto nav. -->\n> +<div id=\"manual-nav\">\n> +{{with .PDoc}}\n> + \u00a0 \u00a0 \u00a0 <dl>\n> + \u00a0 \u00a0 \u00a0 <dd><a href=\"#Overview\">Overview</a></dd>\n> + \u00a0 \u00a0 \u00a0 {{with .Consts}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <dd><a href=\"#Constants\">Constants</a></dd>\n> + \u00a0 \u00a0 \u00a0 {{end}}\n> + \u00a0 \u00a0 \u00a0 {{with .Vars}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <dd><a href=\"#Variables\">Variables</a></dd>\n> + \u00a0 \u00a0 \u00a0 {{end}}\n> + \u00a0 \u00a0 \u00a0 {{with .Funcs}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{range .}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{$name_html := html .Name}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <dd><a href=\"#{{$name_html}}\">{{node_html .Decl\n> $.FSet}}</a></dd>\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{end}}\n> + \u00a0 \u00a0 \u00a0 {{end}}\n> + \u00a0 \u00a0 \u00a0 {{with .Types}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{range .}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{$tname := printf \"%s\" .Type.Name}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{$tname_html := node_html .Type.Name $.FSet}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <dd><a href=\"#{{$tname_html}}\">type\n> {{$tname_html}}</a></dd>\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{range .Factories}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{$name_html := html .Name}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <dd>&nbsp; &nbsp; <a\n> href=\"#{{$name_html}}\">{{node_html .Decl $.FSet}}</a></dd>\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{end}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{range .Methods}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{$name_html := html .Name}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <dd>&nbsp; &nbsp; <a\n> href=\"#{{$tname_html}}.{{$name_html}}\">{{node_html .Decl $.FSet}}</a></dd>\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{end}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 {{end}}\n> + \u00a0 \u00a0 \u00a0 {{end}}\n> + \u00a0 \u00a0 \u00a0 {{with .Bugs}}\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 <dd><a href=\"#Bugs\">Bugs</a></dd>\n> + \u00a0 \u00a0 \u00a0 {{end}}\n> + \u00a0 \u00a0 \u00a0 </dl>\n> +{{end}}\n> +</div>\n> +\n> +<!-- Main page -->\n> \u00a0{{with .PAst}}\n> \u00a0 \u00a0 \u00a0 \u00a0<pre>{{node_html . $.FSet}}</pre>\n> \u00a0{{end}}\n> \u00a0{{with .PDoc}}\n> + \u00a0 \u00a0 \u00a0 <h2 id=\"Overview\">Overview</h2>\n> \u00a0 \u00a0 \u00a0 \u00a0<!-- PackageName is printed as title by the top-level template -->\n> \u00a0 \u00a0 \u00a0 \u00a0{{if $.IsPkg}}\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0<p><code>import \"{{html .ImportPath}}\"</code></p>\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-10-18 21:12:50.532959",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5303044/diff/3/lib/godoc/package.html\nFile lib/godoc/package.html (right):\n\nhttp://codereview.appspot.com/5303044/diff/3/lib/godoc/package.html#newcode11\nlib/godoc/package.html:11: {{with .Consts}}\nthis \"with\" is not needed\n\nhttp://codereview.appspot.com/5303044/diff/3/lib/godoc/package.html#newcode14\nlib/godoc/package.html:14: {{with .Vars}}\nsame here\n\nhttp://codereview.appspot.com/5303044/diff/3/lib/godoc/package.html#newcode34\nlib/godoc/package.html:34: {{with .Bugs}}\nand here",
			"disapproval": false,
			"date": "2011-10-18 20:16:40.546566",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=eec8e79200f0 ***\n\ngodoc: generate package toc in template, not in JavaScript\n\n1. Generate TOC for package pages using template,\ninstead of using JavaScript magic.  This makes the\npages generated by godoc -html easier to export\nto other systems.\n\n2. Make TOC one column.  It's hard to do two columns\nportably without invoking JavaScript.\n\n3. Since the TOC is only one column, show full type\nsignatures for functions and methods.  Many times\nthat's all you need to see anyway.\n\n4. Name the section after the TOC \"Overview\".\nNaming it something is important, to set it off\nfrom the TOC and so that there's a quick link to\nit in the TOC.\n\nFor now, some illustrative examples:\n\nhttp://swtch.com:6060/pkg/io/\nhttp://swtch.com:6060/pkg/strings/\nhttp://swtch.com:6060/pkg/tabwriter/\nhttp://swtch.com:6060/pkg/unicode/\n\nFixes issue 1982.\n\nR=gri, bradfitz, r\nCC=golang-dev\nhttp://codereview.appspot.com/5303044",
			"disapproval": false,
			"date": "2011-10-18 20:23:38.307654",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-10-18 20:20:50.680624",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello gri@golang.org, bradfitz@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-18 20:20:13.475220",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I'm working on a CL.\n\nOn 19 October 2011 08:42, Russ Cox <rsc@golang.org> wrote:\n>> I think the identifier names in the list should be bold or some other\n>> color, or the surrounding text should be de-emphasized somehow.\n>> It's all useful information, but more often than not I'm just looking\n>> for a name.\n>\n> I am skeptical. \u00a0They're all lined up, at least in chunks,\n> so it's easy to scan. \u00a0Syntax highlighting and all that.\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-10-18 22:02:26.891366",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5303044: godoc: generate package toc in template, not in JavaScript",
	"created": "2011-10-18 18:39:04.590072",
	"patchsets": [
		1,
		2001,
		4001,
		3,
		12001,
		15001
	],
	"modified": "2011-10-18 21:12:50.587246",
	"closed": true,
	"issue": 5303044
}