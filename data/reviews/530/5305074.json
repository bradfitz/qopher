{
	"description": "html: process </td> tags; foster parent at most one node per token\n\nCorrectly close table cell when </td> is read.\n\nBecause of reconstructing the active formatting elements, more than one\nnode may be created when reading a single token.\nIf both nodes are foster parented, they will be siblings, but the first\nnode should be the parent of the second.\n\nPass tests1.dat, test 77:\n<a href=\"blah\">aba<table><a href=\"foo\">br<tr><td></td></tr>x</table>aoe\n\n| <html>\n|   <head>\n|   <body>\n|     <a>\n|       href=\"blah\"\n|       \"aba\"\n|       <a>\n|         href=\"foo\"\n|         \"br\"\n|       <a>\n|         href=\"foo\"\n|         \"x\"\n|       <table>\n|         <tbody>\n|           <tr>\n|             <td>\n|     <a>\n|       href=\"foo\"\n|       \"aoe\"",
	"cc": [
		"nigeltao@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=761ef67b1235 ***\n\nhtml: process </td> tags; foster parent at most one node per token\n\nCorrectly close table cell when </td> is read.\n\nBecause of reconstructing the active formatting elements, more than one\nnode may be created when reading a single token.\nIf both nodes are foster parented, they will be siblings, but the first\nnode should be the parent of the second.\n\nPass tests1.dat, test 77:\n<a href=\"blah\">aba<table><a href=\"foo\">br<tr><td></td></tr>x</table>aoe\n\n| <html>\n|   <head>\n|   <body>\n|     <a>\n|       href=\"blah\"\n|       \"aba\"\n|       <a>\n|         href=\"foo\"\n|         \"br\"\n|       <a>\n|         href=\"foo\"\n|         \"x\"\n|       <table>\n|         <tbody>\n|           <tr>\n|             <td>\n|     <a>\n|       href=\"foo\"\n|       \"aoe\"\n\nR=nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/5305074\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2011-11-01 00:43:01.508755",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2011-11-01 00:42:34.284084",
			"approval": true
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5305074/diff/5001/src/pkg/html/parse.go\nFile src/pkg/html/parse.go (right):\n\nhttp://codereview.appspot.com/5305074/diff/5001/src/pkg/html/parse.go#newcode129\nsrc/pkg/html/parse.go:129: p.fosterParenting = false\nOn 2011/10/29 23:13:02, nigeltao wrote:\n> Does this belong between lines 115 and 116 instead? The tests pass either way,\n> and seems cleaner, but the semantics might be subtly different if you call\n> fosterParent outside of addChild.\n\nIt does look cleaner. But I think that if an implied end tag was created by inBodyEndTagFormatting as part of processing a start tag inside a table, there would be a possibility that moving the \"fosterParenting = false\" could make the tags end up mis-nested.",
			"disapproval": false,
			"date": "2011-10-31 15:42:14.494510",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-29 04:16:46.385869",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5305074/diff/5001/src/pkg/html/parse.go\nFile src/pkg/html/parse.go (right):\n\nhttp://codereview.appspot.com/5305074/diff/5001/src/pkg/html/parse.go#newcode129\nsrc/pkg/html/parse.go:129: p.fosterParenting = false\nDoes this belong between lines 115 and 116 instead? The tests pass either way, and seems cleaner, but the semantics might be subtly different if you call fosterParent outside of addChild.",
			"disapproval": false,
			"date": "2011-10-29 23:13:01.699650",
			"approval": false
		}
	],
	"owner_email": "andybalholm@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "andybalholm",
	"subject": "code review 5305074: html: process </td> tags; foster parent at most one nod...",
	"created": "2011-10-29 04:16:21.378707",
	"patchsets": [
		1,
		2001,
		5001,
		9002,
		11001
	],
	"modified": "2011-11-01 22:50:31.355692",
	"closed": true,
	"issue": 5305074
}