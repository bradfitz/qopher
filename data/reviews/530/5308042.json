{
	"description": "old/regexp, old/template, template: use rune\n\nNothing terribly interesting here.",
	"cc": [
		"r@golang.org",
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-19 17:27:55.540792",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5308042/diff/5001/src/pkg/old/regexp/regexp.go\nFile src/pkg/old/regexp/regexp.go (right):\n\nhttp://codereview.appspot.com/5308042/diff/5001/src/pkg/old/regexp/regexp.go#newcode288\nsrc/pkg/old/regexp/regexp.go:288: func escape(c rune) rune {\nthe result should be int\n\nhttp://codereview.appspot.com/5308042/diff/5001/src/pkg/old/regexp/regexp.go#newcode290\nsrc/pkg/old/regexp/regexp.go:290: if rune(b) == c {\nthis one shouldn't be needed: if b == c ...\n\nhttp://codereview.appspot.com/5308042/diff/5001/src/pkg/old/regexp/regexp.go#newcode291\nsrc/pkg/old/regexp/regexp.go:291: return rune(i)\nreturn i,  this is an index",
			"disapproval": false,
			"date": "2011-10-19 18:20:43.200469",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "gri is right about esacpe; otherwise LGTM\n\nhttp://codereview.appspot.com/5308042/diff/5001/src/pkg/old/regexp/regexp.go\nFile src/pkg/old/regexp/regexp.go (right):\n\nhttp://codereview.appspot.com/5308042/diff/5001/src/pkg/old/regexp/regexp.go#newcode122\nsrc/pkg/old/regexp/regexp.go:122: char   rune       // iChar\nnice!",
			"disapproval": false,
			"date": "2011-10-19 18:32:25.108482",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Thanks.\n\n> http://codereview.appspot.com/5308042/diff/5001/src/pkg/old/regexp/regexp.go#newcode288\n> src/pkg/old/regexp/regexp.go:288: func escape(c rune) rune {\n> the result should be int\n\nIndeed, done.\n\n> http://codereview.appspot.com/5308042/diff/5001/src/pkg/old/regexp/regexp.go#newcode290\n> src/pkg/old/regexp/regexp.go:290: if rune(b) == c {\n> this one shouldn't be needed: if b == c ...\n\nTried that; b is a byte.\n\n> http://codereview.appspot.com/5308042/diff/5001/src/pkg/old/regexp/regexp.go#newcode291\n> src/pkg/old/regexp/regexp.go:291: return rune(i)\n> return i,  this is an index\n\nDone.\n",
			"disapproval": false,
			"date": "2011-10-19 18:59:16.445653",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=cb2e966ed5fe ***\n\nold/regexp, old/template, template: use rune\n\nNothing terribly interesting here.\n\nR=r, gri\nCC=golang-dev\nhttp://codereview.appspot.com/5308042",
			"disapproval": false,
			"date": "2011-10-26 05:22:48.118012",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5308042: old/regexp, old/template, template: use rune",
	"created": "2011-10-19 03:50:14.312631",
	"patchsets": [
		1,
		2001,
		5001,
		11001,
		13001
	],
	"modified": "2011-10-26 05:22:49.723835",
	"closed": true,
	"issue": 5308042
}