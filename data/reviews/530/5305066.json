{
	"description": "gofix: error fix\n\nTo make the error fix more useful, expand typecheck to gather\nmore information about struct fields, typecheck range statements,\ntypecheck indirect and index of named types, and collect information\nabout assignment conversions.\n\nAlso, change addImport to rename top-level uses of a to-be-imported\nidentifier to avoid conflicts.  This duplicated some of the code in \nthe url fix, so that fix is now shorter.",
	"cc": [
		"iant@golang.org",
		"r@golang.org",
		"r@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"iant@golang.org",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/typecheck.go\nFile src/cmd/gofix/typecheck.go (right):\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/typecheck.go#newcode132\nsrc/cmd/gofix/typecheck.go:132: // It returns two maps with type information:\nOn 2011/10/31 19:10:35, r wrote:\n> what's all this about?\n\nThis is the partial type checker used by gofix.  It only has\npartial knowledge about the program (because import data\nis not available/may be broken anyway) but it can do a good\njob nonetheless.  It was written originally for the reflect fix,\nbut the error fix uses it too.  The error fix needs a little more\ninformation (the assign map) and also needs more information\nabout types of struct fields, so I've added code below to gather that.\n\nIt also adds typechecking of range loops and index operations\nand dereferences of named types.  All these helped extend the\nreach of the error fix to the entire Go tree.\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/url.go\nFile src/cmd/gofix/url.go (left):\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/url.go#oldcode45\nsrc/cmd/gofix/url.go:45: var skip interface{}\nOn 2011/10/31 19:10:35, r wrote:\n> if you want to fix this test, fine, but please put it in a different CL and\n> explain why\n\nThis fix was doing some work to make the top-level name \"url\"\navailable before adding the new import of \"url\".  That is a general\nconcern so I made addImport handle that and removed the\nredundant code below.  The code below is still here because it \ndoes even more: it renames non-top-level instances of \"url\"\n(local variables and such).\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/url_test.go\nFile src/cmd/gofix/url_test.go (right):\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/url_test.go#newcode106\nsrc/cmd/gofix/url_test.go:106: type U struct{ url_ int }\nOn 2011/10/31 19:10:35, r wrote:\n> what's this about?\n\nThe fix is not smart enough to preserve 'url' here.\nWell, it could preserve 'url' here but it's hard to \npreserve in composite literals, because in general\nwe don't know if this is a struct literal or a map \nliteral, and the interpretation of \"url:\" changes in\nthe two cases.  I gave up trying to distinguish them.\n\nThe original url fix did not distinguish them either.\nGustavo added this not-renaming as a special case.\nThe special case is gone again.",
			"disapproval": false,
			"date": "2011-10-31 21:40:26.429250",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"iant@golang.org",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "> src/cmd/gofix/error.go:35: Error field or method is renamed to Err.\n> Also any top level entity named \"error\" is renamed to \"error_\".  This should\n> probably also be mentioned below in the comment.\n\ndone",
			"disapproval": false,
			"date": "2011-10-31 21:40:57.470848",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-28 04:11:31.419924",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/error.go\nFile src/cmd/gofix/error.go (right):\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/error.go#newcode35\nsrc/cmd/gofix/error.go:35: Error field or method is renamed to Err.\nAlso any top level entity named \"error\" is renamed to \"error_\".  This should probably also be mentioned below in the comment.",
			"disapproval": false,
			"date": "2011-10-30 04:39:28.560279",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "the DL desc is missing some information i need.\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/typecheck.go\nFile src/cmd/gofix/typecheck.go (right):\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/typecheck.go#newcode132\nsrc/cmd/gofix/typecheck.go:132: // It returns two maps with type information:\nwhat's all this about?\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/url.go\nFile src/cmd/gofix/url.go (left):\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/url.go#oldcode45\nsrc/cmd/gofix/url.go:45: var skip interface{}\nif you want to fix this test, fine, but please put it in a different CL and explain why\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/url_test.go\nFile src/cmd/gofix/url_test.go (right):\n\nhttp://codereview.appspot.com/5305066/diff/10001/src/cmd/gofix/url_test.go#newcode106\nsrc/cmd/gofix/url_test.go:106: type U struct{ url_ int }\nwhat's this about?",
			"disapproval": false,
			"date": "2011-10-31 19:10:35.623757",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "s/DL/CL/\n",
			"disapproval": false,
			"date": "2011-10-31 19:11:37.752168",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"iant@golang.org",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=45374320621e ***\n\ngofix: error fix\n\nTo make the error fix more useful, expand typecheck to gather\nmore information about struct fields, typecheck range statements,\ntypecheck indirect and index of named types, and collect information\nabout assignment conversions.\n\nAlso, change addImport to rename top-level uses of a to-be-imported\nidentifier to avoid conflicts.  This duplicated some of the code in \nthe url fix, so that fix is now shorter.\n\nR=iant, r, r\nCC=golang-dev\nhttp://codereview.appspot.com/5305066",
			"disapproval": false,
			"date": "2011-11-02 01:45:24.792839",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5305066: gofix: error fix",
	"created": "2011-10-27 18:32:18.065438",
	"patchsets": [
		1,
		2001,
		1002,
		6001,
		10001,
		2014,
		8015
	],
	"modified": "2011-11-02 01:45:25.866830",
	"closed": true,
	"issue": 5305066
}