{
	"description": "spec: add error",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"r@golang.org",
		"r@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-01 05:06:52.519796",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nOn Oct 31, 2011, at 10:05 PM, Russ Cox wrote:\n\n> On Tue, Nov 1, 2011 at 00:52,  <r@golang.org> wrote:\n>> i'd leave rune out for now (sorry david) since this CL is about error.\n>> a different CL needs to define (and say a lot more about) rune.\n> \n> rune is defined in the spec.\n\nno it's not.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-11-01 05:08:18.852535",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-11-01 05:12:00.659115",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5308072/diff/9001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5308072/diff/9001/doc/go_spec.html#newcode1500\ndoc/go_spec.html:1500: int int8 int16 int32 int64 rune string\ni'd leave rune out for now (sorry david) since this CL is about error.\na different CL needs to define (and say a lot more about) rune.\n\nhttp://codereview.appspot.com/5308072/diff/9001/doc/go_spec.html#newcode5180\ndoc/go_spec.html:5180: return value as well as an error, with a nil error indicating success:\n-,.c\nIt is the conventional interface for representing an error condition,\nwith the nil value representing no error.\nFor instance, a function to read data from a file might be defined,\n\nhttp://codereview.appspot.com/5308072/diff/9001/doc/go_spec.html#newcode5184\ndoc/go_spec.html:5184: func Read(b []byte) (n int, err error)\ns/b/f *File, b/\n\nhttp://codereview.appspot.com/5308072/diff/9001/doc/go_spec.html#newcode5194\ndoc/go_spec.html:5194: That type satisfies the predeclared interface type\nthere's some editing mixup here",
			"disapproval": false,
			"date": "2011-11-01 04:52:40.691671",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-11-01 05:21:55.133178",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5308072/diff/4001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5308072/diff/4001/doc/go_spec.html#newcode1128\ndoc/go_spec.html:1128: <p id=\"error\">\nthis section feels out of place to me. this area of the doc is about types, but this section is the (perfunctory) description of a declaration in the universe scope.\n\ntwo suggestions:\n1) move it up closer to int32 etc.\n2) move it down before 'runtime errors', as a brief section about Errors.\n\ni vote for #2.\n\nhttp://codereview.appspot.com/5308072/diff/4001/doc/go_spec.html#newcode1129\ndoc/go_spec.html:1129: The predeclared type <code>error</code> is defined as if by\ns/ if by/:/\n\nhttp://codereview.appspot.com/5308072/diff/4001/doc/go_spec.html#newcode5187\ndoc/go_spec.html:5187: at least for now.\nd\nthis is like \"currently\": verb tense carries the meaning.",
			"disapproval": false,
			"date": "2011-11-01 04:37:32.953474",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"r@google.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2be61232b4e2 ***\n\nspec: add error\n\nR=golang-dev, dsymonds, r, r\nCC=golang-dev\nhttp://codereview.appspot.com/5308072",
			"disapproval": false,
			"date": "2011-11-02 01:45:06.360171",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-01 04:47:29.608530",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, Nov 1, 2011 at 00:52,  <r@golang.org> wrote:\n> i'd leave rune out for now (sorry david) since this CL is about error.\n> a different CL needs to define (and say a lot more about) rune.\n\nrune is defined in the spec.  it is just missing from this list.\n",
			"disapproval": false,
			"date": "2011-11-01 05:05:32.439804",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-01 04:27:32.976564",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5308072/diff/4001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5308072/diff/4001/doc/go_spec.html#newcode1129\ndoc/go_spec.html:1129: The predeclared type <code>error</code> is defined as if by\nI don't get the \"if by\" part here. This is truly how it's defined, right? I guess you're getting at the fact that this in the universe scope, and not defined this way in a .go file somewhere.\n\nhttp://codereview.appspot.com/5308072/diff/4001/doc/go_spec.html#newcode1508\ndoc/go_spec.html:1508: Types:\nShouldn't rune be in here too?\n\nhttp://codereview.appspot.com/5308072/diff/4001/doc/go_spec.html#newcode5183\ndoc/go_spec.html:5183: That type defines at least the methods of the predeclared type\nMaybe this should be plainer said.\n\nThat type satisfies the predeclared interface type <code>error</code>.",
			"disapproval": false,
			"date": "2011-11-01 04:35:55.793028",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "bismarck=% hg tip\nchangeset:   10240:72cf9d58c08f\ntag:         tip\nuser:        Russ Cox <rsc@golang.org>\ndate:        Tue Nov 01 00:29:41 2011 -0400\nsummary:     rpc: avoid infinite loop on input error\n\nbismarck=% hg sync\nno changes found\n0 files updated, 0 files merged, 0 files removed, 0 files unresolved\nbismarck=% grep -i rune go_spec.html\nbismarck=% \n\n",
			"disapproval": false,
			"date": "2011-11-01 05:09:28.106490",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, Nov 1, 2011 at 01:08, Rob 'Commander' Pike <r@google.com> wrote:\n> no it's not.\n\ni was supposed to clpatch+submit it with the other rune changes\nand forgot.  i have submitted it now and will resync this CL.\n",
			"disapproval": false,
			"date": "2011-11-01 05:09:46.989022",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, r@golang.org, r@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-01 05:10:44.162187",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5308072: spec: add error",
	"created": "2011-11-01 04:27:22.334365",
	"patchsets": [
		1,
		2001,
		4001,
		9001,
		10001,
		2003,
		15001,
		11002
	],
	"modified": "2011-11-02 01:45:07.363772",
	"closed": true,
	"issue": 5308072
}