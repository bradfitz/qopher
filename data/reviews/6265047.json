{
	"description": "net/http: speed up Header.WriteSubset\n\nA few performance improvements, but without the stack sorting\nchange to avoid allocating, which is instead waiting on better\nescape analysis.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-06-04 00:49:12.173611",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-06-04 00:53:57.230603",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm not thrilled about reinventing sort either. How much speed is this buying you? Does package http really need to reimplement every function in the standard library?\n\nAlso, the issue is marked closed because you abandoned it once. Please edit it on the web and uncheck the closed box.\n\nhttp://codereview.appspot.com/6265047/diff/3/src/pkg/net/http/header.go\nFile src/pkg/net/http/header.go (right):\n\nhttp://codereview.appspot.com/6265047/diff/3/src/pkg/net/http/header.go#newcode132\nsrc/pkg/net/http/header.go:132: sw, ok := w.(interface {\nThis is not really helping the code.\nCan you call io.WriteString instead?",
			"disapproval": false,
			"date": "2012-06-05 14:17:53.614692",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-19 18:49:26.422415",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I thought we agreed to remove the custom sort but leave the writestring change?\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-06-24 22:45:18.687378",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This CL doesn't contain the interface-less insertion sort code copied from\r\npkg sort anymore (which enabled sorting on the stack).\r\n\r\nThis CL does, however, still contain the sortable keyValues type to reduce\r\nhash lookups.\r\n\r\nThere are 3 performance things in this CL, down from 4 before.  Do you want\r\nthem in 1 CL each?  (or not at all is fine, too.)\r\n\r\n\r\nOn Sun, Jun 24, 2012 at 3:44 PM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> I thought we agreed to remove the custom sort but leave the writestring\r\n> change?\r\n>\r\n> Russ\r\n>\r\n",
			"disapproval": false,
			"date": "2012-06-25 06:36:06.297538",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6265047/diff/12002/src/pkg/net/textproto/textproto.go\nFile src/pkg/net/textproto/textproto.go (right):\n\nhttp://codereview.appspot.com/6265047/diff/12002/src/pkg/net/textproto/textproto.go#newcode125\nsrc/pkg/net/textproto/textproto.go:125: // TrimString returns s without leading and trailing ASCII whitespace.\ns/white//\nThe space looks green here... :-)\n\nhttp://codereview.appspot.com/6265047/diff/12002/src/pkg/net/textproto/textproto.go#newcode136\nsrc/pkg/net/textproto/textproto.go:136: // TrimBytes returns b without leading and trailing ASCII whitespace.\ns/white//\n\nhttp://codereview.appspot.com/6265047/diff/12002/src/pkg/net/textproto/textproto.go#newcode147\nsrc/pkg/net/textproto/textproto.go:147: func isASCIIWhite(b byte) bool {\ns/White/Space/",
			"disapproval": false,
			"date": "2012-06-25 12:26:45.120504",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f6da295143d6 ***\n\nnet/http: speed up Header.WriteSubset\n\nA few performance improvements, but without the stack sorting\nchange to avoid allocating, which is instead waiting on better\nescape analysis.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6265047",
			"disapproval": false,
			"date": "2012-06-25 15:54:44.189282",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6265047: net/http: speed up Header.WriteSubset",
	"created": "2012-06-04 00:25:05.891719",
	"patchsets": [
		1,
		2001,
		5001,
		3,
		12002,
		19002
	],
	"modified": "2012-06-25 15:54:45.418926",
	"closed": true,
	"issue": 6265047
}