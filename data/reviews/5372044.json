{
	"description": "http: add a disabled failing test for Issue 2357",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-09 15:36:07.197238",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=aa5e8990427e ***\n\nhttp: add a disabled failing test for Issue 2357\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5372044",
			"disapproval": false,
			"date": "2011-11-09 16:12:46.408161",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I can't get excited about this.\nIn general, if you want to buffer, you use a bufio.Writer.\nNetwork connections don't auto-buffer.\nFiles don't auto-buffer.  A Write is a write.\n\nThat said, since there's already a Flush it\nseems fine and trivial to just throw a\nbufio.Writer in front of the chunker.\nWhy not fix it in this CL?\n",
			"disapproval": false,
			"date": "2011-11-09 15:42:38.732229",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Nov 9, 2011 at 7:41 AM, Russ Cox <rsc@golang.org> wrote:\n\n> I can't get excited about this.\n>\n\nHey, you wrote the TODO in server.go:\n\n        // TODO(rsc): if chunking happened after the buffering,\n\n        // then there would be fewer chunk headers.\n\n        // On the other hand, it would make hijacking more difficult.\n\n        if w.chunking {\n                fmt.Fprintf(w.conn.buf, \"%x\\r\\n\", len(data)) // TODO(rsc):\nuse strconv not fmt\n        }\n\nNetwork connections don't auto-buffer.\n> Files don't auto-buffer.  A Write is a write.\n>\n> That said, since there's already a Flush it\n> seems fine\n\n\nwell, http is already buffering.\n\nRob asked me a few weeks ago if he had to worry about buffering in his\nhandlers.  The answer was too complex: \"well, kinda not really.  it buffers\nalready, unless you don't know your content-length, in which case it still\nbuffers, but can write lots of extra chunk headers.\"\n\nI just want to make it always do the right thing.\n\nLike you said, if the handler wants the bytes to get to the browser\n(streaming JSON or something), they already have to Flush.  this doesn't\nchange that.\n\nand trivial to just throw a\n> bufio.Writer in front of the chunker.\n> Why not fix it in this CL?\n>\n\n doing other stuff and had this written from the other day I'd noticed.\n *shrug*\n",
			"disapproval": false,
			"date": "2011-11-09 15:53:32.029626",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\nOn Nov 9, 2011 10:53 AM, \"Brad Fitzpatrick\" <bradfitz@golang.org> wrote:\n\n> On Wed, Nov 9, 2011 at 7:41 AM, Russ Cox <rsc@golang.org> wrote:\n>\n>> I can't get excited about this.\n>>\n>\n> Hey, you wrote the TODO in server.go:\n>\n>         // TODO(rsc): if chunking happened after the buffering,\n>\n>         // then there would be fewer chunk headers.\n>\n>         // On the other hand, it would make hijacking more difficult.\n>\n>         if w.chunking {\n>                 fmt.Fprintf(w.conn.buf, \"%x\\r\\n\", len(data)) // TODO(rsc):\n> use strconv not fmt\n>         }\n>\n> Network connections don't auto-buffer.\n>> Files don't auto-buffer.  A Write is a write.\n>>\n>> That said, since there's already a Flush it\n>> seems fine\n>\n>\n> well, http is already buffering.\n>\n> Rob asked me a few weeks ago if he had to worry about buffering in his\n> handlers.  The answer was too complex: \"well, kinda not really.  it buffers\n> already, unless you don't know your content-length, in which case it still\n> buffers, but can write lots of extra chunk headers.\"\n>\n> I just want to make it always do the right thing.\n>\n> Like you said, if the handler wants the bytes to get to the browser\n> (streaming JSON or something), they already have to Flush.  this doesn't\n> change that.\n>\n> and trivial to just throw a\n>> bufio.Writer in front of the chunker.\n>> Why not fix it in this CL?\n>>\n>\n>  doing other stuff and had this written from the other day I'd noticed.\n>  *shrug*\n>\n>\n",
			"disapproval": false,
			"date": "2011-11-09 16:04:04.325257",
			"approval": true
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5372044: http: add a disabled failing test for Issue 2357",
	"created": "2011-11-09 15:34:13.204966",
	"patchsets": [
		1,
		2001,
		4001,
		5001
	],
	"modified": "2011-11-09 16:12:59.827924",
	"closed": true,
	"issue": 5372044
}