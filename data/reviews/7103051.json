{
	"description": "test: add support for build tags.\n\nThis enables a few tests that were only executed\nunconditionnally.",
	"cc": [
		"rsc@golang.org",
		"minux.ma@gmail.com",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-01-13 10:01:41.631470",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If you make the run.go program skip over +build lines when looking for directives, then you can make the header:\n\n// +build 386 arm\n// errorcheck\n\nand write a +build function in the testing shell script.",
			"disapproval": false,
			"date": "2013-01-18 20:39:31.623800",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I have tried something.\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-25 11:49:55.346950",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "why not just define a +build function in testlib?",
			"disapproval": false,
			"date": "2013-01-25 11:54:54.990710",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/25 11:54:54, minux wrote:\n> why not just define a +build function in testlib?\n\nI'm a bit all confused by this shell and sed magic. How would that be supposed to work?",
			"disapproval": false,
			"date": "2013-01-25 12:02:01.860280",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jan 25, 2013 at 8:02 PM, <remyoudompheng@gmail.com> wrote:\r\n\r\n> On 2013/01/25 11:54:54, minux wrote:\r\n>\r\n>> why not just define a +build function in testlib?\r\n>\r\n> I'm a bit all confused by this shell and sed magic. How would that be\r\n> supposed to work?\r\n>\r\ni think something like the following bash script snippet in testlib is\r\nsuffice,\r\nand it also support multiple \"// +build\" lines:\r\n// +build arm 386\r\n// +build linux\r\n// cmpout\r\nwhich means the same as // +build linux,arm linux,386\r\n\r\n+build() {\r\nfor i do\r\n case \"$i\" in\r\n$GOARCH|$GOOS)\r\nreturn # don't skip\r\n ;;\r\n'!'$GOARCH|'!'$GOOS)\r\nexit 0 # skip\r\n                ;;\r\nesac\r\ndone\r\nexit 0 # skip\r\n}\r\n\r\nPS: I suggest we add a few tests for the simplified build tags handling.\r\n",
			"disapproval": false,
			"date": "2013-01-25 13:03:24.738760",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7103051/diff/9001/test/run\nFile test/run (right):\n\nhttps://codereview.appspot.com/7103051/diff/9001/test/run#newcode68\ntest/run:68: '!'$GOARCH|'!'$GOOS)\ndid not know you could concatenate like that :)\n\nhttps://codereview.appspot.com/7103051/diff/9001/test/run.go\nFile test/run.go (right):\n\nhttps://codereview.appspot.com/7103051/diff/9001/test/run.go#newcode304\ntest/run.go:304: func shouldTest(src string, goos, goarch string) (ok bool, why string) {\ns/why/whyNot/ ?\n\nhttps://codereview.appspot.com/7103051/diff/9001/test/run.go#newcode312\ntest/run.go:312: // match ^//\nI think that's pretty clear without the comment.",
			"disapproval": false,
			"date": "2013-01-25 20:30:50.764730",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, minux.ma@gmail.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-28 09:19:59.445240",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "And move bash handling to a \"+build\" function in testlib as suggested by minux and rsc.\n\nhttps://codereview.appspot.com/7103051/diff/9001/test/run.go\nFile test/run.go (right):\n\nhttps://codereview.appspot.com/7103051/diff/9001/test/run.go#newcode304\ntest/run.go:304: func shouldTest(src string, goos, goarch string) (ok bool, why string) {\nOn 2013/01/25 20:30:50, bradfitz wrote:\n> s/why/whyNot/ ?\n\nDone.\n\nhttps://codereview.appspot.com/7103051/diff/9001/test/run.go#newcode312\ntest/run.go:312: // match ^//\nOn 2013/01/25 20:30:50, bradfitz wrote:\n> I think that's pretty clear without the comment.\n\nDone.",
			"disapproval": false,
			"date": "2013-01-28 09:20:37.762660",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI was kind of hoping we'd be able to reuse the go/build checker, but this is good enough. Thanks.",
			"disapproval": false,
			"date": "2013-01-28 17:40:17.104290",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=601795ce6319 ***\n\ntest: add support for build tags.\n\nThis enables a few tests that were only executed\nunconditionnally.\n\nR=rsc, minux.ma, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7103051",
			"disapproval": false,
			"date": "2013-01-28 20:30:38.261840",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 7103051: test: add support for build tags.",
	"created": "2013-01-13 10:01:28.468190",
	"patchsets": [
		1,
		2001,
		5001,
		7001,
		9001,
		18001,
		24001
	],
	"modified": "2013-01-28 20:30:39.783140",
	"closed": true,
	"issue": 7103051
}