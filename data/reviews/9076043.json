{
	"description": "odbc: add support for ODBC driver connection pooling",
	"cc": [
		"alex.brainman@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You change does not build here:\n\n# go build\n# code.google.com/p/odbc\n./driver.go:47: undefined: api.SQL_ATTR_CONNECTION_POOLING\n./driver.go:47: undefined: api.SQL_CP_ONE_PER_HENV\n./driver.go:53: undefined: api.SQL_ATTR_CP_MATCH\n./driver.go:53: undefined: api.SQL_CP_RELAXED_MATCH\n\nYou, probably, have forgotten to add some files to this CL. See \"hg file 9076043 ...\" command for that.\n\nAlex\n\nhttps://codereview.appspot.com/9076043/diff/2001/driver.go\nFile driver.go (right):\n\nhttps://codereview.appspot.com/9076043/diff/2001/driver.go#newcode45\ndriver.go:45: if isEnableConnectionPooling {\nPlease, do not add isEnableConnectionPooling const. Just put TODO here, if you want to remember it later.\n\nhttps://codereview.appspot.com/9076043/diff/2001/driver.go#newcode45\ndriver.go:45: if isEnableConnectionPooling {\nFrom http://msdn.microsoft.com/en-us/library/windows/desktop/ms709285%28v=vs.85%29.aspx\n\n... Connection pooling is enabled by calling SQLSetEnvAttr to set the SQL_ATTR_CONNECTION_POOLING attribute to SQL_CP_ONE_PER_DRIVER or SQL_CP_ONE_PER_HENV. This call must be made before the application allocates the shared environment for which connection pooling is to be enabled. The environment handle in the call to SQLSetEnvAttr is set to null, which makes SQL_ATTR_CONNECTION_POOLING a process-level attribute. After connection pooling is enabled, the application then allocates an implicit shared environment by calling SQLAllocHandle with the InputHandle argument set to SQL_HANDLE_ENV. ...\n\nYou are doing it other way around. You allocate environment handle first and then call SQLSetEnvAttr. Why? Does it make a difference? Can you see any improvements after your changes?\n\nhttps://codereview.appspot.com/9076043/diff/2001/driver.go#newcode47\ndriver.go:47: ret := api.SQLSetEnvAttr(drv.h, api.SQL_ATTR_CONNECTION_POOLING, api.SQLPOINTER(api.SQL_CP_ONE_PER_HENV), 0)\nShouldn't you use SQL_IS_INTEGER here instead of 0?\n\nhttps://codereview.appspot.com/9076043/diff/2001/driver.go#newcode53\ndriver.go:53: ret = api.SQLSetEnvAttr(drv.h, api.SQL_ATTR_CP_MATCH, api.SQLPOINTER(api.SQL_CP_RELAXED_MATCH), 0)\nSQL_IS_INTEGER, same as above?",
			"disapproval": false,
			"date": "2013-05-02 06:56:13.260090",
			"approval": false
		},
		{
			"sender": "lukemauldin@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9076043/diff/2002/api/api_unix.go\nFile api/api_unix.go (right):\n\nhttps://codereview.appspot.com/9076043/diff/2002/api/api_unix.go#newcode111\napi/api_unix.go:111: SQL_CP_ONE_PER_HENV         = C.SQL_CP_ONE_PER_HENV\nDone\n\nhttps://codereview.appspot.com/9076043/diff/2002/api/api_unix.go#newcode114\napi/api_unix.go:114: SQL_CP_RELAXED_MATCH        = C.SQL_CP_RELAXED_MATCH\nDone\n\nhttps://codereview.appspot.com/9076043/diff/2002/driver.go\nFile driver.go (right):\n\nhttps://codereview.appspot.com/9076043/diff/2002/driver.go#newcode46\ndriver.go:46: return fmt.Errorf(\"SQLSetEnvAttr\", drv.h)\nDone\n\nhttps://codereview.appspot.com/9076043/diff/32001/api/api_unix.go\nFile api/api_unix.go (right):\n\nhttps://codereview.appspot.com/9076043/diff/32001/api/api_unix.go#newcode107\napi/api_unix.go:107: SQL_ATTR_CONNECTION_POOLING = uintptr(C.SQL_ATTR_CONNECTION_POOLING)\nOn 2013/05/09 00:52:49, brainman wrote:\n> Get rid of conversion to uintptr\n\nDone.\n\nhttps://codereview.appspot.com/9076043/diff/32001/api/api_unix.go#newcode108\napi/api_unix.go:108: SQL_ATTR_CP_MATCH           = uintptr(C.SQL_ATTR_CP_MATCH)\nOn 2013/05/09 00:52:49, brainman wrote:\n> Again. Get rid of conversion to uintptr.\n\nDone.\n\nhttps://codereview.appspot.com/9076043/diff/32001/driver.go\nFile driver.go (right):\n\nhttps://codereview.appspot.com/9076043/diff/32001/driver.go#newcode41\ndriver.go:41: //TODO: find a way to make this attribute changable at runtime\nOn 2013/05/09 00:52:49, brainman wrote:\n> s/changable/changeable/\n\nDone.",
			"disapproval": false,
			"date": "2013-05-13 23:36:25.043930",
			"approval": false
		},
		{
			"sender": "lukemauldin@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You are correct, I did forget to add some files to the file.\n\nI have removed the isEnableConnectionPooling attribute.\n\nSee this MSDN article: http://msdn.microsoft.com/en-us/library/ms131682.aspx\n\"It is also possible to enable connection pooling on an environment. Note the following about environment connection pooling:\nEnabling connection pooling on a NULL handle is a process-level attribute. Subsequently allocated environments will be a shared environment, and will inherit the process-level connection pooling setting.\nAfter an environment is allocated, an application can still change its connection pool setting.\nIf environment connection pooling is enabled and the connection's driver uses driver pooling, environment pooling takes preference.\"\n\nMy reading of the above is that it is possible to enable/disable connection pooling at the environment level, which is why I allocate the environment first and then enable connection pooling on the environment.  Going forward, I think it would be possible to allow the calling application to then disable connection pooling, by closing the first environment and creating a new environment with the connection pooling attribute not set.  However, in order to support this, I think it would require a mutex around the environment handle, what are your thoughts?\n\nI modified the two calls to SQLSetEnvAttr to use api.SQL_IS_UINTEGER but doesn't that also mean the call to set ODBC version 3 needs to be changed from \"0\" to api.SQL_IS_UINTEGER?",
			"disapproval": false,
			"date": "2013-05-02 12:22:42.171310",
			"approval": false
		},
		{
			"sender": "lukemauldin@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "One more question, after you respond to my question above and I make any additional code changes, how do I resubmit my changes for this CL?",
			"disapproval": false,
			"date": "2013-05-02 12:25:53.688160",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/02 12:22:42, lukemauldin wrote:\n> \n> I have removed the isEnableConnectionPooling attribute.\n\nCool.\n\nBut it would be easier for you to use codereview web site to reply to my comments. Just click on \"Done\" button for one of these, or on \"Edit\" (or whatever it is called) if you have something more to say. This way you won't forget anything, and all your comments are in-line. When you are ready to send all your comments, just click on \"Publish+Mail Comments\" link.\n\n> \n> My reading of the above is that it is possible to enable/disable connection\n> pooling at the environment level, which is why I allocate the environment first\n> and then enable connection pooling on the environment. ...\n\nFair enough. Lets go with that.\n\n> ... Going forward, I think\n> it would be possible to allow the calling application to then disable connection\n> pooling, by closing the first environment and creating a new environment with\n> the connection pooling attribute not set.  However, in order to support this, I\n> think it would require a mutex around the environment handle, what are your\n> thoughts?\n\nI am not sure. Lets just have pooling on for now, if you like, then we could change, if any problems. It sounds like having pooling on should be default anyway.\n\n> I modified the two calls to SQLSetEnvAttr to use api.SQL_IS_UINTEGER but doesn't\n> that also mean the call to set ODBC version 3 needs to be changed from \"0\" to\n> api.SQL_IS_UINTEGER?\n\nWhy? I copied that code from some Microsoft manual. Do you have any reference to demonstrate it is wrong?\n\nOn 2013/05/02 12:25:53, lukemauldin wrote:\n> One more question, after you respond to my question above and I make any\n> additional code changes, how do I resubmit my changes for this CL?\n\n\"hg mail 9076043\" command will send your latest changes to code review and automatically send email to all reviewers, to say it is ready for review.\n\n\"hg upload 9076043\" will send your latest changes to code review server.\n\nSee \"hg help codereview\" for list of codereview commands. Alternatively, http://golang.org/doc/contribute.html#Code_review describes the process pretty well.\n\nAlex",
			"disapproval": false,
			"date": "2013-05-03 01:29:34.272360",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It seems to work fine. Just fix couple of small errors and I will submit. Thank you.\n\nAlex\n\nhttps://codereview.appspot.com/9076043/diff/2002/api/api_unix.go\nFile api/api_unix.go (right):\n\nhttps://codereview.appspot.com/9076043/diff/2002/api/api_unix.go#newcode111\napi/api_unix.go:111: SQL_CP_ONE_PER_HENV         = C.SQL_CP_ONE_PER_HENV\nIt does not build on unix:\n\n# code.google.com/p/odbc\n./driver.go:43: cannot convert api.SQL_CP_ONE_PER_HENV (type int) to type api.SQLPOINTER\n./driver.go:49: cannot convert api.SQL_CP_RELAXED_MATCH (type int) to type api.SQLPOINTER\nFAIL    code.google.com/p/odbc [build failed]\n\nYou should, probably, define these as uintptr instead, like:\n\nSQL_CP_ONE_PER_HENV = uintptr(C.SQL_CP_ONE_PER_HENV)\n\nhttps://codereview.appspot.com/9076043/diff/2002/api/api_unix.go#newcode114\napi/api_unix.go:114: SQL_CP_RELAXED_MATCH        = C.SQL_CP_RELAXED_MATCH\nSame as above.\n\nhttps://codereview.appspot.com/9076043/diff/2002/driver.go\nFile driver.go (right):\n\nhttps://codereview.appspot.com/9076043/diff/2002/driver.go#newcode46\ndriver.go:46: return fmt.Errorf(\"SQLSetEnvAttr\", drv.h)\nYou wanted NewError here instead. Weren't you?\n\ns/fmt.Errorf/NewError/",
			"disapproval": false,
			"date": "2013-05-06 05:35:10.776770",
			"approval": false
		},
		{
			"sender": "lukemauldin@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Implemented changes as requested and submitted new version for review.\n\nhttps://codereview.appspot.com/9076043/diff/2001/driver.go\nFile driver.go (right):\n\nhttps://codereview.appspot.com/9076043/diff/2001/driver.go#newcode45\ndriver.go:45: if isEnableConnectionPooling {\nOn 2013/05/02 06:56:13, brainman wrote:\n> Please, do not add isEnableConnectionPooling const. Just put TODO here, if you\n> want to remember it later.\n\nDone.\n\nhttps://codereview.appspot.com/9076043/diff/2001/driver.go#newcode47\ndriver.go:47: ret := api.SQLSetEnvAttr(drv.h, api.SQL_ATTR_CONNECTION_POOLING, api.SQLPOINTER(api.SQL_CP_ONE_PER_HENV), 0)\nOn 2013/05/02 06:56:13, brainman wrote:\n> Shouldn't you use SQL_IS_INTEGER here instead of 0?\n\nDone.\n\nhttps://codereview.appspot.com/9076043/diff/2001/driver.go#newcode53\ndriver.go:53: ret = api.SQLSetEnvAttr(drv.h, api.SQL_ATTR_CP_MATCH, api.SQLPOINTER(api.SQL_CP_RELAXED_MATCH), 0)\nOn 2013/05/02 06:56:13, brainman wrote:\n> SQL_IS_INTEGER, same as above?\n\nDone.",
			"disapproval": false,
			"date": "2013-05-03 12:27:39.834280",
			"approval": false
		},
		{
			"sender": "lukemauldin@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/odbc",
			"disapproval": false,
			"date": "2013-05-03 12:25:47.594140",
			"approval": false
		},
		{
			"sender": "lukemauldin@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I submitted a new version for review based on your comments.\n\nYour code to set the ODBC version 3 matches up with code on MSDN so I think that it is okay.\n\nThank you for giving me assistance through this code review process.",
			"disapproval": false,
			"date": "2013-05-03 12:28:47.965040",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/03 12:28:47, lukemauldin wrote:\n> I submitted a new version for review based on your comments.\n> \n\nI am away from my computers for a day or so. I will review your code as soon as I can. Thank you.\n\nAlex",
			"disapproval": false,
			"date": "2013-05-03 12:56:52.260670",
			"approval": false
		},
		{
			"sender": "lukemauldin@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-05-08 18:37:42.662720",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Nearly there.\n\nAlex\n\nhttps://codereview.appspot.com/9076043/diff/32001/api/api_unix.go\nFile api/api_unix.go (right):\n\nhttps://codereview.appspot.com/9076043/diff/32001/api/api_unix.go#newcode106\napi/api_unix.go:106: //Connection pooling\nYou did too much. Now it fails with\n\n# code.google.com/p/odbc\n./driver.go:43: cannot use api.SQL_ATTR_CONNECTION_POOLING (type uintptr) as type api.SQLINTEGER in function argument\n./driver.go:50: cannot use api.SQL_ATTR_CP_MATCH (type uintptr) as type api.SQLINTEGER in function argument\nFAIL    code.google.com/p/odbc [build failed]\n\nhttps://codereview.appspot.com/9076043/diff/32001/api/api_unix.go#newcode107\napi/api_unix.go:107: SQL_ATTR_CONNECTION_POOLING = uintptr(C.SQL_ATTR_CONNECTION_POOLING)\nGet rid of conversion to uintptr\n\nhttps://codereview.appspot.com/9076043/diff/32001/api/api_unix.go#newcode108\napi/api_unix.go:108: SQL_ATTR_CP_MATCH           = uintptr(C.SQL_ATTR_CP_MATCH)\nAgain. Get rid of conversion to uintptr.\n\nhttps://codereview.appspot.com/9076043/diff/32001/driver.go\nFile driver.go (right):\n\nhttps://codereview.appspot.com/9076043/diff/32001/driver.go#newcode41\ndriver.go:41: //TODO: find a way to make this attribute changable at runtime\ns/changable/changeable/",
			"disapproval": false,
			"date": "2013-05-09 00:52:49.604940",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nThank you.\n\nAlex",
			"disapproval": false,
			"date": "2013-05-14 06:16:21.407780",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"lukemauldin@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/odbc/source/detail?r=62dc302f298a ***\n\nodbc: add support for ODBC driver connection pooling\n\nR=alex.brainman\nCC=golang-dev\nhttps://codereview.appspot.com/9076043\n\nCommitter: Alex Brainman <alex.brainman@gmail.com>",
			"disapproval": false,
			"date": "2013-05-14 06:16:38.772390",
			"approval": false
		}
	],
	"owner_email": "lukemauldin@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "lukemauldin",
	"subject": "code review 9076043: odbc: add support for ODBC driver connection pooling",
	"created": "2013-05-01 12:52:06.106880",
	"patchsets": [
		1,
		2001,
		10001,
		13001,
		16001,
		19001,
		2002,
		29001,
		32001,
		37001
	],
	"modified": "2013-05-14 06:16:38.772390",
	"closed": false,
	"issue": 9076043
}