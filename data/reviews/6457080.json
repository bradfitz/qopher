{
	"description": "net: fix TCPListener file leak to child processes\n\nHold ForkLock during dup of fd + cloexec in the net pkg,\nper the locking policy documented in syscall/exec_unix.go.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-08-04 09:43:40.159590",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Aug 4, 2012 at 7:43 PM,  <bradfitz@golang.org> wrote:\r\n\r\n> This has been biting me (two concurrently-started child\r\n> processes seemingly getting each other's file descriptors) and\r\n> I finally just wrote a test for it.  This fails, and even\r\n> more than I expected.\r\n\r\nI would have guessed that it was due to fork being not multithread\r\nsafe, but forkExec in src/pkg/syscall/exec_unix.go uses a lock to\r\nenforce that only one fork/exec is happening at a time.\r\n\r\nHow exactly are they getting each other's fds? Is an fd being passed\r\nto both children, or is there a crossover? Perhaps there's a bug in\r\nforkAndExecInChild.\r\n",
			"disapproval": false,
			"date": "2012-08-04 11:59:25.004240",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-06 01:45:10.498650",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 6 August 2012 13:36, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> Can you confirm that this CL fixes the test on Darwin too?\r\n\r\nWGFM\r\n",
			"disapproval": false,
			"date": "2012-08-06 03:44:12.382190",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fails on netbsd/amd64, too.",
			"disapproval": false,
			"date": "2012-08-04 12:18:21.969220",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=75a21418ac8f ***\n\nnet: fix TCPListener file leak to child processes\n\nHold ForkLock during dup of fd + cloexec in the net pkg,\nper the locking policy documented in syscall/exec_unix.go.\n\nR=golang-dev, dsymonds, adg\nCC=golang-dev\nhttp://codereview.appspot.com/6457080",
			"disapproval": false,
			"date": "2012-08-06 04:12:32.718080",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Aug 6, 2012 at 12:04 PM, <adg@golang.org> wrote:\r\n\r\n> LGTM\r\n>\r\n>\r\n> http://codereview.appspot.com/**6457080/diff/4002/src/pkg/os/**\r\n> exec/exec_test.go<http://codereview.appspot.com/6457080/diff/4002/src/pkg/os/exec/exec_test.go>\r\n> File src/pkg/os/exec/exec_test.go (right):\r\n>\r\n> http://codereview.appspot.com/**6457080/diff/4002/src/pkg/os/**\r\n> exec/exec_test.go#newcode243<http://codereview.appspot.com/6457080/diff/4002/src/pkg/os/exec/exec_test.go#newcode243>\r\n> src/pkg/os/exec/exec_test.go:**243: go runCommand(ca, ares)\r\n> Apparently this is observable without any concurrency. Do you want to\r\n> pare the test back to the bare minimum?\r\n>\r\n\r\nThere were two bugs, though: lack of cloexec, and lack of lock.  I'd rather\r\ntest both.\r\n\r\nCan you confirm that this CL fixes the test on Darwin too?\r\n",
			"disapproval": false,
			"date": "2012-08-06 03:36:38.413150",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6457080/diff/4002/src/pkg/os/exec/exec_test.go\nFile src/pkg/os/exec/exec_test.go (right):\n\nhttp://codereview.appspot.com/6457080/diff/4002/src/pkg/os/exec/exec_test.go#newcode243\nsrc/pkg/os/exec/exec_test.go:243: go runCommand(ca, ares)\nApparently this is observable without any concurrency. Do you want to pare the test back to the bare minimum?",
			"disapproval": false,
			"date": "2012-08-06 02:04:58.779500",
			"approval": true
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6457080: os/exec: fix TCPListener file leak to child",
	"created": "2012-08-04 09:43:13.401860",
	"patchsets": [
		1,
		1002,
		3001,
		4002,
		2004
	],
	"modified": "2012-08-06 04:12:34.612010",
	"closed": true,
	"issue": 6457080
}