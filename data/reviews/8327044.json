{
	"description": "math/big: minor cleanups\n\n- comment fixes\n- s/z/x/ in (*rat).Float64 to match convention for functions\n  returning a non-*Rat\n- minor test output tweaking",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-04-03 18:56:31.247010",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM and stop\n\nhttps://codereview.appspot.com/8327044/diff/12001/src/pkg/math/big/rat.go\nFile src/pkg/math/big/rat.go (right):\n\nhttps://codereview.appspot.com/8327044/diff/12001/src/pkg/math/big/rat.go#newcode169\nsrc/pkg/math/big/rat.go:169: func (x *Rat) Float64() (f float64, exact bool) {\nwhy is it x here when it's z in the others? i read the CL description but it seems a pretty fine point",
			"disapproval": false,
			"date": "2013-04-03 19:28:41.899100",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8327044/diff/12001/src/pkg/math/big/rat.go\nFile src/pkg/math/big/rat.go (right):\n\nhttps://codereview.appspot.com/8327044/diff/12001/src/pkg/math/big/rat.go#newcode169\nsrc/pkg/math/big/rat.go:169: func (x *Rat) Float64() (f float64, exact bool) {\nOn 2013/04/03 19:28:42, r wrote:\n> why is it x here when it's z in the others? i read the CL description but it\n> seems a pretty fine point\n\nAll the functions that set the receiver (SetFrac, Add, Sub, etc.) use z as the receiver name (as in: z = x + y: z.Add(x, y)). All the functions that return a value based on the receiver use x as receiver name (say Float64, but also Sign, IsInt, etc.).\n\nIt's just a convention, and not a big deal. But it's nice to keep it somewhat consistent.",
			"disapproval": false,
			"date": "2013-04-03 20:24:12.007960",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=db6393d5c2ec ***\n\nmath/big: minor cleanups\n\n- comment fixes\n- s/z/x/ in (*rat).Float64 to match convention for functions\n  returning a non-*Rat\n- minor test output tweaking\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/8327044",
			"disapproval": false,
			"date": "2013-04-03 20:24:38.785380",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 8327044: math/big: minor cleanups",
	"created": "2013-04-03 18:47:34.470490",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		12001,
		18001
	],
	"modified": "2013-04-03 20:24:39.942500",
	"closed": true,
	"issue": 8327044
}