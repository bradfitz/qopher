{
	"description": "json: encode \\r and \\n in strings as e.g. \"\\n\", not \"\\u000A\"\n\nThis is allowed by the JSON spec and is shorter/easier to read.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"evan.martin@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4678046/diff/5001/src/pkg/json/encode.go\nFile src/pkg/json/encode.go (right):\n\nhttp://codereview.appspot.com/4678046/diff/5001/src/pkg/json/encode.go#newcode350\nsrc/pkg/json/encode.go:350: } else if b == '\\n' {\nJust \\n?\n\nIf we're doing \\n, should probably also do \\r and \\t at least.  I'm not sure \\b and \\f would add clarity over the \\uxxxx form.\n\nLet's ask Russ his opinion on Monday.",
			"disapproval": false,
			"date": "2011-07-09 20:04:29.844826",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\\r and \\n is good.\nlet's leave \\b and \\f out.\nno one cares about \\f\nand more people know \\b as\nword boundary than as backspace.\n",
			"disapproval": false,
			"date": "2011-07-11 06:35:59.695053",
			"approval": false
		},
		{
			"sender": "evan.martin@gmail.com",
			"recipients": [
				"evan.martin@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-07-09 19:54:39.547926",
			"approval": false
		},
		{
			"sender": "evan.martin@gmail.com",
			"recipients": [
				"evan.martin@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I added \\r for symmetry, and I'll wait for more feedback.",
			"disapproval": false,
			"date": "2011-07-09 20:43:06.622533",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"evan.martin@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=81e9259d59df ***\n\njson: encode \\r and \\n in strings as e.g. \"\\n\", not \"\\u000A\"\n\nThis is allowed by the JSON spec and is shorter/easier to read.\n\nR=golang-dev, bradfitz, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/4678046\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2011-07-11 14:31:11.422960",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nOn Sat, Jul 9, 2011 at 1:43 PM, <evan.martin@gmail.com> wrote:\n\n> I added \\r for symmetry, and I'll wait for more feedback.\n>\n>\n> http://codereview.appspot.com/**4678046/<http://codereview.appspot.com/4678046/>\n>\n",
			"disapproval": false,
			"date": "2011-07-11 14:31:38.517770",
			"approval": true
		}
	],
	"owner_email": "evan.martin@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Evan Martin",
	"subject": "code review 4678046: json: encode \\n in strings as \"\\n\", not \"\\u000A\"",
	"created": "2011-07-09 19:54:15.534885",
	"patchsets": [
		1,
		2001,
		5001,
		8001
	],
	"modified": "2011-07-11 14:31:38.517770",
	"closed": false,
	"issue": 4678046
}