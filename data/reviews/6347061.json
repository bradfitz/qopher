{
	"description": "net/http: fix Transport race(s) with high GOMAXPROCS\n\nAlso adds a new test for GOMAXPROCS=16 explicitly, which now passes\nreliably in a stress loop like:\n\n$ go test -c\n$ (while ./http.test -test.v -test.run=Concurrency; do echo pass; done ) 2>&1 | tee foo; less foo\n\n(It used to fail very quickly and reliably on at least Linux/amd64)\n\nFixes issue 3793",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-07-03 22:42:27.883362",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-07-11 16:38:21.119530",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI\r\n\r\nI fought this all day.  There are some gross parts but I tried to document\r\nthem and I couldn't think of anything better.\r\n\r\nAnd every time I tried to fix it in different sometimes-simpler ways, a\r\ndozen HTTP tests would (legitimately, helpfully, annoyingly) fail.  The\r\ntests finally run reliably.\r\n\r\nMaybe I'll have better ideas next week if this isn't reviewed in the next\r\nhour or two.  I'll be offline Wed-Sun.\r\n\r\n\r\nOn Tue, Jul 3, 2012 at 3:42 PM, <bradfitz@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> net/http: fix Transport race(s) with high GOMAXPROCS\r\n>\r\n> Also adds a new test for GOMAXPROCS=16 explicitly, which now passes\r\n> reliably in a stress loop like:\r\n>\r\n> $ go test -c\r\n> $ (while ./http.test -test.v -test.run=Concurrency; do echo pass; done )\r\n> 2>&1 | tee foo; less foo\r\n>\r\n> (It used to fail very quickly and reliably on at least Linux/amd64)\r\n>\r\n> Fixes issue 3793\r\n>\r\n> Please review this at http://codereview.appspot.com/**6347061/<http://codereview.appspot.com/6347061/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/http/transport.go\r\n>   M src/pkg/net/http/transport_**test.go\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-03 22:49:38.464069",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This looks reasonable to me, but I think you should wait until next week and read it with fresh eyes before submitting.\n\nhttp://codereview.appspot.com/6347061/diff/3003/src/pkg/net/http/transport.go\nFile src/pkg/net/http/transport.go (right):\n\nhttp://codereview.appspot.com/6347061/diff/3003/src/pkg/net/http/transport.go#newcode267\nsrc/pkg/net/http/transport.go:267: log.Fatalf(\"dup idle pconn %p in freelist\", pconn)\npanic might be more helpful.\n\nhttp://codereview.appspot.com/6347061/diff/3003/src/pkg/net/http/transport.go#newcode535\nsrc/pkg/net/http/transport.go:535: // closing the channel because there may be multiple writers sharing a\nthere may be multiple writeLoops ?\n\nhttp://codereview.appspot.com/6347061/diff/3003/src/pkg/net/http/transport.go#newcode814\nsrc/pkg/net/http/transport.go:814: once     int32\nonce int32 ?\nwhy not once sync.Once ?\n\nthen it's es.once.Do(es.fn)\n\nhttp://codereview.appspot.com/6347061/diff/3003/src/pkg/net/http/transport_test.go\nFile src/pkg/net/http/transport_test.go (right):\n\nhttp://codereview.appspot.com/6347061/diff/3003/src/pkg/net/http/transport_test.go#newcode863\nsrc/pkg/net/http/transport_test.go:863: defer runtime.GOMAXPROCS(runtime.GOMAXPROCS(maxProcs))\nhah!",
			"disapproval": false,
			"date": "2012-07-03 23:25:37.786158",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=81f45da9df0d ***\n\nnet/http: fix Transport race(s) with high GOMAXPROCS\n\nAlso adds a new test for GOMAXPROCS=16 explicitly, which now passes\nreliably in a stress loop like:\n\n$ go test -c\n$ (while ./http.test -test.v -test.run=Concurrency; do echo pass; done ) 2>&1 | tee foo; less foo\n\n(It used to fail very quickly and reliably on at least Linux/amd64)\n\nFixes issue 3793\n\nR=golang-dev, adg, r\nCC=golang-dev\nhttp://codereview.appspot.com/6347061",
			"disapproval": false,
			"date": "2012-07-11 23:40:50.253740",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6347061/diff/3003/src/pkg/net/http/transport.go\nFile src/pkg/net/http/transport.go (right):\n\nhttp://codereview.appspot.com/6347061/diff/3003/src/pkg/net/http/transport.go#newcode267\nsrc/pkg/net/http/transport.go:267: log.Fatalf(\"dup idle pconn %p in freelist\", pconn)\nOn 2012/07/03 23:25:37, adg wrote:\n> panic might be more helpful.\n\nI had panic and changed it to log.Fatalf because it crashed  with nicer output not interleaved in my other logging.  I also don't want it caught.  I also don't feel strongly.\n\nhttp://codereview.appspot.com/6347061/diff/3003/src/pkg/net/http/transport.go#newcode535\nsrc/pkg/net/http/transport.go:535: // closing the channel because there may be multiple writers sharing a\nOn 2012/07/03 23:25:37, adg wrote:\n> there may be multiple writeLoops ?\n\nActually this whole function is no longer needed.  This assumption was wrong and an old debugging path I took.\n\nReverted this bit and tests still pass.\n\nhttp://codereview.appspot.com/6347061/diff/3003/src/pkg/net/http/transport.go#newcode814\nsrc/pkg/net/http/transport.go:814: once     int32\nOn 2012/07/03 23:25:37, adg wrote:\n> once int32 ?\n> why not once sync.Once ?\n> \n> then it's es.once.Do(es.fn)\n\nDone.",
			"disapproval": false,
			"date": "2012-07-09 16:54:14.448830",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-07-09 16:54:40.693110",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I probably shouldn't review my own CL.\r\n\r\nOn Mon, Jul 9, 2012 at 3:08 PM, <r@golang.org> wrote:\r\n\r\n> R=bradfitz\r\n>\r\n> (sent by gocodereview)\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-09 22:34:17.195310",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "it was a mouse-o. i think i fixed it by setting it to noone before you sent\r\nthis mail. if it's still wrong, i'll just pick someone else at random.\r\n\r\n-rob\r\n\r\n\r\n\r\nOn Mon, Jul 9, 2012 at 3:34 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> I probably shouldn't review my own CL.\r\n>\r\n> On Mon, Jul 9, 2012 at 3:08 PM, <r@golang.org> wrote:\r\n>\r\n>> R=bradfitz\r\n>>\r\n>> (sent by gocodereview)\r\n>>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-09 22:36:09.240630",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6347061: net/http: fix Transport race(s) with high GOMAXPROCS",
	"created": "2012-07-03 21:45:29.095702",
	"patchsets": [
		1,
		2001,
		5001,
		3003,
		11002,
		5002
	],
	"modified": "2012-07-11 23:40:51.576670",
	"closed": true,
	"issue": 6347061
}