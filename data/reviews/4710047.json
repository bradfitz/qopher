{
	"description": "go/ast: fix ast.MergePackageFiles to collect infos about imports",
	"cc": [
		"golang-dev@googlegroups.com",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "seb.binet@gmail.com",
			"recipients": [
				"seb.binet@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-07-13 13:56:20.842839",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"seb.binet@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Please explain why the changes in resolve.go are needed.\n\nNewPackage is supposed to work precisely with correctly set up files (in contrast to the filter functions in filter.go which can be tolerant of incomplete input).\n\nhttp://codereview.appspot.com/4710047/diff/2001/src/pkg/go/ast/filter.go\nFile src/pkg/go/ast/filter.go (right):\n\nhttp://codereview.appspot.com/4710047/diff/2001/src/pkg/go/ast/filter.go#newcode483\nsrc/pkg/go/ast/filter.go:483: scope := pkg.Scope\njust use pkg.Scope below and get rid of these two lines\n\nhttp://codereview.appspot.com/4710047/diff/2001/src/pkg/go/ast/filter.go#newcode489\nsrc/pkg/go/ast/filter.go:489: if mode&FilterImportDuplicates == 0 {\nThis should be != 0. (Filtering happens when the flag is set)\n\nhttp://codereview.appspot.com/4710047/diff/2001/src/pkg/go/ast/filter.go#newcode494\nsrc/pkg/go/ast/filter.go:494: if !ok {\nif impDict[imp.Path.Value] == nil {\n   ...\n\nand get rid of the previous line\n\nhttp://codereview.appspot.com/4710047/diff/2001/src/pkg/go/ast/filter.go#newcode495\nsrc/pkg/go/ast/filter.go:495: impDict[imp.Path.Value] = imp\nActually I think this code is too simple. For instance, if there are two imports with the same import path, but with different local names, you probably don't want to get rid of them. Also, if there are two imports that are the same, and one of them has a comment but the other doesn't, should the one with the comment be kept? Or both? What if both have comments? (The comments issue can probably be ignored since one can disable filtering of duplicates if one really cares).\n\nAt the very least, these issues need to be mentioned in a TODO.\n\nThe result doesn't have to be \"precise\" as this filter function is used for documentation (with a flag in godoc), but it should be meaningful.\n\nhttp://codereview.appspot.com/4710047/diff/2001/src/pkg/go/ast/filter.go#newcode506\nsrc/pkg/go/ast/filter.go:506: // Collect comments from all package files.\nPlease add an empty line before this comment.\n\nhttp://codereview.appspot.com/4710047/diff/2001/src/pkg/go/ast/filter.go#newcode516\nsrc/pkg/go/ast/filter.go:516: // TODO(gri) need to compute pkgScope and unresolved identifiers!\npkgScope is computed now\n\nhttp://codereview.appspot.com/4710047/diff/2001/src/pkg/go/ast/resolve.go\nFile src/pkg/go/ast/resolve.go (right):\n\nhttp://codereview.appspot.com/4710047/diff/2001/src/pkg/go/ast/resolve.go#newcode100\nsrc/pkg/go/ast/resolve.go:100: if file.Scope != nil {\nI don't understand why the changes in this function are needed. This function should be used with properly set up files only, otherwise it cannot really do it's job properly anyway.",
			"disapproval": false,
			"date": "2011-07-22 18:45:27.310094",
			"approval": false
		},
		{
			"sender": "seb.binet@gmail.com",
			"recipients": [
				"seb.binet@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/07/22 18:45:27, gri wrote:\n> Please explain why the changes in resolve.go are needed.\n> \n> NewPackage is supposed to work precisely with correctly set up files (in\n> contrast to the filter functions in filter.go which can be tolerant of\n> incomplete input).\n\nah. I overlooked that hypothesis.\n\nso I now dropped all changes from resolve.go and implemented your suggestions into filter.go\n\n-s",
			"disapproval": false,
			"date": "2011-08-19 15:08:05.569241",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"seb.binet@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\nthanks\n- gri",
			"disapproval": false,
			"date": "2011-08-22 19:52:22.975136",
			"approval": true
		},
		{
			"sender": "seb.binet@gmail.com",
			"recipients": [
				"seb.binet@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-08-19 15:20:43.617696",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"seb.binet@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Please also adjust the CL description. It's not accurate anymore. Thanks.\n\nhttp://codereview.appspot.com/4710047/diff/12001/src/pkg/go/ast/filter.go\nFile src/pkg/go/ast/filter.go (right):\n\nhttp://codereview.appspot.com/4710047/diff/12001/src/pkg/go/ast/filter.go#newcode467\nsrc/pkg/go/ast/filter.go:467: imports = make([]*ImportSpec, 0)\nthere is no need to \"make\" a new one - the var declaration already declares a perfectly usable (if nil) imports slice. get rid of this line.\n\nAlso, then you don't need the extra scope {} around the entire block.\n\nhttp://codereview.appspot.com/4710047/diff/12001/src/pkg/go/ast/filter.go#newcode469\nsrc/pkg/go/ast/filter.go:469: impDict := make(map[string]*ImportSpec, 0)\nmake this:\n\nalreadySeen := make(map[string]bool)\n\n(or even just \"seen\") for now. The value is not needed at this point, the 0 size specification is not needed, and it's not really a dictionary, either.\n\nhttp://codereview.appspot.com/4710047/diff/12001/src/pkg/go/ast/filter.go#newcode472\nsrc/pkg/go/ast/filter.go:472: if impDict[imp.Path.Value] != nil {\nperhaps before: path := imp.Path.Value\n\nand then use path below\n\nhttp://codereview.appspot.com/4710047/diff/12001/src/pkg/go/ast/filter.go#newcode472\nsrc/pkg/go/ast/filter.go:472: if impDict[imp.Path.Value] != nil {\nif !alreadySeen(path) {\n\nhttp://codereview.appspot.com/4710047/diff/12001/src/pkg/go/ast/filter.go#newcode473\nsrc/pkg/go/ast/filter.go:473: //TODO: handle cases where:\ns///TODO: handle cases where:/// TODO: consider handling cases where:/\n\nhttp://codereview.appspot.com/4710047/diff/12001/src/pkg/go/ast/filter.go#newcode480\nsrc/pkg/go/ast/filter.go:480: impDict[imp.Path.Value] = imp\nalreadySeen[path] = true\n(see above)",
			"disapproval": false,
			"date": "2011-08-19 22:48:41.697859",
			"approval": false
		},
		{
			"sender": "seb.binet@gmail.com",
			"recipients": [
				"seb.binet@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-08-22 07:50:50.862894",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"seb.binet@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2e6b6b2e23ae ***\n\ngo/ast: fix ast.MergePackageFiles to collect infos about imports\n\nR=golang-dev, gri\nCC=golang-dev\nhttp://codereview.appspot.com/4710047\n\nCommitter: Robert Griesemer <gri@golang.org>",
			"disapproval": false,
			"date": "2011-08-22 19:53:10.213291",
			"approval": false
		}
	],
	"owner_email": "seb.binet@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "binet",
	"subject": "code review 4710047: go/ast: fix ast.MergePackageFiles to collect infos abou...",
	"created": "2011-07-13 13:45:47.028726",
	"patchsets": [
		1,
		2001,
		8001,
		12001,
		17001
	],
	"modified": "2011-08-22 19:53:10.213291",
	"closed": false,
	"issue": 4710047
}