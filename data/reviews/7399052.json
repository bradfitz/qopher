{
	"description": "syscall: Plan9, amd64: fix syscall error handling in assembly\n\nSyscalls return `-1' on error and the representation is always\n32-bits. The `$-1' literal in 64-bit assembly is always the\n64-bit representation. So this change makes sure that we\nalways do a 32-bit comparison when checking for error.\nAlso makes sure that in the error case, we return a 64-bit\n`-1' from runtime.seek.\n\nFixes the arithmetic for handling the error-string in\nruntime.Syscall6.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rminnich@gmail.com",
		"rsc@golang.org",
		"ality@pbrane.org",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rminnich@gmail.com",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"rminnich@gmail.com",
				"rsc@golang.org",
				"ality@pbrane.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=785fa44fa986 ***\n\nsyscall: Plan9, amd64: fix syscall error handling in assembly\n\nSyscalls return `-1' on error and the representation is always\n32-bits. The `$-1' literal in 64-bit assembly is always the\n64-bit representation. So this change makes sure that we\nalways do a 32-bit comparison when checking for error.\nAlso makes sure that in the error case, we return a 64-bit\n`-1' from runtime.seek.\n\nFixes the arithmetic for handling the error-string in\nruntime.Syscall6.\n\nR=golang-dev, rminnich, rsc, ality, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/7399052\n\nCommitter: Ron Minnich <rminnich@gmail.com>",
			"disapproval": false,
			"date": "2013-02-25 21:40:22.367200",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-25 20:09:31.240160",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 26, 2013 at 4:20 AM, <rminnich@gmail.com> wrote:\r\n\r\n> I realize this whole business may look weird, especially from the Unix\r\n> (a.k.a. Linux) world, but there's a reason for it.\r\n\r\ni'm interested in the reason.\r\n",
			"disapproval": false,
			"date": "2013-02-25 20:39:57.535330",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"rminnich@gmail.com",
				"rsc@golang.org",
				"ality@pbrane.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "+r rminnich, rsc, ality",
			"disapproval": false,
			"date": "2013-02-25 20:10:25.128020",
			"approval": false
		},
		{
			"sender": "rminnich@gmail.com",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"rminnich@gmail.com",
				"rsc@golang.org",
				"ality@pbrane.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nI realize this whole business may look weird, especially from the Unix (a.k.a. Linux) world, but there's a reason for it.",
			"disapproval": false,
			"date": "2013-02-25 20:20:26.168190",
			"approval": true
		}
	],
	"owner_email": "seed@mail.nanosouffle.net",
	"private": false,
	"base_url": "",
	"owner": "akumar",
	"subject": "code review 7399052: syscall: Plan9, amd64: fix syscall error handling in as...",
	"created": "2013-02-25 20:05:25.845640",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2013-02-25 23:05:32.298880",
	"closed": true,
	"issue": 7399052
}