{
	"description": "reflect: add comment about the doubled semantics of Value.String.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-20 20:11:31.432465",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I object to 'fetch the string' being called a special case.\nThe doc comment says:\n\nfunc (v Value) String() string\nString returns the string v's underlying value, as a string.\nString is a special case because of Go's String method convention.\nUnlike the other getters, it does not panic if v's Kind is not String.\nInstead, it returns a string of the form \"<T value>\" where T is v's type.\n\n(compare with\nfunc (v Value) Float() float64\nFloat returns v's underlying value, as an float64.\nIt panics if v's Kind is not Float32 or Float64\n)\n",
			"disapproval": false,
			"date": "2011-09-20 20:14:53.466097",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-20 20:22:41.577027",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-09-20 20:25:33.184919",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f3dd0fa35596 ***\n\nreflect: add comment about the doubled semantics of Value.String.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5091044",
			"disapproval": false,
			"date": "2011-09-20 20:27:01.895044",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5091044: reflect: add comment about the doubled semantics of Val...",
	"created": "2011-09-20 20:11:28.341231",
	"patchsets": [
		1,
		3001,
		3
	],
	"modified": "2011-09-20 20:27:02.934108",
	"closed": true,
	"issue": 5091044
}