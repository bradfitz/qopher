{
	"description": "database/sql: close statement before connection\n\nFixes issue 5936",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Added \"Fixes issue 5936\".\n\nAlex",
			"disapproval": false,
			"date": "2013-07-23 03:20:38.196900",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-07-23 01:28:50.640270",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nThanks!\r\n\r\n\r\n\r\nOn Mon, Jul 22, 2013 at 6:28 PM, <alex.brainman@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> database/sql: close statement before connection\r\n>\r\n> Please review this at https://codereview.appspot.**com/11620046/<https://codereview.appspot.com/11620046/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/database/sql/sql.go\r\n>   M src/pkg/database/sql/sql_test.**go\r\n>\r\n>\r\n> Index: src/pkg/database/sql/sql.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/database/sql/sql.go\r\n> +++ b/src/pkg/database/sql/sql.go\r\n> @@ -759,10 +759,10 @@\r\n>         ds := driverStmt{dc, si}\r\n>         rowsi, err := rowsiFromStatement(ds, args...)\r\n>         if err != nil {\r\n> -               releaseConn(err)\r\n>                 dc.Lock()\r\n>                 si.Close()\r\n>                 dc.Unlock()\r\n> +               releaseConn(err)\r\n>                 return nil, err\r\n>         }\r\n>\r\n> Index: src/pkg/database/sql/sql_test.**go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/database/sql/sql_**test.go\r\n> +++ b/src/pkg/database/sql/sql_**test.go\r\n> @@ -1046,6 +1046,20 @@\r\n>         }\r\n>  }\r\n>\r\n> +func TestStmtCloseOrder(t *testing.T) {\r\n> +       db := newTestDB(t, \"people\")\r\n> +       defer closeDB(t, db)\r\n> +\r\n> +       db.SetMaxIdleConns(0)\r\n> +       setStrictFakeConnClose(t)\r\n> +       defer setStrictFakeConnClose(nil)\r\n> +\r\n> +       _, err := db.Query(\"SELECT|non_existent|**name|\")\r\n> +       if err == nil {\r\n> +               t.Fatal(\"Quering non-existent table should fail\")\r\n> +       }\r\n> +}\r\n> +\r\n>  func manyConcurrentQueries(t testOrBench) {\r\n>         maxProcs, numReqs := 16, 500\r\n>         if testing.Short() {\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-23 03:49:39.998710",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=a86c5dc7e7e9 ***\n\ndatabase/sql: close statement before connection\n\nFixes issue 5936\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/11620046",
			"disapproval": false,
			"date": "2013-07-23 04:10:02.486430",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 11620046: database/sql: close statement before connection",
	"created": "2013-07-23 01:21:40.781580",
	"patchsets": [
		1,
		3001,
		6001,
		11001
	],
	"modified": "2013-07-23 04:10:05.073570",
	"closed": true,
	"issue": 11620046
}