{
	"description": "math/big: implement JSON un/marshaling support for Ints\n\nAlso: simplified some existing tests.\n\nNo support for Rats for now because the precision-preserving\ndefault notation (fractions of the form a/b) is not a valid\nJSON value.\n\nFixes issue 3657.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=10f594c76fa0 ***\n\nmath/big: implement JSON un/marshaling support for Ints\n\nAlso: simplified some existing tests.\n\nNo support for Rats for now because the precision-preserving\ndefault notation (fractions of the form a/b) is not a valid\nJSON value.\n\nFixes issue 3657.\n\nR=golang-dev, bradfitz, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6211079",
			"disapproval": false,
			"date": "2012-05-23 00:20:52.828788",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\r\n\r\nWaiting for rsc, in case he has some JSON-related thoughts.\r\n- gri\r\n\r\nOn Tue, May 22, 2012 at 3:37 PM,  <bradfitz@golang.org> wrote:\r\n> LGTM\r\n>\r\n>\r\n>\r\n> http://codereview.appspot.com/6211079/diff/8001/src/pkg/math/big/int_test.go\r\n> File src/pkg/math/big/int_test.go (right):\r\n>\r\n> http://codereview.appspot.com/6211079/diff/8001/src/pkg/math/big/int_test.go#newcode1412\r\n> src/pkg/math/big/int_test.go:1412: for j := 0; j < 2; j++ {\r\n> Minor and your preference, but I like to write this as:\r\n>\r\n> for _, negative := range []bool{false, true} {\r\n>\r\n> }\r\n>\r\n> Maybe a little longer, but \"negative\" (or \"neg\") reads better than \"j\".\r\n>\r\n> http://codereview.appspot.com/6211079/\r\n",
			"disapproval": false,
			"date": "2012-05-22 22:58:19.335814",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-05-22 22:33:53.314100",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nNice.\r\n",
			"disapproval": false,
			"date": "2012-05-23 00:18:50.462857",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6211079/diff/8001/src/pkg/math/big/int_test.go\nFile src/pkg/math/big/int_test.go (right):\n\nhttp://codereview.appspot.com/6211079/diff/8001/src/pkg/math/big/int_test.go#newcode1412\nsrc/pkg/math/big/int_test.go:1412: for j := 0; j < 2; j++ {\nMinor and your preference, but I like to write this as:\n\nfor _, negative := range []bool{false, true} {\n\n}\n\nMaybe a little longer, but \"negative\" (or \"neg\") reads better than \"j\".",
			"disapproval": false,
			"date": "2012-05-22 22:37:34.884032",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 6211079: math/big: implement JSON un/marshaling support for Ints",
	"created": "2012-05-22 22:29:15.944910",
	"patchsets": [
		1,
		2001,
		5001,
		6004,
		8001,
		2005,
		12001,
		11002,
		1005,
		2009
	],
	"modified": "2012-05-23 00:20:54.265842",
	"closed": true,
	"issue": 6211079
}