{
	"description": "gc: check in y.tab.[ch], yerr.h, builtin.c.\n\nThis enables builds on systems without Bison/yacc.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5622051/diff/4001/src/Make.clib\nFile src/Make.clib (right):\n\nhttp://codereview.appspot.com/5622051/diff/4001/src/Make.clib#newcode33\nsrc/Make.clib:33: y.tab.h%: $(YFILES)\nWhy the % here?  Does that really work?  Should this target just be commented out?\n\nhttp://codereview.appspot.com/5622051/diff/4001/src/cmd/gc/Makefile\nFile src/cmd/gc/Makefile (right):\n\nhttp://codereview.appspot.com/5622051/diff/4001/src/cmd/gc/Makefile#newcode66\nsrc/cmd/gc/Makefile:66: bison -v -y -d go.y\nReally you should use a name other than y.tab.h here so that the rule works if it gets interrupted, but no need to worry about it if these Makefiles are going away soon.\n\nhttp://codereview.appspot.com/5622051/diff/4001/src/cmd/gc/builtin.c\nFile src/cmd/gc/builtin.c (right):\n\nhttp://codereview.appspot.com/5622051/diff/4001/src/cmd/gc/builtin.c#newcode1\nsrc/cmd/gc/builtin.c:1: char *runtimeimport =\nI don't see any changes in this file.",
			"disapproval": false,
			"date": "2012-02-03 15:41:55.357383",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 3, 2012 at 10:41,  <iant@golang.org> wrote:\n> Why the % here? \u00a0Does that really work? \u00a0Should this target just be\n> commented out?\n\nI set a different y.tab.h rule in gc/Makefile; making this one\ny.tab.h% means that make lets the one in gc/Makefile silently\noverride this.  It will go away soon.\n\n> http://codereview.appspot.com/5622051/diff/4001/src/cmd/gc/Makefile#newcode66\n> src/cmd/gc/Makefile:66: bison -v -y -d go.y\n> Really you should use a name other than y.tab.h here so that the rule\n> works if it gets interrupted, but no need to worry about it if these\n> Makefiles are going away soon.\n\nI'll tweak that when I yank the rest out; thanks.\n\n> http://codereview.appspot.com/5622051/diff/4001/src/cmd/gc/builtin.c#newcode1\n> src/cmd/gc/builtin.c:1: char *runtimeimport =\n> I don't see any changes in this file.\n\nIt got renamed from builtin.c.boot to builtin.c.\nThe makefile used to do a useless cp.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-03 15:52:30.973390",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=fe60484996da ***\n\ngc: check in y.tab.[ch], yerr.h, builtin.c.\n\nThis enables builds on systems without Bison/yacc.\n\nR=golang-dev, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5622051",
			"disapproval": false,
			"date": "2012-02-03 15:53:37.432057",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-03 04:38:28.298552",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5622051: gc: check in y.tab.[ch], yerr.h, builtin.c.",
	"created": "2012-02-02 20:14:23.322054",
	"patchsets": [
		1,
		2001,
		4001,
		2010
	],
	"modified": "2012-02-03 15:53:38.688474",
	"closed": true,
	"issue": 5622051
}