{
	"description": "cmd/vet: check for misplaced and malformed build tags\n\nFixes issue 4184.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"minux.ma@gmail.com"
	],
	"reviewers": [
		"cookieo9@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-31 16:46:51.235990",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nI see no delta from the first patchset (which I just read).\r\n\r\n\r\nOn Thu, Jan 31, 2013 at 9:12 AM, <rsc@golang.org> wrote:\r\n\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> https://codereview.appspot.**com/7251044/<https://codereview.appspot.com/7251044/>\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-31 17:13:33.527180",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-31 17:12:20.899370",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7251044/diff/6001/src/cmd/vet/buildtag_bad.go\nFile src/cmd/vet/buildtag_bad.go (right):\n\nhttps://codereview.appspot.com/7251044/diff/6001/src/cmd/vet/buildtag_bad.go#newcode9\nsrc/cmd/vet/buildtag_bad.go:9: \nalso check // +build that might be treated as\npackage docs here?",
			"disapproval": false,
			"date": "2013-01-31 17:41:59.502400",
			"approval": false
		},
		{
			"sender": "cookieo9@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"cookieo9@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7251044/diff/6001/src/cmd/vet/main.go\nFile src/cmd/vet/main.go (right):\n\nhttps://codereview.appspot.com/7251044/diff/6001/src/cmd/vet/main.go#newcode36\nsrc/cmd/vet/main.go:36: vetAtomic          = flag.Bool(\"atomic\", false, \"check for common mistaken usages of the sync/atomic package\")\nShouldn't there be a flag for build constraint checking?",
			"disapproval": false,
			"date": "2013-01-31 20:45:46.460780",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done, thanks.\r\n",
			"disapproval": false,
			"date": "2013-01-31 21:51:42.106810",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"cookieo9@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e7f267e20b7f ***\n\ncmd/vet: check for misplaced and malformed build tags\n\nFixes issue 4184.\n\nR=golang-dev, bradfitz, minux.ma, cookieo9\nCC=golang-dev\nhttps://codereview.appspot.com/7251044",
			"disapproval": false,
			"date": "2013-01-31 21:52:29.832540",
			"approval": false
		},
		{
			"sender": "cookieo9@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"cookieo9@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I was building my own CL for this using the go/ast package.  The advantage is that it slides nicer into the existing govet code (no need to read the file again), and it has more checks.\n\nI held back posting it because I wan't sure on the correct nomenclature for error messages, nor was I certain of the correct method of testing the tool. I used this CL to help fill the holes in mine.\n\nThe \"parallel CL\" is https://codereview.appspot.com/7224046/ if you wanted to look.",
			"disapproval": false,
			"date": "2013-01-31 22:00:40.012170",
			"approval": false
		},
		{
			"sender": "cookieo9@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"cookieo9@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7251044/diff/16001/src/cmd/vet/main.go\nFile src/cmd/vet/main.go (right):\n\nhttps://codereview.appspot.com/7251044/diff/16001/src/cmd/vet/main.go#newcode68\nsrc/cmd/vet/main.go:68: if *vetMethods || *vetPrintf || *vetStructTags || *vetUntaggedLiteral || *vetRangeLoops {\nShouldn't some logic have been added here for *vetBuildTags?\n\nSide note, no *vetAtomic here either....",
			"disapproval": false,
			"date": "2013-01-31 22:04:04.465660",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks. https://codereview.appspot.com/7260043\r\n",
			"disapproval": false,
			"date": "2013-01-31 22:09:25.952570",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7251044: cmd/vet: check for misplaced and malformed build tags",
	"created": "2013-01-31 16:46:32.318750",
	"patchsets": [
		1,
		2001,
		6001,
		13001,
		16001
	],
	"modified": "2013-01-31 22:04:04.871410",
	"closed": true,
	"issue": 7251044
}