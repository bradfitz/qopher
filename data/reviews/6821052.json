{
	"description": "cmd/5g, cmd/6g, cmd/8g: remove width check for componentgen.\n\nThe move to 64-bit ints in 6g made componentgen ineffective.\nIn componentgen, the code already selects which values it can handle.\n\nOn amd64:\nbenchmark                 old ns/op    new ns/op    delta\nBenchmarkBinaryTree17    9477970000   9582314000   +1.10%\nBenchmarkFannkuch11      5928750000   5255080000  -11.36%\nBenchmarkGobDecode         37103040     31451120  -15.23%\nBenchmarkGobEncode         16042490     16844730   +5.00%\nBenchmarkGzip             811337400    741373600   -8.62%\nBenchmarkGunzip           197928700    192844500   -2.57%\nBenchmarkJSONEncode       224164100    140064200  -37.52%\nBenchmarkJSONDecode       258346800    231829000  -10.26%\nBenchmarkMandelbrot200      7561780      7601615   +0.53%\nBenchmarkParse             12970340     11624360  -10.38%\nBenchmarkRevcomp         1969917000   1699137000  -13.75%\nBenchmarkTemplate         296182000    263117400  -11.16%",
	"cc": [
		"nigeltao@golang.org",
		"dave@cheney.net",
		"daniel.morsing@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-10-31 05:28:49.855400",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"remyoudompheng@gmail.com",
				"nigeltao@golang.org",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks fine on 5g. I was concerned that the w == 8 w == 12 logic was removed and would cause alignment issues, but non are apparent.",
			"disapproval": false,
			"date": "2012-11-01 07:19:44.498710",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6821052/diff/3001/src/cmd/6g/cgen.c\nFile src/cmd/6g/cgen.c (right):\n\nhttps://codereview.appspot.com/6821052/diff/3001/src/cmd/6g/cgen.c#newcode1257\nsrc/cmd/6g/cgen.c:1257: if(w <= 24)\nIt's just as easy to remove that condition.",
			"disapproval": false,
			"date": "2012-10-31 08:06:37.098970",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"remyoudompheng@gmail.com",
				"nigeltao@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6821052/diff/7001/src/cmd/6g/ggen.c\nFile src/cmd/6g/ggen.c (right):\n\nhttps://codereview.appspot.com/6821052/diff/7001/src/cmd/6g/ggen.c#newcode1031\nsrc/cmd/6g/ggen.c:1031: // Special treatment for small types (slices, strings...)\nI don't really understand this comment. Would it make more sense as \n\n// Treat small types (slices, strings...) specially by (insert statement).\n\n// possibly some comment to indicate this which are not small (complex128 ?)",
			"disapproval": false,
			"date": "2012-10-31 08:15:18.878900",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"nigeltao@golang.org",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=9f8542052bd7 ***\n\ncmd/5g, cmd/6g, cmd/8g: remove width check for componentgen.\n\nThe move to 64-bit ints in 6g made componentgen ineffective.\nIn componentgen, the code already selects which values it can handle.\n\nOn amd64:\nbenchmark                 old ns/op    new ns/op    delta\nBenchmarkBinaryTree17    9477970000   9582314000   +1.10%\nBenchmarkFannkuch11      5928750000   5255080000  -11.36%\nBenchmarkGobDecode         37103040     31451120  -15.23%\nBenchmarkGobEncode         16042490     16844730   +5.00%\nBenchmarkGzip             811337400    741373600   -8.62%\nBenchmarkGunzip           197928700    192844500   -2.57%\nBenchmarkJSONEncode       224164100    140064200  -37.52%\nBenchmarkJSONDecode       258346800    231829000  -10.26%\nBenchmarkMandelbrot200      7561780      7601615   +0.53%\nBenchmarkParse             12970340     11624360  -10.38%\nBenchmarkRevcomp         1969917000   1699137000  -13.75%\nBenchmarkTemplate         296182000    263117400  -11.16%\n\nR=nigeltao, dave, daniel.morsing\nCC=golang-dev\nhttp://codereview.appspot.com/6821052",
			"disapproval": false,
			"date": "2012-11-01 13:36:14.741590",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6821052/diff/3001/src/cmd/6g/cgen.c\nFile src/cmd/6g/cgen.c (right):\n\nhttps://codereview.appspot.com/6821052/diff/3001/src/cmd/6g/cgen.c#newcode1257\nsrc/cmd/6g/cgen.c:1257: if(w <= 24)\nWould s/24/widthptr + 2*widthint/ be better?",
			"disapproval": false,
			"date": "2012-10-31 06:29:45.955280",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"nigeltao@golang.org",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nhttps://codereview.appspot.com/6821052/diff/10001/src/cmd/5g/cgen.c\nFile src/cmd/5g/cgen.c (right):\n\nhttps://codereview.appspot.com/6821052/diff/10001/src/cmd/5g/cgen.c#newcode1499\nsrc/cmd/5g/cgen.c:1499: * Slices, strings, interfaces are supported.\ns/strings, interfaces/strings and interfaces/ and obviously the same for 6g/8g.",
			"disapproval": false,
			"date": "2012-11-01 01:02:30.976380",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"nigeltao@golang.org",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org, dave@cheney.net, daniel.morsing@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-31 20:10:42.100670",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-31 08:06:07.183620",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"nigeltao@golang.org",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6821052/diff/7001/src/cmd/6g/ggen.c\nFile src/cmd/6g/ggen.c (right):\n\nhttps://codereview.appspot.com/6821052/diff/7001/src/cmd/6g/ggen.c#newcode1031\nsrc/cmd/6g/ggen.c:1031: // Special treatment for small types (slices, strings...)\nI think you don't need the comment. The one over the function definition gives enough context as to what's going on.",
			"disapproval": false,
			"date": "2012-10-31 08:19:44.325950",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"nigeltao@golang.org",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If you're removing the w condition, do the same for 8g.\n\nAs for commentary, I think the comment on the function defintion is enough. However, I would change \"copy a structure component by component\" to \"copy a slice, string or interface value\", since it's confusing how a Go slice is represented by a C struct.",
			"disapproval": false,
			"date": "2012-10-31 11:54:08.491890",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6821052: cmd/5g, cmd/6g, cmd/8g: remove width check for componentgen.",
	"created": "2012-10-31 05:27:42.780850",
	"patchsets": [
		1,
		1002,
		3001,
		7001,
		10001,
		12001,
		9003
	],
	"modified": "2012-11-01 13:36:16.165290",
	"closed": true,
	"issue": 6821052
}