{
	"description": "cmd/godoc: fix directory read\n\nUndo CL 5783076 and apply correct fix.\n\nThe /doc hack is wrong.  The code to handle this case was\nalready there and just needs a simple fix:\n\n \t// We didn't find any directories containing Go files.\n \t// If some directory returned successfully, use that.\n-\tif len(all) == 0 && first != nil {\n+\tif !haveGo {\n \t\tfor _, d := range first {\n \t\t\thaveName[d.Name()] = true\n \t\t\tall = append(all, d)",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [
		"gri@golang.org"
	],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can we have different modes for looking at it?\n- Robert\n\nOn Mon, Mar 12, 2012 at 10:36 AM, Russ Cox <rsc@golang.org> wrote:\n> On Mon, Mar 12, 2012 at 13:35, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n>> Sounds like a great idea. Much prettier. What's the downside?\n>\n> I have used systems with 'mostly sorted' lists before, and\n> the convenience always seems to give way to confusion,\n> because people think they _are_ sorted and then can't find things.\n>\n> Russ\n",
			"disapproval": false,
			"date": "2012-03-12 17:44:13.334270",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-12 16:37:14.256520",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 12, 2012 at 10:25 AM, Russ Cox <rsc@golang.org> wrote:\n\n> If you really wanted to, you could do something like 5797067.\n> But I am not sure it's such a good idea.\n>\n\nSounds like a great idea. Much prettier. What's the downside?\n",
			"disapproval": false,
			"date": "2012-03-12 17:35:04.355849",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 12, 2012 at 13:35, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> Sounds like a great idea. Much prettier. What's the downside?\n\nI have used systems with 'mostly sorted' lists before, and\nthe convenience always seems to give way to confusion,\nbecause people think they _are_ sorted and then can't find things.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-03-12 17:36:38.728051",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nTesting this, I notice what a mess /pkg is once you have third-party code\ninstalled.\n\nI'd really like to see the standard library by itself, or at least broken\nup by itself at the top of the page, with third-party GOPATH stuff at the\nbottom.\n\n\nOn Mon, Mar 12, 2012 at 9:37 AM, <rsc@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> cmd/godoc: fix directory read\n>\n> Undo CL 5783076 and apply correct fix.\n>\n> The /doc hack is wrong.  The code to handle this case was\n> already there and just needs a simple fix:\n>\n>        // We didn't find any directories containing Go files.\n>        // If some directory returned successfully, use that.\n> -       if len(all) == 0 && first != nil {\n> +       if !haveGo {\n>                for _, d := range first {\n>                        haveName[d.Name()] = true\n>                        all = append(all, d)\n>\n> Please review this at http://codereview.appspot.com/**5783079/<http://codereview.appspot.com/5783079/>\n>\n> Affected files:\n>  M src/cmd/godoc/filesystem.go\n>\n>\n> Index: src/cmd/godoc/filesystem.go\n> ==============================**==============================**=======\n> --- a/src/cmd/godoc/filesystem.go\n> +++ b/src/cmd/godoc/filesystem.go\n> @@ -420,17 +420,11 @@\n>                        first = dir\n>                }\n>\n> -               useFiles := false\n> -\n> -               // Always include all files under /doc.\n> -               if path == \"/doc\" || strings.HasPrefix(path, \"/doc/\") {\n> -                       useFiles = true // always include docs\n> -               }\n> -\n>                // If we don't yet have Go files in 'all' and this directory\n>                // has some, add all the files from this directory.\n>                // Otherwise, only add subdirectories.\n> -               if !useFiles && !haveGo {\n> +               useFiles := false\n> +               if !haveGo {\n>                        for _, d := range dir {\n>                                if strings.HasSuffix(d.Name(), \".go\") {\n>                                        useFiles = true\n> @@ -451,7 +445,7 @@\n>\n>        // We didn't find any directories containing Go files.\n>        // If some directory returned successfully, use that.\n> -       if len(all) == 0 && first != nil {\n> +       if !haveGo {\n>                for _, d := range first {\n>                        haveName[d.Name()] = true\n>                        all = append(all, d)\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-12 16:44:50.403290",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Let's leave this for after Go 1.\n",
			"disapproval": false,
			"date": "2012-03-12 17:55:04.256386",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d3b4d95279f8 ***\n\ncmd/godoc: fix directory read\n\nUndo CL 5783076 and apply correct fix.\n\nThe /doc hack is wrong.  The code to handle this case was\nalready there and just needs a simple fix:\n\n \t// We didn't find any directories containing Go files.\n \t// If some directory returned successfully, use that.\n-\tif len(all) == 0 && first != nil {\n+\tif !haveGo {\n \t\tfor _, d := range first {\n \t\t\thaveName[d.Name()] = true\n \t\t\tall = append(all, d)\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5783079",
			"disapproval": false,
			"date": "2012-03-12 17:10:40.171165",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 12, 2012 at 10:44 AM, Robert Griesemer <gri@golang.org> wrote:\n\n> Can we have different modes for looking at it?\n> - Robert\n>\n\nThe default is all that matters.\n\nThere's already a flat mode (which I prefer), but I can never remember how\nto get to it without looking up the source, which I'm always too lazy to do.\n\nYou could argue for mode-switching links, but therein lies craziness.\n",
			"disapproval": false,
			"date": "2012-03-12 17:51:10.699663",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If you really wanted to, you could do something like 5797067.\nBut I am not sure it's such a good idea.\n",
			"disapproval": false,
			"date": "2012-03-12 17:25:37.820895",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5783079: cmd/godoc: fix directory read",
	"created": "2012-03-12 16:35:25.377276",
	"patchsets": [
		1,
		2001,
		4001,
		4
	],
	"modified": "2012-03-12 17:44:13.448279",
	"closed": true,
	"issue": 5783079
}