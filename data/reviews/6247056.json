{
	"description": "exp/html: implement Noah's Ark clause\n\nImplement the (3-per-family) Noah's Ark clause (i.e. don't put\nmore than three identical elements on the list of active formatting\nelements.\n\nAlso, when running tests, sort attributes by name before dumping\nthem.\n\nPass 4 additional tests with Noah's Ark clause (including one\nthat needs attributes to be sorted).\n\nPass 5 additional, unrelated tests because of sorting attributes.",
	"cc": [
		"nigeltao@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-05-29 03:39:29.178567",
			"approval": true
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nhttp://codereview.appspot.com/6247056/diff/3/src/pkg/exp/html/parse.go\nFile src/pkg/exp/html/parse.go (right):\n\nhttp://codereview.appspot.com/6247056/diff/3/src/pkg/exp/html/parse.go#newcode295\nsrc/pkg/exp/html/parse.go:295: for i := len(p.afe) - 1; i >= 0 && p.afe[i].Type != scopeMarkerNode; i-- {\nOn 2012/05/29 00:54:53, nigeltao wrote:\n> Is the \"p.afe[i].Type != scopeMarkerNode\" redundant with the \"if n.Type ==\n> scopeMarkerNode { break }\" a few lines down?\n> \n> If so, I'd simplify this line (the \"for\").\n\nDone.\n\nhttp://codereview.appspot.com/6247056/diff/3/src/pkg/exp/html/parse.go#newcode1903\nsrc/pkg/exp/html/parse.go:1903: \nOn 2012/05/29 00:54:53, nigeltao wrote:\n> Revert the new line.\n\nDone.",
			"disapproval": false,
			"date": "2012-05-29 03:30:34.394755",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6247056/diff/3/src/pkg/exp/html/parse.go\nFile src/pkg/exp/html/parse.go (right):\n\nhttp://codereview.appspot.com/6247056/diff/3/src/pkg/exp/html/parse.go#newcode295\nsrc/pkg/exp/html/parse.go:295: for i := len(p.afe) - 1; i >= 0 && p.afe[i].Type != scopeMarkerNode; i-- {\nIs the \"p.afe[i].Type != scopeMarkerNode\" redundant with the \"if n.Type == scopeMarkerNode { break }\" a few lines down?\n\nIf so, I'd simplify this line (the \"for\").\n\nhttp://codereview.appspot.com/6247056/diff/3/src/pkg/exp/html/parse.go#newcode1903\nsrc/pkg/exp/html/parse.go:1903: \nRevert the new line.",
			"disapproval": false,
			"date": "2012-05-29 00:54:53.113679",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-28 18:02:16.361667",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Only a web standard would use \"Noah's Ark\" as a term meaning that you\r\nhave 3 of something.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-05-28 22:07:53.052376",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1afae7555667 ***\n\nexp/html: implement Noah's Ark clause\n\nImplement the (3-per-family) Noah's Ark clause (i.e. don't put\nmore than three identical elements on the list of active formatting\nelements.\n\nAlso, when running tests, sort attributes by name before dumping\nthem.\n\nPass 4 additional tests with Noah's Ark clause (including one\nthat needs attributes to be sorted).\n\nPass 5 additional, unrelated tests because of sorting attributes.\n\nR=nigeltao, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6247056\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2012-05-29 03:42:07.953192",
			"approval": false
		}
	],
	"owner_email": "andybalholm@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "andybalholm",
	"subject": "code review 6247056: exp/html: implement Noah's Ark clause",
	"created": "2012-05-28 18:01:46.958858",
	"patchsets": [
		1,
		2001,
		3,
		8001
	],
	"modified": "2012-05-29 03:42:59.081937",
	"closed": true,
	"issue": 6247056
}