{
	"description": "misc/cgo/stdio: make it work on Windows and also test it\nuse a function to get stdout and stderr, instead of depending\non a specific libc implementation.\nalso make test/run.go replace \\r\\n by \\n before comparing\noutput.\n\n        Fixes issue 2121.\n        Part of issue 1741.",
	"cc": [
		"alex.brainman@gmail.com",
		"rsc@golang.org",
		"r@golang.org",
		"remyoudompheng@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-03-19 19:04:07.896167",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5847068/diff/5/misc/cgo/stdio/file.go\nFile misc/cgo/stdio/file.go (right):\n\nhttp://codereview.appspot.com/5847068/diff/5/misc/cgo/stdio/file.go#newcode22\nmisc/cgo/stdio/file.go:22: // which cgo doesn't like, so write a wrapper function to get them.\nDo you know why \"cgo doesn't like\" that define? I am not stuck on it, but I would be concerned that cgo does not provide direct access to \"stdout\" variable for one reason or other.\n\nhttp://codereview.appspot.com/5847068/diff/5/src/run.bat\nFile src/run.bat (right):\n\nhttp://codereview.appspot.com/5847068/diff/5/src/run.bat#newcode41\nsrc/run.bat:41: echo # ../misc/cgo/stdio\nShould not you check for CGO_ENABLED, like run.bat does?\n\nhttp://codereview.appspot.com/5847068/diff/5/src/run.bat#newcode42\nsrc/run.bat:42: go run ../misc/cgo/stdio/hello.go >NUL\nI think this is not good enough. If you look in misc/cgo/stdio/test.bash, it does many other things. We should do full set of tests. Perhaps rewrite test.bash into Go?",
			"disapproval": false,
			"date": "2012-03-20 00:21:56.202927",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL. Forget to add run.bat.",
			"disapproval": false,
			"date": "2012-03-19 19:08:13.445160",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/20 00:21:56, brainman wrote:\n> http://codereview.appspot.com/5847068/diff/5/misc/cgo/stdio/file.go#newcode22\n> misc/cgo/stdio/file.go:22: // which cgo doesn't like, so write a wrapper\n> function to get them.\n> Do you know why \"cgo doesn't like\" that define? I am not stuck on it, but I\n> would be concerned that cgo does not provide direct access to \"stdout\" variable\n> for one reason or other.\nYou can try this program:\npackage main\n/*\n#define A 1\n#define ARR arr[A]\nint arr[2] = {1, 2};\n*/\nimport \"C\"\nfunc main() {\n\tprintln(C.ARR)\n}\n\nThe reason is that cgo now only support simple renames and simple expression\nfor macro expansion text. Support arbitrary macro definitions would be difficult,\nalthough I think we can make simple cases like arr[A] work, but they might need\nto wait until after Go 1. Also, I think this code serve as documentation for people\ndealing with macros not that simple (for now).\n\nShould I file an issue for this problem?\n\n> http://codereview.appspot.com/5847068/diff/5/src/run.bat#newcode41\n> src/run.bat:41: echo # ../misc/cgo/stdio\n> Should not you check for CGO_ENABLED, like run.bat does?\nDone. I originally thought cgo is always enabled on windows, but it turned\nout it wrong.\n\n> http://codereview.appspot.com/5847068/diff/5/src/run.bat#newcode42\n> src/run.bat:42: go run ../misc/cgo/stdio/hello.go >NUL\n> I think this is not good enough. If you look in misc/cgo/stdio/test.bash, it\n> does many other things. We should do full set of tests. Perhaps rewrite\n> test.bash into Go?\nWhat we need is diff(1). But what I think we need is a shell. Write a specialized\ngo program for each of the test cases is painful. Maybe we could implement\na simple shell and a diff(1) utility for this kind of things, and then we can convert\nall test cases to use it, and drop dependency for bash on tests.",
			"disapproval": false,
			"date": "2012-03-20 17:05:08.973323",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/20 17:05:08, minux wrote:\n> \n> ... Support arbitrary macro definitions would be\n> difficult,\n> although I think we can make simple cases like arr[A] work, but they might need\n> to wait until after Go 1. Also, I think this code serve as documentation for\n> people\n> dealing with macros not that simple (for now).\n> \n> Should I file an issue for this problem?\n\nI do not know to what extend cgo is expected to work. It just the fact that it does not handle something as common as stdout, makes me uneasy. Lets wait for Russ to decide what to do.\n\n> What we need is diff(1). \n\nI disagree. We need to know if 2 files are the same or not. Byte by byte. diff is much more.\n\n> ... Write a\n> specialized\n> go program for each of the test cases is painful. ...\n\nI disagree again. Small go program that executes bunch of action and then compares output with \"golden\" (byte by byte) will do. I am happy to write one yourself. But maybe Russ has other plans, lets wait for him.\n\n> ... Maybe we could implement\n> a simple shell and a diff(1) utility for this kind of things, and then we can\n> convert\n> all test cases to use it, and drop dependency for bash on tests.\n\nAgain, we could copy the above mentioned Go program. These would be very similar and easy to change.\n\nAlex",
			"disapproval": false,
			"date": "2012-03-21 03:18:17.705083",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 21, 2012 at 11:18 AM, <alex.brainman@gmail.com> wrote:\n>\n> Again, we could copy the above mentioned Go program. These would be very\n> similar and easy to change.\n>\nWhat about complex ones like /doc/articles/wiki/test.bash?\n\nFor simple tests like comparing output with the golden one, I think we can\nreuse /test/run.go (with some trivial extension) here?\n",
			"disapproval": false,
			"date": "2012-03-21 07:49:24.755358",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/21 07:49:24, minux wrote:\n> >\n> What about complex ones like /doc/articles/wiki/test.bash?\n\nI would do the simple ones first to see how complicated it gets.\n\n> For simple tests like comparing output with the golden one, I think we can\n> reuse /test/run.go (with some trivial extension) here?\n\nThese are just two arrays of bytes. I would just compare them byte by byte. It might be not as informative as seeing output of diff when comparison fails. I might actually try to run diff, if comparison fails, and display diff output, if diff execution succeeds.\n\nPlease note, that all this is just a speculation on my part. I have no say in this matter.\n\nAlex",
			"disapproval": false,
			"date": "2012-03-21 23:25:55.257103",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "any more thoughts on how to do tests on Windows?\nshould I just write a small diff like utility in misc/tools/ or I\nwrite a test.go for each test that require output validation?",
			"disapproval": false,
			"date": "2012-04-25 08:40:24.143886",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Apr 25, 2012 at 4:40 AM,  <minux.ma@gmail.com> wrote:\r\n> any more thoughts on how to do tests on Windows?\r\n> should I just write a small diff like utility in misc/tools/ or I\r\n> write a test.go for each test that require output validation?\r\n\r\nYou could use 'fc', which is Windows's cmp.\r\nhttp://ss64.com/nt/fc.html\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-05-03 21:49:37.216772",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I share your discomfort.",
			"disapproval": false,
			"date": "2012-05-14 18:46:20.300679",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nIf this approach is ok, I will try to enable other cgo tests on Windows.",
			"disapproval": false,
			"date": "2012-05-11 18:05:13.667634",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/05/11 18:05:13, minux wrote:\n> PTAL.\n\nLGTM. But please wait for rsc.\n\n> \n> If this approach is ok, I will try to enable other cgo tests on Windows.\n\nI have small problem with this approach. We are creating duplicate programs that do same things on different OS. I believe, people will change one, but not the other. I still prefer single program written in Go. But I do not want to push for it unless others agree.\n\nAlex",
			"disapproval": false,
			"date": "2012-05-14 04:27:15.590584",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, May 15, 2012 at 2:46 AM, <r@golang.org> wrote:\r\n\r\n> I share your discomfort.\r\n>\r\ncould we write a mini language in Go to do all these testing?\r\nthen we won't even depend on bash.\r\n\r\nor, maybe there is a way to mechanically translate a small but useful\r\nsubset of bash script to dos batch file?\r\n",
			"disapproval": false,
			"date": "2012-05-14 18:57:29.264020",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can we reuse test/run.go?\r\n",
			"disapproval": false,
			"date": "2012-05-17 01:41:51.388518",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, May 17, 2012 at 9:41 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> Can we reuse test/run.go?\r\n>\r\nSure. I've prepared two CLs to replace custom bash script under misc/cgo/*\r\nand doc/progs\r\nCL 6220049 and CL 6218048.\r\n",
			"disapproval": false,
			"date": "2012-05-18 16:25:16.680041",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/10 11:11:54, minux wrote:\n> \n> if we define cmpout as comparing textual output, then my change is\n> reasonable,\n\nFair enough. But, these might be unsuitable for other tests. Lets wait for rsc to voice in. As far as your other changes are concerned, they LGTM.\n\nAlex",
			"disapproval": false,
			"date": "2012-08-12 08:22:26.752450",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can we modify the test so that it opens stdout in binary mode on Windows?",
			"disapproval": false,
			"date": "2012-08-16 06:52:53.252050",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Aug 16, 2012 at 2:52 PM, <remyoudompheng@gmail.com> wrote:\r\n\r\n> Can we modify the test so that it opens stdout in binary mode on\r\n> Windows?\r\n>\r\ni'd rather not. because it has two purposes.\r\nit's a test for using stdio, and it's also a cgo example referenced\r\nby tip.golang.org/cmd/cgo (and I think the latter purpose is more important,\r\nthe test merely serves to make sure we don't break our own examples)\r\n\r\nwe already have to use wrapper functions to get stdout/stderr to workaround\r\ncmd/cgo limitations, i don't want to complicate it just to satisfy our test\r\nprogram.\r\n",
			"disapproval": false,
			"date": "2012-08-16 07:10:36.108030",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "now that CL 6220049 has been submitted, please take another look at this CL.\n\nnote: run.bat includes changes from CL 6218048, as it will be submitted after\nthat one.",
			"disapproval": false,
			"date": "2012-08-10 03:59:07.000670",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\ni have to make test/run.go replace \\r\\n by \\n before comparing output,\notherwise, the stdio test will fail on Windows.",
			"disapproval": false,
			"date": "2012-08-10 04:45:26.519790",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Aug 10, 2012 at 1:29 PM, <alex.brainman@gmail.com> wrote:\r\n\r\n> On 2012/08/10 04:45:26, minux wrote:\r\n>>\r\n>> i have to make test/run.go replace \\r\\n by \\n before comparing output,\r\n>> otherwise, the stdio test will fail on Windows.\r\n>\r\n> I am concerned about you making this change. These comparison rules are\r\n> becoming complicated.\r\n>\r\nyes, it is.\r\n\r\nif we define cmpout as comparing textual output, then my change is\r\nreasonable,\r\nif we allow cmpout to compare arbitrary binary, then it's not; and if it's\r\nthe case,\r\nperhaps we need a cmptext?\r\n",
			"disapproval": false,
			"date": "2012-08-10 11:11:54.279560",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/10 04:45:26, minux wrote:\n> PTAL.\n> \n> i have to make test/run.go replace \\r\\n by \\n before comparing output,\n> otherwise, the stdio test will fail on Windows.\n\nI am concerned about you making this change. These comparison rules are becoming complicated.\n\nApart from that everything looks good to me.\n\nAlex",
			"disapproval": false,
			"date": "2012-08-10 05:29:02.002190",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/16 06:52:53, remyoudompheng wrote:\n> Can we modify the test so that it opens stdout in binary mode on Windows?\n\nI do not know much about C library involved.\n\nOn the other hand, I am not sure, if it is OK for us to change the test. Cgo is suppose to work transparently everywhere, isn't it?\n\nAlex",
			"disapproval": false,
			"date": "2012-08-16 06:55:50.645070",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping.\n\ni need a final say on the test/run.go change.",
			"disapproval": false,
			"date": "2012-09-03 16:28:13.400150",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-10 15:57:28.065060",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=80ab25ffe4ca ***\n\nmisc/cgo/stdio: make it work on Windows and also test it\nuse a function to get stdout and stderr, instead of depending\non a specific libc implementation.\nalso make test/run.go replace \\r\\n by \\n before comparing\noutput.\n\n        Fixes issue 2121.\n        Part of issue 1741.\n\nR=alex.brainman, rsc, r, remyoudompheng\nCC=golang-dev\nhttp://codereview.appspot.com/5847068",
			"disapproval": false,
			"date": "2012-09-19 16:28:25.741420",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5847068: misc/cgo/stdio: make it work on Windows",
	"created": "2012-03-19 18:59:35.325465",
	"patchsets": [
		1,
		1002,
		5,
		6,
		13001,
		16001,
		19001,
		30001,
		32001,
		29008,
		37001,
		43001,
		46001,
		49001
	],
	"modified": "2012-09-19 16:28:34.578000",
	"closed": true,
	"issue": 5847068
}