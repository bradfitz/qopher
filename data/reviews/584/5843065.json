{
	"description": "cmd/godoc: inform users that the playground doesn't work via local godoc",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-03-20 02:58:44.963075",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n On Mar 19, 2012 7:58 PM, <adg@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg\n>\n>\n> Description:\n> cmd/godoc: inform users that the playground doesn't work via local godoc\n>\n> Please review this at http://codereview.appspot.com/**5843065/<http://codereview.appspot.com/5843065/>\n>\n> Affected files:\n>  M doc/play/playground.js\n>  M src/cmd/godoc/main.go\n>\n>\n> Index: doc/play/playground.js\n> ==============================**==============================**=======\n> --- a/doc/play/playground.js\n> +++ b/doc/play/playground.js\n> @@ -166,10 +166,13 @@\n>                                }\n>                                pre.text(out);\n>                        },\n> -                       error: function() {\n> -                               output.addClass(\"error\").text(\n> -                                       \"Error communicating with remote\n> server.\"\n> -                               );\n> +                       error: function(xhr) {\n> +                               var text = \"Error communicating with\n> remote server.\";\n> +                               console.log(xhr.status);\n> +                               if (xhr.status == 501) {\n> +                                       text = xhr.responseText;\n> +                               }\n> +                               output.addClass(\"error\").text(**text);\n>                        }\n>                });\n>        }\n> @@ -190,6 +193,10 @@\n>                                type: \"POST\",\n>                                complete: function(xhr) {\n>                                        sharing = false;\n> +                                       if (xhr.status == 501) {\n> +                                               alert(xhr.responseText);\n> +                                               return;\n> +                                       }\n>                                        if (xhr.status != 200) {\n>                                                alert(\"Server error; try\n> again.\");\n>                                                return;\n> Index: src/cmd/godoc/main.go\n> ==============================**==============================**=======\n> --- a/src/cmd/godoc/main.go\n> +++ b/src/cmd/godoc/main.go\n> @@ -274,6 +274,10 @@\n>\n>                registerPublicHandlers(http.**DefaultServeMux)\n>\n> +               // Playground handlers are not available in local godoc.\n> +               http.HandleFunc(\"/compile\", disabledHandler)\n> +               http.HandleFunc(\"/share\", disabledHandler)\n> +\n>                // Initialize default directory tree with corresponding\n> timestamp.\n>                // (Do it in a goroutine so that launch is quick.)\n>                go initFSTree()\n> @@ -450,3 +454,9 @@\n>\n>  func (w *httpWriter) Header() http.Header  { return w.h }\n>  func (w *httpWriter) WriteHeader(code int) { w.code = code }\n> +\n> +// disabledHandler serves a 501 \"Not Implemented\" response.\n> +func disabledHandler(w http.ResponseWriter, r *http.Request) {\n> +       w.WriteHeader(http.**StatusNotImplemented)\n> +       fmt.Fprint(w, \"This functionality is not available via local\n> godoc.\")\n> +}\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-20 03:04:09.616004",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=fabe3dc4498e ***\n\ncmd/godoc: inform users that the playground doesn't work via local godoc\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5843065",
			"disapproval": false,
			"date": "2012-03-20 03:11:45.578493",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5843065: cmd/godoc: inform users that the playground doesn't wor...",
	"created": "2012-03-20 02:58:37.988925",
	"patchsets": [
		1,
		1003
	],
	"modified": "2012-03-20 03:11:47.473734",
	"closed": true,
	"issue": 5843065
}