{
	"description": "runtime: restore deadlock detection in the simplest case.\n\nFixes issue 3342.",
	"cc": [
		"iant@golang.org",
		"r@golang.org",
		"dave@cheney.net",
		"rsc@golang.org",
		"golang-dev@googlegroups.com",
		"remy@archlinux.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-17 11:20:57.779310",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM perhaps with the mentioned change.\n\nhttp://codereview.appspot.com/5844051/diff/4001/src/pkg/runtime/mheap.c\nFile src/pkg/runtime/mheap.c (right):\n\nhttp://codereview.appspot.com/5844051/diff/4001/src/pkg/runtime/mheap.c#newcode366\nsrc/pkg/runtime/mheap.c:366: \nI think the place to call this is immediately before calling entersyscall, not immediately after calling exitsyscall.  I think it should work either way, but calling gosched before sleeping will avoid a pointless hiccup after the scavenger wakes up.",
			"disapproval": false,
			"date": "2012-03-18 04:36:51.757822",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd like someone to check I am not writing garbage here.\n\nR\u00e9my.",
			"disapproval": false,
			"date": "2012-03-17 11:21:25.052526",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, iant@golang.org (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-20 19:42:38.191931",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Rem\u00e9, thank you for this CL. I'm concerned that it is too risky this close to Go1 so I think it should be left til after the release. \n\nOn 21/03/2012, at 7:18, iant@golang.org wrote:\n\n> LGTM and fixes an issue but may be too risky at this point.  I would\n> vote for putting it in but leaving for r for final decision.\n> \n> http://codereview.appspot.com/5844051/\n",
			"disapproval": false,
			"date": "2012-03-20 20:40:34.410959",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5844051/diff/4001/src/pkg/runtime/mheap.c\nFile src/pkg/runtime/mheap.c (right):\n\nhttp://codereview.appspot.com/5844051/diff/4001/src/pkg/runtime/mheap.c#newcode366\nsrc/pkg/runtime/mheap.c:366: \nOn 2012/03/18 04:36:51, iant wrote:\n> I think the place to call this is immediately before calling entersyscall, not\n> immediately after calling exitsyscall.  I think it should work either way, but\n> calling gosched before sleeping will avoid a pointless hiccup after the\n> scavenger wakes up.\n\nDone.",
			"disapproval": false,
			"date": "2012-03-20 19:43:10.415500",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM and fixes an issue but may be too risky at this point.  I would vote for putting it in but leaving for r for final decision.",
			"disapproval": false,
			"date": "2012-03-20 20:18:57.406133",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It's fine to me if it's deferred. According to my tests the problem only shows up if you have a single goroutine, in which case the deadlock should be trivially visible.",
			"disapproval": false,
			"date": "2012-03-20 20:20:03.553860",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"r@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd like to give rsc a chance to look this over before checking it in. The problem it solves is not important enough to offset the risk that comes with changing such fundamental code. I vote for holding until after we cut Go 1 - soon.",
			"disapproval": false,
			"date": "2012-03-21 01:32:44.310463",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"iant@golang.org",
				"r@golang.org",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Let's wait until after Go 1.  I don't fully understand this.",
			"disapproval": false,
			"date": "2012-03-26 14:31:34.515207",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"iant@golang.org",
				"r@golang.org",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 5d0322034aa8 ***\n\nruntime: restore deadlock detection in the simplest case.\n\nFixes issue 3342.\n\nR=iant, r, dave, rsc\nCC=golang-dev, remy\nhttp://codereview.appspot.com/5844051\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-03-27 03:06:35.143620",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 5844051: runtime: restore deadlock detection in the simplest case.",
	"created": "2012-03-17 11:20:28.141389",
	"patchsets": [
		1,
		2001,
		4001,
		10001
	],
	"modified": "2012-05-03 18:17:06.234774",
	"closed": true,
	"issue": 5844051
}