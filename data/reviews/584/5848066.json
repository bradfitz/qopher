{
	"description": "run.bat: disable test in test\\bench\\go1 to fix build",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"aram@mgk.ro"
	],
	"messages": [
		{
			"sender": "aram@mgk.ro",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\n>\n> I never had to deal with paths that long. I am pretty sure, it can be\n> overcome. I just need to understand what to do :-). Which syscall\n> functions needs to be adjusted and how.\n>\n\nIt's pretty easy, I see that the Windows port uses the Unicode variants\nof functions, like CreateFileW, in this case you only need to\nprepend the paths with \\\\?\\, for more information see\nthis very long and sterile article:\n\n    http://msdn.microsoft.com/en-us/library/Aa365247\n",
			"disapproval": false,
			"date": "2012-03-20 13:13:58.137787",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-20 03:48:22.893397",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=fbc982f5aff1 ***\n\nrun.bat: disable test in test\\bench\\go1 to fix build\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5848066",
			"disapproval": false,
			"date": "2012-03-20 03:59:58.333604",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nReally?",
			"disapproval": false,
			"date": "2012-03-20 03:57:32.118731",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/20 03:57:32, r wrote:\n> Really?\n\nI hope my temp fix will work.\n\nI never had to deal with paths that long. I am pretty sure, it can be overcome. I just need to understand what to do :-). Which syscall functions needs to be adjusted and how.\n\nAlex",
			"disapproval": false,
			"date": "2012-03-20 04:02:22.926967",
			"approval": false
		},
		{
			"sender": "aram@mgk.ro",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "To answer your comments on issue 3358:\n>\n>\nMaking the normalization ourselves is a mistake because we can't mimic the \nside effects\nof a relative path hitting the I/O manager and because we'd have to ignore \nthat the Win32\nnamespace is private to a session.\n\nIf you used the real syscall wrapper (ZwCreateFile) instead of the Win32 \nCreateFile,\nyou could use the path as is and not have the the mentioned normalization \nissues,\nnor the path length problem. You'd have the problem of initializing the \nRootDirectory handle\nin the OBJECT_ATTRIBUTES structure, but that's easier than making the \nnormalization\nourselves.\n\nI'm not advocating for the latter either. I think that the current behavior \nis the correct\nthing to do.\n",
			"disapproval": false,
			"date": "2012-03-23 11:13:58.041269",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5848066: run.bat: disable test in test\\bench\\go1 to fix build",
	"created": "2012-03-20 03:44:04.586240",
	"patchsets": [
		1,
		2001,
		2003,
		6001
	],
	"modified": "2012-03-20 13:13:58.277065",
	"closed": true,
	"issue": 5848066
}