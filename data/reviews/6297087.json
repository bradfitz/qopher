{
	"description": "runtime: fix struct Sigaction for Linux/ARM\n        if we were to use sizeof(sa.sa_mask) instead of 8 as the last argument\n        to rt_sigaction, we would have already fixed this bug, so also updated\n        Linux/386 and Linux/amd64 files to use that; also test the return value\n        of rt_sigaction.",
	"cc": [
		"dave@cheney.net",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6297087/diff/1002/src/pkg/runtime/defs_linux_arm.h#newcode146\n> src/pkg/runtime/defs_linux_arm.h:146: uint64 sa_mask;\n> If sa_mask is 64bit, then rt_sigaction should use the EABI even register\n> convention for passing it. Possibly rt_sigprocmask is affected as well. \n\nIgnore this, sigaction takes a pointer to &sigmask (but I do think it's worth checking the return value).",
			"disapproval": false,
			"date": "2012-06-14 23:13:11.854592",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for fixing this.\n\nhttp://codereview.appspot.com/6297087/diff/1002/src/pkg/runtime/defs_linux_arm.h\nFile src/pkg/runtime/defs_linux_arm.h (right):\n\nhttp://codereview.appspot.com/6297087/diff/1002/src/pkg/runtime/defs_linux_arm.h#newcode146\nsrc/pkg/runtime/defs_linux_arm.h:146: uint64 sa_mask;\nIf sa_mask is 64bit, then rt_sigaction should use the EABI even register convention for passing it. Possibly rt_sigprocmask is affected as well. \n\n\nTEXT runtime\u00b7rt_sigaction(SB),7,$0\n        MOVW    0(FP), R0\n        MOVW    4(FP), R2\n        MOVW    8(FP), R3\n        MOVW    12(FP), R4\n        MOVW    $SYS_rt_sigaction, R7\n        SWI     $0\n        MOVW    $0xfffff001, R6\n        CMP     R6, R0\n        MOVW.HI $0, R9  // crash on syscall failure\n        MOVW.HI R9, (R9)\n        RET",
			"disapproval": false,
			"date": "2012-06-14 21:09:55.925472",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6297087/diff/1003/src/pkg/runtime/signal_linux_386.c\nFile src/pkg/runtime/signal_linux_386.c (right):\n\nhttp://codereview.appspot.com/6297087/diff/1003/src/pkg/runtime/signal_linux_386.c#newcode133\nsrc/pkg/runtime/signal_linux_386.c:133: runtime\u00b7throw(\"rt_sigaction failure!\");\n\"runtime: rt_sigaction failed\"\n\nthe ! is unnecessary\n\nhttp://codereview.appspot.com/6297087/diff/1003/src/pkg/runtime/signal_linux_amd64.c\nFile src/pkg/runtime/signal_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6297087/diff/1003/src/pkg/runtime/signal_linux_amd64.c#newcode143\nsrc/pkg/runtime/signal_linux_amd64.c:143: runtime\u00b7throw(\"rt_sigaction failure!\");\nSame.\n\nhttp://codereview.appspot.com/6297087/diff/1003/src/pkg/runtime/signal_linux_arm.c\nFile src/pkg/runtime/signal_linux_arm.c (right):\n\nhttp://codereview.appspot.com/6297087/diff/1003/src/pkg/runtime/signal_linux_arm.c#newcode143\nsrc/pkg/runtime/signal_linux_arm.c:143: runtime\u00b7throw(\"rt_sigaction failure!\");\nSame.",
			"disapproval": false,
			"date": "2012-06-19 03:54:06.135837",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/06/14 23:13:11, dfc wrote:\n> Ignore this, sigaction takes a pointer to &sigmask (but I do think it's worth\n> checking the return value).\ni think we can check the return value at the C side (the syscall retval is automatically\nthat of runtime.rt_sigaction.",
			"disapproval": false,
			"date": "2012-06-15 09:27:36.563519",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-06-19 17:16:52.168012",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\ncheck runtime.rt_sigaction return value in signal_linux_$GOARCH.c.",
			"disapproval": false,
			"date": "2012-06-15 09:40:00.071370",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/06/15 09:40:00, minux wrote:\n> PTAL.\n> \n> check runtime.rt_sigaction return value in signal_linux_$GOARCH.c.\n\nLGTM. tested on linux/amd64 and linux/arm.",
			"disapproval": false,
			"date": "2012-06-15 10:58:38.067200",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=6eefce99091e ***\n\nruntime: fix struct Sigaction for Linux/ARM\n        if we were to use sizeof(sa.sa_mask) instead of 8 as the last argument\n        to rt_sigaction, we would have already fixed this bug, so also updated\n        Linux/386 and Linux/amd64 files to use that; also test the return value\n        of rt_sigaction.\n\nR=dave, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6297087",
			"disapproval": false,
			"date": "2012-06-19 17:17:24.885152",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6297087: runtime: fix struct Sigaction for Linux/ARM",
	"created": "2012-06-14 15:04:58.375537",
	"patchsets": [
		1,
		2001,
		1002,
		1003,
		11003,
		10013
	],
	"modified": "2012-06-19 17:17:29.918803",
	"closed": true,
	"issue": 6297087
}