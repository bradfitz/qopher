{
	"description": "os,time: fix Plan 9 build",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nSorry for the breakage.\n On Feb 20, 2012 9:36 AM, <fshahriar@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> os,time: fix Plan 9 build\n>\n> Please review this at http://codereview.appspot.com/**5689043/<http://codereview.appspot.com/5689043/>\n>\n> Affected files:\n>  M src/pkg/os/file.go\n>  M src/pkg/os/file_posix.go\n>  M src/pkg/time/sys_plan9.go\n>  M src/pkg/time/zoneinfo_plan9.go\n>\n>\n> Index: src/pkg/os/file.go\n> ==============================**==============================**=======\n> --- a/src/pkg/os/file.go\n> +++ b/src/pkg/os/file.go\n> @@ -72,6 +72,19 @@\n>        SEEK_END int = 2 // seek relative to the end\n>  )\n>\n> +// LinkError records an error during a link or symlink or rename\n> +// system call and the paths that caused it.\n> +type LinkError struct {\n> +       Op  string\n> +       Old string\n> +       New string\n> +       Err error\n> +}\n> +\n> +func (e *LinkError) Error() string {\n> +       return e.Op + \" \" + e.Old + \" \" + e.New + \": \" + e.Err.Error()\n> +}\n> +\n>  // Read reads up to len(b) bytes from the File.\n>  // It returns the number of bytes read and an error, if any.\n>  // EOF is signaled by a zero count with err set to io.EOF.\n> Index: src/pkg/os/file_posix.go\n> ==============================**==============================**=======\n> --- a/src/pkg/os/file_posix.go\n> +++ b/src/pkg/os/file_posix.go\n> @@ -24,19 +24,6 @@\n>        }\n>  }\n>\n> -// LinkError records an error during a link or symlink or rename\n> -// system call and the paths that caused it.\n> -type LinkError struct {\n> -       Op  string\n> -       Old string\n> -       New string\n> -       Err error\n> -}\n> -\n> -func (e *LinkError) Error() string {\n> -       return e.Op + \" \" + e.Old + \" \" + e.New + \": \" + e.Err.Error()\n> -}\n> -\n>  // Link creates newname as a hard link to the oldname file.\n>  // If there is an error, it will be of type *LinkError.\n>  func Link(oldname, newname string) error {\n> Index: src/pkg/time/sys_plan9.go\n> ==============================**==============================**=======\n> --- a/src/pkg/time/sys_plan9.go\n> +++ b/src/pkg/time/sys_plan9.go\n> @@ -43,7 +43,7 @@\n>  }\n>\n>  func open(name string) (uintptr, error) {\n> -       fd, err := syscall.Open(name, syscall.O_RDONLY, 0)\n> +       fd, err := syscall.Open(name, syscall.O_RDONLY)\n>        if err != nil {\n>                return 0, err\n>        }\n> @@ -72,4 +72,5 @@\n>                }\n>                buf = buf[m:]\n>        }\n> +       return nil\n>  }\n> Index: src/pkg/time/zoneinfo_plan9.go\n> ==============================**==============================**=======\n> --- a/src/pkg/time/zoneinfo_plan9.**go\n> +++ b/src/pkg/time/zoneinfo_plan9.**go\n> @@ -8,11 +8,10 @@\n>\n>  import (\n>        \"errors\"\n> +       \"runtime\"\n>        \"syscall\"\n>  )\n>\n> -var badData = errors.New(\"malformed time zone information\")\n> -\n>  func isSpace(r rune) bool {\n>        return r == ' ' || r == '\\t' || r == '\\n'\n>  }\n> @@ -149,7 +148,7 @@\n>  }\n>\n>  func loadLocation(name string) (*Location, error) {\n> -       if z, err := loadZoneFile(runtime.GOROOT() + \"/lib/time/zoneinfo/\"\n> + name); err == nil {\n> +       if z, err := loadZoneFile(runtime.GOROOT()+**\"/lib/time/zoneinfo.zip\",\n> name); err == nil {\n>                z.name = name\n>                return z, nil\n>        }\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-20 00:55:25.166247",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"fshahriar@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 21b30071e27d ***\n\nos,time: fix Plan 9 build\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5689043\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2012-02-20 01:31:34.941565",
			"approval": false
		},
		{
			"sender": "fshahriar@gmail.com",
			"recipients": [
				"fshahriar@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-19 22:36:34.082137",
			"approval": false
		}
	],
	"owner_email": "fshahriar@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "fhs",
	"subject": "code review 5689043: os,time: fix Plan 9 build",
	"created": "2012-02-19 22:34:52.791624",
	"patchsets": [
		1,
		2001,
		3
	],
	"modified": "2012-02-20 01:55:25.363437",
	"closed": true,
	"issue": 5689043
}