{
	"description": "cmd/dist: fix build again\n\nI am really bad at this. Didn't hg add this file.",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-02 19:20:40.502660",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=5cdc93018bcf ***\n\ncmd/dist: fix build again\n\nI am really bad at this. Didn't hg add this file.\n\nTBR=bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/12372043",
			"disapproval": false,
			"date": "2013-08-02 19:20:45.711870",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nDoes this need to be added to hgignore too, like the runtime z files?\r\n On Aug 2, 2013 12:20 PM, <rsc@golang.org> wrote:\r\n\r\n> Reviewers: bradfitz,\r\n>\r\n> Message:\r\n> Hello bradfitz (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> cmd/dist: fix build again\r\n>\r\n> I am really bad at this. Didn't hg add this file.\r\n>\r\n> Please review this at https://codereview.appspot.**com/12372043/<https://codereview.appspot.com/12372043/>\r\n>\r\n> Affected files:\r\n>   A src/cmd/dist/buildgo.c\r\n>\r\n>\r\n> Index: src/cmd/dist/buildgo.c\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/src/cmd/dist/buildgo.c\r\n> @@ -0,0 +1,44 @@\r\n> +// Copyright 2012 The Go Authors.  All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +#include \"a.h\"\r\n> +\r\n> +/*\r\n> + * Helpers for building cmd/go and cmd/cgo.\r\n> + */\r\n> +\r\n> +// mkzdefaultcc writes zdefaultcc.go:\r\n> +//\r\n> +//     package main\r\n> +//     const defaultCC = <defaultcc>\r\n> +//\r\n> +// It is invoked to write cmd/go/zdefaultcc.go\r\n> +// but we also write cmd/cgo/zdefaultcc.go.\r\n> +void\r\n> +mkzdefaultcc(char *dir, char *file)\r\n> +{\r\n> +       Buf b, out;\r\n> +\r\n> +       USED(dir);\r\n> +\r\n> +       binit(&out);\r\n> +       bprintf(&out,\r\n> +               \"// auto generated by go tool dist\\n\"\r\n> +               \"\\n\"\r\n> +               \"package main\\n\"\r\n> +               \"\\n\"\r\n> +               \"const defaultCC = `%s`\\n\",\r\n> +               defaultcc);\r\n> +\r\n> +       writefile(&out, file, 0);\r\n> +\r\n> +       // Convert file name to replace.\r\n> +       binit(&b);\r\n> +       bwritestr(&b, file);\r\n> +       bsubst(&b, \"/go/zdefaultcc.go\", \"/cgo/zdefaultcc.go\");\r\n> +       writefile(&out, bstr(&b), 0);\r\n> +\r\n> +       bfree(&b);\r\n> +       bfree(&out);\r\n> +}\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-02 19:59:07.978770",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes, CL sent.\r\n",
			"disapproval": false,
			"date": "2013-08-03 01:34:20.805990",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 12372043: cmd/dist: fix build again",
	"created": "2013-08-02 19:20:21.873020",
	"patchsets": [
		1,
		1001,
		2003
	],
	"modified": "2013-08-03 01:34:20.843620",
	"closed": true,
	"issue": 12372043
}