{
	"description": "tutorial,effective_go: prepare for error change",
	"cc": [
		"adg@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-31 20:59:51.998273",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "To be submitted after the error changes go in.\nThe .html files will need to be regenerated before submitting.",
			"disapproval": false,
			"date": "2011-10-31 21:00:53.541605",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5316068/diff/1/doc/go_tutorial.html\nFile doc/go_tutorial.html (right):\n\nhttp://codereview.appspot.com/5316068/diff/1/doc/go_tutorial.html#newcode583\ndoc/go_tutorial.html:583: that make it a good basis for representing and programming for errors.\ns/programming for/handling/ ?\n\nhttp://codereview.appspot.com/5316068/diff/1/doc/progs/cat.go\nFile doc/progs/cat.go (right):\n\nhttp://codereview.appspot.com/5316068/diff/1/doc/progs/cat.go#newcode20\ndoc/progs/cat.go:20: fmt.Fprintf(os.Stderr, \"cat: error reading from %s: %s\\n\", f.String(), er)\nwhile you're here, why not remove the .String() from f?\n\nhttp://codereview.appspot.com/5316068/diff/1/doc/progs/cat_rot13.go\nFile doc/progs/cat_rot13.go (right):\n\nhttp://codereview.appspot.com/5316068/diff/1/doc/progs/cat_rot13.go#newcode62\ndoc/progs/cat_rot13.go:62: fmt.Fprintf(os.Stderr, \"cat: error reading from %s: %s\\n\", r.String(), er)\nditto",
			"disapproval": false,
			"date": "2011-11-01 00:17:48.167168",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5316068/diff/1/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttp://codereview.appspot.com/5316068/diff/1/doc/effective_go.html#newcode2660\ndoc/effective_go.html:2660: Err error  // Returned by the system call.\nadd space before //\n\nhttp://codereview.appspot.com/5316068/diff/1/doc/go_tutorial.html\nFile doc/go_tutorial.html (right):\n\nhttp://codereview.appspot.com/5316068/diff/1/doc/go_tutorial.html#newcode583\ndoc/go_tutorial.html:583: that make it a good basis for representing and programming for errors.\nOn 2011/11/01 00:17:48, adg wrote:\n> s/programming for/handling/ ?\n\n+1",
			"disapproval": false,
			"date": "2011-11-01 04:22:55.655978",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "please let me know when this CL is done\nso I can patch it into my client and avoid\na repeat of my rune spec mistake.\n\nthanks.",
			"disapproval": false,
			"date": "2011-11-01 05:19:22.883170",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello adg@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-01 15:56:30.448931",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=fa6933304838 ***\n\ntutorial,effective_go: prepare for error change\n\nR=adg, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5316068\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-11-02 01:50:24.221995",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nPatching.",
			"disapproval": false,
			"date": "2011-11-02 00:46:09.881290",
			"approval": true
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5316068: tutorial,effective_go: prepare for error change",
	"created": "2011-10-31 20:59:47.725637",
	"patchsets": [
		1,
		10001
	],
	"modified": "2011-11-02 16:31:40.659646",
	"closed": true,
	"issue": 5316068
}