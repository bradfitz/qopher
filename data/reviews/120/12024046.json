{
	"description": "go.tools/go/types: record comma-ok results as tuples\n\n- added corresponding api tests\n- support tuple comparison with IsIdentical\n\nThis CL will require some adjustments to SSA.",
	"cc": [
		"adonovan@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-31 00:57:40.260290",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/api_test.go\nFile go/types/api_test.go (right):\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/api_test.go#newcode67\ngo/types/api_test.go:67: if exprString(e) == test.expr {\nA cheaper test for this would be to see that test.expr.Pos() (minus the file base, which is zero), equals the index of the string \"x.(int)\" within the file.\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/errors.go\nFile go/types/errors.go (right):\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/errors.go#newcode137\ngo/types/errors.go:137: writeExpr(buf, x.Type)\nDon't you need to add cases for the type syntax, e.g. *ast.ArrayType?\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/types_test.go\nFile go/types/types_test.go (right):\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/types_test.go#newcode163\ngo/types/types_test.go:163: //           cause a 386 compiler error (out of fixed registers)\nYikes.  Is that still a bug?",
			"disapproval": false,
			"date": "2013-07-31 01:18:43.995780",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12024046/diff/10001/go/types/api_test.go\nFile go/types/api_test.go (right):\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/api_test.go#newcode67\ngo/types/api_test.go:67: if exprString(e) == test.expr {\nOn 2013/07/31 01:18:44, adonovan wrote:\n> A cheaper test for this would be to see that test.expr.Pos() (minus the file\n> base, which is zero), equals the index of the string \"x.(int)\" within the file.\n\nThe problem is that several expressions have exactly the same offset; here: x and x.(int).\n\nLeaving as is.\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/errors.go\nFile go/types/errors.go (right):\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/errors.go#newcode137\ngo/types/errors.go:137: writeExpr(buf, x.Type)\nOn 2013/07/31 01:18:44, adonovan wrote:\n> Don't you need to add cases for the type syntax, e.g. *ast.ArrayType?\n\nyes - added todo\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/types_test.go\nFile go/types/types_test.go (right):\n\nhttps://codereview.appspot.com/12024046/diff/10001/go/types/types_test.go#newcode163\ngo/types/types_test.go:163: //           cause a 386 compiler error (out of fixed registers)\nOn 2013/07/31 01:18:44, adonovan wrote:\n> Yikes.  Is that still a bug?\n\nI don't know. Should try out. (another CL).",
			"disapproval": false,
			"date": "2013-07-31 16:32:52.442340",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=2ff583650545&repo=tools ***\n\ngo.tools/go/types: record comma-ok results as tuples\n\n- added corresponding api tests\n- support tuple comparison with IsIdentical\n\nThis CL will require some adjustments to SSA.\n\nR=adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/12024046",
			"disapproval": false,
			"date": "2013-07-31 16:33:49.470810",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 12024046: go.tools/go/types: record comma-ok results as tuples",
	"created": "2013-07-30 23:51:08.050800",
	"patchsets": [
		1,
		2002,
		5001,
		2003,
		10001,
		15001
	],
	"modified": "2013-07-31 16:33:50.721070",
	"closed": true,
	"issue": 12024046
}