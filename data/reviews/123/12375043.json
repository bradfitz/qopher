{
	"description": "crypto/cipher: add GCM mode.\n\nGCM is Galois Counter Mode, an authenticated encryption mode that is,\nnearly always, used with AES.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-nuts@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-nuts@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-02 19:52:01.522820",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2013-08-03 01:22:22.548610",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go\nFile src/pkg/crypto/cipher/gcm.go (right):\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode1\nsrc/pkg/crypto/cipher/gcm.go:1: package cipher\ncopyright\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode9\nsrc/pkg/crypto/cipher/gcm.go:9: // AEAD represents an authenticated encryption cipher mode.\ncan you spell out the acronym in the description?\n\n// AEAD is a cipher mode providing authenticated encryption with associated data.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode20\nsrc/pkg/crypto/cipher/gcm.go:20: // additionalData and appends the result to out, returning the updated\nmaybe change the var to just be named data, and then say\n\n\"authenticates the additional data\"\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode25\nsrc/pkg/crypto/cipher/gcm.go:25: Seal(out, nonce, plaintext, additionalData []byte) []byte\ns/out/dst/ to match other code\nagain for Open\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode31\nsrc/pkg/crypto/cipher/gcm.go:31: // match the value passed to Seal.\nDoes the additionalData passed to Open have to match the additionalData passed to Seal? I assume so, but perhaps it should be stated.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode34\nsrc/pkg/crypto/cipher/gcm.go:34: Open(out, nonce, ciphertext, additionalData []byte) ([]byte, bool)\nEven if you do not want to give more than one bit of information, it would be good to return an error instead of a bool here, just so that it is clearer when printed. A global\n\nvar errOpen = errors.New(\"cipher: message authentication failed\")\n\nor something like that is fine.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode93\nsrc/pkg/crypto/cipher/gcm.go:93: func (gcm *gcm) NonceSize() int {\nfunc (*gcm) since you are not using the receiver\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode101\nsrc/pkg/crypto/cipher/gcm.go:101: func (gcm *gcm) Seal(out, nonce, plaintext, additionalData []byte) []byte {\nfunc (g *gcm)\nto avoid hiding the type name (just a little confusing to read)\nthroughout\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm_test.go\nFile src/pkg/crypto/cipher/gcm_test.go (right):\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm_test.go#newcode1\nsrc/pkg/crypto/cipher/gcm_test.go:1: package cipher_test\ncopyright",
			"disapproval": false,
			"date": "2013-08-03 01:32:52.946990",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nI needed to add deps_test.go changes to this change.\n\n1) I ditched encoding/binary and wrote a couple of simple helper functions in gcm.go instead. This solves one layering issue.\n\n2) I added crypto/subtle to L2 to fix the other. I'm not sure whether that's a good idea or not.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go\nFile src/pkg/crypto/cipher/gcm.go (right):\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode1\nsrc/pkg/crypto/cipher/gcm.go:1: package cipher\nOn 2013/08/03 01:32:53, rsc wrote:\n> copyright\n\nDone.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode9\nsrc/pkg/crypto/cipher/gcm.go:9: // AEAD represents an authenticated encryption cipher mode.\nOn 2013/08/03 01:32:53, rsc wrote:\n> can you spell out the acronym in the description?\n> \n> // AEAD is a cipher mode providing authenticated encryption with associated\n> data.\n\nDone.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode20\nsrc/pkg/crypto/cipher/gcm.go:20: // additionalData and appends the result to out, returning the updated\nOn 2013/08/03 01:32:53, rsc wrote:\n> maybe change the var to just be named data, and then say\n> \n> \"authenticates the additional data\"\n\nDone.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode25\nsrc/pkg/crypto/cipher/gcm.go:25: Seal(out, nonce, plaintext, additionalData []byte) []byte\nOn 2013/08/03 01:32:53, rsc wrote:\n> s/out/dst/ to match other code\n> again for Open\n\nDone.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode31\nsrc/pkg/crypto/cipher/gcm.go:31: // match the value passed to Seal.\nOn 2013/08/03 01:32:53, rsc wrote:\n> Does the additionalData passed to Open have to match the additionalData passed\n> to Seal? I assume so, but perhaps it should be stated.\n\nDone.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode34\nsrc/pkg/crypto/cipher/gcm.go:34: Open(out, nonce, ciphertext, additionalData []byte) ([]byte, bool)\nOn 2013/08/03 01:32:53, rsc wrote:\n> Even if you do not want to give more than one bit of information, it would be\n> good to return an error instead of a bool here, just so that it is clearer when\n> printed. A global\n> \n> var errOpen = errors.New(\"cipher: message authentication failed\")\n> \n> or something like that is fine.\n\nDone.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode93\nsrc/pkg/crypto/cipher/gcm.go:93: func (gcm *gcm) NonceSize() int {\nOn 2013/08/03 01:32:53, rsc wrote:\n> func (*gcm) since you are not using the receiver\n\nDone.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm.go#newcode101\nsrc/pkg/crypto/cipher/gcm.go:101: func (gcm *gcm) Seal(out, nonce, plaintext, additionalData []byte) []byte {\nOn 2013/08/03 01:32:53, rsc wrote:\n> func (g *gcm)\n> to avoid hiding the type name (just a little confusing to read)\n> throughout\n\nDone.\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm_test.go\nFile src/pkg/crypto/cipher/gcm_test.go (right):\n\nhttps://codereview.appspot.com/12375043/diff/7001/src/pkg/crypto/cipher/gcm_test.go#newcode1\nsrc/pkg/crypto/cipher/gcm_test.go:1: package cipher_test\nOn 2013/08/03 01:32:53, rsc wrote:\n> copyright\n\nDone.",
			"disapproval": false,
			"date": "2013-08-05 15:07:40.626890",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but \n\nPlease instead add crypto/subtle to L3 and add an explicit dep for crypto/cipher on crypto/subtle (line 88 or so).",
			"disapproval": false,
			"date": "2013-08-05 17:32:53.770440",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Aug 5, 2013 at 1:32 PM,  <rsc@golang.org> wrote:\r\n> Please instead add crypto/subtle to L3 and add an explicit dep for\r\n> crypto/cipher on crypto/subtle (line 88 or so).\r\n\r\nDone, thanks.\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2013-08-05 18:31:42.115640",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=01d672e76b57 ***\n\ncrypto/cipher: add GCM mode.\n\nGCM is Galois Counter Mode, an authenticated encryption mode that is,\nnearly always, used with AES.\n\nR=rsc\nCC=golang-dev\nhttps://codereview.appspot.com/12375043",
			"disapproval": false,
			"date": "2013-08-05 18:32:06.029460",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 12375043: crypto/cipher: add GCM mode.",
	"created": "2013-08-02 19:39:55.860560",
	"patchsets": [
		1,
		2001,
		5001,
		7001,
		15001,
		19001,
		23001
	],
	"modified": "2013-08-05 18:32:07.965910",
	"closed": true,
	"issue": 12375043
}