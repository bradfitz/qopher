{
	"description": "runtime: fix memory leaks due to defers\r\nfn can clearly hold a closure in memory.\r\nargp/pc point into stack and so can hold\r\nin memory a block that was previously\r\na large stack serment.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-06-29 13:04:18.080870",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It should help with a somewhat common idiom:\nx, cleanup := foo()\ndefer cleanup()\nCurrently anything referenced by cleanup is not collected with high probability.",
			"disapproval": false,
			"date": "2013-06-29 13:05:31.520330",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "wow.\r\n\r\nOn Sat, Jun 29, 2013 at 11:05 PM,  <dvyukov@google.com> wrote:\r\n> It should help with a somewhat common idiom:\r\n> x, cleanup := foo()\r\n> defer cleanup()\r\n> Currently anything referenced by cleanup is not collected with high\r\n> probability.\r\n>\r\n>\r\n> https://codereview.appspot.com/10784043/\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-29 13:06:03.791870",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-01 21:35:50.574370",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=0f6938710930 ***\n\nruntime: fix memory leaks due to defers\nfn can clearly hold a closure in memory.\nargp/pc point into stack and so can hold\nin memory a block that was previously\na large stack serment.\n\nR=golang-dev, dave, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/10784043\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-07-01 21:36:12.317790",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=close",
			"disapproval": false,
			"date": "2013-07-20 21:19:32.564980",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 10784043: runtime: fix memory leaks due to defers",
	"created": "2013-06-29 12:59:17.023120",
	"patchsets": [
		1,
		3001,
		6001,
		9001
	],
	"modified": "2013-08-08 15:16:11.940240",
	"closed": true,
	"issue": 10784043
}