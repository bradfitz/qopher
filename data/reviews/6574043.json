{
	"description": "cmd/8g: do not take the address of string/slice for &s[i]\n\nA similar change was made in 6g recently.\n\nLEALs in cmd/go: 31440 before, 27867 after.\n\nbenchmark                 old ns/op    new ns/op    delta\nBenchmarkBinaryTree17    7065794000   6723617000   -4.84%\nBenchmarkFannkuch11      7767395000   7477945000   -3.73%\nBenchmarkGobDecode         34708140     34857820   +0.43%\nBenchmarkGobEncode         10998780     10960060   -0.35%\nBenchmarkGzip            1603630000   1471052000   -8.27%\nBenchmarkGunzip           242573900    240650400   -0.79%\nBenchmarkJSONEncode       120842200    117966100   -2.38%\nBenchmarkJSONDecode       247254900    249103100   +0.75%\nBenchmarkMandelbrot200     29237330     29241790   +0.02%\nBenchmarkParse              8111320      8096865   -0.18%\nBenchmarkRevcomp         2595780000   2694153000   +3.79%\nBenchmarkTemplate         276679600    264497000   -4.40%\n\nbenchmark                              old ns/op    new ns/op    delta\nBenchmarkAppendFloatDecimal                  429          416   -3.03%\nBenchmarkAppendFloat                         780          740   -5.13%\nBenchmarkAppendFloatExp                      746          700   -6.17%\nBenchmarkAppendFloatNegExp                   752          694   -7.71%\nBenchmarkAppendFloatBig                     1228         1108   -9.77%\nBenchmarkAppendFloat32Integer                457          416   -8.97%\nBenchmarkAppendFloat32ExactFraction          662          631   -4.68%\nBenchmarkAppendFloat32Point                  771          735   -4.67%\nBenchmarkAppendFloat32Exp                    722          672   -6.93%\nBenchmarkAppendFloat32NegExp                 724          659   -8.98%\nBenchmarkAppendFloat64Fixed1                 429          400   -6.76%\nBenchmarkAppendFloat64Fixed2                 463          442   -4.54%\n\nUpdate issue 1914.",
	"cc": [
		"golang-dev@googlegroups.com",
		"daniel.morsing@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The change makes 8g very similar to 6g. The preamble was changed to make cgenindex allocate the temporary itself, so that one is saved in case the index is already addressable.",
			"disapproval": false,
			"date": "2012-09-25 06:37:47.936040",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-25 06:32:22.782540",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-30 07:41:12.473490",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, but I have a limited understanding of codegen, so I'd wait for Russ.",
			"disapproval": false,
			"date": "2012-09-30 09:51:21.604330",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6574043/diff/7001/src/cmd/8g/cgen.c\nFile src/cmd/8g/cgen.c (right):\n\nhttps://codereview.appspot.com/6574043/diff/7001/src/cmd/8g/cgen.c#newcode464\nsrc/cmd/8g/cgen.c:464: cgenindex(Node *n, Node *res)\nPlease rename this to igenindex. The cgen functions write to the destination described by res - they don't edit the res Node itself. This is rewriting the res node itself, so it's more like igen now.",
			"disapproval": false,
			"date": "2012-10-01 21:11:20.408320",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=53a8e1ce580e ***\n\ncmd/8g: do not take the address of string/slice for &s[i]\n\nA similar change was made in 6g recently.\n\nLEALs in cmd/go: 31440 before, 27867 after.\n\nbenchmark                 old ns/op    new ns/op    delta\nBenchmarkBinaryTree17    7065794000   6723617000   -4.84%\nBenchmarkFannkuch11      7767395000   7477945000   -3.73%\nBenchmarkGobDecode         34708140     34857820   +0.43%\nBenchmarkGobEncode         10998780     10960060   -0.35%\nBenchmarkGzip            1603630000   1471052000   -8.27%\nBenchmarkGunzip           242573900    240650400   -0.79%\nBenchmarkJSONEncode       120842200    117966100   -2.38%\nBenchmarkJSONDecode       247254900    249103100   +0.75%\nBenchmarkMandelbrot200     29237330     29241790   +0.02%\nBenchmarkParse              8111320      8096865   -0.18%\nBenchmarkRevcomp         2595780000   2694153000   +3.79%\nBenchmarkTemplate         276679600    264497000   -4.40%\n\nbenchmark                              old ns/op    new ns/op    delta\nBenchmarkAppendFloatDecimal                  429          416   -3.03%\nBenchmarkAppendFloat                         780          740   -5.13%\nBenchmarkAppendFloatExp                      746          700   -6.17%\nBenchmarkAppendFloatNegExp                   752          694   -7.71%\nBenchmarkAppendFloatBig                     1228         1108   -9.77%\nBenchmarkAppendFloat32Integer                457          416   -8.97%\nBenchmarkAppendFloat32ExactFraction          662          631   -4.68%\nBenchmarkAppendFloat32Point                  771          735   -4.67%\nBenchmarkAppendFloat32Exp                    722          672   -6.93%\nBenchmarkAppendFloat32NegExp                 724          659   -8.98%\nBenchmarkAppendFloat64Fixed1                 429          400   -6.76%\nBenchmarkAppendFloat64Fixed2                 463          442   -4.54%\n\nUpdate issue 1914.\n\nR=golang-dev, daniel.morsing, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6574043\n\nhttp://codereview.appspot.com/6574043/diff/7001/src/cmd/8g/cgen.c\nFile src/cmd/8g/cgen.c (right):\n\nhttp://codereview.appspot.com/6574043/diff/7001/src/cmd/8g/cgen.c#newcode464\nsrc/cmd/8g/cgen.c:464: cgenindex(Node *n, Node *res)\nOn 2012/10/01 21:11:20, rsc wrote:\n> Please rename this to igenindex. The cgen functions write to the destination\n> described by res - they don't edit the res Node itself. This is rewriting the\n> res node itself, so it's more like igen now.\n> \n\nDone.",
			"disapproval": false,
			"date": "2012-10-02 06:19:32.091360",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6574043: cmd/8g: do not take the address of string/slice for &s[i]",
	"created": "2012-09-25 06:32:04.615230",
	"patchsets": [
		1,
		2001,
		1002,
		7001,
		13001
	],
	"modified": "2012-10-02 06:19:33.263370",
	"closed": true,
	"issue": 6574043
}