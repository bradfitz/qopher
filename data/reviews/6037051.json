{
	"description": "leveldb: define the internalKey type.",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6037051/diff/3001/leveldb/ikey.go\nFile leveldb/ikey.go (right):\n\nhttp://codereview.appspot.com/6037051/diff/3001/leveldb/ikey.go#newcode17\nleveldb/ikey.go:17: //   - 7 bytes for a uint64 sequence number, in little-endian format.\nuint56 then?\n\nhttp://codereview.appspot.com/6037051/diff/3001/leveldb/ikey.go#newcode28\nleveldb/ikey.go:28: func (k internalKey) valid() bool {\nI assume the other accessors are allowed to crash if !valid() ?\n\nhttp://codereview.appspot.com/6037051/diff/3001/leveldb/ikey_test.go\nFile leveldb/ikey_test.go (right):\n\nhttp://codereview.appspot.com/6037051/diff/3001/leveldb/ikey_test.go#newcode19\nleveldb/ikey_test.go:19: t.Errorf(\"got %q want %q\", got, want)\nukey = %q, want %q\n\nhttp://codereview.appspot.com/6037051/diff/3001/leveldb/ikey_test.go#newcode22\nleveldb/ikey_test.go:22: t.Errorf(\"got %d want %d\", got, want)\nkind = %d, want %d\n\nhttp://codereview.appspot.com/6037051/diff/3001/leveldb/ikey_test.go#newcode25\nleveldb/ikey_test.go:25: t.Errorf(\"got %d want %d\", got, want)\nseqNum = %d, want %d\n\nhttp://codereview.appspot.com/6037051/diff/3001/leveldb/ikey_test.go#newcode39\nleveldb/ikey_test.go:39: t.Errorf(\"%q is a valid key\", tc)\nI try to avoid tests failing with text like this, else it gives me pause: is it an error that it's valid, or should it not be valid?  \"..., want invalid\"\n\nhttp://codereview.appspot.com/6037051/diff/3001/leveldb/ikey_test.go#newcode80\nleveldb/ikey_test.go:80: for j := range keys {\nnice test.",
			"disapproval": false,
			"date": "2012-04-16 15:13:34.506848",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/leveldb-go",
			"disapproval": false,
			"date": "2012-04-16 12:47:34.744258",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/leveldb-go/source/detail?r=2e3bbdc9d21b ***\n\nleveldb: define the internalKey type.\n\nR=bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6037051",
			"disapproval": false,
			"date": "2012-04-16 23:14:47.542368",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6037051: leveldb: define the internalKey type.",
	"created": "2012-04-16 12:47:06.292648",
	"patchsets": [
		1,
		1002,
		3001,
		8001
	],
	"modified": "2012-04-16 23:14:50.862406",
	"closed": true,
	"issue": 6037051
}