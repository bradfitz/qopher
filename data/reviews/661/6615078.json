{
	"description": "os/signal: add Notify example",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-10-11 06:01:03.589700",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6615078/diff/2001/src/pkg/os/signal/example_test.go\nFile src/pkg/os/signal/example_test.go (right):\n\nhttp://codereview.appspot.com/6615078/diff/2001/src/pkg/os/signal/example_test.go#newcode11\nsrc/pkg/os/signal/example_test.go:11: c := make(chan os.Signal)\n... and explain why",
			"disapproval": false,
			"date": "2012-10-11 06:36:45.397340",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-11 06:02:12.658220",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6615078/diff/2001/src/pkg/os/signal/example_test.go\nFile src/pkg/os/signal/example_test.go (right):\n\nhttp://codereview.appspot.com/6615078/diff/2001/src/pkg/os/signal/example_test.go#newcode11\nsrc/pkg/os/signal/example_test.go:11: c := make(chan os.Signal)\nyou almost always want a buffered channel when using this in practice, so demonstrate that here: add \", 1\".",
			"disapproval": false,
			"date": "2012-10-11 06:33:42.774200",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/6615078/diff/2001/src/pkg/os/signal/example_test.go\nFile src/pkg/os/signal/example_test.go (right):\n\nhttps://codereview.appspot.com/6615078/diff/2001/src/pkg/os/signal/example_test.go#newcode11\nsrc/pkg/os/signal/example_test.go:11: c := make(chan os.Signal)\nOn 2012/10/11 06:33:42, dsymonds wrote:\n> you almost always want a buffered channel when using this in practice, so\n> demonstrate that here: add \", 1\".\n\nDone.\n\nhttps://codereview.appspot.com/6615078/diff/2001/src/pkg/os/signal/example_test.go#newcode11\nsrc/pkg/os/signal/example_test.go:11: c := make(chan os.Signal)\nOn 2012/10/11 06:36:45, r wrote:\n> ... and explain why\n\nDone.",
			"disapproval": false,
			"date": "2012-10-11 06:56:16.191240",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nbut wait for r for his word-fu.",
			"disapproval": false,
			"date": "2012-10-11 07:12:18.676400",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nis 'drop' the operative word here? what really happens?",
			"disapproval": false,
			"date": "2012-10-11 07:41:36.440430",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 11 October 2012 18:41,  <r@golang.org> wrote:\r\n> LGTM\r\n>\r\n> is 'drop' the operative word here? what really happens?\r\n\r\nThe signal handler in os/signal just does a non-blocking send to the\r\nchannel. s/dropping/missing/ ?\r\n",
			"disapproval": false,
			"date": "2012-10-11 22:31:49.387620",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Oct 12, 2012 at 9:31 AM, Andrew Gerrand <adg@golang.org> wrote:\r\n> On 11 October 2012 18:41,  <r@golang.org> wrote:\r\n>> LGTM\r\n>>\r\n>> is 'drop' the operative word here? what really happens?\r\n>\r\n> The signal handler in os/signal just does a non-blocking send to the\r\n> channel. s/dropping/missing/ ?\r\n\r\nOK\r\n",
			"disapproval": false,
			"date": "2012-10-11 23:18:26.235490",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=447b5d4b9ad7 ***\n\nos/signal: add Notify example\n\nR=golang-dev, dsymonds, r\nCC=golang-dev\nhttp://codereview.appspot.com/6615078",
			"disapproval": false,
			"date": "2012-10-11 23:22:19.925220",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 6615078: os/signal: add Notify example",
	"created": "2012-10-11 06:00:52.932140",
	"patchsets": [
		1,
		2001,
		4002,
		13001
	],
	"modified": "2012-10-11 23:22:21.903010",
	"closed": true,
	"issue": 6615078
}