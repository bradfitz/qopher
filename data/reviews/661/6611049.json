{
	"description": "cmd/gc: fix compiler crash during race instrumentation\nThe compiler is crashing on the following code:\n\ntype TypeID int\nfunc (t *TypeID) encodeType(x int) (tt TypeID, err error) {\n        switch x {\n        case 0:\n                return t.encodeType(x * x)\n        }\n        return 0, nil\n}\nThe pass marks \"return struct\" {tt TypeID, err error} as used,\nand this causes internal check failure.\nI've added the test to:\nhttps://codereview.appspot.com/6525052/diff/7020/src/pkg/runtime/race/regression_test.go",
	"cc": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "should we add a test to /test/fixedbugs/ for this?\n\ni guess we need to modify /test/run.go to support passing flags to gc.\n(or, if running on amd64, just blindly test each file twice, first w/o -b flag,\nsecond with)",
			"disapproval": false,
			"date": "2012-10-09 17:06:55.020630",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "dunno\r\nI am fine with having tests in https://codereview.appspot.**\r\ncom/6525052/diff/7020/src/pkg/**runtime/race/regression_test.**go<https://codereview.appspot.com/6525052/diff/7020/src/pkg/runtime/race/regression_test.go>\r\n\r\n\r\n\r\nOn Tue, Oct 9, 2012 at 9:06 PM, <minux.ma@gmail.com> wrote:\r\n\r\n> should we add a test to /test/fixedbugs/ for this?\r\n>\r\n> i guess we need to modify /test/run.go to support passing flags to gc.\r\n> (or, if running on amd64, just blindly test each file twice, first w/o\r\n> -b flag,\r\n> second with)\r\n>\r\n> https://codereview.appspot.**com/6611049/<https://codereview.appspot.com/6611049/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-09 17:12:13.516460",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-10-09 16:57:14.689710",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-10-10 13:46:33.235280",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=8209534dab87 ***\n\ncmd/gc: fix compiler crash during race instrumentation\nThe compiler is crashing on the following code:\n\ntype TypeID int\nfunc (t *TypeID) encodeType(x int) (tt TypeID, err error) {\n        switch x {\n        case 0:\n                return t.encodeType(x * x)\n        }\n        return 0, nil\n}\nThe pass marks \"return struct\" {tt TypeID, err error} as used,\nand this causes internal check failure.\nI've added the test to:\nhttps://codereview.appspot.com/6525052/diff/7020/src/pkg/runtime/race/regression_test.go\n\nR=golang-dev, minux.ma, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6611049",
			"disapproval": false,
			"date": "2012-10-10 14:09:34.576700",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6611049: cmd/gc: fix compiler crash during race instrumentation",
	"created": "2012-10-05 12:39:10.182740",
	"patchsets": [
		1,
		2001,
		4001,
		6001,
		7002,
		9003
	],
	"modified": "2012-10-10 14:09:36.779300",
	"closed": true,
	"issue": 6611049
}