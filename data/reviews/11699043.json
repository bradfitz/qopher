{
	"description": "all: be more idiomatic when documenting boolean return values.\nPhrases like \"returns whether or not the image is opaque\" could be\ndescribing what the function does (it always returns, regardless of\nthe opacity) or what it returns (a boolean indicating the opacity).\nEven when the \"or not\" is missing, the phrasing is bizarre.\n\nGo with \"reports whether\", which is still clunky but at least makes\nit clear we're talking about the return value.\n\nThese were edited by hand. A few were cleaned up in other ways.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-23 00:28:10.266750",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=977306015f5d ***\n\nall: be more idiomatic when documenting boolean return values.\nPhrases like \"returns whether or not the image is opaque\" could be\ndescribing what the function does (it always returns, regardless of\nthe opacity) or what it returns (a boolean indicating the opacity).\nEven when the \"or not\" is missing, the phrasing is bizarre.\n\nGo with \"reports whether\", which is still clunky but at least makes\nit clear we're talking about the return value.\n\nThese were edited by hand. A few were cleaned up in other ways.\n\nR=golang-dev, dsymonds\nCC=golang-dev\nhttps://codereview.appspot.com/11699043",
			"disapproval": false,
			"date": "2013-07-23 01:59:57.144460",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM with some of the redundancy trimmed.\n\nhttps://codereview.appspot.com/11699043/diff/1/src/pkg/crypto/ecdsa/ecdsa.go\nFile src/pkg/crypto/ecdsa/ecdsa.go (right):\n\nhttps://codereview.appspot.com/11699043/diff/1/src/pkg/crypto/ecdsa/ecdsa.go#newcode127\nsrc/pkg/crypto/ecdsa/ecdsa.go:127: // return value records whether the signature is valid.\nmaybe just make the second sentence \"It returns whether ...\"?\n\nhttps://codereview.appspot.com/11699043/diff/1/src/pkg/image/image.go\nFile src/pkg/image/image.go (right):\n\nhttps://codereview.appspot.com/11699043/diff/1/src/pkg/image/image.go#newcode129\nsrc/pkg/image/image.go:129: // Opaque scans the entire image and returns a boolean indicating whether it is fully opaque.\ncalling it out as a boolean seems unnecessary. that's inherent in the \"whether\".\n\n// Opaque scans the entire image and returns whether it is fully opaque.\n\n(same below)\n\nhttps://codereview.appspot.com/11699043/diff/1/src/pkg/os/error.go\nFile src/pkg/os/error.go (right):\n\nhttps://codereview.appspot.com/11699043/diff/1/src/pkg/os/error.go#newcode46\nsrc/pkg/os/error.go:46: // IsExist returns a boolean indicating whether the error is known to report\nwhy insert these words? they are redundant.\n\nhttps://codereview.appspot.com/11699043/diff/1/src/pkg/regexp/regexp.go\nFile src/pkg/regexp/regexp.go (right):\n\nhttps://codereview.appspot.com/11699043/diff/1/src/pkg/regexp/regexp.go#newcode379\nsrc/pkg/regexp/regexp.go:379: // RuneReader.  The return value is a boolean: true for match, false for no\nperhaps ditch the redundant second sentences for these docs too?\n\nhttps://codereview.appspot.com/11699043/diff/1/src/pkg/sort/sort.go\nFile src/pkg/sort/sort.go (right):\n\nhttps://codereview.appspot.com/11699043/diff/1/src/pkg/sort/sort.go#newcode15\nsrc/pkg/sort/sort.go:15: // Less returns a boolean indicating whether the element with\nredundant",
			"disapproval": false,
			"date": "2013-07-23 00:42:21.503480",
			"approval": true
		},
		{
			"sender": "andrew.ekstedt@gmail.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11699043/diff/6002/src/pkg/go/ast/ast.go\nFile src/pkg/go/ast/ast.go (right):\n\nhttps://codereview.appspot.com/11699043/diff/6002/src/pkg/go/ast/ast.go#newcode523\nsrc/pkg/go/ast/ast.go:523: // (that is, whether it begins with an upper-case letter).\nMake these edits below, as well?\n\nhttps://codereview.appspot.com/11699043/diff/6002/src/pkg/html/template/css.go\nFile src/pkg/html/template/css.go (right):\n\nhttps://codereview.appspot.com/11699043/diff/6002/src/pkg/html/template/css.go#newcode102\nsrc/pkg/html/template/css.go:102: // isHex reports reports whether the given character is a hex digit.\ns/reports reports/reports/",
			"disapproval": false,
			"date": "2013-07-23 18:10:03.831660",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 11699043: all: be more idiomatic when documenting boolean return ...",
	"created": "2013-07-23 00:27:42.804340",
	"patchsets": [
		1,
		6002
	],
	"modified": "2013-07-23 18:10:04.245180",
	"closed": true,
	"issue": 11699043
}