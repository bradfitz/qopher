{
	"description": "go.crypto/ssh: Add support for ECDSA keys and certs.",
	"cc": [
		"agl@golang.org",
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jmpittman@google.com",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the quick response.  I think I covered most everything with the last two updates to the CL.  I left the Authorized Keys stuff alone (for now) for the parsing (where it clearly indicates not supporting beyond ssh-rsa and ssh-dss).  I think that could be saved for a later CL.\n\nhttps://codereview.appspot.com/6873060/diff/3004/ssh/certs.go\nFile ssh/certs.go (right):\n\nhttps://codereview.appspot.com/6873060/diff/3004/ssh/certs.go#newcode8\nssh/certs.go:8: package ssh\nOn 2012/12/11 15:32:16, agl1 wrote:\n> I don't think the References comment should live above the package line.\n\nUnless you feel it not necessary, I moved it up so that it would show up in package documentation via godoc.  Godoc seems to create a nice little box for references, but only when they appear above the package line.  An example is http://golang.org/pkg/archive/tar/.\n\nAlthough, after double checking, it is not showing up when I run a local copy of godoc.  It may be that I would have to put the reference comment in another file.  I will move it back for now.",
			"disapproval": false,
			"date": "2012-12-11 15:52:07.535070",
			"approval": false
		},
		{
			"sender": "jmpittman@google.com",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-12-11 01:12:00.744860",
			"approval": false
		},
		{
			"sender": "jmpittman@google.com",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-11 01:16:03.134260",
			"approval": false
		},
		{
			"sender": "jmpittman@google.com",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-11 14:33:24.006850",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry I haven't contributed much in the way of reviewing ssh patches,\r\nthis is very poor form on my part, I'll have some time after work\r\ntoday to review.\r\n\r\nOn Wed, Dec 12, 2012 at 2:52 AM,  <jmpittman@google.com> wrote:\r\n> Thanks for the quick response.  I think I covered most everything with\r\n> the last two updates to the CL.  I left the Authorized Keys stuff alone\r\n> (for now) for the parsing (where it clearly indicates not supporting\r\n> beyond ssh-rsa and ssh-dss).  I think that could be saved for a later\r\n> CL.\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.com/6873060/diff/3004/ssh/certs.go\r\n> File ssh/certs.go (right):\r\n>\r\n> https://codereview.appspot.com/6873060/diff/3004/ssh/certs.go#newcode8\r\n> ssh/certs.go:8: package ssh\r\n> On 2012/12/11 15:32:16, agl1 wrote:\r\n>>\r\n>> I don't think the References comment should live above the package\r\n>\r\n> line.\r\n>\r\n> Unless you feel it not necessary, I moved it up so that it would show up\r\n> in package documentation via godoc.  Godoc seems to create a nice little\r\n> box for references, but only when they appear above the package line.\r\n> An example is http://golang.org/pkg/archive/tar/.\r\n>\r\n> Although, after double checking, it is not showing up when I run a local\r\n> copy of godoc.  It may be that I would have to put the reference comment\r\n> in another file.  I will move it back for now.\r\n>\r\n> https://codereview.appspot.com/6873060/\r\n",
			"disapproval": false,
			"date": "2012-12-11 21:52:00.798170",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. I'll wait a bit to see whether dfc has anything to note.\n\nIf I forget about it in 48 hours, please ping :)\n\nhttps://codereview.appspot.com/6873060/diff/3004/ssh/certs.go\nFile ssh/certs.go (right):\n\nhttps://codereview.appspot.com/6873060/diff/3004/ssh/certs.go#newcode8\nssh/certs.go:8: package ssh\nI don't think the References comment should live above the package line.",
			"disapproval": false,
			"date": "2012-12-11 15:32:16.011560",
			"approval": true
		},
		{
			"sender": "jmpittman@google.com",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-11 15:52:02.027470",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 14 Dec 2012 05:38, <jmpittman@google.com> wrote:\r\n>\r\n>\r\n> https://codereview.appspot.com/6873060/diff/12001/ssh/certs.go\r\n> File ssh/certs.go (right):\r\n>\r\n> https://codereview.appspot.com/6873060/diff/12001/ssh/certs.go#newcode47\r\n> ssh/certs.go:47: // and ecdsa-sha2-nistp521-cert-v01@openssh.com.\r\n> On 2012/12/13 11:16:03, dfc wrote:\r\n>>\r\n>> Suggestion: Maybe the constants above should be exported, then we can\r\n>\r\n> move this\r\n>>\r\n>> part of the comment to describe those directly.\r\n>\r\n>\r\n> Will do in a follow up CL.\r\n>\r\n>\r\n> https://codereview.appspot.com/6873060/diff/12001/ssh/keys.go\r\n> File ssh/keys.go (right):\r\n>\r\n> https://codereview.appspot.com/6873060/diff/12001/ssh/keys.go#newcode124\r\n> ssh/keys.go:124: return key, in, ok\r\n> On 2012/12/13 11:16:03, dfc wrote:\r\n>>\r\n>> /s/return.*/return/\r\n>\r\n>\r\n> Just return will only return out, rest, and ok which will be nil, nil,\r\n> true.  Here I am following the convention we have with the other parse\r\n> functions and do an explicit return of key, in, ok so they should have\r\n> some value beyond nil.\r\n\r\nMy bad, I'm trying to learn to not hate on named return vars.\r\n\r\n>\r\n>\r\n> https://codereview.appspot.com/6873060/diff/12001/ssh/keys.go#newcode347\r\n> ssh/keys.go:347: panic(\"unexpected key type\")\r\n> On 2012/12/13 11:16:03, dfc wrote:\r\n>>\r\n>> there are a lot of panics that all do the same thing. Is a label\r\n>\r\n> useful here ?\r\n>\r\n> Yeah, I agree. It does seem a bit excessive considering it just says the\r\n> same thing.  A label would be good.  We could also change the message\r\n> for each of these to give something more useful with respect to the\r\n> context at hand.  For example...\r\n>\r\n> panic(\"unexpected bit size for *ecdsa.PublicKey\")\r\n> panic(\"unexpected public key type for ssh certificate\")\r\n>\r\n> Or we could change this function to return an error along with the\r\n> []byte.\r\n>\r\n> Which do you think works and reads best?  I am fine with doing any of\r\n> those.\r\n\r\nWhat is there is fine, let's do a cleanup in the next CL. Would you like me\r\nto submit this ?\r\n\r\n>\r\n> https://codereview.appspot.com/6873060/\r\n",
			"disapproval": false,
			"date": "2012-12-13 18:45:11.808790",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, very nice, thank you. A few minor comments if you feel like addressing them in this CL.\n\nhttps://codereview.appspot.com/6873060/diff/12001/ssh/certs.go\nFile ssh/certs.go (right):\n\nhttps://codereview.appspot.com/6873060/diff/12001/ssh/certs.go#newcode47\nssh/certs.go:47: // and ecdsa-sha2-nistp521-cert-v01@openssh.com.\nSuggestion: Maybe the constants above should be exported, then we can move this part of the comment to describe those directly.\n\nhttps://codereview.appspot.com/6873060/diff/12001/ssh/keys.go\nFile ssh/keys.go (right):\n\nhttps://codereview.appspot.com/6873060/diff/12001/ssh/keys.go#newcode124\nssh/keys.go:124: return key, in, ok\n/s/return.*/return/\n\nhttps://codereview.appspot.com/6873060/diff/12001/ssh/keys.go#newcode347\nssh/keys.go:347: panic(\"unexpected key type\")\nthere are a lot of panics that all do the same thing. Is a label useful here ?",
			"disapproval": false,
			"date": "2012-12-13 11:16:03.359960",
			"approval": true
		},
		{
			"sender": "jmpittman@google.com",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6873060/diff/12001/ssh/certs.go\nFile ssh/certs.go (right):\n\nhttps://codereview.appspot.com/6873060/diff/12001/ssh/certs.go#newcode47\nssh/certs.go:47: // and ecdsa-sha2-nistp521-cert-v01@openssh.com.\nOn 2012/12/13 11:16:03, dfc wrote:\n> Suggestion: Maybe the constants above should be exported, then we can move this\n> part of the comment to describe those directly.\n\nWill do in a follow up CL.\n\nhttps://codereview.appspot.com/6873060/diff/12001/ssh/keys.go\nFile ssh/keys.go (right):\n\nhttps://codereview.appspot.com/6873060/diff/12001/ssh/keys.go#newcode124\nssh/keys.go:124: return key, in, ok\nOn 2012/12/13 11:16:03, dfc wrote:\n> /s/return.*/return/\n\nJust return will only return out, rest, and ok which will be nil, nil, true.  Here I am following the convention we have with the other parse functions and do an explicit return of key, in, ok so they should have some value beyond nil.\n\nhttps://codereview.appspot.com/6873060/diff/12001/ssh/keys.go#newcode347\nssh/keys.go:347: panic(\"unexpected key type\")\nOn 2012/12/13 11:16:03, dfc wrote:\n> there are a lot of panics that all do the same thing. Is a label useful here ?\n\nYeah, I agree. It does seem a bit excessive considering it just says the same thing.  A label would be good.  We could also change the message for each of these to give something more useful with respect to the context at hand.  For example...\n\npanic(\"unexpected bit size for *ecdsa.PublicKey\")\npanic(\"unexpected public key type for ssh certificate\")\n\nOr we could change this function to return an error along with the []byte.\n\nWhich do you think works and reads best?  I am fine with doing any of those.",
			"disapproval": false,
			"date": "2012-12-13 18:38:49.643930",
			"approval": false
		},
		{
			"sender": "jmpittman@google.com",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/12/13 18:45:11, dfc wrote:\n> On 14 Dec 2012 05:38, <mailto:jmpittman@google.com> wrote:\n> >\n> >\n> > https://codereview.appspot.com/6873060/diff/12001/ssh/certs.go\n> > File ssh/certs.go (right):\n> >\n> > https://codereview.appspot.com/6873060/diff/12001/ssh/certs.go#newcode47\n> > ssh/certs.go:47: // and mailto:ecdsa-sha2-nistp521-cert-v01@openssh.com.\n> > On 2012/12/13 11:16:03, dfc wrote:\n> >>\n> >> Suggestion: Maybe the constants above should be exported, then we can\n> >\n> > move this\n> >>\n> >> part of the comment to describe those directly.\n> >\n> >\n> > Will do in a follow up CL.\n> >\n> >\n> > https://codereview.appspot.com/6873060/diff/12001/ssh/keys.go\n> > File ssh/keys.go (right):\n> >\n> > https://codereview.appspot.com/6873060/diff/12001/ssh/keys.go#newcode124\n> > ssh/keys.go:124: return key, in, ok\n> > On 2012/12/13 11:16:03, dfc wrote:\n> >>\n> >> /s/return.*/return/\n> >\n> >\n> > Just return will only return out, rest, and ok which will be nil, nil,\n> > true.  Here I am following the convention we have with the other parse\n> > functions and do an explicit return of key, in, ok so they should have\n> > some value beyond nil.\n> \n> My bad, I'm trying to learn to not hate on named return vars.\n> \n> >\n> >\n> > https://codereview.appspot.com/6873060/diff/12001/ssh/keys.go#newcode347\n> > ssh/keys.go:347: panic(\"unexpected key type\")\n> > On 2012/12/13 11:16:03, dfc wrote:\n> >>\n> >> there are a lot of panics that all do the same thing. Is a label\n> >\n> > useful here ?\n> >\n> > Yeah, I agree. It does seem a bit excessive considering it just says the\n> > same thing.  A label would be good.  We could also change the message\n> > for each of these to give something more useful with respect to the\n> > context at hand.  For example...\n> >\n> > panic(\"unexpected bit size for *ecdsa.PublicKey\")\n> > panic(\"unexpected public key type for ssh certificate\")\n> >\n> > Or we could change this function to return an error along with the\n> > []byte.\n> >\n> > Which do you think works and reads best?  I am fine with doing any of\n> > those.\n> \n> What is there is fine, let's do a cleanup in the next CL. Would you like me\n> to submit this ?\n> \n> >\n> > https://codereview.appspot.com/6873060/\n\nPlease.  Thank you!",
			"disapproval": false,
			"date": "2012-12-13 18:46:23.347360",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=a5fe000a4ea3&repo=crypto ***\n\ngo.crypto/ssh: Add support for ECDSA keys and certs.\n\nR=agl, dave\nCC=golang-dev\nhttps://codereview.appspot.com/6873060\n\nCommitter: Dave Cheney <dave@cheney.net>",
			"disapproval": false,
			"date": "2012-12-13 18:52:35.606190",
			"approval": false
		},
		{
			"sender": "jmpittman@google.com",
			"recipients": [
				"jmpittman@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-12-13 21:56:44.126380",
			"approval": false
		}
	],
	"owner_email": "jmpittman@google.com",
	"private": false,
	"base_url": "",
	"owner": "jmpittman",
	"subject": "code review 6873060: go.crypto/ssh: Add support for ECDSA keys and certs.",
	"created": "2012-12-11 01:09:31.220430",
	"patchsets": [
		1,
		1002,
		5001,
		3004,
		12001
	],
	"modified": "2012-12-13 21:56:45.092750",
	"closed": true,
	"issue": 6873060
}