{
	"description": "graphics: add blur test",
	"cc": [
		"nigeltao@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-22 00:40:03.846212",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://crawshaw%40google.com@code.google.com/p/graphics-go/",
			"disapproval": false,
			"date": "2011-09-21 01:24:57.180051",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as 7617f09a70e1 ***\n\ngraphics: add blur test\n\nR=nigeltao, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5095044",
			"disapproval": false,
			"date": "2011-09-22 03:33:45.966694",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.\n\nLovely.",
			"disapproval": false,
			"date": "2011-09-22 02:00:49.245928",
			"approval": true
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "The image has survived as fair use on wikipedia due to its historical significance as a standard test image:\n\nhttp://en.wikipedia.org/wiki/File:Lenna.png\n\nIANAL either, and if asked to remove it I will. But for now the photo I just took of the gopher is inferior (and human faces make much better test images).\n\nhttp://codereview.appspot.com/5095044/diff/9001/graphics/blur_test.go\nFile graphics/blur_test.go (right):\n\nhttp://codereview.appspot.com/5095044/diff/9001/graphics/blur_test.go#newcode11\ngraphics/blur_test.go:11: _ \"image/png\"\nOn 2011/09/21 06:41:42, nigeltao wrote:\n> I like to keep renamed imports in a separate section. Thus:\n> ----\n> import (\n>         \"bytes\"\n>         \"fmt\"\n>         \"image\"\n>         \"os\"\n>         \"testing\"\n> \n>         \"graphics-go.googlecode.com/hg/graphics\"\n> \n>         _ \"image/png\"\n> )\n> ----\n\nDone.\n\nhttp://codereview.appspot.com/5095044/diff/9001/graphics/blur_test.go#newcode229\ngraphics/blur_test.go:229: for y := 0; y < width; y++ {\nOn 2011/09/21 06:40:27, nigeltao wrote:\n> s/width/height/, and vice versa on the next line.\n> \n> But also, don't assume that your iteration starts at zero. Instead:\n> b := dst.Bounds()\n> for y := b.Min.Y; y < b.Max.Y; y++ {\n>   for x := b.Min.X; x < b.Max.X; x++ {\n>     c0 := dst.At(x, y)\n>     c1 := cmp.At(x, y)\n>     if !withinTolerance(c0, c1, 0) {\n>       t.Errorf(\"etc\", x, y, c0, c1)\n>       return\n>     }\n>   }\n> }\n\nDone. And below. Zero-based images are a hard habit to break.",
			"disapproval": false,
			"date": "2011-09-21 13:35:35.627026",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.\n\nIANAL, but I do not know if there are any copyright implications for including the Lenna image in your code repository. It may be better to use an image which you created yourself, such as a personal photo.\n\nhttp://codereview.appspot.com/5095044/diff/9001/graphics/blur_test.go\nFile graphics/blur_test.go (right):\n\nhttp://codereview.appspot.com/5095044/diff/9001/graphics/blur_test.go#newcode229\ngraphics/blur_test.go:229: for y := 0; y < width; y++ {\ns/width/height/, and vice versa on the next line.\n\nBut also, don't assume that your iteration starts at zero. Instead:\nb := dst.Bounds()\nfor y := b.Min.Y; y < b.Max.Y; y++ {\n  for x := b.Min.X; x < b.Max.X; x++ {\n    c0 := dst.At(x, y)\n    c1 := cmp.At(x, y)\n    if !withinTolerance(c0, c1, 0) {\n      t.Errorf(\"etc\", x, y, c0, c1)\n      return\n    }\n  }\n}",
			"disapproval": false,
			"date": "2011-09-21 06:40:27.512793",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.\n\nhttp://codereview.appspot.com/5095044/diff/9001/graphics/blur_test.go\nFile graphics/blur_test.go (right):\n\nhttp://codereview.appspot.com/5095044/diff/9001/graphics/blur_test.go#newcode11\ngraphics/blur_test.go:11: _ \"image/png\"\nI like to keep renamed imports in a separate section. Thus:\n----\nimport (\n        \"bytes\"\n        \"fmt\"\n        \"image\"\n        \"os\"\n        \"testing\"\n\n        \"graphics-go.googlecode.com/hg/graphics\"\n\n        _ \"image/png\"\n)\n----",
			"disapproval": false,
			"date": "2011-09-21 06:41:42.670796",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Let's find an image that is actually unencumbered\ninstead of one that is merely presumed unencumbered.\nNigel has some images that might work.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-09-21 13:39:49.973744",
			"approval": false
		}
	],
	"owner_email": "crawshaw@google.com",
	"private": false,
	"base_url": "",
	"owner": "crawshaw1",
	"subject": "code review 5095044: graphics: add blur test",
	"created": "2011-09-21 01:21:17.243658",
	"patchsets": [
		1,
		2001,
		9001,
		14002,
		14004,
		19001,
		19002,
		16002,
		8003
	],
	"modified": "2011-09-22 03:33:47.003421",
	"closed": true,
	"issue": 5095044
}