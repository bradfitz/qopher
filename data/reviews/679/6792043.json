{
	"description": "cmd/ld: portability fixes\nfix code that implicitly assumes little-endian machines.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"rsc@golang.org",
		"alex.brainman@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-20 19:39:21.042790",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Were you cross-compiling Windows binaries from ARM?\r\n\r\nOn Wed, Mar 20, 2013 at 12:39 PM, <minux.ma@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> cmd/ld: portability fixes\r\n> fix code that implicitly assumes little-endian machines.\r\n>\r\n> Please review this at https://codereview.appspot.**com/6792043/<https://codereview.appspot.com/6792043/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/ld/ldpe.c\r\n>\r\n>\r\n> Index: src/cmd/ld/ldpe.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/ld/ldpe.c\r\n> +++ b/src/cmd/ld/ldpe.c\r\n> @@ -135,7 +135,8 @@\r\n>  {\r\n>         char *name;\r\n>         int32 base;\r\n> -       int i, j, l, numaux;\r\n> +       uint32 l;\r\n> +       int i, j, numaux;\r\n>         PeObj *obj;\r\n>         PeSect *sect, *rsect;\r\n>         IMAGE_SECTION_HEADER sh;\r\n> @@ -170,11 +171,12 @@\r\n>                 // TODO return error if found .cormeta\r\n>         }\r\n>         // load string table\r\n> -       Bseek(f, base+obj->fh.**PointerToSymbolTable+18*obj->**fh.NumberOfSymbols,\r\n> 0);\r\n> -       if(Bread(f, &l, sizeof l) != sizeof l)\r\n> +       Bseek(f, base+obj->fh.**PointerToSymbolTable+sizeof(**\r\n> symbuf)*obj->fh.**NumberOfSymbols, 0);\r\n> +       if(Bread(f, symbuf, 4) != 4)\r\n>                 goto bad;\r\n> +       l = le32(symbuf);\r\n>         obj->snames = mal(l);\r\n> -       Bseek(f, base+obj->fh.**PointerToSymbolTable+18*obj->**fh.NumberOfSymbols,\r\n> 0);\r\n> +       Bseek(f, base+obj->fh.**PointerToSymbolTable+sizeof(**\r\n> symbuf)*obj->fh.**NumberOfSymbols, 0);\r\n>         if(Bread(f, obj->snames, l) != l)\r\n>                 goto bad;\r\n>         // read symbols\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-20 19:40:48.799330",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Mar 21, 2013 at 3:40 AM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> Were you cross-compiling Windows binaries from ARM?\r\nno, i just spotted that unportable code while fixing unrelated bugs\r\nlong time ago...\r\n",
			"disapproval": false,
			"date": "2013-03-20 19:45:16.597310",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nARM is little-endian too. You'd have to be cross-compiling from SPARC or\r\nPowerPC.\r\n",
			"disapproval": false,
			"date": "2013-03-20 20:51:39.813660",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6792043/diff/13001/src/cmd/ld/ldpe.c\nFile src/cmd/ld/ldpe.c (right):\n\nhttps://codereview.appspot.com/6792043/diff/13001/src/cmd/ld/ldpe.c#newcode175\nsrc/cmd/ld/ldpe.c:175: if(Bread(f, symbuf, 4) != 4)\nIf you are trying to make it less confusing, then read whole record:\nif(Bread(f, symbuf, sizeof(symbuf)) != sizeof(symbuf))\nbut, feel free to ignore my suggestion.",
			"disapproval": false,
			"date": "2013-03-21 02:34:16.306770",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thursday, March 21, 2013, wrote:\r\n\r\n> https://codereview.appspot.**com/6792043/diff/13001/src/**\r\n> cmd/ld/ldpe.c#newcode175<https://codereview.appspot.com/6792043/diff/13001/src/cmd/ld/ldpe.c#newcode175>\r\n> src/cmd/ld/ldpe.c:175: if(Bread(f, symbuf, 4) != 4)\r\n> If you are trying to make it less confusing, then read whole record:\r\n> if(Bread(f, symbuf, sizeof(symbuf)) != sizeof(symbuf))\r\n> but, feel free to ignore my suggestion.\r\n>\r\nthe code just need to read a 32-bit little-endian number, so\r\ni reused symbuf here. should i use a new char[4] buffer here?\r\n",
			"disapproval": false,
			"date": "2013-03-21 08:02:16.429420",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It is fine the way it is. Please, go ahead and submit. Thank you.\n\nAlex",
			"disapproval": false,
			"date": "2013-03-21 09:17:50.890910",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e7da6cc076b2 ***\n\ncmd/ld: portability fixes\nfix code that implicitly assumes little-endian machines.\n\nR=golang-dev, bradfitz, rsc, alex.brainman\nCC=golang-dev\nhttps://codereview.appspot.com/6792043",
			"disapproval": false,
			"date": "2013-03-21 20:01:08.239900",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6792043: cmd/ld: portability fixes",
	"created": "2012-10-26 14:17:27.696110",
	"patchsets": [
		1,
		3,
		4001,
		13001,
		23001,
		26001
	],
	"modified": "2013-03-21 20:01:13.375480",
	"closed": true,
	"issue": 6792043
}