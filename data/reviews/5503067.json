{
	"description": "path/filepath: Dir\n\nThere was Base but not Dir, so fill in the gap.",
	"cc": [
		"n13m3y3r@gmail.com",
		"r@google.com",
		"rsc@golang.org",
		"gustavo@niemeyer.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-22 18:17:14.399534",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please add a test for /foo too.\n",
			"disapproval": false,
			"date": "2011-12-22 19:26:03.759623",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"r@google.com",
				"rsc@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nbarring any good arguments that might arise",
			"disapproval": false,
			"date": "2011-12-22 19:51:51.477290",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"r@google.com",
				"rsc@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello n13m3y3r@gmail.com, r@google.com, rsc@golang.org, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-22 20:58:37.186755",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "New attempt, different approach, better results, same idea.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-12-22 20:59:24.625947",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Besides being Base's complement, makes manipulation slightly simpler in some cases by enabling calls like f(filepath.Dir(path)).\n\nShould the path package receive the counterpart too?",
			"disapproval": false,
			"date": "2011-12-22 18:21:01.588210",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"r@google.com",
				"rsc@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, n13m3y3r@gmail.com, r@google.com, rsc@golang.org, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-22 19:37:19.335556",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I would prefer not to touch Split.\n> It has the very nice property that\n> \u00a0 dir, file := path.Split(name)\n> \u00a0 dir+file == name!\n\nIt's an interesting property, but it doesn't seem very useful in\npractice, and probably not worth the distinction from Dir.\n\nNote some curious differences, if I understand Dir (haven't run it):\n\n- Case 1:\n\n    dir1, _ := filepath.Split(\"/a/b/\")\n    dir2, _ := filepath.Split(dir1)\n    println(dir2) // \"/a/b/\"\n\n    dir1 := filepath.Dir(\"/a/b/\")\n    dir2 := filepath.Dir(dir1)\n    println(dir1) // \"/a\n\n- Case 2 (this looks like a bug in Split):\n\n    dir1, _ := filepath.Split(\".\")\n    println(dir1) // \"\"\n\n    dir1 := filepath.Dir(\".\")\n    println(dir1) // \".\"\n\n\n- Case 3 (this looks like a bug in Dir):\n\n    dir1, _ := filepath.Split(\"a\")\n    println(dir1) // \"\"\n\n    dir1 := filepath.Dir(\"a\")\n    println(dir1) // \"a\"\n\nI really wouldn't like to have to remember what I'm really doing every\ntime I touch either of them.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2011-12-22 20:05:59.878489",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I would prefer not to touch Split.\nIt has the very nice property that\n   dir, file := path.Split(name)\n   dir+file == name!\n\nI don't know whether we should keep\nBase (and now Dir) different from Split\nor make them wrappers around Split\nthat select one or the other result.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-22 19:38:25.600425",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Dec 22, 2011, at 11:25 AM, Gustavo Niemeyer wrote:\n\n>> this was how the whole thing started, with someone complaining about the trailing slash. i can't make everyone happy, it seems. at least the behavior is documented.\n>> \n>> what do you want? i'll do what you want. it's just a +1 on the string to put it back, but it's much clunkier to remove.\n> \n> My vote is to either:\n> \n> 1) Remove the slash from both Split and Dir (behavior seems\n> preferable, but incompatible if people are blindly assuming the slash)\n> 2) Keep the slash on both\n> \n> People will probably use Split and Dir interchangeably, and having\n> them with differing outcomes seems error prone.\n\nIf Split is going to change, that should happen in a separate CL. I might try that as an experiment and see if the world salutes.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-12-22 19:38:40.890464",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"r@google.com",
				"rsc@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, n13m3y3r@gmail.com, r@google.com, rsc@golang.org, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-22 19:41:14.424185",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"r@google.com",
				"rsc@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nPlease copy same into path.\nI am certain this is wrong for Windows\nbut not sure how to test `c:\\foo` -> `c:\\` only\non Windows.",
			"disapproval": false,
			"date": "2011-12-22 21:37:48.348296",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"r@google.com",
				"rsc@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f13664d9df19 ***\n\npath/filepath: Dir\n\nThere was Base but not Dir, so fill in the gap.\n\nR=n13m3y3r, r, rsc, gustavo\nCC=golang-dev\nhttp://codereview.appspot.com/5503067",
			"disapproval": false,
			"date": "2011-12-22 21:59:29.597835",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5503067/diff/1/src/pkg/path/filepath/path_test.go\nFile src/pkg/path/filepath/path_test.go (right):\n\nhttp://codereview.appspot.com/5503067/diff/1/src/pkg/path/filepath/path_test.go#newcode442\nsrc/pkg/path/filepath/path_test.go:442: {\"abc/def\", \"abc\"},\nHmm.. I do wonder about this case, on a second look. Should this have a trailing slash, to match Split's behavior? It may be slightly surprising that the result of Split(path) and Dir(path) yield different dir values.",
			"disapproval": false,
			"date": "2011-12-22 18:27:23.960201",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Dec 22, 2011, at 11:38 AM, Russ Cox wrote:\n\n> I would prefer not to touch Split.\n> It has the very nice property that\n>   dir, file := path.Split(name)\n>   dir+file == name!\n> \n> I don't know whether we should keep\n> Base (and now Dir) different from Split\n> or make them wrappers around Split\n> that select one or the other result.\n\nI am happy to leave split as it is and say why.\nI am also happy to have Dir drop the trailing slash, since that's almost always what you want, and it's much easier code-wise to add it back than to take it off.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-12-22 19:40:36.623276",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Dec 22, 2011 at 15:05, Gustavo Niemeyer <gustavo@niemeyer.net> wrote:\n> It's an interesting property, but it doesn't seem very useful in\n> practice, and probably not worth the distinction from Dir.\n\nNot changing split.  It's the most useful of the bunch.\n",
			"disapproval": false,
			"date": "2011-12-22 20:10:57.153579",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Dec 22, 2011, at 1:37 PM, rsc@golang.org wrote:\n\n> LGTM\n> \n> Please copy same into path.\n> I am certain this is wrong for Windows\n> but not sure how to test `c:\\foo` -> `c:\\` only\n> on Windows.\n\nif this is where we're going, i'll do path in a separate CL. is this where we're going?\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2011-12-22 21:43:44.380075",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Dec 22, 2011 at 16:43, Rob 'Commander' Pike <r@google.com> wrote:\n> if this is where we're going, i'll do path in a separate CL. is this where we're going?\n\ni think it's fine.\n\ni think that you can recognize a root if the\nlast separator is also the first separator\nand IsAbs returns true.  that definition\nhandles / and c:\\.\n\nruss\n",
			"disapproval": false,
			"date": "2011-12-22 21:50:23.049171",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Dec 22, 2011, at 10:27 AM, n13m3y3r@gmail.com wrote:\n\n> \n> http://codereview.appspot.com/5503067/diff/1/src/pkg/path/filepath/path_test.go\n> File src/pkg/path/filepath/path_test.go (right):\n> \n> http://codereview.appspot.com/5503067/diff/1/src/pkg/path/filepath/path_test.go#newcode442\n> src/pkg/path/filepath/path_test.go:442: {\"abc/def\", \"abc\"},\n> Hmm.. I do wonder about this case, on a second look. Should this have a\n> trailing slash, to match Split's behavior? It may be slightly surprising\n> that the result of Split(path) and Dir(path) yield different dir values.\n\nthis was how the whole thing started, with someone complaining about the trailing slash. i can't make everyone happy, it seems. at least the behavior is documented.\n\nwhat do you want? i'll do what you want. it's just a +1 on the string to put it back, but it's much clunkier to remove.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2011-12-22 18:31:21.132999",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Code looks good.\n\nThe comment is not quite right: Dir(`/foo`) = `/` but it\ndoesn't fall under the specified case.\n\nAlso, on windows presumably Dir(`c:\\foo`) = `c:\\`.\n\nMaybe\n\nThe returned path does not end in a separator unless it\nis the root directory.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-22 19:25:50.657256",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> this was how the whole thing started, with someone complaining about the trailing slash. i can't make everyone happy, it seems. at least the behavior is documented.\n>\n> what do you want? i'll do what you want. it's just a +1 on the string to put it back, but it's much clunkier to remove.\n\nMy vote is to either:\n\n1) Remove the slash from both Split and Dir (behavior seems\npreferable, but incompatible if people are blindly assuming the slash)\n2) Keep the slash on both\n\nPeople will probably use Split and Dir interchangeably, and having\nthem with differing outcomes seems error prone.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2011-12-22 19:26:22.083062",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think Dir should return the same form that Clean does,\nwhich means no trailing slash except for the root directory.\nThat is not always what you want, but neither is the other.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-22 19:20:29.362792",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Dec 22, 2011, at 11:20 AM, Russ Cox wrote:\n\n> I think Dir should return the same form that Clean does,\n> which means no trailing slash except for the root directory.\n> That is not always what you want, but neither is the other.\n\nThat's the documented behavior of the implementation here.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2011-12-22 19:21:43.250273",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5503067: path/filepath: Dir",
	"created": "2011-12-22 18:17:10.059417",
	"patchsets": [
		1,
		2002,
		1004,
		6006,
		5,
		3008
	],
	"modified": "2011-12-22 21:59:30.768206",
	"closed": true,
	"issue": 5503067
}