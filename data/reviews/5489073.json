{
	"description": "crypto/tls: don't assume an RSA private key in the API.\n\nWe still very much assume it in the code, but with this change in\nplace we can implement other things later without changing and users\nof the package.\n\nFixes issue 2319.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5489073/diff/3/src/pkg/crypto/tls/common.go\nFile src/pkg/crypto/tls/common.go (right):\n\nhttp://codereview.appspot.com/5489073/diff/3/src/pkg/crypto/tls/common.go#newcode257\nsrc/pkg/crypto/tls/common.go:257: PrivateKey  interface{}\ntalking to myself, but would it be less gross to do something like:\n\ntype Certificate struct {\n     ....\n     PrivateKey  crypto.PrivateKey\n     ...\n}\n\npackage crypto\n\ntype PrivateKey interface {\n    PrivateKey() interface{}\n}\n\n\nThat is, a dummy type just for documentation, less gross than an empty interface.\n\nThen *rsa.PrivateKey can implement PrivateKey like:\n\nfunc (k *PrivateKey) PrivateKey() interface{} {\n   return k\n}\n\n... or something.",
			"disapproval": false,
			"date": "2011-12-17 17:44:00.459807",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=6392106665e7 ***\n\ncrypto/tls: don't assume an RSA private key in the API.\n\nWe still very much assume it in the code, but with this change in\nplace we can implement other things later without changing and users\nof the package.\n\nFixes issue 2319.\n\nR=golang-dev, bradfitz, r\nCC=golang-dev\nhttp://codereview.appspot.com/5489073",
			"disapproval": false,
			"date": "2011-12-19 15:39:38.060568",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nBut I'd still put a comment after it in the struct:\n\nPrivateKey  crypto.PrivateKey  // supported types: *rsa.PrivateKey\n\n... or something.\n\nIn a follow-up CL, I think there are a couple other places that\ncrypto.PrivateKey could be used instead of interface{}.\n\n\nOn Sat, Dec 17, 2011 at 10:33 AM, <agl@golang.org> wrote:\n\n>\n> http://codereview.appspot.com/**5489073/diff/3/src/pkg/crypto/**\n> tls/common.go<http://codereview.appspot.com/5489073/diff/3/src/pkg/crypto/tls/common.go>\n> File src/pkg/crypto/tls/common.go (right):\n>\n> http://codereview.appspot.com/**5489073/diff/3/src/pkg/crypto/**\n> tls/common.go#newcode257<http://codereview.appspot.com/5489073/diff/3/src/pkg/crypto/tls/common.go#newcode257>\n> src/pkg/crypto/tls/common.go:**257: PrivateKey  interface{}\n> On 2011/12/17 17:44:00, bradfitz wrote:\n>\n>> talking to myself, but would it be less gross to do something like:\n>>\n>\n> I don't much like the .PrivateKey.PrivateKey().(***rsa.PrivateKey) that\n> occurs with that, so I did\n>\n> type PrivateKey interface{}\n>\n> See how you feel about it.\n>\n> http://codereview.appspot.com/**5489073/<http://codereview.appspot.com/5489073/>\n>\n",
			"disapproval": false,
			"date": "2011-12-17 20:22:40.576106",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-17 17:23:48.126399",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5489073/diff/3/src/pkg/crypto/tls/common.go\nFile src/pkg/crypto/tls/common.go (right):\n\nhttp://codereview.appspot.com/5489073/diff/3/src/pkg/crypto/tls/common.go#newcode257\nsrc/pkg/crypto/tls/common.go:257: PrivateKey  interface{}\nsadness, but understandable.  at least add a comment here about what types interface{} is expected to be.",
			"disapproval": false,
			"date": "2011-12-17 17:40:50.448310",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5489073/diff/3/src/pkg/crypto/tls/common.go\nFile src/pkg/crypto/tls/common.go (right):\n\nhttp://codereview.appspot.com/5489073/diff/3/src/pkg/crypto/tls/common.go#newcode257\nsrc/pkg/crypto/tls/common.go:257: PrivateKey  interface{}\nOn 2011/12/17 17:44:00, bradfitz wrote:\n> talking to myself, but would it be less gross to do something like:\n\nI don't much like the .PrivateKey.PrivateKey().(*rsa.PrivateKey) that occurs with that, so I did\n\ntype PrivateKey interface{}\n\nSee how you feel about it.",
			"disapproval": false,
			"date": "2011-12-17 18:33:57.964726",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-12-17 18:53:23.330450",
			"approval": true
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 5489073: crypto/tls: don't assume an RSA private key in the API.",
	"created": "2011-12-17 17:23:18.725151",
	"patchsets": [
		1,
		2001,
		3,
		4004,
		5002,
		9
	],
	"modified": "2011-12-19 15:39:43.755095",
	"closed": true,
	"issue": 5489073
}