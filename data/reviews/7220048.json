{
	"description": "archive/tar: Add reader and writer code example.\n\nRemove the previous comment examples.",
	"cc": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com"
	],
	"reviewers": [
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thursday, January 31, 2013, Andrew Gerrand wrote:\r\n\r\n> Actually I was thinking that we should avoid relying on testdata/ files\r\n> altogether, so that this can be run in the playground sandbox.\r\n>\r\ni imagine that when running locally with godoc -play,\r\nwe can start the compiled binary under the directory\r\nfor the current package, so that examples using\r\ntestdat could be run, what do you think?\r\n",
			"disapproval": false,
			"date": "2013-01-31 08:34:16.228220",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-26 16:35:13.183590",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-26 16:37:06.881770",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-31 03:15:17.886360",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7220048/diff/8008/src/pkg/archive/tar/example_test.go\nFile src/pkg/archive/tar/example_test.go (right):\n\nhttps://codereview.appspot.com/7220048/diff/8008/src/pkg/archive/tar/example_test.go#newcode28\nsrc/pkg/archive/tar/example_test.go:28: hdr := new(tar.Header)\nhdr := &tar.Header{\n  Name: file.Name,\n  Size: int64(len(file.Body)),\n}\n\nhttps://codereview.appspot.com/7220048/diff/8008/src/pkg/archive/tar/example_test.go#newcode30\nsrc/pkg/archive/tar/example_test.go:30: // populate other hdr fields as desired.\ndelete this, kinda obvious\n\nhttps://codereview.appspot.com/7220048/diff/8008/src/pkg/archive/tar/example_test.go#newcode47\nsrc/pkg/archive/tar/example_test.go:47: // Iterate through the files in the archive.\nadd a blank line above this\n\nhttps://codereview.appspot.com/7220048/diff/8008/src/pkg/archive/tar/example_test.go#newcode74\nsrc/pkg/archive/tar/example_test.go:74: // Write more examples.\ndelete this line :-) I love the rest",
			"disapproval": false,
			"date": "2013-01-31 23:55:05.094120",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-01 06:05:15.549980",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-26 16:26:57.060330",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/31 16:32:05, u wrote:\n> Hello mailto:golang-dev@googlegroups.com, mailto:minux.ma@gmail.com, mailto:adg@golang.org (cc:\n> mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nI agree that it's nice if this code runs smoothly in the playground. The only\nthing missing would be the example usage of tar.FileInfoHeader, which is quite\nconvenient when handling actual files.\n\nI've updated the example code. Before the final commit, \"hello world\" could be replaced with something more imaginative.",
			"disapproval": false,
			"date": "2013-01-31 16:33:39.579710",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-31 16:51:08.285140",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Jan 27, 2013 at 1:05 AM, <r.eklind.87@gmail.com> wrote:\r\n\r\n> First I added an example for tar.Writer as well, but removed it in favor\r\n> of the much more concise comment.\r\n>\r\n> Pros:\r\n> * The concise example captures the important aspects without\r\n> distractions.\r\n> Cons:\r\n> * It isn't checked for compile time errors since it's a comment.\r\n>\r\n> For reader it makes sense to use a code example, since it will dual as a\r\n> test case.\r\n>\r\n> Could we make a concise tar.Writer code example or should we stay with\r\n> using the comment example?\r\n>\r\nmy opinion is that if we can integrate the comments in the example comment\r\ninto the example code, we can get rid of the example comments.\r\n",
			"disapproval": false,
			"date": "2013-01-26 19:01:23.270480",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "First I added an example for tar.Writer as well, but removed it in favor of the much more concise comment.\n\nPros:\n* The concise example captures the important aspects without distractions.\nCons:\n* It isn't checked for compile time errors since it's a comment.\n\nFor reader it makes sense to use a code example, since it will dual as a test case.\n\nCould we make a concise tar.Writer code example or should we stay with using the comment example?",
			"disapproval": false,
			"date": "2013-01-26 17:05:19.476420",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The examples are now more consistent with the zip examples.\n\nThe zip example is split into a reader and a writer. The reader uses testdata. What is the preferred solution?",
			"disapproval": false,
			"date": "2013-01-31 16:53:05.959810",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7220048/diff/1002/src/pkg/archive/tar/example_test.go\nFile src/pkg/archive/tar/example_test.go (right):\n\nhttps://codereview.appspot.com/7220048/diff/1002/src/pkg/archive/tar/example_test.go#newcode11\nsrc/pkg/archive/tar/example_test.go:11: func ExampleReader() {\nWe could make this example self-contained by covering both the reader and the writer parts. First write a tar file into a bytes.Buffer and then read it back.\n\nWhat do you think?",
			"disapproval": false,
			"date": "2013-01-29 04:21:48.206060",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-31 03:10:33.223870",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/29 04:21:48, adg wrote:\n> https://codereview.appspot.com/7220048/diff/1002/src/pkg/archive/tar/example_test.go\n> File src/pkg/archive/tar/example_test.go (right):\n> \n> https://codereview.appspot.com/7220048/diff/1002/src/pkg/archive/tar/example_test.go#newcode11\n> src/pkg/archive/tar/example_test.go:11: func ExampleReader() {\n> We could make this example self-contained by covering both the reader and the\n> writer parts. First write a tar file into a bytes.Buffer and then read it back.\n> \n> What do you think?\n\nSounds good and sorry for the double commit. Any suggestions of how to make it cleaner?",
			"disapproval": false,
			"date": "2013-01-31 03:17:41.160670",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Actually I was thinking that we should avoid relying on testdata/ files\r\naltogether, so that this can be run in the playground sandbox.\r\n",
			"disapproval": false,
			"date": "2013-01-31 04:46:46.360570",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-31 16:32:05.891090",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-02-04 01:35:18.104240",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=a8d940d69a3e ***\n\narchive/tar: Add reader and writer code example.\n\nRemove the previous comment examples.\n\nR=golang-dev, minux.ma, adg\nCC=golang-dev\nhttps://codereview.appspot.com/7220048\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2013-02-04 01:37:27.744040",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7220048/diff/19001/src/pkg/archive/tar/example_test.go\nFile src/pkg/archive/tar/example_test.go (right):\n\nhttps://codereview.appspot.com/7220048/diff/19001/src/pkg/archive/tar/example_test.go#newcode1\nsrc/pkg/archive/tar/example_test.go:1: package tar_test\ncopyright?",
			"disapproval": false,
			"date": "2013-02-04 03:26:24.971860",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-02-22 08:11:12.950740",
			"approval": false
		}
	],
	"owner_email": "r.eklind.87@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "u",
	"subject": "code review 7220048: archive/tar: Add reader and writer code example.",
	"created": "2013-01-26 16:25:06.266220",
	"patchsets": [
		1,
		2001,
		5001,
		2002,
		1002,
		1003,
		12001,
		10003,
		15004,
		17001,
		8008,
		19001
	],
	"modified": "2013-02-22 08:11:18.055580",
	"closed": true,
	"issue": 7220048
}