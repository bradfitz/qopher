{
	"description": "Include an Eratosthenesque concurrent prime sieve to go along with the \"naive\" version.",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "anh.hai.trinh@gmail.com",
			"recipients": [
				"anh.hai.trinh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change.",
			"disapproval": false,
			"date": "2010-02-22 10:48:19.605193",
			"approval": false
		},
		{
			"sender": "anh.hai.trinh@gmail.com",
			"recipients": [
				"anh.hai.trinh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2010-02-23 18:52:29.066614",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"anh.hai.trinh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nplease sign the CLA as described at contribute.html\nand add yourself to the CONTRIBUTORS and AUTHORS files in a separate CL.  then we can check this in",
			"disapproval": false,
			"date": "2010-02-24 03:29:13.042439",
			"approval": true
		},
		{
			"sender": "anh.hai.trinh@gmail.com",
			"recipients": [
				"anh.hai.trinh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2010/02/24 04:40:40, rsc wrote:\n>\n> you can just complete the CLA; we'll take care\n> of the CONTRIBUTORS and AUTHORS changes.\n> (we changed the procedure because it there were\n> too many merge conflicts on those files.)\n\nThanks. I have signed the web form a few days ago. Will there be a confirmation email or is it something you guys can check?",
			"disapproval": false,
			"date": "2010-02-24 04:56:28.991912",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"anh.hai.trinh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=0f455278b17c ***\n\nInclude an Eratosthenesque concurrent prime sieve to go along with the \"naive\" version.\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/218046\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2010-02-24 05:21:20.954928",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"anh.hai.trinh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "the code is very nice and i'd like to leave it as you wrote it, since it's so well described on the blog. i do have a few changes to the comments though.\n\nalso please make sure to sign the CLA as described at contribute.html and add yourself to the CONTRIBUTORS and AUTHORS files in a separate CL\n\nhttp://codereview.appspot.com/218046/diff/6/7\nFile test/chan/sieve1.go (right):\n\nhttp://codereview.appspot.com/218046/diff/6/7#newcode7\ntest/chan/sieve1.go:7: // Generate primes \u2264 100 using channels, checking the results.\ns/\u2264/up to/ (why change it?)\n\nhttp://codereview.appspot.com/218046/diff/6/7#newcode8\ntest/chan/sieve1.go:8: // This sieve comprises of a linear chain of divisibility filters,\ns/comprises/consists/\n\nhttp://codereview.appspot.com/218046/diff/6/8\nFile test/chan/sieve2.go (right):\n\nhttp://codereview.appspot.com/218046/diff/6/8#newcode7\ntest/chan/sieve2.go:7: // Generate primes \u2264 100 using channels, checking the results.\ns/\u2264/up to/\n\nhttp://codereview.appspot.com/218046/diff/6/8#newcode8\ntest/chan/sieve2.go:8: // This sieve is Eratosthenesque and only considers odd candidates.\nEratosthenesque is not a word bt i like it anyway!\n\nhttp://codereview.appspot.com/218046/diff/6/8#newcode59\ntest/chan/sieve2.go:59: // Return a channel which serves as a sending proxy to `out`.\ns/which/that/\nor\ns/which serves/to serve/\n\nchange the back quotes to single quotes '' throughout\n\nhttp://codereview.appspot.com/218046/diff/6/8#newcode139\ntest/chan/sieve2.go:139: // will send to it, making the buffer accumulates and blocks this\ns/accumulates/accumulate/\ns/blocks/block/",
			"disapproval": false,
			"date": "2010-02-23 09:56:52.286105",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> please sign the CLA as described at contribute.html\n> and add yourself to the CONTRIBUTORS and AUTHORS files in a separate CL.\n\nyou can just complete the CLA; we'll take care\nof the CONTRIBUTORS and AUTHORS changes.\n(we changed the procedure because it there were\ntoo many merge conflicts on those files.)\n\nruss\n",
			"disapproval": false,
			"date": "2010-02-24 04:40:40.311497",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> Thanks. I have signed the web form a few days ago. Will there be a\n> confirmation email or is it something you guys can check?\n\nThanks.  Will check and take care of it.\n\nRuss\n",
			"disapproval": false,
			"date": "2010-02-24 05:01:59.267595",
			"approval": false
		}
	],
	"owner_email": "anh.hai.trinh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "aht",
	"subject": "code review 218046: Include an Eratosthenesque concurrent prime sieve to go...",
	"created": "2010-02-22 10:35:51.953520",
	"patchsets": [
		1,
		6,
		15
	],
	"modified": "2010-02-24 05:01:59.267595",
	"closed": false,
	"issue": 218046
}