{
	"description": "syscall: implement nametomib for openbsd.\n\nMove the existing darwin/freebsd specific nametomib implementation\ninto the respective operating system dependent files.\n\nProvide a nametomib implementation for openbsd, which operates on a\nsysctl MIB that has been pre-generated from the various system headers\nby mksysctl_openbsd.pl.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-08-27 15:39:29.725677",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "OpenBSD has no way to get this information\nout of the kernel?  That would mean that you\nhave to recompile your binaries after each new\nsysctl name is created.  Is that really true?",
			"disapproval": false,
			"date": "2011-08-29 13:20:31.903793",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/08/27 15:39:29, jsing wrote:\n> Hello mailto:golang-dev@googlegroups.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n\nThere will likely be a conflict between this change and 4969045. Once one of the changes has been reviewed and submitted I'll manually merge the changes.",
			"disapproval": false,
			"date": "2011-08-27 15:44:40.469430",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/08/29 13:20:31, rsc wrote:\n> OpenBSD has no way to get this information\n> out of the kernel?  That would mean that you\n> have to recompile your binaries after each new\n> sysctl name is created.  Is that really true?\n\nSorry for the delayed response. The sysctl names are not known to the kernel, only the OIDs are. If a new sysctl is added then the go runtime would need to be updated and programs relinked in order to pickup the new name. This is unlikely to be a significant issue unless you're looking to write a sysctl(8) replacement, in which case you need to know a lot more about the MIB than the object names.",
			"disapproval": false,
			"date": "2011-10-05 16:51:31.653752",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Okay, sigh.\nPlease hg sync to incorporate recent changes.\n",
			"disapproval": false,
			"date": "2011-10-05 17:20:51.352120",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/05 17:20:51, rsc wrote:\n> Okay, sigh.\n> Please hg sync to incorporate recent changes.\n\nDone. PTAL.",
			"disapproval": false,
			"date": "2011-10-07 15:25:26.117942",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Can we not use maps?  A binary search through a single\nsorted array would be pretty cheap and would let the arrays\nbe laid out at compile time instead of needing to construct\nthe map at init time (startup time) for every Go binary.\nThat is, the search would be for 'hw.ncpu' not 'hw' then 'ncpu'.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-10-07 15:37:44.553752",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/07 15:37:44, rsc wrote:\n> Can we not use maps?  A binary search through a single\n> sorted array would be pretty cheap and would let the arrays\n> be laid out at compile time instead of needing to construct\n> the map at init time (startup time) for every Go binary.\n> That is, the search would be for 'hw.ncpu' not 'hw' then 'ncpu'.\n\nI've reimplemented this with a single array to avoid the init time overhead of maps - PTAL.",
			"disapproval": false,
			"date": "2011-11-12 16:14:08.790001",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nThanks.\n",
			"disapproval": false,
			"date": "2011-11-16 20:56:31.944887",
			"approval": true
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f913b966f133 ***\n\nsyscall: implement nametomib for openbsd.\n\nMove the existing darwin/freebsd specific nametomib implementation\ninto the respective operating system dependent files.\n\nProvide a nametomib implementation for openbsd, which operates on a\nsysctl MIB that has been pre-generated from the various system headers\nby mksysctl_openbsd.pl.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/4935044",
			"disapproval": false,
			"date": "2011-11-17 12:13:58.553055",
			"approval": false
		}
	],
	"owner_email": "jsing@google.com",
	"private": false,
	"base_url": "",
	"owner": "jsing",
	"subject": "code review 4935044: syscall: implement nametomib for openbsd.",
	"created": "2011-08-20 14:19:14.679643",
	"patchsets": [
		12001,
		14001,
		18002,
		25001,
		28001,
		29017,
		31001,
		35001,
		38002
	],
	"modified": "2011-11-17 12:15:47.887109",
	"closed": true,
	"issue": 4935044
}