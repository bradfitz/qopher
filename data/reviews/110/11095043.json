{
	"description": "html: add escaping tests",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-07-10 07:30:22.326640",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nabout time!\r\n",
			"disapproval": false,
			"date": "2013-07-10 07:31:04.833290",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\ncan we go get food now?\r\n\r\n\r\n\r\nOn Wed, Jul 10, 2013 at 5:30 PM, <adg@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> html: add escaping tests\r\n>\r\n> Please review this at https://codereview.appspot.**com/11095043/<https://codereview.appspot.com/11095043/>\r\n>\r\n> Affected files:\r\n>   A src/pkg/html/escape_test.go\r\n>\r\n>\r\n> Index: src/pkg/html/escape_test.go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/src/pkg/html/escape_test.go\r\n> @@ -0,0 +1,97 @@\r\n> +// Copyright 2013 The Go Authors. All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +package html\r\n> +\r\n> +import \"testing\"\r\n> +\r\n> +type unescapeTest struct {\r\n> +       // A short description of the test case.\r\n> +       desc string\r\n> +       // The HTML text.\r\n> +       html string\r\n> +       // The unescaped text.\r\n> +       unescaped string\r\n> +}\r\n> +\r\n> +var unescapeTests = []unescapeTest{\r\n> +       // Handle no entities.\r\n> +       {\r\n> +               \"copy\",\r\n> +               \"A\\ttext\\nstring\",\r\n> +               \"A\\ttext\\nstring\",\r\n> +       },\r\n> +       // Handle simple named entities.\r\n> +       {\r\n> +               \"simple\",\r\n> +               \"&amp; &gt; &lt;\",\r\n> +               \"& > <\",\r\n> +       },\r\n> +       // Handle hitting the end of the string.\r\n> +       {\r\n> +               \"stringEnd\",\r\n> +               \"&amp &amp\",\r\n> +               \"& &\",\r\n> +       },\r\n> +       // Handle entities with two codepoints.\r\n> +       {\r\n> +               \"multiCodepoint\",\r\n> +               \"text &gesl; blah\",\r\n> +               \"text \\u22db\\ufe00 blah\",\r\n> +       },\r\n> +       // Handle decimal numeric entities.\r\n> +       {\r\n> +               \"decimalEntity\",\r\n> +               \"Delta = &#916; \",\r\n> +               \"Delta = \u0394 \",\r\n> +       },\r\n> +       // Handle hexadecimal numeric entities.\r\n> +       {\r\n> +               \"hexadecimalEntity\",\r\n> +               \"Lambda = &#x3bb; = &#X3Bb \",\r\n> +               \"Lambda = \u03bb = \u03bb \",\r\n> +       },\r\n> +       // Handle numeric early termination.\r\n> +       {\r\n> +               \"numericEnds\",\r\n> +               \"&# &#x &#128;43 &copy = &#169f = &#xa9\",\r\n> +               \"&# &#x \u20ac43 \u00a9 = \u00a9f = \u00a9\",\r\n> +       },\r\n> +       // Handle numeric ISO-8859-1 entity replacements.\r\n> +       {\r\n> +               \"numericReplacements\",\r\n> +               \"Footnote&#x87;\",\r\n> +               \"Footnote\u2021\",\r\n> +       },\r\n> +}\r\n> +\r\n> +func TestUnescape(t *testing.T) {\r\n> +       for _, tt := range unescapeTests {\r\n> +               unescaped := UnescapeString(tt.html)\r\n> +               if unescaped != tt.unescaped {\r\n> +                       t.Errorf(\"TestUnescape %s: want %q, got %q\",\r\n> tt.desc, tt.unescaped, unescaped)\r\n> +               }\r\n> +       }\r\n> +}\r\n> +\r\n> +func TestUnescapeEscape(t *testing.T) {\r\n> +       ss := []string{\r\n> +               ``,\r\n> +               `abc def`,\r\n> +               `a & b`,\r\n> +               `a&amp;b`,\r\n> +               `a &amp b`,\r\n> +               `&quot;`,\r\n> +               `\"`,\r\n> +               `\"<&>\"`,\r\n> +               `&quot;&lt;&amp;&gt;&quot;`,\r\n> +               `3&5==1 && 0<1, \"0&lt;1\", a+acute=&aacute;`,\r\n> +               `The special characters are: <, >, &, ' and \"`,\r\n> +       }\r\n> +       for _, s := range ss {\r\n> +               if got := UnescapeString(EscapeString(s)**); got != s {\r\n> +                       t.Errorf(\"got %q want %q\", got, s)\r\n> +               }\r\n> +       }\r\n> +}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-10 07:31:05.632560",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=79764384421c ***\n\nhtml: add escaping tests\n\nR=golang-dev, dsymonds, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/11095043",
			"disapproval": false,
			"date": "2013-07-10 07:31:54.785200",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 11095043: html: add escaping tests",
	"created": "2013-07-10 07:30:13.258020",
	"patchsets": [
		1,
		6001
	],
	"modified": "2013-07-10 07:31:57.514270",
	"closed": true,
	"issue": 11095043
}