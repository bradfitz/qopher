{
	"description": "exp/template/html: allow commenting out of actions\n\nInstead of erroring on actions inside comments, use existing escaping\npipeline to quash the output of actions inside comments.\n\nIf a template maintainer uses a comment to disable template code:\n\n  {{if .}}Hello, {{.}}!{{end}}\n\n->\n\n  <!--{{if true}}Hello, {{.}}!{{end}}-->\n\nwill result in\n\n  <!--Hello, !-->\n\nregardless of the value of {{.}}.\n\nIn a later CL, comment elision will result in the entire commented-out\nsection being dropped from the template output.\n\nAny side-effects in pipelines, such as panics, will still be realized.",
	"cc": [
		"nigeltao@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b36fa0ef3ad0 ***\n\nexp/template/html: allow commenting out of actions\n\nInstead of erroring on actions inside comments, use existing escaping\npipeline to quash the output of actions inside comments.\n\nIf a template maintainer uses a comment to disable template code:\n\n  {{if .}}Hello, {{.}}!{{end}}\n\n->\n\n  <!--{{if true}}Hello, {{.}}!{{end}}-->\n\nwill result in\n\n  <!--Hello, !-->\n\nregardless of the value of {{.}}.\n\nIn a later CL, comment elision will result in the entire commented-out\nsection being dropped from the template output.\n\nAny side-effects in pipelines, such as panics, will still be realized.\n\nR=nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/5078041",
			"disapproval": false,
			"date": "2011-09-20 02:52:39.129008",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 20 September 2011 11:11,  <mikesamuel@gmail.com> wrote:\n> I haven't yet quantified how often code sections are commented out or\n> how often code-snippets in TODOs contain actions (that developers don't\n> intend to be actions) so I can't say that erroring out would be a burden\n> on developers.\n>\n> Should I open this up for wider discussion?\n\nFrom your data, I'm happy to allow actions in comments (but elide them\nin final output).\n",
			"disapproval": false,
			"date": "2011-09-20 01:56:07.046642",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-19 22:28:39.042296",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.\n\nI'm still not totally convinced that this is the best approach, but I'm willing to take your word for it.\n\nhttp://codereview.appspot.com/5078041/diff/9001/src/pkg/exp/template/html/escape_test.go\nFile src/pkg/exp/template/html/escape_test.go (right):\n\nhttp://codereview.appspot.com/5078041/diff/9001/src/pkg/exp/template/html/escape_test.go#newcode404\nsrc/pkg/exp/template/html/escape_test.go:404: \"JS block comment flush with div\",\nI'd spell \"division\" in full, or even s/div/mathematical division/, to avoid being confused with the HTML <div> concept.\n\nhttp://codereview.appspot.com/5078041/diff/9001/src/pkg/exp/template/html/html.go\nFile src/pkg/exp/template/html/html.go (right):\n\nhttp://codereview.appspot.com/5078041/diff/9001/src/pkg/exp/template/html/html.go#newcode230\nsrc/pkg/exp/template/html/html.go:230: // human-readable content, so the simplest and most secure policy is to drop\nI still think that it'd be simpler to prohibit any actions inside a template: i.e. it is an error if escaping a TextNode ends in a comment context. It's not going to happen in practice, but something like\n\n`<script>\nreturn //{{\"some raw\ntext with a newline\"}}1\n</script>`\n\ncan still be a little confusing because the line break is in the template node, not the text node with the \"//\" line comment token.\n\nIf you must have comments conditionally appearing in template output, then I would argue that it should be done via the content types in content.go. But I haven't done any Web front-end programming in some years now, so I don't have a good sense of if that's workable.",
			"disapproval": false,
			"date": "2011-09-20 00:30:30.915086",
			"approval": true
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/20 00:30:30, nigeltao wrote:\n> LGTM.\n> \n> I'm still not totally convinced that this is the best approach, but I'm willing\n> to take your word for it.\n> If you must have comments conditionally appearing in template output, then I\n> would argue that it should be done via the content types in content.go. But I\n> haven't done any Web front-end programming in some years now, so I don't have a\n> good sense of if that's workable.\n\nI did a code search to see whether there is much code in another template language where comments are used to disable template code.\n\nI found a few clear examples using a code search tool similar to\n\n  find . -name \\*.soy | xargs egrep '/\\*([^*{}]|\\*+[^*/{}])*\\**[{}]([^*]|\\*+[^*/])*\\*+/'\n\neven though the tool matches line by line.\nI can't post the results, but there are examples of:\n- commented out script elements.\n- commented out calls.\n- commented out attributes.\n- commented out call parameters.\n\nTrying to repeat with // yields too much noise because it often appears in URLs.\n\nSearching for other things that developers probably hope are elided, I have an easier time getting matches.  TODO and BUG are easier to find, but there are some examples in the codebase of code snippets in TODO that include actions.\nSearching for TODO yields >1000 examples, and a quick eyeball shows that almost all are on lines starting with \"<!--\", \"*\", \"/*\", or \"//\".  These frequently have developer userids.\nSearching for \\bHACK\\b|\\bBUG\\b yields 6 hits with similar prefixes.\nAt least 5 of the TODOs contain snippets of template code that are not just text nodes.\n\nI think I can make the case that by principle-of-least-surprise, developers expect comment elision.\n\nI haven't yet quantified how often code sections are commented out or how often code-snippets in TODOs contain actions (that developers don't intend to be actions) so I can't say that erroring out would be a burden on developers.\n\nShould I open this up for wider discussion?",
			"disapproval": false,
			"date": "2011-09-20 01:11:04.059841",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5078041/diff/9001/src/pkg/exp/template/html/html.go\nFile src/pkg/exp/template/html/html.go (right):\n\nhttp://codereview.appspot.com/5078041/diff/9001/src/pkg/exp/template/html/html.go#newcode230\nsrc/pkg/exp/template/html/html.go:230: // human-readable content, so the simplest and most secure policy is to drop\nOn 2011/09/20 00:30:31, nigeltao wrote:\n> I still think that it'd be simpler to prohibit any actions inside a template:\n> i.e. it is an error if escaping a TextNode ends in a comment context. It's not\n> going to happen in practice, but something like\n> \n> `<script>\n> return //{{\"some raw\n> text with a newline\"}}1\n> </script>`\n\nYes.  If developers assume that {{\"literal text\"}} is the same as the text node derived from a string literal after some trivial decoding, then they will be confused.\n\nI agree re content.go as the way to embed comments and noted that in the change description for 4999042 as an escape valve for IE conditional comments.\n\nThis change works with comment elision so that comments in template source do not appear in the rendered output, even when the contain things that look like actions to a parser, but not to a sleepy developer:\n\n    // TODO: reenable once Alice wites up Foo:  var x = {{.Foo}};\n\n> can still be a little confusing because the line break is in the template node,\n> not the text node with the \"//\" line comment token.\n> \n> If you must have comments conditionally appearing in template output, then I\n> would argue that it should be done via the content types in content.go. But I\n> haven't done any Web front-end programming in some years now, so I don't have a\n> good sense of if that's workable.",
			"disapproval": false,
			"date": "2011-09-20 01:20:27.132809",
			"approval": false
		}
	],
	"owner_email": "mikesamuel@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "MikeSamuel",
	"subject": "code review 5078041: exp/template/html: allow commenting out of actions",
	"created": "2011-09-19 22:22:43.840193",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		1002,
		6010
	],
	"modified": "2011-09-20 02:52:40.601383",
	"closed": true,
	"issue": 5078041
}