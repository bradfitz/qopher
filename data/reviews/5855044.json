{
	"description": "sort: document two undocumented functions\n\nThey looked out of place in godoc.\nIncludes documenting sort stability.\n\nFixes issue 3356",
	"cc": [
		"golang-dev@googlegroups.com",
		"gri@golang.org"
	],
	"reviewers": [
		"trolleriprofessorn@gmail.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"trolleriprofessorn@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f71a8aea4361 ***\n\nsort: document two undocumented functions\n\nThey looked out of place in godoc.\nIncludes documenting sort stability.\n\nFixes issue 3356\n\nR=golang-dev, gri, trolleriprofessorn\nCC=golang-dev\nhttp://codereview.appspot.com/5855044",
			"disapproval": false,
			"date": "2012-03-20 18:40:45.851852",
			"approval": false
		},
		{
			"sender": "trolleriprofessorn@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"trolleriprofessorn@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Documenting DoS attacks certainly would be a very bad idea. I only suggested\nadding information about the running time. This clearly is important\ninformation to have when you call a library function. The origial CL 4591051\nthat removed the quadratic running time fixed a long standing issue 467.\nSo yes, people are interested in knowing this.\n\n\nOn 2012/03/20 18:40:18, bradfitz wrote:\n> Documenting all the ways in which we can't be attacked seems incomplete and\n> overly hopeful, not to mention verbose.",
			"disapproval": false,
			"date": "2012-03-20 19:38:13.375004",
			"approval": false
		},
		{
			"sender": "trolleriprofessorn@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"trolleriprofessorn@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sure, I'll do that. It wasn't my intention to hijack this CL,\nit just seemed like a natural addition to the doc to me.\n\nOn 2012/03/20 19:40:37, bradfitz wrote:\n> Feel free to pursue it in a subsequent CL.  My immediate itch was just\n> fixing the lack of documentation.\n> \n> \n> On Tue, Mar 20, 2012 at 12:38 PM, <mailto:trolleriprofessorn@gmail.com> wrote:\n> \n> > Documenting DoS attacks certainly would be a very bad idea. I only\n> > suggested\n> > adding information about the running time. This clearly is important\n> > information to have when you call a library function. The origial CL\n> > 4591051\n> > that removed the quadratic running time fixed a long standing issue 467.\n> > So yes, people are interested in knowing this.\n> >\n> >\n> >\n> > On 2012/03/20 18:40:18, bradfitz wrote:\n> >\n> >> Documenting all the ways in which we can't be attacked seems\n> >>\n> > incomplete and\n> >\n> >> overly hopeful, not to mention verbose.\n> >>\n> >\n> >\n> http://codereview.appspot.com/**5855044/%3Chttp://codereview.appspot.com/5855044/>\n> >",
			"disapproval": false,
			"date": "2012-03-20 20:02:12.098571",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-20 18:09:59.119345",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Documenting all the ways in which we can't be attacked seems incomplete and\noverly hopeful, not to mention verbose.\n\nOn Tue, Mar 20, 2012 at 11:32 AM, <trolleriprofessorn@gmail.com> wrote:\n\n> It is true (after the heapsort CL). In this case I would say it's\n> important to document this fact. Most languages offer system sorts with\n> quadratic worst-case time. Also, there are DoS attacks that use this\n> weakness of many quicksort implementations.\n>\n>\n> On 2012/03/20 18:27:59, gri wrote:\n>\n>> We generally don't have performance guarantees in the docs, I think.\n>> Also, I am not sure this is actually true now for the current\n>> implementation. I am in favor of not specifying it.\n>>\n>\n>  On Tue, Mar 20, 2012 at 11:19 AM,\n>>\n> <mailto:trolleriprofessorn@**gmail.com <trolleriprofessorn@gmail.com>>\n> wrote:\n>\n>> > It would be nice to add that Sort makes at most O(n log n) calls to\n>>\n> the\n>\n>> > Interface methods.\n>> >\n>> > http://codereview.appspot.com/**5855044/<http://codereview.appspot.com/5855044/>\n>>\n>\n>\n>\n> http://codereview.appspot.com/**5855044/<http://codereview.appspot.com/5855044/>\n>\n",
			"disapproval": false,
			"date": "2012-03-20 18:40:18.445648",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nPlease add to the CL description:\n\nFixes issue 3356.\n\n- gri\n\nhttp://codereview.appspot.com/5855044/diff/3002/src/pkg/sort/sort.go\nFile src/pkg/sort/sort.go (right):\n\nhttp://codereview.appspot.com/5855044/diff/3002/src/pkg/sort/sort.go#newcode199\nsrc/pkg/sort/sort.go:199: // IsSorted returns whether data is sorted.\ns/returns/reports/",
			"disapproval": false,
			"date": "2012-03-20 18:18:30.119915",
			"approval": true
		},
		{
			"sender": "trolleriprofessorn@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"trolleriprofessorn@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It would be nice to add that Sort makes at most O(n log n) calls to the Interface methods.",
			"disapproval": false,
			"date": "2012-03-20 18:19:54.271061",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 20, 2012 at 11:18 AM, <gri@golang.org> wrote:\n\n> LGTM\n>\n> Please add to the CL description:\n>\n> Fixes issue 3356.\n>\n\nah, didn't know there was an issue. Done.\n\n\n\n> http://codereview.appspot.com/**5855044/diff/3002/src/pkg/**sort/sort.go\n> File src/pkg/sort/sort.go (right):\n>\n> http://codereview.appspot.com/**5855044/diff/3002/src/pkg/**\n> sort/sort.go#newcode199\n> src/pkg/sort/sort.go:199: // IsSorted returns whether data is sorted.\n> s/returns/reports/\n\n\nis that a thing?\n\nbradfitz@bradfitzlap:~/go/src/pkg/sort$ grep -r \"returns whether\"\n$GOROOT/src | wc -l\n76\nbradfitz@bradfitzlap:~/go/src/pkg/sort$ grep -r \"reports whether\"\n$GOROOT/src | wc -l\n103\nbradfitz@bradfitzlap:~/go/src/pkg/sort$ grep -r \"reports whether\"\n$GOROOT/src/pkg/sort | wc -l\n0\nbradfitz@bradfitzlap:~/go/src/pkg/sort$ grep -r \"returns whether\"\n$GOROOT/src/pkg/sort | wc -l\n2\n\nShould I update the existing \"returns whether\" that's already in sort.go?\n At least how I have it now is locally consistent.\n",
			"disapproval": false,
			"date": "2012-03-20 18:26:53.315821",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "We generally don't have performance guarantees in the docs, I think.\nAlso, I am not sure this is actually true now for the current\nimplementation. I am in favor of not specifying it.\n\nOn Tue, Mar 20, 2012 at 11:19 AM,  <trolleriprofessorn@gmail.com> wrote:\n> It would be nice to add that Sort makes at most O(n log n) calls to the\n> Interface methods.\n>\n> http://codereview.appspot.com/5855044/\n",
			"disapproval": false,
			"date": "2012-03-20 18:27:59.328393",
			"approval": false
		},
		{
			"sender": "trolleriprofessorn@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"trolleriprofessorn@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It is true (after the heapsort CL). In this case I would say it's important to document this fact. Most languages offer system sorts with quadratic worst-case time. Also, there are DoS attacks that use this weakness of many quicksort implementations.\n\nOn 2012/03/20 18:27:59, gri wrote:\n> We generally don't have performance guarantees in the docs, I think.\n> Also, I am not sure this is actually true now for the current\n> implementation. I am in favor of not specifying it.\n> \n> On Tue, Mar 20, 2012 at 11:19 AM,  <mailto:trolleriprofessorn@gmail.com> wrote:\n> > It would be nice to add that Sort makes at most O(n log n) calls to the\n> > Interface methods.\n> >\n> > http://codereview.appspot.com/5855044/",
			"disapproval": false,
			"date": "2012-03-20 18:32:13.250375",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Feel free to pursue it in a subsequent CL.  My immediate itch was just\nfixing the lack of documentation.\n\n\nOn Tue, Mar 20, 2012 at 12:38 PM, <trolleriprofessorn@gmail.com> wrote:\n\n> Documenting DoS attacks certainly would be a very bad idea. I only\n> suggested\n> adding information about the running time. This clearly is important\n> information to have when you call a library function. The origial CL\n> 4591051\n> that removed the quadratic running time fixed a long standing issue 467.\n> So yes, people are interested in knowing this.\n>\n>\n>\n> On 2012/03/20 18:40:18, bradfitz wrote:\n>\n>> Documenting all the ways in which we can't be attacked seems\n>>\n> incomplete and\n>\n>> overly hopeful, not to mention verbose.\n>>\n>\n> http://codereview.appspot.com/**5855044/<http://codereview.appspot.com/5855044/>\n>\n",
			"disapproval": false,
			"date": "2012-03-20 19:40:37.371939",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5855044: sort: document two undocumented functions",
	"created": "2012-03-20 18:09:46.398481",
	"patchsets": [
		1,
		1002,
		3002,
		11001,
		8003
	],
	"modified": "2012-03-20 20:02:12.250961",
	"closed": true,
	"issue": 5855044
}