{
	"description": "net: fix crash of Listen with \"\" or nil laddr\n\nFixes issue 3584.",
	"cc": [
		"dave@cheney.net",
		"dsymonds@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Mikio, thank you for fixing this issue, please see my comments below.\n\nhttp://codereview.appspot.com/6119043/diff/5003/src/pkg/net/unicast_test.go\nFile src/pkg/net/unicast_test.go (right):\n\nhttp://codereview.appspot.com/6119043/diff/5003/src/pkg/net/unicast_test.go#newcode549\nsrc/pkg/net/unicast_test.go:549: t.Fatalf(\"panicked\")\nShould you print the value of p ?\n\nhttp://codereview.appspot.com/6119043/diff/5003/src/pkg/net/unicast_test.go#newcode555\nsrc/pkg/net/unicast_test.go:555: }\nDo you need to test Listen(\"udp\", \"\") etc ?",
			"disapproval": false,
			"date": "2012-04-24 09:15:57.471235",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for your review.\nI'll submit this CL after Go 1.0.1 release.\n\nOn Tue, Apr 24, 2012 at 6:53 PM,  <dave@cheney.net> wrote:\n> LGTM.\n>\n> I was uncomfortable that a nil laddr value got down so deep in the\n> package internals, but looking at the rest of favoriteAddrFamily() it\n> already expects laddr to be nil in other cases. It's good there are\n> tests to validate this behaviour now.\n>\n> http://codereview.appspot.com/6119043/\n",
			"disapproval": false,
			"date": "2012-04-25 00:47:56.811212",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"dsymonds@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6119043/diff/12001/src/pkg/net/ipsock_posix.go\nFile src/pkg/net/ipsock_posix.go (right):\n\nhttp://codereview.appspot.com/6119043/diff/12001/src/pkg/net/ipsock_posix.go#newcode101\nsrc/pkg/net/ipsock_posix.go:101: if laddr == nil {\nOn 2012/04/25 02:01:11, rsc wrote:\n> This seems wrong to me.  Why should \"\" be tcp4-only?\n\noops, you are right. thx.",
			"disapproval": false,
			"date": "2012-04-25 03:21:13.848979",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-24 06:29:21.047188",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-24 06:34:30.867103",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"dsymonds@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, dsymonds@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-25 03:23:13.068002",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry this CL fixes issue 3548, not 3584.\n\nOn Wed, Apr 25, 2012 at 12:29 PM,  <mikioh.mikioh@gmail.com> wrote:\n> *** Submitted as\n> http://code.google.com/p/go/source/detail?r=b07591eb8077 ***\n>\n>\n> net: fix crash of Listen with \"\" or nil laddr\n>\n> Fixes issue 3584.\n>\n> R=dave, dsymonds, rsc\n> CC=golang-dev\n> http://codereview.appspot.com/6119043\n>\n>\n> http://codereview.appspot.com/6119043/\n",
			"disapproval": false,
			"date": "2012-04-25 04:24:29.405487",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Apr 25, 2012 at 10:47 AM, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\n\n> I'll submit this CL after Go 1.0.1 release.\n\nDon't bother waiting. Go 1.0.1 is going to be a set of cherrypicks,\nnot a fresh cut on the main branch.\n",
			"disapproval": false,
			"date": "2012-04-25 00:49:00.360321",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-24 09:37:07.013979",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6119043/diff/5003/src/pkg/net/unicast_test.go\nFile src/pkg/net/unicast_test.go (right):\n\nhttp://codereview.appspot.com/6119043/diff/5003/src/pkg/net/unicast_test.go#newcode549\nsrc/pkg/net/unicast_test.go:549: t.Fatalf(\"panicked\")\nOn 2012/04/24 09:15:57, dfc wrote:\n> Should you print the value of p ?\n\nnope, thx.\n\nhttp://codereview.appspot.com/6119043/diff/5003/src/pkg/net/unicast_test.go#newcode549\nsrc/pkg/net/unicast_test.go:549: t.Fatalf(\"panicked\")\nOn 2012/04/24 09:15:57, dfc wrote:\n> Should you print the value of p ?\n\nDone.\n\nhttp://codereview.appspot.com/6119043/diff/5003/src/pkg/net/unicast_test.go#newcode555\nsrc/pkg/net/unicast_test.go:555: }\nOn 2012/04/24 09:15:57, dfc wrote:\n> Do you need to test Listen(\"udp\", \"\") etc ?\n\ngood catch, I forgot ListenPacket.\n\nhttp://codereview.appspot.com/6119043/diff/5003/src/pkg/net/unicast_test.go#newcode555\nsrc/pkg/net/unicast_test.go:555: }\nOn 2012/04/24 09:15:57, dfc wrote:\n> Do you need to test Listen(\"udp\", \"\") etc ?\n\nDone.",
			"disapproval": false,
			"date": "2012-04-24 09:36:22.967763",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. \n\nI was uncomfortable that a nil laddr value got down so deep in the package internals, but looking at the rest of favoriteAddrFamily() it already expects laddr to be nil in other cases. It's good there are tests to validate this behaviour now.",
			"disapproval": false,
			"date": "2012-04-24 09:53:05.204553",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"dsymonds@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-04-25 03:28:35.153297",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"dsymonds@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I would have expected the laddr == nil to happen after the mapping check.\n\nhttp://codereview.appspot.com/6119043/diff/12001/src/pkg/net/ipsock_posix.go\nFile src/pkg/net/ipsock_posix.go (right):\n\nhttp://codereview.appspot.com/6119043/diff/12001/src/pkg/net/ipsock_posix.go#newcode101\nsrc/pkg/net/ipsock_posix.go:101: if laddr == nil {\nThis seems wrong to me.  Why should \"\" be tcp4-only?",
			"disapproval": false,
			"date": "2012-04-25 02:01:11.702003",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"dsymonds@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b07591eb8077 ***\n\nnet: fix crash of Listen with \"\" or nil laddr\n\nFixes issue 3584.\n\nR=dave, dsymonds, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6119043",
			"disapproval": false,
			"date": "2012-04-25 03:29:24.761328",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 6119043: net: fix crash of Listen with \"\" or nil laddr",
	"created": "2012-04-24 06:24:12.362128",
	"patchsets": [
		9001,
		5003,
		12001,
		13001,
		8006
	],
	"modified": "2012-04-25 03:29:26.709618",
	"closed": true,
	"issue": 6119043
}