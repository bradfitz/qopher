{
	"description": "net: delete DialOpt and DialOption; add struct Dialer\n\nPer discussions on golang-nuts and golang-dev:\n\"Some concerns with DialOpt\"\nhttps://groups.google.com/d/msg/golang-nuts/Hfh9aqhXyUw/W3uYi8lOdKcJ\nhttps://groups.google.com/d/msg/golang-dev/37omSQeWv4Y/KASGIfPpXh0J",
	"cc": [
		"golang-dev@googlegroups.com",
		"google@julienschmidt.com",
		"r@golang.org"
	],
	"reviewers": [
		"rogpeppe@gmail.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-04-02 18:58:15.847690",
			"approval": false
		},
		{
			"sender": "google@julienschmidt.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"google@julienschmidt.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This also fixes the timeout behavior, doesn't it?\n\nIn general this LGTM\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial_gen.go\nFile src/pkg/net/dial_gen.go (right):\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial_gen.go#newcode17\nsrc/pkg/net/dial_gen.go:17: func resolveAndDialChannel(net, addr string, localAddr Addr, deadline time.Time) (Conn, error) {\nWhy do you pass a deadline here, when you internally calculate a timeout anyways?",
			"disapproval": false,
			"date": "2013-04-02 19:40:45.604520",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"google@julienschmidt.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go\nFile src/pkg/net/dial.go (right):\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go#newcode14\nsrc/pkg/net/dial.go:14: // All fields may be their zero value.\nmaybe\n// The zero value for each field is its default.\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go#newcode18\nsrc/pkg/net/dial.go:18: // earlier.\ndefault is ...\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go#newcode22\nsrc/pkg/net/dial.go:22: // will fail. If Timeout is set, it may fail earlier.\ndefault is...\n(if it's zero, isn't the deadline in the past?)\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go#newcode28\nsrc/pkg/net/dial.go:28: LocalAddr Addr\ndefault is ...\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go#newcode110\nsrc/pkg/net/dial.go:110: // by a colon and a protocol number or name and the addr must be a\ns/addr/address/ since you've done that for net.\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial_gen.go\nFile src/pkg/net/dial_gen.go (right):\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial_gen.go#newcode15\nsrc/pkg/net/dial_gen.go:15: // hasn't been pushed down into the pollserver. (plan9 and some old\nPlan 9\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial_gen.go#newcode22\nsrc/pkg/net/dial_gen.go:22: t := time.NewTimer(timeout)\nif timeout is zero, why go through all this? instead of t.C below you could have a channel variable that is either nil or t.C.\n\n(is that a common case? if not, don't worry about it)",
			"disapproval": false,
			"date": "2013-04-02 19:42:53.534440",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"google@julienschmidt.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, google@julienschmidt.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-04-02 19:55:53.561230",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"google@julienschmidt.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go\nFile src/pkg/net/dial.go (right):\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go#newcode14\nsrc/pkg/net/dial.go:14: // All fields may be their zero value.\nOn 2013/04/02 19:42:53, r wrote:\n> maybe\n> // The zero value for each field is its default.\n\nThe default for plain func Dial?\n\nNot sure how to say that.\n\nMaybe:\n\n// The zero value for each field is equivalent to dialing\n// without any options, as done by the Dial function.\n\n?\n\nNot changed yet. Suggestions welcome.\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go#newcode18\nsrc/pkg/net/dial.go:18: // earlier.\nOn 2013/04/02 19:42:53, r wrote:\n> default is ...\n\nI took a shot at all of them. Please critique.\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go#newcode22\nsrc/pkg/net/dial.go:22: // will fail. If Timeout is set, it may fail earlier.\nOn 2013/04/02 19:42:53, r wrote:\n> default is...\n> (if it's zero, isn't the deadline in the past?)\n\nClarified. Maybe.\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go#newcode28\nsrc/pkg/net/dial.go:28: LocalAddr Addr\nOn 2013/04/02 19:42:53, r wrote:\n> default is ...\n\nDone.\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial.go#newcode110\nsrc/pkg/net/dial.go:110: // by a colon and a protocol number or name and the addr must be a\nOn 2013/04/02 19:42:53, r wrote:\n> s/addr/address/ since you've done that for net.\n\nDone.\n\nI only did s/net/network/ because everybody copies it in their packages and then shadows the \"net\" package with a net variable, preventing them from wrapping net.Dial in their Dial func.\n\nBut s/addr/address/ makes the text shorter too, so bonus.\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial_gen.go\nFile src/pkg/net/dial_gen.go (right):\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial_gen.go#newcode15\nsrc/pkg/net/dial_gen.go:15: // hasn't been pushed down into the pollserver. (plan9 and some old\nOn 2013/04/02 19:42:53, r wrote:\n> Plan 9\n\nDone.\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial_gen.go#newcode17\nsrc/pkg/net/dial_gen.go:17: func resolveAndDialChannel(net, addr string, localAddr Addr, deadline time.Time) (Conn, error) {\nOn 2013/04/02 19:40:45, julienschmidt wrote:\n> Why do you pass a deadline here, when you internally calculate a timeout\n> anyways?\n\nso it matches the signature of dial and resolveAndDial.\n\nhttps://codereview.appspot.com/8274043/diff/4001/src/pkg/net/dial_gen.go#newcode22\nsrc/pkg/net/dial_gen.go:22: t := time.NewTimer(timeout)\nOn 2013/04/02 19:42:53, r wrote:\n> if timeout is zero, why go through all this? instead of t.C below you could have\n> a channel variable that is either nil or t.C.\n> \n> (is that a common case? if not, don't worry about it)\n\nif timeout is zero, the deadline has already expired and it should return an error.  it's not common, and I don't want to duplicate the error logic up here, so I'm just letting the code below handle returning the error.",
			"disapproval": false,
			"date": "2013-04-02 19:56:03.269300",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"google@julienschmidt.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM with my few tweaks.\n\nhttps://codereview.appspot.com/8274043/diff/11001/src/pkg/net/dial.go\nFile src/pkg/net/dial.go (right):\n\nhttps://codereview.appspot.com/8274043/diff/11001/src/pkg/net/dial.go#newcode14\nsrc/pkg/net/dial.go:14: // All fields may be their zero value.\nan extended version of your rewrite:\n\n// The zero value for each field is equivalent to dialing\n// without that option. Dialing with the zero value of Dialer\n// is therefore equivalent to just calling the Dial function.\n\nhttps://codereview.appspot.com/8274043/diff/11001/src/pkg/net/dial.go#newcode30\nsrc/pkg/net/dial.go:30: // like Timeout.\n\"as with the Timeout option.\"\n\nhttps://codereview.appspot.com/8274043/diff/11001/src/pkg/net/dial.go#newcode41\nsrc/pkg/net/dial.go:41: // Or zero, if neither are set.\ns/are/is/",
			"disapproval": false,
			"date": "2013-04-02 20:08:17.303790",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"google@julienschmidt.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=64df8d0a25d3 ***\n\nnet: delete DialOpt and DialOption; add struct Dialer\n\nPer discussions on golang-nuts and golang-dev:\n\"Some concerns with DialOpt\"\nhttps://groups.google.com/d/msg/golang-nuts/Hfh9aqhXyUw/W3uYi8lOdKcJ\nhttps://groups.google.com/d/msg/golang-dev/37omSQeWv4Y/KASGIfPpXh0J\n\nR=golang-dev, google, r\nCC=golang-dev\nhttps://codereview.appspot.com/8274043",
			"disapproval": false,
			"date": "2013-04-02 20:24:19.957400",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"google@julienschmidt.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "much nicer. thanks a lot for pushing this change.",
			"disapproval": false,
			"date": "2013-04-03 13:41:52.013950",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 8274043: net: delete DialOpt and Dialer; add struct Dialer",
	"created": "2013-04-02 18:57:45.501790",
	"patchsets": [
		1,
		2001,
		4001,
		11001,
		18001,
		18008
	],
	"modified": "2013-04-03 13:41:52.136480",
	"closed": true,
	"issue": 8274043
}