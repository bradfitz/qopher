{
	"description": "    crypto/blowfish: exposing the blowfish key schedule\n\nMostly useful for the coming crypto/bcrypt package",
	"cc": [
		"bradfitz@golang.org",
		"agl@chromium.org",
		"rsc@golang.org",
		"agl@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"bradfitz@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: agl@golang.org, golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-14 02:39:05.123580",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/14 18:53:37, agl wrote:\n> http://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/block.go\n> File src/pkg/crypto/blowfish/block.go (right):\n> \n> http://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/block.go#newcode12\n> src/pkg/crypto/blowfish/block.go:12: func ExpandKey(key []byte, c *Cipher) {\n> Looks like this should be a method on Cipher?\n> \n\nI thought about it, but I didn't want to clutter up the documentation for Cipher itself. Is there precedence either way? I'm lacking proper taste, maybe.\n\n> http://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/cipher.go\n> File src/pkg/crypto/blowfish/cipher.go (right):\n> \n> http://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/cipher.go#newcode35\n> src/pkg/crypto/blowfish/cipher.go:35: err := initCipher(key, &result)\n> if err := initCipher(key, &result); err != nil {\n>   return nil, err\n> }\n> \n\nI had to rework this restriction in NewSaltedCipher. It turns out the blowfish algorithm used in every bcrypt implementation ignores key length completely. I emailed Schneier about the >56 byte case, and he said it was no big deal to ignore it. Which is good, because I don't want to be the guy that causes every Go web app in the world to tell people their passwords are too long. The 4 byte case is harder for me to drop (and I haven't yet), but I'm thinking seriously about going with compatibility here.\n \n> http://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/cipher.go#newcode46\n> src/pkg/crypto/blowfish/cipher.go:46: func NewSaltedCipher(key []byte, salt\n> []byte) (*Cipher, os.Error) {\n> func NewSaltedCipher(key, salt []byte) (*Cipher, os.Error) {\n> \n> http://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/cipher.go#newcode48\n> src/pkg/crypto/blowfish/cipher.go:48: err := initCipher(key, &result)\n> ditto with the if",
			"disapproval": false,
			"date": "2011-09-15 10:37:39.026680",
			"approval": false
		},
		{
			"sender": "agl@chromium.org",
			"recipients": [
				"jeff@somethingsimilar.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/block.go\nFile src/pkg/crypto/blowfish/block.go (right):\n\nhttp://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/block.go#newcode12\nsrc/pkg/crypto/blowfish/block.go:12: func ExpandKey(key []byte, c *Cipher) {\nLooks like this should be a method on Cipher?\n\nhttp://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/cipher.go\nFile src/pkg/crypto/blowfish/cipher.go (right):\n\nhttp://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/cipher.go#newcode35\nsrc/pkg/crypto/blowfish/cipher.go:35: err := initCipher(key, &result)\nif err := initCipher(key, &result); err != nil {\n  return nil, err\n}\n\nhttp://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/cipher.go#newcode46\nsrc/pkg/crypto/blowfish/cipher.go:46: func NewSaltedCipher(key []byte, salt []byte) (*Cipher, os.Error) {\nfunc NewSaltedCipher(key, salt []byte) (*Cipher, os.Error) {\n\nhttp://codereview.appspot.com/5013043/diff/4001/src/pkg/crypto/blowfish/cipher.go#newcode48\nsrc/pkg/crypto/blowfish/cipher.go:48: err := initCipher(key, &result)\nditto with the if",
			"disapproval": false,
			"date": "2011-09-14 18:53:37.581656",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jeff@somethingsimilar.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Some documentation nits; otherwise looks good.\n\nhttp://codereview.appspot.com/5013043/diff/8003/src/pkg/crypto/blowfish/block.go\nFile src/pkg/crypto/blowfish/block.go (right):\n\nhttp://codereview.appspot.com/5013043/diff/8003/src/pkg/crypto/blowfish/block.go#newcode10\nsrc/pkg/crypto/blowfish/block.go:10: // by the crypto/bcrypt package to re-use the blowfish key schedule during its\ns;crypto/;;\ns/re-use/reuse/\ns/blowfish/Blowfish/g to match rest of doc comments.",
			"disapproval": false,
			"date": "2011-09-15 15:23:55.392813",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org, agl@chromium.org (cc: agl@golang.org, golang-dev@googlegroups.com, rsc@golang.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-15 10:51:04.922407",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org, agl@chromium.org, rsc@golang.org (cc: agl@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-16 00:57:32.813048",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"jeff@somethingsimilar.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM. Will land tomorrow.\n\nhttp://codereview.appspot.com/5013043/diff/13002/src/pkg/crypto/blowfish/blowfish_test.go\nFile src/pkg/crypto/blowfish/blowfish_test.go (right):\n\nhttp://codereview.appspot.com/5013043/diff/13002/src/pkg/crypto/blowfish/blowfish_test.go#newcode195\nsrc/pkg/crypto/blowfish/blowfish_test.go:195: key := []byte{}\nvar key []byte (I'll fix that up during landing.)",
			"disapproval": false,
			"date": "2011-09-16 20:45:27.361103",
			"approval": true
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Thank you.\n\nOn Fri, Sep 16, 2011 at 1:45 PM,  <agl@golang.org> wrote:\n> LGTM. Will land tomorrow.\n>\n>\n> http://codereview.appspot.com/5013043/diff/13002/src/pkg/crypto/blowfish/blowfish_test.go\n> File src/pkg/crypto/blowfish/blowfish_test.go (right):\n>\n> http://codereview.appspot.com/5013043/diff/13002/src/pkg/crypto/blowfish/blowfish_test.go#newcode195\n> src/pkg/crypto/blowfish/blowfish_test.go:195: key := []byte{}\n> var key []byte (I'll fix that up during landing.)\n>\n> http://codereview.appspot.com/5013043/\n>\n",
			"disapproval": false,
			"date": "2011-09-16 20:51:20.756292",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"jeff@somethingsimilar.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=29a09c16bc16 ***\n\n    crypto/blowfish: exposing the blowfish key schedule\n\nMostly useful for the coming crypto/bcrypt package\n\nR=bradfitz, agl, rsc, agl\nCC=golang-dev\nhttp://codereview.appspot.com/5013043\n\nCommitter: Adam Langley <agl@golang.org>",
			"disapproval": false,
			"date": "2011-09-19 14:21:48.951989",
			"approval": false
		}
	],
	"owner_email": "jeff@somethingsimilar.com",
	"private": false,
	"base_url": "",
	"owner": "jmhodges",
	"subject": "code review 5013043:     crypto/blowfish: exposing the blowfish key schedule",
	"created": "2011-09-14 02:38:33.054175",
	"patchsets": [
		1,
		1002,
		4001,
		6002,
		10001,
		8002,
		8003,
		13002
	],
	"modified": "2011-09-19 17:13:42.456583",
	"closed": true,
	"issue": 5013043
}