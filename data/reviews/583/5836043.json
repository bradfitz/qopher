{
	"description": "goplay: add 'Format' button",
	"cc": [
		"golang-dev@googlegroups.com",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go-playground",
			"disapproval": false,
			"date": "2012-03-15 09:27:32.226076",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI just believe the JS code.\n\nThe button should be called \"format\" (the other one is called \"compile\" not \"cmpl\".\n\nThe Go code can be slightly simplified.\n\nhttp://codereview.appspot.com/5836043/diff/6/app.yaml\nFile app.yaml (right):\n\nhttp://codereview.appspot.com/5836043/diff/6/app.yaml#newcode12\napp.yaml:12: - url: /(|compile|fmt|share)\ns/fmt/format/ (?)\n\nhttp://codereview.appspot.com/5836043/diff/6/goplay/edit.html\nFile goplay/edit.html (right):\n\nhttp://codereview.appspot.com/5836043/diff/6/goplay/edit.html#newcode16\ngoplay/edit.html:16: \"fmtEl\":      \"#fmt\",\ns/fmt/format/\n\nhttp://codereview.appspot.com/5836043/diff/6/goplay/edit.html#newcode28\ngoplay/edit.html:28: <input type=\"button\" value=\"Format\" id=\"fmt\">\nformat\n\nhttp://codereview.appspot.com/5836043/diff/6/goplay/fmt.go\nFile goplay/fmt.go (right):\n\nhttp://codereview.appspot.com/5836043/diff/6/goplay/fmt.go#newcode18\ngoplay/fmt.go:18: http.HandleFunc(\"/fmt\", fmtHandler)\n/format\n\nhttp://codereview.appspot.com/5836043/diff/6/goplay/fmt.go#newcode38\ngoplay/fmt.go:38: r := strings.NewReader(body)\nyou don't need a reader. you should be able to just pass the body to the parser. it takes whatever you throw at it (well, almost).",
			"disapproval": false,
			"date": "2012-03-15 22:04:56.874316",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5836043/diff/6/goplay/fmt.go\nFile goplay/fmt.go (right):\n\nhttp://codereview.appspot.com/5836043/diff/6/goplay/fmt.go#newcode18\ngoplay/fmt.go:18: http.HandleFunc(\"/fmt\", fmtHandler)\nOn 2012/03/15 22:04:56, gri wrote:\n> /format\n\nI'd really prefer to keep all of it as \"fmt\". The command is \"go fmt\" or \"gofmt\". When speaking out loud I actually say \"go fmt\" not \"go format\". It's a goism, let's embrace it. :-)\n\nI actually think /compile should be /run but it's entrenched in several other places already.\n\nhttp://codereview.appspot.com/5836043/diff/6/goplay/fmt.go#newcode38\ngoplay/fmt.go:38: r := strings.NewReader(body)\nOn 2012/03/15 22:04:56, gri wrote:\n> you don't need a reader. you should be able to just pass the body to the parser.\n> it takes whatever you throw at it (well, almost).\n\nDone.",
			"disapproval": false,
			"date": "2012-03-15 22:24:43.518453",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go-playground/source/detail?r=51280fc321e0 ***\n\ngoplay: add 'Format' button\n\nR=golang-dev, gri\nCC=golang-dev\nhttp://codereview.appspot.com/5836043",
			"disapproval": false,
			"date": "2012-03-15 22:25:51.924016",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5836043: goplay: add 'Format' button",
	"created": "2012-03-15 09:27:23.265004",
	"patchsets": [
		1,
		6,
		7002
	],
	"modified": "2012-03-15 22:25:53.691585",
	"closed": true,
	"issue": 5836043
}