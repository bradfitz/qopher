{
	"description": "misc/vim: Allow multiple GOOS/GOARCH.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"dominik.honnef@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Oops sorry.",
			"disapproval": false,
			"date": "2013-05-08 02:02:53.254650",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "`go env GOROOT` returns multiple lines if there are some GOOS/GOARCH in pkg\ndirectory.",
			"disapproval": false,
			"date": "2013-05-08 02:01:04.698680",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "`go env GOROOT` returns multiple lines if there are some GOOS/GOARCH in pkg directory.",
			"disapproval": false,
			"date": "2013-05-08 01:59:39.967910",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttp://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-05-08 02:02:33.117450",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is too late for go1.1, but can you please remind me of this after\r\ngo1.1 is released?\r\n",
			"disapproval": false,
			"date": "2013-05-08 02:50:00.263500",
			"approval": false
		},
		{
			"sender": "dominik.honnef@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dominik.honnef@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hm, I can't reproduce the \n\n> returns multiple lines if there are some GOOS/GOARCH in pkg directory.\n\nthing here. What exactly is up with that?",
			"disapproval": false,
			"date": "2013-05-08 09:15:57.455730",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Try to create directory in pkg.\r\n\r\n$ ls\r\nlinux_amd64\r\n\r\n$ mkdir linux_amd64_tmp\r\n\r\nThis make break.\r\n\r\nOn Wednesday, May 8, 2013 6:15:57 PM UTC+9, Dominik Honnef wrote:\r\n>\r\n> Hm, I can't reproduce the \r\n>\r\n> > returns multiple lines if there are some GOOS/GOARCH in pkg directory. \r\n>\r\n> thing here. What exactly is up with that? \r\n>\r\n> https://codereview.appspot.com/9293043/ \r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-08 09:28:35.103310",
			"approval": false
		},
		{
			"sender": "dominik.honnef@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dominik.honnef@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "dominikh@dominikh-pc $ go env GOROOT\n/home/dominikh/go\ndominikh@dominikh-pc $ mkdir $GOROOT/pkg/linux_amd64_tmp\ndominikh@dominikh-pc $ go env GOROOT\n/home/dominikh/go\ndominikh@dominikh-pc $ go version\ngo version devel +aa1ff597baa5 Wed Apr 03 20:32:50 2013 +1100 linux/amd64\n\nFor what it's worth, I already had directories for all GOOS/GOARCH combinations in /pkg/, since I have cross compilation for all of those set up. So I can't still reproduce it.",
			"disapproval": false,
			"date": "2013-05-08 09:35:54.098630",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Look here\r\n\r\nhttps://codereview.appspot.com/9293043/diff/6001/misc/vim/autoload/go/complete.vim#new-line-8\r\n\r\nProbably, your environment doesn't set \"*\" to s:goos or s:goarch.\r\nOn my environment, it is set as '*'. Then,\r\n\r\n  expand(dir . '/pkg/' . s:goos . '_' . s:goarch)\r\n\r\nreturn multiple-line.\r\n\r\nOn Wednesday, May 8, 2013 6:35:54 PM UTC+9, Dominik Honnef wrote:\r\n>\r\n> dominikh@dominikh-pc $ go env GOROOT \r\n> /home/dominikh/go \r\n> dominikh@dominikh-pc $ mkdir $GOROOT/pkg/linux_amd64_tmp \r\n> dominikh@dominikh-pc $ go env GOROOT \r\n> /home/dominikh/go \r\n> dominikh@dominikh-pc $ go version \r\n> go version devel +aa1ff597baa5 Wed Apr 03 20:32:50 2013 +1100 \r\n> linux/amd64 \r\n>\r\n> For what it's worth, I already had directories for all GOOS/GOARCH \r\n> combinations in /pkg/, since I have cross compilation for all of those \r\n> set up. So I can't still reproduce it. \r\n>\r\n> https://codereview.appspot.com/9293043/ \r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-08 10:10:20.265740",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dominik.honnef@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9293043/diff/16001/misc/vim/autoload/go/complete.vim\nFile misc/vim/autoload/go/complete.vim (right):\n\nhttps://codereview.appspot.com/9293043/diff/16001/misc/vim/autoload/go/complete.vim#newcode60\nmisc/vim/autoload/go/complete.vim:60: let root = split(expand(dir . '/pkg/' . s:goos . '_' . s:goarch), \"\\n\")\nOn 2013/07/02 03:20:50, mattn wrote:\n> Yes, this return multiple-lines if several directries are exists in /pkg/. The\n> s:goarch is '*' on my environment.\n> \n> On 2013/07/02 03:02:16, dsymonds wrote:\n> > what is this splitting? shouldn't this expand to a single thing?\n> > \n> > if this is to permit this not matching, make that explicit instead.\n> > \n> > let root = expand(...)\n> > if root == ''\n> >   continue\n> > endif\n> \n\nokay, that wasn't obvious. Add a comment.\n\n\" this may expand to multiple lines",
			"disapproval": false,
			"date": "2013-07-02 04:08:57.433690",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dominik.honnef@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-02 05:23:02.150570",
			"approval": true
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dominik.honnef@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/02 04:08:57, dsymonds wrote:\n> https://codereview.appspot.com/9293043/diff/16001/misc/vim/autoload/go/complete.vim\n> File misc/vim/autoload/go/complete.vim (right):\n> \n> https://codereview.appspot.com/9293043/diff/16001/misc/vim/autoload/go/complete.vim#newcode60\n> misc/vim/autoload/go/complete.vim:60: let root = split(expand(dir . '/pkg/' .\n> s:goos . '_' . s:goarch), \"\\n\")\n> On 2013/07/02 03:20:50, mattn wrote:\n> > Yes, this return multiple-lines if several directries are exists in /pkg/. The\n> > s:goarch is '*' on my environment.\n> > \n> > On 2013/07/02 03:02:16, dsymonds wrote:\n> > > what is this splitting? shouldn't this expand to a single thing?\n> > > \n> > > if this is to permit this not matching, make that explicit instead.\n> > > \n> > > let root = expand(...)\n> > > if root == ''\n> > >   continue\n> > > endif\n> > \n> \n> okay, that wasn't obvious. Add a comment.\n> \n> \" this may expand to multiple lines\n\nDone",
			"disapproval": false,
			"date": "2013-07-02 04:53:20.687490",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dominik.honnef@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9293043/diff/16001/misc/vim/autoload/go/complete.vim\nFile misc/vim/autoload/go/complete.vim (right):\n\nhttps://codereview.appspot.com/9293043/diff/16001/misc/vim/autoload/go/complete.vim#newcode47\nmisc/vim/autoload/go/complete.vim:47: let pathsep = (has('win32')||has('win64')) ? ';' : ':'\nOn 2013/07/02 03:02:16, dsymonds wrote:\n> may as well use existing vars for this. please frame it to make windows the\n> exceptional case too.\n> \n> let sep = ':'\n> if s:goos == 'windows'\n>   let sep = ';'\n> endif\n\nDone.\n\nhttps://codereview.appspot.com/9293043/diff/16001/misc/vim/autoload/go/complete.vim#newcode60\nmisc/vim/autoload/go/complete.vim:60: let root = split(expand(dir . '/pkg/' . s:goos . '_' . s:goarch), \"\\n\")\nYes, this return multiple-lines if several directries are exists in /pkg/. The s:goarch is '*' on my environment.\n\nOn 2013/07/02 03:02:16, dsymonds wrote:\n> what is this splitting? shouldn't this expand to a single thing?\n> \n> if this is to permit this not matching, make that explicit instead.\n> \n> let root = expand(...)\n> if root == ''\n>   continue\n> endif",
			"disapproval": false,
			"date": "2013-07-02 03:20:49.906100",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dominik.honnef@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, dominik.honnef@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-02 03:20:24.940390",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dominik.honnef@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=dfb6b95d3a98 ***\n\nmisc/vim: Allow multiple GOOS/GOARCH.\n\nR=golang-dev, dsymonds, dominik.honnef\nCC=golang-dev\nhttps://codereview.appspot.com/9293043\n\nCommitter: David Symonds <dsymonds@golang.org>",
			"disapproval": false,
			"date": "2013-07-02 05:24:15.711810",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dominik.honnef@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2013-07-02 02:18:43.812440",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dominik.honnef@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9293043/diff/16001/misc/vim/autoload/go/complete.vim\nFile misc/vim/autoload/go/complete.vim (right):\n\nhttps://codereview.appspot.com/9293043/diff/16001/misc/vim/autoload/go/complete.vim#newcode47\nmisc/vim/autoload/go/complete.vim:47: let pathsep = (has('win32')||has('win64')) ? ';' : ':'\nmay as well use existing vars for this. please frame it to make windows the exceptional case too.\n\nlet sep = ':'\nif s:goos == 'windows'\n  let sep = ';'\nendif\n\nhttps://codereview.appspot.com/9293043/diff/16001/misc/vim/autoload/go/complete.vim#newcode60\nmisc/vim/autoload/go/complete.vim:60: let root = split(expand(dir . '/pkg/' . s:goos . '_' . s:goarch), \"\\n\")\nwhat is this splitting? shouldn't this expand to a single thing?\n\nif this is to permit this not matching, make that explicit instead.\n\nlet root = expand(...)\nif root == ''\n  continue\nendif",
			"disapproval": false,
			"date": "2013-07-02 03:02:15.759850",
			"approval": false
		}
	],
	"owner_email": "mattn.jp@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mattn",
	"subject": "code review 9293043: misc/vim: Allow multiple GOOS/GOARCH.",
	"created": "2013-05-08 01:54:15.082170",
	"patchsets": [
		1,
		2001,
		6001,
		16001,
		22001,
		24001,
		30001
	],
	"modified": "2013-07-02 05:24:16.499130",
	"closed": false,
	"issue": 9293043
}