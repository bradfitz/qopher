{
	"description": "syscall: fix prototype of Fchflags (API change)\nAPI change, but the old API is obviously wrong.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"r@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-05-03 09:10:20.454340",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd like to get this in before Go 1.1, because:\n1. it fixes a broken API that is otherwise useless,\n2. it's fairly isolated change,\n3. given our policy of no API change in minor releases, if we don't fix it\nin 1.1, it will have to wait for 1.2.\n\ncomments?",
			"disapproval": false,
			"date": "2013-05-03 09:13:11.139750",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nPlease also add a note to doc/go1.1.html.\n\nWait for r.",
			"disapproval": false,
			"date": "2013-05-03 13:15:32.755160",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/03 13:15:32, iant wrote:\n> Please also add a note to doc/go1.1.html.\nDone. PTAL.",
			"disapproval": false,
			"date": "2013-05-03 14:35:15.405390",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9157044/diff/13001/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/9157044/diff/13001/doc/go1.1.html#newcode1026\ndoc/go1.1.html:1026: The <a href=\"/pkg/syscall/\"><code>syscall</code></a> package's <a href=\"/pkg/syscall/#Fchflags\"><code>Fchflags</code></a> function on various BSDs (including Darwin) has changed parameter type: it now takes an int as the first parameter, instead of a string, which is clearly a mistake in Go 1.0. Since this API change fixes a bug, it is permitted by the Go 1 compatibility rules.\nfold these long  lines. start sentences on a new line. see the rest of the document for guidance.\n\ns/parameter type/signature/\ns/: i/.\\nI/\ns/, which.*1.0//",
			"disapproval": false,
			"date": "2013-05-03 14:42:22.982150",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nhttps://codereview.appspot.com/9157044/diff/13001/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/9157044/diff/13001/doc/go1.1.html#newcode1026\ndoc/go1.1.html:1026: The <a href=\"/pkg/syscall/\"><code>syscall</code></a> package's <a href=\"/pkg/syscall/#Fchflags\"><code>Fchflags</code></a> function on various BSDs (including Darwin) has changed parameter type: it now takes an int as the first parameter, instead of a string, which is clearly a mistake in Go 1.0. Since this API change fixes a bug, it is permitted by the Go 1 compatibility rules.\nOn 2013/05/03 14:42:23, r wrote:\n> fold these long  lines. start sentences on a new line. see the rest of the\n> document for guidance.\n> \n> s/parameter type/signature/\n> s/: i/.\\nI/\n> s/, which.*1.0//\nDone.",
			"disapproval": false,
			"date": "2013-05-03 15:00:26.522620",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/9157044/diff/21001/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/9157044/diff/21001/doc/go1.1.html#newcode1029\ndoc/go1.1.html:1029: It now takes an int as the first parameter, instead of a string.\ns/,//",
			"disapproval": false,
			"date": "2013-05-03 15:24:14.912120",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I thought we were committed to keeping the old APIs even in the case of\r\nbugs like this. In this case I would introduce an Fchflags2 or something\r\nlike that. But if someone can justify it using the compatibility doc, fine.\r\n\r\nFWIW, the thing about \"since this fixes a bug the API change is allowed\" is\r\nnow in the doc twice, and I don't believe we ever said that was the case.\r\nAnything can be justified by \"this fixes a bug\". But I won't argue more\r\nabout it.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-05-03 16:01:48.541530",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I've been taking the \"Bugs\" clause to cover this case, but on\r\nrereading it's not so clear. Still, I believe it's warranted since the\r\nexisting API is broken enough to be useless and I don't believe it's a\r\ndisservice to repair the mistake: no existing code can use the old\r\nfunction profitably.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-05-03 16:58:48.213850",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, May 4, 2013 at 12:01 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> I thought we were committed to keeping the old APIs even in the case of\r\n> bugs like this. In this case I would introduce an Fchflags2 or something\r\n> like that. But if someone can justify it using the compatibility doc, fine.\r\n>\r\nI think the guarding condition is: don't break existing Go 1 code. The old\r\nAPI is not at all usable\r\nand there isn't workaround available to use that API.\r\n\r\n>\r\n> FWIW, the thing about \"since this fixes a bug the API change is allowed\"\r\n> is now in the doc twice, and I don't believe we ever said that was the\r\n> case. Anything can be justified by \"this fixes a bug\". But I won't argue\r\n> more about it.\r\n>\r\nright, i copied the clause from the net.ListenUnixgram case.\r\ndo you want me to delete this clause or rephrase it?\r\n",
			"disapproval": false,
			"date": "2013-05-03 17:06:26.893650",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, May 3, 2013 at 9:01 AM, Russ Cox <rsc@golang.org> wrote:\r\n> I thought we were committed to keeping the old APIs even in the case of bugs\r\n> like this. In this case I would introduce an Fchflags2 or something like\r\n> that. But if someone can justify it using the compatibility doc, fine.\r\n>\r\n> FWIW, the thing about \"since this fixes a bug the API change is allowed\" is\r\n> now in the doc twice, and I don't believe we ever said that was the case.\r\n> Anything can be justified by \"this fixes a bug\". But I won't argue more\r\n> about it.\r\n\r\nThis is a case where the old code was completely non-functional.  Any\r\nprogram that called it was broken.  There isn't any wiggle room about\r\ndifferent behaviour on different systems or anything.  So I think this\r\nis a reasonable place to break the API.  There is a \"Bugs\" section in\r\nthe compatibility doc, and I think it covers this sort of case.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2013-05-03 17:56:54.068360",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please check this in.\n\n-rob",
			"disapproval": false,
			"date": "2013-05-06 20:12:42.547510",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=34b8901146ac ***\n\nsyscall: fix prototype of Fchflags (API change)\nAPI change, but the old API is obviously wrong.\n\nR=golang-dev, iant, r, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/9157044",
			"disapproval": false,
			"date": "2013-05-06 21:20:19.180890",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 9157044: syscall: fix prototype of Fchflags (API change)",
	"created": "2013-05-03 08:50:46.334220",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		13001,
		14015,
		21001,
		27001,
		34001
	],
	"modified": "2013-05-06 21:20:25.920670",
	"closed": true,
	"issue": 9157044
}