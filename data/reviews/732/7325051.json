{
	"description": "go/types: include package import path in NamedType.String().\n\nThis avoids ambiguity and makes the diagnostics closer to\nthose issued by gc, but it is more verbose since it qualifies\nintra-package references.\n\nWithout extra context---e.g. a 'from *Package' parameter to\nType.String()---we are forced to err on one side or the other.\n\nAlso, cosmetic changes to exp/ssa:\n- Remove package-qualification workaround in Function.FullName.\n- Always set go/types.Package.Path field to the import path,\n  since we know the correct path at this point.\n- In Function.DumpTo, show variadic '...' and result type info,\n  and delete now-redundant \"# Type: \" line.",
	"cc": [
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI assume this depends on my pending QualifiedName change?",
			"disapproval": false,
			"date": "2013-02-19 19:19:08.110400",
			"approval": true
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-19 15:53:04.276140",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No; only upon your submitted change to add the Object.GetPkg() method.\r\n\r\n\r\nOn 19 February 2013 14:19, <gri@golang.org> wrote:\r\n\r\n> LGTM\r\n>\r\n> I assume this depends on my pending QualifiedName change?\r\n>\r\n> https://codereview.appspot.**com/7325051/<https://codereview.appspot.com/7325051/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-19 19:33:56.453970",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=9c3930413c1b ***\n\ngo/types: include package import path in NamedType.String().\n\nThis avoids ambiguity and makes the diagnostics closer to\nthose issued by gc, but it is more verbose since it qualifies\nintra-package references.\n\nWithout extra context---e.g. a 'from *Package' parameter to\nType.String()---we are forced to err on one side or the other.\n\nAlso, cosmetic changes to exp/ssa:\n- Remove package-qualification workaround in Function.FullName.\n- Always set go/types.Package.Path field to the import path,\n  since we know the correct path at this point.\n- In Function.DumpTo, show variadic '...' and result type info,\n  and delete now-redundant \"# Type: \" line.\n\nR=gri\nCC=golang-dev\nhttps://codereview.appspot.com/7325051",
			"disapproval": false,
			"date": "2013-02-19 19:42:11.301910",
			"approval": false
		}
	],
	"owner_email": "adonovan@google.com",
	"private": false,
	"base_url": "",
	"owner": "adonovan",
	"subject": "code review 7325051: go/types: include package import path in NameType.String().",
	"created": "2013-02-19 15:04:49.188970",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		12001,
		15001,
		18001,
		19001,
		15002
	],
	"modified": "2013-02-19 19:42:12.388190",
	"closed": true,
	"issue": 7325051
}