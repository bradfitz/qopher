{
	"description": "build: clang support\n\nThis works with at least one version of clang\nthat existed at one moment in time.\nNo guarantees about clangs past or future.\n\nTo try:\n        CC=clang all.bash\n\nIt does not work with the Xcode clang,\nbecause that clang fails at printing a useful answer\nto:\n        clang -print-libgcc-file-name\nThe clang that works prints a full path name for\nthat command, not just \"libgcc.a\".\n\nFixes issue 4713.",
	"cc": [
		"iant@golang.org",
		"minux.ma@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello iant (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-02-15 21:14:42.160970",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"iant@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\"Fixes issue 4713.\"\n\nseems `clang -print-libgcc-file-name` is not directly usable at least on my system:\n$ clang -v\nclang version 3.3 (trunk 173620)\nTarget: x86_64-apple-darwin10.8.0\nThread model: posix\n$ clang -print-libgcc-file-name\nlibgcc.a\n\nwe can leave this problem for later.",
			"disapproval": false,
			"date": "2013-02-15 21:19:05.585530",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"iant@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7323068/diff/6009/src/cmd/cgo/gcc.go\nFile src/cmd/cgo/gcc.go (right):\n\nhttps://codereview.appspot.com/7323068/diff/6009/src/cmd/cgo/gcc.go#newcode785\nsrc/cmd/cgo/gcc.go:785: \"-ferror-limit=10000\",\nI believe this can simply be -ferror-limit=0.\n\nhttps://codereview.appspot.com/7323068/diff/6009/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttps://codereview.appspot.com/7323068/diff/6009/src/cmd/dist/build.c#newcode608\nsrc/cmd/dist/build.c:608: vadd(&gccargs, \"-ggdb\");\nIf clang, can we just add -g?",
			"disapproval": false,
			"date": "2013-02-15 21:24:52.838670",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"iant@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i tried clang 3.3 on both linux/arm and darwin/amd64,\nand they both support -pthread and -ggdb. weird.\n\nhttps://codereview.appspot.com/7323068/diff/6009/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (left):\n\nhttps://codereview.appspot.com/7323068/diff/6009/src/cmd/dist/build.c#oldcode412\nsrc/cmd/dist/build.c:412: \"-ggdb\",\n?\n\nhttps://codereview.appspot.com/7323068/diff/6009/src/cmd/go/build.go\nFile src/cmd/go/build.go (right):\n\nhttps://codereview.appspot.com/7323068/diff/6009/src/cmd/go/build.go#newcode1583\nsrc/cmd/go/build.go:1583: // TODO: clang?\nsupport using clang with gccgo?",
			"disapproval": false,
			"date": "2013-02-15 21:34:20.475820",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Applied both of Ian's suggestions. I am as confused as you are, Minux,\r\nabout the -pthread and -ggdb things. In the version I'm using (which\r\nsomeone built for me and is not from a standard distribution) I get errors\r\nlike:\r\n\r\nclang-3: warning: argument unused during compilation: '-ggdb'\r\nclang-3: warning: argument unused during compilation: '-pthread'\r\n\r\nIt doesn't seem to hurt to omit them, so I'll just do that for now.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-02-15 21:37:26.669460",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"iant@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=537555f45dcc ***\n\nbuild: clang support\n\nThis works with at least one version of clang\nthat existed at one moment in time.\nNo guarantees about clangs past or future.\n\nTo try:\n        CC=clang all.bash\n\nIt does not work with the Xcode clang,\nbecause that clang fails at printing a useful answer\nto:\n        clang -print-libgcc-file-name\nThe clang that works prints a full path name for\nthat command, not just \"libgcc.a\".\n\nFixes issue 4713.\n\nR=iant, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/7323068",
			"disapproval": false,
			"date": "2013-02-15 21:37:46.704860",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am very sad to announce that this fails for\r\n\r\nlucky(~/go/src) % clang -v\r\nclang version 3.2 (tags/RELEASE_32/final)\r\nTarget: x86_64-unknown-linux-gnu\r\nThread model: posix\r\n\r\n--\r\n\r\n# net\r\nclang: error: argument unused during compilation:\r\n'-fno-eliminate-unused-debug-types'\r\ndatabase/sql/driver\r\ndebug/gosym\r\nencoding/csv\r\ndatabase/sql\r\nexp/ebnf\r\ngo/types\r\nexp/ebnflint\r\nexp/inotify\r\nexp/norm\r\nimage/draw\r\nimage/gif\r\nimage/jpeg\r\nimage/png\r\nos/user\r\nexp/locale/collate/colltab\r\n# os/user\r\nclang: error: argument unused during compilation:\r\n'-fno-eliminate-unused-debug-types'\r\n\r\n\r\nOn Sat, Feb 16, 2013 at 8:37 AM,  <rsc@golang.org> wrote:\r\n> *** Submitted as\r\n> https://code.google.com/p/go/source/detail?r=537555f45dcc ***\r\n>\r\n>\r\n> build: clang support\r\n>\r\n> This works with at least one version of clang\r\n> that existed at one moment in time.\r\n> No guarantees about clangs past or future.\r\n>\r\n> To try:\r\n>         CC=clang all.bash\r\n>\r\n> It does not work with the Xcode clang,\r\n> because that clang fails at printing a useful answer\r\n> to:\r\n>         clang -print-libgcc-file-name\r\n> The clang that works prints a full path name for\r\n> that command, not just \"libgcc.a\".\r\n>\r\n> Fixes issue 4713.\r\n>\r\n> R=iant, minux.ma\r\n> CC=golang-dev\r\n> https://codereview.appspot.com/7323068\r\n>\r\n>\r\n> https://codereview.appspot.com/7323068/\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n>\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-16 02:27:52.032420",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7323068: build: clang support",
	"created": "2013-02-15 21:03:01.761290",
	"patchsets": [
		1,
		2001,
		5001,
		6009,
		11001
	],
	"modified": "2013-02-16 02:27:52.157960",
	"closed": true,
	"issue": 7323068
}