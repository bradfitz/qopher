{
	"description": "leveldb: clarify file locking; add a manual test.",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6157043/diff/4001/leveldb/memfs/memfs.go\nFile leveldb/memfs/memfs.go (right):\n\nhttp://codereview.appspot.com/6157043/diff/4001/leveldb/memfs/memfs.go#newcode80\nleveldb/memfs/memfs.go:80: return nopCloser{}, nil\nreturn ioutil.NopCloser(nil), nil\n\nhttp://codereview.appspot.com/6157043/diff/4001/manualtest/filelock/main.go\nFile manualtest/filelock/main.go (right):\n\nhttp://codereview.appspot.com/6157043/diff/4001/manualtest/filelock/main.go#newcode7\nmanualtest/filelock/main.go:7: package main\nwhy is this a package main rather than a normal test?  you could skip this test if testing.Short() or something?",
			"disapproval": false,
			"date": "2012-05-02 03:33:16.031443",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/leveldb-go",
			"disapproval": false,
			"date": "2012-05-02 03:20:52.719854",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/leveldb-go/source/detail?r=d6b75bac0944 ***\n\nleveldb: clarify file locking; add a manual test.\n\nR=bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6157043",
			"disapproval": false,
			"date": "2012-05-02 04:20:08.571031",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6157043/diff/4001/leveldb/memfs/memfs.go\nFile leveldb/memfs/memfs.go (right):\n\nhttp://codereview.appspot.com/6157043/diff/4001/leveldb/memfs/memfs.go#newcode80\nleveldb/memfs/memfs.go:80: return nopCloser{}, nil\nOn 2012/05/02 03:33:16, bradfitz wrote:\n> return ioutil.NopCloser(nil), nil\n\nPossibly, but then the returned value also implements io.Reader (and will panic on Read).\n\nhttp://codereview.appspot.com/6157043/diff/4001/manualtest/filelock/main.go\nFile manualtest/filelock/main.go (right):\n\nhttp://codereview.appspot.com/6157043/diff/4001/manualtest/filelock/main.go#newcode7\nmanualtest/filelock/main.go:7: package main\nOn 2012/05/02 03:33:16, bradfitz wrote:\n> why is this a package main rather than a normal test?  you could skip this test\n> if testing.Short() or something?\n\nDoc comment added:\n\n// Running the program by itself is mostly uninteresting. Run this program\n// multiple times simultaneously to observe process-level mutual exclusion.",
			"disapproval": false,
			"date": "2012-05-02 04:04:40.390721",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM still\n\nhttp://codereview.appspot.com/6157043/diff/4001/leveldb/memfs/memfs.go\nFile leveldb/memfs/memfs.go (right):\n\nhttp://codereview.appspot.com/6157043/diff/4001/leveldb/memfs/memfs.go#newcode80\nleveldb/memfs/memfs.go:80: return nopCloser{}, nil\nOn 2012/05/02 04:04:40, nigeltao wrote:\n> On 2012/05/02 03:33:16, bradfitz wrote:\n> > return ioutil.NopCloser(nil), nil\n> \n> Possibly, but then the returned value also implements io.Reader (and will panic\n> on Read).\n\nBut the return type is io.Closer.\n\nIf they cast it to a Reader, that's what they get.\n\nHow's that worse than you using an *os.File as a io.Closer?",
			"disapproval": false,
			"date": "2012-05-02 04:15:36.503848",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Submitting...\n\nhttp://codereview.appspot.com/6157043/diff/4001/leveldb/memfs/memfs.go\nFile leveldb/memfs/memfs.go (right):\n\nhttp://codereview.appspot.com/6157043/diff/4001/leveldb/memfs/memfs.go#newcode80\nleveldb/memfs/memfs.go:80: return nopCloser{}, nil\nOn 2012/05/02 04:15:36, bradfitz wrote:\n> How's that worse than you using an *os.File as a io.Closer?\n\nI don't do that any more.",
			"disapproval": false,
			"date": "2012-05-02 04:18:48.176530",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6157043: leveldb: clarify file locking; add a manual test.",
	"created": "2012-05-02 03:19:59.775385",
	"patchsets": [
		1,
		2001,
		4001,
		6002
	],
	"modified": "2012-05-02 04:20:11.261406",
	"closed": true,
	"issue": 6157043
}