{
	"description": "net: more docs on deadlines\n\nFixes issue 2777",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5685060/diff/2002/src/pkg/net/net.go\nFile src/pkg/net/net.go (right):\n\nhttp://codereview.appspot.com/5685060/diff/2002/src/pkg/net/net.go#newcode11\nsrc/pkg/net/net.go:11: provided by the Dial, Listen, and Accept functions.\nConn and Listener should be documented here\n\nhttp://codereview.appspot.com/5685060/diff/2002/src/pkg/net/net.go#newcode79\nsrc/pkg/net/net.go:79: // A deadline is an absolute point in time after which I/O\ns/point in /\n\nhttp://codereview.appspot.com/5685060/diff/2002/src/pkg/net/net.go#newcode84\nsrc/pkg/net/net.go:84: // An idle timeout can be implemented by repeatedly extending\ni don't know what an idle timeout is.",
			"disapproval": false,
			"date": "2012-02-20 23:53:37.854120",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-20 23:50:37.789922",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5685060/diff/2002/src/pkg/net/net.go\nFile src/pkg/net/net.go (right):\n\nhttp://codereview.appspot.com/5685060/diff/2002/src/pkg/net/net.go#newcode11\nsrc/pkg/net/net.go:11: provided by the Dial, Listen, and Accept functions.\nOn 2012/02/20 23:53:37, r wrote:\n> Conn and Listener should be documented here\n\nDone. Suggestions welcome.\n\nhttp://codereview.appspot.com/5685060/diff/2002/src/pkg/net/net.go#newcode79\nsrc/pkg/net/net.go:79: // A deadline is an absolute point in time after which I/O\nOn 2012/02/20 23:53:37, r wrote:\n> s/point in /\n\nDone.\n\nhttp://codereview.appspot.com/5685060/diff/2002/src/pkg/net/net.go#newcode84\nsrc/pkg/net/net.go:84: // An idle timeout can be implemented by repeatedly extending\nOn 2012/02/20 23:53:37, r wrote:\n> i don't know what an idle timeout is.\n\nThe way Go's API used to be, and what a lot of people expect, is that you say:\n\nSetTimeout(5 * time.Seconds)\n\n... and then if any I/O operation doesn't respond in 5 seconds, you consider it timed out.\n\nThat was problematic, and didn't work well with Read's semantics (it can return a 1 byte at a time, each taking 5 seconds?).\n\nBut people still try to do things like that, reading from a Conn in a loop, thinking they can just set the timeout once.\n\nI'm trying to get across that you need to set the deadline before each call to Read or Write if that's your goal.\n\nSuggestions welcome.",
			"disapproval": false,
			"date": "2012-02-21 00:05:45.181979",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nalthough i feel something is still missing, this is a big step",
			"disapproval": false,
			"date": "2012-02-21 00:09:55.466745",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-21 00:05:35.484587",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d2125f884ae5 ***\n\nnet: more docs on deadlines\n\nFixes issue 2777\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5685060",
			"disapproval": false,
			"date": "2012-02-21 00:11:27.209714",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5685060: net: more docs on deadlines",
	"created": "2012-02-20 23:50:12.313084",
	"patchsets": [
		1,
		1002,
		2002,
		5002,
		5004
	],
	"modified": "2012-02-21 00:11:29.513066",
	"closed": true,
	"issue": 5685060
}