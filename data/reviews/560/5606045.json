{
	"description": "godoc: fix redirect loop for URL \"/\".",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"rsc@golang.org",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Why does my godoc built from tip work fine?\n\nOn Tue, Jan 31, 2012 at 1:49 PM, <sameer@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> godoc: fix redirect loop for URL \"/\".\n>\n> Please review this at http://codereview.appspot.com/**5606045/<http://codereview.appspot.com/5606045/>\n>\n> Affected files:\n>  M src/cmd/godoc/godoc.go\n>\n>\n> Index: src/cmd/godoc/godoc.go\n> ==============================**==============================**=======\n> --- a/src/cmd/godoc/godoc.go\n> +++ b/src/cmd/godoc/godoc.go\n> @@ -499,7 +499,7 @@\n>        for _, eg := range examples {\n>                name := eg.Name\n>\n> -               // strip lowercase braz in Foo_braz or Foo_Bar_braz from\n> name\n> +               // strip lowercase braz in Foo_braz or Foo_Bar_braz from\n> name\n>                // while keeping uppercase Braz in Foo_Braz\n>                if i := strings.LastIndex(name, \"_\"); i != -1 {\n>                        if i < len(name)-1 && !startsWithUppercase(name[i+1:\n> **]) {\n> @@ -743,7 +743,11 @@\n>  }\n>\n>  func redirect(w http.ResponseWriter, r *http.Request) (redirected bool) {\n> -       if canonical := path.Clean(r.URL.Path) + \"/\"; r.URL.Path !=\n> canonical {\n> +       canonical := path.Clean(r.URL.Path)\n> +       if !strings.HasSuffix(\"/\", canonical) {\n> +               canonical += \"/\"\n> +       }\n> +       if r.URL.Path != canonical {\n>                http.Redirect(w, r, canonical, http.StatusMovedPermanently)\n>                redirected = true\n>        }\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-31 22:01:14.070788",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "How can I reproduce the issue?\n",
			"disapproval": false,
			"date": "2012-02-01 02:05:34.499594",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jan 31, 2012 at 2:04 PM, Russ Cox <rsc@golang.org> wrote:\n\n> On Tue, Jan 31, 2012 at 17:01, Brad Fitzpatrick <bradfitz@golang.org>\n> wrote:\n> > Why does my godoc built from tip work fine?\n>\n> Your godoc has not yet encountered an html file\n> that contains Path: \"/\" in its header.\n>\n\nDo you know which file Sameer is hitting that causes this?\n\nDid godoc's index.html from last week have Path: \"/\" in its header?\n\nI'd like to understand this fix before I LGTM it.  This confuses me.\n",
			"disapproval": false,
			"date": "2012-02-01 00:42:42.390591",
			"approval": true
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"sameer@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-31 21:49:41.148941",
			"approval": false
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"sameer@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=7c0d2f963500 ***\n\ngodoc: fix redirect loop for URL \"/\".\n\nR=golang-dev, bradfitz, rsc, adg\nCC=golang-dev\nhttp://codereview.appspot.com/5606045",
			"disapproval": false,
			"date": "2012-02-01 14:44:04.722342",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jan 31, 2012 at 17:01, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> Why does my godoc built from tip work fine?\n\nYour godoc has not yet encountered an html file\nthat contains Path: \"/\" in its header.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-31 22:04:24.461788",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn 1 February 2012 09:04, Russ Cox <rsc@golang.org> wrote:\n> On Tue, Jan 31, 2012 at 17:01, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n>> Why does my godoc built from tip work fine?\n>\n> Your godoc has not yet encountered an html file\n> that contains Path: \"/\" in its header.\n\nActually, that's backward. Sameer is seeing the issue because his\ngodoc isn't seeing a recent doc/root.html with the Path directive in\nit. Therefore it hits serveDirectory and therefore the bug.\n\nBrad's (and my) local godoc finds doc/root.html on startup, so it\nserves root.html for path / and therefore avoids serveDirectory and\nthe bug entirely.\n",
			"disapproval": false,
			"date": "2012-02-01 03:28:35.555213",
			"approval": true
		}
	],
	"owner_email": "sameer@golang.org",
	"private": false,
	"base_url": "",
	"owner": "Sameer Ajmani",
	"subject": "code review 5606045: godoc: fix redirect loop for URL \"/\".",
	"created": "2012-01-31 21:49:38.793842",
	"patchsets": [
		1,
		4002
	],
	"modified": "2012-02-01 14:44:05.939462",
	"closed": true,
	"issue": 5606045
}