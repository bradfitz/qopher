{
	"description": "net: disable tests with controlling network facilities in short mode\n\nPerhaps it would make FreeBSD 10-CURRENT/ARM on Raspberry Pi builders happy.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-03-25 03:14:21.309110",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think the test is failing because this kernel does not support gif\r\ninterface types. That is a guess because we don't see the full command\r\nthat is executed.\r\n\r\nI'd be happier seeing the test disabled on GOOS=freebsd, GOARCH=arm\r\n\r\nOn Mon, Mar 25, 2013 at 2:14 PM,  <mikioh.mikioh@gmail.com> wrote:\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> net: disable tests with controlling network facilities in short mode\r\n>\r\n> Perhaps it would make FreeBSD 10-CURRENT/ARM on Raspberry Pi builders\r\n> happy.\r\n>\r\n> Please review this at https://codereview.appspot.com/8008043/\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/interface_unix_test.go\r\n>\r\n>\r\n> Index: src/pkg/net/interface_unix_test.go\r\n> ===================================================================\r\n> --- a/src/pkg/net/interface_unix_test.go\r\n> +++ b/src/pkg/net/interface_unix_test.go\r\n> @@ -41,8 +41,11 @@\r\n>  }\r\n>\r\n>  func TestPointToPointInterface(t *testing.T) {\r\n> -       switch runtime.GOOS {\r\n> -       case \"darwin\":\r\n> +       if testing.Short() {\r\n> +               t.Skip(\"skipping test in short mode\")\r\n> +       }\r\n> +       switch {\r\n> +       case runtime.GOOS == \"darwin\":\r\n>                 t.Skipf(\"skipping read test on %q\", runtime.GOOS)\r\n>         }\r\n>         if os.Getuid() != 0 {\r\n> @@ -90,6 +93,9 @@\r\n>  }\r\n>\r\n>  func TestInterfaceArrivalAndDeparture(t *testing.T) {\r\n> +       if testing.Short() {\r\n> +               t.Skip(\"skipping test in short mode\")\r\n> +       }\r\n>         if os.Getuid() != 0 {\r\n>                 t.Skip(\"skipping test; must be root\")\r\n>         }\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-25 03:21:50.660890",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The tests are optional, non-critical the same as tests in\r\nunicast_posix_test.go do and I think it's not necessary\r\nto run in short mode.\r\n\r\n\r\nOn Mon, Mar 25, 2013 at 12:21 PM, Dave Cheney <dave@cheney.net> wrote:\r\n> I think the test is failing because this kernel does not support gif\r\n> interface types. That is a guess because we don't see the full command\r\n> that is executed.\r\n>\r\n> I'd be happier seeing the test disabled on GOOS=freebsd, GOARCH=arm\r\n>\r\n> On Mon, Mar 25, 2013 at 2:14 PM,  <mikioh.mikioh@gmail.com> wrote:\r\n>> Reviewers: golang-dev1,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://code.google.com/p/go\r\n>>\r\n>>\r\n>> Description:\r\n>> net: disable tests with controlling network facilities in short mode\r\n>>\r\n>> Perhaps it would make FreeBSD 10-CURRENT/ARM on Raspberry Pi builders\r\n>> happy.\r\n>>\r\n>> Please review this at https://codereview.appspot.com/8008043/\r\n>>\r\n>> Affected files:\r\n>>   M src/pkg/net/interface_unix_test.go\r\n>>\r\n>>\r\n>> Index: src/pkg/net/interface_unix_test.go\r\n>> ===================================================================\r\n>> --- a/src/pkg/net/interface_unix_test.go\r\n>> +++ b/src/pkg/net/interface_unix_test.go\r\n>> @@ -41,8 +41,11 @@\r\n>>  }\r\n>>\r\n>>  func TestPointToPointInterface(t *testing.T) {\r\n>> -       switch runtime.GOOS {\r\n>> -       case \"darwin\":\r\n>> +       if testing.Short() {\r\n>> +               t.Skip(\"skipping test in short mode\")\r\n>> +       }\r\n>> +       switch {\r\n>> +       case runtime.GOOS == \"darwin\":\r\n>>                 t.Skipf(\"skipping read test on %q\", runtime.GOOS)\r\n>>         }\r\n>>         if os.Getuid() != 0 {\r\n>> @@ -90,6 +93,9 @@\r\n>>  }\r\n>>\r\n>>  func TestInterfaceArrivalAndDeparture(t *testing.T) {\r\n>> +       if testing.Short() {\r\n>> +               t.Skip(\"skipping test in short mode\")\r\n>> +       }\r\n>>         if os.Getuid() != 0 {\r\n>>                 t.Skip(\"skipping test; must be root\")\r\n>>         }\r\n>>\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google Groups\r\n>> \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@googlegroups.com.\r\n>> For more options, visit https://groups.google.com/groups/opt_out.\r\n>>\r\n>>\r\n",
			"disapproval": false,
			"date": "2013-03-25 04:04:27.622600",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Fair enough, let's see if it makes the freebsd/arm builder pass.\r\n\r\nOn Mon, Mar 25, 2013 at 3:04 PM, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n> The tests are optional, non-critical the same as tests in\r\n> unicast_posix_test.go do and I think it's not necessary\r\n> to run in short mode.\r\n>\r\n>\r\n> On Mon, Mar 25, 2013 at 12:21 PM, Dave Cheney <dave@cheney.net> wrote:\r\n>> I think the test is failing because this kernel does not support gif\r\n>> interface types. That is a guess because we don't see the full command\r\n>> that is executed.\r\n>>\r\n>> I'd be happier seeing the test disabled on GOOS=freebsd, GOARCH=arm\r\n>>\r\n>> On Mon, Mar 25, 2013 at 2:14 PM,  <mikioh.mikioh@gmail.com> wrote:\r\n>>> Reviewers: golang-dev1,\r\n>>>\r\n>>> Message:\r\n>>> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>>>\r\n>>> I'd like you to review this change to\r\n>>> https://code.google.com/p/go\r\n>>>\r\n>>>\r\n>>> Description:\r\n>>> net: disable tests with controlling network facilities in short mode\r\n>>>\r\n>>> Perhaps it would make FreeBSD 10-CURRENT/ARM on Raspberry Pi builders\r\n>>> happy.\r\n>>>\r\n>>> Please review this at https://codereview.appspot.com/8008043/\r\n>>>\r\n>>> Affected files:\r\n>>>   M src/pkg/net/interface_unix_test.go\r\n>>>\r\n>>>\r\n>>> Index: src/pkg/net/interface_unix_test.go\r\n>>> ===================================================================\r\n>>> --- a/src/pkg/net/interface_unix_test.go\r\n>>> +++ b/src/pkg/net/interface_unix_test.go\r\n>>> @@ -41,8 +41,11 @@\r\n>>>  }\r\n>>>\r\n>>>  func TestPointToPointInterface(t *testing.T) {\r\n>>> -       switch runtime.GOOS {\r\n>>> -       case \"darwin\":\r\n>>> +       if testing.Short() {\r\n>>> +               t.Skip(\"skipping test in short mode\")\r\n>>> +       }\r\n>>> +       switch {\r\n>>> +       case runtime.GOOS == \"darwin\":\r\n>>>                 t.Skipf(\"skipping read test on %q\", runtime.GOOS)\r\n>>>         }\r\n>>>         if os.Getuid() != 0 {\r\n>>> @@ -90,6 +93,9 @@\r\n>>>  }\r\n>>>\r\n>>>  func TestInterfaceArrivalAndDeparture(t *testing.T) {\r\n>>> +       if testing.Short() {\r\n>>> +               t.Skip(\"skipping test in short mode\")\r\n>>> +       }\r\n>>>         if os.Getuid() != 0 {\r\n>>>                 t.Skip(\"skipping test; must be root\")\r\n>>>         }\r\n>>>\r\n>>>\r\n>>> --\r\n>>>\r\n>>> ---You received this message because you are subscribed to the Google Groups\r\n>>> \"golang-dev\" group.\r\n>>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>>> email to golang-dev+unsubscribe@googlegroups.com.\r\n>>> For more options, visit https://groups.google.com/groups/opt_out.\r\n>>>\r\n>>>\r\n",
			"disapproval": false,
			"date": "2013-03-25 04:05:36.119620",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=99a595ab951e ***\n\nnet: disable tests with controlling network facilities in short mode\n\nPerhaps it would make FreeBSD 10-CURRENT/ARM on Raspberry Pi builders happy.\n\nR=golang-dev, dave\nCC=golang-dev\nhttps://codereview.appspot.com/8008043",
			"disapproval": false,
			"date": "2013-03-25 04:25:39.643180",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 8008043: net: disable tests with controlling network facilities ...",
	"created": "2013-03-25 03:13:35.323920",
	"patchsets": [
		1,
		2001,
		5001,
		12001
	],
	"modified": "2013-03-25 04:25:41.869430",
	"closed": true,
	"issue": 8008043
}