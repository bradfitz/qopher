{
	"description": "runtime: panic with good error if 386 sse2 binary is run on 387",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-04-16 18:24:51.302730",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*shrug*\r\n\r\nMaybe?\r\n\r\nConsider it a proposal.\r\n\r\n\r\n\r\nOn Tue, Apr 16, 2013 at 11:24 AM, <bradfitz@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> runtime: panic with good error if 386 sse2 binary is run on 387\r\n>\r\n> Please review this at https://codereview.appspot.**com/8803043/<https://codereview.appspot.com/8803043/>\r\n>\r\n> Affected files:\r\n>   src/pkg/runtime/init_386.go\r\n>\r\n>\r\n> Index: src/pkg/runtime/init_386.go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/src/pkg/runtime/init_386.go\r\n> @@ -0,0 +1,43 @@\r\n> +// Copyright 2013 The Go Authors. All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +// +build 386\r\n> +\r\n> +package runtime\r\n> +\r\n> +import (\r\n> +       \"unsafe\"\r\n> +)\r\n> +\r\n> +func isSSE2Capable() bool {\r\n> +       return cpuid_edx&0x4000000 != 0\r\n> +}\r\n> +\r\n> +func isSSE2Binary() bool {\r\n> +       pc, _, _, _ := Caller(0)\r\n> +       f64 := 1.0 // f2 0f 10 05 b8 1c 0e    movsd  0x80e1cb8,%xmm0\r\n> +       _ = -f64\r\n> +       var ins []uint16\r\n> +       sh := (*struct {\r\n> +               Data uintptr\r\n> +               Len  int\r\n> +               Cap  int\r\n> +       })(unsafe.Pointer(&ins))\r\n> +       sh.Data = uintptr(unsafe.Pointer(pc))\r\n> +       sh.Len = 5\r\n> +       sh.Cap = 5\r\n> +       for _, op := range ins {\r\n> +               if op == 0x0ff2 {\r\n> +                       // Found f2 0f MOVSD\r\n> +                       return true\r\n> +               }\r\n> +       }\r\n> +       return false\r\n> +}\r\n> +\r\n> +func init() {\r\n> +       if isSSE2Binary() && !isSSE2Capable() {\r\n> +               panic(\"Go binary not compatible with this process. Rebuild\r\n> with GO386=387\")\r\n> +       }\r\n> +}\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-16 18:25:29.456460",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "this problem is more complicated.\r\n\r\nbecause 387 and sse2 packages inter-operate, the user might have\r\ncompiled the runtime package with GO386=387 but forgotten to\r\ncompile some other package with GO386=387, then the resulting\r\nbinary should work fine on his machine but still fail on non-sse2\r\nmachines with SIGILL.\r\n\r\nAs Ian said, we can make the annotation in cmd/8l, also, i prefer\r\nnot adding a new init() function just for this, and we can easily do\r\nthis in assembly or C in the runtime.\r\n",
			"disapproval": false,
			"date": "2013-04-16 19:46:50.701860",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-05-15 00:23:59.987140",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry for the spam.\r\n\r\nI just learned that http://gocodereview.appspot.com/ doesn't clear stuff\r\nout unless you send this spam.\r\n\r\n\r\n\r\nOn Tue, May 14, 2013 at 5:24 PM, <bradfitz@golang.org> wrote:\r\n\r\n> *** Abandoned ***\r\n>\r\n> https://codereview.appspot.**com/8803043/<https://codereview.appspot.com/8803043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-15 00:24:35.426880",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 8803043: runtime: panic with good error if 386 sse2 binary is ru...",
	"created": "2013-04-16 18:24:37.798430",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		10001
	],
	"modified": "2013-05-15 00:24:02.938170",
	"closed": true,
	"issue": 8803043
}