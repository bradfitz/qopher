{
	"description": "encoding/varint: deleted WriteXvarint\n\nFixes issue 2748.",
	"cc": [
		"rsc@golang.org",
		"r@golang.org",
		"r@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but wait for rsc.",
			"disapproval": false,
			"date": "2012-01-20 19:04:34.083625",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@golang.org, r@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-20 20:33:22.843938",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as f790e7da73c4 ***\n\nencoding/varint: deleted WriteXvarint\n\nFixes issue 2748.\n\nR=rsc, r, r\nCC=golang-dev\nhttp://codereview.appspot.com/5557072",
			"disapproval": false,
			"date": "2012-01-20 20:57:55.735121",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc, r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-01-20 18:58:45.922205",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I still think we should delete this outright.\nThe new comments amount to\n\n// Don't use this function if you want your code to run fast.\n\nIs that really something we want in the standard\nlibrary?\n\nOne malloc per integer write is an incredible amount\nof garbage generation.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-20 19:10:15.111673",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jan 20, 2012 at 14:17, Robert Griesemer <gri@golang.org> wrote:\n> If I write an int x using fmt.Fprint(w, x), don't I have a malloc,\n> too? Isn't it the same?\n\nfmt.Fprint is doing caching under the covers to avoid this malloc.\nThese routines could do caching too, but given that there are\nno callers, it seems even easier to just delete them.\n\nRead and Write are paired operations but not symmetric operations,\nso it is okay to have different APIs for both.\nIf we delete WriteVarint then it can be recreated easily and more\nefficiently by callers from the remaining API (and no one is using\nit anyway); if we delete ReadVarint then it cannot be recreated\nby callers from the remaining API.\n\nWriteVarint would make sense if there were an io.ByteWriter, but\nthere isn't, and it is too late to be adding things like that.\nI would prefer to just delete these, and then we have flexibility\nto do something new in Go 1 if the need should arise.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-20 20:00:30.390465",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If I write an int x using fmt.Fprint(w, x), don't I have a malloc,\ntoo? Isn't it the same?\n- gri\n\nOn Fri, Jan 20, 2012 at 11:10 AM, Russ Cox <rsc@golang.org> wrote:\n> I still think we should delete this outright.\n> The new comments amount to\n>\n> // Don't use this function if you want your code to run fast.\n>\n> Is that really something we want in the standard\n> library?\n>\n> One malloc per integer write is an incredible amount\n> of garbage generation.\n>\n> Russ\n",
			"disapproval": false,
			"date": "2012-01-20 19:17:25.088741",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Jan 20, 2012, at 11:17 AM, Robert Griesemer wrote:\n\n> If I write an int x using fmt.Fprint(w, x), don't I have a malloc,\n> too? Isn't it the same?\n\nNo. That requires no allocation.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-01-20 19:19:39.836606",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-20 20:46:49.045910",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5557072: encoding/varint: deleted WriteXvarint",
	"created": "2012-01-20 18:58:43.536954",
	"patchsets": [
		1,
		1002,
		5001,
		6003
	],
	"modified": "2012-01-20 20:57:56.746596",
	"closed": true,
	"issue": 5557072
}