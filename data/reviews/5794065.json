{
	"description": "undo CL 5754088 / cae9a7c0db06\n\nbroke builders\n\n\u00ab\u00ab\u00ab original CL description\ncmd/go: respect $GOBIN always\n\nBefore, we only consulted $GOBIN for source code\nfound in $GOROOT, but that's confusing to explain\nand less useful.  The new behavior lets users set\nGOBIN=$HOME/bin and have all go-compiled binaries\ninstalled there.\n\nFixes issue 3269.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5754088\n\u00bb\u00bb\u00bb",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=9bfee3618a8c ***\n\nundo CL 5754088 / cae9a7c0db06\n\nbroke builders\n\n\u00ab\u00ab\u00ab original CL description\ncmd/go: respect $GOBIN always\n\nBefore, we only consulted $GOBIN for source code\nfound in $GOROOT, but that's confusing to explain\nand less useful.  The new behavior lets users set\nGOBIN=$HOME/bin and have all go-compiled binaries\ninstalled there.\n\nFixes issue 3269.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5754088\n\u00bb\u00bb\u00bb\n\nTBR=bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5794065",
			"disapproval": false,
			"date": "2012-03-12 21:03:32.691157",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-12 21:03:26.057886",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Mon, Mar 12, 2012 at 2:03 PM, <rsc@golang.org> wrote:\n\n> Reviewers: bradfitz,\n>\n> Message:\n> Hello bradfitz (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> undo CL 5754088 / cae9a7c0db06\n>\n> broke builders\n>\n> \u00ab\u00ab\u00ab original CL description\n> cmd/go: respect $GOBIN always\n>\n> Before, we only consulted $GOBIN for source code\n> found in $GOROOT, but that's confusing to explain\n> and less useful.  The new behavior lets users set\n> GOBIN=$HOME/bin and have all go-compiled binaries\n> installed there.\n>\n> Fixes issue 3269.\n>\n> R=golang-dev, bradfitz\n> CC=golang-dev\n> http://codereview.appspot.com/**5754088<http://codereview.appspot.com/5754088>\n> \u00bb\u00bb\u00bb\n>\n> Please review this at http://codereview.appspot.com/**5794065/<http://codereview.appspot.com/5794065/>\n>\n> Affected files:\n>  M doc/install-source.html\n>  M src/cmd/go/build.go\n>  M src/cmd/go/doc.go\n>  M src/cmd/go/help.go\n>  M src/cmd/go/pkg.go\n>\n>\n> Index: doc/install-source.html\n> ==============================**==============================**=======\n> --- a/doc/install-source.html\n> +++ b/doc/install-source.html\n> @@ -393,12 +393,11 @@\n>\n>  <p><code>$GOBIN</code>\n>  <p>\n> -The location where Go binaries will be installed.\n> +The location where binaries from the main repository will be installed.\n> +XXX THIS MAY CHANGE TO BE AN OVERRIDE EVEN FOR GOPATH ENTRIES XXX\n>  The default is <code>$GOROOT/bin</code>.\n>  After installing, you will want to arrange to add this\n>  directory to your <code>$PATH</code>, so you can use the tools.\n> -If <code>$GOBIN</code> is set, the <a href=\"/cmd/go\">go command</a>\n> -installs all commands there.\n>  </p>\n>\n>  <p><code>$GOARM</code> (arm, default=6)</p>\n> Index: src/cmd/go/build.go\n> ==============================**==============================**=======\n> --- a/src/cmd/go/build.go\n> +++ b/src/cmd/go/build.go\n> @@ -199,8 +199,6 @@\n>\n>  For more about the build flags, see 'go help build'.\n>  For more about specifying packages, see 'go help packages'.\n> -For more about where packages and binaries are installed,\n> -see 'go help gopath'.\n>\n>  See also: go build, go get, go clean.\n>        `,\n> @@ -304,13 +302,20 @@\n>  )\n>\n>  var (\n> -       gobin        = os.Getenv(\"GOBIN\")\n>        goroot       = filepath.Clean(runtime.GOROOT(**))\n> +       gobin        = defaultGobin()\n>        gorootSrcPkg = filepath.Join(goroot, \"src/pkg\")\n>        gorootPkg    = filepath.Join(goroot, \"pkg\")\n>        gorootSrc    = filepath.Join(goroot, \"src\")\n>  )\n>\n> +func defaultGobin() string {\n> +       if s := os.Getenv(\"GOBIN\"); s != \"\" {\n> +               return s\n> +       }\n> +       return filepath.Join(goroot, \"bin\")\n> +}\n> +\n>  func (b *builder) init() {\n>        var err error\n>        b.print = fmt.Print\n> @@ -382,24 +387,18 @@\n>        pkg.load(&stk, bp, err)\n>        pkg.localPrefix = dirToImportPath(dir)\n>        pkg.ImportPath = \"command-line-arguments\"\n> -       pkg.target = \"\"\n>\n> -       if pkg.Name == \"main\" {\n> -               _, elem := filepath.Split(gofiles[0])\n> -               exe := elem[:len(elem)-len(\".go\")] + exeSuffix\n> -               if *buildO == \"\" {\n> -                       *buildO = exe\n> -               }\n> -               if gobin != \"\" {\n> -                       pkg.target = filepath.Join(gobin, exe)\n> -               }\n> -       } else {\n> -               if *buildO == \"\" {\n> +       if *buildO == \"\" {\n> +               if pkg.Name == \"main\" {\n> +                       _, elem := filepath.Split(gofiles[0])\n> +                       *buildO = elem[:len(elem)-len(\".go\")] + exeSuffix\n> +               } else {\n>                        *buildO = pkg.Name + \".a\"\n>                }\n>        }\n> +       pkg.target = \"\"\n> +       pkg.Target = \"\"\n>        pkg.Stale = true\n> -       pkg.Target = pkg.target\n>\n>        computeStale(pkg)\n>        return pkg\n> @@ -463,13 +462,13 @@\n>                return a\n>        }\n>\n> -       a.link = p.Name == \"main\"\n> -       if p.local && (!a.link || p.target == \"\") {\n> +       if p.local {\n>                // Imported via local path.  No permanent target.\n>                mode = modeBuild\n>        }\n>        a.objdir = filepath.Join(b.work, a.p.ImportPath, \"_obj\") +\n> string(filepath.Separator)\n>        a.objpkg = buildToolchain.pkgpath(b.work, a.p)\n> +       a.link = p.Name == \"main\"\n>\n>        switch mode {\n>        case modeInstall:\n> Index: src/cmd/go/doc.go\n> ==============================**==============================**=======\n> --- a/src/cmd/go/doc.go\n> +++ b/src/cmd/go/doc.go\n> @@ -453,9 +453,7 @@\n>  command with source in DIR/src/foo/quux is installed into\n>  DIR/bin/quux, not DIR/bin/foo/quux.  The foo/ is stripped\n>  so that you can add DIR/bin to your PATH to get at the\n> -installed commands.  If the GOBIN environment variable is\n> -set, commands are installed to the directory it names instead\n> -of DIR/bin.\n> +installed commands.\n>\n>  Here's an example directory layout:\n>\n> Index: src/cmd/go/help.go\n> ==============================**==============================**=======\n> --- a/src/cmd/go/help.go\n> +++ b/src/cmd/go/help.go\n> @@ -209,9 +209,7 @@\n>  command with source in DIR/src/foo/quux is installed into\n>  DIR/bin/quux, not DIR/bin/foo/quux.  The foo/ is stripped\n>  so that you can add DIR/bin to your PATH to get at the\n> -installed commands.  If the GOBIN environment variable is\n> -set, commands are installed to the directory it names instead\n> -of DIR/bin.\n> +installed commands.\n>\n>  Here's an example directory layout:\n>\n> Index: src/cmd/go/pkg.go\n> ==============================**==============================**=======\n> --- a/src/cmd/go/pkg.go\n> +++ b/src/cmd/go/pkg.go\n> @@ -276,9 +276,6 @@\n>  // load populates p using information from bp, err, which should\n>  // be the result of calling build.Context.Import.\n>  func (p *Package) load(stk *importStack, bp *build.Package, err error)\n> *Package {\n> -       if gobin != \"\" {\n> -               bp.BinDir = gobin\n> -       }\n>        p.copyBuild(bp)\n>\n>        // The localPrefix is the path we interpret ./ imports relative to.\n> @@ -541,6 +538,7 @@\n>                bp, err := build.ImportDir(filepath.Join(**gorootSrc,\n> arg), 0)\n>                bp.ImportPath = arg\n>                bp.Goroot = true\n> +               bp.BinDir = gobin\n>                bp.Root = goroot\n>                bp.SrcRoot = gorootSrc\n>                p := new(Package)\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-12 21:14:33.405141",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5794065: undo CL 5754088 / cae9a7c0db06",
	"created": "2012-03-12 21:00:56.505089",
	"patchsets": [
		1,
		1001
	],
	"modified": "2012-03-12 21:03:34.749952",
	"closed": true,
	"issue": 5794065
}