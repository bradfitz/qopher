{
	"description": "cmd/godoc: use go/build to determine package and example files\n\nAlso:\n- faster code for example extraction\n- simplify handling of command documentation:\n  all \"main\" packages are treated as commands\n- various minor cleanups along the way\n\nFor commands written in Go, any doc.go file containing\ndocumentation must now be part of package main (rather\nthen package documentation), otherwise the documentation\nwon't show up in godoc (it will still build, though).\n\nFor commands written in C, documentation may still be\nin doc.go files defining package documentation, but the\nrecommended way is to explicitly ignore those files with\na +build ignore constraint to define package main.\n\nFixes issue 4806.",
	"cc": [
		"adg@golang.org",
		"rsc@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"gary.burd@gmail.com",
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"gri@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/cmd/godoc/godoc.go\nFile src/cmd/godoc/godoc.go (right):\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/cmd/godoc/godoc.go#newcode974\nsrc/cmd/godoc/godoc.go:974: // directories, PageInfo.Dirs is nil. If error occurred, PageInfo.Err is set\ns/error/an error/\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/cmd/godoc/godoc.go#newcode993\nsrc/cmd/godoc/godoc.go:993: if err != nil && !strings.HasPrefix(err.Error(), \"no Go source files\") {\nif _, nogo := err.(*build.NoGoError); err != nil && !nogo {\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/cmd/godoc/godoc.go#newcode1034\nsrc/cmd/godoc/godoc.go:1034: files, err = parseFiles(fset, abspath, append(pkginfo.TestGoFiles, pkginfo.XTestGoFiles...))\nput the append in a separate var\ntestFiles := append(...\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/pkg/exp/README\nFile src/pkg/exp/README (right):\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/pkg/exp/README#newcode1\nsrc/pkg/exp/README:1: This directory tree contains experimental packages and\nThis change isn't relevant to this CL\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go\nFile src/pkg/go/build/build.go (left):\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go#oldcode378\nsrc/pkg/go/build/build.go:378: //\t- .go files in package documentation\nOn 2013/02/18 15:42:39, bradfitz wrote:\n> this and below are an API change, no?\n> \n> we can stop using package documentation, but can we make the tool no longer\n> respect it?\n\nMaybe we can just leave this support in go/build. When I wrote my original mail about this I thought there would be more to it than this.",
			"disapproval": false,
			"date": "2013-02-19 05:35:39.793020",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 19 February 2013 16:57, <gri@golang.org> wrote:\r\n\r\n> Need to re-check. My preference is still to move forward.\r\n>\r\n\r\nI think we can remove support from the godoc tool, but not from go/build\r\nbecause of the compatibility guarantee. Happy to hear more opinions but I'm\r\nnot optimistic.\r\n\r\nMaybe we could add a mode flag that disables 'package documentation' if\r\nthat makes it easier for you in godoc.\r\n",
			"disapproval": false,
			"date": "2013-02-19 06:15:01.550080",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3633a89bb56d ***\n\ncmd/godoc: use go/build to determine package and example files\n\nAlso:\n- faster code for example extraction\n- simplify handling of command documentation:\n  all \"main\" packages are treated as commands\n- various minor cleanups along the way\n\nFor commands written in Go, any doc.go file containing\ndocumentation must now be part of package main (rather\nthen package documentation), otherwise the documentation\nwon't show up in godoc (it will still build, though).\n\nFor commands written in C, documentation may still be\nin doc.go files defining package documentation, but the\nrecommended way is to explicitly ignore those files with\na +build ignore constraint to define package main.\n\nFixes issue 4806.\n\nR=adg, rsc, dave, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7333046",
			"disapproval": false,
			"date": "2013-02-19 19:20:02.988460",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"gri@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-02-19 19:18:14.013810",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-18 07:11:00.477090",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Good riddance to the documentation package.\r\n\r\nOn Mon, Feb 18, 2013 at 6:11 PM,  <gri@golang.org> wrote:\r\n> Reviewers: adg, rsc,\r\n>\r\n> Message:\r\n> Hello adg@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> cmd/godoc: use go/build to determine package and example files\r\n>\r\n> Also:\r\n> - faster code for example extraction\r\n> - simplify handling of command documentation\r\n>   (no special \"documentation\" packages, instead treat \"main\"\r\n>   packages as commands).\r\n> - remove special handling of \"documentation\" packages from go/build\r\n> - various minor cleanups along the way\r\n>\r\n> Fixes issue 4806.\r\n>\r\n> Please review this at https://codereview.appspot.com/7333046/\r\n>\r\n> Affected files:\r\n>   M lib/godoc/package.html\r\n>   M lib/godoc/package.txt\r\n>   M misc/dashboard/builder/doc.go\r\n>   M misc/goplay/doc.go\r\n>   M src/cmd/5a/doc.go\r\n>   M src/cmd/5c/doc.go\r\n>   M src/cmd/5g/doc.go\r\n>   M src/cmd/5l/doc.go\r\n>   M src/cmd/6a/doc.go\r\n>   M src/cmd/6c/doc.go\r\n>   M src/cmd/6g/doc.go\r\n>   M src/cmd/6l/doc.go\r\n>   M src/cmd/8a/doc.go\r\n>   M src/cmd/8c/doc.go\r\n>   M src/cmd/8g/doc.go\r\n>   M src/cmd/8l/doc.go\r\n>   M src/cmd/cc/doc.go\r\n>   M src/cmd/cgo/doc.go\r\n>   M src/cmd/cov/doc.go\r\n>   M src/cmd/fix/doc.go\r\n>   M src/cmd/gc/doc.go\r\n>   M src/cmd/go/doc.go\r\n>   M src/cmd/go/main.go\r\n>   M src/cmd/godoc/dirtrees.go\r\n>   M src/cmd/godoc/doc.go\r\n>   M src/cmd/godoc/godoc.go\r\n>   M src/cmd/godoc/parser.go\r\n>   M src/cmd/gofmt/doc.go\r\n>   M src/cmd/ld/doc.go\r\n>   M src/cmd/nm/doc.go\r\n>   M src/cmd/pack/doc.go\r\n>   M src/cmd/prof/doc.go\r\n>   M src/cmd/vet/doc.go\r\n>   M src/cmd/yacc/doc.go\r\n>   M src/pkg/exp/README\r\n>   M src/pkg/exp/ebnflint/doc.go\r\n>   M src/pkg/exp/gotype/doc.go\r\n>   M src/pkg/go/build/build.go\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-18 07:16:15.011310",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\r\n\r\nI removed the go/build changes. Packages and commands will still build\r\nas before, unchanged.\r\n\r\nHowever, godoc won't honor the documentation package anymore (consider\r\nit an incentive to move on).\r\n\r\nConsequences:\r\n\r\n1) For pure commands written in Go (rather than C), any documentation\r\nmust simply be part of package main (otherwise the file is ignored) -\r\nso all \"package documentation\" clauses must be changed to \"package\r\nmain\" in these cases. This is the natural and obvious way to do it -\r\nlike for any other package. (godoc could consider ignored files, such\r\nas package \"documentation\", but in general ignored files may belong to\r\na different build, and thus doing this right would require extracting\r\nthe package name - it's not worth the effort to support a deprecated\r\nstyle).\r\n\r\n2) For commands written in C (more precisely, packages w/o any .go\r\nfiles included in the build), the old style still works. Documentation\r\nis extracted from any ignored .go files in this case. The file may be\r\nignored because it defines package \"documentation\" (old style -\r\ndeprecated), or because it's explicitly ignored via a build constraint\r\n(new style - recommended).\r\n\r\n- gri\r\n\r\nOn Tue, Feb 19, 2013 at 8:05 AM,  <rsc@golang.org> wrote:\r\n> I would love to see package documentation disappear, but I think Andrew\r\n> is right that we have to preserve the behavior of go/build (namely,\r\n> ignoring those files). Otherwise, if someone has created a package with\r\n> package p and package documentation in one directory, it will stop\r\n> building.\r\n>\r\n> I think that if we drop the go/build change, everything else still\r\n> works, though, right?\r\n>\r\n>\r\n> https://codereview.appspot.com/7333046/\r\n",
			"disapproval": false,
			"date": "2013-02-19 19:10:50.531910",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"gri@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go\nFile src/pkg/go/build/build.go (left):\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go#oldcode378\nsrc/pkg/go/build/build.go:378: //\t- .go files in package documentation\nthis and below are an API change, no?\n\nwe can stop using package documentation, but can we make the tool no longer respect it?",
			"disapproval": false,
			"date": "2013-02-18 15:42:38.938500",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I suppose that's correct. Existing binaries written in Go containing a\r\npackage documentation will have to rename it to main; if they are\r\nwritten in C they will also have to add // build +ignore .\r\n\r\nLet's see what rsc thinks. I'm somewhat in favor of pushing this\r\nforward so we can get rid of all this special-casing which is purely\r\nhistoric and from a time where we didn't enforce single-package\r\ndirectories and where there was no go/build and go tool.\r\n\r\n- gri\r\n\r\nOn Mon, Feb 18, 2013 at 7:42 AM,  <bradfitz@golang.org> wrote:\r\n>\r\n> https://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go\r\n> File src/pkg/go/build/build.go (left):\r\n>\r\n> https://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go#oldcode378\r\n> src/pkg/go/build/build.go:378: //       - .go files in package documentation\r\n> this and below are an API change, no?\r\n>\r\n> we can stop using package documentation, but can we make the tool no\r\n> longer respect it?\r\n>\r\n> https://codereview.appspot.com/7333046/\r\n",
			"disapproval": false,
			"date": "2013-02-18 17:07:25.276380",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"gri@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/18 15:42:38, bradfitz wrote:\n> https://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go\n> File src/pkg/go/build/build.go (left):\n> \n> https://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go#oldcode378\n> src/pkg/go/build/build.go:378: //\t- .go files in package documentation\n> this and below are an API change, no?\n> \n> we can stop using package documentation, but can we make the tool no longer\n> respect it?\n\nI'm in favor of dropping support for it.\n\nGitHub search yields <2000 results for \"package documentation\" in Go files:\n\nhttps://github.com/search?q=%22package+documentation%22+extension%3A.go&type=Code&ref=searchresults\n\nEyeballing the results, most of these are one of\na) generated cruft (must be some build tool that does this?)\nb) instances of doc.go from clones of the main Go repo\nc) short docs for commands (much fewer of these)\n\nIt's a shame that c should stop working, but there aren't many and they're easy to find and fix.",
			"disapproval": false,
			"date": "2013-02-19 05:19:21.626780",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looping in Gary Burd, one of the more prominent users of go/build.\r\nHow would removing support for \"package documentation\" affect godoc.org?\r\n\r\n\r\nOn 19 February 2013 02:42, <bradfitz@golang.org> wrote:\r\n\r\n>\r\n> https://codereview.appspot.**com/7333046/diff/13039/src/**\r\n> pkg/go/build/build.go<https://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go>\r\n> File src/pkg/go/build/build.go (left):\r\n>\r\n> https://codereview.appspot.**com/7333046/diff/13039/src/**\r\n> pkg/go/build/build.go#**oldcode378<https://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go#oldcode378>\r\n> src/pkg/go/build/build.go:378: //       - .go files in package\r\n> documentation\r\n> this and below are an API change, no?\r\n>\r\n> we can stop using package documentation, but can we make the tool no\r\n> longer respect it?\r\n>\r\n> https://codereview.appspot.**com/7333046/<https://codereview.appspot.com/7333046/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-19 06:13:22.876600",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/cmd/godoc/godoc.go\nFile src/cmd/godoc/godoc.go (right):\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/cmd/godoc/godoc.go#newcode974\nsrc/cmd/godoc/godoc.go:974: // directories, PageInfo.Dirs is nil. If error occurred, PageInfo.Err is set\nOn 2013/02/19 05:35:40, adg wrote:\n> s/error/an error/\n\nDone.\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/cmd/godoc/godoc.go#newcode993\nsrc/cmd/godoc/godoc.go:993: if err != nil && !strings.HasPrefix(err.Error(), \"no Go source files\") {\nOn 2013/02/19 05:35:40, adg wrote:\n> if _, nogo := err.(*build.NoGoError); err != nil && !nogo {\n\nah, neat! I missed this.\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/cmd/godoc/godoc.go#newcode1034\nsrc/cmd/godoc/godoc.go:1034: files, err = parseFiles(fset, abspath, append(pkginfo.TestGoFiles, pkginfo.XTestGoFiles...))\nOn 2013/02/19 05:35:40, adg wrote:\n> put the append in a separate var\n> testFiles := append(...\n\nDone.\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/pkg/exp/README\nFile src/pkg/exp/README (right):\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/pkg/exp/README#newcode1\nsrc/pkg/exp/README:1: This directory tree contains experimental packages and\nOn 2013/02/19 05:35:40, adg wrote:\n> This change isn't relevant to this CL\n\nexcluded\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go\nFile src/pkg/go/build/build.go (left):\n\nhttps://codereview.appspot.com/7333046/diff/13039/src/pkg/go/build/build.go#oldcode378\nsrc/pkg/go/build/build.go:378: //\t- .go files in package documentation\nOn 2013/02/19 05:35:40, adg wrote:\n> On 2013/02/18 15:42:39, bradfitz wrote:\n> > this and below are an API change, no?\n> > \n> > we can stop using package documentation, but can we make the tool no longer\n> > respect it?\n> \n> Maybe we can just leave this support in go/build. When I wrote my original mail\n> about this I thought there would be more to it than this.\n\nNeed to re-check. My preference is still to move forward.",
			"disapproval": false,
			"date": "2013-02-19 05:57:30.302810",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I would love to see package documentation disappear, but I think Andrew is right that we have to preserve the behavior of go/build (namely, ignoring those files). Otherwise, if someone has created a package with package p and package documentation in one directory, it will stop building.\n\nI think that if we drop the go/build change, everything else still works, though, right?",
			"disapproval": false,
			"date": "2013-02-19 16:05:59.205670",
			"approval": false
		},
		{
			"sender": "gary.burd@gmail.com",
			"recipients": [
				"gri@golang.org",
				"gary.burd@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> How would removing support for \"package documentation\" \n> affect godoc.org?\n\nI will remove the godoc.org code to handle \"package documentation\" when 1.1 is released. I think it's more important for godoc.org to match the godoc tool than it is to remain compatible with existing code.",
			"disapproval": false,
			"date": "2013-02-20 06:20:12.991630",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks. Apologies for jumping the gun here.\r\n- gri\r\n\r\nOn Tue, Feb 19, 2013 at 10:20 PM,  <gary.burd@gmail.com> wrote:\r\n>> How would removing support for \"package documentation\"\r\n>> affect godoc.org?\r\n>\r\n>\r\n> I will remove the godoc.org code to handle \"package documentation\" when\r\n> 1.1 is released. I think it's more important for godoc.org to match the\r\n> godoc tool than it is to remain compatible with existing code.\r\n>\r\n> https://codereview.appspot.com/7333046/\r\n",
			"disapproval": false,
			"date": "2013-02-20 06:28:03.139610",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"gri@golang.org",
				"gary.burd@gmail.com",
				"dave@cheney.net",
				"adg@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I believe this has caused a regression, see https://groups.google.com/d/topic/golang-nuts/Jv70Gj2nSmc/discussion",
			"disapproval": false,
			"date": "2013-02-21 01:45:29.156920",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks. I answered to that thread. This is not technically an API change\r\nbut a change of how godoc interprets package documentation. Clearly we need\r\nto address this if it causes major issues, but at the same time we'd like\r\nto move forward.\r\n- gri\r\n\r\n\r\nOn Wed, Feb 20, 2013 at 5:45 PM, <dave@cheney.net> wrote:\r\n\r\n> I believe this has caused a regression, see\r\n> https://groups.google.com/d/**topic/golang-nuts/Jv70Gj2nSmc/**discussion<https://groups.google.com/d/topic/golang-nuts/Jv70Gj2nSmc/discussion>\r\n>\r\n> https://codereview.appspot.**com/7333046/<https://codereview.appspot.com/7333046/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-21 02:40:43.676610",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks Robert.\r\nOn 21 Feb 2013 13:40, \"Robert Griesemer\" <gri@golang.org> wrote:\r\n\r\n> Thanks. I answered to that thread. This is not technically an API change\r\n> but a change of how godoc interprets package documentation. Clearly we need\r\n> to address this if it causes major issues, but at the same time we'd like\r\n> to move forward.\r\n> - gri\r\n>\r\n>\r\n> On Wed, Feb 20, 2013 at 5:45 PM, <dave@cheney.net> wrote:\r\n>\r\n>> I believe this has caused a regression, see\r\n>> https://groups.google.com/d/**topic/golang-nuts/Jv70Gj2nSmc/**discussion<https://groups.google.com/d/topic/golang-nuts/Jv70Gj2nSmc/discussion>\r\n>>\r\n>> https://codereview.appspot.**com/7333046/<https://codereview.appspot.com/7333046/>\r\n>>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-21 02:47:40.002720",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 7333046: cmd/godoc: use go/build to determine package and exampl...",
	"created": "2013-02-16 00:45:35.657900",
	"patchsets": [
		1,
		1002,
		4001,
		5001,
		7001,
		2030,
		12001,
		13039,
		21001,
		24001,
		5068,
		8004,
		16039,
		16076
	],
	"modified": "2013-02-21 01:45:29.308500",
	"closed": true,
	"issue": 7333046
}