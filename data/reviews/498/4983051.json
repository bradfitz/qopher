{
	"description": "leveldb/memdb: change node representation from a pointer-to-struct\nto a slice offset.\n\nPrinting runtime.MemStats.Mallocs at the end of memdb_test.go drops from\naround 22000 to around 20000. I suspect that this 10% ratio underestimates\nthe magnitude of improvement because, IIUC, the compiler does not yet\neliminate many string -> []byte conversions in the test code.",
	"cc": [
		"bradfitz@golang.org",
		"dvyukov@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nOn Wed, Sep 7, 2011 at 4:25 AM, <nigeltao@golang.org> wrote:\n\n> Reviewers: bradfitz,\n>\n> Message:\n> Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://code.google.com/p/**leveldb-go/<https://code.google.com/p/leveldb-go/>\n>\n>\n> Description:\n> leveldb/memdb: change node representation from a pointer-to-struct\n> to a slice offset.\n>\n> Printing runtime.MemStats.Mallocs at the end of memdb_test.go drops from\n> around 22000 to around 20000. I suspect that this 10% ratio\n> underestimates\n> the magnitude of improvement because, IIUC, the compiler does not yet\n> eliminate many string -> []byte conversions in the test code.\n>\n> Please review this at http://codereview.appspot.com/**4983051/<http://codereview.appspot.com/4983051/>\n>\n> Affected files:\n>  M leveldb/memdb/memdb.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-09-13 00:17:43.862892",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/leveldb-go/",
			"disapproval": false,
			"date": "2011-09-07 11:25:04.558643",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Do you call runtime.UpdateMemStats() before querying MemStats? It can significantly affect results.",
			"disapproval": false,
			"date": "2011-09-07 11:36:57.905191",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 7 September 2011 21:36,  <dvyukov@google.com> wrote:\n> Do you call runtime.UpdateMemStats() before querying MemStats?\n\nYes.\n",
			"disapproval": false,
			"date": "2011-09-07 22:51:30.450624",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as 4ba647ed38e1 ***\n\nleveldb/memdb: change node representation from a pointer-to-struct\nto a slice offset.\n\nPrinting runtime.MemStats.Mallocs at the end of memdb_test.go drops from\naround 22000 to around 20000. I suspect that this 10% ratio underestimates\nthe magnitude of improvement because, IIUC, the compiler does not yet\neliminate many string -> []byte conversions in the test code.\n\nR=bradfitz, dvyukov\nCC=golang-dev\nhttp://codereview.appspot.com/4983051",
			"disapproval": false,
			"date": "2011-09-14 12:00:54.045536",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 4983051: leveldb/memdb: change node representation from a pointe...",
	"created": "2011-09-07 11:24:39.352605",
	"patchsets": [
		1,
		2001,
		5001,
		10001
	],
	"modified": "2011-09-14 12:00:56.009148",
	"closed": true,
	"issue": 4983051
}