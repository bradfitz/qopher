{
	"description": "ld: grow dwarf includestack on demand.\n\nFixes issue 2241\nwhile not breaking issue 1878 again.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=c0abe3f34cec ***\n\nld: grow dwarf includestack on demand.\n\nFixes issue 2241\nwhile not breaking issue 1878 again.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/4988048",
			"disapproval": false,
			"date": "2011-09-09 13:09:02.652616",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-08 08:57:08.579321",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Please add tests for both issues.\nI attached a test case to 1878 originally.\n\nAlso, can you say something about why\nthis is the right fix?  Why was the other\nfix wrong?  It seems like this just deals\nwith an arbitrarily (and incorrectly) nested\nstack, but doesn't address the root problem.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-09-08 14:02:29.443447",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Sep 8, 2011 at 16:32, Luuk van Dijk <lvd@google.com> wrote:\n\n>\n>\n> On Thu, Sep 8, 2011 at 16:10, Luuk van Dijk <lvd@google.com> wrote:\n>\n>>\n>>\n>> On Thu, Sep 8, 2011 at 16:02, Russ Cox <rsc@golang.org> wrote:\n>>\n>>> Please add tests for both issues.\n>>> I attached a test case to 1878 originally.\n>>>\n>>\n>> i ran that.  it consists of 21 files though.  should i put it in a\n>> separate dir?\n>>\n>\n> i made a test/dwarf dir.  other ld/dwarf.c related things can go in there\n> too.  except i need to fiddle with the top lines a bit.\n>\n\nworks now\n\n\n>\n>\n>>\n>>\n>>>\n>>> Also, can you say something about why\n>>> this is the right fix?  Why was the other\n>>> fix wrong?\n>>\n>>\n>> it wasnt, this just deals with the fallout.  the dwarf code used the\n>> previous absence of the pop to re-use the top of the stack.  now that gc\n>> emits those pops, it would underflow, so to fix that the second if() is\n>> gone.  but then the root problem appears: the include 'stack' /can/ be\n>> arbitrarily deep now, so 16 is no longer more than enough.\n>>\n>>\n>>> It seems like this just deals\n>>> with an arbitrarily (and incorrectly) nested\n>>> stack, but doesn't address the root problem.\n>>>\n>>>\n>> this makes it work with what gc outputs now, while not breaking what cc\n>> outputs for .goc.\n>>\n>>\n>>>  Russ\n>>>\n>>\n>>\n>\n",
			"disapproval": false,
			"date": "2011-09-08 14:40:40.909552",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Sep 8, 2011 at 16:02, Russ Cox <rsc@golang.org> wrote:\n\n> Please add tests for both issues.\n> I attached a test case to 1878 originally.\n>\n\ni ran that.  it consists of 21 files though.  should i put it in a separate\ndir?\n\n\n>\n> Also, can you say something about why\n> this is the right fix?  Why was the other\n> fix wrong?\n\n\nit wasnt, this just deals with the fallout.  the dwarf code used the\nprevious absence of the pop to re-use the top of the stack.  now that gc\nemits those pops, it would underflow, so to fix that the second if() is\ngone.  but then the root problem appears: the include 'stack' /can/ be\narbitrarily deep now, so 16 is no longer more than enough.\n\n\n> It seems like this just deals\n> with an arbitrarily (and incorrectly) nested\n> stack, but doesn't address the root problem.\n>\n>\nthis makes it work with what gc outputs now, while not breaking what cc\noutputs for .goc.\n\n\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-09-08 14:10:48.508683",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Sep 8, 2011 at 16:10, Luuk van Dijk <lvd@google.com> wrote:\n\n>\n>\n> On Thu, Sep 8, 2011 at 16:02, Russ Cox <rsc@golang.org> wrote:\n>\n>> Please add tests for both issues.\n>> I attached a test case to 1878 originally.\n>>\n>\n> i ran that.  it consists of 21 files though.  should i put it in a separate\n> dir?\n>\n\ni made a test/dwarf dir.  other ld/dwarf.c related things can go in there\ntoo.  except i need to fiddle with the top lines a bit.\n\n\n>\n>\n>>\n>> Also, can you say something about why\n>> this is the right fix?  Why was the other\n>> fix wrong?\n>\n>\n> it wasnt, this just deals with the fallout.  the dwarf code used the\n> previous absence of the pop to re-use the top of the stack.  now that gc\n> emits those pops, it would underflow, so to fix that the second if() is\n> gone.  but then the root problem appears: the include 'stack' /can/ be\n> arbitrarily deep now, so 16 is no longer more than enough.\n>\n>\n>> It seems like this just deals\n>> with an arbitrarily (and incorrectly) nested\n>> stack, but doesn't address the root problem.\n>>\n>>\n> this makes it work with what gc outputs now, while not breaking what cc\n> outputs for .goc.\n>\n>\n>>  Russ\n>>\n>\n>\n",
			"disapproval": false,
			"date": "2011-09-08 14:32:43.716179",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nmissing copyright note in linedirectives.go.\nit's okay to omit it in the others\n",
			"disapproval": false,
			"date": "2011-09-09 13:01:28.523703",
			"approval": true
		}
	],
	"owner_email": "lvd@google.com",
	"private": false,
	"base_url": "",
	"owner": "lvd",
	"subject": "code review 4988048: ld: grow dwarf includestack on demand.",
	"created": "2011-09-08 08:56:39.046310",
	"patchsets": [
		1,
		2001,
		5001,
		6001,
		8001,
		1002,
		3003,
		8003,
		16001,
		13003,
		20001,
		21001,
		10003,
		2029
	],
	"modified": "2011-09-09 13:09:04.064203",
	"closed": true,
	"issue": 4988048
}