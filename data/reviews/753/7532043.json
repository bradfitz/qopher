{
	"description": "net/http: change user agent string\n\nSome IDS somewhere thinks \"Go http package\" is a virus.\nMake it something else for Go 1.1. Dumb but easy.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-06 20:35:04.431460",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i think it's fine with the concats. it's just a test.\r\n",
			"disapproval": false,
			"date": "2013-03-06 21:47:48.169540",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "given Go's popularity and Go 1.1's various improvements,\r\ni expect that virus writers will also upgrade to Go 1.1. ;-)\r\n",
			"disapproval": false,
			"date": "2013-03-06 20:56:21.619780",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "use the constant defaultUserAgent in the tests?  could be forwarded from\r\nexport_test.go.\r\n\r\nOn Wed, Mar 6, 2013 at 12:35 PM, <rsc@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> net/http: change user agent string\r\n>\r\n> Some IDS somewhere thinks \"Go http package\" is a virus.\r\n> Make it something else for Go 1.1. Dumb but easy.\r\n>\r\n> Please review this at https://codereview.appspot.**com/7532043/<https://codereview.appspot.com/7532043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/http/header_test.**go\r\n>   M src/pkg/net/http/request.go\r\n>   M src/pkg/net/http/request_test.**go\r\n>   M src/pkg/net/http/requestwrite_**test.go\r\n>\r\n>\r\n> Index: src/pkg/net/http/header_test.**go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/http/header_**test.go\r\n> +++ b/src/pkg/net/http/header_**test.go\r\n> @@ -178,7 +178,7 @@\r\n>         \"Content-Length\": {\"123\"},\r\n>         \"Content-Type\":   {\"text/plain\"},\r\n>         \"Date\":           {\"some date at some time Z\"},\r\n> -       \"Server\":         {\"Go http package\"},\r\n> +       \"Server\":         {\"Go 1.1 package http\"},\r\n>  }\r\n>\r\n>  var buf bytes.Buffer\r\n> Index: src/pkg/net/http/request.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/http/request.go\r\n> +++ b/src/pkg/net/http/request.go\r\n> @@ -283,7 +283,7 @@\r\n>         return def\r\n>  }\r\n>\r\n> -const defaultUserAgent = \"Go http package\"\r\n> +const defaultUserAgent = \"Go 1.1 package http\"\r\n>\r\n>  // Write writes an HTTP/1.1 request -- header and body -- in wire format.\r\n>  // This method consults the following fields of the request:\r\n> Index: src/pkg/net/http/request_test.**go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/http/request_**test.go\r\n> +++ b/src/pkg/net/http/request_**test.go\r\n> @@ -289,7 +289,7 @@\r\n>         want := []string{\r\n>                 \"GET / HTTP/1.1\\r\\n\",\r\n>                 \"Host: foo.com\\r\\n\",\r\n> -               \"User-Agent: Go http package\\r\\n\",\r\n> +               \"User-Agent: Go 1.1 package http\\r\\n\",\r\n>                 \"\\r\\n\",\r\n>         }\r\n>         if !reflect.DeepEqual(got, want) {\r\n> Index: src/pkg/net/http/requestwrite_**test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/http/**requestwrite_test.go\r\n> +++ b/src/pkg/net/http/**requestwrite_test.go\r\n> @@ -93,13 +93,13 @@\r\n>\r\n>                 WantWrite: \"GET /search HTTP/1.1\\r\\n\" +\r\n>                         \"Host: www.google.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Transfer-Encoding: chunked\\r\\n\\r\\n\" +\r\n>                         chunk(\"abcdef\") + chunk(\"\"),\r\n>\r\n>                 WantProxy: \"GET http://www.google.com/searchHTTP/1.1\\r\\n\" +\r\n>                         \"Host: www.google.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Transfer-Encoding: chunked\\r\\n\\r\\n\" +\r\n>                         chunk(\"abcdef\") + chunk(\"\"),\r\n>         },\r\n> @@ -123,14 +123,14 @@\r\n>\r\n>                 WantWrite: \"POST /search HTTP/1.1\\r\\n\" +\r\n>                         \"Host: www.google.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Connection: close\\r\\n\" +\r\n>                         \"Transfer-Encoding: chunked\\r\\n\\r\\n\" +\r\n>                         chunk(\"abcdef\") + chunk(\"\"),\r\n>\r\n>                 WantProxy: \"POST http://www.google.com/searchHTTP/1.1\\r\\n\" +\r\n>                         \"Host: www.google.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Connection: close\\r\\n\" +\r\n>                         \"Transfer-Encoding: chunked\\r\\n\\r\\n\" +\r\n>                         chunk(\"abcdef\") + chunk(\"\"),\r\n> @@ -156,7 +156,7 @@\r\n>\r\n>                 WantWrite: \"POST /search HTTP/1.1\\r\\n\" +\r\n>                         \"Host: www.google.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Connection: close\\r\\n\" +\r\n>                         \"Content-Length: 6\\r\\n\" +\r\n>                         \"\\r\\n\" +\r\n> @@ -164,7 +164,7 @@\r\n>\r\n>                 WantProxy: \"POST http://www.google.com/searchHTTP/1.1\\r\\n\" +\r\n>                         \"Host: www.google.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Connection: close\\r\\n\" +\r\n>                         \"Content-Length: 6\\r\\n\" +\r\n>                         \"\\r\\n\" +\r\n> @@ -187,14 +187,14 @@\r\n>\r\n>                 WantWrite: \"POST / HTTP/1.1\\r\\n\" +\r\n>                         \"Host: example.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Content-Length: 6\\r\\n\" +\r\n>                         \"\\r\\n\" +\r\n>                         \"abcdef\",\r\n>\r\n>                 WantProxy: \"POST http://example.com/ HTTP/1.1\\r\\n\" +\r\n>                         \"Host: example.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Content-Length: 6\\r\\n\" +\r\n>                         \"\\r\\n\" +\r\n>                         \"abcdef\",\r\n> @@ -210,7 +210,7 @@\r\n>\r\n>                 WantWrite: \"GET /search HTTP/1.1\\r\\n\" +\r\n>                         \"Host: www.google.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"\\r\\n\",\r\n>         },\r\n>\r\n> @@ -232,13 +232,13 @@\r\n>                 // Also, nginx expects it for POST and PUT.\r\n>                 WantWrite: \"POST / HTTP/1.1\\r\\n\" +\r\n>                         \"Host: example.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Content-Length: 0\\r\\n\" +\r\n>                         \"\\r\\n\",\r\n>\r\n>                 WantProxy: \"POST / HTTP/1.1\\r\\n\" +\r\n>                         \"Host: example.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Content-Length: 0\\r\\n\" +\r\n>                         \"\\r\\n\",\r\n>         },\r\n> @@ -258,13 +258,13 @@\r\n>\r\n>                 WantWrite: \"POST / HTTP/1.1\\r\\n\" +\r\n>                         \"Host: example.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Transfer-Encoding: chunked\\r\\n\\r\\n\" +\r\n>                         chunk(\"x\") + chunk(\"\"),\r\n>\r\n>                 WantProxy: \"POST / HTTP/1.1\\r\\n\" +\r\n>                         \"Host: example.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"Transfer-Encoding: chunked\\r\\n\\r\\n\" +\r\n>                         chunk(\"x\") + chunk(\"\"),\r\n>         },\r\n> @@ -325,7 +325,7 @@\r\n>\r\n>                 WantWrite: \"GET /foo HTTP/1.1\\r\\n\" +\r\n>                         \"Host: \\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\" +\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                         \"X-Foo: X-Bar\\r\\n\\r\\n\",\r\n>         },\r\n>\r\n> @@ -351,7 +351,7 @@\r\n>\r\n>                 WantWrite: \"GET /search HTTP/1.1\\r\\n\" +\r\n>                         \"Host: \\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\\r\\n\",\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\\r\\n\",\r\n>         },\r\n>\r\n>         // Opaque test #1 from golang.org/issue/4860\r\n> @@ -370,7 +370,7 @@\r\n>\r\n>                 WantWrite: \"GET /%2F/%2F/ HTTP/1.1\\r\\n\" +\r\n>                         \"Host: www.google.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\\r\\n\",\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\\r\\n\",\r\n>         },\r\n>\r\n>         // Opaque test #2 from golang.org/issue/4860\r\n> @@ -389,7 +389,7 @@\r\n>\r\n>                 WantWrite: \"GET http://y.google.com/%2F/%2F/HTTP/1.1\\r\\n\" +\r\n>                         \"Host: x.google.com\\r\\n\" +\r\n> -                       \"User-Agent: Go http package\\r\\n\\r\\n\",\r\n> +                       \"User-Agent: Go 1.1 package http\\r\\n\\r\\n\",\r\n>         },\r\n>  }\r\n>\r\n> @@ -474,7 +474,7 @@\r\n>         }\r\n>         expected := \"POST / HTTP/1.1\\r\\n\" +\r\n>                 \"Host: foo.com\\r\\n\" +\r\n> -               \"User-Agent: Go http package\\r\\n\" +\r\n> +               \"User-Agent: Go 1.1 package http\\r\\n\" +\r\n>                 \"Transfer-Encoding: chunked\\r\\n\\r\\n\" +\r\n>                 // TODO: currently we don't buffer before chunking, so we\r\n> get a\r\n>                 // single \"m\" chunk before the other chunks, as this was\r\n> the 1-byte\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-06 20:38:31.055910",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-06 20:47:37.407400",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7532043/diff/9001/src/pkg/net/http/requestwrite_test.go\nFile src/pkg/net/http/requestwrite_test.go (right):\n\nhttps://codereview.appspot.com/7532043/diff/9001/src/pkg/net/http/requestwrite_test.go#newcode96\nsrc/pkg/net/http/requestwrite_test.go:96: \"User-Agent: Go 1.1 package http\\r\\n\" +\nuse the constant all these places too?  it's already + concatenation + happy",
			"disapproval": false,
			"date": "2013-03-06 20:57:40.481820",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ca2b2e58fb69 ***\n\nnet/http: change user agent string\n\nSome IDS somewhere thinks \"Go http package\" is a virus.\nMake it something else for Go 1.1. Dumb but easy.\n\nR=golang-dev, bradfitz, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/7532043",
			"disapproval": false,
			"date": "2013-03-06 21:48:25.227210",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7532043: net/http: change user agent string",
	"created": "2013-03-06 20:34:45.336390",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		13001
	],
	"modified": "2013-03-06 21:48:27.447310",
	"closed": true,
	"issue": 7532043
}