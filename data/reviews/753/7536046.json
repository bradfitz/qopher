{
	"description": "runtime: use 64-bit negative error code on 64-bit machines\n\nNEGL does a negation of the bottom 32 bits and then zero-extends to 64 bits,\nresulting in a negative 32-bit number but a positive 64-bit number.\n\nNEGQ does a full 64-bit negation, so that the result is negative both as\na 32-bit and as a 64-bit number.\n\nThis doesn't matter for the functions that are declared to return int32.\nIt only matters for the ones that return int64 or void* [sic].\n\nThis will fix the current incorrect error in the OpenBSD/amd64 build.\nThe build will still be broken, but it won't report a bogus error.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-14 21:38:31.539650",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Thu, Mar 14, 2013 at 2:38 PM, <rsc@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> runtime: use 64-bit negative error code on 64-bit machines\r\n>\r\n> NEGL does a negation of the bottom 32 bits and then zero-extends to 64\r\n> bits,\r\n> resulting in a negative 32-bit number but a positive 64-bit number.\r\n>\r\n> NEGQ does a full 64-bit negation, so that the result is negative both as\r\n> a 32-bit and as a 64-bit number.\r\n>\r\n> This doesn't matter for the functions that are declared to return int32.\r\n> It only matters for the ones that return int64 or void* [sic].\r\n>\r\n> This will fix the current incorrect error in the OpenBSD/amd64 build.\r\n> The build will still be broken, but it won't report a bogus error.\r\n>\r\n> Please review this at https://codereview.appspot.**com/7536046/<https://codereview.appspot.com/7536046/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/sys_darwin_**amd64.s\r\n>   M src/pkg/runtime/sys_freebsd_**amd64.s\r\n>   M src/pkg/runtime/sys_netbsd_**amd64.s\r\n>   M src/pkg/runtime/sys_openbsd_**amd64.s\r\n>\r\n>\r\n> Index: src/pkg/runtime/sys_darwin_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/sys_darwin_**amd64.s\r\n> +++ b/src/pkg/runtime/sys_darwin_**amd64.s\r\n> @@ -289,7 +289,7 @@\r\n>         MOVQ    $(0x2000000+360), AX    // bsdthread_create\r\n>         SYSCALL\r\n>         JCC 3(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         RET\r\n>         MOVL    $0, AX\r\n>         RET\r\n> @@ -342,7 +342,7 @@\r\n>         MOVQ    $(0x2000000+366), AX    // bsdthread_register\r\n>         SYSCALL\r\n>         JCC 3(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         RET\r\n>         MOVL    $0, AX\r\n>         RET\r\n> @@ -435,7 +435,7 @@\r\n>         MOVL    $(0x2000000+202), AX    // syscall entry\r\n>         SYSCALL\r\n>         JCC 3(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         RET\r\n>         MOVL    $0, AX\r\n>         RET\r\n> @@ -448,7 +448,7 @@\r\n>         MOVL    $(0x2000000+362), AX\r\n>         SYSCALL\r\n>         JCC     2(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         RET\r\n>\r\n>  // int32 runtime\u00b7kevent(int kq, Kevent *changelist, int nchanges, Kevent\r\n> *eventlist, int nevents, Timespec *timeout);\r\n> @@ -462,7 +462,7 @@\r\n>         MOVL    $(0x2000000+363), AX\r\n>         SYSCALL\r\n>         JCC     2(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         RET\r\n>\r\n>  // void runtime\u00b7closeonexec(int32 fd);\r\n> Index: src/pkg/runtime/sys_freebsd_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/sys_freebsd_**amd64.s\r\n> +++ b/src/pkg/runtime/sys_freebsd_**amd64.s\r\n> @@ -261,7 +261,7 @@\r\n>         MOVQ    $202, AX                // sys___sysctl\r\n>         SYSCALL\r\n>         JCC 3(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         RET\r\n>         MOVL    $0, AX\r\n>         RET\r\n> Index: src/pkg/runtime/sys_netbsd_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/sys_netbsd_**amd64.s\r\n> +++ b/src/pkg/runtime/sys_netbsd_**amd64.s\r\n> @@ -16,7 +16,7 @@\r\n>         MOVL    $309, AX                // sys__lwp_create\r\n>         SYSCALL\r\n>         JCC     2(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         RET\r\n>\r\n>  TEXT runtime\u00b7lwp_tramp(SB),7,$0\r\n> @@ -254,7 +254,7 @@\r\n>         MOVL    $197, AX                // sys_mmap\r\n>         SYSCALL\r\n>         JCC     2(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         ADDQ    $16, SP\r\n>         RET\r\n>\r\n> @@ -306,7 +306,7 @@\r\n>         MOVQ    $202, AX                // sys___sysctl\r\n>         SYSCALL\r\n>         JCC 3(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         RET\r\n>         MOVL    $0, AX\r\n>         RET\r\n> Index: src/pkg/runtime/sys_openbsd_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/sys_openbsd_**amd64.s\r\n> +++ b/src/pkg/runtime/sys_openbsd_**amd64.s\r\n> @@ -23,7 +23,7 @@\r\n>\r\n>         // Return if tfork syscall failed.\r\n>         JCC     3(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         RET\r\n>\r\n>         // In parent, return.\r\n> @@ -243,7 +243,7 @@\r\n>         MOVL    $197, AX\r\n>         SYSCALL\r\n>         JCC     2(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         ADDQ    $16, SP\r\n>         RET\r\n>\r\n> @@ -294,7 +294,7 @@\r\n>         MOVQ    $202, AX                // sys___sysctl\r\n>         SYSCALL\r\n>         JCC     3(PC)\r\n> -       NEGL    AX\r\n> +       NEGQ    AX\r\n>         RET\r\n>         MOVL    $0, AX\r\n>         RET\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-14 21:55:10.418030",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ecbd34b63ac1 ***\n\nruntime: use 64-bit negative error code on 64-bit machines\n\nNEGL does a negation of the bottom 32 bits and then zero-extends to 64 bits,\nresulting in a negative 32-bit number but a positive 64-bit number.\n\nNEGQ does a full 64-bit negation, so that the result is negative both as\na 32-bit and as a 64-bit number.\n\nThis doesn't matter for the functions that are declared to return int32.\nIt only matters for the ones that return int64 or void* [sic].\n\nThis will fix the current incorrect error in the OpenBSD/amd64 build.\nThe build will still be broken, but it won't report a bogus error.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7536046",
			"disapproval": false,
			"date": "2013-03-15 03:42:16.132300",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7536046: runtime: use 64-bit negative error code on 64-bit machines",
	"created": "2013-03-14 21:38:20.641640",
	"patchsets": [
		1,
		2001,
		2002,
		3005
	],
	"modified": "2013-03-15 03:42:17.255800",
	"closed": true,
	"issue": 7536046
}