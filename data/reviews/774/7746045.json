{
	"description": "runtime: fix gdb printing of maps\nFixes issue 5098",
	"cc": [
		"minux.ma@gmail.com",
		"bradfitz@golang.org",
		"khr@google.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-22 16:11:50.533330",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Is the hashmap.c change unrelated?\r\n\r\nOn Fri, Mar 22, 2013 at 9:11 AM, <khr@golang.org> wrote:\r\n\r\n> Reviewers: minux,\r\n>\r\n> Message:\r\n> Hello minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> runtime: fix gdb printing of maps\r\n> Fixes issue 5098\r\n>\r\n> Please review this at https://codereview.appspot.**com/7746045/<https://codereview.appspot.com/7746045/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/ld/dwarf.c\r\n>   M src/pkg/runtime/hashmap.c\r\n>   M src/pkg/runtime/runtime-gdb.py\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-22 16:14:08.100740",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It's not unrelated...  It's kind of a bug but had no practical impact\r\nbefore this change.  But it must be in sync with the new code, so it had to\r\nbe fixed.\r\n\r\n\r\nOn Fri, Mar 22, 2013 at 9:14 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> Is the hashmap.c change unrelated?\r\n>\r\n> On Fri, Mar 22, 2013 at 9:11 AM, <khr@golang.org> wrote:\r\n>\r\n>> Reviewers: minux,\r\n>>\r\n>> Message:\r\n>> Hello minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://code.google.com/p/go/\r\n>>\r\n>>\r\n>> Description:\r\n>> runtime: fix gdb printing of maps\r\n>> Fixes issue 5098\r\n>>\r\n>> Please review this at https://codereview.appspot.**com/7746045/<https://codereview.appspot.com/7746045/>\r\n>>\r\n>> Affected files:\r\n>>   M src/cmd/ld/dwarf.c\r\n>>   M src/pkg/runtime/hashmap.c\r\n>>   M src/pkg/runtime/runtime-gdb.py\r\n>>\r\n>>\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n>> .\r\n>> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n>> .\r\n>>\r\n>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-22 16:16:32.997930",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"khr@golang.org",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"khr@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks.",
			"disapproval": false,
			"date": "2013-03-22 16:54:38.168090",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I got this when i tried out this CL with gdb 7.3 on Darwin/amd64:\r\n\r\n(gdb) b 'main.main'\r\nBreakpoint 1 at 0x2000: file /Users/minux/go/go2.hg/src/map.go, line 7.\r\n(gdb) source pkg/runtime/runtime-gdb.py\r\nLoading Go Runtime support.\r\n(gdb) r\r\nStarting program: /Users/minux/go/go2.hg/src/map\r\n[New Thread 0x1903 of process 87477]\r\n\r\nBreakpoint 1, main.main () at /Users/minux/go/go2.hg/src/map.go:7\r\n7\tfunc main() {\r\n(gdb) p 'main.M'\r\n$1 = (map[string]int) 0x0\r\n(gdb) n\r\n8\t\tM = make(map[string]int)\r\n(gdb) p 'main.M'\r\n$2 = (map[string]int) 0x0\r\n(gdb) p *'main.M'\r\n$3 = struct hash<string,int><error reading variable: Cannot access\r\nmemory at address 0x2000155bd>\r\n(gdb) n\r\n9\t\tM[\"a\"] = 1\r\n(gdb) p *'main.M'\r\n$4 = struct hash<string,int><error reading variable: Cannot access\r\nmemory at address 0xa>\r\n(gdb) n\r\n10\t\tfmt.Println(M)\r\n(gdb) p *'main.M'\r\n$5 = struct hash<string,int><error reading variable: Cannot access\r\nmemory at address 0x3937393336333108>\r\n(gdb) n\r\nmap[a:1]\r\n11\t}\r\n",
			"disapproval": false,
			"date": "2013-03-22 19:16:02.822090",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry, looks like I cleaned up one too many lines of testing code.  Try now.\r\n\r\n\r\nOn Fri, Mar 22, 2013 at 12:15 PM, minux <minux.ma@gmail.com> wrote:\r\n\r\n> I got this when i tried out this CL with gdb 7.3 on Darwin/amd64:\r\n>\r\n> (gdb) b 'main.main'\r\n> Breakpoint 1 at 0x2000: file /Users/minux/go/go2.hg/src/map.go, line 7.\r\n> (gdb) source pkg/runtime/runtime-gdb.py\r\n> Loading Go Runtime support.\r\n> (gdb) r\r\n> Starting program: /Users/minux/go/go2.hg/src/map\r\n> [New Thread 0x1903 of process 87477]\r\n>\r\n> Breakpoint 1, main.main () at /Users/minux/go/go2.hg/src/map.go:7\r\n> 7       func main() {\r\n> (gdb) p 'main.M'\r\n> $1 = (map[string]int) 0x0\r\n> (gdb) n\r\n> 8               M = make(map[string]int)\r\n> (gdb) p 'main.M'\r\n> $2 = (map[string]int) 0x0\r\n> (gdb) p *'main.M'\r\n> $3 = struct hash<string,int><error reading variable: Cannot access\r\n> memory at address 0x2000155bd>\r\n> (gdb) n\r\n> 9               M[\"a\"] = 1\r\n> (gdb) p *'main.M'\r\n> $4 = struct hash<string,int><error reading variable: Cannot access\r\n> memory at address 0xa>\r\n> (gdb) n\r\n> 10              fmt.Println(M)\r\n> (gdb) p *'main.M'\r\n> $5 = struct hash<string,int><error reading variable: Cannot access\r\n> memory at address 0x3937393336333108>\r\n> (gdb) n\r\n> map[a:1]\r\n> 11      }\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-22 20:24:48.566220",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "minux, have you had a chance to look at this yet?\r\n\r\n\r\nOn Fri, Mar 22, 2013 at 1:24 PM, Keith Randall <khr@google.com> wrote:\r\n\r\n> Sorry, looks like I cleaned up one too many lines of testing code.  Try\r\n> now.\r\n>\r\n>\r\n> On Fri, Mar 22, 2013 at 12:15 PM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n>> I got this when i tried out this CL with gdb 7.3 on Darwin/amd64:\r\n>>\r\n>> (gdb) b 'main.main'\r\n>> Breakpoint 1 at 0x2000: file /Users/minux/go/go2.hg/src/map.go, line 7.\r\n>> (gdb) source pkg/runtime/runtime-gdb.py\r\n>> Loading Go Runtime support.\r\n>> (gdb) r\r\n>> Starting program: /Users/minux/go/go2.hg/src/map\r\n>> [New Thread 0x1903 of process 87477]\r\n>>\r\n>> Breakpoint 1, main.main () at /Users/minux/go/go2.hg/src/map.go:7\r\n>> 7       func main() {\r\n>> (gdb) p 'main.M'\r\n>> $1 = (map[string]int) 0x0\r\n>> (gdb) n\r\n>> 8               M = make(map[string]int)\r\n>> (gdb) p 'main.M'\r\n>> $2 = (map[string]int) 0x0\r\n>> (gdb) p *'main.M'\r\n>> $3 = struct hash<string,int><error reading variable: Cannot access\r\n>> memory at address 0x2000155bd>\r\n>> (gdb) n\r\n>> 9               M[\"a\"] = 1\r\n>> (gdb) p *'main.M'\r\n>> $4 = struct hash<string,int><error reading variable: Cannot access\r\n>> memory at address 0xa>\r\n>> (gdb) n\r\n>> 10              fmt.Println(M)\r\n>> (gdb) p *'main.M'\r\n>> $5 = struct hash<string,int><error reading variable: Cannot access\r\n>> memory at address 0x3937393336333108>\r\n>> (gdb) n\r\n>> map[a:1]\r\n>> 11      }\r\n>>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-26 23:35:01.739520",
			"approval": false
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"khr@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e5ff184d8a45 ***\n\nruntime: fix gdb printing of maps\nFixes issue 5098\n\nR=minux.ma, bradfitz, khr, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7746045",
			"disapproval": false,
			"date": "2013-03-29 18:04:10.559610",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thank you!\r\n",
			"disapproval": false,
			"date": "2013-03-30 10:35:09.687020",
			"approval": true
		}
	],
	"owner_email": "khr@golang.org",
	"private": false,
	"base_url": "",
	"owner": "khr",
	"subject": "code review 7746045: runtime: fix gdb printing of maps",
	"created": "2013-03-22 06:53:59.821800",
	"patchsets": [
		1,
		1001,
		3001,
		7002,
		21001,
		25001,
		30001
	],
	"modified": "2013-03-29 18:04:11.998090",
	"closed": true,
	"issue": 7746045
}