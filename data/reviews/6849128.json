{
	"description": "bytes: avoid duplicate malloc/copy in Buffer.ReadString\n\nTwice faster and twice less garbage.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"daniel.morsing@gmail.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6849128/diff/5001/src/pkg/bytes/buffer.go\nFile src/pkg/bytes/buffer.go (right):\n\nhttps://codereview.appspot.com/6849128/diff/5001/src/pkg/bytes/buffer.go#newcode382\nsrc/pkg/bytes/buffer.go:382: i := IndexByte(b.buf[b.off:], delim)\nyou could also introduce a lowercase readBytes method that's shared between ReadBytes and ReadString that returns a private []byte and then ReadBytes and ReadString only do the copying (to new []byte or a string).",
			"disapproval": false,
			"date": "2012-11-30 20:35:22.372090",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net, daniel.morsing@gmail.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-30 21:05:01.074570",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. The comment below is just a suggestion, feel free to reword/ignore it.\n\nhttps://codereview.appspot.com/6849128/diff/10001/src/pkg/bytes/buffer.go\nFile src/pkg/bytes/buffer.go (right):\n\nhttps://codereview.appspot.com/6849128/diff/10001/src/pkg/bytes/buffer.go#newcode363\nsrc/pkg/bytes/buffer.go:363: slice, err := b.readSlice(delim)\n// copy slice as its backing array may be overwritten.",
			"disapproval": false,
			"date": "2012-12-01 00:12:27.718120",
			"approval": true
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You could pull the slicing code into a new method and have ReadBytes and ReadString copy from the resulting slice.",
			"disapproval": false,
			"date": "2012-11-30 20:30:15.807940",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-11-30 21:31:16.685530",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-11-30 19:59:37.067140",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/30 19:59:37, remyoudompheng wrote:\n> Hello mailto:golang-dev@googlegroups.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n\nCould you post a sample benchcmp ?",
			"disapproval": false,
			"date": "2012-11-30 20:18:32.956910",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/30 20:18:32, dfc wrote:\n> Could you post a sample benchcmp ?\n\nbenchmark              old ns/op    new ns/op    delta\nBenchmarkReadString        30335        15140  -50.09%\n\nbenchmark               old MB/s     new MB/s  speedup\nBenchmarkReadString      1080.17      2164.25    2.00x\n\nbenchmark             old allocs   new allocs    delta\nBenchmarkReadString            3            2  -33.33%\n\nbenchcmp doesn't show the comparison of allocated bytes. It's 70kB -> 37kB in this example.",
			"disapproval": false,
			"date": "2012-11-30 21:02:48.240360",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6849128/diff/10001/src/pkg/bytes/buffer.go\nFile src/pkg/bytes/buffer.go (right):\n\nhttps://codereview.appspot.com/6849128/diff/10001/src/pkg/bytes/buffer.go#newcode368\nsrc/pkg/bytes/buffer.go:368: // readSlice is like readBytes but returns a reference to internal buffer data.\nlike ReadBytes",
			"disapproval": false,
			"date": "2012-11-30 23:48:09.485740",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"daniel.morsing@gmail.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1f3ebf9a7548 ***\n\nbytes: avoid duplicate malloc/copy in Buffer.ReadString\n\nTwice faster and twice less garbage.\n\nR=golang-dev, dave, daniel.morsing, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/6849128",
			"disapproval": false,
			"date": "2012-12-03 13:04:25.087630",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6849128: bytes: avoid duplicate malloc/copy in Buffer.ReadString",
	"created": "2012-11-30 19:51:47.051370",
	"patchsets": [
		1,
		2001,
		5001,
		10001,
		12001,
		15001
	],
	"modified": "2012-12-03 19:14:04.591710",
	"closed": true,
	"issue": 6849128
}