{
	"description": "runtime: use clock_gettime to get ns resolution for time.now & runtime.nanotime\n\nFor Linux/{386,arm}, FreeBSD/{386,amd64,arm}, NetBSD/{386,amd64}, OpenBSD/{386,amd64}.\nNote: our Darwin implementation already has ns resolution.\n\nLinux/386 (Core i7-2600 @ 3.40GHz, kernel 3.5.2-gentoo)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          110          118   +7.27%\n\nLinux/ARM (ARM Cortex-A8 @ 800MHz, kernel 2.6.32.28 android)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          625          542  -13.28%\n\nLinux/ARM (ARM Cortex-A9 @ 1GHz, Pandaboard)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          992          909   -8.37%\n\nFreeBSD 9-REL-p1/amd64 (Dell R610 Server with Xeon X5650 @ 2.67GHz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          699          695   -0.57%\n\nFreeBSD 9-REL-p1/amd64 (Atom D525 @ 1.80GHz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow         1553         1658   +6.76%\n\nOpenBSD/amd64 (Dell E6410 with i5 CPU M 540 @ 2.53GHz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow         1262         1236   -2.06%\n\nOpenBSD/i386 (Asus eeePC 701 with Intel Celeron M 900MHz - locked to 631MHz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow         5089         5043   -0.90%\n\nNetBSD/i386 (VMware VM with Core i5 CPU @ 2.7GHz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          277          278   +0.36%\n\nNetBSD/amd64 (VMware VM with Core i5 CPU @ 2.7Ghz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          103          105   +1.94%\n\n\nThanks Maxim Khitrov, Joel Sing, and Dave Cheney for providing benchmark data.",
	"cc": [
		"jsing@google.com",
		"dave@cheney.net",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Nov 12, 2012 at 12:24 AM, Joel Sing <jsing@google.com> wrote:\r\n\r\n> On OpenBSD time_t is an int - sys_gettimeofday populates a timeval\r\n> (long sec, long usec), whereas sys_clock_gettime populates a timespec\r\n> (time_t sec, long nsec). As a result, some of the MOVL/MOVQ\r\n> instructions are currently incorrect for OpenBSD/amd64.\r\n\r\nGood to know. thank you. all fixed.\r\n\r\nDo you have any benchmark results to justify the CL?\r\ni don't have physical machines to test. thank you.\r\n",
			"disapproval": false,
			"date": "2012-11-11 16:46:13.992860",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"minux.ma@gmail.com",
				"jsing@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6820120/diff/2009/src/pkg/runtime/sys_openbsd_amd64.s\nFile src/pkg/runtime/sys_openbsd_amd64.s (right):\n\nhttps://codereview.appspot.com/6820120/diff/2009/src/pkg/runtime/sys_openbsd_amd64.s#newcode140\nsrc/pkg/runtime/sys_openbsd_amd64.s:140: MOVQ\t8(SP), AX\t\t// sec\ns/MOVQ/MOVL/\n\nhttps://codereview.appspot.com/6820120/diff/2009/src/pkg/runtime/sys_openbsd_amd64.s#newcode141\nsrc/pkg/runtime/sys_openbsd_amd64.s:141: MOVL\t16(SP), DX\t\t// nsec\ns/MOVL/MOVQ/\n\nhttps://codereview.appspot.com/6820120/diff/2009/src/pkg/runtime/sys_openbsd_amd64.s#newcode153\nsrc/pkg/runtime/sys_openbsd_amd64.s:153: MOVQ\t8(SP), AX\t\t// sec\ns/MOVQ/MOVL/\n\nhttps://codereview.appspot.com/6820120/diff/2009/src/pkg/runtime/sys_openbsd_amd64.s#newcode154\nsrc/pkg/runtime/sys_openbsd_amd64.s:154: MOVL\t16(SP), DX\t\t// nsec\ns/MOVL/MOVQ/",
			"disapproval": false,
			"date": "2012-11-11 16:21:33.451420",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The following comment should have been included:\r\n\r\nOn OpenBSD time_t is an int - sys_gettimeofday populates a timeval\r\n(long sec, long usec), whereas sys_clock_gettime populates a timespec\r\n(time_t sec, long nsec). As a result, some of the MOVL/MOVQ\r\ninstructions are currently incorrect for OpenBSD/amd64.\r\n\r\nOn 12 November 2012 03:21,  <jsing@google.com> wrote:\r\n>\r\n> https://codereview.appspot.com/6820120/diff/2009/src/pkg/runtime/sys_openbsd_amd64.s\r\n> File src/pkg/runtime/sys_openbsd_amd64.s (right):\r\n>\r\n> https://codereview.appspot.com/6820120/diff/2009/src/pkg/runtime/sys_openbsd_amd64.s#newcode140\r\n> src/pkg/runtime/sys_openbsd_amd64.s:140: MOVQ   8(SP), AX               //\r\n> sec\r\n> s/MOVQ/MOVL/\r\n>\r\n> https://codereview.appspot.com/6820120/diff/2009/src/pkg/runtime/sys_openbsd_amd64.s#newcode141\r\n> src/pkg/runtime/sys_openbsd_amd64.s:141: MOVL   16(SP), DX              //\r\n> nsec\r\n> s/MOVL/MOVQ/\r\n>\r\n> https://codereview.appspot.com/6820120/diff/2009/src/pkg/runtime/sys_openbsd_amd64.s#newcode153\r\n> src/pkg/runtime/sys_openbsd_amd64.s:153: MOVQ   8(SP), AX               //\r\n> sec\r\n> s/MOVQ/MOVL/\r\n>\r\n> https://codereview.appspot.com/6820120/diff/2009/src/pkg/runtime/sys_openbsd_amd64.s#newcode154\r\n> src/pkg/runtime/sys_openbsd_amd64.s:154: MOVL   16(SP), DX              //\r\n> nsec\r\n> s/MOVL/MOVQ/\r\n>\r\n> https://codereview.appspot.com/6820120/\r\n",
			"disapproval": false,
			"date": "2012-11-11 16:24:06.448760",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"jsing@google.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6820120/diff/25002/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/6820120/diff/25002/doc/go1.1.html#newcode90\ndoc/go1.1.html:90: On Darwin, FreeBSD, Linux, NetBSD and OpenBSD, previous versions of the time package\nOn 2012/12/16 23:58:07, rsc wrote:\n> I believe Darwin already had nanosecond time in Go 1.\n> Also, we usually write OS X instead of Darwin in docs like these.\nhttp://golang.org/src/pkg/runtime/sys_darwin_amd64.s#L69\nDarwin still uses gettimeofday, so still only has microsecond resolution\nin Go 1.0.x.",
			"disapproval": false,
			"date": "2012-12-17 14:39:28.651310",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"minux.ma@gmail.com",
				"jsing@google.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6820120/diff/34001/src/pkg/runtime/sys_netbsd_386.s\nFile src/pkg/runtime/sys_netbsd_386.s (right):\n\nhttps://codereview.appspot.com/6820120/diff/34001/src/pkg/runtime/sys_netbsd_386.s#newcode111\nsrc/pkg/runtime/sys_netbsd_386.s:111: MOVL\t20(SP), BX\t\t// nsec - should not exceed 999999999\nThe \"should not exceed\" comment could go since we are no longer multiplying the result.",
			"disapproval": false,
			"date": "2012-12-18 14:45:36.935360",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"jsing@google.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=6625c3cb4d0e ***\n\nruntime: use clock_gettime to get ns resolution for time.now & runtime.nanotime\n\nFor Linux/{386,arm}, FreeBSD/{386,amd64,arm}, NetBSD/{386,amd64}, OpenBSD/{386,amd64}.\nNote: our Darwin implementation already has ns resolution.\n\nLinux/386 (Core i7-2600 @ 3.40GHz, kernel 3.5.2-gentoo)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          110          118   +7.27%\n\nLinux/ARM (ARM Cortex-A8 @ 800MHz, kernel 2.6.32.28 android)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          625          542  -13.28%\n\nLinux/ARM (ARM Cortex-A9 @ 1GHz, Pandaboard)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          992          909   -8.37%\n\nFreeBSD 9-REL-p1/amd64 (Dell R610 Server with Xeon X5650 @ 2.67GHz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          699          695   -0.57%\n\nFreeBSD 9-REL-p1/amd64 (Atom D525 @ 1.80GHz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow         1553         1658   +6.76%\n\nOpenBSD/amd64 (Dell E6410 with i5 CPU M 540 @ 2.53GHz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow         1262         1236   -2.06%\n\nOpenBSD/i386 (Asus eeePC 701 with Intel Celeron M 900MHz - locked to 631MHz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow         5089         5043   -0.90%\n\nNetBSD/i386 (VMware VM with Core i5 CPU @ 2.7GHz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          277          278   +0.36%\n\nNetBSD/amd64 (VMware VM with Core i5 CPU @ 2.7Ghz)\nbenchmark       old ns/op    new ns/op    delta\nBenchmarkNow          103          105   +1.94%\n\n\nThanks Maxim Khitrov, Joel Sing, and Dave Cheney for providing benchmark data.\n\nR=jsing, dave, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/6820120\n\nhttps://codereview.appspot.com/6820120/diff/34001/src/pkg/runtime/sys_netbsd_386.s\nFile src/pkg/runtime/sys_netbsd_386.s (right):\n\nhttps://codereview.appspot.com/6820120/diff/34001/src/pkg/runtime/sys_netbsd_386.s#newcode111\nsrc/pkg/runtime/sys_netbsd_386.s:111: MOVL\t20(SP), BX\t\t// nsec - should not exceed 999999999\nOn 2012/12/18 14:45:37, jsing wrote:\n> The \"should not exceed\" comment could go since we are no longer multiplying the\n> result.\nDone",
			"disapproval": false,
			"date": "2012-12-18 14:57:46.350000",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"jsing@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nAlso updated time section of doc/go1.1.html.",
			"disapproval": false,
			"date": "2012-12-13 22:33:34.148670",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello jsing@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-12-13 10:42:31.839640",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"jsing@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM once you feel you have tested it on enough systems.\n\npandaboard(~/go/src/pkg/time) % ~/go/misc/benchcmp {old,new}.txt\nbenchmark               old ns/op    new ns/op    delta\nBenchmarkNow                  992          909   -8.37%\nBenchmarkNowUnixNano          997          918   -7.92%",
			"disapproval": false,
			"date": "2012-12-13 22:16:28.409190",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"jsing@google.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6820120/diff/25002/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/6820120/diff/25002/doc/go1.1.html#newcode90\ndoc/go1.1.html:90: On Darwin, FreeBSD, Linux, NetBSD and OpenBSD, previous versions of the time package\ns/Darwin, //\n\nI believe Darwin already had nanosecond time in Go 1.\nAlso, we usually write OS X instead of Darwin in docs like these.\n\nhttps://codereview.appspot.com/6820120/diff/25002/doc/go1.1.html#newcode91\ndoc/go1.1.html:91: returned times with microsecond precision. The Go 1.1 implementation of time on Linux\ns/Linux/these systems/",
			"disapproval": false,
			"date": "2012-12-16 23:58:06.832950",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"jsing@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/12/13 22:16:28, dfc wrote:\n> pandaboard(~/go/src/pkg/time) % ~/go/misc/benchcmp {old,new}.txt\n> benchmark               old ns/op    new ns/op    delta\n> BenchmarkNow                  992          909   -8.37%\n> BenchmarkNowUnixNano          997          918   -7.92%\nbtw, thank you for your data points.\nI've added it to the description.",
			"disapproval": false,
			"date": "2012-12-13 22:27:46.418380",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"jsing@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I've tested almost all the systems myself (I don't have *BSD/386 VM available,\nwhich means I can't test OpenBSD/386 and NetBSD/386), however, jsing\nkindly provided benchmark data for OpenBSD, so I'm confident it's working\non OpenBSD.\n\nI'd like to ask NetBSD users to help test/benchmark this on real hardware.",
			"disapproval": false,
			"date": "2012-12-13 22:27:07.780420",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You're right, the nanosecond time for Darwin didn't happen until after Go 1.\r\n\r\nchangeset:   13429:0b5426350053\r\nuser:        Russ Cox <rsc@golang.org>\r\ndate:        Tue Jun 05 16:24:37 2012 -0400\r\nfiles:       src/pkg/runtime/sys_darwin_amd64.s\r\ndescription: runtime: use OS X vsyscall for gettimeofday (amd64)\r\n",
			"disapproval": false,
			"date": "2012-12-17 15:44:17.820580",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6820120: runtime: use clock_gettime to get ns resolution for tim...",
	"created": "2012-11-09 08:57:02.211430",
	"patchsets": [
		1,
		2001,
		2002,
		6001,
		1004,
		6002,
		2009,
		2010,
		17001,
		20001,
		21001,
		25002,
		34001,
		32011,
		34013
	],
	"modified": "2012-12-18 14:57:52.132480",
	"closed": true,
	"issue": 6820120
}