{
	"description": "net: fix dial datagram on windows, plan 9\n\nFixes issue 5349.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"alex.brainman@gmail.com",
		"bradfitz@golang.org",
		"nick@nickkatsaros.com"
	],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-04-25 05:49:42.084930",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry I have no windows stuff, I mean, not tested on windows.\r\n\r\nOn Thu, Apr 25, 2013 at 2:49 PM,  <mikioh.mikioh@gmail.com> wrote:\r\n> Reviewers: golang-dev1, brainman,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com, alex.brainman@gmail.com (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> net: fix dial datagram on windows, plan 9\r\n>\r\n> Fixes issue 5349.\r\n>\r\n> Please review this at https://codereview.appspot.com/8687045/\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/dial_gen.go\r\n>   M src/pkg/net/timeout_test.go\r\n>\r\n>\r\n> Index: src/pkg/net/dial_gen.go\r\n> ===================================================================\r\n> --- a/src/pkg/net/dial_gen.go\r\n> +++ b/src/pkg/net/dial_gen.go\r\n> @@ -15,6 +15,13 @@\r\n>  // hasn't been pushed down into the pollserver. (Plan 9 and some old\r\n>  // versions of Windows)\r\n>  func resolveAndDialChannel(net, addr string, localAddr Addr, deadline\r\n> time.Time) (Conn, error) {\r\n> +       if deadline.IsZero() {\r\n> +               ra, err := resolveAddr(\"dial\", net, addr, noDeadline)\r\n> +               if err != nil {\r\n> +                       return nil, err\r\n> +               }\r\n> +               return dial(net, addr, localAddr, ra, noDeadline)\r\n> +       }\r\n>         timeout := deadline.Sub(time.Now())\r\n>         if timeout < 0 {\r\n>                 timeout = 0\r\n> Index: src/pkg/net/timeout_test.go\r\n> ===================================================================\r\n> --- a/src/pkg/net/timeout_test.go\r\n> +++ b/src/pkg/net/timeout_test.go\r\n> @@ -703,3 +703,22 @@\r\n>                 c.Write(buf[:])\r\n>         }\r\n>  }\r\n> +\r\n> +func TestDialDatagramWithNoDeadline(t *testing.T) {\r\n> +       ch := make(chan copyRes)\r\n> +       go func() {\r\n> +               c, err := Dial(\"udp4\", \"127.0.0.1:514\")\r\n> +               if err == nil {\r\n> +                       c.Close()\r\n> +               }\r\n> +               ch <- copyRes{err: err}\r\n> +       }()\r\n> +       select {\r\n> +       case <-time.After(2 * time.Second):\r\n> +               t.Fatal(\"too slow\")\r\n> +       case res := <-ch:\r\n> +               if res.err != nil {\r\n> +                       t.Fatalf(\"Dial failed: %v\", res.err)\r\n> +               }\r\n> +       }\r\n> +}\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-25 05:59:51.864140",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for fixing this. Let me think about it for a day or two.\n\nAlex",
			"disapproval": false,
			"date": "2013-04-25 06:39:28.108110",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for fixing this.\n\nhttps://codereview.appspot.com/8687045/diff/4001/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/8687045/diff/4001/src/pkg/net/timeout_test.go#newcode708\nsrc/pkg/net/timeout_test.go:708: ch := make(chan copyRes)\nmake this buffered with size 1.  it's just a test, but a good habit to get into when the sender goroutine could otherwise leak.\n\nhttps://codereview.appspot.com/8687045/diff/4001/src/pkg/net/timeout_test.go#newcode708\nsrc/pkg/net/timeout_test.go:708: ch := make(chan copyRes)\nwhy not just a chan error?\n\nhttps://codereview.appspot.com/8687045/diff/4001/src/pkg/net/timeout_test.go#newcode710\nsrc/pkg/net/timeout_test.go:710: c, err := Dial(\"udp4\", \"127.0.0.1:514\")\nwhy 514?\n\nwill this be reliable?\n\nhttps://codereview.appspot.com/8687045/diff/4001/src/pkg/net/timeout_test.go#newcode717\nsrc/pkg/net/timeout_test.go:717: case <-time.After(2 * time.Second):\nmake this 5 seconds.",
			"disapproval": false,
			"date": "2013-04-25 06:42:23.421520",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "mikio,\n\nI do not think we need new test. We have plenty of UDP tests. They just do not trigger that error. But adding small sleep in dial_gen.go, makes them break quickly:\n\nC:\\go\\root\\src\\pkg\\net>hg diff\ndiff -r 45c12efb4635 src/pkg/net/dial_gen.go\n--- a/src/pkg/net/dial_gen.go   Thu Apr 25 14:45:56 2013 -0700\n+++ b/src/pkg/net/dial_gen.go   Fri Apr 26 11:33:20 2013 +1000\n@@ -28,6 +28,7 @@\n        ch := make(chan pair, 1)\n        resolvedAddr := make(chan Addr, 1)\n        go func() {\n+               time.Sleep(time.Millisecond)\n                ra, err := resolveAddr(\"dial\", net, addr, noDeadline)\n                if err != nil {\n                        ch <- pair{nil, err}\n\nC:\\go\\root\\src\\pkg\\net>\nC:\\go\\root\\src\\pkg\\net>go test -short\n--- FAIL: TestConnAndPacketConn (0.00 seconds)\n        packetconn_test.go:175: Dial failed: dial udp 127.0.0.1:2170: i/o timeout\n--- FAIL: TestTimeoutUDP (0.02 seconds)\n        timeout_test.go:193: Dial(\"udp\", \"127.0.0.1:2187\") failed: dial udp 127.0.0.1:2187: i/o timeout\n        timeout_test.go:193: Dial(\"udp\", \"127.0.0.1:2187\") failed: dial udp 127.0.0.1:2187: i/o timeout\n--- FAIL: TestWriteToUDP (0.00 seconds)\n        udp_test.go:78: Dial failed: dial udp 127.0.0.1:2237: i/o timeout\nFAIL\nexit status 1\nFAIL    net     2.094s\n\nC:\\go\\root\\src\\pkg\\net>\n\nIt is not good, that we cannot trigger the error, but, I think, your new test is no better in that regard. Perhaps, you can introduce that time.Sleep artificially when you run the tests.\n\nAlex\n\nhttps://codereview.appspot.com/8687045/diff/4001/src/pkg/net/dial_gen.go\nFile src/pkg/net/dial_gen.go (right):\n\nhttps://codereview.appspot.com/8687045/diff/4001/src/pkg/net/dial_gen.go#newcode18\nsrc/pkg/net/dial_gen.go:18: if deadline.IsZero() {\nIf you are creating this code path, that does not start new goroutine if deadline.IsZero(), shouldn't you add following case of expired deadline too. No big deal, but it looks more consistent to me.",
			"disapproval": false,
			"date": "2013-04-26 01:44:13.279310",
			"approval": false
		},
		{
			"sender": "nick@nickkatsaros.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for fixing this mikio.\r\n\r\nThe description is slightly inaccurate though. I think dial is broken for \r\nall network types on plan9, not just datagrams.\r\n",
			"disapproval": false,
			"date": "2013-04-26 15:18:41.512730",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"bradfitz@golang.org",
				"nick@nickkatsaros.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think it is silly to leave this open for go1.1, so I copied mikio fix into my own: https://codereview.appspot.com/9159043/. Lets submit either one.\n\nAlex",
			"disapproval": false,
			"date": "2013-05-03 05:51:58.761630",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"bradfitz@golang.org",
				"nick@nickkatsaros.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-05-08 10:24:42.658870",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 8687045: net: fix dial datagram on windows, plan 9",
	"created": "2013-04-25 05:46:36.635000",
	"patchsets": [
		1,
		1002,
		4001
	],
	"modified": "2013-05-08 10:24:45.858090",
	"closed": true,
	"issue": 8687045
}