{
	"description": "syscall: add missing IP-level socket option constants for Windows\n\nUpdate issue 1740",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"minux.ma@gmail.com",
		"alex.brainman@gmail.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You're modifying a z- file? That's auto-generated and will just get blown\r\naway later, no?\r\n On Apr 24, 2013 4:40 AM, <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> syscall: add missing IP constants for Windows\r\n>\r\n> Update issue 1740.\r\n>\r\n> Please review this at https://codereview.appspot.**com/8685045/<https://codereview.appspot.com/8685045/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/syscall/ztypes_**windows.go\r\n>\r\n>\r\n> Index: src/pkg/syscall/ztypes_**windows.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/syscall/ztypes_**windows.go\r\n> +++ b/src/pkg/syscall/ztypes_**windows.go\r\n> @@ -491,10 +491,19 @@\r\n>         SOCK_RAW       = 3\r\n>         SOCK_SEQPACKET = 5\r\n>\r\n> -       IPPROTO_IP   = 0\r\n> -       IPPROTO_IPV6 = 0x29\r\n> -       IPPROTO_TCP  = 6\r\n> -       IPPROTO_UDP  = 17\r\n> +       IPPROTO_AH       = 0x33\r\n> +       IPPROTO_DSTOPTS  = 0x3c\r\n> +       IPPROTO_ESP      = 0x32\r\n> +       IPPROTO_FRAGMENT = 0x2c\r\n> +       IPOROTO_HOPOPTS  = 0x0\r\n> +       IPPROTO_ICMP     = 0x1\r\n> +       IPPROTO_ICMPV6   = 0x3a\r\n> +       IPPROTO_IP       = 0x0\r\n> +       IPPROTO_IPV6     = 0x29\r\n> +       IPPROTO_NONE     = 0x3b\r\n> +       IPPROTO_ROUTING  = 0x2b\r\n> +       IPPROTO_TCP      = 0x6\r\n> +       IPPROTO_UDP      = 0x11\r\n>\r\n>         SOL_SOCKET                = 0xffff\r\n>         SO_REUSEADDR              = 4\r\n> @@ -515,6 +524,7 @@\r\n>\r\n>         // cf. http://support.microsoft.com/**default.aspx?scid=kb;en-us;*\r\n> *257460 <http://support.microsoft.com/default.aspx?scid=kb;en-us;257460>\r\n>\r\n> +       IP_HDRINCL         = 0x2\r\n>         IP_TOS             = 0x3\r\n>         IP_TTL             = 0x4\r\n>         IP_MULTICAST_IF    = 0x9\r\n> @@ -522,14 +532,17 @@\r\n>         IP_MULTICAST_LOOP  = 0xb\r\n>         IP_ADD_MEMBERSHIP  = 0xc\r\n>         IP_DROP_MEMBERSHIP = 0xd\r\n> +       IP_PKTINFO         = 0x13\r\n>\r\n> -       IPV6_V6ONLY         = 0x1b\r\n>         IPV6_UNICAST_HOPS   = 0x4\r\n>         IPV6_MULTICAST_IF   = 0x9\r\n>         IPV6_MULTICAST_HOPS = 0xa\r\n>         IPV6_MULTICAST_LOOP = 0xb\r\n>         IPV6_JOIN_GROUP     = 0xc\r\n>         IPV6_LEAVE_GROUP    = 0xd\r\n> +       IPV6_PKTINFO        = 0x13\r\n> +       IPV6_HOPLIMIT       = 0x15\r\n> +       IPV6_V6ONLY         = 0x1b\r\n>\r\n>         SOMAXCONN = 0x7fffffff\r\n>\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-24 14:19:28.511120",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-04-24 11:40:04.323690",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "done, thx.\r\n\r\nOn Thu, Apr 25, 2013 at 12:07 AM,  <minux.ma@gmail.com> wrote:\r\n> please remove the period in the last line of the description,\r\n> as the issue tracker only strictly recognize this format:\r\n> Update issue NNNN\r\n>\r\n> cf:\r\n> https://code.google.com/p/support/wiki/IssueTracker#Integration_with_version_control\r\n>\r\n> https://codereview.appspot.com/8685045/\r\n",
			"disapproval": false,
			"date": "2013-04-24 15:11:20.251570",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Apr 24, 2013 at 11:19 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> You're modifying a z- file?\r\n\r\nYup.\r\n\r\n> That's auto-generated and will just get blown away later, no?\r\n\r\nUnfortunately no z-file bootstrap stuff exists for both Windows and Plan 9.\r\n",
			"disapproval": false,
			"date": "2013-04-24 14:43:04.198590",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "please remove the period in the last line of the description,\nas the issue tracker only strictly recognize this format:\nUpdate issue NNNN\n\ncf: https://code.google.com/p/support/wiki/IssueTracker#Integration_with_version_control",
			"disapproval": false,
			"date": "2013-04-24 15:07:58.892250",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "But why to add all these constants? No one uses them.\n\nAlex",
			"disapproval": false,
			"date": "2013-04-24 20:58:10.468100",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 25, 2013 at 5:58 AM,  <alex.brainman@gmail.com> wrote:\r\n\r\n> But why to add all these constants? No one uses them.\r\n\r\ngo.net/ipv4 and ipv6 will use them.\r\n",
			"disapproval": false,
			"date": "2013-04-24 21:45:46.131740",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8685045/diff/3002/src/pkg/syscall/ztypes_windows.go\nFile src/pkg/syscall/ztypes_windows.go (right):\n\nhttps://codereview.appspot.com/8685045/diff/3002/src/pkg/syscall/ztypes_windows.go#newcode498\nsrc/pkg/syscall/ztypes_windows.go:498: IPOROTO_HOPOPTS  = 0x0\ntypo. should be IPPROTO",
			"disapproval": false,
			"date": "2013-04-24 21:58:49.316440",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "With the typo fixed, I'd be fine with this.\r\n\r\nIt does make all platforms consistent on including the full set.\r\n\r\n\r\n\r\nOn Wed, Apr 24, 2013 at 2:58 PM, <bradfitz@golang.org> wrote:\r\n\r\n>\r\n> https://codereview.appspot.**com/8685045/diff/3002/src/pkg/**\r\n> syscall/ztypes_windows.go<https://codereview.appspot.com/8685045/diff/3002/src/pkg/syscall/ztypes_windows.go>\r\n> File src/pkg/syscall/ztypes_**windows.go (right):\r\n>\r\n> https://codereview.appspot.**com/8685045/diff/3002/src/pkg/**\r\n> syscall/ztypes_windows.go#**newcode498<https://codereview.appspot.com/8685045/diff/3002/src/pkg/syscall/ztypes_windows.go#newcode498>\r\n> src/pkg/syscall/ztypes_**windows.go:498: IPOROTO_HOPOPTS  = 0x0\r\n> typo. should be IPPROTO\r\n>\r\n> https://codereview.appspot.**com/8685045/<https://codereview.appspot.com/8685045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-24 21:59:26.411960",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, minux.ma@gmail.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-04-24 22:12:05.696150",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/04/25 02:30:23, bradfitz wrote:\n\n> So I'd say this is fine, but why this set?\n> Why not all of them?\n\npicked up what windows supports.\n\n> But really, these have nothing to do with system calls, right?\n\nthey are parameters for socket syscalls (Socket, Setsockopt and\nGetsockopt) and ancillary data (once Windows supports Read/WriteMsg).\n\n> Why not just define them in http://go.net somewhere?  They seem totally portable.\n\nIPPROTO_TCP from syscall and IPPROTO_XXX from somewhere else\nlooks not good to me. No?",
			"disapproval": false,
			"date": "2013-04-25 02:44:51.038500",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Whatever stuff is defined by a standards body and not an OS.\n\ncrystal clear, thanks.",
			"disapproval": false,
			"date": "2013-04-25 04:04:13.038480",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Whatever stuff is defined by a standards body and not an OS.\r\n On Apr 24, 2013 8:39 PM, <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> On 2013/04/25 02:53:10, bradfitz wrote:\r\n>\r\n>  So put them all elsewhere.\r\n>>\r\n>\r\n>  pkg syscall doesn't have to be clean and consistent.  It's not even a\r\n>>\r\n> goal.\r\n>\r\n> Does all you mean include IP_XXX, IPV6_XXX? Or only IANA stuff IPPROTOs?\r\n>\r\n> https://codereview.appspot.**com/8685045/<https://codereview.appspot.com/8685045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-25 03:58:12.839490",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-04-25 00:59:53.390000",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "So I'd say this is fine, but why this set?\r\n\r\nWhy not all of them?\r\n\r\nBut really, these have nothing to do with system calls, right?  Why not\r\njust define them in go.net somewhere?  They seem totally portable.\r\n\r\nIPPROTO_3PC 0x22\r\nIPPROTO_ADFS 0x44\r\nIPPROTO_AH 0x33\r\nIPPROTO_AHIP 0x3d\r\nIPPROTO_APES 0x63\r\nIPPROTO_ARGUS 0xd\r\nIPPROTO_AX25 0x5d\r\nIPPROTO_BHA 0x31\r\nIPPROTO_BLT 0x1e\r\nIPPROTO_BRSATMON 0x4c\r\nIPPROTO_CARP 0x70\r\nIPPROTO_CFTP 0x3e\r\nIPPROTO_CHAOS 0x10\r\nIPPROTO_CMTP 0x26\r\nIPPROTO_COMP 0x6c\r\nIPPROTO_CPHB 0x49\r\nIPPROTO_CPNX 0x48\r\nIPPROTO_DCCP 0x21\r\nIPPROTO_DDP 0x25\r\nIPPROTO_DGP 0x56\r\nIPPROTO_DIVERT 0x102\r\nIPPROTO_DIVERT 0xfe\r\nIPPROTO_DONE 0x101\r\nIPPROTO_DSTOPTS 0x3c\r\nIPPROTO_EGP 0x8\r\nIPPROTO_EMCON 0xe\r\nIPPROTO_ENCAP 0x62\r\nIPPROTO_EON 0x50\r\nIPPROTO_ESP 0x32\r\nIPPROTO_ETHERIP 0x61\r\nIPPROTO_FRAGMENT 0x2c\r\nIPPROTO_GGP 0x3\r\nIPPROTO_GMTP 0x64\r\nIPPROTO_GRE 0x2f\r\nIPPROTO_HELLO 0x3f\r\nIPPROTO_HMP 0x14\r\nIPPROTO_HOPOPTS 0x0\r\nIPPROTO_ICMP 0x1\r\nIPPROTO_ICMPV6 0x3a\r\nIPPROTO_IDP 0x16\r\nIPPROTO_IDPR 0x23\r\nIPPROTO_IDRP 0x2d\r\nIPPROTO_IGMP 0x2\r\nIPPROTO_IGP 0x55\r\nIPPROTO_IGRP 0x58\r\nIPPROTO_IL 0x28\r\nIPPROTO_INLSP 0x34\r\nIPPROTO_INP 0x20\r\nIPPROTO_IP 0x0\r\nIPPROTO_IPCOMP 0x6c\r\nIPPROTO_IPCV 0x47\r\nIPPROTO_IPEIP 0x5e\r\nIPPROTO_IPIP 0x4\r\nIPPROTO_IPPC 0x43\r\nIPPROTO_IPV4 0x4\r\nIPPROTO_IPV6 0x29\r\nIPPROTO_IPV6_ICMP 0x3a\r\nIPPROTO_IRTP 0x1c\r\nIPPROTO_KRYPTOLAN 0x41\r\nIPPROTO_LARP 0x5b\r\nIPPROTO_LEAF1 0x19\r\nIPPROTO_LEAF2 0x1a\r\nIPPROTO_MAX 0x100\r\nIPPROTO_MAXID 0x103\r\nIPPROTO_MAXID 0x34\r\nIPPROTO_MEAS 0x13\r\nIPPROTO_MH 0x87\r\nIPPROTO_MHRP 0x30\r\nIPPROTO_MICP 0x5f\r\nIPPROTO_MOBILE 0x37\r\nIPPROTO_MPLS 0x89\r\nIPPROTO_MTP 0x5c\r\nIPPROTO_MUX 0x12\r\nIPPROTO_ND 0x4d\r\nIPPROTO_NHRP 0x36\r\nIPPROTO_NONE 0x3b\r\nIPPROTO_NSP 0x1f\r\nIPPROTO_NVPII 0xb\r\nIPPROTO_OLD_DIVERT 0xfe\r\nIPPROTO_OSPFIGP 0x59\r\nIPPROTO_PFSYNC 0xf0\r\nIPPROTO_PGM 0x71\r\nIPPROTO_PIGP 0x9\r\nIPPROTO_PIM 0x67\r\nIPPROTO_PRM 0x15\r\nIPPROTO_PUP 0xc\r\nIPPROTO_PVP 0x4b\r\nIPPROTO_RAW 0xff\r\nIPPROTO_RCCMON 0xa\r\nIPPROTO_RDP 0x1b\r\nIPPROTO_ROUTING 0x2b\r\nIPPROTO_RSVP 0x2e\r\nIPPROTO_RVD 0x42\r\nIPPROTO_SATEXPAK 0x40\r\nIPPROTO_SATMON 0x45\r\nIPPROTO_SCCSP 0x60\r\nIPPROTO_SCTP 0x84\r\nIPPROTO_SDRP 0x2a\r\nIPPROTO_SEND 0x103\r\nIPPROTO_SEP 0x21\r\nIPPROTO_SKIP 0x39\r\nIPPROTO_SPACER 0x7fff\r\nIPPROTO_SRPC 0x5a\r\nIPPROTO_ST 0x7\r\nIPPROTO_SVMTP 0x52\r\nIPPROTO_SWIPE 0x35\r\nIPPROTO_TCF 0x57\r\nIPPROTO_TCP 0x6\r\nIPPROTO_TLSP 0x38\r\nIPPROTO_TP 0x1d\r\nIPPROTO_TPXX 0x27\r\nIPPROTO_TRUNK1 0x17\r\nIPPROTO_TRUNK2 0x18\r\nIPPROTO_TTP 0x54\r\nIPPROTO_UDP 0x11\r\nIPPROTO_UDPLITE 0x88\r\nIPPROTO_VINES 0x53\r\nIPPROTO_VISA 0x46\r\nIPPROTO_VMTP 0x51\r\nIPPROTO_VRRP 0x70\r\nIPPROTO_WBEXPAK 0x4f\r\nIPPROTO_WBMON 0x4e\r\nIPPROTO_WSN 0x4a\r\nIPPROTO_XNET 0xf\r\nIPPROTO_XTP 0x24\r\n\r\n\r\nOn Wed, Apr 24, 2013 at 5:59 PM, <alex.brainman@gmail.com> wrote:\r\n\r\n> LGTM\r\n>\r\n> https://codereview.appspot.**com/8685045/<https://codereview.appspot.com/8685045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-25 02:30:23.296200",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Apr 24, 2013 at 7:44 PM, <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> On 2013/04/25 02:30:23, bradfitz wrote:\r\n>\r\n>  So I'd say this is fine, but why this set?\r\n>> Why not all of them?\r\n>>\r\n>\r\n> picked up what windows supports.\r\n>\r\n>\r\n>  But really, these have nothing to do with system calls, right?\r\n>>\r\n>\r\n> they are parameters for socket syscalls (Socket, Setsockopt and\r\n> Getsockopt) and ancillary data (once Windows supports Read/WriteMsg).\r\n>\r\n>  Why not just define them in http://go.net somewhere?  They seem\r\n>>\r\n> totally portable.\r\n>\r\n> IPPROTO_TCP from syscall and IPPROTO_XXX from somewhere else\r\n> looks not good to me. No?\r\n>\r\n\r\nSo put them all elsewhere.\r\n\r\npkg syscall doesn't have to be clean and consistent.  It's not even a goal.\r\n",
			"disapproval": false,
			"date": "2013-04-25 02:53:10.320900",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/04/25 02:53:10, bradfitz wrote:\n\n> So put them all elsewhere.\n> \n> pkg syscall doesn't have to be clean and consistent.  It's not even a goal.\n\nDoes all you mean include IP_XXX, IPV6_XXX? Or only IANA stuff IPPROTOs?",
			"disapproval": false,
			"date": "2013-04-25 03:39:57.873690",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, minux.ma@gmail.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-04-25 04:23:59.921630",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-05-10 14:53:16.300010",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 8685045: syscall: add missing IP-level socket option constants f...",
	"created": "2013-04-24 11:34:09.708450",
	"patchsets": [
		1,
		2001,
		3002,
		15001,
		23001
	],
	"modified": "2013-05-10 14:53:20.010640",
	"closed": true,
	"issue": 8685045
}