{
	"description": "net: fix ResolveIPAddr for IPv6 address enclosed in square brackets\n\nFixes issue 3837.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-07-21 13:28:42.994520",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This looks OK to me, but I'd like someone else familiar with net to take a look also.",
			"disapproval": false,
			"date": "2012-07-22 22:32:51.612630",
			"approval": false
		},
		{
			"sender": "adg@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Should this be in parseIPv6 instead?\r\n\r\nIs [hostname] valid? Shouldn't ParseIP(\"[::]\") work? Not clear to me that\r\nit does.\r\n\r\nOn Saturday, July 21, 2012, wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> net: fix ResolveIPAddr for IPv6 address enclosed in square brackets\r\n>\r\n> Fixes issue 3837.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6431053/<http://codereview.appspot.com/6431053/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/ipraw_test.go\r\n>   M src/pkg/net/iprawsock.go\r\n>\r\n>\r\n> Index: src/pkg/net/ipraw_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/ipraw_test.go\r\n> +++ b/src/pkg/net/ipraw_test.go\r\n> @@ -14,6 +14,27 @@\r\n>         \"time\"\r\n>  )\r\n>\r\n> +var resolveIPAddrTests = []struct {\r\n> +       net  string\r\n> +       addr string\r\n> +}{\r\n> +       {\"ip\", \"0.0.0.0\"},\r\n> +       {\"ip\", \"[::]\"},\r\n> +       {\"ip\", \"::\"},\r\n> +       {\"ip4\", \"0.0.0.0\"},\r\n> +       {\"ip6\", \"[::]\"},\r\n> +       {\"ip6\", \"::\"},\r\n> +}\r\n> +\r\n> +func TestResolveIPAddr(t *testing.T) {\r\n> +       for _, tt := range resolveIPAddrTests {\r\n> +               _, err := ResolveIPAddr(tt.net, tt.addr)\r\n> +               if err != nil {\r\n> +                       t.Fatalf(\"ResolveIPAddr(%q, %q) failed: %v\",\r\n> tt.net, tt.addr, err)\r\n> +               }\r\n> +       }\r\n> +}\r\n> +\r\n>  var icmpTests = []struct {\r\n>         net   string\r\n>         laddr string\r\n> Index: src/pkg/net/iprawsock.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/iprawsock.go\r\n> +++ b/src/pkg/net/iprawsock.go\r\n> @@ -46,6 +46,10 @@\r\n>                 if net != \"\" && net[len(net)-1] == '6' {\r\n>                         filter = ipv6only\r\n>                 }\r\n> +               // Can put brackets around host ...\r\n> +               if len(host) > 0 && host[0] == '[' && host[len(host)-1] ==\r\n> ']' {\r\n> +                       host = host[1 : len(host)-1]\r\n> +               }\r\n>                 // Not an IP address.  Try as a DNS name.\r\n>                 addrs, err1 := LookupHost(host)\r\n>                 if err1 != nil {\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-22 00:58:12.625220",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for the comment. I realized that I put bracket remove lines\r\nin wrong place, that should stay just before ParseIP in hostToIP.\r\n\r\nOn Sun, Jul 22, 2012 at 9:58 AM, Andrew Gerrand <adg@google.com> wrote:\r\n\r\n> Should this be in parseIPv6 instead?\r\n\r\nI guess, code itself says IP and IPAddr are different things. IP represents\r\na plain IP address and IPAddr represents something like IP address literal\r\nin raw IP socket address, something like:\r\n\r\nIP = IPv6Address\r\nIPAddr = IPLiteralInRawIPSock \":\" Port\r\nIPLiteralInRawIPSock = \"[\" IPv6address / Name \"]\"\r\n\r\nThis looks similar to the relationship btw IPv6 address and literal IPv6\r\naddress in URL.\r\n\r\n> Is [hostname] valid? Shouldn't ParseIP(\"[::]\") work? Not clear to me that it\r\n> does.\r\n\r\n-- Mikio\r\n",
			"disapproval": false,
			"date": "2012-07-22 03:00:48.783480",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-07-22 03:01:45.273570",
			"approval": false
		},
		{
			"sender": "pmarks@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sunday, July 22, 2012 3:32:51 PM UTC-7, Andrew Gerrand wrote:\r\n>\r\n> This looks OK to me, but I'd like someone else familiar with net to take \r\n> a look also. \r\n>\r\n> http://codereview.appspot.com/6431053/ \r\n>\r\n\r\nGenerally, I would say that treating [f00::] as a host is a type mismatch. \r\n This would be better handled by function that parses a string into a host \r\nand port, where the port number can be optional.\r\n\r\nOne example of this is Guava's HostAndPort class:\r\nhttp://code.google.com/p/guava-libraries/source/browse/guava/src/com/google/common/net/HostAndPort.java\r\n\r\nThere's also a Google-internal ParseHostOptionalPort() function for C++.\r\n\r\n",
			"disapproval": false,
			"date": "2012-07-24 23:42:24.725910",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM\n\n[::] is no more an IP address than 127.0.0.1:. The syntax for adding a port to an IPv6 address is [addr]:port, but the [] are not part of the addr.\n\nIn addition to being consistent with the RFCs, this appears to be consistent with other Unix programs. For example, on my Mac:\n\n$ telnet '[::1]'\n[::1]: nodename nor servname provided, or not known\n$ telnet ::1\nTrying ::1...\ntelnet: connect to address ::1: Connection refused\ntelnet: Unable to connect to remote host\n$",
			"disapproval": true,
			"date": "2012-07-30 00:05:19.258620",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jul 30, 2012 at 9:05 AM,  <rsc@golang.org> wrote:\r\n\r\n> In addition to being consistent with the RFCs, this appears to be\r\n> consistent with other Unix programs. For example, on my Mac:\r\n>\r\n> $ telnet '[::1]'\r\n> [::1]: nodename nor servname provided, or not known\r\n> $ telnet ::1\r\n> Trying ::1...\r\n> telnet: connect to address ::1: Connection refused\r\n> telnet: Unable to connect to remote host\r\n> $\r\n\r\nMakes sense, will abandon.\r\n",
			"disapproval": false,
			"date": "2012-07-31 11:45:58.595550",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-07-31 11:46:13.187950",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 6431053: net: fix ResolveIPAddr for IPv6 address enclosed in squ...",
	"created": "2012-07-21 13:27:30.753640",
	"patchsets": [
		1002,
		4001,
		9001
	],
	"modified": "2012-07-31 11:46:15.241610",
	"closed": true,
	"issue": 6431053
}