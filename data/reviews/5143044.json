{
	"description": "strings: add EqualFold\n\nCase-insensitive strcmp without using ToLower.\n(Using ToLower is not always correct, and it allocates.)",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"bradfitz@golang.org",
		"r@google.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "So why just in strings and not also in bytes?  I haven't learned the rule /\nline yet.\n\n\nOn Mon, Sep 26, 2011 at 3:32 PM, <rsc@golang.org> wrote:\n\n> *** Submitted as\n> http://code.google.com/p/go/**source/detail?r=a5aee6f39a7e<http://code.google.com/p/go/source/detail?r=a5aee6f39a7e>***\n>\n> strings: add EqualFold\n>\n>\n> Case-insensitive strcmp without using ToLower.\n> (Using ToLower is not always correct, and it allocates.)\n>\n> R=golang-dev, r\n> CC=golang-dev\n> http://codereview.appspot.com/**5143044<http://codereview.appspot.com/5143044>\n>\n>\n> http://codereview.appspot.com/**5143044/<http://codereview.appspot.com/5143044/>\n>\n",
			"disapproval": false,
			"date": "2011-09-26 22:34:31.523634",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-26 17:10:45.830637",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a5aee6f39a7e ***\n\nstrings: add EqualFold\n\nCase-insensitive strcmp without using ToLower.\n(Using ToLower is not always correct, and it allocates.)\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5143044",
			"disapproval": false,
			"date": "2011-09-26 22:32:55.158693",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nOn Sep 26, 2011, at 3:34 PM, Brad Fitzpatrick wrote:\n\n> So why just in strings and not also in bytes?  I haven't learned the rule / line yet.\n\nthe rule is that they should be close to equivalent, so this is an error.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2011-09-26 22:35:42.995061",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM but the name is lame. you can drop the Case part at least: FoldedEqual. but i'd prefer it the other way around: strings.EqualFolded reads better.\n\nperhaps there's better yet.",
			"disapproval": false,
			"date": "2011-09-26 17:31:56.567094",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Shortened to EqualFold.\n",
			"disapproval": false,
			"date": "2011-09-26 18:27:47.918151",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5143044: strings: add CaseFoldedEqual",
	"created": "2011-09-26 17:01:02.871737",
	"patchsets": [
		1,
		2001,
		2003
	],
	"modified": "2011-09-26 22:35:43.061722",
	"closed": true,
	"issue": 5143044
}