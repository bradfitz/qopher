{
	"description": "src: add race.bash\n\nAdd race.bash so anyone with suitable hardware can run a race detector build. race.bash can be called from the dashboard builder by passing -cmd=\"race.bash\".\n\nOriginal source for race.bash is here, http://code.google.com/p/go-wiki/wiki/DashboardBuilders\n\nTODO: add race.bat for windows/amd64",
	"cc": [
		"dvyukov@google.com",
		"minux.ma@gmail.com",
		"adg@golang.org",
		"rsc@golang.org",
		"fullung@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dvyukov@google.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dvyukov@google.com (cc: fullung@gmail.com, golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-23 00:09:08.529070",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dave@cheney.net",
				"dvyukov@google.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/23 00:09:08, dfc wrote:\n> Hello mailto:dvyukov@google.com (cc: mailto:fullung@gmail.com, mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go\n\nLGTM\nYup, that's what I am currently using.\nthanks!",
			"disapproval": false,
			"date": "2013-01-23 07:04:31.357990",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "race.bat is in https://codereview.appspot.com/7133064\n\nhttps://codereview.appspot.com/7179052/diff/6001/src/race.bash\nFile src/race.bash (right):\n\nhttps://codereview.appspot.com/7179052/diff/6001/src/race.bash#newcode5\nsrc/race.bash:5: \nperhaps add some comments here to explain\nwhat does this script do.\n\nhttps://codereview.appspot.com/7179052/diff/6001/src/race.bash#newcode8\nsrc/race.bash:8: if [ $(uname -m) != \"x86_64\" ]; then\ni believe $(uname -m) on Darwin won't ever return x86_64.\nyou need to consult whether `sysctl machdep.cpu.extfeatures`\ncontains \"EM64T\".\n\nor, perhaps you can just build cmd/dist if it doesn't\nexist and use eval 'dist env'.\n\nhttps://codereview.appspot.com/7179052/diff/6001/src/race.bash#newcode29\nsrc/race.bash:29: go install -race std\nplease add an echo before this line as this line\nis expected take some time and the user might needs\nsome progress indication.",
			"disapproval": false,
			"date": "2013-01-23 09:58:40.853660",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> https://codereview.appspot.com/7179052/diff/6001/src/race.bash#newcode8\r\n> src/race.bash:8: if [ $(uname -m) != \"x86_64\" ]; then\r\n> i believe $(uname -m) on Darwin won't ever return x86_64.\r\n> you need to consult whether `sysctl machdep.cpu.extfeatures`\r\n> contains \"EM64T\".\r\n\r\nSure it does,\r\n\r\nDarwin odessa.local 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug 23\r\n16:25:48 PDT 2012; root:xnu-1699.32.7~1/RELEASE_X86_64 x86_64\r\nodessa:~ dfc$ uname -m\r\nx86_64\r\n",
			"disapproval": false,
			"date": "2013-01-23 10:01:20.502520",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thursday, January 24, 2013, wrote:\r\n\r\n> Please take another look.\r\n>\r\n> As an experiment I tried to use the dist tool to solve the problem of\r\n> determining the platform, but ran into a chicken and egg problem in that\r\n>\r\n> ./make.bash --dist-tool\r\n>\r\n> will move the dist tool to $GOTOOLDIR, however to discover $GOTOOLDIR,\r\n> you need to run eval $(dist env), which means you need to know $GOOS and\r\n> $GOARCH.\r\n>\r\n> This could probably be solved with a small change to make.bash, which I\r\n> may do in a followup CL.\r\n>\r\ntwo possible solutions without changes to make.bash:\r\n1. ./make.bash --dist-tool /path/to/where/you/want/dist/to/live\r\n2. . ./make.bash --dist-tool\r\nand then you can use $GOHOSTARCH directly.\r\n",
			"disapproval": false,
			"date": "2013-01-24 03:04:36.254280",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 23, 2013 at 6:01 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> > https://codereview.appspot.com/7179052/diff/6001/src/race.bash#newcode8\r\n> > src/race.bash:8: if [ $(uname -m) != \"x86_64\" ]; then\r\n> > i believe $(uname -m) on Darwin won't ever return x86_64.\r\n> > you need to consult whether `sysctl machdep.cpu.extfeatures`\r\n> > contains \"EM64T\".\r\n>\r\n> Sure it does,\r\n>\r\n> Darwin odessa.local 11.4.2 Darwin Kernel Version 11.4.2: Thu Aug 23\r\n> 16:25:48 PDT 2012; root:xnu-1699.32.7~1/RELEASE_X86_64 x86_64\r\n> odessa:~ dfc$ uname -m\r\n> x86_64\r\n>\r\nBut it doesn't do that in older version of Mac OS X (for example, 10.6).\r\n\r\nThat's why cmd/dist has this code block:\r\n#if defined(__APPLE__)\r\n        gohostos = \"darwin\";\r\n        // Even on 64-bit platform, darwin uname -m prints i386.\r\n        run(&b, nil, 0, \"sysctl\", \"machdep.cpu.extfeatures\", nil);\r\n        if(contains(bstr(&b), \"EM64T\"))\r\n                gohostarch = \"amd64\";\r\n",
			"disapproval": false,
			"date": "2013-01-23 10:04:35.040250",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2013-01-24 16:55:23.578840",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> two possible solutions without changes to make.bash:\n> 1. ./make.bash --dist-tool /path/to/where/you/want/dist/to/live\n> 2. . ./make.bash --dist-tool\n> and then you can use $GOHOSTARCH directly.\n\nI've had a little play with both those options, #2 does not work because sourcing a script that calls exit 0 will exit the source'ee, #1 has more potential but I think what we have right now is sufficient. I'm happy to continue to work on it in future CLs.",
			"disapproval": false,
			"date": "2013-01-24 08:14:00.459660",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please take another look.\n\nAs an experiment I tried to use the dist tool to solve the problem of determining the platform, but ran into a chicken and egg problem in that\n\n./make.bash --dist-tool\n\nwill move the dist tool to $GOTOOLDIR, however to discover $GOTOOLDIR, you need to run eval $(dist env), which means you need to know $GOOS and $GOARCH. \n\nThis could probably be solved with a small change to make.bash, which I may do in a followup CL.\n\nhttps://codereview.appspot.com/7179052/diff/18001/src/race.bash\nFile src/race.bash (right):\n\nhttps://codereview.appspot.com/7179052/diff/18001/src/race.bash#newcode26\nsrc/race.bash:26: echo 'race detector is only supported on linux/amd64 and darwin/amd64' 1>&2\nOn 2013/01/23 11:12:14, minux wrote:\n> this very string is replicated three times... hmm..\n\nDone.",
			"disapproval": false,
			"date": "2013-01-24 01:39:42.765090",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dvyukov@google.com, minux.ma@gmail.com (cc: fullung@gmail.com, golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-23 10:54:48.383880",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7179052/diff/18001/src/race.bash\nFile src/race.bash (right):\n\nhttps://codereview.appspot.com/7179052/diff/18001/src/race.bash#newcode26\nsrc/race.bash:26: echo 'race detector is only supported on linux/amd64 and darwin/amd64' 1>&2\nthis very string is replicated three times... hmm..",
			"disapproval": false,
			"date": "2013-01-23 11:12:14.699730",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If there are no objections, I plan to submit this CL this weekend.",
			"disapproval": false,
			"date": "2013-01-26 02:57:17.420880",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=9a96e224e063 ***\n\nsrc: add race.bash\n\nAdd race.bash so anyone with suitable hardware can run a race detector build. race.bash can be called from the dashboard builder by passing -cmd=\"race.bash\".\n\nOriginal source for race.bash is here, http://code.google.com/p/go-wiki/wiki/DashboardBuilders\n\nTODO: add race.bat for windows/amd64\n\nR=dvyukov, minux.ma, adg, rsc\nCC=fullung, golang-dev\nhttps://codereview.appspot.com/7179052",
			"disapproval": false,
			"date": "2013-01-28 10:07:24.048050",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 7179052: src: add race.bash",
	"created": "2013-01-22 23:56:10.558970",
	"patchsets": [
		1,
		2001,
		3,
		6001,
		13002,
		16001,
		18001,
		12002,
		21001,
		23001,
		26001
	],
	"modified": "2013-01-29 10:17:50.878490",
	"closed": true,
	"issue": 7179052
}