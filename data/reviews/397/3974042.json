{
	"description": "Modified makefile includes to use a new variable DST that specifies where binaries are put and should be searched for. If DST is not specified, makefiles behave like they used to.\n\nThis allows multiple packages to be compiled against each other without polluting the install space.\n\nNote: this does not work with gotest, for some reason (unless DST is not specified, then gotest works fine). There is a hidden link step that I have been unable to find (and add -L $(DST) to).",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"jasmuth@gmail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I'd prefer to not change the invariant that _obj/$(TARG).a is produced at the end of a compilation.\n\nHave you tried to use something like this in your own makefile:\n\nGC:=$(GC) $(patsubst %,-I %/_obj,$(MYPKGDIRS))\n\n?",
			"disapproval": false,
			"date": "2011-01-14 16:28:19.583115",
			"approval": false
		},
		{
			"sender": "jasmuth@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Doing this will have problems if DESTDIR==_obj. Checking for that and\ninvoking the rule (or not) is a bit beyond my current make skills, though\nI'm sure it's possible and I'll look into it.\n\nOn Fri, Jan 14, 2011 at 12:10 PM, <n13m3y3r@gmail.com> wrote:\n\n> Actually, more correctly, to avoid unnecessary copies:\n>\n> $(DESTDIR)/$(TARG).a: _obj/$(TARG).a\n>        cp -f $< $@\n>\n> package: $(DESTDIR)/$(TARG).a\n\n\nOn Fri, Jan 14, 2011 at 12:07 PM, <n13m3y3r@gmail.com> wrote:\n\n> To allow this either we have to have a very long -I/-L argument\n>> (specifying each of the other packages _obj dirs)\n>>\n>\n> That's exactly what the line suggested above does, assuming you\n> have a list of the package directories you want to build, which\n> you must do either way to compile multiple packages.\n\n\nI'm afraid I don't quite follow - the way I suggested only adds one option\nto GC/LD. If we have a set of (let's say) 100 packages that need to be\nlinked against each other, unless they get copied to someone where central,\nthat is \"-I place1 -I place2 ... -I place100\" on the GC line. That is the\nproblem I was talking about.\n\n- John\n",
			"disapproval": false,
			"date": "2011-01-14 17:41:16.659041",
			"approval": false
		},
		{
			"sender": "jasmuth@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "The idea is that this happens without having to copy things into\n$GOROOT/pkg, and polluting the install space.\n\n- John\n\nOn Fri, Jan 14, 2011 at 1:45 PM, Russ Cox <rsc@golang.org> wrote:\n\n> > $(DESTDIR)/$(TARG).a: _obj/$(TARG).a\n> >        cp -f $< $@\n> >\n> > package: $(DESTDIR)/$(TARG).a\n>\n> This should be install.  Make package does not install.\n>\n",
			"disapproval": false,
			"date": "2011-01-14 18:47:59.311852",
			"approval": false
		},
		{
			"sender": "jasmuth@gmail.com",
			"recipients": [
				"jasmuth@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change.",
			"disapproval": false,
			"date": "2011-01-14 15:15:04.020848",
			"approval": false
		},
		{
			"sender": "jasmuth@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "That will work to compile and link the package or command you're working on,\nbut won't allow other packages or commands to link against it. To allow this\neither we have to have a very long -I/-L argument (specifying each of the\nother packages _obj dirs) or a central location to store them (specified by\nDST).\n\nWhat if _obj/$(TARG).a is produced, and then copied to $(DST)/$(TARG).a?\nLike the install step, except more intermediate.\n\n- John\n\nOn Fri, Jan 14, 2011 at 11:28 AM, <n13m3y3r@gmail.com> wrote:\n\n> I'd prefer to not change the invariant that _obj/$(TARG).a is produced\n> at the end of a compilation.\n>\n> Have you tried to use something like this in your own makefile:\n>\n> GC:=$(GC) $(patsubst %,-I %/_obj,$(MYPKGDIRS))\n>\n> ?\n>\n>\n> http://codereview.appspot.com/3974042/\n>\n",
			"disapproval": false,
			"date": "2011-01-14 16:40:24.629664",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"jasmuth@gmail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "> To allow this either we have to have a very long -I/-L argument\n> (specifying each of the other packages _obj dirs)\n\nThat's exactly what the line suggested above does, assuming you\nhave a list of the package directories you want to build, which\nyou must do either way to compile multiple packages.\n\n> What if _obj/$(TARG).a is produced, and then copied to $(DST)/$(TARG).a?\n\nSounds good.  You can also do this trivially without any\nchanges in Make.pkg:\n\nmy-package: _obj/$(TARG).a\n        cp -f $< $(DESTDIR)/$(TARG).a\n\npackage: my-package",
			"disapproval": false,
			"date": "2011-01-14 17:07:45.168111",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"jasmuth@gmail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Actually, more correctly, to avoid unnecessary copies:\n\n\n$(DESTDIR)/$(TARG).a: _obj/$(TARG).a\n        cp -f $< $@\n\npackage: $(DESTDIR)/$(TARG).a",
			"disapproval": false,
			"date": "2011-01-14 17:11:33.796222",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"jasmuth@gmail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "> Doing this will have problems if DESTDIR==_obj. Checking for that and\n> invoking the rule (or not) is a bit beyond my current make skills, though\n> I'm sure it's possible and I'll look into it.\n\n[ \"$DESTDIR\" = _obj ] || cp -f ...",
			"disapproval": false,
			"date": "2011-01-14 17:47:02.549364",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> $(DESTDIR)/$(TARG).a: _obj/$(TARG).a\n> \u00a0 \u00a0 \u00a0 \u00a0cp -f $< $@\n>\n> package: $(DESTDIR)/$(TARG).a\n\nThis should be install.  Make package does not install.\n",
			"disapproval": false,
			"date": "2011-01-14 18:45:29.925963",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Fri, Jan 14, 2011 at 13:47, John Asmuth <jasmuth@gmail.com> wrote:\n> The idea is that this happens without having to copy things into\n> $GOROOT/pkg, and polluting the install space.\n\nWe understand that goal, and we do have a plan for this,\nbut it's not ready yet.  I'd prefer to avoid stopgaps.\nI'm glad you found a workaround.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-01-14 18:52:31.618009",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jasmuth@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "removing reviewers",
			"disapproval": false,
			"date": "2011-01-19 19:16:49.354180",
			"approval": false
		}
	],
	"owner_email": "jasmuth@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "skelterjohn",
	"subject": "code review 3974042: Modified makefile includes to use a new variable DST th...",
	"created": "2011-01-14 15:01:53.995879",
	"patchsets": [
		1,
		2001
	],
	"modified": "2011-01-19 19:16:49.396820",
	"closed": false,
	"issue": 3974042
}