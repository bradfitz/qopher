{
	"description": "all: do not run AllocsPerRun tests in short mode\nThey are inherently flaky.\nFixes issue 5000.\nFixes issue 5525.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com",
		"iant@golang.org",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM\r\n\r\nI would also like to note that a few emails on a discussion-only thread to\r\ntalk about the solution might have avoided having 3 (or more?) CLs pending\r\nabout this.\r\n",
			"disapproval": true,
			"date": "2013-05-28 21:17:33.109090",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-05-28 17:19:25.865340",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM\n\nI don't know know what the right answer is, but it can't be this.  If we stop running this tests by default, they will regress.",
			"disapproval": true,
			"date": "2013-05-28 19:15:16.297290",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2013-05-28 17:41:31.177880",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Rob, does it look good to you?\nI agree, it will positively affect our bots and stress tests like what fullung@ runs.",
			"disapproval": false,
			"date": "2013-05-28 18:14:04.883750",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, May 29, 2013 at 2:14 AM, <dvyukov@google.com> wrote:\r\n\r\n> I agree, it will positively affect our bots and stress tests like what\r\n> fullung@ runs.\r\n>\r\nis there really nothing we can do to make AllocsPerRun test reliable\r\nas discussed on the issue tracker?\r\n",
			"disapproval": false,
			"date": "2013-05-28 18:35:59.496570",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, May 28, 2013 at 10:35 PM, minux <minux.ma@gmail.com> wrote:\r\n\r\n> I agree, it will positively affect our bots and stress tests like what\r\n>\r\n>> fullung@ runs.\r\n>>\r\n> is there really nothing we can do to make AllocsPerRun test reliable\r\n> as discussed on the issue tracker?\r\n>\r\n\r\nThe only flakes that I see *now* are due to type info allocation in\r\nruntime. We can remove that allocations, but it's a long road. Hacky\r\nworkarounds that I have are, well, hacky, and I am not sure how reliable\r\nare they.\r\n",
			"disapproval": false,
			"date": "2013-05-28 18:38:33.258060",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, May 29, 2013 at 2:38 AM, Dmitry Vyukov <dvyukov@google.com> wrote:\r\n\r\n> On Tue, May 28, 2013 at 10:35 PM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n>> I agree, it will positively affect our bots and stress tests like what\r\n>>\r\n>>> fullung@ runs.\r\n>>>\r\n>> is there really nothing we can do to make AllocsPerRun test reliable\r\n>> as discussed on the issue tracker?\r\n>>\r\n>\r\n> The only flakes that I see *now* are due to type info allocation in\r\n> runtime. We can remove that allocations, but it's a long road. Hacky\r\n> workarounds that I have are, well, hacky, and I am not sure how reliable\r\n> are they.\r\n>\r\nI'm a little concerned: we've removed all AllocsPerRun tests in -short mode,\r\nwhich seems like the AllocsPerRun test (or the Go 1.1 API) itself is badly\r\ndesigned.\r\n",
			"disapproval": false,
			"date": "2013-05-28 18:42:33.921330",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/28 19:15:16, iant wrote:\n> NOT LGTM\n> \n> I don't know know what the right answer is, but it can't be this.  If we stop\n> running this tests by default, they will regress.\n\nOK, let's just do:\nhttps://codereview.appspot.com/7625044/\nand:\nhttps://codereview.appspot.com/9837043\n\nIt should alleviate the problem that was triggered by runtime.persistentalloc() change (the heap become smaller). And hopefully give us time for a more reliable fix.",
			"disapproval": false,
			"date": "2013-05-28 21:09:46.587930",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-05-31 07:04:22.998370",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 9731049: all: do not run AllocsPerRun tests in short mode",
	"created": "2013-05-28 17:18:25.179760",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2013-05-31 07:04:24.286070",
	"closed": true,
	"issue": 9731049
}