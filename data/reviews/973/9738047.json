{
	"description": "runtime: Add shared library support (linux/amd64+linux/arm)\n\nAdd the nescessary hooks to enable Go programs to be output\nto a shared library and called from foreign programs, e.g. C.\n\nThe linker registers _rt0_amd64|arm_linux_lib to be run as a library\ninitialization function. On the first cgo callback from the main\nprogram, _cgo_lib_init is called. _cgo_lib_init in turn\nstarts a new thread that runs the Go runtime initialization,\n_rt0_amd64/_rt0_arm_linux1.  _cgo_lib_init uses a barrier to wait for\nthe runtime to complete inititialization before continuing.\n\nOther than running on a new thread, the Go runtime itself is not changed,\nexcept for allowing (and expecting) the Go main() function to complete.\n\nSince argc and argv cannot be reliably accessed from a shared library\ninitializer, the runtime is changed to allow os.Args to have zero length.\nIn that case, auxv is fetched from /proc/auxv instead.\n\nThe environment is fetched from the global variable environ.\n\nDeadlock detection is effectively disabled in shared library mode, even when\nno Cgo calls have been made, since it is not possible to determine whether\nthe main program will call into Go at some later time.\n\nOn amd64 the test must be run manually,\nsince -shared is only supported when the standard library have been built\nwith -largeflags:\n\nGO_GCFLAGS=-largemodel GO_CCFLAGS=-largemodel ./all.bash\n\nOn ARM the test is run as part of the test suite in run.bash.\n\nUpdates issue 4848.\nUpdates issue 256.\nUpdates issue 2790.\n\nDesign proposal at https://groups.google.com/forum/?fromgroups#!topic/golang-nuts/zmjXkGrEx6Q",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "elias.naur@gmail.com",
			"recipients": [
				"elias.naur@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-05-29 20:18:51.863420",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd like to see the design fleshed out more before checking in or reviewing code.\nThere are a lot of open questions here.\n\nAll the problems from last year remain: why should the init only happen once but the main start anew on each call? Why is it reasonable for os.Args to be empty? What about the environment? And so on.\n\nI really want to know what kind of interface we are trying to build. \n\nLet's continue that discussion on the golang-nuts thread.\n",
			"disapproval": false,
			"date": "2013-06-03 20:12:02.872580",
			"approval": false
		},
		{
			"sender": "elias.naur@gmail.com",
			"recipients": [
				"elias.naur@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Added linux/arm support and updated to apply to tip.",
			"disapproval": false,
			"date": "2013-06-24 15:22:28.139050",
			"approval": false
		}
	],
	"owner_email": "elias.naur@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "elias.naur",
	"subject": "code review 9738047: runtime: Add shared library support (linux/amd64)",
	"created": "2013-05-29 17:08:05.145100",
	"patchsets": [
		1,
		2001,
		4001,
		9001,
		12001,
		15001,
		18001,
		21001,
		24001,
		28001,
		31001,
		34001,
		34002,
		37001,
		40001
	],
	"modified": "2013-08-14 21:40:57.304350",
	"closed": false,
	"issue": 9738047
}