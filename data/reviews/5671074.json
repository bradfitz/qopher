{
	"description": "go/parser: imaginary constants and ! may start an expression\n\nComplete list of tokens that can start a top-level expression.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It is always debatable which way to go. Either way, the token list was\nnot correct.\n\nPTAL.\n- gri\n\nOn Thu, Feb 16, 2012 at 1:38 PM, Russ Cox <rsc@golang.org> wrote:\n> I might be misinterpreting this (there's no test case), but it seems\n> like a mistake.\n> If I write:\n>\n> package main\n> func main() {\n> \u00a0 \u00a01\n> }\n>\n> That's not a very interesting program, but it should run through gofmt.\n> That's a semantic error, not a syntactic one.\n",
			"disapproval": false,
			"date": "2012-02-16 21:55:53.460381",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Feb 16, 2012 at 16:55, Robert Griesemer <gri@golang.org> wrote:\n> It is always debatable which way to go.\n\nI agree.  In general the tools are more useful if the parser\naccepts as much as possible and lets higher-level things\nreport the errors, because then better errors can be reported.\n",
			"disapproval": false,
			"date": "2012-02-16 21:59:44.763159",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-02-16 21:59:50.912692",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 0060ad65e9ef ***\n\ngo/parser: imaginary constants and ! may start an expression\n\nComplete list of tokens that can start a top-level expression.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5671074",
			"disapproval": false,
			"date": "2012-02-16 22:13:33.154444",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-02-16 21:31:49.043779",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I might be misinterpreting this (there's no test case), but it seems\nlike a mistake.\nIf I write:\n\npackage main\nfunc main() {\n    1\n}\n\nThat's not a very interesting program, but it should run through gofmt.\nThat's a semantic error, not a syntactic one.\n",
			"disapproval": false,
			"date": "2012-02-16 21:38:24.902728",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5671074: go/parser: only calls and receive ops can be expression...",
	"created": "2012-02-16 21:27:40.811282",
	"patchsets": [
		1,
		3,
		3001,
		2004,
		5001
	],
	"modified": "2012-02-16 22:13:33.853766",
	"closed": true,
	"issue": 5671074
}