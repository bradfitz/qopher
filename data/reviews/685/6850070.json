{
	"description": "net: add unit tests for read/write deadlines\nThe tests verify that deadlines are \"persistent\",\nread/write deadlines do not interfere, can be reset,\nread deadline can be set with both SetDeadline()\nand SetReadDeadline(), etc.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/24 05:00:15, bradfitz wrote:\n> LGTM\n> \n> https://codereview.appspot.com/6850070/diff/1004/src/pkg/net/timeout_test.go\n> File src/pkg/net/timeout_test.go (right):\n> \n> https://codereview.appspot.com/6850070/diff/1004/src/pkg/net/timeout_test.go#newcode21\n> src/pkg/net/timeout_test.go:21: ln, err := ListenTCP(\"tcp\", &TCPAddr{IP: IP{127,\n> 0, 0, 1}, Port: 0})\n> ln, err := newLocalListener()\n> \n> ?\n> \n> https://codereview.appspot.com/6850070/diff/1004/src/pkg/net/timeout_test.go#newcode69\n> src/pkg/net/timeout_test.go:69: ln, err := ListenTCP(\"tcp\", &TCPAddr{IP: IP{127,\n> 0, 0, 1}, Port: 0})\n> ln, err := newLocalListener()\n> \n> ?\n\n\nDone.\nI've also made it use new isTimeout() function.",
			"disapproval": false,
			"date": "2012-11-25 09:27:14.726320",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for this proposal, some comments attached.\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode21\nsrc/pkg/net/timeout_test.go:21: ln, err := Listen(\"tcp\", \"127.0.0.1:0\")\nWhy not just ListenTCP(...), then you don't need the type assertion ?\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode24\nsrc/pkg/net/timeout_test.go:24: }\ndefer ln.Close()\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode27\nsrc/pkg/net/timeout_test.go:27: if _, err := ln.Accept(); !err.(Error).Timeout() {\nThis will panic if err is not a *net.Error. I guess that is the point, but the t.Fatalf will not be reached if this isn't the expected type.\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode65\nsrc/pkg/net/timeout_test.go:65: ln, err := Listen(\"tcp\", \"127.0.0.1:0\")\nListenTCP(...)\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode70\nsrc/pkg/net/timeout_test.go:70: c, err := Dial(\"tcp\", ln.Addr().String())\nDialTCP(\"tcp\", nil, ln.Addr())\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode73\nsrc/pkg/net/timeout_test.go:73: }\ndefer c.Close()\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode116\nsrc/pkg/net/timeout_test.go:116: ln, err := Listen(\"tcp\", \"127.0.0.1:0\")\nSame as above\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode124\nsrc/pkg/net/timeout_test.go:124: }\ndefer c.Close()",
			"disapproval": false,
			"date": "2012-11-22 13:05:22.824730",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode21\nsrc/pkg/net/timeout_test.go:21: ln, err := Listen(\"tcp\", \"127.0.0.1:0\")\nOn 2012/11/22 13:05:22, dfc wrote:\n> Why not just ListenTCP(...), then you don't need the type assertion ?\n\nWhat is the easy way to create TCPAddr?\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode24\nsrc/pkg/net/timeout_test.go:24: }\nOn 2012/11/22 13:05:22, dfc wrote:\n> defer ln.Close()\n\nIt must be closed not at the end of function.\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode73\nsrc/pkg/net/timeout_test.go:73: }\nOn 2012/11/22 13:05:22, dfc wrote:\n> defer c.Close()\n\nIt is closed not at the end of function\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode124\nsrc/pkg/net/timeout_test.go:124: }\nOn 2012/11/22 13:05:22, dfc wrote:\n> defer c.Close()\n\nIt is closed before function end",
			"disapproval": false,
			"date": "2012-11-22 13:15:59.259090",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-11-18 14:42:08.455790",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/20 02:05:36, bradfitz wrote:\n> https://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go\n> File src/pkg/net/timeout_test.go (right):\n> \n> https://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode26\n> src/pkg/net/timeout_test.go:26: tl.SetDeadline(time.Now())\n> time.Now().Add(-1 * time.Second) to be clear?\n> \n> https://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode49\n> src/pkg/net/timeout_test.go:49: t.Fatalf(\"Expected Accept() to not return, but\n> it retrned with %v\\n\", err)\n> typo: returned\n> \n> https://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode90\n> src/pkg/net/timeout_test.go:90: c.SetReadDeadline(time.Time{})\n> noDeadline\n> \n> https://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode100\n> src/pkg/net/timeout_test.go:100: t.Fatalf(\"Expected Read() to not return, but it\n> retrned with %v\\n\", err)\n> returned\n> \n> https://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode143\n> src/pkg/net/timeout_test.go:143: c.SetWriteDeadline(time.Time{})\n> noDeadline\n> \n> https://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode157\n> src/pkg/net/timeout_test.go:157: t.Fatalf(\"Expected Write() to not return, but\n> it retrned with %v\\n\", err)\n> returned\n\nAll Done. PTAL.",
			"disapproval": false,
			"date": "2012-11-22 09:22:30.943360",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode26\nsrc/pkg/net/timeout_test.go:26: tl.SetDeadline(time.Now())\ntime.Now().Add(-1 * time.Second) to be clear?\n\nhttps://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode49\nsrc/pkg/net/timeout_test.go:49: t.Fatalf(\"Expected Accept() to not return, but it retrned with %v\\n\", err)\ntypo: returned\n\nhttps://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode90\nsrc/pkg/net/timeout_test.go:90: c.SetReadDeadline(time.Time{})\nnoDeadline\n\nhttps://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode100\nsrc/pkg/net/timeout_test.go:100: t.Fatalf(\"Expected Read() to not return, but it retrned with %v\\n\", err)\nreturned\n\nhttps://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode143\nsrc/pkg/net/timeout_test.go:143: c.SetWriteDeadline(time.Time{})\nnoDeadline\n\nhttps://codereview.appspot.com/6850070/diff/7001/src/pkg/net/timeout_test.go#newcode157\nsrc/pkg/net/timeout_test.go:157: t.Fatalf(\"Expected Write() to not return, but it retrned with %v\\n\", err)\nreturned",
			"disapproval": false,
			"date": "2012-11-20 02:05:36.175100",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6850070/diff/1004/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/6850070/diff/1004/src/pkg/net/timeout_test.go#newcode21\nsrc/pkg/net/timeout_test.go:21: ln, err := ListenTCP(\"tcp\", &TCPAddr{IP: IP{127, 0, 0, 1}, Port: 0})\nln, err := newLocalListener()\n\n?\n\nhttps://codereview.appspot.com/6850070/diff/1004/src/pkg/net/timeout_test.go#newcode69\nsrc/pkg/net/timeout_test.go:69: ln, err := ListenTCP(\"tcp\", &TCPAddr{IP: IP{127, 0, 0, 1}, Port: 0})\nln, err := newLocalListener()\n\n?",
			"disapproval": false,
			"date": "2012-11-24 05:00:15.855710",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode21\nsrc/pkg/net/timeout_test.go:21: ln, err := Listen(\"tcp\", \"127.0.0.1:0\")\n> What is the easy way to create TCPAddr?\n\nt := &net.TCPAddr{\n    IP: net.IP{127,0,0,1},\n    Port: 0,\n}\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode24\nsrc/pkg/net/timeout_test.go:24: }\nOn 2012/11/22 13:15:59, dvyukov wrote:\n> On 2012/11/22 13:05:22, dfc wrote:\n> > defer ln.Close()\n> \n> It must be closed not at the end of function.\n\nBut it will leak if the test fails otherwise.\n\nhttps://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode124\nsrc/pkg/net/timeout_test.go:124: }\n> It is closed before function end\n\nNot if any t.Fatal fires before it",
			"disapproval": false,
			"date": "2012-11-22 13:21:21.131570",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you. LGTM, all tests pass on linux/arm",
			"disapproval": false,
			"date": "2012-11-23 11:31:35.411010",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Brad?\r\n\r\n\r\nOn Fri, Nov 23, 2012 at 3:31 PM, <dave@cheney.net> wrote:\r\n\r\n> Thank you. LGTM, all tests pass on linux/arm\r\n>\r\n> https://codereview.appspot.**com/6850070/<https://codereview.appspot.com/6850070/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-23 11:46:59.165660",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d351a7cc9ca9 ***\n\nnet: add unit tests for read/write deadlines\nThe tests verify that deadlines are \"persistent\",\nread/write deadlines do not interfere, can be reset,\nread deadline can be set with both SetDeadline()\nand SetReadDeadline(), etc.\n\nR=golang-dev, bradfitz, dave\nCC=golang-dev\nhttp://codereview.appspot.com/6850070",
			"disapproval": false,
			"date": "2012-11-25 09:27:51.557840",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/22 13:21:21, dfc wrote:\n> https://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go\n> File src/pkg/net/timeout_test.go (right):\n> \n> https://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode21\n> src/pkg/net/timeout_test.go:21: ln, err := Listen(\"tcp\", \"127.0.0.1:0\")\n> > What is the easy way to create TCPAddr?\n> \n> t := &net.TCPAddr{\n>     IP: net.IP{127,0,0,1},\n>     Port: 0,\n> }\n> \n> https://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode24\n> src/pkg/net/timeout_test.go:24: }\n> On 2012/11/22 13:15:59, dvyukov wrote:\n> > On 2012/11/22 13:05:22, dfc wrote:\n> > > defer ln.Close()\n> > \n> > It must be closed not at the end of function.\n> \n> But it will leak if the test fails otherwise.\n> \n> https://codereview.appspot.com/6850070/diff/1003/src/pkg/net/timeout_test.go#newcode124\n> src/pkg/net/timeout_test.go:124: }\n> > It is closed before function end\n> \n> Not if any t.Fatal fires before it\n\n\nAll Done. PTAL.",
			"disapproval": false,
			"date": "2012-11-23 07:02:58.151680",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6850070: net: add unit tests for read/write deadlines",
	"created": "2012-11-18 14:36:53.043990",
	"patchsets": [
		1,
		2001,
		5001,
		7001,
		1003,
		12001,
		1004,
		12002,
		12003,
		8005,
		4003
	],
	"modified": "2012-11-25 09:27:53.681000",
	"closed": true,
	"issue": 6850070
}