{
	"description": "crypto/tls: default cipher negotiation now runs from strong to weak.\r\n\r\nThis diff simply reverses the order of the default cipher negotiation that consumed by mutualCipherSuite. The present code is preferencing weaker ciphers over stronger ones.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"agl@golang.org",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "raggi@google.com",
			"recipients": [
				"raggi@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2013-01-20 22:42:09.690520",
			"approval": false
		},
		{
			"sender": "raggi@google.com",
			"recipients": [
				"raggi@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This diff simply reverses the order of the default cipher negotiation that\nconsumed by mutualCipherSuite. The present code is preferencing weaker ciphers over stronger ones.",
			"disapproval": false,
			"date": "2013-02-04 02:32:05.370070",
			"approval": false
		},
		{
			"sender": "raggi@google.com",
			"recipients": [
				"raggi@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "crypto/tls: default cipher negotiation now runs from strong to weak.\n\nThis diff simply reverses the order of the default cipher negotiation that\nconsumed by mutualCipherSuite. The present code is preferencing weaker ciphers\nover stronger ones.",
			"disapproval": false,
			"date": "2013-03-08 02:19:05.697780",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "A comment warning about the order above that list would be helpful.\r\n\r\nAnd a test?\r\n\r\n\r\nOn Thu, Mar 7, 2013 at 6:19 PM, <raggi@google.com> wrote:\r\n\r\n> crypto/tls: default cipher negotiation now runs from strong to weak.\r\n>\r\n> This diff simply reverses the order of the default cipher negotiation\r\n> that\r\n> consumed by mutualCipherSuite. The present code is preferencing weaker\r\n> ciphers\r\n> over stronger ones.\r\n>\r\n> https://codereview.appspot.**com/6858080/<https://codereview.appspot.com/6858080/>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-08 02:21:27.227680",
			"approval": false
		},
		{
			"sender": "raggi@google.com",
			"recipients": [
				"raggi@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/08 02:21:27, bradfitz wrote:\n> A comment warning about the order above that list would be helpful.\n\nSure.\n\n> And a test?\n\nIs a test against constant order and contents sufficient, or would you prefer an end to end test table with the negotiation over a range covering at least all of the present ciphers?\n\n\n> \n> \n> On Thu, Mar 7, 2013 at 6:19 PM, <mailto:raggi@google.com> wrote:\n> \n> > crypto/tls: default cipher negotiation now runs from strong to weak.\n> >\n> > This diff simply reverses the order of the default cipher negotiation\n> > that\n> > consumed by mutualCipherSuite. The present code is preferencing weaker\n> > ciphers\n> > over stronger ones.\n> >\n> >\n> https://codereview.appspot.**com/6858080/%3Chttps://codereview.appspot.com/6858080/>\n> >\n> > --\n> >\n> > ---You received this message because you are subscribed to the Google\n> > Groups \"golang-dev\" group.\n> > To unsubscribe from this group and stop receiving emails from it, send an\n> > email to\n> mailto:golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\n> > .\n> > For more options, visit\n> https://groups.google.com/**groups/opt_out%3Chttps://groups.google.com/groups/opt_out>\n> > .\n> >\n> >\n> >",
			"disapproval": false,
			"date": "2013-03-08 02:27:16.253780",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Mar 7, 2013 at 6:27 PM, <raggi@google.com> wrote:\r\n\r\n> On 2013/03/08 02:21:27, bradfitz wrote:\r\n>\r\n>> A comment warning about the order above that list would be helpful.\r\n>>\r\n>\r\n> Sure.\r\n>\r\n>  And a test?\r\n>>\r\n>\r\n> Is a test against constant order and contents sufficient, or would you\r\n> prefer an end to end test table with the negotiation over a range\r\n> covering at least all of the present ciphers?\r\n\r\n\r\nYou pick the right cost/benefit ratio.  Try to prevent the bulk of the\r\nlikely accidental regressions from others messing up your\r\ncarefully-designed code, without going overboard on the test.\r\n",
			"disapproval": false,
			"date": "2013-03-08 02:28:48.897280",
			"approval": false
		},
		{
			"sender": "raggi@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Mar 7, 2013 at 6:45 PM, Adam Langley <agl@golang.org> wrote:\r\n\r\n> On Thu, Mar 7, 2013 at 6:19 PM,  <raggi@google.com> wrote:\r\n> > crypto/tls: default cipher negotiation now runs from strong to weak.\r\n> >\r\n> > This diff simply reverses the order of the default cipher negotiation\r\n> > that\r\n> > consumed by mutualCipherSuite. The present code is preferencing weaker\r\n> > ciphers\r\n> > over stronger ones.\r\n>\r\n> I'm not sure whether this is a good change but, at the very least, the\r\n> commit message should be changed to note that this is likely to have\r\n> little effect:\r\n>\r\n> As a server, we respect the client's list by default - so this change\r\n> doesn't affect that.\r\n>\r\n\r\nMaybe. That depends how the client code is implemented - if it's like ours\r\nthen we are maybe presenting our list in an order we would not preference.\r\nSee below.\r\n\r\nAs a client, we're likely to be talking to servers that use their own\r\n> list - so no effect again.\r\n\r\n\r\nThis is where I start to disagree. I was lead toward suggesting this change\r\nwhen I noticed that various services I was connecting to, were establishing\r\nRC4, and this seemed odd to me.\r\n\r\nThe problem is that our client code negotiates as follows:\r\n\r\n// mutualCipherSuite returns a cipherSuite given a list of supported\r\n// ciphersuites and the id requested by the peer.\r\nfunc mutualCipherSuite(have []uint16, want uint16) *cipherSuite {\r\nfor _, id := range have {\r\nif id == want {\r\nfor _, suite := range cipherSuites {\r\nif suite.id == want {\r\nreturn suite\r\n}\r\n}\r\nreturn nil\r\n}\r\n}\r\nreturn nil\r\n}\r\n\r\nThe above code respects the client supplied order for negotiation (as you\r\nalready noted). In effect, if you setup tls connections like so:\r\n\r\n  tls.Dial('tcp', to, nil)\r\n\r\nThen the client will \"negotiate\" in the order that this constant is defined.\r\n\r\n\r\n> It's only Go talking to Go that's obviously\r\n> affected and, although I'd like our ECDHE code to be to the point\r\n> where we can enable it without thinking about the cost, it's not there\r\n> yet.\r\n>\r\n\r\nI wasn't aware that there are ECDHE performance problems. That's worth\r\nconsidering.\r\n\r\nI agree that 3DES is a bit odd in there, but I'm not at all sure that\r\n> just dialing it all the way up is the right answer here.\r\n>\r\n\r\nI wouldn't suppose to be fully qualified to make a current judgement on\r\nwhat a proper default preferential order should be, however, the current\r\norder seems surprising, almost reverse of what I would expect. I'd welcome\r\nany advice in this area.\r\n",
			"disapproval": false,
			"date": "2013-03-08 03:31:38.038120",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Mar 7, 2013 at 6:19 PM,  <raggi@google.com> wrote:\r\n> crypto/tls: default cipher negotiation now runs from strong to weak.\r\n>\r\n> This diff simply reverses the order of the default cipher negotiation\r\n> that\r\n> consumed by mutualCipherSuite. The present code is preferencing weaker\r\n> ciphers\r\n> over stronger ones.\r\n\r\nI'm not sure whether this is a good change but, at the very least, the\r\ncommit message should be changed to note that this is likely to have\r\nlittle effect:\r\n\r\nAs a server, we respect the client's list by default - so this change\r\ndoesn't affect that.\r\n\r\nAs a client, we're likely to be talking to servers that use their own\r\nlist - so no effect again. It's only Go talking to Go that's obviously\r\naffected and, although I'd like our ECDHE code to be to the point\r\nwhere we can enable it without thinking about the cost, it's not there\r\nyet.\r\n\r\nI agree that 3DES is a bit odd in there, but I'm not at all sure that\r\njust dialing it all the way up is the right answer here.\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2013-03-08 02:45:08.241180",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Not before Go 1.1, please.\r\n\r\nThanks.\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-03-11 21:02:31.204470",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"raggi@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"agl@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "James, Adam, what's the status of this?\n\nCan we either close it or get it in before Go 1.2?",
			"disapproval": false,
			"date": "2013-06-18 16:16:54.548400",
			"approval": false
		},
		{
			"sender": "raggi@google.com",
			"recipients": [
				"raggi@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"agl@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/18 16:16:54, bradfitz wrote:\n> James, Adam, what's the status of this?\n> \n> Can we either close it or get it in before Go 1.2?\n\nI'd love to get a call from Adam as to which direction to take here. Given BEAST/CRIME and various practical implications, I'm unsure which way the scale should tip.\n\nI would like to see the order set such that it has a sane preference overall. As stated, the original impetus for this was observing a client connecting with RC4 in a real world scenario where I personally would prefer it chose AES, without custom configuration.",
			"disapproval": false,
			"date": "2013-06-18 17:15:14.104610",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jun 18, 2013 at 1:15 PM,  <raggi@google.com> wrote:\r\n> I'd love to get a call from Adam as to which direction to take here.\r\n> Given BEAST/CRIME and various practical implications, I'm unsure which\r\n> way the scale should tip.\r\n\r\nMy take on this: https://codereview.appspot.com/10372045\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2013-06-18 18:02:34.511050",
			"approval": false
		}
	],
	"owner_email": "raggi@google.com",
	"private": false,
	"base_url": "",
	"owner": "raggi",
	"subject": "crypto/tls: default cipher negotiation now runs from strong to weak.",
	"created": "2012-11-27 05:46:37.006200",
	"patchsets": [
		1,
		2001
	],
	"modified": "2013-06-18 20:04:54.796010",
	"closed": true,
	"issue": 6858080
}