{
	"description": "net: remove unused nil check\n\nThis is part 1 of a series of proposals to fix issue 4369.\n\nIn resolving issue 3507 it was decided not to nil out the inner conn.fd field to avoid a race. This implies the checks for fd == nil inside incref/decref are never true.\n\nRemoving this logic removes one source of errClosing error values, which affects issue 4373 and moves towards bradfitz's request that fd.accept() return io.EOF when closed concurrently.\n\nUpdate issue 4369.\nUpdate issue 4373.",
	"cc": [
		"mikioh.mikioh@gmail.com",
		"bradfitz@golang.org",
		"dvyukov@google.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nI like the change but I'm suspicious why it was zeroed in the first place.\r\n\r\nIf it's something subtle, I say let it break.  Not like it has a comment\r\nanyway.  I assume all the tests still pass, so seems fine.\r\n\r\n\r\nOn Sat, Nov 17, 2012 at 8:01 PM, <dave@cheney.net> wrote:\r\n\r\n> On 2012/11/16 08:19:42, dvyukov wrote:\r\n>\r\n>> Checking 'this' for nil always looked suspicious to me. LGTM if it\r\n>>\r\n> breaks\r\n>\r\n>> nothing :)\r\n>>\r\n>\r\n> Any further comments ? brad ? russ ?\r\n>\r\n> https://codereview.appspot.**com/6852057/<https://codereview.appspot.com/6852057/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-18 04:05:53.290690",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/16 08:19:42, dvyukov wrote:\n> Checking 'this' for nil always looked suspicious to me. LGTM if it breaks\n> nothing :)\n\nAny further comments ? brad ? russ ?",
			"disapproval": false,
			"date": "2012-11-18 04:01:25.846570",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It used to be zeroed as a form of 'is closed' check, which we removed\r\nas part of 3507.\r\n\r\nhttps://code.google.com/p/go/issues/detail?id=3507#c1\r\n\r\nThis change is in preparation for fixing 4369 which is a similar race.\r\n\r\nOn Sun, Nov 18, 2012 at 3:05 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> LGTM\r\n>\r\n> I like the change but I'm suspicious why it was zeroed in the first place.\r\n>\r\n> If it's something subtle, I say let it break.  Not like it has a comment\r\n> anyway.  I assume all the tests still pass, so seems fine.\r\n>\r\n>\r\n> On Sat, Nov 17, 2012 at 8:01 PM, <dave@cheney.net> wrote:\r\n>>\r\n>> On 2012/11/16 08:19:42, dvyukov wrote:\r\n>>>\r\n>>> Checking 'this' for nil always looked suspicious to me. LGTM if it\r\n>>\r\n>> breaks\r\n>>>\r\n>>> nothing :)\r\n>>\r\n>>\r\n>> Any further comments ? brad ? russ ?\r\n>>\r\n>> https://codereview.appspot.com/6852057/\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-18 04:09:03.256140",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Nov 16, 2012 at 3:19 AM,  <dvyukov@google.com> wrote:\r\n> Checking 'this' for nil always looked suspicious to me.\r\n\r\nErase that from your mind. Checking a pointer-valued receiver for nil\r\nis perfectly fine in Go, just like checking an integer-valued receiver\r\nfor 0 is fine in Go.\r\n\r\nIn brain-damaged languages like C++ on the other hand...\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-11-19 13:24:58.676530",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"brad@fitzpat.com",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello mikioh.mikioh@gmail.com, brad@fitzpat.com, dvyukov@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-11-16 01:16:45.860930",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Cool.\r\n\r\nOn Sat, Nov 17, 2012 at 8:09 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> It used to be zeroed as a form of 'is closed' check, which we removed\r\n> as part of 3507.\r\n>\r\n> https://code.google.com/p/go/issues/detail?id=3507#c1\r\n>\r\n> This change is in preparation for fixing 4369 which is a similar race.\r\n>\r\n> On Sun, Nov 18, 2012 at 3:05 PM, Brad Fitzpatrick <bradfitz@golang.org>\r\n> wrote:\r\n> > LGTM\r\n> >\r\n> > I like the change but I'm suspicious why it was zeroed in the first\r\n> place.\r\n> >\r\n> > If it's something subtle, I say let it break.  Not like it has a comment\r\n> > anyway.  I assume all the tests still pass, so seems fine.\r\n> >\r\n> >\r\n> > On Sat, Nov 17, 2012 at 8:01 PM, <dave@cheney.net> wrote:\r\n> >>\r\n> >> On 2012/11/16 08:19:42, dvyukov wrote:\r\n> >>>\r\n> >>> Checking 'this' for nil always looked suspicious to me. LGTM if it\r\n> >>\r\n> >> breaks\r\n> >>>\r\n> >>> nothing :)\r\n> >>\r\n> >>\r\n> >> Any further comments ? brad ? russ ?\r\n> >>\r\n> >> https://codereview.appspot.com/6852057/\r\n> >\r\n> >\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-18 04:11:56.259120",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "net.Conn represents a combo of protocol and operations.\nconn traverses across different protocols for net.Conn.\nnetFD traverses across different operations.\n\nNow the return value on netFD ops through conn/net.Conn \nhelps user decision making. hm, makes sense, LGTM.",
			"disapproval": false,
			"date": "2012-11-16 01:58:37.537140",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Checking 'this' for nil always looked suspicious to me. LGTM if it breaks nothing :)",
			"disapproval": false,
			"date": "2012-11-16 08:19:42.028050",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=bbc0024af4a4 ***\n\nnet: remove unused nil check\n\nThis is part 1 of a series of proposals to fix issue 4369.\n\nIn resolving issue 3507 it was decided not to nil out the inner conn.fd field to avoid a race. This implies the checks for fd == nil inside incref/decref are never true.\n\nRemoving this logic removes one source of errClosing error values, which affects issue 4373 and moves towards bradfitz's request that fd.accept() return io.EOF when closed concurrently.\n\nUpdate issue 4369.\nUpdate issue 4373.\n\nR=mikioh.mikioh, bradfitz, dvyukov, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6852057",
			"disapproval": false,
			"date": "2012-11-18 04:33:27.240910",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6852057: net: remove unused nil check",
	"created": "2012-11-16 01:10:13.990620",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		2006
	],
	"modified": "2012-11-18 10:04:25.876920",
	"closed": true,
	"issue": 6852057
}