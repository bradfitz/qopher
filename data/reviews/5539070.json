{
	"description": "encoding/xml: improve []byte handling\n\nMarshalling of []byte in attributes and the general\nmarshalling of named []byte types was fixed.\n\nA []byte field also won't be nil if an XML element\nwas mapped to it, even if the element is empty.\n\nTests were introduced to make sure that *struct{}\nfields works correctly for element presence testing.\nNo changes to the logic made in that regard.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-17 05:20:12.777152",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jan 17, 2012 at 00:20,  <n13m3y3r@gmail.com> wrote:\n> A []byte field also won't be nil if an XML element\n> was mapped to it, even if the element is empty.\n\nI don't understand this part: is it describing old + fixed behavior\nor current behavior?\n\nI would like it to be the case that <foo></foo> results in\nFoo []byte being non-nil.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-17 15:50:25.786662",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I would like it to be the case that <foo></foo> results in\n> Foo []byte being non-nil.\n\nThat's what it means, and it's new behavior.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2012-01-17 16:03:41.724369",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-20 18:13:06.984136",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Maybe you meant to leave marshal.go out of this CL?\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/marshal.go\nFile src/pkg/encoding/xml/marshal.go (right):\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/marshal.go#newcode187\nsrc/pkg/encoding/xml/marshal.go:187: // TODO: Should we really do this once ,omitempty is in?\nThis new code does not seem to be relevant to []byte handling.\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/marshal_test.go\nFile src/pkg/encoding/xml/marshal_test.go (right):\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/marshal_test.go#newcode256\nsrc/pkg/encoding/xml/marshal_test.go:256: // Unmrashalling an existent element onto a []byte field should never be nil.\ns/ra/ar/\nPlease add a test with\n\nValue: &Data{},\nExpectXML: `<Data></Data>`,\nUnmarshalOnly: true,\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/read.go\nFile src/pkg/encoding/xml/read.go (right):\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/read.go#newcode137\nsrc/pkg/encoding/xml/read.go:137: // []byte. A []byte won't be nil if an element was mapped to it.\nThe saved []byte is never nil.",
			"disapproval": false,
			"date": "2012-01-19 20:57:15.747036",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/marshal.go\nFile src/pkg/encoding/xml/marshal.go (right):\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/marshal.go#newcode187\nsrc/pkg/encoding/xml/marshal.go:187: // TODO: Should we really do this once ,omitempty is in?\nOn 2012/01/19 20:57:15, rsc wrote:\n> This new code does not seem to be relevant to []byte handling.\n\nIt actually is. Besides cleaning/speeding things up, this refactoring has fixed the marshalling of []byte attributes. It's never worked, FWIW.\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/marshal_test.go\nFile src/pkg/encoding/xml/marshal_test.go (right):\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/marshal_test.go#newcode256\nsrc/pkg/encoding/xml/marshal_test.go:256: // Unmrashalling an existent element onto a []byte field should never be nil.\nOn 2012/01/19 20:57:15, rsc wrote:\n> s/ra/ar/\n> Please add a test with\n> \n> Value: &Data{},\n> ExpectXML: `<Data></Data>`,\n> UnmarshalOnly: true,\n\nDone, and fixed the unmarshalling of []byte attributes so they're nil if the element isn't found.\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/read.go\nFile src/pkg/encoding/xml/read.go (right):\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/read.go#newcode137\nsrc/pkg/encoding/xml/read.go:137: // []byte. A []byte won't be nil if an element was mapped to it.\nOn 2012/01/19 20:57:15, rsc wrote:\n> The saved []byte is never nil.\n\nDone.",
			"disapproval": false,
			"date": "2012-01-19 21:25:53.033093",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/read.go\nFile src/pkg/encoding/xml/read.go (right):\n\nhttp://codereview.appspot.com/5539070/diff/4001/src/pkg/encoding/xml/read.go#newcode137\nsrc/pkg/encoding/xml/read.go:137: // []byte. A []byte won't be nil if an element was mapped to it.\nOn 2012/01/19 21:25:53, niemeyer wrote:\n> On 2012/01/19 20:57:15, rsc wrote:\n> > The saved []byte is never nil.\n> \n> Done.\n\nOops.. missed s/A/The/.. fixing.",
			"disapproval": false,
			"date": "2012-01-19 21:27:52.288864",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a411f2ff2f1f ***\n\nencoding/xml: improve []byte handling\n\nMarshalling of []byte in attributes and the general\nmarshalling of named []byte types was fixed.\n\nA []byte field also won't be nil if an XML element\nwas mapped to it, even if the element is empty.\n\nTests were introduced to make sure that *struct{}\nfields works correctly for element presence testing.\nNo changes to the logic made in that regard.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5539070",
			"disapproval": false,
			"date": "2012-01-23 02:50:13.485393",
			"approval": false
		}
	],
	"owner_email": "n13m3y3r@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "niemeyer",
	"subject": "code review 5539070: encoding/xml: improve []byte handling",
	"created": "2012-01-17 04:35:39.911984",
	"patchsets": [
		1,
		3,
		4001,
		12001,
		15002,
		16001
	],
	"modified": "2012-01-23 02:50:15.645295",
	"closed": true,
	"issue": 5539070
}