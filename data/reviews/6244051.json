{
	"description": "syscall: regenerate z-files for FreeBSD 9.0-STABLE\n\nThere are changes in archive/tar and os due to the changes in the\nstruct syscall.Stat_t.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"mikioh.mikioh@gmail.com",
		"devon.odell@gmail.com",
		"bradfitz@golang.org",
		"rsc@golang.org",
		"minux.ma@gmail.com"
	],
	"messages": [
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"mikioh.mikioh@gmail.com",
				"devon.odell@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello mikioh.mikioh@gmail.com, devon.odell@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-05-24 22:54:48.629282",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This breaks Go 1 API compatibility for pkg syscall on FreeBSD.\r\n\r\nall.bash will be happy because we never put freebsd in the Contexts lists,\r\nbut it's still breakage.  Do we care?\r\n\r\nOn Thu, May 24, 2012 at 3:54 PM, <franciscossouza@gmail.com> wrote:\r\n\r\n> Reviewers: mikioh, dho,\r\n>\r\n> Message:\r\n> Hello mikioh.mikioh@gmail.com, devon.odell@gmail.com (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> syscall: regenerate z-files for FreeBSD 9.0-STABLE\r\n>\r\n> There are changes in archive/tar and os due to the changes in the\r\n> struct syscall.Stat_t.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6244051/<http://codereview.appspot.com/6244051/>\r\n>\r\n> Affected files:\r\n>  M src/pkg/archive/tar/stat_atim.**go\r\n>  M src/pkg/archive/tar/stat_**atimespec.go\r\n>  M src/pkg/os/stat_freebsd.go\r\n>  M src/pkg/syscall/mkerrors.sh\r\n>  M src/pkg/syscall/zerrors_**freebsd_386.go\r\n>  M src/pkg/syscall/zerrors_**freebsd_amd64.go\r\n>  M src/pkg/syscall/ztypes_**freebsd_386.go\r\n>  M src/pkg/syscall/ztypes_**freebsd_amd64.go\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-24 23:35:14.751625",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, May 24, 2012 at 7:35 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> all.bash will be happy because we never put freebsd in the Contexts lists,\r\n> but it's still breakage. \u00a0Do we care?\r\n\r\nyes. please update the generator to use the old names\r\n",
			"disapproval": false,
			"date": "2012-05-25 02:27:15.609836",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You'll need to hack in some special cases for freebsd in\r\nsrc/cmd/cgo/godefs.go.\r\n\r\nEven though FreeBSD has changed their header file field names, Go 1 has\r\nmade a promise that on FreeBSD it's spelled Atimespec instead of Atim.\r\n\r\nI'll also send out a CL to add FreeBSD to the list of operating systems we\r\ncheck Go 1 API integrity against.\r\n\r\n\r\nOn Wed, May 30, 2012 at 8:05 PM, Francisco Souza\r\n<franciscossouza@gmail.com>wrote:\r\n\r\n> On Thu, May 24, 2012 at 11:26 PM, Russ Cox <rsc@golang.org> wrote:\r\n>> On Thu, May 24, 2012 at 7:35 PM, Brad Fitzpatrick <bradfitz@golang.org>\r\n>> wrote:\r\n>> > all.bash will be happy because we never put freebsd in the Contexts\r\n>> lists,\r\n>> > but it's still breakage.  Do we care?\r\n>>\r\n>> yes. please update the generator to use the old names\r\n>>\r\n>\r\n> Sorry for the delay, but I'm not sure on how we can change the generator\r\n> to use Atimespec instead of Atim.\r\n>\r\n> sys/stat.h defines stat with the attributes st_atim, st_mtim and st_ctim\r\n> (they used to be st_atimespec, st_mtimespec and st_ctimespec,\r\n> respectively), and it seems like cgo discards the st_ part and capitalizes\r\n> the result.\r\n>\r\n> Can you provide a clue on where should I change this? Perhaps I need to\r\n> change the generated files or abandon this CL?\r\n>\r\n> Thanks,\r\n> --\r\n> Francisco Souza\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-31 03:13:30.641783",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": ">\r\n> On Thu, May 24, 2012 at 11:26 PM, Russ Cox <rsc@golang.org> wrote:\r\n> On Thu, May 24, 2012 at 7:35 PM, Brad Fitzpatrick <bradfitz@golang.org>\r\n> wrote:\r\n> > all.bash will be happy because we never put freebsd in the Contexts\r\n> lists,\r\n> > but it's still breakage.  Do we care?\r\n>\r\n> yes. please update the generator to use the old names\r\n>\r\n\r\nSorry for the delay, but I'm not sure on how we can change the generator to\r\nuse Atimespec instead of Atim.\r\n\r\nsys/stat.h defines stat with the attributes st_atim, st_mtim and st_ctim\r\n(they used to be st_atimespec, st_mtimespec and st_ctimespec,\r\nrespectively), and it seems like cgo discards the st_ part and capitalizes\r\nthe result.\r\n\r\nCan you provide a clue on where should I change this? Perhaps I need to\r\nchange the generated files or abandon this CL?\r\n\r\nThanks,\r\n-- \r\nFrancisco Souza\r\n",
			"disapproval": false,
			"date": "2012-05-31 03:05:38.886588",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"mikioh.mikioh@gmail.com",
				"devon.odell@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please take another look.\n\nAlso, check the inline comments about the multiple lines if condition.\n\nRegarding the API changes, should I add them to api/next.txt?\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/cmd/cgo/gcc.go\nFile src/cmd/cgo/gcc.go (right):\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/cmd/cgo/gcc.go#newcode1510\nsrc/cmd/cgo/gcc.go:1510: }\ngofmt makes this if look strange. I've thought about using a regular expression, but that would demand importing the regexp package, and adding a new dependency to cmd/cgo.\n\nUsing a helper function would be a good idea too, but I preferred to submit this as is, so I can get feedback from a reviewer.",
			"disapproval": false,
			"date": "2012-06-02 03:38:11.282931",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"mikioh.mikioh@gmail.com",
				"devon.odell@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?",
			"disapproval": false,
			"date": "2012-06-04 14:46:04.979506",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jun 7, 2012 at 6:29 AM,  <rsc@golang.org> wrote:\r\n\r\n> I don't know what to do about these changed constants.\r\n\r\nI guess we have two options:\r\na) keep Go 1 API compatibility of syscall, tweak bootstrap tools and\r\n   provide goos-version dependent z-files like zxxx_goos_goosver_goarch.go,\r\nb) break Go 1 API compatibility of syscall, they'll change it, we'll follow it,\r\n   leave generated z-files what they are.\r\n\r\nOr other better options?\r\n\r\n> src/pkg/syscall/zerrors_freebsd_386.go:1253: TCP_MSS\r\n> \u00a0 \u00a0 \u00a0= 0x218\r\n> This is an API change. Why is it changing?\r\n\r\nSeems like they want to have a more accurate, RFC 879 compliant,\r\nTCP over IPv4 MSS value. Not sure why they considered 512 is more\r\nconvenient than 536 in previous version.\r\n",
			"disapproval": false,
			"date": "2012-06-07 03:51:54.387177",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"mikioh.mikioh@gmail.com",
				"devon.odell@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry for late response.\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/cmd/cgo/gcc.go\nFile src/cmd/cgo/gcc.go (right):\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/cmd/cgo/gcc.go#newcode1510\nsrc/cmd/cgo/gcc.go:1510: }\nwhat about?\n\n// FreeBSD changed from atimespec to atim, but Go 1\n// has made a promise that on FreeBSD it is Atimespec.\n// The same applies for Ctimespec, Mtimespec and\n// Birthtimespec.\nswitch goos {\ncase \"freebsd\":\n    switch n.Name {\n    case \"atim\", \"mtim\", \"ctim\", \"birthtim\":\n         n.Name += \"espec\"\n    }\n}\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/pkg/syscall/mkerrors.sh\nFile src/pkg/syscall/mkerrors.sh (right):\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/pkg/syscall/mkerrors.sh#newcode208\nsrc/pkg/syscall/mkerrors.sh:208: $2 == \"O_CLOEXEC\" && uname != \"FreeBSD\" ||\nI'd rather supporting O_CLOEXEC in both syscall and os packages\nthan checking uname here.",
			"disapproval": false,
			"date": "2012-06-06 03:50:33.616570",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"franciscossouza@gmail.com",
				"mikioh.mikioh@gmail.com",
				"devon.odell@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6244051/diff/14001/src/pkg/syscall/mkerrors.sh\nFile src/pkg/syscall/mkerrors.sh (right):\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/pkg/syscall/mkerrors.sh#newcode208\nsrc/pkg/syscall/mkerrors.sh:208: $2 == \"O_CLOEXEC\" && uname != \"FreeBSD\" ||\nWhen did O_CLOEXEC get added to FreeBSD?",
			"disapproval": false,
			"date": "2012-06-06 15:04:40.653582",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"mikioh.mikioh@gmail.com",
				"devon.odell@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6244051/diff/14001/src/cmd/cgo/gcc.go\nFile src/cmd/cgo/gcc.go (right):\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/cmd/cgo/gcc.go#newcode1510\nsrc/cmd/cgo/gcc.go:1510: }\nOn 2012/06/06 03:50:33, mikioh wrote:\n> what about?\n> \n> // FreeBSD changed from atimespec to atim, but Go 1\n> // has made a promise that on FreeBSD it is Atimespec.\n> // The same applies for Ctimespec, Mtimespec and\n> // Birthtimespec.\n> switch goos {\n> case \"freebsd\":\n>     switch n.Name {\n>     case \"atim\", \"mtim\", \"ctim\", \"birthtim\":\n>          n.Name += \"espec\"\n>     }\n> }\n\nmuch better :)\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/pkg/syscall/mkerrors.sh\nFile src/pkg/syscall/mkerrors.sh (right):\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/pkg/syscall/mkerrors.sh#newcode208\nsrc/pkg/syscall/mkerrors.sh:208: $2 == \"O_CLOEXEC\" && uname != \"FreeBSD\" ||\nOn 2012/06/06 03:50:33, mikioh wrote:\n> I'd rather supporting O_CLOEXEC in both syscall and os packages\n> than checking uname here.\n\nThis would impact what Go 1 supported. O_CLOEXEC is not supported on FreeBSD <= 8.2.\n\nhttp://codereview.appspot.com/6244051/diff/14001/src/pkg/syscall/mkerrors.sh#newcode208\nsrc/pkg/syscall/mkerrors.sh:208: $2 == \"O_CLOEXEC\" && uname != \"FreeBSD\" ||\nOn 2012/06/06 15:04:40, rsc wrote:\n> When did O_CLOEXEC get added to FreeBSD?\n\nFrom FreeBSD 8.3 [1] and 9.0 [2] relesase notes:\n\n\"The open(2) and fhopen(2) system calls now support the O_CLOEXEC flag, which allows setting the FD_CLOEXEC flag for the newly created file descriptor. This is standardized in IEEE Std 1003.1-2008 (POSIX, Single UNIX Specification Version 4).\"\n\n[1] http://www.freebsd.org/releases/8.3R/relnotes-detailed.html#KERNEL\n[2] http://www.freebsd.org/releases/9.0R/relnotes-detailed.html#KERNEL",
			"disapproval": false,
			"date": "2012-06-06 15:18:51.209774",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "For now let's exclude O_CLOEXEC on FreeBSD, like this change does. I\r\nwould rather handle it too, but I don't want to introduce O_CLOEXEC2,\r\nat least not yet.\r\n",
			"disapproval": false,
			"date": "2012-06-06 19:43:30.666624",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please 'hg mail' with your latest changes.\r\n",
			"disapproval": false,
			"date": "2012-06-06 19:44:11.863924",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jun 7, 2012 at 11:53 AM, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> On Thu, Jun 7, 2012 at 12:51 PM, Mikio Hara <mikioh.mikioh@gmail.com>\r\n> wrote:\r\n>\r\n> > I guess we have two options:\r\n> > a) keep Go 1 API compatibility of syscall, tweak bootstrap tools and\r\n> >   provide goos-version dependent z-files like\r\n> zxxx_goos_goosver_goarch.go,\r\n> > b) break Go 1 API compatibility of syscall, they'll change it, we'll\r\n> follow it,\r\n> >   leave generated z-files what they are.\r\n> >\r\n> > Or other better options?\r\n>\r\n> c) postpone re-generating z-files, supporting new versions of goos and\r\n>   adding new kernel features into syscall until next Go major release\r\n>   such as Go 2? (or Go 1.1).\r\n>\r\nperhaps we should fix http://code.google.com/p/go/issues/detail?id=2999\r\nbut, this won't fix the cmd/api issue and essentially it will force us\r\nmaintaining several\r\nbranches of the syscall package just for different OS revisions.\r\n\r\nGo 1.1 still has to maintain the Go 1 API promise, so I doubt we can change\r\nthat\r\nin Go 1.1.\r\n",
			"disapproval": false,
			"date": "2012-06-07 06:54:32.064015",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jun 7, 2012 at 12:51 PM, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> I guess we have two options:\r\n> a) keep Go 1 API compatibility of syscall, tweak bootstrap tools and\r\n> \u00a0 provide goos-version dependent z-files like zxxx_goos_goosver_goarch.go,\r\n> b) break Go 1 API compatibility of syscall, they'll change it, we'll follow it,\r\n> \u00a0 leave generated z-files what they are.\r\n>\r\n> Or other better options?\r\n\r\nc) postpone re-generating z-files, supporting new versions of goos and\r\n   adding new kernel features into syscall until next Go major release\r\n   such as Go 2? (or Go 1.1).\r\n",
			"disapproval": false,
			"date": "2012-06-07 03:53:45.223151",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"franciscossouza@gmail.com",
				"mikioh.mikioh@gmail.com",
				"devon.odell@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't know what to do about these changed constants.\n\nhttp://codereview.appspot.com/6244051/diff/19002/src/pkg/syscall/zerrors_freebsd_386.go\nFile src/pkg/syscall/zerrors_freebsd_386.go (right):\n\nhttp://codereview.appspot.com/6244051/diff/19002/src/pkg/syscall/zerrors_freebsd_386.go#newcode1253\nsrc/pkg/syscall/zerrors_freebsd_386.go:1253: TCP_MSS                           = 0x218\nThis is an API change. Why is it changing?\n\nhttp://codereview.appspot.com/6244051/diff/19002/src/pkg/syscall/zerrors_freebsd_386.go#newcode1388\nsrc/pkg/syscall/zerrors_freebsd_386.go:1388: ELAST           = Errno(0x5e)\nAnother API change. Sigh. Not sure about this one. We should not have included ELAST but now we're stuck with it.\n\nhttp://codereview.appspot.com/6244051/diff/19002/src/pkg/syscall/zerrors_freebsd_amd64.go\nFile src/pkg/syscall/zerrors_freebsd_amd64.go (right):\n\nhttp://codereview.appspot.com/6244051/diff/19002/src/pkg/syscall/zerrors_freebsd_amd64.go#newcode454\nsrc/pkg/syscall/zerrors_freebsd_amd64.go:454: IFF_CANTCHANGE                    = 0x218f72\nI love how IFF_CANTCHANGE just changed.",
			"disapproval": false,
			"date": "2012-06-06 21:29:06.055476",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"mikioh.mikioh@gmail.com",
				"devon.odell@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello mikioh.mikioh@gmail.com, devon.odell@gmail.com, bradfitz@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-06 21:24:05.347655",
			"approval": false
		}
	],
	"owner_email": "franciscossouza@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "fss",
	"subject": "code review 6244051: syscall: regenerate z-files for FreeBSD 9.0-STABLE",
	"created": "2012-05-24 21:50:44.961505",
	"patchsets": [
		1,
		2001,
		5001,
		3005,
		10001,
		13001,
		14001,
		25001,
		19002
	],
	"modified": "2012-06-06 21:24:05.347655",
	"closed": false,
	"issue": 6244051
}