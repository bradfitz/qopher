{
	"description": "net/http: add If-None-Match and If-Range support to ServeContent\n\nAlso, clear Content-Type and Content-Length on Not Modified\nresponses before server.go strips them and spams the logs with\nwarnings.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=Russ, Andrew, ... anybody who likes HTTP?\r\n\r\nOn Fri, Sep 7, 2012 at 2:26 PM, <bradfitz@golang.org> wrote:\r\n\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> http://codereview.appspot.com/**6503090/<http://codereview.appspot.com/6503090/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-09-07 21:52:19.643820",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-07 15:54:31.854660",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-07 21:26:01.237300",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=67b66dd9ea4a ***\n\nnet/http: add If-None-Match and If-Range support to ServeContent\n\nAlso, clear Content-Type and Content-Length on Not Modified\nresponses before server.go strips them and spams the logs with\nwarnings.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6503090",
			"disapproval": false,
			"date": "2012-09-10 17:16:12.682080",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go\nFile src/pkg/net/http/fs.go (right):\n\nhttp://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go#newcode102\nsrc/pkg/net/http/fs.go:102: //\nYou need something more here about ETags.\n\n// If the caller has set w's Etag header, ServeContent uses it to handle requests\n// using If-Range and If-None-Match.\n\nhttp://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go#newcode127\nsrc/pkg/net/http/fs.go:127: if rangeReq, done = checkETag(w, r); done {\nInstead of the declarations just split the if\n\nrangeReq, done := checkETag(w, r)\nif done {\n    return\n}\n\nhttp://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go#newcode267\nsrc/pkg/net/http/fs.go:267: // Invalidate the range request if the entity doesn't match the one\nThis is getting subtle enough that it would help to have a comment explaining what the headers mean, both so that you can follow the code and so that someone else coming in with a different understanding is faced with the difference.\n\n// If-Range: version means \"ignore the Range: header unless version matches the current file.\n// We only support ETag versions.\n// The caller must have set the ETag on the response already.\nif ir := ...\n\nhttp://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go#newcode269\nsrc/pkg/net/http/fs.go:269: if ir := r.Header.get(\"If-Range\"); rangeReq != \"\" && ir != \"\" && ir != etag {\nMight as well drop the rangeReq != \"\" part. No harm, less to understand.\n\nhttp://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go#newcode277\nsrc/pkg/net/http/fs.go:277: // TODO(bradfitz): handle non-GET/HEAD requests, which\nSame thing. Also, if the GET/HEAD thing is part of If-None-Match, move it inside. If not, separate it with a blank line.\n\n// If-None-Match: version-list means \"only do this request if the file version\n// does not match any of the versions in the list.\"\nif inm := r.Header.get(\"If-None-Match\"); inm != \"\" {\n    // Must know ETag.\n    if etag == \"\" {\n        return rangeReq, false\n    }\n\n    // Non-GET/HEAD requests require more work.\n    if r.Method != \"GET\" && r.Method != \"HEAD\" {\n        return rangeReq, false\n    }\n\n    // TODO(bradfitz): Deal with multiple-valued list.\n    if inm == etag { ...\n\nDo you want || inm == \"*\" on that last one?",
			"disapproval": false,
			"date": "2012-09-10 15:55:53.478890",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go\nFile src/pkg/net/http/fs.go (right):\n\nhttps://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go#newcode102\nsrc/pkg/net/http/fs.go:102: //\nOn 2012/09/10 15:55:53, rsc wrote:\n> You need something more here about ETags.\n> \n> // If the caller has set w's Etag header, ServeContent uses it to handle\n> requests\n> // using If-Range and If-None-Match.\n> \n\nDone.\n\nhttps://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go#newcode127\nsrc/pkg/net/http/fs.go:127: if rangeReq, done = checkETag(w, r); done {\nOn 2012/09/10 15:55:53, rsc wrote:\n> Instead of the declarations just split the if\n> \n> rangeReq, done := checkETag(w, r)\n> if done {\n>     return\n> }\n\nDone.\n\nhttps://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go#newcode267\nsrc/pkg/net/http/fs.go:267: // Invalidate the range request if the entity doesn't match the one\nOn 2012/09/10 15:55:53, rsc wrote:\n> This is getting subtle enough that it would help to have a comment explaining\n> what the headers mean, both so that you can follow the code and so that someone\n> else coming in with a different understanding is faced with the difference.\n> \n> // If-Range: version means \"ignore the Range: header unless version matches the\n> current file.\n> // We only support ETag versions.\n> // The caller must have set the ETag on the response already.\n> if ir := ...\n\nDone.\n\nhttps://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go#newcode269\nsrc/pkg/net/http/fs.go:269: if ir := r.Header.get(\"If-Range\"); rangeReq != \"\" && ir != \"\" && ir != etag {\nOn 2012/09/10 15:55:53, rsc wrote:\n> Might as well drop the rangeReq != \"\" part. No harm, less to understand.\n\nDone.\n\nhttps://codereview.appspot.com/6503090/diff/5001/src/pkg/net/http/fs.go#newcode277\nsrc/pkg/net/http/fs.go:277: // TODO(bradfitz): handle non-GET/HEAD requests, which\nOn 2012/09/10 15:55:53, rsc wrote:\n> Same thing. Also, if the GET/HEAD thing is part of If-None-Match, move it\n> inside. If not, separate it with a blank line.\n> \n> // If-None-Match: version-list means \"only do this request if the file version\n> // does not match any of the versions in the list.\"\n> if inm := r.Header.get(\"If-None-Match\"); inm != \"\" {\n>     // Must know ETag.\n>     if etag == \"\" {\n>         return rangeReq, false\n>     }\n> \n>     // Non-GET/HEAD requests require more work.\n>     if r.Method != \"GET\" && r.Method != \"HEAD\" {\n>         return rangeReq, false\n>     }\n> \n>     // TODO(bradfitz): Deal with multiple-valued list.\n>     if inm == etag { ...\n\nDone.\n\n> Do you want || inm == \"*\" on that last one?\n\nRFC 2616 says it's primarily for PUT races, but doesn't hurt.  Done.\n\n\"The meaning of \"If-None-Match: *\" is that the method MUST NOT be performed if the representation selected by the origin server (or by a cache, possibly using the Vary mechanism, see section 14.44) exists, and SHOULD be performed if the representation does not exist. This feature is intended to be useful in preventing races between PUT operations.\"",
			"disapproval": false,
			"date": "2012-09-10 17:09:12.366240",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6503090: net/http: add If-None-Match and If-Range support to Ser...",
	"created": "2012-09-07 15:54:14.886860",
	"patchsets": [
		1,
		2001,
		3003,
		5001,
		7001,
		10001,
		2004
	],
	"modified": "2012-09-10 17:16:13.701730",
	"closed": true,
	"issue": 6503090
}