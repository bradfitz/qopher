{
	"description": "cmd/go: handle env CGO_CFLAGS and CGO_LDFLAGS",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-15 11:26:59.103087",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-15 09:36:01.010400",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This just adds the ability to pass in CGO_CFLAGS and CGO_LDFLAGS from the shell. I wasn't sure if this was a desired feature or not, but it's been very handy when building against  libraries on odd places on my machine.",
			"disapproval": false,
			"date": "2012-01-15 09:43:07.117800",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi,\n\nWhat's the context here?  CGO_CFLAGS and CGO_LDFLAGS\nwere really Makefile parameters.  The way to control those flags\nin a cgo package now is to use #cgo lines in the cgo code itself.\nFor example\n\n/*\n#cgo LDFLAGS: -lfoo\n#include <foo.h>\n*/\nimport \"C\"\n\nIt may be that there are situations that can't be handled with\nthis approach but I would like to understand them better before\nmaking a change like this.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-15 18:12:30.710379",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-15 09:44:52.927663",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-15 09:45:49.792784",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-29 22:29:46.375171",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks like my earlier conversation with just rsc went to reply instead of reply-all.\n\nBasically, I have libraries under development that are using other C libraries that are under development. The C libraries are not and will not be installed in the usual places. I would like to, at build time, specify the library and includes paths they should adhere to.\n\nThis has the added bonus of allowing a user to have multiple versions of a C library installed without having to resort to blacker magic.",
			"disapproval": false,
			"date": "2012-01-29 22:33:29.370215",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'll roll this into my next round of changes to the go tool.\nThere are some tweaks needed, like handling the case where\nno environment variable is set.",
			"disapproval": false,
			"date": "2012-01-31 20:30:17.928463",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks like my diff botched the cgo command. I must have dropped it in my shuffles. cgoCFlags should be passed to the call of cgoExe after the --.\n\nif err := b.run(p.Dir, p.ImportPath, cgoExe, \"-objdir\", obj, cgoflags, \"--\", cgoCFLAGS, p.CgoFiles); err != nil {",
			"disapproval": false,
			"date": "2012-02-01 09:29:59.981241",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-02-06 09:45:32.678259",
			"approval": false
		}
	],
	"owner_email": "jeff@somethingsimilar.com",
	"private": false,
	"base_url": "",
	"owner": "jmhodges",
	"subject": "code review 5545060: cmd/go: handle env CGO_CFLAGS and CGO_LDFLAGS",
	"created": "2012-01-15 09:35:37.144204",
	"patchsets": [
		1,
		3,
		2003,
		4001,
		3003,
		5003,
		8001
	],
	"modified": "2012-02-06 09:45:34.380069",
	"closed": true,
	"issue": 5545060
}