{
	"description": "runtime: fix creation of unbounded number of threads\nCurrently if GOMAXPROCS>1 each GC creates an additional OS thread\nby calling runtime\u00b7starttheworld(extar=true).\nEventually it ends up with:\nruntime$ gotest -run=Deadlock -cpu=2,2,2,2\nruntime: failed to create new OS thread (have 2561 already; errno=12)",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"hectorchu@gmail.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-01 12:13:10.440082",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Wouldn't it be better to fix the problem?\nTitle of changelist is also misleading.",
			"disapproval": false,
			"date": "2011-10-01 13:25:16.853612",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Actually, does http://codereview.appspot.com/5166047 fix the problem?\n\nOn 1 October 2011 14:25,  <hectorchu@gmail.com> wrote:\n> Wouldn't it be better to fix the problem?\n> Title of changelist is also misleading.\n>\n> http://codereview.appspot.com/5164046/\n>\n",
			"disapproval": false,
			"date": "2011-10-01 13:31:59.092963",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/01 13:25:16, hector wrote:\n> Wouldn't it be better to fix the problem?\n> Title of changelist is also misleading.\n\nIf you land your change first, I will abandon mine. It's just not very cool if current state of things makes it into a weekly release.",
			"disapproval": false,
			"date": "2011-10-01 13:36:10.031374",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Hector's CL (submitted) fixes a bug in the Linux/386 usleep\nimplementation.  It seems unrelated to the problem\nyou describe in your CL description.\n\nIs there still a new goroutine problem?\n\nRuss\n",
			"disapproval": false,
			"date": "2011-10-05 15:43:30.192857",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "There was a patch from Joel yesterday on codereview that appears to fix the\nproblem.  Please have a look at 5176044.\nOn Oct 5, 2011 4:43 PM, \"Russ Cox\" <rsc@golang.org> wrote:\n> Hector's CL (submitted) fixes a bug in the Linux/386 usleep\n> implementation. It seems unrelated to the problem\n> you describe in your CL description.\n>\n> Is there still a new goroutine problem?\n>\n> Russ\n",
			"disapproval": false,
			"date": "2011-10-05 15:47:41.780702",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Cool.  Does 5176044 fix what you were observing, Dmitriy?\n",
			"disapproval": false,
			"date": "2011-10-05 15:52:56.470071",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"hectorchu@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/05 15:52:56, rsc wrote:\n> Cool.  Does 5176044 fix what you were observing, Dmitriy?\n\nYes, it must be fixed. I am closing this issue.\nI am a bit concerned that it's second problem caused by gc thread count determination logic spread over proc.c and mgc0.c. I would move it into single function: int runtime.gchelp(bool *extra).",
			"disapproval": false,
			"date": "2011-10-05 16:00:38.866837",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"hectorchu@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2011-10-05 16:01:03.124455",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 5164046: runtime: fix creation of unbounded number of threads",
	"created": "2011-10-01 12:12:51.842211",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2011-10-05 16:01:08.646612",
	"closed": true,
	"issue": 5164046
}