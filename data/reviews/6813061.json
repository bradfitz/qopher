{
	"description": "go/doc: fix identifier blank import handling for examples\nAlso fixed one docs typo.\n\nFixes issue 4300.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"gri@golang.org",
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "yes, my apologies. it's not the highest priority at the moment but\r\nI'll get to it.\r\n- gri\r\n\r\nOn Fri, Nov 9, 2012 at 2:54 AM,  <minux.ma@gmail.com> wrote:\r\n> gentle ping.\r\n>\r\n> https://codereview.appspot.com/6813061/\r\n",
			"disapproval": false,
			"date": "2012-11-10 00:21:09.864380",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-10-31 17:55:07.464210",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM\n\nThere are more issues with this. Will have to look at this next week. See also update on issue 4300.\n\nhttps://codereview.appspot.com/6813061/diff/2002/src/pkg/go/doc/example.go\nFile src/pkg/go/doc/example.go (right):\n\nhttps://codereview.appspot.com/6813061/diff/2002/src/pkg/go/doc/example.go#newcode184\nsrc/pkg/go/doc/example.go:184: if c.Pos() >= p.Doc.Pos() && c.Pos() < p.Doc.End() {\nI am getting a crash here; possibly because p.Doc is nil? See also update on issue 4300.",
			"disapproval": true,
			"date": "2012-11-02 23:48:23.339770",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It would be nice. Let's see if gri can help.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-10-31 20:05:58.660080",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi rob,\r\n    Do you think we need to restore comment group associated with the blank\r\nidentifier\r\nimport? For example, that image test has this comment before the import,\r\nwhich i think\r\nis very important.\r\n\r\n// Package image/jpeg is not used explicitly in the code below,\r\n// but is imported for its initialization side-effect, which allows\r\n // image.Decode to understand JPEG formatted images. Uncomment these\r\n// two lines to also understand GIF and PNG images:\r\n // _ \"image/gif\"\r\n// _ \"image/png\"\r\n\r\nI have a partially working patch set (4), however I don't know why the\r\ncomment is\r\nformatted wrong, like this:\r\n// Package image/jpeg is not used explicitly in the code below,\r\n// but is imported for its initialization side-effect, which allows\r\n// image.Decode to understand JPEG formatted images. Uncomment these\r\n// two lines to also understand GIF and PNG images:\r\n// _ \"image/gif\"\r\n// _ \"image/png\"\r\n_ \"image/jpeg\"\r\n",
			"disapproval": false,
			"date": "2012-10-31 19:52:44.272860",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/02 23:48:23, gri wrote:\nhttps://codereview.appspot.com/6813061/diff/2002/src/pkg/go/doc/example.go#newcode184\n> src/pkg/go/doc/example.go:184: if c.Pos() >= p.Doc.Pos() && c.Pos() <\n> p.Doc.End() {\n> I am getting a crash here; possibly because p.Doc is nil? See also update on\n> issue 4300.\nThank you for pointing that out, fixed.\n\nStill didn't know why the formatting is wrong.",
			"disapproval": false,
			"date": "2012-11-03 06:22:31.452650",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "gentle ping.",
			"disapproval": false,
			"date": "2012-11-09 10:54:09.197790",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The general approach looks OK to me, but:\n\nhttps://codereview.appspot.com/6813061/diff/9002/src/pkg/go/doc/example.go\nFile src/pkg/go/doc/example.go (right):\n\nhttps://codereview.appspot.com/6813061/diff/9002/src/pkg/go/doc/example.go#newcode183\nsrc/pkg/go/doc/example.go:183: for _, p := range blankImports {\nI think this code is getting complex enough that we should add some tests.\n\nDo you think you could add some in this CL? If not, I can take a crack at it later.",
			"disapproval": false,
			"date": "2012-11-13 11:50:47.984700",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6813061/diff/9002/src/pkg/go/doc/example.go\nFile src/pkg/go/doc/example.go (right):\n\nhttps://codereview.appspot.com/6813061/diff/9002/src/pkg/go/doc/example.go#newcode183\nsrc/pkg/go/doc/example.go:183: for _, p := range blankImports {\nOn 2012/11/13 11:50:48, adg wrote:\n> Do you think you could add some in this CL? If not, I can take a crack at it\n> later.\nWill do that after I figure out why the formatting\nis wrong. do you have any hints about that?",
			"disapproval": false,
			"date": "2012-11-15 11:04:09.492540",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Apologies for the delay, I've been busy with other stuff.\n\nSome more comments on this CL. These suggestions don't change the alignment issue we have - I am not sure yet why they exits (possibly a go/printer bug - will investigate as next step).\n\nThe suggestions below apply to the existing code and should be made nevertheless.\n\nThat said, the existing code could be much simpler and work better if it would be using ast.CommentMaps. CommentMaps are here to make comment tracking and filtering easy, and much of the code below dealing with comments could go away. It would also work better: For instance, as is, comments associated with non-blank imports are dropped. With comment maps, they wouldn't.\n\nHowever, CommentMaps need the corresponding ast.FileSet. This means that the doc.Examples function would need an additional *token.FileSet parameter. Since this is an exported function this would be a non-backward compatible API change.\n\nI think we should perhaps consider this (I think this function is only used by godoc), but first we should get the existing code right. I will now look into the alignment issue.\n\n- gri\n\nhttps://codereview.appspot.com/6813061/diff/9002/src/pkg/go/doc/example.go\nFile src/pkg/go/doc/example.go (right):\n\nhttps://codereview.appspot.com/6813061/diff/9002/src/pkg/go/doc/example.go#newcode149\nsrc/pkg/go/doc/example.go:149: imports := make(map[string]string)  // [name]path\nPlease call the first map say \"namedImports\" so it's clear that it does not include the blankImports. Also, if they are ast.Specs, then we don't need a loop later to append them.\n\nnamedImports := make(map[string]string) // [name]path\nvar blankImports []ast.Spec // _ imports\n\nhttps://codereview.appspot.com/6813061/diff/9002/src/pkg/go/doc/example.go#newcode168\nsrc/pkg/go/doc/example.go:168: if n == \"_\" {\nThis should be \"else if\", but better:\n\nswitch {\ncase unresolved[n]:\n    namedImports[n] = p\n    delete(unresolved, n)\ncase n == \"_\":\n    blankImports = append(blankImports, s)\n}\n\nhttps://codereview.appspot.com/6813061/diff/9002/src/pkg/go/doc/example.go#newcode179\nsrc/pkg/go/doc/example.go:179: // Filter out comments that are outside the function body.\nThis is too complicated. The comments associated with blank imports are known, they are the corresponding .Doc. This can be much simplified to:\n\n        // Include documentation belonging to blank imports.\n\tvar comments []*ast.CommentGroup\n\tfor _, s := range blankImports {\n\t\tif c := s.(*ast.ImportSpec).Doc; c != nil {\n\t\t\tcomments = append(comments, c)\n\t\t}\n\t}\n\n\t// Include comments that are inside the function body.\n\tfor _, c := range file.Comments {\n\t\tif body.Pos() <= c.Pos() && c.End() <= body.End() {\n\t\t\tcomments = append(comments, c)\n\t\t}\n\t}\n\n(Also, no need for 'continue' in the 2nd loop.)\n\nhttps://codereview.appspot.com/6813061/diff/9002/src/pkg/go/doc/example.go#newcode206\nsrc/pkg/go/doc/example.go:206: for n, p := range imports {\ns/imports/namedImports/\n\nhttps://codereview.appspot.com/6813061/diff/9002/src/pkg/go/doc/example.go#newcode213\nsrc/pkg/go/doc/example.go:213: for _, p := range blankImports {\nthis becomes:\n\nimportDecl.Specs = append(importDecl.Specs, blankImports...)",
			"disapproval": false,
			"date": "2012-11-16 19:52:23.066880",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/16 19:52:23, gri wrote:\n> Some more comments on this CL. These suggestions don't change the alignment\n> issue we have - I am not sure yet why they exits (possibly a go/printer bug -\n> will investigate as next step).\nThank you for the comprehensive review.\nI think CL 6782082 is better than this CL, so I will abandon this CL.",
			"disapproval": false,
			"date": "2012-11-17 17:54:27.554070",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-11-17 17:55:07.294170",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "go/doc: fix identifier blank import handling for examples",
	"created": "2012-10-31 12:03:42.111400",
	"patchsets": [
		1,
		2001,
		5001,
		2002,
		9002
	],
	"modified": "2012-11-17 17:55:10.590650",
	"closed": true,
	"issue": 6813061
}