{
	"description": "misc/dashboard: don't email about netbsd failures\n\nToo flaky.",
	"cc": [
		"iant@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-12-12 19:02:43.414210",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-12-12 19:21:26.601270",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-12-12 18:59:38.909830",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "s/that/which/ probably (preemptive defensive response)\r\n\r\nOn Wed, Dec 12, 2012 at 10:59 AM, <bradfitz@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> misc/dashboard: don't email about netbsd failures\r\n>\r\n> Too flaky.\r\n>\r\n> Please review this at https://codereview.appspot.**com/6925056/<https://codereview.appspot.com/6925056/>\r\n>\r\n> Affected files:\r\n>   M misc/dashboard/app/build/**notify.go\r\n>\r\n>\r\n> Index: misc/dashboard/app/build/**notify.go\r\n> ==============================**==============================**=======\r\n> --- a/misc/dashboard/app/build/**notify.go\r\n> +++ b/misc/dashboard/app/build/**notify.go\r\n> @@ -21,6 +21,13 @@\r\n>         domain     = \"build.golang.org\"\r\n>  )\r\n>\r\n> +// failIgnore is a set of builders that we don't email about because\r\n> +// they're too flaky.\r\n> +var failIgnore = map[string]bool{\r\n> +       \"netbsd-386-bsiegert\":   true,\r\n> +       \"netbsd-amd64-bsiegert\": true,\r\n> +}\r\n> +\r\n>  // notifyOnFailure checks whether the supplied Commit or the subsequent\r\n>  // Commit (if present) breaks the build for this builder.\r\n>  // If either of those commits break the build an email notification is\r\n> sent\r\n> @@ -112,6 +119,10 @@\r\n>  // sendFailMail sends a mail notification that the build failed on the\r\n>  // provided commit and builder.\r\n>  func sendFailMail(c appengine.Context, com *Commit, builder string) {\r\n> +       if failIgnore[builder] {\r\n> +               return\r\n> +       }\r\n> +\r\n>         // TODO(adg): handle packages\r\n>\r\n>         // get Result\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-12-12 19:02:06.128760",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM\r\n",
			"disapproval": true,
			"date": "2012-12-12 19:08:03.284230",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6925056/diff/5001/misc/dashboard/app/build/notify.go\nFile misc/dashboard/app/build/notify.go (right):\n\nhttps://codereview.appspot.com/6925056/diff/5001/misc/dashboard/app/build/notify.go#newcode40\nmisc/dashboard/app/build/notify.go:40: // TODO(adg): implement notifications for packages\nThe if statement and return need to be here.\nsendFailMail is only called (by this function) for the first broken builder in a grid row. With the if in sendFailMail, if the first broken builder is an ignored one, we will not get mail from actually broken builders that detect the failure later.",
			"disapproval": false,
			"date": "2012-12-12 19:10:04.453420",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Dec 12, 2012 at 11:08 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> NOT LGTM\r\n>\r\n\r\nso it _is_ \"that\"?\r\n",
			"disapproval": false,
			"date": "2012-12-12 19:09:28.201430",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=8f2748bfb556 ***\n\nmisc/dashboard: don't email about netbsd failures\n\nToo flaky.\n\nR=iant, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/6925056",
			"disapproval": false,
			"date": "2012-12-12 19:33:06.687340",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello iant@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-12 19:14:49.586240",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6925056: misc/dashboard: don't email about netbsd failures",
	"created": "2012-12-12 18:59:28.052000",
	"patchsets": [
		1,
		2001,
		5001,
		10001,
		11001
	],
	"modified": "2012-12-12 19:33:08.284090",
	"closed": true,
	"issue": 6925056
}