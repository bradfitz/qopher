{
	"description": "image/tiff: Allow the use of custom Decompressor functions.\n\nSimilar to format registration in package image, this allows\nthe tiff decoder to be extended with decompression functions for\nother compression types.\n\nThe API is open for discussions.\n\nA separate CL to export the needed constants will follow.",
	"cc": [
		"nigeltao@golang.org",
		"pascal@quies.net"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"r@google.com"
	],
	"messages": [
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"pascal@quies.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: nigeltao@golang.org, pascal@quies.net),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-02 13:08:22.727338",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 3 January 2012 00:09, Benny Siegert <bsiegert@gmail.com> wrote:\n> There has been discussion about moving image/tiff to a separate repository\n> to allow it to integrate support for compression formats (such as G4, as\n> presented recently by Pascal S. de Kloe) not available in the standard\n> library. I consider tiff to be important enough (especially on Mac OS X\n> nowadays) to have in the standard library. So I am trying to make the\n> package extensible as an alternative to removing it from the standard lib.\n\nI am not a Mac OS X native, so please elaborate on why TIFF is so\nimportant there.\n\nStill, my first preference is that the tiff package reads any TIFF\nfile out of the box, without needing plug-in registration. Given the\ncomplexity of the TIFF format, I would then prefer it to live outside\nof the standard package library, similarly to the webp package.\n\nI understand that there are Go programmers that use TIFF. I'm still\nnot convinced that they're so common to require tiff being in std. I\ndon't see running goinstall once as a prohibitive cost.\n",
			"disapproval": false,
			"date": "2012-01-03 22:44:20.160956",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, 2 Jan 2012, bsiegert@gmail.com wrote:\n\n> image/tiff: Allow the use of custom Decompressor functions.\n>\n> Similar to format registration in package image, this allows\n> the tiff decoder to be extended with decompression functions for\n> other compression types.\n>\n> The API is open for discussions.\n>\n> A separate CL to export the needed constants will follow.\n>\n> Please review this at http://codereview.appspot.com/5505094/\n\nThere has been discussion about moving image/tiff to a separate repository \nto allow it to integrate support for compression formats (such as G4, as \npresented recently by Pascal S. de Kloe) not available in the standard \nlibrary. I consider tiff to be important enough (especially on Mac OS X \nnowadays) to have in the standard library. So I am trying to make the \npackage extensible as an alternative to removing it from the standard lib.\n\nThe current prototype of the Decompressor function is unwieldy but should \nallow the implementation of various compression types. Looking for example \nat JPEG compression, it needs to read additional fields from the IFD \n(hence the access to the IFD) and read data at offsets other than the one \nof the current image strips (hence the io.ReaderAt).\n\nSee the attached file for a patch to gofax that registers a decompressor \nfor G4-compressed TIFF images. As fax.DecodeG4 returns an Image, I am \nusing draw.Draw to blit it into the target. This seems elegant to me, as \nit would also be possible to do on-the-fly color conversion with this \napproach -- for example from CIE L*a*b* to RGB.\n\nOpinions?\n\n--Benny.\n",
			"disapproval": false,
			"date": "2012-01-02 13:09:21.665512",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I have been a \"Mac OS X\" native for years, and have developed native apps\non that platform. I don't think I've *ever* used TIFF.\n\nDave.\n",
			"disapproval": false,
			"date": "2012-01-03 23:09:42.065139",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Jan 3, 2012, at 3:09 PM, David Symonds wrote:\n\n> I have been a \"Mac OS X\" native for years, and have developed native apps on that platform. I don't think I've *ever* used TIFF.\n> \n> Dave.\n> \n\nTIFF is more Adobe than Apple. It's also a unpleasant multistate format with few good properties and is often used abusively (no one turns on lossless compression, for instance). I'm not eager to see it promoted here.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-01-04 01:20:03.560254",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, 4 Jan 2012, Nigel Tao wrote:\n\n> I am not a Mac OS X native, so please elaborate on why TIFF is so\n> important there.\n\nIt is the default image format on Mac OS. For example, the screenshot \napplication exclusively writes TIFF images, and the iWork applications \nsave images inserted by drag-and-drop as TIFF.\n\n> Still, my first preference is that the tiff package reads any TIFF\n> file out of the box, without needing plug-in registration. Given the\n> complexity of the TIFF format, I would then prefer it to live outside\n> of the standard package library, similarly to the webp package.\n\nOkay then. I see.\n\n--Benny.\n",
			"disapproval": false,
			"date": "2012-01-04 11:57:08.999971",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Jan 4, 2012 10:57 PM, \"Benny Siegert\" <bsiegert@gmail.com> wrote:\n\n> It is the default image format on Mac OS. For example, the screenshot\napplication exclusively writes TIFF images, ...\n\nMy Mac produces PNG screenshots. I believe that's been the default for the\nlast few OS X versions.\n\nDave.\n",
			"disapproval": false,
			"date": "2012-01-04 13:32:24.633423",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@google.com",
				"nigeltao@golang.org",
				"pascal@quies.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-01-28 11:20:02.812223",
			"approval": false
		}
	],
	"owner_email": "bsiegert@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "bsiegert",
	"subject": "code review 5505094: image/tiff: Allow the use of custom Decompressor functions.",
	"created": "2012-01-02 12:57:18.191778",
	"patchsets": [
		1,
		2001,
		1003
	],
	"modified": "2012-01-28 11:20:04.355750",
	"closed": true,
	"issue": 5505094
}