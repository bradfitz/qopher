{
	"description": "go.crypto/ssh: assorted close related fixes\n\nFixes issue 3810.\n\nFixes chanWriter Write after close behaviour bug.\n\nFixes serverChan writePacket after close bug.\n\nAddresses final comments by agl on 6405064, plus various cleanups.",
	"cc": [
		"agl@golang.org",
		"kardianos@gmail.com",
		"gustav.paul@gmail.com",
		"fullung@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, kardianos@gmail.com, gustav.paul@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-09-01 01:14:19.565640",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "+fullung",
			"disapproval": false,
			"date": "2012-09-01 03:45:23.265370",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, kardianos@gmail.com, gustav.paul@gmail.com, fullung@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-01 09:42:01.088290",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nI lightly tested the server code and it gave me no error.\n\nhttp://codereview.appspot.com/6479056/diff/7006/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/6479056/diff/7006/ssh/channel.go#newcode360\nssh/channel.go:360: func (c *serverChan) dead() bool {\nCan we re-name this to isDead()? Normally think it would be fine but we also have setDead and sendDead, and I get confused :)\n\nhttp://codereview.appspot.com/6479056/diff/7006/ssh/session_test.go\nFile ssh/session_test.go (right):\n\nhttp://codereview.appspot.com/6479056/diff/7006/ssh/session_test.go#newcode627\nssh/session_test.go:627: // TODO(dfc) io.Copy can return a non EOF error here\nIs this still a TODO?",
			"disapproval": false,
			"date": "2012-09-01 03:20:41.510010",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping. I'd be grateful if gpaul or agl could give this a once over.",
			"disapproval": false,
			"date": "2012-09-03 23:42:50.882210",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks you for your comments.\n\nhttp://codereview.appspot.com/6479056/diff/7006/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/6479056/diff/7006/ssh/channel.go#newcode360\nssh/channel.go:360: func (c *serverChan) dead() bool {\nOn 2012/09/01 03:20:41, kardia wrote:\n> Can we re-name this to isDead()? Normally think it would be fine but we also\n> have setDead and sendDead, and I get confused :)\n\nFrom previous CLs I believe it is more idiomatic to use dead(), rather than isDead(). I'm fine with either way as long as there is a consensus.\n\nhttp://codereview.appspot.com/6479056/diff/7006/ssh/session_test.go\nFile ssh/session_test.go (right):\n\nhttp://codereview.appspot.com/6479056/diff/7006/ssh/session_test.go#newcode627\nssh/session_test.go:627: // TODO(dfc) io.Copy can return a non EOF error here\nOn 2012/09/01 03:20:41, kardia wrote:\n> Is this still a TODO?\n\nI need to do more stress testing to confirm. This is the last place where an error can leak out of close.",
			"disapproval": false,
			"date": "2012-09-01 03:45:02.424200",
			"approval": false
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Just some questions inline.\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/channel.go#newcode135\nssh/channel.go:135: return atomic.CompareAndSwapUint32(&c.isClosed, 0, 1)\nWhy not StoreUint32 like in setDead()?\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/channel.go#newcode352\nssh/channel.go:352: err = io.EOF\nconsider returning 0, io.EOF here, instead of assigning to err, then returning it if not nil on the next line\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/channel.go#newcode550\nssh/channel.go:550: w.eof = true\nisn't w.eof accessed from different goroutines? Perhaps eof needs to become eof() and wrapped by sync/atomic as is done for dead->isDead()?\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/client.go\nFile ssh/client.go (right):\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/client.go#newcode252\nssh/client.go:252: msg := decode(packet)\nnice",
			"disapproval": false,
			"date": "2012-09-04 08:13:30.572410",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for your comments, PTAL.\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/channel.go#newcode135\nssh/channel.go:135: return atomic.CompareAndSwapUint32(&c.isClosed, 0, 1)\nOn 2012/09/04 08:13:30, gpaul wrote:\n> Why not StoreUint32 like in setDead()?\n\nDone. I don't use the return value\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/channel.go#newcode352\nssh/channel.go:352: err = io.EOF\nOn 2012/09/04 08:13:30, gpaul wrote:\n> consider returning 0, io.EOF here, instead of assigning to err, then returning\n> it if not nil on the next line\n\nGood point, now there is no lock, I don't need these gymnastics.\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/channel.go#newcode550\nssh/channel.go:550: w.eof = true\nOn 2012/09/04 08:13:30, gpaul wrote:\n> isn't w.eof accessed from different goroutines? Perhaps eof needs to become\n> eof() and wrapped by sync/atomic as is done for dead->isDead()?\n\nsee the comment in the chanWriter struct. eof is owned by the caller to Write/Close.\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/client.go\nFile ssh/client.go (right):\n\nhttp://codereview.appspot.com/6479056/diff/10006/ssh/client.go#newcode252\nssh/client.go:252: msg := decode(packet)\nOn 2012/09/04 08:13:30, gpaul wrote:\n> nice\n\nThis is my debugging point.",
			"disapproval": false,
			"date": "2012-09-04 08:25:33.020560",
			"approval": false
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/04 08:25:53, dfc wrote:\n> Hello mailto:agl@golang.org, mailto:kardianos@gmail.com, mailto:gustav.paul@gmail.com,\n> mailto:fullung@gmail.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nLGTM",
			"disapproval": false,
			"date": "2012-09-04 12:01:54.311200",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, kardianos@gmail.com, gustav.paul@gmail.com, fullung@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-04 08:25:53.367360",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, kardianos@gmail.com, gustav.paul@gmail.com, fullung@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-02 01:13:23.730590",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-04 13:31:34.561360",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d7d342670efa&repo=crypto ***\n\ngo.crypto/ssh: assorted close related fixes\n\nFixes issue 3810.\n\nFixes chanWriter Write after close behaviour bug.\n\nFixes serverChan writePacket after close bug.\n\nAddresses final comments by agl on 6405064, plus various cleanups.\n\nR=agl, kardianos, gustav.paul, fullung\nCC=golang-dev\nhttp://codereview.appspot.com/6479056",
			"disapproval": false,
			"date": "2012-09-04 23:47:08.597680",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6479056: go.crypto/ssh: assorted close related fixes",
	"created": "2012-08-26 23:41:06.817230",
	"patchsets": [
		1,
		2001,
		4001,
		5005,
		6001,
		7006,
		9006,
		9007,
		10006,
		17002,
		18002
	],
	"modified": "2012-09-04 23:47:10.910790",
	"closed": true,
	"issue": 6479056
}