{
	"description": "cc: fix an out of bounds array access\n\nAlternatively, we could expand the ewidth array\nin [568]c/txt.c to have NALLTYPES elements and\ngive all types above NTYPE a width of -1.\n\nI don't think it's worth it since TDOT and TOLD\nare the only two type values above NTYPE that\nare passed to typ:\n\n$ /tmp/cctypes\ncc/dcl.c:683: \t\t\tt->down = typ(TOLD, T);\ncc/dcl.c:919: \t\treturn typ(TDOT, T);\n$\n\nFixes issue 3063.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [
		"lucio.dere@gmail.com"
	],
	"messages": [
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-02-23 12:22:14.881349",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2/23/12, rsc@golang.org <rsc@golang.org> wrote:\n> *** Submitted as\n> http://code.google.com/p/go/source/detail?r=ba6e737d68be ***\n>\n> cc: fix an out of bounds array access\n>\n> Alternatively, we could expand the ewidth array\n> in [568]c/txt.c to have NALLTYPES elements and\n> give all types above NTYPE a width of -1.\n>\n> I don't think it's worth it since TDOT and TOLD\n> are the only two type values above NTYPE that\n> are passed to typ:\n>\n> $ /tmp/cctypes\n> cc/dcl.c:683: \t\t\tt->down = typ(TOLD, T);\n> cc/dcl.c:919: \t\treturn typ(TDOT, T);\n> $\n>\n> Fixes issue 3063.\n>\n> R=golang-dev, rsc\n> CC=golang-dev\n> http://codereview.appspot.com/5694047\n>\n> Committer: Russ Cox <rsc@golang.org>\n>\n>\n> http://codereview.appspot.com/5694047/\n>\n",
			"disapproval": false,
			"date": "2012-02-24 04:14:47.789455",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-02-23 19:28:14.367340",
			"approval": true
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-23 12:25:15.095570",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ba6e737d68be ***\n\ncc: fix an out of bounds array access\n\nAlternatively, we could expand the ewidth array\nin [568]c/txt.c to have NALLTYPES elements and\ngive all types above NTYPE a width of -1.\n\nI don't think it's worth it since TDOT and TOLD\nare the only two type values above NTYPE that\nare passed to typ:\n\n$ /tmp/cctypes\ncc/dcl.c:683: \t\t\tt->down = typ(TOLD, T);\ncc/dcl.c:919: \t\treturn typ(TDOT, T);\n$\n\nFixes issue 3063.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5694047\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-02-23 19:28:20.632975",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Oops, wrong button, just ahead of my morning coffee having an effect.\n\nHumble apologies.\n\nLucio.\n\n\nOn 2/24/12, Lucio De Re <lucio.dere@gmail.com> wrote:\n> On 2/23/12, rsc@golang.org <rsc@golang.org> wrote:\n>> *** Submitted as\n>> http://code.google.com/p/go/source/detail?r=ba6e737d68be ***\n>>\n>> cc: fix an out of bounds array access\n>>\n>> Alternatively, we could expand the ewidth array\n>> in [568]c/txt.c to have NALLTYPES elements and\n>> give all types above NTYPE a width of -1.\n>>\n>> I don't think it's worth it since TDOT and TOLD\n>> are the only two type values above NTYPE that\n>> are passed to typ:\n>>\n>> $ /tmp/cctypes\n>> cc/dcl.c:683: \t\t\tt->down = typ(TOLD, T);\n>> cc/dcl.c:919: \t\treturn typ(TDOT, T);\n>> $\n>>\n>> Fixes issue 3063.\n>>\n>> R=golang-dev, rsc\n>> CC=golang-dev\n>> http://codereview.appspot.com/5694047\n>>\n>> Committer: Russ Cox <rsc@golang.org>\n>>\n>>\n>> http://codereview.appspot.com/5694047/\n>>\n>\n",
			"disapproval": false,
			"date": "2012-02-24 04:15:59.274582",
			"approval": false
		}
	],
	"owner_email": "ality@pbrane.org",
	"private": false,
	"base_url": "",
	"owner": "ality",
	"subject": "code review 5694047: cc: fix an out of bounds array access",
	"created": "2012-02-23 12:21:35.173666",
	"patchsets": [
		1,
		6001
	],
	"modified": "2012-02-24 04:14:47.872697",
	"closed": true,
	"issue": 5694047
}