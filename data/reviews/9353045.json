{
	"description": "go.net/ipv4: drop DIffServ and ECN constants, add ICMPType\n\nThis CL removes DiffServ and ECN constants assigned by IANA because\nfor now we don't have an appropriate package to put those constants\nas part of API. There were used for the type-of-service field of IPv4\nheader and the traffic class field of IPv6 header.\n\nAlso adds ICMPType for convenience, makes use of internal IANA\nprotocol number constants instead of syscall's to prevent churning of\npackage syscall in the near future.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.net",
			"disapproval": false,
			"date": "2013-05-12 09:19:08.753830",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-04 09:58:02.193010",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2013-06-05 11:09:08.760940",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/05 11:09:08, mikio wrote:\n> ping\n\nI'm sorry this got dropped. I will make some time to review it tomorrow. The rational in the description looks sound, I just need to read all the changes.",
			"disapproval": false,
			"date": "2013-06-05 11:22:26.647610",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please consider this wording for the description\n\nThis CL removes DiffServ and ENC constants assigned by IANA because \nfor now we don't have an appropriate package to put those constants as part of API.\nThese were used for the type-of-service field of IPv4 header and the traffic class\nfield of IPv6 header.\n\nAlso adds ICMPType for convenience, makes use of internal IANA\nprotocol number constants instead of syscall's to prevent churning of\npackage syscall in the near future.\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/example_test.go\nFile ipv4/example_test.go (right):\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/example_test.go#newcode153\nipv4/example_test.go:153: c, err := net.ListenPacket(\"ip4:89\", \"0.0.0.0\") // OSFP for IPv4\nmaybe net.IPv4Zero ?\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/example_test.go#newcode238\nipv4/example_test.go:238: c, err := net.ListenPacket(\"ip4:89\", \"0.0.0.0\") // OSPF for IPv4\nsame\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/icmp.go\nFile ipv4/icmp.go (right):\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/icmp.go#newcode7\nipv4/icmp.go:7: // An ICMPType represents a type of ICMP message.\ns/An//\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/mockicmp_test.go\nFile ipv4/mockicmp_test.go (right):\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/mockicmp_test.go#newcode8\nipv4/mockicmp_test.go:8: \"code.google.com/p/go.net/ipv4\"\nplease move this below the stdlib packages and add a \\n before it.\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/sockopt_windows.go\nFile ipv4/sockopt_windows.go (right):\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/sockopt_windows.go#newcode20\nipv4/sockopt_windows.go:20: err := syscall.Getsockopt(fd, int32(ianaProtocolIP), int32(syscall.IP_TOS), (*byte)(unsafe.Pointer(&v)), &l)\nianaProtocolIP is a const, is the conversion needed ?\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/sockopt_windows.go#newcode29\nipv4/sockopt_windows.go:29: err := syscall.Setsockopt(fd, int32(ianaProtocolIP), int32(syscall.IP_TOS), (*byte)(unsafe.Pointer(&vv)), 4)\nsame, all the way down",
			"disapproval": false,
			"date": "2013-06-06 11:32:22.509460",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. I'd like to see one final pass before you submit.",
			"disapproval": false,
			"date": "2013-06-06 11:32:37.616370",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for your review.\r\n\r\nOn Thu, Jun 6, 2013 at 8:32 PM,  <dave@cheney.net> wrote:\r\n\r\n> Please consider this wording for the description\r\n\r\nyup, thanks.\r\n\r\n> ipv4/example_test.go:153: c, err := net.ListenPacket(\"ip4:89\",\r\n> \"0.0.0.0\") // OSFP for IPv4\r\n> maybe net.IPv4Zero ?\r\n\r\nnope, it's ListenPacket.\r\n\r\n> ipv4/example_test.go:238: c, err := net.ListenPacket(\"ip4:89\",\r\n> \"0.0.0.0\") // OSPF for IPv4\r\n> same\r\n\r\nditto.\r\n\r\n> ipv4/icmp.go:7: // An ICMPType represents a type of ICMP message.\r\n> s/An//\r\n\r\nwhy? it looks consistent to me.\r\n\r\n> ipv4/mockicmp_test.go:8: \"code.google.com/p/go.net/ipv4\"\r\n> please move this below the stdlib packages and add a \\n before it.\r\n\r\ni really don't care but will do in another CL If you want.\r\nfor future reference, is it go idiomatic way?\r\n",
			"disapproval": false,
			"date": "2013-06-06 12:39:18.574930",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": ">> ipv4/example_test.go:153: c, err := net.ListenPacket(\"ip4:89\",\r\n>> \"0.0.0.0\") // OSFP for IPv4\r\n>> maybe net.IPv4Zero ?\r\n>\r\n> nope, it's ListenPacket.\r\n\r\nok, cool.\r\n\r\n>> ipv4/icmp.go:7: // An ICMPType represents a type of ICMP message.\r\n>> s/An//\r\n>\r\n> why? it looks consistent to me.\r\n\r\nIf you're happy with the wording, SGTM.\r\n\r\n\r\n>> ipv4/mockicmp_test.go:8: \"code.google.com/p/go.net/ipv4\"\r\n>> please move this below the stdlib packages and add a \\n before it.\r\n>\r\n> i really don't care but will do in another CL If you want.\r\n> for future reference, is it go idiomatic way?\r\n\r\ngofmt doesn't enforce it (for some reason I thought it did), this is just a nit.\r\n",
			"disapproval": false,
			"date": "2013-06-06 12:42:27.438650",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jun 6, 2013 at 9:42 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n>>> ipv4/mockicmp_test.go:8: \"code.google.com/p/go.net/ipv4\"\r\n>>> please move this below the stdlib packages and add a \\n before it.\r\n>>\r\n>> i really don't care but will do in another CL If you want.\r\n>> for future reference, is it go idiomatic way?\r\n>\r\n> gofmt doesn't enforce it (for some reason I thought it did), this is just a nit.\r\n\r\nthanks for explaining it. i'll leave it as is for now.\r\n",
			"disapproval": false,
			"date": "2013-06-06 12:56:28.587810",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/sockopt_windows.go\nFile ipv4/sockopt_windows.go (right):\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/sockopt_windows.go#newcode20\nipv4/sockopt_windows.go:20: err := syscall.Getsockopt(fd, int32(ianaProtocolIP), int32(syscall.IP_TOS), (*byte)(unsafe.Pointer(&v)), &l)\nOn 2013/06/06 11:32:22, dfc wrote:\n> ianaProtocolIP is a const, is the conversion needed ?\n\nDone.\n\nhttps://codereview.appspot.com/9353045/diff/32001/ipv4/sockopt_windows.go#newcode29\nipv4/sockopt_windows.go:29: err := syscall.Setsockopt(fd, int32(ianaProtocolIP), int32(syscall.IP_TOS), (*byte)(unsafe.Pointer(&vv)), 4)\nOn 2013/06/06 11:32:22, dfc wrote:\n> same, all the way down\n\nDone.",
			"disapproval": false,
			"date": "2013-06-06 13:19:11.605910",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thank you.",
			"disapproval": false,
			"date": "2013-06-07 04:20:01.519180",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jun 7, 2013 at 3:02 PM,  <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> *** Abandoned ***\r\n>\r\n> https://codereview.appspot.com/9353045/\r\n\r\nNope, I just submitted.\r\nIn that process, not sure the reason, but I surely typed hg changed -d.\r\nSorry for the noise, TGIF.\r\n",
			"disapproval": false,
			"date": "2013-06-07 06:06:25.343710",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-06-07 06:02:30.749460",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 9353045: go.net/ipv4: drop DIffServ and ECN constants, add ICMPType",
	"created": "2013-05-12 09:14:39.948550",
	"patchsets": [
		32001,
		42002,
		49001
	],
	"modified": "2013-06-07 06:06:25.507040",
	"closed": true,
	"issue": 9353045
}