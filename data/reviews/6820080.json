{
	"description": "sort: make return value for 'not found' clearer in docs\nIt was well-defined but easy to miss that the return value for\n\"not found\" is len(input) not -1 as many expect.\n\nFixes issue 4205.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org"
	],
	"reviewers": [
		"0xjnml@gmail.com",
		"minux.ma@gmail.com"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-11-02 17:05:47.924090",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-11-02 23:07:29.313270",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=126c37a9e33c ***\n\nsort: make return value for 'not found' clearer in docs\nIt was well-defined but easy to miss that the return value for\n\"not found\" is len(input) not -1 as many expect.\n\nFixes issue 4205.\n\nR=golang-dev, dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/6820080",
			"disapproval": false,
			"date": "2012-11-02 23:17:37.350070",
			"approval": false
		},
		{
			"sender": "0xjnml@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think the documentation in CL 6819082 is correct. Others have to say\r\nif (also) the formulation is OK for them (I'm fine with it). I think\r\nthat Rob probably wants to explicitly address the -1 return value\r\n(wrongly) assumed by some people in the \"not present\" case.\r\n\r\n-j\r\n\r\nOn Sat, Nov 3, 2012 at 11:26 AM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n>\r\n> On Sat, Nov 3, 2012 at 5:44 PM, Jan Mercl <0xjnml@gmail.com> wrote:\r\n>>\r\n>> I'm late to the party, sorry. Can someone please resolve my concerns?\r\n>>\r\n>> /*\r\n>> Per recently submitted CL[1] the docs for e.g. sort.SearchInts now read:\r\n>>\r\n>> // SearchInts searches for x in a sorted slice of ints and returns the\r\n>> index\r\n>> // as specified by Search. The return value is len(a) if x is not present.\r\n>> // The slice must be sorted in ascending order.\r\n>> //\r\n>>\r\n>> In the bellow code the value `25` is `not present` in `a`, but the return\r\n>> value\r\n>> is definitely not `len(a)`. The return value is correct (the index where\r\n>> to\r\n>> insert `25`), but the above cited new godocs, where the \"The return value\r\n>> is\r\n>> len(a) if x is not present.\" was added by the referenced CL, are IMO not\r\n>> correct and confusing wrt what is actually returned by sort.SearchInts.\r\n>>\r\n>> I'm sorry for \"reviewing\" a CL after it was submitted, that's my fault.\r\n>>\r\n>>   [1]: https://codereview.appspot.com/6820080\r\n>>\r\n>> */\r\n>>\r\n>> package main\r\n>>\r\n>> import (\r\n>>         \"fmt\"\r\n>>         \"sort\"\r\n>> )\r\n>>\r\n>> func main() {\r\n>>         a := []int{10, 20, 30, 40}\r\n>>         fmt.Println(sort.SearchInts(a, 25))\r\n>> }\r\n>>\r\n>> (Also here: http://play.golang.org/p/faf68xoRCX)\r\n>\r\n> You're right, I've created https://codereview.appspot.com/6819082/ to\r\n> address the problem (not mailed yet).\r\n> What do you think about it?\r\n",
			"disapproval": false,
			"date": "2012-11-03 11:28:08.794630",
			"approval": false
		},
		{
			"sender": "0xjnml@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm late to the party, sorry. Can someone please resolve my concerns?\r\n\r\n/*\r\nPer recently submitted CL[1] the docs for e.g. sort.SearchInts now read:\r\n\r\n// SearchInts searches for x in a sorted slice of ints and returns the index\r\n// as specified by Search. The return value is len(a) if x is not present.\r\n// The slice must be sorted in ascending order.\r\n//\r\n\r\nIn the bellow code the value `25` is `not present` in `a`, but the return\r\nvalue\r\nis definitely not `len(a)`. The return value is correct (the index where to\r\ninsert `25`), but the above cited new godocs, where the \"The return value is\r\nlen(a) if x is not present.\" was added by the referenced CL, are IMO not\r\ncorrect and confusing wrt what is actually returned by sort.SearchInts.\r\n\r\nI'm sorry for \"reviewing\" a CL after it was submitted, that's my fault.\r\n\r\n  [1]: https://codereview.appspot.com/6820080\r\n\r\n*/\r\n\r\npackage main\r\n\r\nimport (\r\n        \"fmt\"\r\n        \"sort\"\r\n)\r\n\r\nfunc main() {\r\n        a := []int{10, 20, 30, 40}\r\n        fmt.Println(sort.SearchInts(a, 25))\r\n}\r\n\r\n(Also here: http://play.golang.org/p/faf68xoRCX)\r\n\r\nTIA\r\n\r\n-j\r\n\r\n\r\nOn Sat, Nov 3, 2012 at 12:17 AM, <r@golang.org> wrote:\r\n\r\n> *** Submitted as\r\n> http://code.google.com/p/go/**source/detail?r=126c37a9e33c<http://code.google.com/p/go/source/detail?r=126c37a9e33c>***\r\n>\r\n> sort: make return value for 'not found' clearer in docs\r\n> It was well-defined but easy to miss that the return value for\r\n> \"not found\" is len(input) not -1 as many expect.\r\n>\r\n> Fixes issue 4205.\r\n>\r\n> R=golang-dev, dsymonds\r\n> CC=golang-dev\r\n> http://codereview.appspot.com/**6820080<http://codereview.appspot.com/6820080>\r\n>\r\n>\r\n> http://codereview.appspot.com/**6820080/<http://codereview.appspot.com/6820080/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-03 09:44:28.905520",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Nov 3, 2012 at 5:44 PM, Jan Mercl <0xjnml@gmail.com> wrote:\r\n\r\n> I'm late to the party, sorry. Can someone please resolve my concerns?\r\n>\r\n> /*\r\n> Per recently submitted CL[1] the docs for e.g. sort.SearchInts now read:\r\n>\r\n> // SearchInts searches for x in a sorted slice of ints and returns the\r\n> index\r\n> // as specified by Search. The return value is len(a) if x is not present.\r\n> // The slice must be sorted in ascending order.\r\n> //\r\n>\r\n> In the bellow code the value `25` is `not present` in `a`, but the return\r\n> value\r\n> is definitely not `len(a)`. The return value is correct (the index where to\r\n> insert `25`), but the above cited new godocs, where the \"The return value\r\n> is\r\n> len(a) if x is not present.\" was added by the referenced CL, are IMO not\r\n> correct and confusing wrt what is actually returned by sort.SearchInts.\r\n>\r\n> I'm sorry for \"reviewing\" a CL after it was submitted, that's my fault.\r\n>\r\n>   [1]: https://codereview.appspot.com/6820080\r\n>\r\n> */\r\n>\r\n> package main\r\n>\r\n> import (\r\n>         \"fmt\"\r\n>         \"sort\"\r\n> )\r\n>\r\n> func main() {\r\n>          a := []int{10, 20, 30, 40}\r\n>         fmt.Println(sort.SearchInts(a, 25))\r\n> }\r\n>\r\n> (Also here: http://play.golang.org/p/faf68xoRCX)\r\n>\r\nYou're right, I've created https://codereview.appspot.com/6819082/ to\r\naddress the problem (not mailed yet).\r\nWhat do you think about it?\r\n",
			"disapproval": false,
			"date": "2012-11-03 10:26:56.396420",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6820080: sort: make return value for 'not found' clearer in docs",
	"created": "2012-11-02 17:05:37.878420",
	"patchsets": [
		1,
		2001
	],
	"modified": "2012-11-03 10:26:56.492200",
	"closed": true,
	"issue": 6820080
}