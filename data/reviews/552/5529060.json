{
	"description": "gc: test that asserts closures are not wrapped when they don't have closure vars.",
	"cc": [
		"rsc@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-10 14:25:27.849627",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nOn Jan 10, 2012 6:25 AM, <lvd@google.com> wrote:\n\n> Reviewers: rsc, bradfitz,\n>\n> Message:\n> Hello rsc@golang.org, bradfitz@golang.org (cc:\n> golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> gc: test that asserts closures are not wrapped when they don't have\n> closure vars.\n>\n> Please review this at http://codereview.appspot.com/**5529060/<http://codereview.appspot.com/5529060/>\n>\n> Affected files:\n>  M test/closure.go\n>\n>\n> Index: test/closure.go\n> ==============================**==============================**=======\n> --- a/test/closure.go\n> +++ b/test/closure.go\n> @@ -6,6 +6,8 @@\n>\n>  package main\n>\n> +import \"runtime\"\n> +\n>  var c = make(chan int)\n>\n>  func check(a []int) {\n> @@ -77,6 +79,8 @@\n>  func newfunc() func(int) int { return func(x int) int { return x } }\n>\n>  func main() {\n> +       var fail bool\n> +\n>        go f()\n>        check([]int{1, 4, 5, 4})\n>\n> @@ -88,13 +92,26 @@\n>        go h()\n>        check([]int{100, 200, 101, 201, 500, 101, 201, 500})\n>\n> +       runtime.UpdateMemStats()\n> +        n0 := runtime.MemStats.Mallocs\n> +\n>        x, y := newfunc(), newfunc()\n>        if x(1) != 1 || y(2) != 2 {\n>                println(\"newfunc returned broken funcs\")\n> -               panic(\"fail\")\n> +               fail = true\n> +       }\n> +\n> +       runtime.UpdateMemStats()\n> +        if n0 != runtime.MemStats.Mallocs {\n> +               println(\"newfunc allocated unexpectedly\")\n> +               fail = true\n>        }\n>\n>        ff(1)\n> +\n> +       if fail {\n> +               panic(\"fail\")\n> +       }\n>  }\n>\n>  func ff(x int) {\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-10 16:03:26.320996",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-01-10 16:53:36.489700",
			"approval": true
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f2999ed409ce ***\n\ngc: test that asserts closures are not wrapped when they don't have closure vars.\n\nR=rsc, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5529060",
			"disapproval": false,
			"date": "2012-01-10 20:47:30.479983",
			"approval": false
		}
	],
	"owner_email": "lvd@google.com",
	"private": false,
	"base_url": "",
	"owner": "lvd",
	"subject": "code review 5529060: gc: test that asserts closures are not wrapped when the...",
	"created": "2012-01-10 14:25:12.565568",
	"patchsets": [
		1,
		2001,
		3002,
		4
	],
	"modified": "2012-01-10 20:47:31.852905",
	"closed": true,
	"issue": 5529060
}