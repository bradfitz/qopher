{
	"description": "graphics/convolve: expose ConvolvePoint",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"nigeltao@golang.org"
	],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "API looks reasonable. I feel like there exists a nice design somewhere that unifies all these image transformations, but I'm happy to get there by evolutionary steps.\n\nhttp://codereview.appspot.com/5528071/diff/4001/graphics/convolve/Makefile\nFile graphics/convolve/Makefile (right):\n\nhttp://codereview.appspot.com/5528071/diff/4001/graphics/convolve/Makefile#newcode10\ngraphics/convolve/Makefile:10: separable.go\\\nForget to \"hg add separable.go\" (and possibly separable_test.go)?",
			"disapproval": false,
			"date": "2012-01-11 05:47:28.740489",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://crawshaw%40google.com@code.google.com/p/graphics-go/",
			"disapproval": false,
			"date": "2012-01-11 03:27:51.521194",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5528071/diff/4001/graphics/convolve/Makefile\nFile graphics/convolve/Makefile (right):\n\nhttp://codereview.appspot.com/5528071/diff/4001/graphics/convolve/Makefile#newcode10\ngraphics/convolve/Makefile:10: separable.go\\\nOn 2012/01/11 05:47:28, nigeltao wrote:\n> Forget to \"hg add separable.go\" (and possibly separable_test.go)?\n\nDone.",
			"disapproval": false,
			"date": "2012-01-15 23:42:20.088774",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5528071/diff/3/graphics/convolve/convolve_test.go\nFile graphics/convolve/convolve_test.go (right):\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/convolve_test.go#newcode26\ngraphics/convolve/convolve_test.go:26: desc: \"identity\",\nk doesn't look like an identity matrix to me.\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/convolve_test.go#newcode145\ngraphics/convolve/convolve_test.go:145: []float64{0, 1, 0})\nAdd a \",\\n\" before the \")\".\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable.go\nFile graphics/convolve/separable.go (right):\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable.go#newcode15\ngraphics/convolve/separable.go:15: // kernel. x and x are the per-axis weights. Each slice must be the same\ns/x and x/x and y/\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable.go#newcode21\ngraphics/convolve/separable.go:21: //\t\t[]float64{1, 2, 1})\nAdd a \",\\n\" before the \")\".\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable.go#newcode183\ngraphics/convolve/separable.go:183: buf := k.buildBuf(bounds, src)\nSo, if the src is 1000x1000, you'll build a 1000x1000 buffer even if the kernel is 3x3?\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable_test.go\nFile graphics/convolve/separable_test.go (right):\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable_test.go#newcode19\ngraphics/convolve/separable_test.go:19: []float64{0, 1, 0})\nAdd a \",\\n\" before the \")\".",
			"disapproval": false,
			"date": "2012-01-16 05:18:09.984843",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5528071/diff/3/graphics/convolve/convolve_test.go\nFile graphics/convolve/convolve_test.go (right):\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/convolve_test.go#newcode26\ngraphics/convolve/convolve_test.go:26: desc: \"identity\",\nOn 2012/01/16 05:18:10, nigeltao wrote:\n> k doesn't look like an identity matrix to me.\n\nDone.\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/convolve_test.go#newcode145\ngraphics/convolve/convolve_test.go:145: []float64{0, 1, 0})\nOn 2012/01/16 05:18:10, nigeltao wrote:\n> Add a \",\\n\" before the \")\".\n\nDone.\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable.go\nFile graphics/convolve/separable.go (right):\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable.go#newcode15\ngraphics/convolve/separable.go:15: // kernel. x and x are the per-axis weights. Each slice must be the same\nOn 2012/01/16 05:18:10, nigeltao wrote:\n> s/x and x/x and y/\n\nDone.\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable.go#newcode21\ngraphics/convolve/separable.go:21: //\t\t[]float64{1, 2, 1})\nOn 2012/01/16 05:18:10, nigeltao wrote:\n> Add a \",\\n\" before the \")\".\n\nDone.\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable.go#newcode183\ngraphics/convolve/separable.go:183: buf := k.buildBuf(bounds, src)\nOn 2012/01/16 05:18:10, nigeltao wrote:\n> So, if the src is 1000x1000, you'll build a 1000x1000 buffer even if the kernel\n> is 3x3?\n\nYes, ConvolvePoint on a separable kernel is not a good idea.\n\nI could implement this as a traditional convolution (i.e. build the full matrix). Another possibility is designing it into the API:\n\ninterface Kernel {\n  With(image.Image) Convolve\n}\n\ninterface Convolve {\n  Convolve(dst draw.Image)\n  ConvolvePoint(x, y int) color.Color)\n}\n\nNot sure if it pulls its weight.\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable_test.go\nFile graphics/convolve/separable_test.go (right):\n\nhttp://codereview.appspot.com/5528071/diff/3/graphics/convolve/separable_test.go#newcode19\ngraphics/convolve/separable_test.go:19: []float64{0, 1, 0})\nOn 2012/01/16 05:18:10, nigeltao wrote:\n> Add a \",\\n\" before the \")\".\n\nDone.",
			"disapproval": false,
			"date": "2012-01-26 23:27:45.920921",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nhttp://codereview.appspot.com/5528071/diff/12001/graphics/convolve/convolve.go\nFile graphics/convolve/convolve.go (right):\n\nhttp://codereview.appspot.com/5528071/diff/12001/graphics/convolve/convolve.go#newcode38\ngraphics/convolve/convolve.go:38: RGBA(dst, src *image.RGBA)\nI think that the methods should be called ConvolveRGBA and ConvolvePointRGBA. The type should probably also be called KernelRGBA.",
			"disapproval": false,
			"date": "2012-01-30 06:14:56.366465",
			"approval": true
		}
	],
	"owner_email": "crawshaw@google.com",
	"private": false,
	"base_url": "",
	"owner": "crawshaw1",
	"subject": "code review 5528071: graphics/convolve: expose ConvolvePoint",
	"created": "2012-01-11 03:27:09.532187",
	"patchsets": [
		1,
		1002,
		4001,
		3,
		12001
	],
	"modified": "2012-01-30 06:14:56.366465",
	"closed": false,
	"issue": 5528071
}