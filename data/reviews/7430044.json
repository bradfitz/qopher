{
	"description": "syscall: add {Set,Get}priority for Linux, and consistency tests",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"bradfitz@golang.org",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-28 18:43:39.224740",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*BSD already contains those two syscalls, but not required constants.\n\nthe consistency check is RFC.",
			"disapproval": false,
			"date": "2013-02-28 18:44:43.411940",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks basically fine but clearly we can not commit it until the syscall is added to the other Unix systems, or the test is moved to a different CL.\n\nI would be curious to hear what others think of the test approach.",
			"disapproval": false,
			"date": "2013-02-28 18:59:52.266160",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Mar 1, 2013 at 2:59 AM, <iant@golang.org> wrote:\r\n\r\n> Looks basically fine but clearly we can not commit it until the syscall\r\n> is added to the other Unix systems, or the test is moved to a different\r\n> CL.\r\n>\r\nTo be clear, *BSD (including Darwin) already defines the two syscalls.\r\n(if none of them has those two syscalls, I doubt we can add new APIs\r\nat this stage)\r\nI only added the syscalls to Linux and the three required constants to\r\nall Unixes to be consistent and make them usable on *BSDs.\r\n\r\n>\r\n> I would be curious to hear what others think of the test approach.\r\n>\r\nme too.\r\n",
			"disapproval": false,
			"date": "2013-02-28 19:05:28.195950",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7430044/diff/9001/src/pkg/syscall/consistency_unix_test.go\nFile src/pkg/syscall/consistency_unix_test.go (right):\n\nhttps://codereview.appspot.com/7430044/diff/9001/src/pkg/syscall/consistency_unix_test.go#newcode15\nsrc/pkg/syscall/consistency_unix_test.go:15: func _() {\nwhy do these vars and consts need to be in a func?",
			"disapproval": false,
			"date": "2013-02-28 21:24:45.886770",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. The only comment I have is on the name of the test file, consistent_unix_test.go doens't really tell me much about what it does. What about\n\n   syscall_unix_test.go\n\nwe already have a syscall_windows_test.go\n\nhttps://codereview.appspot.com/7430044/diff/9001/src/pkg/syscall/consistency_unix_test.go\nFile src/pkg/syscall/consistency_unix_test.go (right):\n\nhttps://codereview.appspot.com/7430044/diff/9001/src/pkg/syscall/consistency_unix_test.go#newcode14\nsrc/pkg/syscall/consistency_unix_test.go:14: // {Set,Get}priority and needed constants for them\n// issue NNNN.\n\n/s/needed/required/",
			"disapproval": false,
			"date": "2013-02-28 23:29:45.214060",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "any more opinions on this?",
			"disapproval": false,
			"date": "2013-03-04 18:52:07.017320",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think it might be too late for this, and would urge you to leave it until\r\nafter Go 1.1 unless you feel very strongly about it.\r\n\r\nhttp://golang.org/s/go11freeze\r\n",
			"disapproval": false,
			"date": "2013-03-05 23:37:37.249890",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2013-06-05 01:09:16.564480",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2013-06-05 01:32:10.172850",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.",
			"disapproval": false,
			"date": "2013-06-09 14:51:27.087440",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-06-10 18:01:59.270430",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b08e22305bcc ***\n\nsyscall: add {Set,Get}priority for Linux, and consistency tests\n\nR=golang-dev, iant, bradfitz, dave\nCC=golang-dev\nhttps://codereview.appspot.com/7430044",
			"disapproval": false,
			"date": "2013-06-10 18:47:14.199270",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 7430044: syscall: add {Set,Get}priority for Linux, and consisten...",
	"created": "2013-02-28 12:19:17.626900",
	"patchsets": [
		1,
		2001,
		3010,
		7001,
		9001,
		19001,
		22001,
		27001,
		30001,
		35001,
		37001,
		38001
	],
	"modified": "2013-06-10 18:47:18.937950",
	"closed": true,
	"issue": 7430044
}