{
	"description": "database/sql: add NullInt64, NullFloat64, NullBool\n\nFixes issue 2699",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-20 00:27:19.987668",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/fakedb_test.go\nFile src/pkg/database/sql/fakedb_test.go (right):\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/fakedb_test.go#newcode597\nsrc/pkg/database/sql/fakedb_test.go:597: return driver.NotNull{driver.DefaultParameterConverter}\nthis works, but a type-specific converter would be better. maybe add a TODO here and in the below cases.\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode73\nsrc/pkg/database/sql/sql.go:73: // NullInt64 represents a int64 that may be null.\nan int64\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode75\nsrc/pkg/database/sql/sql.go:75: // it can be used as a scan destination, similar to NullString\nend in a period, here and below.\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode154\nsrc/pkg/database/sql/sql.go:154: type NullBytes struct {\nis NullBytes actually useful? a []byte can already be nil. we can distinguish between a nil []byte and a []byte{} empty slice.",
			"disapproval": false,
			"date": "2012-01-25 16:34:44.984171",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 25, 2012 at 4:39 PM, <jamespcooper@gmail.com> wrote:\n\n> PTAL\n>\n>\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/fakedb_test.go<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/fakedb_test.go>\n> File src/pkg/database/sql/fakedb_**test.go (right):\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/fakedb_test.go#**newcode597<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/fakedb_test.go#newcode597>\n> src/pkg/database/sql/fakedb_**test.go:597: return\n> driver.NotNull{driver.**DefaultParameterConverter}\n> On 2012/01/25 16:34:45, bradfitz wrote:\n>\n>> this works, but a type-specific converter would be better. maybe add a\n>>\n> TODO here\n>\n>> and in the below cases.\n>>\n>\n> Done.\n>\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/sql.go<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go>\n> File src/pkg/database/sql/sql.go (right):\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/sql.go#newcode73<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode73>\n> src/pkg/database/sql/sql.go:**73: // NullInt64 represents a int64 that may\n> be null.\n> On 2012/01/25 16:34:45, bradfitz wrote:\n>\n>> an int64\n>>\n>\n> Done.\n>\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/sql.go#newcode75<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode75>\n> src/pkg/database/sql/sql.go:**75: // it can be used as a scan destination,\n> similar to NullString\n> On 2012/01/25 16:34:45, bradfitz wrote:\n>\n>> end in a period, here and below.\n>>\n>\n> Done.\n>\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/sql.go#newcode154<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode154>\n> src/pkg/database/sql/sql.go:**154: type NullBytes struct {\n> On 2012/01/25 16:34:45, bradfitz wrote:\n>\n>> is NullBytes actually useful? a []byte can already be nil. we can\n>>\n> distinguish\n>\n>> between a nil []byte and a []byte{} empty slice.\n>>\n>\n> Ok, I'll remove it.  In my gorp integration tests I get an error when I\n> try to select a null column into a []byte, but I suspect this can be\n> solved at the mymysql driver level:\n>\n> panic: sql: Scan error on column index 5: unsupported driver -> Scan\n> pair: <nil> -> *[]uint8\n>\n\nPlease file a separate bug on that.  I think that's easy to fix, but still\nin the sql package.\n",
			"disapproval": false,
			"date": "2012-01-26 00:49:59.582594",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "BTW, I logged a separate issue:\n\nhttp://code.google.com/p/go/issues/detail?id=2788\n\nwith a failing test for the null value -> []byte conversion.  It looks like \nthis convertAssign() is probably the place to deal with this, but I could \nmisunderstand.\n\ncheers\n\n-- James\n",
			"disapproval": false,
			"date": "2012-01-26 01:47:32.286258",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-26 00:38:18.980511",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL",
			"disapproval": false,
			"date": "2012-01-26 01:05:42.197180",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/fakedb_test.go\nFile src/pkg/database/sql/fakedb_test.go (right):\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/fakedb_test.go#newcode597\nsrc/pkg/database/sql/fakedb_test.go:597: return driver.NotNull{driver.DefaultParameterConverter}\nOn 2012/01/25 16:34:45, bradfitz wrote:\n> this works, but a type-specific converter would be better. maybe add a TODO here\n> and in the below cases.\n\nDone.\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode73\nsrc/pkg/database/sql/sql.go:73: // NullInt64 represents a int64 that may be null.\nOn 2012/01/25 16:34:45, bradfitz wrote:\n> an int64\n\nDone.\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode75\nsrc/pkg/database/sql/sql.go:75: // it can be used as a scan destination, similar to NullString\nOn 2012/01/25 16:34:45, bradfitz wrote:\n> end in a period, here and below.\n\nDone.\n\nhttp://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode154\nsrc/pkg/database/sql/sql.go:154: type NullBytes struct {\nOn 2012/01/25 16:34:45, bradfitz wrote:\n> is NullBytes actually useful? a []byte can already be nil. we can distinguish\n> between a nil []byte and a []byte{} empty slice.\n\nOk, I'll remove it.  In my gorp integration tests I get an error when I try to select a null column into a []byte, but I suspect this can be solved at the mymysql driver level:\n\npanic: sql: Scan error on column index 5: unsupported driver -> Scan pair: <nil> -> *[]uint8",
			"disapproval": false,
			"date": "2012-01-26 00:39:20.112653",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but please first fix the commit description:\n\n-- remove reference to NullBytes\n-- blank line after the first line\n-- end in \"Fixes issue nnnnnn\" (and don't reference the old issue id)\n\n\nOn Wed, Jan 25, 2012 at 4:39 PM, <jamespcooper@gmail.com> wrote:\n\n> PTAL\n>\n>\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/fakedb_test.go<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/fakedb_test.go>\n> File src/pkg/database/sql/fakedb_**test.go (right):\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/fakedb_test.go#**newcode597<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/fakedb_test.go#newcode597>\n> src/pkg/database/sql/fakedb_**test.go:597: return\n> driver.NotNull{driver.**DefaultParameterConverter}\n> On 2012/01/25 16:34:45, bradfitz wrote:\n>\n>> this works, but a type-specific converter would be better. maybe add a\n>>\n> TODO here\n>\n>> and in the below cases.\n>>\n>\n> Done.\n>\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/sql.go<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go>\n> File src/pkg/database/sql/sql.go (right):\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/sql.go#newcode73<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode73>\n> src/pkg/database/sql/sql.go:**73: // NullInt64 represents a int64 that may\n> be null.\n> On 2012/01/25 16:34:45, bradfitz wrote:\n>\n>> an int64\n>>\n>\n> Done.\n>\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/sql.go#newcode75<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode75>\n> src/pkg/database/sql/sql.go:**75: // it can be used as a scan destination,\n> similar to NullString\n> On 2012/01/25 16:34:45, bradfitz wrote:\n>\n>> end in a period, here and below.\n>>\n>\n> Done.\n>\n>\n> http://codereview.appspot.com/**5557063/diff/2001/src/pkg/**\n> database/sql/sql.go#newcode154<http://codereview.appspot.com/5557063/diff/2001/src/pkg/database/sql/sql.go#newcode154>\n> src/pkg/database/sql/sql.go:**154: type NullBytes struct {\n> On 2012/01/25 16:34:45, bradfitz wrote:\n>\n>> is NullBytes actually useful? a []byte can already be nil. we can\n>>\n> distinguish\n>\n>> between a nil []byte and a []byte{} empty slice.\n>>\n>\n> Ok, I'll remove it.  In my gorp integration tests I get an error when I\n> try to select a null column into a []byte, but I suspect this can be\n> solved at the mymysql driver level:\n>\n> panic: sql: Scan error on column index 5: unsupported driver -> Scan\n> pair: <nil> -> *[]uint8\n>\n> http://codereview.appspot.com/**5557063/<http://codereview.appspot.com/5557063/>\n>\n",
			"disapproval": false,
			"date": "2012-01-26 00:56:50.121599",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a3dddd7405a3 ***\n\ndatabase/sql: add NullInt64, NullFloat64, NullBool\n\nFixes issue 2699\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5557063\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2012-01-26 01:47:39.315555",
			"approval": false
		}
	],
	"owner_email": "jamespcooper@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "coopernurse",
	"subject": "code review 5557063: database/sql: add NullInt64, NullFloat64, NullBool, Nul...",
	"created": "2012-01-20 00:26:28.651336",
	"patchsets": [
		1,
		2001,
		6001
	],
	"modified": "2012-01-26 16:02:58.875362",
	"closed": true,
	"issue": 5557063
}