{
	"description": "os: use FileMode instead of uint32 in various functions\n\nFixes issue 2733",
	"cc": [
		"chickencha@gmail.com",
		"ality@pbrane.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Brad Fitzpatrick <bradfitz@golang.org> once said:\n> On Thu, Jan 19, 2012 at 11:52 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n> \n> > Until we have a plan9 builder or a wiki page describing the command I need\n> > to run to cross-compile plan9, I'm going to keep breaking plan9 without\n> > guilt.\n> >\n> > But I'll go fix this.\n> >\n> \n> Actually I lied.\n> \n> I don't know enough (anything) about plan9 mode bits or system calls to fix\n> this comfortably.\n> \n> I'd prefer to let somebody else do it in a subsequent CL.\n\nHere ya go: https://codereview.appspot.com/5555056\n\nCheers,\n  Anthony\n",
			"disapproval": false,
			"date": "2012-01-19 22:13:04.235254",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-01-19 19:41:20.488094",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"chickencha@gmail.com",
				"ality@pbrane.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_posix.go\nFile src/pkg/os/file_posix.go (right):\n\nhttp://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_posix.go#newcode96\nsrc/pkg/os/file_posix.go:96: if i&ModeSymlink != 0 {\nChmod can't touch the S_IF* bits.  They are status only.\nSo I think they can be dropped.  It will probably complain\nif you try to include them.\n\nhttp://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_unix.go\nFile src/pkg/os/file_unix.go (right):\n\nhttp://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_unix.go#newcode65\nsrc/pkg/os/file_unix.go:65: r, e := syscall.Open(name, flag|syscall.O_CLOEXEC, uint32(perm.Perm()))\nI think this and the various other instances of it should be \nposixMode(perm) and not uint32(perm.Perm()).\nThat will handle setuid/setgid/sticky bit etc correctly.",
			"disapproval": false,
			"date": "2012-01-19 22:17:09.043834",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jan 19, 2012 at 2:13 PM, Anthony Martin <ality@pbrane.org> wrote:\n\n> Brad Fitzpatrick <bradfitz@golang.org> once said:\n> > On Thu, Jan 19, 2012 at 11:52 AM, Brad Fitzpatrick <bradfitz@golang.org\n> >wrote:\n> >\n> > > Until we have a plan9 builder or a wiki page describing the command I\n> need\n> > > to run to cross-compile plan9, I'm going to keep breaking plan9 without\n> > > guilt.\n> > >\n> > > But I'll go fix this.\n> > >\n> >\n> > Actually I lied.\n> >\n> > I don't know enough (anything) about plan9 mode bits or system calls to\n> fix\n> > this comfortably.\n> >\n> > I'd prefer to let somebody else do it in a subsequent CL.\n>\n> Here ya go: https://codereview.appspot.com/5555056\n\n\nThanks!  Yeah, I wouldn't have gotten that.\n",
			"disapproval": false,
			"date": "2012-01-19 22:14:22.520161",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"chickencha@gmail.com",
				"ality@pbrane.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello chickencha@gmail.com, ality@pbrane.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-19 22:25:39.820124",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Until we have a plan9 builder or a wiki page describing the command I need\nto run to cross-compile plan9, I'm going to keep breaking plan9 without\nguilt.\n\nBut I'll go fix this.\n\n\nOn Thu, Jan 19, 2012 at 11:50 AM, <chickencha@gmail.com> wrote:\n\n>\n> http://codereview.appspot.com/**5553064/diff/4001/src/pkg/os/**\n> file_plan9.go<http://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_plan9.go>\n> File src/pkg/os/file_plan9.go (right):\n>\n> http://codereview.appspot.com/**5553064/diff/4001/src/pkg/os/**\n> file_plan9.go#newcode166<http://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_plan9.go#newcode166>\n> src/pkg/os/file_plan9.go:166: func (f *File) Chmod(mode uint32) error {\n> Needs to be changed\n>\n> http://codereview.appspot.com/**5553064/diff/4001/src/pkg/os/**\n> file_plan9.go#newcode269<http://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_plan9.go#newcode269>\n> src/pkg/os/file_plan9.go:269: func Chmod(name string, mode uint32) error\n> {\n> Needs to be changed\n>\n> http://codereview.appspot.com/**5553064/<http://codereview.appspot.com/5553064/>\n>\n",
			"disapproval": false,
			"date": "2012-01-19 19:52:41.509558",
			"approval": false
		},
		{
			"sender": "chickencha@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"chickencha@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_plan9.go\nFile src/pkg/os/file_plan9.go (right):\n\nhttp://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_plan9.go#newcode166\nsrc/pkg/os/file_plan9.go:166: func (f *File) Chmod(mode uint32) error {\nNeeds to be changed\n\nhttp://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_plan9.go#newcode269\nsrc/pkg/os/file_plan9.go:269: func Chmod(name string, mode uint32) error {\nNeeds to be changed",
			"disapproval": false,
			"date": "2012-01-19 19:50:56.917000",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jan 19, 2012 at 11:52 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n> Until we have a plan9 builder or a wiki page describing the command I need\n> to run to cross-compile plan9, I'm going to keep breaking plan9 without\n> guilt.\n>\n> But I'll go fix this.\n>\n\nActually I lied.\n\nI don't know enough (anything) about plan9 mode bits or system calls to fix\nthis comfortably.\n\nI'd prefer to let somebody else do it in a subsequent CL.\n",
			"disapproval": false,
			"date": "2012-01-19 19:55:17.587339",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"chickencha@gmail.com",
				"ality@pbrane.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM after fix\n\nhttp://codereview.appspot.com/5553064/diff/5010/src/pkg/os/file_posix.go\nFile src/pkg/os/file_posix.go (right):\n\nhttp://codereview.appspot.com/5553064/diff/5010/src/pkg/os/file_posix.go#newcode87\nsrc/pkg/os/file_posix.go:87: if i&ModeAppend != 0 {\nSorry, missed these last time.  The O_* bits and the S_* bits \nare different spaces and uses.  There's no way to fiddle\nappend-only or exclusive-use using normal Chmod, so\nwe can ignore them.\n\nDelete this if and next one.",
			"disapproval": false,
			"date": "2012-01-19 22:28:58.472556",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"chickencha@gmail.com",
				"ality@pbrane.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=985828084e10 ***\n\nos: use FileMode instead of uint32 in various functions\n\nFixes issue 2733\n\nR=chickencha, ality, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5553064",
			"disapproval": false,
			"date": "2012-01-19 23:45:20.819616",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"chickencha@gmail.com",
				"ality@pbrane.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_posix.go\nFile src/pkg/os/file_posix.go (right):\n\nhttp://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_posix.go#newcode96\nsrc/pkg/os/file_posix.go:96: if i&ModeSymlink != 0 {\nOn 2012/01/19 22:17:09, rsc wrote:\n> Chmod can't touch the S_IF* bits.  They are status only.\n> So I think they can be dropped.  It will probably complain\n> if you try to include them.\n\nDone.\n\nhttp://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_unix.go\nFile src/pkg/os/file_unix.go (right):\n\nhttp://codereview.appspot.com/5553064/diff/4001/src/pkg/os/file_unix.go#newcode65\nsrc/pkg/os/file_unix.go:65: r, e := syscall.Open(name, flag|syscall.O_CLOEXEC, uint32(perm.Perm()))\nOn 2012/01/19 22:17:09, rsc wrote:\n> I think this and the various other instances of it should be \n> posixMode(perm) and not uint32(perm.Perm()).\n> That will handle setuid/setgid/sticky bit etc correctly.\n\nWhoops, done.\n\nrenamed syscallMode.",
			"disapproval": false,
			"date": "2012-01-19 22:25:51.268280",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5553064: os: use FileMode instead of uint32 in various functions",
	"created": "2012-01-19 19:21:27.761916",
	"patchsets": [
		1,
		2001,
		4001,
		5010,
		1012
	],
	"modified": "2012-01-19 23:45:21.952452",
	"closed": true,
	"issue": 5553064
}