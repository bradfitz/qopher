{
	"description": "archive/tar: fix race in TestNonSeekable\n\nReimplement the test based on code from adg@golang.org.\n\nThe previous version has a race since the file is closed via defer\nrather than in the go routine. This meant that the file could be\nclosed before the go routine has actually received io.EOF. It then\nreceives EBADF and continues to do zero-byte writes to the pipe.\n\nThis addresses an issue seen on FreeBSD and OpenBSD, where the test\npasses but exits with a SIGPIPE, resulting in a failure.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5554083/diff/5001/src/pkg/archive/tar/reader_test.go\nFile src/pkg/archive/tar/reader_test.go (right):\n\nhttp://codereview.appspot.com/5554083/diff/5001/src/pkg/archive/tar/reader_test.go#newcode242\nsrc/pkg/archive/tar/reader_test.go:242: // pipe the data in\nThis whole test is way more complicated than it needs to be.\n\n// same up to line 240\ndefer f.Close()\ntype readerOnly struct {\n     io.Reader\n}\ntr := NewReader(readerOnly{r})\n// same from line 263",
			"disapproval": false,
			"date": "2012-01-22 23:12:25.860878",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-22 13:55:26.386971",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry I didn't see your mail for ages. It was marked as spam.\n\nhttp://codereview.appspot.com/5554083/diff/12002/src/pkg/archive/tar/reader_test.go\nFile src/pkg/archive/tar/reader_test.go (right):\n\nhttp://codereview.appspot.com/5554083/diff/12002/src/pkg/archive/tar/reader_test.go#newcode253\nsrc/pkg/archive/tar/reader_test.go:253: } else if err != nil {\nyou can drop the else here, too :-)",
			"disapproval": false,
			"date": "2012-01-24 05:24:26.035104",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=43bd7c3c42d9 ***\n\narchive/tar: fix race in TestNonSeekable\n\nReimplement the test based on code from adg@golang.org.\n\nThe previous version has a race since the file is closed via defer\nrather than in the go routine. This meant that the file could be\nclosed before the go routine has actually received io.EOF. It then\nreceives EBADF and continues to do zero-byte writes to the pipe.\n\nThis addresses an issue seen on FreeBSD and OpenBSD, where the test\npasses but exits with a SIGPIPE, resulting in a failure.\n\nR=golang-dev, adg\nCC=golang-dev\nhttp://codereview.appspot.com/5554083\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2012-01-25 02:45:03.637120",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5554083/diff/12002/src/pkg/archive/tar/reader_test.go\nFile src/pkg/archive/tar/reader_test.go (right):\n\nhttp://codereview.appspot.com/5554083/diff/12002/src/pkg/archive/tar/reader_test.go#newcode253\nsrc/pkg/archive/tar/reader_test.go:253: } else if err != nil {\nOn 2012/01/24 05:24:26, adg wrote:\n> you can drop the else here, too :-)\n\nDone.",
			"disapproval": false,
			"date": "2012-01-25 01:57:07.779922",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/22 23:12:25, adg wrote:\n> http://codereview.appspot.com/5554083/diff/5001/src/pkg/archive/tar/reader_test.go\n> File src/pkg/archive/tar/reader_test.go (right):\n> \n> http://codereview.appspot.com/5554083/diff/5001/src/pkg/archive/tar/reader_test.go#newcode242\n> src/pkg/archive/tar/reader_test.go:242: // pipe the data in\n> This whole test is way more complicated than it needs to be.\n> \n> // same up to line 240\n> defer f.Close()\n> type readerOnly struct {\n>      io.Reader\n> }\n> tr := NewReader(readerOnly{r})\n> // same from line 263\n\nWorks for me. PTAL.",
			"disapproval": false,
			"date": "2012-01-23 03:50:01.805491",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5554083/diff/8001/src/pkg/archive/tar/reader_test.go\nFile src/pkg/archive/tar/reader_test.go (right):\n\nhttp://codereview.appspot.com/5554083/diff/8001/src/pkg/archive/tar/reader_test.go#newcode251\nsrc/pkg/archive/tar/reader_test.go:251: if hdr == nil || err == io.EOF {\ndrop the hdr == nil condition here. Chances are if err != nil then hdr == nil, so the next else block might never trigger.",
			"disapproval": false,
			"date": "2012-01-23 04:23:21.642668",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-25 02:44:39.395243",
			"approval": true
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5554083/diff/8001/src/pkg/archive/tar/reader_test.go\nFile src/pkg/archive/tar/reader_test.go (right):\n\nhttp://codereview.appspot.com/5554083/diff/8001/src/pkg/archive/tar/reader_test.go#newcode251\nsrc/pkg/archive/tar/reader_test.go:251: if hdr == nil || err == io.EOF {\nOn 2012/01/23 04:23:21, adg wrote:\n> drop the hdr == nil condition here. Chances are if err != nil then hdr == nil,\n> so the next else block might never trigger.\n\nGood point. Fixed.",
			"disapproval": false,
			"date": "2012-01-23 10:11:18.219103",
			"approval": false
		}
	],
	"owner_email": "jsing@google.com",
	"private": false,
	"base_url": "",
	"owner": "jsing",
	"subject": "code review 5554083: archive/tar: fix race in TestNonSeekable",
	"created": "2012-01-22 13:02:23.478408",
	"patchsets": [
		4001,
		5001,
		8001,
		10002,
		12002,
		12003
	],
	"modified": "2012-01-25 04:17:23.488676",
	"closed": true,
	"issue": 5554083
}