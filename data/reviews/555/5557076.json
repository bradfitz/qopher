{
	"description": "doc/go1: flag, runtime, testing",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-01-20 23:05:53.940645",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5557076/diff/1/doc/go1.tmpl\nFile doc/go1.tmpl (right):\n\nhttp://codereview.appspot.com/5557076/diff/1/doc/go1.tmpl#newcode1000\ndoc/go1.tmpl:1000: in the executing address space, as reported by the operating system kernel.\n\"in the executing address space\" is weird. If my Go program, say, forks a subprocess then runtime.NumCPU should be the same in it even though it has a different address space.",
			"disapproval": false,
			"date": "2012-01-20 23:22:25.120334",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5557076/diff/1/doc/go1.tmpl\nFile doc/go1.tmpl (right):\n\nhttp://codereview.appspot.com/5557076/diff/1/doc/go1.tmpl#newcode491\ndoc/go1.tmpl:491: All these packages are available under the same names, with <code>exp/</code> prefixed: <code>exp/ebnf</code> etc.\nwith the prefix <code>exp/</code>:\n\nor:\n\nwith the <code>exp/</code> prefix:\n\n?\n\nhttp://codereview.appspot.com/5557076/diff/1/doc/go1.tmpl#newcode760\ndoc/go1.tmpl:760: In Go 1, the interface <code>flag.Value</code> has changed slightly.\nmake it a link?\n\nhttp://codereview.appspot.com/5557076/diff/1/doc/go1.tmpl#newcode766\ndoc/go1.tmpl:766: There is also a new kind of flag, <code>Duration</code>, to support argument\nlink?\n\nhttp://codereview.appspot.com/5557076/diff/1/doc/go1.tmpl#newcode777\ndoc/go1.tmpl:777: <code>Set</code> methods.\nlink?\n\nhttp://codereview.appspot.com/5557076/diff/1/doc/go1.tmpl#newcode999\ndoc/go1.tmpl:999: <code>runtime.NumCPU</code>, that returns the number of CPUs available\nlink?\n\nhttp://codereview.appspot.com/5557076/diff/1/doc/go1.tmpl#newcode1109\ndoc/go1.tmpl:1109: logging and failiure reporting.\ns/failiure/failure/",
			"disapproval": false,
			"date": "2012-01-20 23:24:49.871190",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 12890ccc4dbf ***\n\ndoc/go1: flag, runtime, testing\n\nR=golang-dev, dsymonds, gri\nCC=golang-dev\nhttp://codereview.appspot.com/5557076",
			"disapproval": false,
			"date": "2012-01-20 23:38:07.098597",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5557076: doc/go1: flag, runtime, testing",
	"created": "2012-01-20 23:05:49.930584",
	"patchsets": [
		1,
		2002
	],
	"modified": "2012-01-20 23:38:08.217492",
	"closed": true,
	"issue": 5557076
}