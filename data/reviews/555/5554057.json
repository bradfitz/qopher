{
	"description": "syscall: add Unix method to TimeSpec, TimeVal\n\nFixes issue 2534",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"alex.brainman@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks. Once Makefiles go away (soon?) I can come back and do some cleanup\nhere.\n\nOn Wed, Jan 18, 2012 at 6:48 PM, <alex.brainman@gmail.com> wrote:\n\n> Sorry, I didn't look at syscall.go. It is LGTM to leave it as is.\n>\n> Alex\n>\n> http://codereview.appspot.com/**5554057/<http://codereview.appspot.com/5554057/>\n>\n",
			"disapproval": false,
			"date": "2012-01-19 03:09:14.805036",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 18, 2012 at 6:40 PM, <alex.brainman@gmail.com> wrote:\n\n>\n> http://codereview.appspot.com/**5554057/diff/3/src/pkg/**\n> syscall/syscall_windows.go<http://codereview.appspot.com/5554057/diff/3/src/pkg/syscall/syscall_windows.go>\n> File src/pkg/syscall/syscall_**windows.go (right):\n>\n> http://codereview.appspot.com/**5554057/diff/3/src/pkg/**\n> syscall/syscall_windows.go#**newcode629<http://codereview.appspot.com/5554057/diff/3/src/pkg/syscall/syscall_windows.go#newcode629>\n> src/pkg/syscall/syscall_**windows.go:629: type Timespec struct {\n> Please, do not create \"invented\" structures. I am trying to get rid of\n> them. syscall package is os specific. If user expects to have\n> syscall.Timespec, I would like his program to fail to compile.\n\n\nFair enough.  I was just copying the existing ones.  I didn't know they\nwere on their way out.\n\nIt definitely made the build easier this way, but I can go mess with +build\nand Makefiles.\n",
			"disapproval": false,
			"date": "2012-01-19 02:44:56.640867",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-19 01:56:22.623594",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thanks for looking at this. \n\nSent from my iPhone\n\nOn 19/01/2012, at 12:56, bradfitz@golang.org wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n> \n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n> \n> \n> Description:\n> syscall: add Unix method to TimeSpec, TimeVal\n> \n> Fixes issue 2534\n> \n> Please review this at http://codereview.appspot.com/5554057/\n> \n> Affected files:\n>  M src/pkg/syscall/syscall.go\n>  M src/pkg/syscall/syscall_windows.go\n> \n> \n> Index: src/pkg/syscall/syscall.go\n> ===================================================================\n> --- a/src/pkg/syscall/syscall.go\n> +++ b/src/pkg/syscall/syscall.go\n> @@ -29,3 +29,11 @@\n> // Single-word zero for use when we need a valid pointer to 0 bytes.\n> // See mksyscall.pl.\n> var _zero uintptr\n> +\n> +func (ts *Timespec) Unix() (sec int64, nsec int64) {\n> +    return int64(ts.Sec), int64(ts.Nsec)\n> +}\n> +\n> +func (tv *Timeval) Unix() (sec int64, nsec int64) {\n> +    return int64(tv.Sec), int64(tv.Usec) * 1000\n> +}\n> Index: src/pkg/syscall/syscall_windows.go\n> ===================================================================\n> --- a/src/pkg/syscall/syscall_windows.go\n> +++ b/src/pkg/syscall/syscall_windows.go\n> @@ -624,6 +624,13 @@\n> \n> func (w WaitStatus) TrapCause() int { return -1 }\n> \n> +// Timespec is an invented structure on Windows, but here for\n> +// consistency with the syscall package for other operating systems.\n> +type Timespec struct {\n> +    Sec  int64\n> +    Nsec int64\n> +}\n> +\n> // TODO(brainman): fix all needed for net\n> \n> func Accept(fd Handle) (nfd Handle, sa Sockaddr, err error) { return 0, nil, EWINDOWS }\n> \n> \n",
			"disapproval": false,
			"date": "2012-01-19 02:07:18.963099",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am ok to have it in, if it simplify things somewhere else in our tree. But I don't see any ...\n\nAlex",
			"disapproval": false,
			"date": "2012-01-19 02:47:10.864464",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=49d3517bf516 ***\n\nsyscall: add Unix method to TimeSpec, TimeVal\n\nFixes issue 2534\n\nR=golang-dev, dave, alex.brainman\nCC=golang-dev\nhttp://codereview.appspot.com/5554057",
			"disapproval": false,
			"date": "2012-01-19 03:05:46.792981",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5554057/diff/3/src/pkg/syscall/syscall_windows.go\nFile src/pkg/syscall/syscall_windows.go (right):\n\nhttp://codereview.appspot.com/5554057/diff/3/src/pkg/syscall/syscall_windows.go#newcode629\nsrc/pkg/syscall/syscall_windows.go:629: type Timespec struct {\nPlease, do not create \"invented\" structures. I am trying to get rid of them. syscall package is os specific. If user expects to have syscall.Timespec, I would like his program to fail to compile.",
			"disapproval": false,
			"date": "2012-01-19 02:40:52.676538",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry, I didn't look at syscall.go. It is LGTM to leave it as is.\n\nAlex",
			"disapproval": false,
			"date": "2012-01-19 02:48:37.876339",
			"approval": true
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5554057: syscall: add Unix method to TimeSpec, TimeVal",
	"created": "2012-01-19 01:56:01.288192",
	"patchsets": [
		1,
		3,
		4002
	],
	"modified": "2012-01-19 03:05:47.622933",
	"closed": true,
	"issue": 5554057
}