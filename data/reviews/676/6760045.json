{
	"description": "io: add ByteWriter interface\n\nAPI change.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"nigeltao@golang.org",
		"rsc@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-10-25 00:45:31.132190",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6760045/diff/3002/src/pkg/io/io.go\nFile src/pkg/io/io.go (right):\n\nhttps://codereview.appspot.com/6760045/diff/3002/src/pkg/io/io.go#newcode259\nsrc/pkg/io/io.go:259: // If w already implements a WriteByte method, it is invoked directly.\ns/already //\n\n(and for WriteString too)",
			"disapproval": false,
			"date": "2012-10-25 00:48:55.505730",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "API proposal.  Mostly for symmetry with io.WriteString, but also because\r\nI've now seen this a number of places.\r\n\r\nOn Wed, Oct 24, 2012 at 5:45 PM, <bradfitz@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> io: add a WriteByte function, like WriteString\r\n>\r\n> Please review this at http://codereview.appspot.com/**6760045/<http://codereview.appspot.com/6760045/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/io/io.go\r\n>\r\n>\r\n> Index: src/pkg/io/io.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/io/io.go\r\n> +++ b/src/pkg/io/io.go\r\n> @@ -251,6 +251,20 @@\r\n>         return w.Write([]byte(s))\r\n>  }\r\n>\r\n> +type byteWriter interface {\r\n> +       WriteByte(c byte) error\r\n> +}\r\n> +\r\n> +// WriteByte writes the byte c to w.\r\n> +// If w already implements a WriteByte method, it is invoked directly.\r\n> +func WriteByte(w Writer, c byte) error {\r\n> +       if bw, ok := w.(byteWriter); ok {\r\n> +               return bw.WriteByte(c)\r\n> +       }\r\n> +       _, err := w.Write([]byte{c})\r\n> +       return err\r\n> +}\r\n> +\r\n>  // ReadAtLeast reads from r into buf until it has read at least min bytes.\r\n>  // It returns the number of bytes copied and an error if fewer bytes were\r\n> read.\r\n>  // The error is EOF only if no bytes were read.\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-25 00:47:02.058670",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am afraid that this will encourage inefficient code that repeatedly calls io.WriteByte.\n\nInstead, programs should instead sniff an io.Writer for interface{ WriteByte(byte) error } and use a bufio.Writer if not supported.\n\nFor example, this is what compress/lzw/writer.go, exp/html/render.go and image/jpeg/writer.go all do.\n\nFWIW, I was about to mail a change that added the io.ByteWriter interface type but nothing else.\n\nhttps://codereview.appspot.com/6760045/diff/3002/src/pkg/io/io.go\nFile src/pkg/io/io.go (right):\n\nhttps://codereview.appspot.com/6760045/diff/3002/src/pkg/io/io.go#newcode254\nsrc/pkg/io/io.go:254: type byteWriter interface {\nExport this type? We already have io.ByteReader.",
			"disapproval": false,
			"date": "2012-10-25 04:31:59.310980",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Oct 24, 2012 at 9:31 PM, <nigeltao@golang.org> wrote:\r\n\r\n> I am afraid that this will encourage inefficient code that repeatedly\r\n> calls io.WriteByte.\r\n>\r\n\r\nYeah, I was worrying about that too a bit.  I was hoping it could be\r\noptimized to be an acceptable pattern, though, but maybe it can't.\r\n\r\n\r\n> Instead, programs should instead sniff an io.Writer for interface{\r\n> WriteByte(byte) error } and use a bufio.Writer if not supported.\r\n>\r\n\r\nFair enough.\r\n\r\n\r\n>\r\n> For example, this is what compress/lzw/writer.go, exp/html/render.go and\r\n> image/jpeg/writer.go all do.\r\n>\r\n> FWIW, I was about to mail a change that added the io.ByteWriter\r\n> interface type but nothing else.\r\n\r\n\r\nK, let's just do that.\r\n\r\n\r\n>\r\n> https://codereview.appspot.**com/6760045/diff/3002/src/pkg/**io/io.go<https://codereview.appspot.com/6760045/diff/3002/src/pkg/io/io.go>\r\n> File src/pkg/io/io.go (right):\r\n>\r\n> https://codereview.appspot.**com/6760045/diff/3002/src/pkg/**\r\n> io/io.go#newcode254<https://codereview.appspot.com/6760045/diff/3002/src/pkg/io/io.go#newcode254>\r\n> src/pkg/io/io.go:254: type byteWriter interface {\r\n> Export this type? We already have io.ByteReader.\r\n>\r\n> https://codereview.appspot.**com/6760045/<https://codereview.appspot.com/6760045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-25 15:43:00.999700",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No. This is the wrong thing to do.\r\n\r\nYou don't want to do this on every byte. You want to do this once, and\r\nif the underlying writer cannot take bytes, you wrap it in something\r\nthat can, like by calling bufio.NewWriter.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-10-25 21:37:03.649000",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM\r\n",
			"disapproval": true,
			"date": "2012-10-25 21:37:13.647350",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, nigeltao@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-29 10:44:01.884060",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6760045/diff/13001/src/pkg/io/io.go\nFile src/pkg/io/io.go (right):\n\nhttp://codereview.appspot.com/6760045/diff/13001/src/pkg/io/io.go#newcode223\nsrc/pkg/io/io.go:223: // are buffered in-memory.\ntwo weasel-word adverbs in two sentences.\nthe interface cannot guarantee that it is efficient, so the documentation for the interface should just say what it does.\nby the same token, the interface cannot guarantee how the implementations work.\n\nwhat are you trying to achieve in this comment? what's wrong with plain,\n\nByteWriter is the interface that wraps the WriteByte method.\n\n-rob",
			"disapproval": false,
			"date": "2012-10-29 21:14:15.470600",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, nigeltao@golang.org, rsc@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-29 21:55:08.589430",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "That's fine.\r\n\r\nI was trying to discourage dumb implementations. But whatever.\r\n On Oct 29, 2012 10:14 PM, <r@golang.org> wrote:\r\n\r\n>\r\n> http://codereview.appspot.com/**6760045/diff/13001/src/pkg/io/**io.go<http://codereview.appspot.com/6760045/diff/13001/src/pkg/io/io.go>\r\n> File src/pkg/io/io.go (right):\r\n>\r\n> http://codereview.appspot.com/**6760045/diff/13001/src/pkg/io/**\r\n> io.go#newcode223<http://codereview.appspot.com/6760045/diff/13001/src/pkg/io/io.go#newcode223>\r\n> src/pkg/io/io.go:223: // are buffered in-memory.\r\n> two weasel-word adverbs in two sentences.\r\n> the interface cannot guarantee that it is efficient, so the\r\n> documentation for the interface should just say what it does.\r\n> by the same token, the interface cannot guarantee how the\r\n> implementations work.\r\n>\r\n> what are you trying to achieve in this comment? what's wrong with plain,\r\n>\r\n> ByteWriter is the interface that wraps the WriteByte method.\r\n>\r\n> -rob\r\n>\r\n> http://codereview.appspot.com/**6760045/<http://codereview.appspot.com/6760045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-29 21:19:05.892260",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-10-29 22:47:36.319720",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=64292110c35b ***\n\nio: add ByteWriter interface\n\nAPI change.\n\nR=golang-dev, dsymonds, nigeltao, rsc, r\nCC=golang-dev\nhttp://codereview.appspot.com/6760045",
			"disapproval": false,
			"date": "2012-10-30 09:51:36.401190",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6760045: io: add ByteWriter interface",
	"created": "2012-10-25 00:45:12.390930",
	"patchsets": [
		1,
		2001,
		3002,
		13001,
		17002,
		14003
	],
	"modified": "2012-10-30 09:51:38.165350",
	"closed": true,
	"issue": 6760045
}