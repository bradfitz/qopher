{
	"description": "cmd/[568]g: correct freeing of allocated Regs.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"remy@archlinux.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It looks like maybe the C compilers are okay?\nOr is r1 != lastr for some reason I'm missing?\n\nI don't mind changing them, but I'd like to understand that lastr really is the last instruction, that code was not reordered by one of the passes.\n\nMaybe we should introduce a new loop to find the true end of the list? I think once you get past the initial creation loop lastr may not be reliable anymore, which is why the C compiler uses r1.\n\nSo maybe the end of each of these should say:\n\nfor(r1=firstr; r1 && r1->link; r1=r1->link)\n    ;\nif(r1 != R) {\n     r1->link = freer;\n     freer = firstr;\n}\n\n?\n\nhttp://codereview.appspot.com/6281050/diff/9001/src/cmd/6c/reg.c\nFile src/cmd/6c/reg.c (right):\n\nhttp://codereview.appspot.com/6281050/diff/9001/src/cmd/6c/reg.c#newcode670\nsrc/cmd/6c/reg.c:670: if(lastr != R) {\nIn this case the for(r=first...) loop at line 654 has left r1 set to the right thing, no?",
			"disapproval": false,
			"date": "2012-06-04 21:01:35.781413",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-06-04 20:57:44.060180",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f1028a23b059 ***\n\ncmd/[568]g: correct freeing of allocated Regs.\n\nR=golang-dev, rsc\nCC=golang-dev, remy\nhttp://codereview.appspot.com/6281050",
			"disapproval": false,
			"date": "2012-06-05 04:43:51.869958",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-04 21:24:56.616949",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-06-04 20:09:33.878687",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nDo the C compilers need this fix too?\r\n",
			"disapproval": false,
			"date": "2012-06-04 20:47:05.010397",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-04 20:55:43.161300",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It seems so.",
			"disapproval": false,
			"date": "2012-06-04 20:48:53.314289",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "hang on a minute\r\n",
			"disapproval": false,
			"date": "2012-06-04 20:58:29.662218",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Reverts the changes to the C compilers. In the Go compilers i don't see anywhere where the r->link's could be modified.\n\nhttp://codereview.appspot.com/6281050/diff/9001/src/cmd/6c/reg.c\nFile src/cmd/6c/reg.c (right):\n\nhttp://codereview.appspot.com/6281050/diff/9001/src/cmd/6c/reg.c#newcode658\nsrc/cmd/6c/reg.c:658: r1 = r;\nah, I see the last assignment of r1 is here, so it becomes naturally equal to lastr.\n\nhttp://codereview.appspot.com/6281050/diff/9001/src/cmd/6c/reg.c#newcode670\nsrc/cmd/6c/reg.c:670: if(lastr != R) {\nYes, so the C compilers are ok.\n\nhttp://codereview.appspot.com/6281050/diff/9001/src/cmd/6g/reg.c\nFile src/cmd/6g/reg.c (right):\n\nhttp://codereview.appspot.com/6281050/diff/9001/src/cmd/6g/reg.c#newcode643\nsrc/cmd/6g/reg.c:643: r1 = r->link;\nhere it seems r1 was used for something else so it is always nil in the end.",
			"disapproval": false,
			"date": "2012-06-04 21:25:55.294396",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nyou seem to have reverted 6g. please put it back.\r\nonce it's back, feel free to submit.\r\n",
			"disapproval": false,
			"date": "2012-06-04 23:15:53.489127",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-05 04:35:21.101647",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6281050: cmd/[568]g: correct freeing of allocated Regs.",
	"created": "2012-06-04 20:08:37.720395",
	"patchsets": [
		1,
		1002,
		3004,
		9001,
		13001,
		12002,
		19001
	],
	"modified": "2012-06-12 06:30:59.357062",
	"closed": true,
	"issue": 6281050
}