{
	"description": "os/exec: make sure file is not closed early in leaked fd test\n\nWithout this change, fd3 can be collected by the garbage\ncollector and finalized, which causes the file descriptor to\nbe closed, which causes the call to os.Open to return 3 rather\nthan the expected descriptor number.",
	"cc": [
		"golang-dev@googlegroups.com",
		"gri@golang.org",
		"bradfitz@google.com",
		"bradfitz@golang.org",
		"iant@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Brad Fitzpatrick <bradfitz@google.com> writes:\n\n> You say this prevents the GC from closing it, so the solution is to close\n> it explicitly?\n> The child process this is running in is about to os.Exit(0) right after\n> this anyway.\n\nThe problem is that when using gccgo the reference to fd3 can be lost\nwhile running the wantfd loop.  In that case, fd3 can be garbage\ncollected during the loop, and therefore closed by the os.File\nfinalizer.  The next time around the loop, os.Open will return 3, and\nthe test will fail.\n\nTo keep the garbage collector from collecting fd3 I don't have to close\nfd3 after the loop, I just have to use it in some way.\n\nIan\n",
			"disapproval": false,
			"date": "2012-02-01 23:18:17.031821",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-01 20:43:34.338906",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"bradfitz@google.com",
				"bradfitz@golang.org",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Uploaded with comment.\n\nbradfitz: LGTY?",
			"disapproval": false,
			"date": "2012-02-01 23:20:00.866028",
			"approval": false
		},
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't follow.\n\nYou say this prevents the GC from closing it, so the solution is to close\nit explicitly?\nThe child process this is running in is about to os.Exit(0) right after\nthis anyway.\n\n\nOn Wed, Feb 1, 2012 at 12:43 PM, <iant@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> os/exec: make sure file is not closed early in leaked fd test\n>\n> Without this change, fd3 can be collected by the garbage\n> collector and finalized, which causes the file descriptor to\n> be closed, which causes the call to os.Open to return 3 rather\n> than the expected descriptor number.\n>\n> Please review this at http://codereview.appspot.com/**5607056/<http://codereview.appspot.com/5607056/>\n>\n> Affected files:\n>  M src/pkg/os/exec/exec_test.go\n>\n>\n> Index: src/pkg/os/exec/exec_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/os/exec/exec_test.go\n> +++ b/src/pkg/os/exec/exec_test.go\n> @@ -309,6 +309,7 @@\n>                                f.Close()\n>                        }\n>                }\n> +               fd3.Close()\n>                os.Stderr.Write(bs)\n>        case \"exit\":\n>                n, _ := strconv.Atoi(args[0])\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-01 20:55:07.795454",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5607056/diff/1/src/pkg/os/exec/exec_test.go\nFile src/pkg/os/exec/exec_test.go (right):\n\nhttp://codereview.appspot.com/5607056/diff/1/src/pkg/os/exec/exec_test.go#newcode312\nsrc/pkg/os/exec/exec_test.go:312: fd3.Close()\nperhaps add a comment that this is a simply a statement that makes use of fd3 so that the value cannot be GC'ed before",
			"disapproval": false,
			"date": "2012-02-01 20:54:55.174651",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 1, 2012 at 12:54 PM, <gri@golang.org> wrote:\n\n> LGTM\n>\n>\n> http://codereview.appspot.com/**5607056/diff/1/src/pkg/os/**\n> exec/exec_test.go<http://codereview.appspot.com/5607056/diff/1/src/pkg/os/exec/exec_test.go>\n> File src/pkg/os/exec/exec_test.go (right):\n>\n> http://codereview.appspot.com/**5607056/diff/1/src/pkg/os/**\n> exec/exec_test.go#newcode312<http://codereview.appspot.com/5607056/diff/1/src/pkg/os/exec/exec_test.go#newcode312>\n> src/pkg/os/exec/exec_test.go:**312: fd3.Close()\n> perhaps add a comment that this is a simply a statement that makes use\n> of fd3 so that the value cannot be GC'ed before\n>\n\nWhoa, really?\n",
			"disapproval": false,
			"date": "2012-02-01 20:56:55.298865",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"bradfitz@google.com",
				"bradfitz@golang.org",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=855fc8e73259 ***\n\nos/exec: make sure file is not closed early in leaked fd test\n\nWithout this change, fd3 can be collected by the garbage\ncollector and finalized, which causes the file descriptor to\nbe closed, which causes the call to os.Open to return 3 rather\nthan the expected descriptor number.\n\nR=golang-dev, gri, bradfitz, bradfitz, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5607056",
			"disapproval": false,
			"date": "2012-02-02 00:37:08.585095",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nI'm now on my toes to look out for this class of bug in the future.\n\n\nOn Wed, Feb 1, 2012 at 3:20 PM, <iant@golang.org> wrote:\n\n> Uploaded with comment.\n>\n> bradfitz: LGTY?\n>\n>\n> http://codereview.appspot.com/**5607056/<http://codereview.appspot.com/5607056/>\n>\n",
			"disapproval": false,
			"date": "2012-02-01 23:28:16.738323",
			"approval": true
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 5607056: os/exec: make sure file is not closed early in leaked f...",
	"created": "2012-02-01 20:43:31.001013",
	"patchsets": [
		1,
		1003,
		3003
	],
	"modified": "2012-02-02 00:37:11.052295",
	"closed": true,
	"issue": 5607056
}