{
	"description": "cmd/cgo: use intgo, not int, for string and slice structures\n\nFixes issue 5548.",
	"cc": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-05-23 18:19:42.206780",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i was thinking about the same clobber stack for tests, but\nmy version couldn't reliably reproduce the test failure.\n\nthe test code looks good to me.\n\ni have a few questions about cmd/cgo/out.go.\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go\nFile src/cmd/cgo/out.go (left):\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go#oldcode940\nsrc/cmd/cgo/out.go:940: return &Type{Size: p.PtrSize + 8, Align: p.PtrSize, C: c(\"GoSlice\")}\ni think we should also change Size to p.PtrSize * 3.\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go\nFile src/cmd/cgo/out.go (right):\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go#newcode977\nsrc/cmd/cgo/out.go:977: // The string data is 1 pointer + 1 int, but this always\nplease update this comment.\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go#newcode1035\nsrc/cmd/cgo/out.go:1035: typedef long long intgo;\non LP64 systems, seems long suffices for 64-bit int.\nam i missing something?\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go#newcode1037\nsrc/cmd/cgo/out.go:1037: typedef int intgo;\nwhy use int (instead of long) for intgo here?",
			"disapproval": false,
			"date": "2013-05-23 18:41:36.720780",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2013-05-23 19:24:40.759130",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the comments.\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go\nFile src/cmd/cgo/out.go (left):\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go#oldcode940\nsrc/cmd/cgo/out.go:940: return &Type{Size: p.PtrSize + 8, Align: p.PtrSize, C: c(\"GoSlice\")}\nOn 2013/05/23 18:41:36, minux wrote:\n> i think we should also change Size to p.PtrSize * 3.\n\nDone.\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go\nFile src/cmd/cgo/out.go (right):\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go#newcode977\nsrc/cmd/cgo/out.go:977: // The string data is 1 pointer + 1 int, but this always\nOn 2013/05/23 18:41:36, minux wrote:\n> please update this comment.\n\nDone.\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go#newcode1035\nsrc/cmd/cgo/out.go:1035: typedef long long intgo;\nOn 2013/05/23 18:41:36, minux wrote:\n> on LP64 systems, seems long suffices for 64-bit int.\n> am i missing something?\n\nYou aren't missing anything.  I just want to match the code in gccProlog here, since gccProlog verifies that \"long long\" is exactly 64 bits.\n\nhttps://codereview.appspot.com/9643044/diff/1/src/cmd/cgo/out.go#newcode1037\nsrc/cmd/cgo/out.go:1037: typedef int intgo;\nOn 2013/05/23 18:41:36, minux wrote:\n> why use int (instead of long) for intgo here?\n\nAgain because gccProlog verifies that int is 32 bits.",
			"disapproval": false,
			"date": "2013-05-23 19:23:06.935210",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=fa6f9cac3256 ***\n\ncmd/cgo: use intgo, not int, for string and slice structures\n\nFixes issue 5548.\n\nR=golang-dev, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/9643044",
			"disapproval": false,
			"date": "2013-05-24 05:51:15.627980",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 9643044: cmd/cgo: use intgo, not int, for string and slice structures",
	"created": "2013-05-23 18:19:33.803320",
	"patchsets": [
		1,
		4001,
		8001
	],
	"modified": "2013-05-24 05:51:15.627980",
	"closed": true,
	"issue": 9643044
}