{
	"description": "encoding/base64: ignore new line characters during decode.\n\nFixes issue 2541.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5610045/diff/5/src/pkg/encoding/base64/base64.go\nFile src/pkg/encoding/base64/base64.go (right):\n\nhttp://codereview.appspot.com/5610045/diff/5/src/pkg/encoding/base64/base64.go#newcode226\nsrc/pkg/encoding/base64/base64.go:226: if in == '\\r' || in == '\\n' {\nwhat are we supposed to do with spaces? too bad this is an internet standard so we have no way to know what's actually the right thing to do (it amuses me sardonically that the 'issue' you're addressing is that the code implements the RFC.)\n\nhttp://codereview.appspot.com/5610045/diff/5/src/pkg/encoding/base64/base64.go#newcode228\nsrc/pkg/encoding/base64/base64.go:228: j--\nnot a fan of this style. how about instead just taking the j++ out of the loop header and putting it after this block?",
			"disapproval": false,
			"date": "2012-02-01 06:11:22.427797",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-01 05:55:58.094213",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5610045/diff/5/src/pkg/encoding/base64/base64.go\nFile src/pkg/encoding/base64/base64.go (right):\n\nhttp://codereview.appspot.com/5610045/diff/5/src/pkg/encoding/base64/base64.go#newcode226\nsrc/pkg/encoding/base64/base64.go:226: if in == '\\r' || in == '\\n' {\nOn 2012/02/01 06:11:22, r wrote:\n> what are we supposed to do with spaces? too bad this is an internet standard so\n> we have no way to know what's actually the right thing to do (it amuses me\n> sardonically that the 'issue' you're addressing is that the code implements the\n> RFC.)\n\nI don't know if spaces matter much. \\r and \\n crop up because various situations automatically wrap base64, but they don't normally insert spaces. I think it's fine to leave spaces as bad input at least for now.\n\nhttp://codereview.appspot.com/5610045/diff/5/src/pkg/encoding/base64/base64.go#newcode228\nsrc/pkg/encoding/base64/base64.go:228: j--\nOn 2012/02/01 06:11:22, r wrote:\n> not a fan of this style. how about instead just taking the j++ out of the loop\n> header and putting it after this block?\n\nIt's got to go at the bottom of the loop, but done.",
			"disapproval": false,
			"date": "2012-02-01 06:19:43.078598",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-01 08:07:54.882699",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-01 06:15:05.738411",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=e9677eca3648 ***\n\nencoding/base64: ignore new line characters during decode.\n\nFixes issue 2541.\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5610045",
			"disapproval": false,
			"date": "2012-02-01 08:13:46.355942",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you.  Please do the same to base32.\n",
			"disapproval": false,
			"date": "2012-02-02 22:18:32.987603",
			"approval": false
		}
	],
	"owner_email": "dsymonds@golang.org",
	"private": false,
	"base_url": "",
	"owner": "dsymonds",
	"subject": "code review 5610045: encoding/base64: ignore new line characters during decode.",
	"created": "2012-02-01 05:55:31.807067",
	"patchsets": [
		1,
		2001,
		5,
		2003,
		7001
	],
	"modified": "2012-02-02 22:18:33.163905",
	"closed": true,
	"issue": 5610045
}