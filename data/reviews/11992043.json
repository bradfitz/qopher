{
	"description": "all: move examples into package *_test.\n\nFixes issue 5677.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-07-28 16:26:16.363880",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n On Jul 28, 2013 9:26 AM, <remyoudompheng@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> all: move examples into package *_test.\r\n>\r\n> Fixes issue 5677.\r\n>\r\n> Please review this at https://codereview.appspot.**com/11992043/<https://codereview.appspot.com/11992043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/crypto/des/des_test.go\r\n>   A src/pkg/crypto/des/example_**test.go\r\n>   A src/pkg/crypto/md5/example_**test.go\r\n>   M src/pkg/crypto/md5/md5_test.go\r\n>   A src/pkg/crypto/sha1/example_**test.go\r\n>   M src/pkg/crypto/sha1/sha1_test.**go\r\n>\r\n>\r\n> Index: src/pkg/crypto/des/des_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/crypto/des/des_test.**go\r\n> +++ b/src/pkg/crypto/des/des_test.**go\r\n> @@ -1504,24 +1504,6 @@\r\n>         }\r\n>  }\r\n>\r\n> -func ExampleNewTripleDESCipher() {\r\n> -       // NewTripleDESCipher can also be used when EDE2 is required by\r\n> -       // duplicating the first 8 bytes of the 16-byte key.\r\n> -       ede2Key := []byte(\"example key 1234\")\r\n> -\r\n> -       var tripleDESKey []byte\r\n> -       tripleDESKey = append(tripleDESKey, ede2Key[:16]...)\r\n> -       tripleDESKey = append(tripleDESKey, ede2Key[:8]...)\r\n> -\r\n> -       _, err := NewTripleDESCipher(**tripleDESKey)\r\n> -       if err != nil {\r\n> -               panic(err)\r\n> -       }\r\n> -\r\n> -       // See crypto/cipher for how to use a cipher.Block for encryption\r\n> and\r\n> -       // decryption.\r\n> -}\r\n> -\r\n>  func BenchmarkEncrypt(b *testing.B) {\r\n>         tt := encryptDESTests[0]\r\n>         c, err := NewCipher(tt.key)\r\n> Index: src/pkg/crypto/des/example_**test.go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/src/pkg/crypto/des/example_**test.go\r\n> @@ -0,0 +1,25 @@\r\n> +// Copyright 2013 The Go Authors. All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +package des_test\r\n> +\r\n> +import \"crypto/des\"\r\n> +\r\n> +func ExampleNewTripleDESCipher() {\r\n> +       // NewTripleDESCipher can also be used when EDE2 is required by\r\n> +       // duplicating the first 8 bytes of the 16-byte key.\r\n> +       ede2Key := []byte(\"example key 1234\")\r\n> +\r\n> +       var tripleDESKey []byte\r\n> +       tripleDESKey = append(tripleDESKey, ede2Key[:16]...)\r\n> +       tripleDESKey = append(tripleDESKey, ede2Key[:8]...)\r\n> +\r\n> +       _, err := des.NewTripleDESCipher(**tripleDESKey)\r\n> +       if err != nil {\r\n> +               panic(err)\r\n> +       }\r\n> +\r\n> +       // See crypto/cipher for how to use a cipher.Block for encryption\r\n> and\r\n> +       // decryption.\r\n> +}\r\n> Index: src/pkg/crypto/md5/example_**test.go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/src/pkg/crypto/md5/example_**test.go\r\n> @@ -0,0 +1,19 @@\r\n> +// Copyright 2013 The Go Authors. All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +package md5_test\r\n> +\r\n> +import (\r\n> +       \"crypto/md5\"\r\n> +       \"fmt\"\r\n> +       \"io\"\r\n> +)\r\n> +\r\n> +func ExampleNew() {\r\n> +       h := md5.New()\r\n> +       io.WriteString(h, \"The fog is getting thicker!\")\r\n> +       io.WriteString(h, \"And Leon's getting laaarger!\")\r\n> +       fmt.Printf(\"%x\", h.Sum(nil))\r\n> +       // Output: e2c569be17396eca2a2e3c11578123**ed\r\n> +}\r\n> Index: src/pkg/crypto/md5/md5_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/crypto/md5/md5_test.**go\r\n> +++ b/src/pkg/crypto/md5/md5_test.**go\r\n> @@ -105,14 +105,6 @@\r\n>         }\r\n>  }\r\n>\r\n> -func ExampleNew() {\r\n> -       h := New()\r\n> -       io.WriteString(h, \"The fog is getting thicker!\")\r\n> -       io.WriteString(h, \"And Leon's getting laaarger!\")\r\n> -       fmt.Printf(\"%x\", h.Sum(nil))\r\n> -       // Output: e2c569be17396eca2a2e3c11578123**ed\r\n> -}\r\n> -\r\n>  var bench = New()\r\n>  var buf = make([]byte, 8192+1)\r\n>  var sum = make([]byte, bench.Size())\r\n> Index: src/pkg/crypto/sha1/example_**test.go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/src/pkg/crypto/sha1/example_**test.go\r\n> @@ -0,0 +1,18 @@\r\n> +// Copyright 2009 The Go Authors. All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +package sha1_test\r\n> +\r\n> +import (\r\n> +       \"crypto/sha1\"\r\n> +       \"fmt\"\r\n> +       \"io\"\r\n> +)\r\n> +\r\n> +func ExampleNew() {\r\n> +       h := sha1.New()\r\n> +       io.WriteString(h, \"His money is twice tainted: 'taint yours and\r\n> 'taint mine.\")\r\n> +       fmt.Printf(\"% x\", h.Sum(nil))\r\n> +       // Output: 59 7f 6a 54 00 10 f9 4c 15 d7 18 06 a9 9a 2c 87 10 e7\r\n> 47 bd\r\n> +}\r\n> Index: src/pkg/crypto/sha1/sha1_test.**go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/crypto/sha1/sha1_**test.go\r\n> +++ b/src/pkg/crypto/sha1/sha1_**test.go\r\n> @@ -76,13 +76,6 @@\r\n>         }\r\n>  }\r\n>\r\n> -func ExampleNew() {\r\n> -       h := New()\r\n> -       io.WriteString(h, \"His money is twice tainted: 'taint yours and\r\n> 'taint mine.\")\r\n> -       fmt.Printf(\"% x\", h.Sum(nil))\r\n> -       // Output: 59 7f 6a 54 00 10 f9 4c 15 d7 18 06 a9 9a 2c 87 10 e7\r\n> 47 bd\r\n> -}\r\n> -\r\n>  var bench = New()\r\n>  var buf = make([]byte, 8192)\r\n>\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-28 16:58:47.917220",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=87fd884c846b ***\n\nall: move examples into package *_test.\n\nFixes issue 5677.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/11992043",
			"disapproval": false,
			"date": "2013-07-28 23:26:10.598240",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 11992043: all: move examples into package *_test.",
	"created": "2013-07-28 16:25:29.721630",
	"patchsets": [
		1,
		3001,
		5001,
		9001
	],
	"modified": "2013-07-28 23:26:12.299240",
	"closed": true,
	"issue": 11992043
}