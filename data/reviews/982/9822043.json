{
	"description": "undo CL 9805043 / 776aba85ece8\n\nmultiple failures on amd64\n\n\u00ab\u00ab\u00ab original CL description\nruntime: introduce helper persistentalloc() function\nIt is a caching wrapper around SysAlloc() that can allocate small chunks.\nUse it for symtab allocations. Reduces number of symtab walks from 4 to 3\n(reduces buildfuncs time from 10ms to 7.5ms on a large binary,\nreduces initial heap size by 680K on the same binary).\nAlso can be used for type info allocation, itab allocation.\nThere are also several places in GC where we do the same thing,\nthey can be changed to use persistentalloc().\nAlso can be used in FixAlloc, because each instance of FixAlloc allocates\nin 128K regions, which is too eager.\n\nR=golang-dev, daniel.morsing, khr\nCC=golang-dev\nhttps://codereview.appspot.com/9805043\n\u00bb\u00bb\u00bb",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-05-28 07:13:19.560780",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=7e6f043f2000 ***\n\nundo CL 9805043 / 776aba85ece8\n\nmultiple failures on amd64\n\n\u00ab\u00ab\u00ab original CL description\nruntime: introduce helper persistentalloc() function\nIt is a caching wrapper around SysAlloc() that can allocate small chunks.\nUse it for symtab allocations. Reduces number of symtab walks from 4 to 3\n(reduces buildfuncs time from 10ms to 7.5ms on a large binary,\nreduces initial heap size by 680K on the same binary).\nAlso can be used for type info allocation, itab allocation.\nThere are also several places in GC where we do the same thing,\nthey can be changed to use persistentalloc().\nAlso can be used in FixAlloc, because each instance of FixAlloc allocates\nin 128K regions, which is too eager.\n\nR=golang-dev, daniel.morsing, khr\nCC=golang-dev\nhttps://codereview.appspot.com/9805043\n\u00bb\u00bb\u00bb\n\nR=golang-dev\nCC=golang-dev\nhttps://codereview.appspot.com/9822043",
			"disapproval": false,
			"date": "2013-05-28 07:15:09.495520",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 9822043: undo CL 9805043 / 776aba85ece8",
	"created": "2013-05-28 07:12:17.439110",
	"patchsets": [
		1,
		2001,
		5001,
		9001
	],
	"modified": "2013-05-28 07:15:10.325250",
	"closed": true,
	"issue": 9822043
}