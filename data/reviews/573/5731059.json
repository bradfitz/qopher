{
	"description": "cmd/dist: use correct hg tag for go version\n\nWhen looking for suitable tag always start\nfrom current version, not the tip.",
	"cc": [
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/05 03:48:26, minux wrote:\n> >\n> ..., I definitely have local\n> modifications (at least this CL\n> is applied), I think we should have a way to indicate that.\n> (Or we won't be able to tell that from people's issue reports.)\n\nI agree, but that is not what we do now. dist uses\n\nhg log --template \" +{node|short}\" -r .\n\nto fetch revision number, not\n\nhg id\n\nSo, you will not get \"+\" at the end of it even if there are pending changes. Lets decide what our version tag should look like first, then we could change it.\n\nAlex",
			"disapproval": false,
			"date": "2012-03-05 03:57:06.390094",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-05 00:46:19.851902",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Here is issue report: http://goo.gl/fv9pB.\n\nAlex",
			"disapproval": false,
			"date": "2012-03-05 00:47:24.021628",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 5, 2012 at 8:47 AM, <alex.brainman@gmail.com> wrote:\n\n> Here is issue report: http://goo.gl/fv9pB.\n>\nI've tested weekly.2012-02-14 with this CL, the output of 'go version' is:\ngo version weekly.2012-02-14\n\nI think it fixes the problem, but it also removes the version hash from\noutput,\nand we can't see if there is local modifications without that.\n",
			"disapproval": false,
			"date": "2012-03-05 02:26:17.472190",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/05 02:26:17, minux wrote:\n> \n> ..., but it also removes the version hash from output,\n> and we can't see if there is local modifications without that.\n\nThis is different issue altogether. I agree, perhaps, that information is useful, but it it not how it is documented in dist:\n\n// If this tag matches the current checkout\n// exactly (no \"+\" yet), don't show extra\n// revision information.\n\nSo we suppose to show tag only, if current version has tag.\n\nAlso dist uses\n\nhg log --template \" +{node|short}\" -r .\n\nto fetch revision number, not\n\nhg id\n\nSo, you will not get \"+\" at the end of it even if there are pending changes. Lets wait for someone to decide what is correct approach here.\n\nAlex",
			"disapproval": false,
			"date": "2012-03-05 03:34:09.632755",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 5, 2012 at 11:57 AM, <alex.brainman@gmail.com> wrote:\n>\n>  hg log --template \" +{node|short}\" -r .\n>\n> to fetch revision number, not\n>\n> hg id\n>\n> So, you will not get \"+\" at the end of it even if there are pending\n> changes. Lets decide what our version tag should look like first, then\n> we could change it.\n>\nI think the output of \u2019hg id -i\u2018 is perfect here, and look just like the\noriginal output.\n(Of course, I don't mind not displaying the version hash when it is at\nprecise the\nweekly and no local modification is made)\n",
			"disapproval": false,
			"date": "2012-03-05 04:07:03.788843",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 5, 2012 at 11:34 AM, <alex.brainman@gmail.com> wrote:\n\n> On 2012/03/05 02:26:17, minux wrote:\n>\n>  ..., but it also removes the version hash from output,\n>>\n>> and we can't see if there is local modifications without that.\n>>\n>\n> This is different issue altogether. I agree, perhaps, that information\n> is useful, but it it not how it is documented in dist:\n>\n> // If this tag matches the current checkout\n> // exactly (no \"+\" yet), don't show extra\n> // revision information.\n>\n> So we suppose to show tag only, if current version has tag.\n>\nThat's correct, but regarding my test, I definitely have local\nmodifications (at least this CL\nis applied), I think we should have a way to indicate that.\n(Or we won't be able to tell that from people's issue reports.)\n",
			"disapproval": false,
			"date": "2012-03-05 03:48:26.647745",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/05 04:07:03, minux wrote:\n> >\n> I think the output of \u2019hg id -i\u2018 is perfect here, and look just like the\n> original output.\n\nAre you sure? We will have 2 \"+\" signs, like\n\nweekly.2012-02-22 +5f45263f36dd+\n\nLooks confusing to me.\n\nAlex",
			"disapproval": false,
			"date": "2012-03-05 04:19:05.209213",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/05 04:19:05, brainman wrote:\n> On 2012/03/05 04:07:03, minux wrote:\n> > >\n> > I think the output of \u2019hg id -i\u2018 is perfect here, and look just like the\n> > original output.\n> \n> Are you sure? We will have 2 \"+\" signs, like\n> \n> weekly.2012-02-22 +5f45263f36dd+\nSorry, my intent is:\nweekly.2012-02-22 5f45263f36dd+\n~~~~~~~~~~~~~~~~~\nnearest tag/branch\n                  ~~~~~~~~~~~~~\n       if not exact on some tag, add this part.\n       and if with local modifications, add '+'.\n       this part is the output of 'hg id -i'",
			"disapproval": false,
			"date": "2012-03-05 10:43:09.647688",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Mar 4, 2012 at 19:46,  <alex.brainman@gmail.com> wrote:\n> cmd/dist: use correct hg tag for go version\n>\n> When looking for suitable tag always start\n> from current version, not the tip.\n\nWhat version string did you see that prompted this?\n\nYou wrote that you are trying to get rid of the second plus\nin weekly.2012-02-22 +5f45263f36dd+, but I don't think the\ncurrent code would generate that.  It would find tag = \"weekly.2012-02-22\"\nin the code you are editing, and then after that it would execute\n\nhg log --template '+{node|short}' -r .\n\nwhich does not add a trailing +.  My tree always has local\nmodifications but my current Go version string is\n\ngo version weekly.2012-03-04 +faadc270f4d8\n\n(with no trailing +).\n\nRuss\n",
			"disapproval": false,
			"date": "2012-03-05 21:17:22.359965",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/05 21:17:22, rsc wrote:\n> \n> What version string did you see that prompted this?\n> \n\nHere is issue report: http://goo.gl/fv9pB.\n\nhg clone -u weekly.2012-02-14 http://code.google.com/p/go\ncd go/src\n./make.bash\n../bin/go version\n\nthe output is still: \ngo version weekly.2012-02-22 +43cf9b39b647\n\n(it meant to be \"go version weekly.2012-02-14 ...\")\n\nThe problem here is that our current code works, if we are on the tip. But breaks, if we go to the past.\n\n> You wrote that you are trying to get rid of the second plus\n> in weekly.2012-02-22 +5f45263f36dd+, but I don't think the\n> current code would generate that. ...\n\n\"+\" at the end of revision is something else completely and is not part of this CL (yet). minux.ma suggested (while commenting on this CL) that we should change our logic to have end \"+\". It is not how dist is at this moment, and I am not sure, it is desirable.\n\n> ...  My tree always has local\n> modifications but my current Go version string is\n> \n> go version weekly.2012-03-04 +faadc270f4d8\n> \n> (with no trailing +).\n> \n\nI take it, you do not want trailing +. That is OK. What about this CL as is?\n\nAlex",
			"disapproval": false,
			"date": "2012-03-05 22:20:12.728560",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI do not want the trailing +\n(I worked hard to get rid of it),\nso this CL looks good as is.\n\nThanks for the clarification.",
			"disapproval": false,
			"date": "2012-03-05 22:48:01.137555",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f46217216512 ***\n\ncmd/dist: use correct hg tag for go version\n\nWhen looking for suitable tag always start\nfrom current version, not the tip.\n\nR=minux.ma, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5731059",
			"disapproval": false,
			"date": "2012-03-06 06:21:48.501589",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 6, 2012 at 6:20 AM, <alex.brainman@gmail.com> wrote:\n>\n> The problem here is that our current code works, if we are on the tip.\n> But breaks, if we go to the past.\n>\n>  You wrote that you are trying to get rid of the second plus\n>> in weekly.2012-02-22 +5f45263f36dd+, but I don't think the\n>> current code would generate that. ...\n>>\n>\n> \"+\" at the end of revision is something else completely and is not part\n> of this CL (yet). minux.ma suggested (while commenting on this CL) that\n> we should change our logic to have end \"+\". It is not how dist is at\n> this moment, and I am not sure, it is desirable.\n>\n>  ...  My tree always has local\n>>\n>> modifications but my current Go version string is\n>>\n>\n>  go version weekly.2012-03-04 +faadc270f4d8\n>>\n>\n>  (with no trailing +).\n>>\n>\n> I take it, you do not want trailing +. That is OK. What about this CL as\n> is?\n>\nSorry, but my real intent is not where the '+' should go, but it should\nhave '+'\nif the repo has local modifications. I merely suggested that we use output\nof 'hg id -i' to serve that purpose, which unfortunately has a trailing '+'\nthat\nyou do not like.\n\nI updated the repo to weekly.2012-02-14, applied this CL, build it, and the\noutput of 'go version' is:\ngo version weekly.2012-02-14\n\nI think it really should have a indication that I've made local\nmodifications.\n",
			"disapproval": false,
			"date": "2012-03-06 10:49:25.741178",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 6, 2012 at 05:49, minux <minux.ma@gmail.com> wrote:\n> I think it really should have a indication that I've made local\n> modifications.\n\nSorry, but no.  We did that for a while.\nIt gets annoying that the first time you rebuild\nthe compilers after you make a change, all the\nbinaries you just built are stale.\n\nAlso sometimes the editing that goes on during\nthe bootstrap phase can make hg think the tree is\nmodified when it's really not.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-03-06 14:24:47.824629",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5731059: cmd/dist: use correct hg tag for go version",
	"created": "2012-03-05 00:42:17.196145",
	"patchsets": [
		1,
		1001,
		4001,
		15001
	],
	"modified": "2012-03-06 06:21:51.641837",
	"closed": true,
	"issue": 5731059
}