{
	"description": "gob: don't allocate a slice if there's room to decode already\nFixes issue 2275.",
	"cc": [
		"golang-dev@googlegroups.com",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5082041/diff/4007/src/pkg/gob/decode.go\nFile src/pkg/gob/decode.go (right):\n\nhttp://codereview.appspot.com/5082041/diff/4007/src/pkg/gob/decode.go#newcode388\nsrc/pkg/gob/decode.go:388: // decUint8Slice decodes byte slice and stores through p a slice header\ns/decodes/decodes a/\n\nhttp://codereview.appspot.com/5082041/diff/4007/src/pkg/gob/decode.go#newcode409\nsrc/pkg/gob/decode.go:409: *slice = (*slice)[0:n]\ndoes this have to happen before calling Read?\n\nhttp://codereview.appspot.com/5082041/diff/4007/src/pkg/gob/encoder_test.go\nFile src/pkg/gob/encoder_test.go (right):\n\nhttp://codereview.appspot.com/5082041/diff/4007/src/pkg/gob/encoder_test.go#newcode590\nsrc/pkg/gob/encoder_test.go:590: t.Errorf(\"bytes: encode:: %s\", err)\ndouble :: intended?\n\nhttp://codereview.appspot.com/5082041/diff/4007/src/pkg/gob/encoder_test.go#newcode613\nsrc/pkg/gob/encoder_test.go:613: t.Errorf(\"ints: encode:: %s\", err)\nditto",
			"disapproval": false,
			"date": "2011-09-19 23:46:06.446286",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-19 23:12:16.512604",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-19 23:28:10.641321",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-19 23:32:49.230318",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=7769e10bd45e ***\n\ngob: don't allocate a slice if there's room to decode already\nFixes issue 2275.\n\nR=golang-dev, gri\nCC=golang-dev\nhttp://codereview.appspot.com/5082041",
			"disapproval": false,
			"date": "2011-09-19 23:55:13.447430",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5082041: gob: don't allocate a slice if there's room to decode a...",
	"created": "2011-09-19 23:12:09.139199",
	"patchsets": [
		1,
		3001,
		5004,
		6001,
		7004,
		4007,
		14001
	],
	"modified": "2011-09-19 23:55:14.877497",
	"closed": true,
	"issue": 5082041
}