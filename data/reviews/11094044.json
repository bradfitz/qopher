{
	"description": "goprotobuf: fix integer overflows.\n\n1) It's possible to panic the decoder by overflowing a length check.\n\n2) (minor) the decoder was silently truncating varints that were larger than 64 bits. This isn't strictly a problem, but it could lead to a situation where a different decoder could decode a given message differently. Thus, if the message was vetted by one decoder and processed by another, an attacker could exploit this difference.",
	"cc": [
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/goprotobuf",
			"disapproval": false,
			"date": "2013-07-10 13:17:46.634670",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"agl@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2013-07-11 02:38:02.182840",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"agl@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-13 04:53:48.871360",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"agl@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/goprotobuf/source/detail?r=efc3fe235756 ***\n\ngoprotobuf: fix integer overflows.\n\n1) It's possible to panic the decoder by overflowing a length check.\n\n2) (minor) the decoder was silently truncating varints that were larger than 64 bits. This isn't strictly a problem, but it could lead to a situation where a different decoder could decode a given message differently. Thus, if the message was vetted by one decoder and processed by another, an attacker could exploit this difference.\n\nR=dsymonds\nCC=golang-dev\nhttps://codereview.appspot.com/11094044\n\nCommitter: David Symonds <dsymonds@golang.org>",
			"disapproval": false,
			"date": "2013-07-13 04:55:35.032280",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 11094044: goprotobuf: fix integer overflows.",
	"created": "2013-07-10 12:41:56.795860",
	"patchsets": [
		1,
		3001,
		6001,
		7001
	],
	"modified": "2013-07-13 04:55:35.284890",
	"closed": false,
	"issue": 11094044
}