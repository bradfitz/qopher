{
	"description": "cmd/gc: fix addresses escaping through closures called in-place.\n\nFixes issue 3545.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-18 13:56:18.588365",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nI added a bunch more tests to escape2.go.\r\nWill submit.\r\n",
			"disapproval": false,
			"date": "2012-04-23 19:15:21.007994",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a890477d3dfb ***\n\ncmd/gc: fix addresses escaping through closures called in-place.\n\nFixes issue 3545.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6061043\n\nCommitter: Russ Cox <rsc@golang.org>\n\nhttp://codereview.appspot.com/6061043/diff/4001/test/escape2.go\nFile test/escape2.go (right):\n\nhttp://codereview.appspot.com/6061043/diff/4001/test/escape2.go#newcode1069\ntest/escape2.go:1069: func foo124(x **int) {\t// ERROR \"does not escape\"\nPlease put the variable names in these patterns, like above.  In theory there is just one thing on each line, but it's safer to be explicit.\n\nAlso, please make a foo124a with x = p where x is the global var x *int instead of a function parameter.\n\nhttp://codereview.appspot.com/6061043/diff/4001/test/escape2.go#newcode1077\ntest/escape2.go:1077: func foo125(ch chan *int) {\t// ERROR \"does not escape\"\nPlease make a foo125a variant with defer func instead of just func.\n\nhttp://codereview.appspot.com/6061043/diff/4001/test/escape2.go#newcode1090\ntest/escape2.go:1090: // px = &i  // would escape i-> should move to heap, as should the one below\nConfusing.  Delete.",
			"disapproval": false,
			"date": "2012-04-23 19:42:29.823337",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "thanks\n\nOn Mon, Apr 23, 2012 at 21:42, <rsc@golang.org> wrote:\n\n> *** Submitted as\n> http://code.google.com/p/go/**source/detail?r=a890477d3dfb<http://code.google.com/p/go/source/detail?r=a890477d3dfb>***\n>\n>\n> cmd/gc: fix addresses escaping through closures called in-place.\n>\n> Fixes issue 3545.\n>\n> R=rsc\n> CC=golang-dev\n> http://codereview.appspot.com/**6061043<http://codereview.appspot.com/6061043>\n>\n> Committer: Russ Cox <rsc@golang.org>\n>\n>\n>\n> http://codereview.appspot.com/**6061043/diff/4001/test/**escape2.go<http://codereview.appspot.com/6061043/diff/4001/test/escape2.go>\n> File test/escape2.go (right):\n>\n> http://codereview.appspot.com/**6061043/diff/4001/test/**\n> escape2.go#newcode1069<http://codereview.appspot.com/6061043/diff/4001/test/escape2.go#newcode1069>\n> test/escape2.go:1069: func foo124(x **int) {    // ERROR \"does not escape\"\n> Please put the variable names in these patterns, like above.  In theory\n> there is just one thing on each line, but it's safer to be explicit.\n>\n> Also, please make a foo124a with x = p where x is the global var x *int\n> instead of a function parameter.\n>\n> http://codereview.appspot.com/**6061043/diff/4001/test/**\n> escape2.go#newcode1077<http://codereview.appspot.com/6061043/diff/4001/test/escape2.go#newcode1077>\n> test/escape2.go:1077: func foo125(ch chan *int) {       // ERROR \"does not\n> escape\"\n> Please make a foo125a variant with defer func instead of just func.\n>\n> http://codereview.appspot.com/**6061043/diff/4001/test/**\n> escape2.go#newcode1090<http://codereview.appspot.com/6061043/diff/4001/test/escape2.go#newcode1090>\n> test/escape2.go:1090: // px = &i  // would escape i-> should move to\n> heap, as should the one below\n> Confusing.  Delete.\n>\n> http://codereview.appspot.com/**6061043/<http://codereview.appspot.com/6061043/>\n>\n",
			"disapproval": false,
			"date": "2012-04-23 20:03:43.432134",
			"approval": false
		}
	],
	"owner_email": "lvd@google.com",
	"private": false,
	"base_url": "",
	"owner": "lvd",
	"subject": "code review 6061043: cmd/gc: fix addresses escaping through closures called ...",
	"created": "2012-04-17 08:32:30.706494",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2012-04-29 08:55:39.057792",
	"closed": true,
	"issue": 6061043
}