{
	"description": "syscall: add Termios support on darwin\n\nUpdate issue 3316.",
	"cc": [
		"dave@cheney.net",
		"kevlar@google.com",
		"devon.odell@gmail.com",
		"rsc@golang.org",
		"minux.ma@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-04-19 17:17:11.659132",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ping?",
			"disapproval": false,
			"date": "2012-04-23 03:18:37.557470",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/23 03:18:37, fsouza wrote:\n> Ping?\n\nI'm not sure what the policy is currently on adding new exported symbols to pkg/syscall. What were you planning on doing with these ?",
			"disapproval": false,
			"date": "2012-04-23 08:56:58.044618",
			"approval": false
		},
		{
			"sender": "kevlar@google.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"kevlar@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FWIW, these are relatively straightforward to do directly in terminal packages.  I'd only put them in the stdlib if they were used in the stdlib or were relatively easy to use directly (which I'd argue is not the case here).\n\nhttps://github.com/kylelemons/goat/blob/go.r60/term/termio.go",
			"disapproval": false,
			"date": "2012-04-23 20:19:35.702388",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"kevlar@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/23 20:19:35, kevlar wrote:\n> FWIW, these are relatively straightforward to do directly in terminal packages. \n> I'd only put them in the stdlib if they were used in the stdlib or were\n> relatively easy to use directly (which I'd argue is not the case here).\n> \n> https://github.com/kylelemons/goat/blob/go.r60/term/termio.go\n\nI agree, but what happens to termios support on linux? It is in the stdlib",
			"disapproval": false,
			"date": "2012-04-24 13:25:53.796594",
			"approval": false
		},
		{
			"sender": "devon.odell@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Op 23 april 2012 04:56 heeft  <dave@cheney.net> het volgende geschreven:\n> On 2012/04/23 03:18:37, fsouza wrote:\n>>\n>> Ping?\n>\n>\n> I'm not sure what the policy is currently on adding new exported symbols\n> to pkg/syscall. What were you planning on doing with these ?\n\nThere are only two marginally reasonable reasons I think package\nsyscall is incomplete:\n\n1) The tendency of Go to encourage portable programs\n2) We only pulled in the ones we needed for OS-specific code in the\nruntime and standard library\n\nMany syscalls aren't frequently used and because of #2, it was more of\na time waste to attempt to implement them all than it was worth.\n\nI don't think that syscall being an incomplete package because we\ndidn't need all of them for the standard library is a good argument.\nIt's a pain that there's a non-portable syscall interface (that's made\neven more non-portable by using the sub-interface of ioctls) that has\nmarginally similar implementations across at least 3 operating systems\nwe have first tier support for, and I can understand the consistency\nargument. Termios is defined for Linux.\n\nI don't think we should be against adding things to package syscall\njust because people can write non-portable programs with them. The\nsyscall package docs even admit this a bit with \"Use [the standard\nlibrary] packages rather than this one *if you can.*\" (emphasis mine).\nAnybody needing to use syscalls is likely to understand these\nimplications and be ok with that. If Go doesn't wish to let people use\nsyscalls, then syscall.RawSyscall shouldn't be exported. Otherwise, I\ndon't see any reason to deny a CL making a systems interface easier to\nuse for a tier 1 target, especially if someone already provided the\ncode.\n\nFrom a code perspective, LGTM.\n\n--dho\n",
			"disapproval": false,
			"date": "2012-04-24 14:18:53.570957",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"franciscossouza@gmail.com",
				"dave@cheney.net",
				"kevlar@google.com",
				"devon.odell@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "See the note at the top of the z* files.\n\nhttp://codereview.appspot.com/6063053/diff/5001/src/pkg/syscall/zerrors_darwin_386.go\nFile src/pkg/syscall/zerrors_darwin_386.go (left):\n\nhttp://codereview.appspot.com/6063053/diff/5001/src/pkg/syscall/zerrors_darwin_386.go#oldcode149\nsrc/pkg/syscall/zerrors_darwin_386.go:149: ECHO                              = 0x8\nWhy did this change?  These are auto-generated files but I don't see anything changing in the generators.  Also, usually we handle constants by adding them here (via changes in the generators) not by explicit enumeration in types_darwin.go.",
			"disapproval": false,
			"date": "2012-04-25 01:42:22.262796",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"dave@cheney.net",
				"kevlar@google.com",
				"devon.odell@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/25 01:42:22, rsc wrote:\n> See the note at the top of the z* files.\n> \n> http://codereview.appspot.com/6063053/diff/5001/src/pkg/syscall/zerrors_darwin_386.go\n> File src/pkg/syscall/zerrors_darwin_386.go (left):\n> \n> http://codereview.appspot.com/6063053/diff/5001/src/pkg/syscall/zerrors_darwin_386.go#oldcode149\n> src/pkg/syscall/zerrors_darwin_386.go:149: ECHO                              =\n> 0x8\n> Why did this change?  These are auto-generated files but I don't see anything\n> changing in the generators.  Also, usually we handle constants by adding them\n> here (via changes in the generators) not by explicit enumeration in\n> types_darwin.go.\n\nouch, sorry about that. Actually, I did not use the go generator (I didn't read the file headers, sorry again about that) and ended up creating some script to generate these constants.\n\nI'll take a look in the generators and get back here.",
			"disapproval": false,
			"date": "2012-04-26 23:59:41.415498",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"dave@cheney.net",
				"kevlar@google.com",
				"devon.odell@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please take another look.\n\nI've changed mkerrors.sh to include termios.h constants in go files, and regenerates zerrors_darwin_* using mkall.sh.\n\nhttps://codereview.appspot.com/6063053/diff/5001/src/pkg/syscall/zerrors_darwin_386.go\nFile src/pkg/syscall/zerrors_darwin_386.go (left):\n\nhttps://codereview.appspot.com/6063053/diff/5001/src/pkg/syscall/zerrors_darwin_386.go#oldcode149\nsrc/pkg/syscall/zerrors_darwin_386.go:149: ECHO                              = 0x8\nOn 2012/04/25 01:42:22, rsc wrote:\n> Why did this change?  These are auto-generated files but I don't see anything\n> changing in the generators.  Also, usually we handle constants by adding them\n> here (via changes in the generators) not by explicit enumeration in\n> types_darwin.go.\n\nDone.",
			"disapproval": false,
			"date": "2012-04-27 04:52:04.680260",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"dave@cheney.net",
				"kevlar@google.com",
				"devon.odell@gmail.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6063053/diff/18001/src/pkg/syscall/mkerrors.sh\nFile src/pkg/syscall/mkerrors.sh (right):\n\nhttps://codereview.appspot.com/6063053/diff/18001/src/pkg/syscall/mkerrors.sh#newcode178\nsrc/pkg/syscall/mkerrors.sh:178: $2 ~ /^V[A-Z0-9]+$/ ||\nplease use tab to indent for consistency.",
			"disapproval": false,
			"date": "2012-04-27 04:58:01.670555",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"dave@cheney.net",
				"kevlar@google.com",
				"devon.odell@gmail.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ptal\n\nhttps://codereview.appspot.com/6063053/diff/18001/src/pkg/syscall/mkerrors.sh\nFile src/pkg/syscall/mkerrors.sh (right):\n\nhttps://codereview.appspot.com/6063053/diff/18001/src/pkg/syscall/mkerrors.sh#newcode178\nsrc/pkg/syscall/mkerrors.sh:178: $2 ~ /^V[A-Z0-9]+$/ ||\nOn 2012/04/27 04:58:01, minux wrote:\n> please use tab to indent for consistency.\n\nDone.",
			"disapproval": false,
			"date": "2012-04-27 05:30:01.473700",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"dave@cheney.net",
				"kevlar@google.com",
				"devon.odell@gmail.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?",
			"disapproval": false,
			"date": "2012-05-01 04:27:53.768669",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nWill submit later if no one beats me to it.\r\n",
			"disapproval": false,
			"date": "2012-05-01 23:05:36.412813",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"franciscossouza@gmail.com",
				"dave@cheney.net",
				"kevlar@google.com",
				"devon.odell@gmail.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b0f36fc20ab2 ***\n\nsyscall: add Termios support on darwin\n\nUpdate issue 3316.\n\nR=dave, kevlar, devon.odell, rsc, minux.ma\nCC=golang-dev\nhttp://codereview.appspot.com/6063053\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-05-03 21:33:23.710816",
			"approval": false
		}
	],
	"owner_email": "franciscossouza@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "fss",
	"subject": "code review 6063053: syscall: add Termios support on darwin",
	"created": "2012-04-19 17:16:20.126927",
	"patchsets": [
		1,
		2001,
		5001,
		18001,
		26001
	],
	"modified": "2012-05-03 21:36:11.580682",
	"closed": true,
	"issue": 6063053
}