{
	"description": "cmd/go: always provide .exe suffix on windows\n        Fixes issue 3190.",
	"cc": [
		"rsc@golang.org",
		"tjyang2001@gmail.com",
		"rsc@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"ajstarks@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@google.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5759056/diff/4001/src/cmd/go/build.go\nFile src/cmd/go/build.go (right):\n\nhttp://codereview.appspot.com/5759056/diff/4001/src/cmd/go/build.go#newcode172\nsrc/cmd/go/build.go:172: if goos == \"windows\" && filepath.Ext(*buildO) != \"exe\" {\nI am sorry for being dense, but what is wrong with the old code?\nI don't believe this if belongs here, because if *buildO was set by\nthe user with a -o option, we have no right to modify the target file name.\n\nThe old code looks like it should have worked fine, and it was inside\nthe if statement that checked that there was no -o option, so in that\nsituation it's okay for us to fiddle with the choice of default.\n\nIs something else setting *buildO before we get here?  That's the only\nexplanation I can come up with for why the old code would be wrong.\nIf so, whatever is setting *buildO = x should be using *buildO = x + exeSuffix.",
			"disapproval": false,
			"date": "2012-03-07 02:49:34.538260",
			"approval": false
		},
		{
			"sender": "tjyang2001@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-03-07 05:24:01.174861",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\nOn 2012/03/07 05:38:23, rsc1 wrote:\n> http://codereview.appspot.com/5759056/diff/8001/src/cmd/go/build.go\n> File src/cmd/go/build.go (right):\n> \n> http://codereview.appspot.com/5759056/diff/8001/src/cmd/go/build.go#newcode395\n> src/cmd/go/build.go:395: *buildO = elem[:len(elem)-len(\".go\")]\n>  + exeSuffix\nDone, also changed the other place.\n> \n> http://codereview.appspot.com/5759056/diff/8001/src/cmd/go/build.go#newcode396\n> src/cmd/go/build.go:396: if goos == \"windows\" {\n> Delete.\nDone",
			"disapproval": false,
			"date": "2012-03-07 05:48:13.740963",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 6, 2012 at 22:24,  <tjyang2001@gmail.com> wrote:\n> I changed goos to b.goos and rerun all.bat, the new go build is\n> producing exe suffix again.\n>\n> Can you confirm my finding ?\n\nNo, I can't.  The current b (type builder) has no goos field, so\nThe rewrite you suggested code can't compile.  What used to\nbe b.goos became the global variable goos instead.\n\nThis is the current builder definition in my copy of cmd/go/build.go:\n\ntype builder struct {\n\twork        string               // the temporary work directory\n(ends in filepath.Separator)\n\tactionCache map[cacheKey]*action // a cache of already-constructed actions\n\tmkdirCache  map[string]bool      // a cache of created directories\n\tprint       func(args ...interface{}) (int, error)\n\n\toutput    sync.Mutex\n\tscriptDir string // current directory in printed script\n\n\texec      sync.Mutex\n\treadySema chan bool\n\tready     actionQueue\n}\n",
			"disapproval": false,
			"date": "2012-03-07 03:33:21.479386",
			"approval": false
		},
		{
			"sender": "tjyang2001@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/07 05:33:41, minux wrote:\n> On 2012/03/07 05:24:01, tjyang wrote:\n> Does this CL work for you?\n\nYes. It looks like a correct one this time.\n\nC:\\gosrc\\test>go build -x helloworld.go\nWORK=C:\\Profiles\\ADMINI~1\\LOCALS~1\\Temp\\1\\go-build296810338\nbuildO1=helloworld.exe\ngoos=windows\nbuildO4=helloworld.exe\nmkdir -p $WORK\\command-line-arguments\\_obj\\\ncd $GOROOT\\test\n$GOROOT\\pkg\\tool\\windows_386\\8g.exe -o $WORK\\command-line-arguments\\_obj\\_go_.8\n-p command-line-arguments -D _/C_/gosrc/test -I $WORK .\\helloworld.go\n$GOROOT\\pkg\\tool\\windows_386\\pack.exe grc $WORK\\command-line-arguments.a $WORK\\c\nommand-line-arguments\\_obj\\_go_.8\n$GOROOT\\pkg\\tool\\windows_386\\8l.exe -o $WORK\\command-line-arguments\\_obj\\a.out.e\nxe -L $WORK $WORK\\command-line-arguments.a\ncp $WORK\\command-line-arguments\\_obj\\a.out.exe helloworld.exe\n\nC:\\gosrc\\test>",
			"disapproval": false,
			"date": "2012-03-07 05:38:46.824467",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-03-06 17:45:49.054020",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.",
			"disapproval": false,
			"date": "2012-03-07 05:13:38.845447",
			"approval": false
		},
		{
			"sender": "tjyang2001@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/07 02:49:34, rsc1 wrote:\n> http://codereview.appspot.com/5759056/diff/4001/src/cmd/go/build.go\n> File src/cmd/go/build.go (right):\n> \n> http://codereview.appspot.com/5759056/diff/4001/src/cmd/go/build.go#newcode172\n> src/cmd/go/build.go:172: if goos == \"windows\" && filepath.Ext(*buildO) != \"exe\"\n> {\n> I am sorry for being dense, but what is wrong with the old code?\n> I don't believe this if belongs here, because if *buildO was set by\n> the user with a -o option, we have no right to modify the target file name.\n> \n> The old code looks like it should have worked fine, and it was inside\n> the if statement that checked that there was no -o option, so in that\n> situation it's okay for us to fiddle with the choice of default.\n> \n> Is something else setting *buildO before we get here?  That's the only\n> explanation I can come up with for why the old code would be wrong.\n> If so, whatever is setting *buildO = x should be using *buildO = x + exeSuffix.\n\nso looks like following 3 lines in latest weekly didn't executed.\n\n \n                if goos == \"windows\" {\n                        *buildO += \".exe\"\n                }\n    \n\n\nI peeked at weekly-02-22 build.go code and found it has a `b.goos ==\"windows\"` while  03-04 one doesn't have it. \n\nI changed goos to b.goos and rerun all.bat, the new go build is producing exe suffix again.\n\nCan you confirm my finding ?",
			"disapproval": false,
			"date": "2012-03-07 03:24:14.165190",
			"approval": false
		},
		{
			"sender": "tjyang2001@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/06 17:45:49, minux wrote:\n> Hello mailto:golang-dev@googlegroups.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go/\n\nI manually applied this 3 lines patch to my existing 03-04 src tree. .exe suffix generation is back.\n\nThanks",
			"disapproval": false,
			"date": "2012-03-06 20:38:14.387975",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/07 02:49:34, rsc1 wrote:\n> Is something else setting *buildO before we get here?  That's the only\n> explanation I can come up with for why the old code would be wrong.\n> If so, whatever is setting *buildO = x should be using *buildO = x + exeSuffix.\nIt is the cause. I will change the setter of *buildO instead.\n(I just don't want these code floating in two different places...)",
			"disapproval": false,
			"date": "2012-03-07 04:39:42.646620",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5759056/diff/8001/src/cmd/go/build.go\nFile src/cmd/go/build.go (right):\n\nhttp://codereview.appspot.com/5759056/diff/8001/src/cmd/go/build.go#newcode395\nsrc/cmd/go/build.go:395: *buildO = elem[:len(elem)-len(\".go\")]\n + exeSuffix\n\nhttp://codereview.appspot.com/5759056/diff/8001/src/cmd/go/build.go#newcode396\nsrc/cmd/go/build.go:396: if goos == \"windows\" {\nDelete.",
			"disapproval": false,
			"date": "2012-03-07 05:38:23.619548",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-03-07 06:20:28.555090",
			"approval": true
		},
		{
			"sender": "tjyang2001@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/07 03:24:14, tjyang wrote:\n> On 2012/03/07 02:49:34, rsc1 wrote:\n> > http://codereview.appspot.com/5759056/diff/4001/src/cmd/go/build.go\n> > File src/cmd/go/build.go (right):\n> > \n> > http://codereview.appspot.com/5759056/diff/4001/src/cmd/go/build.go#newcode172\n> > src/cmd/go/build.go:172: if goos == \"windows\" && filepath.Ext(*buildO) !=\n> \"exe\"\n> > {\n> > I am sorry for being dense, but what is wrong with the old code?\n> > I don't believe this if belongs here, because if *buildO was set by\n> > the user with a -o option, we have no right to modify the target file name.\n> > \n> > The old code looks like it should have worked fine, and it was inside\n> > the if statement that checked that there was no -o option, so in that\n> > situation it's okay for us to fiddle with the choice of default.\n> > \n> > Is something else setting *buildO before we get here?  That's the only\n> > explanation I can come up with for why the old code would be wrong.\n> > If so, whatever is setting *buildO = x should be using *buildO = x +\n> exeSuffix.\n> \n> so looks like following 3 lines in latest weekly didn't executed.\n> \n>  \n>                 if goos == \"windows\" {\n>                         *buildO += \".exe\"\n>                 }\n>     \n> \n> \n> I peeked at weekly-02-22 build.go code and found it has a `b.goos ==\"windows\"`\n> while  03-04 one doesn't have it. \n> \n> I changed goos to b.goos and rerun all.bat, the new go build is producing exe\n> suffix again.\n> \n> Can you confirm my finding ?\n\nSorry, withdraw my finding. I am getting b.goos undefined compilation error.",
			"disapproval": false,
			"date": "2012-03-07 03:31:10.271386",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=8b6c1bf3cd89 ***\n\ncmd/go: always provide .exe suffix on windows\n        Fixes issue 3190.\n\nR=rsc, tjyang2001, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5759056",
			"disapproval": false,
			"date": "2012-03-07 06:25:32.281201",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/07 05:24:01, tjyang wrote:\nDoes this CL work for you?",
			"disapproval": false,
			"date": "2012-03-07 05:33:41.856750",
			"approval": false
		},
		{
			"sender": "tjyang2001@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/07 05:38:46, tjyang wrote:\n> On 2012/03/07 05:33:41, minux wrote:\n> > On 2012/03/07 05:24:01, tjyang wrote:\n> > Does this CL work for you?\n> \n> Yes. It looks like a correct one this time.\n> \n> C:\\gosrc\\test>go build -x helloworld.go\n> WORK=C:\\Profiles\\ADMINI~1\\LOCALS~1\\Temp\\1\\go-build296810338\n> buildO1=helloworld.exe\n> goos=windows\n> buildO4=helloworld.exe\n> mkdir -p $WORK\\command-line-arguments\\_obj\\\n> cd $GOROOT\\test\n> $GOROOT\\pkg\\tool\\windows_386\\8g.exe -o $WORK\\command-line-arguments\\_obj\\_go_.8\n> -p command-line-arguments -D _/C_/gosrc/test -I $WORK .\\helloworld.go\n> $GOROOT\\pkg\\tool\\windows_386\\pack.exe grc $WORK\\command-line-arguments.a $WORK\\c\n> ommand-line-arguments\\_obj\\_go_.8\n> $GOROOT\\pkg\\tool\\windows_386\\8l.exe -o $WORK\\command-line-arguments\\_obj\\a.out.e\n> xe -L $WORK $WORK\\command-line-arguments.a\n> cp $WORK\\command-line-arguments\\_obj\\a.out.exe helloworld.exe\n> \n> C:\\gosrc\\test>\n\nAnother good test case when user want to name exe file to a special name works also.\n\nC:\\gosrc\\test>go build -x -o t.cmd helloworld.go\nWORK=C:\\Profiles\\ADMINI~1\\LOCALS~1\\Temp\\1\\go-build709626910\nbuildO1=t.cmd\ngoos=windows\nbuildO4=t.cmd\nmkdir -p $WORK\\command-line-arguments\\_obj\\\ncd $GOROOT\\test\n$GOROOT\\pkg\\tool\\windows_386\\8g.exe -o $WORK\\command-line-arguments\\_obj\\_go_.8\n-p command-line-arguments -D _/C_/gosrc/test -I $WORK .\\helloworld.go\n$GOROOT\\pkg\\tool\\windows_386\\pack.exe grc $WORK\\command-line-arguments.a $WORK\\c\nommand-line-arguments\\_obj\\_go_.8\n$GOROOT\\pkg\\tool\\windows_386\\8l.exe -o $WORK\\command-line-arguments\\_obj\\a.out.e\nxe -L $WORK $WORK\\command-line-arguments.a\ncp $WORK\\command-line-arguments\\_obj\\a.out.exe t.cmd\n\nC:\\gosrc\\test>",
			"disapproval": false,
			"date": "2012-03-07 05:43:30.725527",
			"approval": false
		},
		{
			"sender": "ajstarks@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"ajstarks@gmail.com",
				"rsc@golang.org",
				"tjyang2001@gmail.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "misc/goplay should now be updated as it appends .exe if runtime.GOOS == \"windows\"\n\nOn 2012/03/07 06:25:32, minux wrote:\n> *** Submitted as http://code.google.com/p/go/source/detail?r=8b6c1bf3cd89 ***\n> \n> cmd/go: always provide .exe suffix on windows\n>         Fixes issue 3190.\n> \n> R=rsc, tjyang2001, rsc\n> CC=golang-dev\n> http://codereview.appspot.com/5759056",
			"disapproval": false,
			"date": "2012-03-09 01:16:01.078048",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Mar 8, 2012 at 20:16,  <ajstarks@gmail.com> wrote:\n> misc/goplay should now be updated as it appends .exe if runtime.GOOS ==\n> \"windows\"\n\nmisc/goplay is preparing an argument for -o.\nthe .exe is still necessary there.\n",
			"disapproval": false,
			"date": "2012-03-09 03:20:04.198873",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5759056: cmd/go: always provide .exe suffix on windows",
	"created": "2012-03-06 17:44:49.876280",
	"patchsets": [
		1,
		2001,
		4001,
		8001,
		6002,
		3008
	],
	"modified": "2012-03-09 01:16:01.383320",
	"closed": true,
	"issue": 5759056
}