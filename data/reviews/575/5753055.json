{
	"description": "fmt, log: stop using unicode\n\n$ go list -f '{{.ImportPath}} {{.Deps}}' fmt log\nfmt [errors io math os reflect runtime strconv sync sync/atomic syscall time unicode/utf8 unsafe]\nlog [errors fmt io math os reflect runtime strconv sync sync/atomic syscall time unicode/utf8 unsafe]",
	"cc": [
		"bradfitz@golang.org",
		"rogpeppe@gmail.com",
		"r@golang.org",
		"r@google.com",
		"rsc@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "holding off LGTM until strconv has landed\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/format.go\nFile src/pkg/fmt/format.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/format.go#newcode37\nsrc/pkg/fmt/format.go:37: // It prints into a buffer that must be set up externally.\ns/externally/separately/\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go\nFile src/pkg/fmt/scan.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go#newcode422\nsrc/pkg/fmt/scan.go:422: s.buf = s.buf[:0]\nOn 2012/03/06 16:08:07, bradfitz wrote:\n> can't you just add a Reset method to *buffer?\n\nto save a trivial assignment?\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go#newcode481\nsrc/pkg/fmt/scan.go:481: func indexRune(s string, r rune) int {\nshould be indexByte. it's used for tiny ASCII strings.",
			"disapproval": false,
			"date": "2012-03-06 20:40:34.996694",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 7, 2012 at 7:40 AM, <r@golang.org> wrote:\n\n> holding off LGTM until strconv has landed\n>\n>\n>\n> http://codereview.appspot.com/**5753055/diff/2001/src/pkg/fmt/**format.go<http://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/format.go>\n> File src/pkg/fmt/format.go (right):\n>\n> http://codereview.appspot.com/**5753055/diff/2001/src/pkg/fmt/**\n> format.go#newcode37<http://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/format.go#newcode37>\n> src/pkg/fmt/format.go:37: // It prints into a buffer that must be set up\n> externally.\n> s/externally/separately/\n>\n>\n> http://codereview.appspot.com/**5753055/diff/2001/src/pkg/fmt/**scan.go<http://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go>\n> File src/pkg/fmt/scan.go (right):\n>\n> http://codereview.appspot.com/**5753055/diff/2001/src/pkg/fmt/**\n> scan.go#newcode422<http://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go#newcode422>\n> src/pkg/fmt/scan.go:422: s.buf = s.buf[:0]\n> On 2012/03/06 16:08:07, bradfitz wrote:\n>\n>> can't you just add a Reset method to *buffer?\n>>\n>\n> to save a trivial assignment?\n>\n\n*shrug*  There's a number of them. Keeps diff smaller and more readable\noverall IMHO. (showing intent, not implementation)\n",
			"disapproval": false,
			"date": "2012-03-06 20:44:29.899890",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"r@google.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-03-07 04:17:28.975349",
			"approval": true
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go\nFile src/pkg/fmt/scan.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go#newcode278\nsrc/pkg/fmt/scan.go:278: var space = []uint16{\nthis can be a little bit more efficient if defined as [][2]uint16, because you can avoid all the bounds checks in loop below.",
			"disapproval": false,
			"date": "2012-03-06 16:46:48.039877",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/format.go\nFile src/pkg/fmt/format.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/format.go#newcode291\nsrc/pkg/fmt/format.go:291: var b []byte\nseems like the cap could be set pretty accurately here?\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/print.go#newcode89\nsrc/pkg/fmt/print.go:89: func (bp *buffer) WriteRune(r rune) error {\nuse bp as receiver in methods above?\nor bs as byte slice below?\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go\nFile src/pkg/fmt/scan.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go#newcode278\nsrc/pkg/fmt/scan.go:278: var space = []uint16{\n// space lists pairs of inclusive ranges of space characters\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go#newcode422\nsrc/pkg/fmt/scan.go:422: s.buf = s.buf[:0]\ncan't you just add a Reset method to *buffer?\n\nhttp://codereview.appspot.com/5753055/diff/2001/src/pkg/fmt/scan.go#newcode710\nsrc/pkg/fmt/scan.go:710: s.buf = s.buf[:0]\nReset?",
			"disapproval": false,
			"date": "2012-03-06 16:08:07.234256",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "also this should include edits to the dep test\n\n",
			"disapproval": false,
			"date": "2012-03-06 20:47:14.812544",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org, rogpeppe@gmail.com, r@golang.org, r@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-03-07 03:41:03.899899",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/format.go\nFile src/pkg/fmt/format.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/format.go#newcode37\nsrc/pkg/fmt/format.go:37: // It prints into a buffer that must be set up externally.\ndid you even see my earlier comments? s/externally/separately/\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/print.go#newcode72\nsrc/pkg/fmt/print.go:72: type buffer []byte\nmaybe // Use buffer instead of bytes.Buffer to avoid large dependency.\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/scan.go\nFile src/pkg/fmt/scan.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/scan.go#newcode42\nsrc/pkg/fmt/scan.go:42: // !isSpace(c) is used; that is, the token will hold non-space\nyou're describing a public interface in terms of a private function.\ni think you can just revert this line. if you're worried about the implication\nof dependency, say\n\nIf f is nil, tokens will hold runs of non-space characters, as defined by Unicode.\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/scan.go#newcode278\nsrc/pkg/fmt/scan.go:278: var space = []uint16{\ni'd prefer to see these grouped as ranges.\nat the very least, put in a comment and observe that this needs\nto be kept in sync with the unicode White_Space range table.\nplus there should be a test to diff the tables or scan the range.\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/scan.go#newcode481\nsrc/pkg/fmt/scan.go:481: func indexRune(s string, r rune) int {\nas i said before, this (c|sh)ould be indexByte.",
			"disapproval": false,
			"date": "2012-03-07 03:53:04.732628",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"r@google.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 61a5159136af ***\n\nfmt, log: stop using unicode\n\n$ go list -f '{{.ImportPath}} {{.Deps}}' fmt log\nfmt [errors io math os reflect runtime strconv sync sync/atomic syscall time unicode/utf8 unsafe]\nlog [errors fmt io math os reflect runtime strconv sync sync/atomic syscall time unicode/utf8 unsafe]\n\nR=bradfitz, rogpeppe, r, r, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5753055",
			"disapproval": false,
			"date": "2012-03-07 04:27:17.156698",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"r@google.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/format.go\nFile src/pkg/fmt/format.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/format.go#newcode37\nsrc/pkg/fmt/format.go:37: // It prints into a buffer that must be set up externally.\nOn 2012/03/07 03:53:05, r wrote:\n> did you even see my earlier comments? s/externally/separately/\n\nVery sorry.  I forgot about that mail.\nDone.\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/print.go#newcode72\nsrc/pkg/fmt/print.go:72: type buffer []byte\nOn 2012/03/07 03:53:05, r wrote:\n> maybe // Use buffer instead of bytes.Buffer to avoid large dependency.\n\nDone.\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/scan.go\nFile src/pkg/fmt/scan.go (right):\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/scan.go#newcode42\nsrc/pkg/fmt/scan.go:42: // !isSpace(c) is used; that is, the token will hold non-space\nOn 2012/03/07 03:53:05, r wrote:\n> you're describing a public interface in terms of a private function.\n> i think you can just revert this line. if you're worried about the implication\n> of dependency, say\n> \n> If f is nil, tokens will hold runs of non-space characters, as defined by\n> Unicode.\n\nDone.\n\nhttp://codereview.appspot.com/5753055/diff/4008/src/pkg/fmt/scan.go#newcode481\nsrc/pkg/fmt/scan.go:481: func indexRune(s string, r rune) int {\nOn 2012/03/07 03:53:05, r wrote:\n> as i said before, this (c|sh)ould be indexByte.\n\nSorry for not replying earlier.  My reasoning was that\nr is the result of s.getRune(), which can be an arbitrary\nrune.  I could check at the call sites for r >= RuneSelf\nand then call IndexByte, or I could check rune(s[i]) == r?",
			"disapproval": false,
			"date": "2012-03-07 04:12:24.228992",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5753055: fmt, log: stop using unicode",
	"created": "2012-03-06 14:10:01.551957",
	"patchsets": [
		1,
		2001,
		4002,
		4008,
		6013,
		6021,
		10
	],
	"modified": "2012-03-07 04:27:18.857194",
	"closed": true,
	"issue": 5753055
}