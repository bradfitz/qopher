{
	"description": "encoding/json: don't marshal special float values",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "chickencha@gmail.com",
			"recipients": [
				"chickencha@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-28 05:43:45.125677",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"chickencha@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nBut does this fix a specific issue? How were they being marshaled before?",
			"disapproval": false,
			"date": "2012-01-03 01:20:46.490831",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"chickencha@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=bfeac7c1f35e ***\n\nencoding/json: don't marshal special float values\n\nR=golang-dev, adg\nCC=golang-dev\nhttp://codereview.appspot.com/5500084\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2012-01-03 01:30:25.244941",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 3 January 2012 12:26, Evan Shaw <chickencha@gmail.com> wrote:\n> On Tue, Jan 3, 2012 at 2:20 PM, \u00a0<adg@golang.org> wrote:\n>> But does this fix a specific issue? How were they being marshaled\n>> before?\n>\n> It fixes this issue:\n> https://groups.google.com/d/topic/golang-nuts/WjB2CVlWk8U/discussion\n> (There's no tracker issue)\n>\n> Currently, this Go map:\n> map[string]float64{\"infinity\": math.Inf(1), \"-infinity\": math.Inf(-1),\n> \"NaN\": math.NaN()}\n>\n> marshals to this Go string:\n> `{\"infinity\": +Inf, \"-infinity\": -Inf, \"NaN\": NaN}`\n>\n> That's illegal. JSON has no way to express either infinity or NaN.\n\nOk, sounds good. Thanks.\n",
			"disapproval": false,
			"date": "2012-01-03 01:30:23.468987",
			"approval": false
		},
		{
			"sender": "chickencha@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jan 3, 2012 at 2:20 PM,  <adg@golang.org> wrote:\n> But does this fix a specific issue? How were they being marshaled\n> before?\n\nIt fixes this issue:\nhttps://groups.google.com/d/topic/golang-nuts/WjB2CVlWk8U/discussion\n(There's no tracker issue)\n\nCurrently, this Go map:\nmap[string]float64{\"infinity\": math.Inf(1), \"-infinity\": math.Inf(-1),\n\"NaN\": math.NaN()}\n\nmarshals to this Go string:\n`{\"infinity\": +Inf, \"-infinity\": -Inf, \"NaN\": NaN}`\n\nThat's illegal. JSON has no way to express either infinity or NaN.\n\n- Evan\n",
			"disapproval": false,
			"date": "2012-01-03 01:26:59.292178",
			"approval": false
		}
	],
	"owner_email": "chickencha@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "eds",
	"subject": "code review 5500084: encoding/json: don't marshal special float values",
	"created": "2011-12-28 05:39:10.732221",
	"patchsets": [
		1,
		1001,
		3003
	],
	"modified": "2012-01-03 01:31:35.093490",
	"closed": true,
	"issue": 5500084
}