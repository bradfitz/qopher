{
	"description": "misc/dashboard/builder: add -race builder support\n\nIf the build key contains -race, the builder will invoke to the race.{bat,bash} build command. This allows {darwin,linux,windows}-amd64 builders to do race and non race builds in sequence.",
	"cc": [
		"adg@golang.org",
		"dvyukov@google.com",
		"fullung@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"dvyukov@google.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/04/05 05:42:06, dvyukov wrote:\n> On Thu, Apr 4, 2013 at 10:17 PM, <mailto:fullung@gmail.com> wrote:\n> > go install -race std installs a race-enabled cmd/go, which sometimes\n> > hits this bug when you run it:\n> Yeah, I know. I can't figure out what is the way to fix it.\n> The idea is that it should not systematically affect users. And for our own\n> purposes (more stable builders) we can fix it after Go1.1.\n\nSure. Maybe one idea is to do:\n\ngo install -race std\ngo install cmd/go\n\nin race.bash until this gets fixed?\n\nRegards\n\nAlbert",
			"disapproval": false,
			"date": "2013-04-05 05:44:08.258520",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> It looks somewhat implicit and fragile that builder name affects the\r\n> command.\r\n> I would prefer -cmd=race.bash flag.\r\n\r\nSure, but then you have to run two builders, or have two machines.\r\n",
			"disapproval": false,
			"date": "2013-04-05 05:52:28.150460",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"dvyukov@google.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FWIW, I see race.bash does this:\n\ngo install -race std\ngo test -race -short std\ngo test -race -run=nothingplease -bench=.* -benchtime=.1s -cpu=4 std\n\ngo install -race std installs a race-enabled cmd/go, which sometimes hits this bug when you run it:\n\nhttps://code.google.com/p/go/issues/detail?id=4840",
			"disapproval": false,
			"date": "2013-04-05 05:17:29.466240",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, dvyukov@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-04-05 01:39:02.656550",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": ">This allows {darwin,linux,windows}-amd64 builders to do race and\nnon race builds in sequence.\n\nI do not understand this part.\nIf the builder does not contain -race in it's name, then it won't do race build at all. What I am missing?\n\nPerhaps add -race flag, which enables race.bash after all.bash?\nThen existing builders can add -race to builder command line and test norace/race in sequence.",
			"disapproval": false,
			"date": "2013-04-05 05:01:00.150190",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> If the builder does not contain -race in it's name, then it won't do\r\n> race build at all. What I am missing?\r\n\r\nIf the builder doesn't contain -race, then it will use whatever the\r\nvalue of -buildCmd is (which defaults to all.{bash,bat}). Of the two\r\nrace builders we have, both have -race in their name.\r\n\r\n> Perhaps add -race flag, which enables race.bash after all.bash?\r\n> Then existing builders can add -race to builder command line and test\r\n> norace/race in sequence.\r\n\r\nNo, I don't want to do that because then the builder is doing two\r\nthings and can only report one failure  The second reason is the\r\nbuilders use whatever is in their workspace to build the subrepos, so\r\nthey cannot be both race and non race.\r\n",
			"disapproval": false,
			"date": "2013-04-05 05:12:22.366690",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 4, 2013 at 10:17 PM, <fullung@gmail.com> wrote:\r\n\r\n> FWIW, I see race.bash does this:\r\n>\r\n> go install -race std\r\n> go test -race -short std\r\n> go test -race -run=nothingplease -bench=.* -benchtime=.1s -cpu=4 std\r\n>\r\n> go install -race std installs a race-enabled cmd/go, which sometimes\r\n> hits this bug when you run it:\r\n>\r\n> https://code.google.com/p/go/**issues/detail?id=4840<https://code.google.com/p/go/issues/detail?id=4840>\r\n\r\n\r\nYeah, I know. I can't figure out what is the way to fix it.\r\nThe idea is that it should not systematically affect users. And for our own\r\npurposes (more stable builders) we can fix it after Go1.1.\r\n",
			"disapproval": false,
			"date": "2013-04-05 05:42:06.062420",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 4, 2013 at 10:12 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> > If the builder does not contain -race in it's name, then it won't do\r\n> > race build at all. What I am missing?\r\n>\r\n> If the builder doesn't contain -race, then it will use whatever the\r\n> value of -buildCmd is (which defaults to all.{bash,bat}). Of the two\r\n> race builders we have, both have -race in their name.\r\n\r\n\r\n\r\nHey, wait, we have 2 race builders?\r\n\r\n\r\n\r\n> > Perhaps add -race flag, which enables race.bash after all.bash?\r\n> > Then existing builders can add -race to builder command line and test\r\n> > norace/race in sequence.\r\n>\r\n> No, I don't want to do that because then the builder is doing two\r\n> things and can only report one failure  The second reason is the\r\n> builders use whatever is in their workspace to build the subrepos, so\r\n> they cannot be both race and non race.\r\n>\r\n\r\n\r\nHow people are supposed to use this.\r\n",
			"disapproval": false,
			"date": "2013-04-05 05:44:18.436000",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Hey, wait, we have 2 race builders?\r\n\r\nYup, using this modification to the builder my darwin builder now runs\r\na -race job as well using the build key darwin-amd64-race-cheney.\r\n\r\n\r\n> How people are supposed to use this.\r\n\r\nThey don't need to use this, but they can, like I did, add an extra\r\nbuild job to their existing builder.\r\n",
			"disapproval": false,
			"date": "2013-04-05 05:46:39.731370",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Have you seen such failures on race builders?\r\nI can't recall it on my linux builder. And it was hard to reproduce on\r\nsynthetic stress test.\r\n\r\n\r\nOn Thu, Apr 4, 2013 at 10:44 PM, <fullung@gmail.com> wrote:\r\n\r\n> On 2013/04/05 05:42:06, dvyukov wrote:\r\n>\r\n>> On Thu, Apr 4, 2013 at 10:17 PM, <mailto:fullung@gmail.com> wrote:\r\n>> > go install -race std installs a race-enabled cmd/go, which sometimes\r\n>> > hits this bug when you run it:\r\n>> Yeah, I know. I can't figure out what is the way to fix it.\r\n>> The idea is that it should not systematically affect users. And for\r\n>>\r\n> our own\r\n>\r\n>> purposes (more stable builders) we can fix it after Go1.1.\r\n>>\r\n>\r\n> Sure. Maybe one idea is to do:\r\n>\r\n> go install -race std\r\n> go install cmd/go\r\n>\r\n> in race.bash until this gets fixed?\r\n>\r\n> Regards\r\n>\r\n> Albert\r\n>\r\n> https://codereview.appspot.**com/8266046/<https://codereview.appspot.com/8266046/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-05 05:47:45.708990",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 4, 2013 at 10:46 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> > Hey, wait, we have 2 race builders?\r\n>\r\n> Yup, using this modification to the builder my darwin builder now runs\r\n> a -race job as well using the build key darwin-amd64-race-cheney.\r\n>\r\n>\r\n> > How people are supposed to use this.\r\n>\r\n> They don't need to use this, but they can, like I did, add an extra\r\n> build job to their existing builder.\r\n>\r\n\r\n\r\nIt looks somewhat implicit and fragile that builder name affects the\r\ncommand.\r\nI would prefer -cmd=race.bash flag.\r\n",
			"disapproval": false,
			"date": "2013-04-05 05:50:26.806560",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"dvyukov@google.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello\n\nOn 2013/04/05 05:47:45, dvyukov wrote:\n> Have you seen such failures on race builders?\n> I can't recall it on my linux builder. And it was hard to reproduce on\n> synthetic stress test.\n\nIt's a numbers game. I ran into this about once a day with my test builder.\n\nYou'll see from my initial report in issue 4840 that I started by debugging exactly such a stuck build.\n\nI only brought this up because I seem to recall that unsticking a dashboard builder is a manual process and you're making the race ones more likely to get stuck by running with a race-enabled go command.\n\nCheers\n\nAlbert",
			"disapproval": false,
			"date": "2013-04-05 05:54:27.802060",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"dvyukov@google.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I would also prefer to just use -cmd=race.bash for now.\n\nhttps://codereview.appspot.com/8266046/diff/5001/misc/dashboard/builder/main.go\nFile misc/dashboard/builder/main.go (right):\n\nhttps://codereview.appspot.com/8266046/diff/5001/misc/dashboard/builder/main.go#newcode219\nmisc/dashboard/builder/main.go:219: if strings.Index(b.name, \"-race\") >= 0 {\nstrings.Contains",
			"disapproval": false,
			"date": "2013-04-08 04:39:33.487660",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"dvyukov@google.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nActually, no. This is fine.\n\nPlease just address my comment first.",
			"disapproval": false,
			"date": "2013-04-08 04:40:07.290140",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"dvyukov@google.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done. Submitting.\n\nhttps://codereview.appspot.com/8266046/diff/5001/misc/dashboard/builder/main.go\nFile misc/dashboard/builder/main.go (right):\n\nhttps://codereview.appspot.com/8266046/diff/5001/misc/dashboard/builder/main.go#newcode219\nmisc/dashboard/builder/main.go:219: if strings.Index(b.name, \"-race\") >= 0 {\nOn 2013/04/08 04:39:33, adg wrote:\n> strings.Contains\n\nDone.",
			"disapproval": false,
			"date": "2013-04-09 02:47:42.102250",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"dvyukov@google.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=01679e274dd1 ***\n\nmisc/dashboard/builder: add -race builder support\n\nIf the build key contains -race, the builder will invoke to the race.{bat,bash} build command. This allows {darwin,linux,windows}-amd64 builders to do race and non race builds in sequence.\n\nR=adg, dvyukov, fullung\nCC=golang-dev\nhttps://codereview.appspot.com/8266046",
			"disapproval": false,
			"date": "2013-04-09 02:48:21.593930",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 8266046: misc/dashboard/builder: add -race builder support",
	"created": "2013-04-05 01:36:22.340020",
	"patchsets": [
		1,
		2001,
		5001,
		20001,
		24001
	],
	"modified": "2013-04-09 02:48:25.208540",
	"closed": true,
	"issue": 8266046
}