{
	"description": "appengine: add service account helpers",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: adg@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/goauth2",
			"disapproval": false,
			"date": "2013-06-04 06:35:14.758130",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go\nFile oauth/appengine/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go#newcode47\noauth/appengine/serviceaccount.go:47: func GetAccessToken(c appengine.Context, scopes ...string) (string, error) {\ns/Get//\n\nMaybe this should be CachedAccessToken, as distinct from appengine.AccessToken.\n\nThe token is per-app, right? So there's no issue here with sharing the cache key between multiple instances of the same app?\n\nhttps://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go#newcode67\noauth/appengine/serviceaccount.go:67: func NewClient(c appengine.Context, scopes ...string) (*http.Client, error) {\nA recent change to the oauth package means you should be able to just construct and use a regular oauth.Transport for this:\n\nreturn &http.Client{Transport:&oauth.Transport{\n  Token:&oauth.Token{AccessToken: token},\n  Transport: &urlfetch.Transport{...},\n}}",
			"disapproval": false,
			"date": "2013-06-05 06:46:59.837170",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go\nFile oauth/appengine/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go#newcode17\noauth/appengine/serviceaccount.go:17: //\tclient, err := serviceaccount.NewClient(c, \"https://www.googleapis.com/auth/compute\", \"https://www.googleapis.com/auth/bigquery\")\ncheck the errors in the example, please\n\nhttps://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go#newcode24\noauth/appengine/serviceaccount.go:24: //\t\tTransport: &accesstoken.Transport{\naccesstoken.Transport? that doesn't exist. but you won't need it (see lower comments)",
			"disapproval": false,
			"date": "2013-06-05 06:47:59.257130",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go\nFile oauth/appengine/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go#newcode17\noauth/appengine/serviceaccount.go:17: //\tclient, err := serviceaccount.NewClient(c, \"https://www.googleapis.com/auth/compute\", \"https://www.googleapis.com/auth/bigquery\")\nOn 2013/06/05 06:47:59, adg wrote:\n> check the errors in the example, please\n\nDone.\n\nhttps://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go#newcode24\noauth/appengine/serviceaccount.go:24: //\t\tTransport: &accesstoken.Transport{\nOn 2013/06/05 06:47:59, adg wrote:\n> accesstoken.Transport? that doesn't exist. but you won't need it (see lower\n> comments)\n\ntype, renamed the package since then, Done.\n\nhttps://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go#newcode47\noauth/appengine/serviceaccount.go:47: func GetAccessToken(c appengine.Context, scopes ...string) (string, error) {\nOn 2013/06/05 06:46:59, adg wrote:\n> s/Get//\n> \n> Maybe this should be CachedAccessToken, as distinct from appengine.AccessToken.\n> \n> The token is per-app, right? So there's no issue here with sharing the cache key\n> between multiple instances of the same app?\n\nI splitted the cache in a separate file, and implement oauth.Cache interface. The cache is indeed per app, but I made the scopes part of the key.\n\nhttps://codereview.appspot.com/9998043/diff/2001/oauth/appengine/serviceaccount.go#newcode67\noauth/appengine/serviceaccount.go:67: func NewClient(c appengine.Context, scopes ...string) (*http.Client, error) {\nOn 2013/06/05 06:46:59, adg wrote:\n> A recent change to the oauth package means you should be able to just construct\n> and use a regular oauth.Transport for this:\n> \n> return &http.Client{Transport:&oauth.Transport{\n>   Token:&oauth.Token{AccessToken: token},\n>   Transport: &urlfetch.Transport{...},\n> }}\n\nCool, I just looked into this, but I can't really reuse oauth.Transport there because the Refresh logic is different: but I did mimic the interface of it (by moving the AccessToken call in a Refresh method): see the new implementation.",
			"disapproval": false,
			"date": "2013-06-05 10:01:00.453110",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/cache.go\nFile oauth/appengine/serviceaccount/cache.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/cache.go#newcode25\noauth/appengine/serviceaccount/cache.go:25: const KeyPrefix = \"goauth2_appengine_serviceaccount_cache_\"\nIf you require the user specify the key, I wouldn't worry about the prefix.\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go\nFile oauth/appengine/serviceaccount/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode5\noauth/appengine/serviceaccount/serviceaccount.go:5: // +build !appengine\nthis is wrong, surely? we only want to build this on app engine\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode21\noauth/appengine/serviceaccount/serviceaccount.go:21: //  }\nindent\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode57\noauth/appengine/serviceaccount/serviceaccount.go:57: transport := &Transport{\ns/transport/t/\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode81\noauth/appengine/serviceaccount/serviceaccount.go:81: type Transport struct {\nThis is OK for now, but we need to improve the oauth.Transport to make it easy to do this.\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode125\noauth/appengine/serviceaccount/serviceaccount.go:125: newReq.Header.Set(\"Authorization\", \"Bearer \"+t.AccessToken)\nyou need to clone the headers, too.\n\njust copy the cloneRequest function from goauth2's oauth.go",
			"disapproval": false,
			"date": "2013-06-06 00:35:54.191830",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/cache.go\nFile oauth/appengine/serviceaccount/cache.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/cache.go#newcode25\noauth/appengine/serviceaccount/cache.go:25: const KeyPrefix = \"goauth2_appengine_serviceaccount_cache_\"\nOn 2013/06/06 00:35:54, adg wrote:\n> If you require the user specify the key, I wouldn't worry about the prefix.\n\nDone.\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go\nFile oauth/appengine/serviceaccount/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode5\noauth/appengine/serviceaccount/serviceaccount.go:5: // +build !appengine\nOn 2013/06/06 00:35:54, adg wrote:\n> this is wrong, surely? we only want to build this on app engine\n\nDone. In flagrante delicto of cargo cult programming.\n\nI was also confused because the go tool contained in the SDK wouldn't set the appengine build tag by default.\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode21\noauth/appengine/serviceaccount/serviceaccount.go:21: //  }\nOn 2013/06/06 00:35:54, adg wrote:\n> indent\n\nDone.\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode57\noauth/appengine/serviceaccount/serviceaccount.go:57: transport := &Transport{\nOn 2013/06/06 00:35:54, adg wrote:\n> s/transport/t/\n\nDone.\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode81\noauth/appengine/serviceaccount/serviceaccount.go:81: type Transport struct {\nOn 2013/06/06 00:35:54, adg wrote:\n> This is OK for now, but we need to improve the oauth.Transport to make it easy\n> to do this.\n\nfiled: https://code.google.com/p/goauth2/issues/detail?id=18\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode125\noauth/appengine/serviceaccount/serviceaccount.go:125: newReq.Header.Set(\"Authorization\", \"Bearer \"+t.AccessToken)\nOn 2013/06/06 00:35:54, adg wrote:\n> you need to clone the headers, too.\n> \n> just copy the cloneRequest function from goauth2's oauth.go\n\nMade oauth.CloneRequest public.",
			"disapproval": false,
			"date": "2013-06-06 14:58:10.403440",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go\nFile oauth/appengine/serviceaccount/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode81\noauth/appengine/serviceaccount/serviceaccount.go:81: type Transport struct {\nOn 2013/06/06 14:58:10, proppy wrote:\n> On 2013/06/06 00:35:54, adg wrote:\n> > This is OK for now, but we need to improve the oauth.Transport to make it easy\n> > to do this.\n> \n> filed: https://code.google.com/p/goauth2/issues/detail?id=18\n\nThanks\n\nhttps://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode125\noauth/appengine/serviceaccount/serviceaccount.go:125: newReq.Header.Set(\"Authorization\", \"Bearer \"+t.AccessToken)\nOn 2013/06/06 14:58:10, proppy wrote:\n> On 2013/06/06 00:35:54, adg wrote:\n> > you need to clone the headers, too.\n> > \n> > just copy the cloneRequest function from goauth2's oauth.go\n> \n> Made oauth.CloneRequest public.\n\nNo, don't do that. There is no reason that should be part of the oauth package's exported interface. Plus it only does the right thing in this specific instance.\n\nThere is nothing wrong with copying a bit of trivial code.",
			"disapproval": false,
			"date": "2013-06-06 23:26:17.222470",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/06 23:26:17, adg wrote:\n> https://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go\n> File oauth/appengine/serviceaccount/serviceaccount.go (right):\n> \n> https://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode81\n> oauth/appengine/serviceaccount/serviceaccount.go:81: type Transport struct {\n> On 2013/06/06 14:58:10, proppy wrote:\n> > On 2013/06/06 00:35:54, adg wrote:\n> > > This is OK for now, but we need to improve the oauth.Transport to make it\n> easy\n> > > to do this.\n> > \n> > filed: https://code.google.com/p/goauth2/issues/detail?id=18\n> \n> Thanks\n> \n> https://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode125\n> oauth/appengine/serviceaccount/serviceaccount.go:125:\n> newReq.Header.Set(\"Authorization\", \"Bearer \"+t.AccessToken)\n> On 2013/06/06 14:58:10, proppy wrote:\n> > On 2013/06/06 00:35:54, adg wrote:\n> > > you need to clone the headers, too.\n> > > \n> > > just copy the cloneRequest function from goauth2's oauth.go\n> > \n> > Made oauth.CloneRequest public.\n> \n> No, don't do that. There is no reason that should be part of the oauth package's\n> exported interface. Plus it only does the right thing in this specific instance.\n> \n> There is nothing wrong with copying a bit of trivial code.\n\nVery true, I might quote this in my OSCON talk :)",
			"disapproval": false,
			"date": "2013-06-07 00:29:41.605850",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/07 00:29:41, proppy wrote:\n> On 2013/06/06 23:26:17, adg wrote:\n> >\n> https://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go\n> > File oauth/appengine/serviceaccount/serviceaccount.go (right):\n> > \n> >\n> https://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode81\n> > oauth/appengine/serviceaccount/serviceaccount.go:81: type Transport struct {\n> > On 2013/06/06 14:58:10, proppy wrote:\n> > > On 2013/06/06 00:35:54, adg wrote:\n> > > > This is OK for now, but we need to improve the oauth.Transport to make it\n> > easy\n> > > > to do this.\n> > > \n> > > filed: https://code.google.com/p/goauth2/issues/detail?id=18\n> > \n> > Thanks\n> > \n> >\n> https://codereview.appspot.com/9998043/diff/13001/oauth/appengine/serviceaccount/serviceaccount.go#newcode125\n> > oauth/appengine/serviceaccount/serviceaccount.go:125:\n> > newReq.Header.Set(\"Authorization\", \"Bearer \"+t.AccessToken)\n> > On 2013/06/06 14:58:10, proppy wrote:\n> > > On 2013/06/06 00:35:54, adg wrote:\n> > > > you need to clone the headers, too.\n> > > > \n> > > > just copy the cloneRequest function from goauth2's oauth.go\n> > > \n> > > Made oauth.CloneRequest public.\n> > \n> > No, don't do that. There is no reason that should be part of the oauth\n> package's\n> > exported interface. Plus it only does the right thing in this specific\n> instance.\n> > \n> > There is nothing wrong with copying a bit of trivial code.\n> \n> Very true, I might quote this in my OSCON talk :)\n\nand I forgot to say PTAL.",
			"disapproval": false,
			"date": "2013-06-10 23:48:09.596560",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looking good, but can you put this in the root/appengine/serviceaccount directory (ie move it one level up?)",
			"disapproval": false,
			"date": "2013-06-18 03:54:20.840740",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/18 03:54:20, adg wrote:\n> Looking good, but can you put this in the root/appengine/serviceaccount\n> directory (ie move it one level up?)\n\nGiven that the jwt/ stuff is also under oauth/ do you want to also move it 1 level up?\n\n(Maybe we could do that in a separate re-org cl, if that's the case).",
			"disapproval": false,
			"date": "2013-06-18 21:59:49.014260",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go\nFile appengine/serviceaccount/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go#newcode26\nappengine/serviceaccount/serviceaccount.go:26: //\ttransport := &serviceaccount.Transport{\nI think it might be worth unexporting the Transport type; what do you think?",
			"disapproval": false,
			"date": "2013-06-19 03:32:47.291310",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 19 June 2013 07:59, <proppy@google.com> wrote:\r\n\r\n> Given that the jwt/ stuff is also under oauth/ do you want to also move\r\n> it 1 level up?\r\n>\r\n> (Maybe we could do that in a separate re-org cl, if that's the case).\r\n>\r\n\r\nI do want to do that at some point, but not now. There are people that\r\ndepend on it.\r\n",
			"disapproval": false,
			"date": "2013-06-18 22:03:28.070970",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/18 22:03:28, adg wrote:\n> On 19 June 2013 07:59, <mailto:proppy@google.com> wrote:\n> \n> > Given that the jwt/ stuff is also under oauth/ do you want to also move\n> > it 1 level up?\n> >\n> > (Maybe we could do that in a separate re-org cl, if that's the case).\n> >\n> \n> I do want to do that at some point, but not now. There are people that\n> depend on it.\n\nPTAL",
			"disapproval": false,
			"date": "2013-06-18 22:32:03.329880",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go\nFile appengine/serviceaccount/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go#newcode26\nappengine/serviceaccount/serviceaccount.go:26: //\ttransport := &serviceaccount.Transport{\nOn 2013/06/19 03:32:47, adg wrote:\n> I think it might be worth unexporting the Transport type; what do you think?\n\nThen how do stack this on a customTransport?",
			"disapproval": false,
			"date": "2013-06-19 18:13:12.592500",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=adg",
			"disapproval": false,
			"date": "2013-06-19 21:27:46.921650",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/19 18:13:12, proppy wrote:\n> https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go\n> File appengine/serviceaccount/serviceaccount.go (right):\n> \n> https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go#newcode26\n> appengine/serviceaccount/serviceaccount.go:26: //\ttransport :=\n> &serviceaccount.Transport{\n> On 2013/06/19 03:32:47, adg wrote:\n> > I think it might be worth unexporting the Transport type; what do you think?\n> \n> Then how do stack this on a customTransport?\n\ns/do/to/",
			"disapproval": false,
			"date": "2013-06-19 23:46:55.830810",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go\nFile appengine/serviceaccount/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go#newcode26\nappengine/serviceaccount/serviceaccount.go:26: //\ttransport := &serviceaccount.Transport{\nOn 2013/06/19 18:13:12, proppy wrote:\n> On 2013/06/19 03:32:47, adg wrote:\n> > I think it might be worth unexporting the Transport type; what do you think?\n> \n> Then how do stack this on a customTransport?\n\nWhy would you ever want to use anything other than urlfetch?",
			"disapproval": false,
			"date": "2013-06-24 03:59:55.198030",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You might want to also add googleapi.transport.ApiKey but I agree you can\r\nalways stack them the other way around and put serviceaccount on the\r\nbottom. It really depend if you want to enforce that or not.\r\nOn Jun 19, 2013 4:46 PM, <proppy@google.com> wrote:\r\n\r\n> On 2013/06/19 18:13:12, proppy wrote:\r\n>\r\n> https://codereview.appspot.**com/9998043/diff/34001/**\r\n> appengine/serviceaccount/**serviceaccount.go<https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go>\r\n>\r\n>> File appengine/serviceaccount/**serviceaccount.go (right):\r\n>>\r\n>\r\n>\r\n> https://codereview.appspot.**com/9998043/diff/34001/**\r\n> appengine/serviceaccount/**serviceaccount.go#newcode26<https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go#newcode26>\r\n>\r\n>> appengine/serviceaccount/**serviceaccount.go:26: //       transport :=\r\n>> &serviceaccount.Transport{\r\n>> On 2013/06/19 03:32:47, adg wrote:\r\n>> > I think it might be worth unexporting the Transport type; what do\r\n>>\r\n> you think?\r\n>\r\n>  Then how do stack this on a customTransport?\r\n>>\r\n>\r\n> s/do/to/\r\n>\r\n> https://codereview.appspot.**com/9998043/<https://codereview.appspot.com/9998043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-24 04:39:33.687690",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Do you also want to hide other field like, Context, Scopes, and TokenCache?\n\nShould the cache be optional?\n\nOn 2013/06/24 04:46:45, proppy wrote:\n> I agree, this is specific enough (oauth+appengine+serviceaccount) I think\n> nobody needs the flexibility of overriding the underlying transport. It\n> will also make the doc simpler :)\n> On Jun 23, 2013 9:41 PM, \"Andrew Gerrand\" <mailto:adg@golang.org> wrote:\n> \n> > What I want is the simplest possible API that is useful. It doesn't need\n> > to be a swiss army tool, just the thing that is unambiguously the right\n> > thing to use. For service-account auth on appengine, NewClient seems the\n> > thing.\n> >\n> >\n> >\n> >\n> > On 24 June 2013 14:39, Johan Euphrosine <mailto:proppy@google.com> wrote:\n> >\n> >> You might want to also add googleapi.transport.ApiKey but I agree you can\n> >> always stack them the other way around and put serviceaccount on the\n> >> bottom. It really depend if you want to enforce that or not.\n> >>  On Jun 19, 2013 4:46 PM, <mailto:proppy@google.com> wrote:\n> >>\n> >>> On 2013/06/19 18:13:12, proppy wrote:\n> >>>\n> >>> https://codereview.appspot.**com/9998043/diff/34001/**\n> >>>\n> appengine/serviceaccount/**serviceaccount.go<https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go>\n> >>>\n> >>>> File appengine/serviceaccount/**serviceaccount.go (right):\n> >>>>\n> >>>\n> >>>\n> >>> https://codereview.appspot.**com/9998043/diff/34001/**\n> >>>\n> appengine/serviceaccount/**serviceaccount.go#newcode26<https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go#newcode26>\n> >>>\n> >>>> appengine/serviceaccount/**serviceaccount.go:26: //       transport :=\n> >>>> &serviceaccount.Transport{\n> >>>> On 2013/06/19 03:32:47, adg wrote:\n> >>>> > I think it might be worth unexporting the Transport type; what do\n> >>>>\n> >>> you think?\n> >>>\n> >>>  Then how do stack this on a customTransport?\n> >>>>\n> >>>\n> >>> s/do/to/\n> >>>\n> >>>\n> https://codereview.appspot.**com/9998043/%3Chttps://codereview.appspot.com/9998043/>\n> >>>\n> >>\n> >",
			"disapproval": false,
			"date": "2013-06-25 00:51:45.663240",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "What I want is the simplest possible API that is useful. It doesn't need to\r\nbe a swiss army tool, just the thing that is unambiguously the right thing\r\nto use. For service-account auth on appengine, NewClient seems the thing.\r\n\r\n\r\n\r\n\r\nOn 24 June 2013 14:39, Johan Euphrosine <proppy@google.com> wrote:\r\n\r\n> You might want to also add googleapi.transport.ApiKey but I agree you can\r\n> always stack them the other way around and put serviceaccount on the\r\n> bottom. It really depend if you want to enforce that or not.\r\n>  On Jun 19, 2013 4:46 PM, <proppy@google.com> wrote:\r\n>\r\n>> On 2013/06/19 18:13:12, proppy wrote:\r\n>>\r\n>> https://codereview.appspot.**com/9998043/diff/34001/**\r\n>> appengine/serviceaccount/**serviceaccount.go<https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go>\r\n>>\r\n>>> File appengine/serviceaccount/**serviceaccount.go (right):\r\n>>>\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/9998043/diff/34001/**\r\n>> appengine/serviceaccount/**serviceaccount.go#newcode26<https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go#newcode26>\r\n>>\r\n>>> appengine/serviceaccount/**serviceaccount.go:26: //       transport :=\r\n>>> &serviceaccount.Transport{\r\n>>> On 2013/06/19 03:32:47, adg wrote:\r\n>>> > I think it might be worth unexporting the Transport type; what do\r\n>>>\r\n>> you think?\r\n>>\r\n>>  Then how do stack this on a customTransport?\r\n>>>\r\n>>\r\n>> s/do/to/\r\n>>\r\n>> https://codereview.appspot.**com/9998043/<https://codereview.appspot.com/9998043/>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-24 04:41:08.573810",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I agree, this is specific enough (oauth+appengine+serviceaccount) I think\r\nnobody needs the flexibility of overriding the underlying transport. It\r\nwill also make the doc simpler :)\r\nOn Jun 23, 2013 9:41 PM, \"Andrew Gerrand\" <adg@golang.org> wrote:\r\n\r\n> What I want is the simplest possible API that is useful. It doesn't need\r\n> to be a swiss army tool, just the thing that is unambiguously the right\r\n> thing to use. For service-account auth on appengine, NewClient seems the\r\n> thing.\r\n>\r\n>\r\n>\r\n>\r\n> On 24 June 2013 14:39, Johan Euphrosine <proppy@google.com> wrote:\r\n>\r\n>> You might want to also add googleapi.transport.ApiKey but I agree you can\r\n>> always stack them the other way around and put serviceaccount on the\r\n>> bottom. It really depend if you want to enforce that or not.\r\n>>  On Jun 19, 2013 4:46 PM, <proppy@google.com> wrote:\r\n>>\r\n>>> On 2013/06/19 18:13:12, proppy wrote:\r\n>>>\r\n>>> https://codereview.appspot.**com/9998043/diff/34001/**\r\n>>> appengine/serviceaccount/**serviceaccount.go<https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go>\r\n>>>\r\n>>>> File appengine/serviceaccount/**serviceaccount.go (right):\r\n>>>>\r\n>>>\r\n>>>\r\n>>> https://codereview.appspot.**com/9998043/diff/34001/**\r\n>>> appengine/serviceaccount/**serviceaccount.go#newcode26<https://codereview.appspot.com/9998043/diff/34001/appengine/serviceaccount/serviceaccount.go#newcode26>\r\n>>>\r\n>>>> appengine/serviceaccount/**serviceaccount.go:26: //       transport :=\r\n>>>> &serviceaccount.Transport{\r\n>>>> On 2013/06/19 03:32:47, adg wrote:\r\n>>>> > I think it might be worth unexporting the Transport type; what do\r\n>>>>\r\n>>> you think?\r\n>>>\r\n>>>  Then how do stack this on a customTransport?\r\n>>>>\r\n>>>\r\n>>> s/do/to/\r\n>>>\r\n>>> https://codereview.appspot.**com/9998043/<https://codereview.appspot.com/9998043/>\r\n>>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-24 04:46:45.167070",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/25 00:51:45, proppy wrote:\n> Do you also want to hide other field like, Context, Scopes, and TokenCache?\n> \n> Should the cache be optional?\n\nLet's start by only exporting NewClient.\nThe fields on the Transport struct can stay exported, but Transport should be \"transport\" (unexported).",
			"disapproval": false,
			"date": "2013-06-25 04:09:22.353220",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/25 04:09:22, adg wrote:\n> On 2013/06/25 00:51:45, proppy wrote:\n> > Do you also want to hide other field like, Context, Scopes, and TokenCache?\n> > \n> > Should the cache be optional?\n> \n> Let's start by only exporting NewClient.\n> The fields on the Transport struct can stay exported, but Transport should be\n> \"transport\" (unexported).\n\nDone.\n\nPTAL",
			"disapproval": false,
			"date": "2013-06-25 17:24:19.467900",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/25 17:24:19, proppy wrote:\n> On 2013/06/25 04:09:22, adg wrote:\n> > On 2013/06/25 00:51:45, proppy wrote:\n> > > Do you also want to hide other field like, Context, Scopes, and TokenCache?\n> > > \n> > > Should the cache be optional?\n> > \n> > Let's start by only exporting NewClient.\n> > The fields on the Transport struct can stay exported, but Transport should be\n> > \"transport\" (unexported).\n> \n> Done.\n> \n> PTAL\n\nFYI, I also updated the service account sample to make use of this:\nhttps://github.com/GoogleCloudPlatform/appengine-goshorten/pull/2",
			"disapproval": false,
			"date": "2013-06-25 17:56:46.992190",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9998043/diff/44001/appengine/serviceaccount/cache.go\nFile appengine/serviceaccount/cache.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/44001/appengine/serviceaccount/cache.go#newcode20\nappengine/serviceaccount/cache.go:20: type Cache struct {\nand this?\n\nhttps://codereview.appspot.com/9998043/diff/44001/appengine/serviceaccount/serviceaccount.go\nFile appengine/serviceaccount/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/44001/appengine/serviceaccount/serviceaccount.go#newcode63\nappengine/serviceaccount/serviceaccount.go:63: type Transport struct {\nI thought we said this would be unexported?",
			"disapproval": false,
			"date": "2013-06-26 01:12:05.303660",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/9998043/diff/44001/appengine/serviceaccount/cache.go\nFile appengine/serviceaccount/cache.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/44001/appengine/serviceaccount/cache.go#newcode20\nappengine/serviceaccount/cache.go:20: type Cache struct {\nOn 2013/06/26 01:12:05, adg wrote:\n> and this?\n\nDone.\n\nhttps://codereview.appspot.com/9998043/diff/44001/appengine/serviceaccount/serviceaccount.go\nFile appengine/serviceaccount/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/44001/appengine/serviceaccount/serviceaccount.go#newcode63\nappengine/serviceaccount/serviceaccount.go:63: type Transport struct {\nOn 2013/06/26 01:12:05, adg wrote:\n> I thought we said this would be unexported?\n\nOh, sorry for the missunderding I though you were refering to Transport field not service.Transport type. (hence my question about the other member).\n\nDone.",
			"disapproval": false,
			"date": "2013-06-26 01:21:42.902080",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/cache.go\nFile appengine/serviceaccount/cache.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/cache.go#newcode18\nappengine/serviceaccount/cache.go:18: // A TokenCache implementation that use memcache to store AccessToken\n// cache implements TokenCache using memcache...\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go\nFile appengine/serviceaccount/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode15\nappengine/serviceaccount/serviceaccount.go:15: //\t// simple usage.\ndelete\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode37\nappengine/serviceaccount/serviceaccount.go:37: // NewClient returns a new *http.Client authorized for the\ns/a new/an/\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode38\nappengine/serviceaccount/serviceaccount.go:38: // given scopes with the service account owned by the application.\nmention caching",
			"disapproval": false,
			"date": "2013-06-26 01:23:50.909110",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/cache.go\nFile appengine/serviceaccount/cache.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/cache.go#newcode18\nappengine/serviceaccount/cache.go:18: // A TokenCache implementation that use memcache to store AccessToken\nOn 2013/06/26 01:23:51, adg wrote:\n> // cache implements TokenCache using memcache...\n\nDone.\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go\nFile appengine/serviceaccount/serviceaccount.go (right):\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode15\nappengine/serviceaccount/serviceaccount.go:15: //\t// simple usage.\nOn 2013/06/26 01:23:51, adg wrote:\n> delete\n\nDone.\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode37\nappengine/serviceaccount/serviceaccount.go:37: // NewClient returns a new *http.Client authorized for the\nOn 2013/06/26 01:23:51, adg wrote:\n> s/a new/an/\n\nDone.\n\nhttps://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode38\nappengine/serviceaccount/serviceaccount.go:38: // given scopes with the service account owned by the application.\nOn 2013/06/26 01:23:51, adg wrote:\n> mention caching\n\nDone.",
			"disapproval": false,
			"date": "2013-06-26 01:33:15.620580",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Upload?\r\n\r\n\r\nOn 26 June 2013 11:33, <proppy@google.com> wrote:\r\n\r\n> PTAL\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.**com/9998043/diff/51002/**\r\n> appengine/serviceaccount/**cache.go<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/cache.go>\r\n> File appengine/serviceaccount/**cache.go (right):\r\n>\r\n> https://codereview.appspot.**com/9998043/diff/51002/**\r\n> appengine/serviceaccount/**cache.go#newcode18<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/cache.go#newcode18>\r\n> appengine/serviceaccount/**cache.go:18: // A TokenCache implementation\r\n> that use memcache to store AccessToken\r\n> On 2013/06/26 01:23:51, adg wrote:\r\n>\r\n>> // cache implements TokenCache using memcache...\r\n>>\r\n>\r\n> Done.\r\n>\r\n>\r\n> https://codereview.appspot.**com/9998043/diff/51002/**\r\n> appengine/serviceaccount/**serviceaccount.go<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go>\r\n> File appengine/serviceaccount/**serviceaccount.go (right):\r\n>\r\n> https://codereview.appspot.**com/9998043/diff/51002/**\r\n> appengine/serviceaccount/**serviceaccount.go#newcode15<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode15>\r\n> appengine/serviceaccount/**serviceaccount.go:15: //       // simple usage.\r\n> On 2013/06/26 01:23:51, adg wrote:\r\n>\r\n>> delete\r\n>>\r\n>\r\n> Done.\r\n>\r\n>\r\n> https://codereview.appspot.**com/9998043/diff/51002/**\r\n> appengine/serviceaccount/**serviceaccount.go#newcode37<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode37>\r\n> appengine/serviceaccount/**serviceaccount.go:37: // NewClient returns a\r\n> new *http.Client authorized for the\r\n> On 2013/06/26 01:23:51, adg wrote:\r\n>\r\n>> s/a new/an/\r\n>>\r\n>\r\n> Done.\r\n>\r\n>\r\n> https://codereview.appspot.**com/9998043/diff/51002/**\r\n> appengine/serviceaccount/**serviceaccount.go#newcode38<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode38>\r\n> appengine/serviceaccount/**serviceaccount.go:38: // given scopes with the\r\n> service account owned by the application.\r\n> On 2013/06/26 01:23:51, adg wrote:\r\n>\r\n>> mention caching\r\n>>\r\n>\r\n> Done.\r\n>\r\n> https://codereview.appspot.**com/9998043/<https://codereview.appspot.com/9998043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-26 01:38:03.090670",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done, sorry\r\n\r\n\r\nOn Tue, Jun 25, 2013 at 6:37 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n\r\n> Upload?\r\n>\r\n>\r\n> On 26 June 2013 11:33, <proppy@google.com> wrote:\r\n>\r\n>> PTAL\r\n>>\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/9998043/diff/51002/**\r\n>> appengine/serviceaccount/**cache.go<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/cache.go>\r\n>> File appengine/serviceaccount/**cache.go (right):\r\n>>\r\n>> https://codereview.appspot.**com/9998043/diff/51002/**\r\n>> appengine/serviceaccount/**cache.go#newcode18<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/cache.go#newcode18>\r\n>> appengine/serviceaccount/**cache.go:18: // A TokenCache implementation\r\n>> that use memcache to store AccessToken\r\n>> On 2013/06/26 01:23:51, adg wrote:\r\n>>\r\n>>> // cache implements TokenCache using memcache...\r\n>>>\r\n>>\r\n>> Done.\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/9998043/diff/51002/**\r\n>> appengine/serviceaccount/**serviceaccount.go<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go>\r\n>> File appengine/serviceaccount/**serviceaccount.go (right):\r\n>>\r\n>> https://codereview.appspot.**com/9998043/diff/51002/**\r\n>> appengine/serviceaccount/**serviceaccount.go#newcode15<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode15>\r\n>> appengine/serviceaccount/**serviceaccount.go:15: //       // simple\r\n>> usage.\r\n>> On 2013/06/26 01:23:51, adg wrote:\r\n>>\r\n>>> delete\r\n>>>\r\n>>\r\n>> Done.\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/9998043/diff/51002/**\r\n>> appengine/serviceaccount/**serviceaccount.go#newcode37<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode37>\r\n>> appengine/serviceaccount/**serviceaccount.go:37: // NewClient returns a\r\n>> new *http.Client authorized for the\r\n>> On 2013/06/26 01:23:51, adg wrote:\r\n>>\r\n>>> s/a new/an/\r\n>>>\r\n>>\r\n>> Done.\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/9998043/diff/51002/**\r\n>> appengine/serviceaccount/**serviceaccount.go#newcode38<https://codereview.appspot.com/9998043/diff/51002/appengine/serviceaccount/serviceaccount.go#newcode38>\r\n>> appengine/serviceaccount/**serviceaccount.go:38: // given scopes with the\r\n>> service account owned by the application.\r\n>> On 2013/06/26 01:23:51, adg wrote:\r\n>>\r\n>>> mention caching\r\n>>>\r\n>>\r\n>> Done.\r\n>>\r\n>> https://codereview.appspot.**com/9998043/<https://codereview.appspot.com/9998043/>\r\n>>\r\n>\r\n>\r\n\r\n\r\n-- \r\nJohan Euphrosine (proppy)\r\nDeveloper Programs Engineer\r\nGoogle Developer Relations\r\n",
			"disapproval": false,
			"date": "2013-06-26 01:40:04.325080",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks!",
			"disapproval": false,
			"date": "2013-06-26 01:44:58.514260",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/goauth2/source/detail?r=ecc4c1308422 ***\n\nappengine: add service account helpers\n\nR=golang-dev, adg\nCC=golang-dev\nhttps://codereview.appspot.com/9998043\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2013-06-26 01:50:58.593010",
			"approval": false
		}
	],
	"owner_email": "proppy@google.com",
	"private": false,
	"base_url": "",
	"owner": "proppy",
	"subject": "code review 9998043: oauth/appengine: add service account helpers",
	"created": "2013-06-04 06:34:22.640720",
	"patchsets": [
		1,
		2001,
		6001,
		8001,
		13001,
		19001,
		22002,
		34001,
		44001,
		51002,
		59001
	],
	"modified": "2013-06-26 01:50:59.437370",
	"closed": false,
	"issue": 9998043
}