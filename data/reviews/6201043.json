{
	"description": "freetype: remove arbitrary 1<<24 limit on ttf file size.\n\nI'm not sure why I put that limit in in the first place. I can't find\nthat limit in either the C Freetype code or the TTF spec.",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/freetype-go",
			"disapproval": false,
			"date": "2012-05-04 08:14:14.893038",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Fri, May 4, 2012 at 6:14 PM, <nigeltao@golang.org> wrote:\r\n\r\n> Reviewers: bradfitz,\r\n>\r\n> Message:\r\n> Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/**freetype-go<https://code.google.com/p/freetype-go>\r\n>\r\n>\r\n> Description:\r\n> freetype: remove arbitrary 1<<24 limit on ttf file size.\r\n>\r\n> I'm not sure why I put that limit in in the first place. I can't find\r\n> that limit in either the C Freetype code or the TTF spec.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6201043/<http://codereview.appspot.com/6201043/>\r\n>\r\n> Affected files:\r\n>  M freetype/truetype/truetype.go\r\n>\r\n>\r\n> Index: freetype/truetype/truetype.go\r\n> ==============================**==============================**=======\r\n> --- a/freetype/truetype/truetype.**go\r\n> +++ b/freetype/truetype/truetype.**go\r\n> @@ -80,14 +80,18 @@\r\n>  func readTable(ttf []byte, offsetLength []byte) ([]byte, error) {\r\n>        d := data(offsetLength)\r\n>        offset := int(d.u32())\r\n> -       if offset < 0 || offset > 1<<24 || offset > len(ttf) {\r\n> -               return nil, FormatError(fmt.Sprintf(\"**offset too large:\r\n> %d\", offset))\r\n> +       if offset < 0 {\r\n> +               return nil, FormatError(fmt.Sprintf(\"**offset too large:\r\n> %d\", uint32(offset)))\r\n>        }\r\n>        length := int(d.u32())\r\n> -       if length < 0 || length > 1<<24 || offset+length > len(ttf) {\r\n> -               return nil, FormatError(fmt.Sprintf(\"**length too large:\r\n> %d\", length))\r\n> +       if length < 0 {\r\n> +               return nil, FormatError(fmt.Sprintf(\"**length too large:\r\n> %d\", uint32(length)))\r\n>        }\r\n> -       return ttf[offset : offset+length], nil\r\n> +       end := offset + length\r\n> +       if end < 0 || end > len(ttf) {\r\n> +               return nil, FormatError(fmt.Sprintf(\"**offset + length\r\n> too large: %d\", uint32(offset)+uint32(length))**)\r\n> +       }\r\n> +       return ttf[offset:end], nil\r\n>  }\r\n>\r\n>  const (\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-04 08:21:15.162116",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/freetype-go/source/detail?r=4ae66bdadf6f ***\n\nfreetype: remove arbitrary 1<<24 limit on ttf file size.\n\nI'm not sure why I put that limit in in the first place. I can't find\nthat limit in either the C Freetype code or the TTF spec.\n\nR=bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6201043",
			"disapproval": false,
			"date": "2012-05-06 23:37:53.112429",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6201043: freetype: remove arbitrary 1<<24 limit on ttf file size.",
	"created": "2012-05-04 08:13:51.316953",
	"patchsets": [
		1,
		2001,
		5001,
		8002
	],
	"modified": "2012-05-06 23:37:56.346363",
	"closed": true,
	"issue": 6201043
}