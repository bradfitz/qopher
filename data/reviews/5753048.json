{
	"description": "net: add skip message to test",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nbut %s probably is fine. runtime.GOOS won't have sketchy contents, which is\nwhere %q comes in useful. either way.\n\nOn Mon, Mar 5, 2012 at 10:11 PM, <mikioh.mikioh@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> net: add skip message to test\n>\n> Please review this at http://codereview.appspot.com/**5753048/<http://codereview.appspot.com/5753048/>\n>\n> Affected files:\n>  M src/pkg/net/multicast_test.go\n>  M src/pkg/net/net_test.go\n>  M src/pkg/net/parse_test.go\n>  M src/pkg/net/server_test.go\n>  M src/pkg/net/timeout_test.go\n>  M src/pkg/net/udp_test.go\n>  M src/pkg/net/unicast_test.go\n>\n>\n> Index: src/pkg/net/multicast_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/multicast_test.**go\n> +++ b/src/pkg/net/multicast_test.**go\n> @@ -47,9 +47,11 @@\n>  func TestMulticastListener(t *testing.T) {\n>        switch runtime.GOOS {\n>        case \"netbsd\", \"openbsd\", \"plan9\", \"windows\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        case \"linux\":\n>                if runtime.GOARCH == \"arm\" || runtime.GOARCH == \"alpha\" {\n> +                       t.Logf(\"skipping test on %q/%q\", runtime.GOOS,\n> runtime.GOARCH)\n>                        return\n>                }\n>        }\n> @@ -86,6 +88,7 @@\n>  func TestSimpleMulticastListener(t *testing.T) {\n>        switch runtime.GOOS {\n>        case \"plan9\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>\n> Index: src/pkg/net/net_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/net_test.go\n> +++ b/src/pkg/net/net_test.go\n> @@ -21,6 +21,7 @@\n>\n>  func TestShutdown(t *testing.T) {\n>        if runtime.GOOS == \"plan9\" {\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>        l, err := Listen(\"tcp\", \"127.0.0.1:0\")\n> Index: src/pkg/net/parse_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/parse_test.go\n> +++ b/src/pkg/net/parse_test.go\n> @@ -13,7 +13,9 @@\n>\n>  func TestReadLine(t *testing.T) {\n>        // /etc/services file does not exist on windows and Plan 9.\n> -       if runtime.GOOS == \"windows\" || runtime.GOOS == \"plan9\" {\n> +       switch runtime.GOOS {\n> +       case \"plan9\", \"windows\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>        filename := \"/etc/services\" // a nice big file\n> Index: src/pkg/net/server_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/server_test.go\n> +++ b/src/pkg/net/server_test.go\n> @@ -142,6 +142,7 @@\n>\n>  func TestSeqpacketConnServer(t *testing.T) {\n>        if runtime.GOOS != \"linux\" {\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>\n> Index: src/pkg/net/timeout_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/timeout_test.go\n> +++ b/src/pkg/net/timeout_test.go\n> @@ -57,7 +57,9 @@\n>  }\n>\n>  func TestTimeoutUDP(t *testing.T) {\n> -       if runtime.GOOS == \"plan9\" {\n> +       switch runtime.GOOS {\n> +       case \"plan9\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>\n> @@ -73,7 +75,9 @@\n>  }\n>\n>  func TestTimeoutTCP(t *testing.T) {\n> -       if runtime.GOOS == \"plan9\" {\n> +       switch runtime.GOOS {\n> +       case \"plan9\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>\n> @@ -88,7 +92,9 @@\n>  }\n>\n>  func TestDeadlineReset(t *testing.T) {\n> -       if runtime.GOOS == \"plan9\" {\n> +       switch runtime.GOOS {\n> +       case \"plan9\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>        ln, err := Listen(\"tcp\", \"127.0.0.1:0\")\n> Index: src/pkg/net/udp_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/udp_test.go\n> +++ b/src/pkg/net/udp_test.go\n> @@ -10,7 +10,9 @@\n>  )\n>\n>  func TestWriteToUDP(t *testing.T) {\n> -       if runtime.GOOS == \"plan9\" {\n> +       switch runtime.GOOS {\n> +       case \"plan9\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>\n> Index: src/pkg/net/unicast_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/unicast_test.go\n> +++ b/src/pkg/net/unicast_test.go\n> @@ -45,6 +45,7 @@\n>  func TestTCPListener(t *testing.T) {\n>        switch runtime.GOOS {\n>        case \"plan9\", \"windows\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>\n> @@ -80,6 +81,7 @@\n>  func TestUDPListener(t *testing.T) {\n>        switch runtime.GOOS {\n>        case \"plan9\", \"windows\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>\n> @@ -125,6 +127,7 @@\n>  func TestSimpleTCPListener(t *testing.T) {\n>        switch runtime.GOOS {\n>        case \"plan9\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>\n> @@ -150,6 +153,7 @@\n>  func TestSimpleUDPListener(t *testing.T) {\n>        switch runtime.GOOS {\n>        case \"plan9\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>\n> @@ -255,6 +259,7 @@\n>  func TestDualStackTCPListener(t *testing.T) {\n>        switch runtime.GOOS {\n>        case \"plan9\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>        if !supportsIPv6 {\n> @@ -291,6 +296,7 @@\n>  func TestDualStackUDPListener(t *testing.T) {\n>        switch runtime.GOOS {\n>        case \"plan9\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>        if !supportsIPv6 {\n> @@ -521,6 +527,7 @@\n>  func TestProhibitionaryDialArgs(t *testing.T) {\n>        switch runtime.GOOS {\n>        case \"plan9\":\n> +               t.Logf(\"skipping test on %q\", runtime.GOOS)\n>                return\n>        }\n>        // This test requires both IPv6 and IPv6 IPv4-mapping functionality.\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-06 06:18:05.564521",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 6, 2012 at 3:18 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n\n> but %s probably is fine. runtime.GOOS won't have sketchy contents, which is\n> where %q comes in useful. either way.\n\nWell, just preparing the case when my app pollutes addressing space. ;)\n",
			"disapproval": false,
			"date": "2012-03-06 06:38:51.198024",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=22111b8f44af ***\n\nnet: add skip message to test\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5753048",
			"disapproval": false,
			"date": "2012-03-06 06:41:20.530557",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-06 06:11:48.724376",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 5753048: net: add skip message to test",
	"created": "2012-03-06 06:10:53.987447",
	"patchsets": [
		1,
		1001,
		3001,
		2010
	],
	"modified": "2012-03-06 06:41:21.967452",
	"closed": true,
	"issue": 5753048
}