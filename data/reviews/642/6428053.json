{
	"description": "sync: mention that WaitGroup.Add panics\nFixes issue 3839.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n On Jul 19, 2012 11:47 AM, <r@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> sync: mention that WaitGroup.Add panics\r\n> Fixes issue 3839.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6428053/<http://codereview.appspot.com/6428053/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/sync/waitgroup.go\r\n>   M src/pkg/sync/waitgroup_test.go\r\n>\r\n>\r\n> Index: src/pkg/sync/waitgroup.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/sync/waitgroup.go\r\n> +++ b/src/pkg/sync/waitgroup.go\r\n> @@ -32,10 +32,11 @@\r\n>\r\n>  // Add adds delta, which may be negative, to the WaitGroup counter.\r\n>  // If the counter becomes zero, all goroutines blocked on Wait() are\r\n> released.\r\n> +// If the counter goes negative, Add panics.\r\n>  func (wg *WaitGroup) Add(delta int) {\r\n>         v := atomic.AddInt32(&wg.counter, int32(delta))\r\n>         if v < 0 {\r\n> -               panic(\"sync: negative WaitGroup count\")\r\n> +               panic(\"sync: negative WaitGroup counter\")\r\n>         }\r\n>         if v > 0 || atomic.LoadInt32(&wg.waiters) == 0 {\r\n>                 return\r\n> Index: src/pkg/sync/waitgroup_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/sync/waitgroup_test.**go\r\n> +++ b/src/pkg/sync/waitgroup_test.**go\r\n> @@ -50,7 +50,7 @@\r\n>  func TestWaitGroupMisuse(t *testing.T) {\r\n>         defer func() {\r\n>                 err := recover()\r\n> -               if err != \"sync: negative WaitGroup count\" {\r\n> +               if err != \"sync: negative WaitGroup counter\" {\r\n>                         t.Fatalf(\"Unexpected panic: %#v\", err)\r\n>                 }\r\n>         }()\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-19 18:52:20.034800",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-07-19 18:47:22.280000",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=05f9fa32500a ***\n\nsync: mention that WaitGroup.Add panics\nFixes issue 3839.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6428053",
			"disapproval": false,
			"date": "2012-07-19 18:55:10.100540",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6428053: sync: mention that WaitGroup.Add panics",
	"created": "2012-07-19 18:47:19.377380",
	"patchsets": [
		1,
		3001
	],
	"modified": "2012-07-19 18:55:11.046390",
	"closed": true,
	"issue": 6428053
}