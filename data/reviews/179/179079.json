{
	"description": "\tAdded ISO 8601 time format output.\n    Fixes issue 431.",
	"cc": [
		"r@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "sionide21@gmail.com",
			"recipients": [
				"sionide21@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: benolive, golang-dev@googlegroups.com),\n\nI'd like you to review the following change.",
			"disapproval": false,
			"date": "2009-12-16 14:36:48.519019",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"sionide21@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/179079/diff/1005/1006\nFile src/pkg/time/time.go (right):\n\nhttp://codereview.appspot.com/179079/diff/1005/1006#newcode323\nsrc/pkg/time/time.go:323: decimal(buf[bp:bp+2], t.Month);\ndelete all the trailing semicolons\n\nhttp://codereview.appspot.com/179079/diff/1005/1006#newcode386\nsrc/pkg/time/time.go:386: // date(1) - Sun Nov  6 08:49:37 UTC 1994\ns/ -/:/ for consistency while you're here",
			"disapproval": false,
			"date": "2009-12-17 00:36:49.443790",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/179079/diff/9/1012\nFile src/pkg/time/time.go (right):\n\nhttp://codereview.appspot.com/179079/diff/9/1012#newcode363\nsrc/pkg/time/time.go:363: func (t *Time) ISO8601() (formatted string) {\ns/(formatted string)/string/ - matches the others\nand the name doesn't really matter here.\n\nhttp://codereview.appspot.com/179079/diff/9/1012#newcode365\nsrc/pkg/time/time.go:365: formatted = format(t, \"%Y-%m-%dT%H:%M:%SZ\")\nreturn format(...)\n\nhttp://codereview.appspot.com/179079/diff/9/1012#newcode370\nsrc/pkg/time/time.go:370: if t.ZoneOffset < 0 {\nin strftime this would be %z.  let's move it into \nformat as case 'z' above.  it's sure to come up again.\n\nhttp://codereview.appspot.com/179079/diff/9/1012#newcode372\nsrc/pkg/time/time.go:372: decimal(buf[bp:bp+2], int(-1*t.ZoneOffset/3600))\ns/-1*/-/\n\nhttp://codereview.appspot.com/179079/diff/9/1012#newcode373\nsrc/pkg/time/time.go:373: decimal(buf[bp+2:bp+4], int(-1*t.ZoneOffset)%3600)\ns/-1*/-/",
			"disapproval": false,
			"date": "2009-12-17 01:06:12.727360",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/179079/diff/13/14\nFile src/pkg/time/time.go (right):\n\nhttp://codereview.appspot.com/179079/diff/13/14#newcode339\nsrc/pkg/time/time.go:339: decimal(buf[bp:bp+2], int(-t.ZoneOffset/3600))\nshouldn't need the int conversion here and on the next line.\nyou don't have them in the else case.",
			"disapproval": false,
			"date": "2009-12-17 01:41:13.364812",
			"approval": false
		},
		{
			"sender": "sionide21@gmail.com",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I don't know why I did that. The cast didn't seem necessary so I removed it.\n\nhttp://codereview.appspot.com/179079/diff/13/14\nFile src/pkg/time/time.go (right):\n\nhttp://codereview.appspot.com/179079/diff/13/14#newcode339\nsrc/pkg/time/time.go:339: decimal(buf[bp:bp+2], int(-t.ZoneOffset/3600))\nOn 2009/12/17 01:41:13, rsc wrote:\n> shouldn't need the int conversion here and on the next line.\n> you don't have them in the else case.\n> \n\nDone.",
			"disapproval": false,
			"date": "2009-12-17 01:51:09.701245",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Thanks.  The code looks good; a couple nits on the tests.\n\nhttp://codereview.appspot.com/179079/diff/19/21\nFile src/pkg/time/time_test.go (right):\n\nhttp://codereview.appspot.com/179079/diff/19/21#newcode104\nsrc/pkg/time/time_test.go:104: func TestISO8601Conversion(t *testing.T) {\nIf there are two tests, there will be more.  Make a table\n(see utctests and localtests for examples, above) and\niterate over it.  \n\nThen you can easily add a third test that has a time zone\nof +0420.",
			"disapproval": false,
			"date": "2009-12-17 02:00:08.220712",
			"approval": false
		},
		{
			"sender": "sionide21@gmail.com",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/179079/diff/19/21\nFile src/pkg/time/time_test.go (right):\n\nhttp://codereview.appspot.com/179079/diff/19/21#newcode104\nsrc/pkg/time/time_test.go:104: func TestISO8601Conversion(t *testing.T) {\nOn 2009/12/17 02:00:08, rsc wrote:\n> If there are two tests, there will be more.  Make a table\n> (see utctests and localtests for examples, above) and\n> iterate over it.  \n> \n> Then you can easily add a third test that has a time zone\n> of +0420.\n> \n\nOk, will do. Should I put the table at the top of the file or right above the Test?",
			"disapproval": false,
			"date": "2009-12-17 03:40:48.029734",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "almost there...\n\nhttp://codereview.appspot.com/179079/diff/19/21\nFile src/pkg/time/time_test.go (right):\n\nhttp://codereview.appspot.com/179079/diff/19/21#newcode104\nsrc/pkg/time/time_test.go:104: func TestISO8601Conversion(t *testing.T) {\nOn 2009/12/17 02:00:08, rsc wrote:\n> If there are two tests, there will be more.  Make a table\n> (see utctests and localtests for examples, above) and\n> iterate over it.  \n> \n> Then you can easily add a third test that has a time zone\n> of +0420.\n\nPlease add a test with a timezone of +0420.",
			"disapproval": false,
			"date": "2009-12-17 04:27:12.840141",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Code looks great.  Thanks for the quick turnarounds.\n\nFinal hurdle: you need to complete one of the license\nagreements so we can use your code.  See \nhttp://golang.org/doc/contribute.html#copyright\n\nThanks.\nRuss",
			"disapproval": false,
			"date": "2009-12-17 05:35:30.953529",
			"approval": false
		},
		{
			"sender": "sionide21@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I did that earlier today. Is there a delay?\n\n--Ben\n\nOn Thu, Dec 17, 2009 at 12:35 AM,  <rsc@golang.org> wrote:\n> Code looks great. \u00a0Thanks for the quick turnarounds.\n>\n> Final hurdle: you need to complete one of the license\n> agreements so we can use your code. \u00a0See\n> http://golang.org/doc/contribute.html#copyright\n>\n> Thanks.\n> Russ\n>\n>\n> http://codereview.appspot.com/179079\n>\n",
			"disapproval": false,
			"date": "2009-12-17 05:39:56.199098",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> I did that earlier today. Is there a delay?\n\nNo, sorry.  I got faked out by the different\ncodereview.appspot.com username and\nsearched for benolive instead of sionide21.\nI see it now.  Thanks.\n\nRuss\n",
			"disapproval": false,
			"date": "2009-12-17 05:48:41.946355",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=feb2d8a970ac ***\n\ntime: add ISO 8601 time format\n\nFixes issue 431.\n\nR=r, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/179079\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2009-12-17 21:39:15.919733",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> delete all the trailing semicolons\n\ncd $GOROOT/src\nhg sync\nall.bash\nhg gofmt\n",
			"disapproval": false,
			"date": "2009-12-17 00:47:50.749568",
			"approval": false
		},
		{
			"sender": "sionide21@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": ">> delete all the trailing semicolons\n>\n> cd $GOROOT/src\n> hg sync\n> all.bash\n> hg gofmt\n>\n\nThat explains it. I think I ran hg gofmt after the initial upload. I\nhave re uploaded with those changes now.\n",
			"disapproval": false,
			"date": "2009-12-17 00:56:17.564400",
			"approval": false
		},
		{
			"sender": "sionide21@gmail.com",
			"recipients": [
				"sionide21@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Removed the extraneous semicolons and changed that - to a comma\n\nhttp://codereview.appspot.com/179079/diff/1005/1006\nFile src/pkg/time/time.go (right):\n\nhttp://codereview.appspot.com/179079/diff/1005/1006#newcode323\nsrc/pkg/time/time.go:323: decimal(buf[bp:bp+2], t.Month);\nOn 2009/12/17 00:36:49, r wrote:\n> delete all the trailing semicolons\n\nHmm, I went to fix this in my copy and the semicolons were gone. Is this something that `hg gofmt` would auto fix? I may have run that in the wrong order so it didn't get sent to the review.",
			"disapproval": false,
			"date": "2009-12-17 00:58:25.930335",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "looks good to me. russ?\n\n-rob\n\n",
			"disapproval": false,
			"date": "2009-12-17 00:58:46.434972",
			"approval": false
		},
		{
			"sender": "sionide21@gmail.com",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Ok, I moved the timezone stuff to %z in format. I also noticed my code wouldn't correctly handle timezones like -0930 so I went ahead and fixed that too.",
			"disapproval": false,
			"date": "2009-12-17 01:28:17.498658",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> Ok, will do. Should I put the table at the top of the file or right\n> above the Test?\n\nabove the test is fine\n",
			"disapproval": false,
			"date": "2009-12-17 04:06:07.011634",
			"approval": false
		},
		{
			"sender": "sionide21@gmail.com",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/179079/diff/19/21\nFile src/pkg/time/time_test.go (right):\n\nhttp://codereview.appspot.com/179079/diff/19/21#newcode104\nsrc/pkg/time/time_test.go:104: func TestISO8601Conversion(t *testing.T) {\nOn 2009/12/17 03:40:48, benolive wrote:\n> On 2009/12/17 02:00:08, rsc wrote:\n> > If there are two tests, there will be more.  Make a table\n> > (see utctests and localtests for examples, above) and\n> > iterate over it.  \n> > \n> > Then you can easily add a third test that has a time zone\n> > of +0420.\n> > \n> \n> Ok, will do. Should I put the table at the top of the file or right above the\n> Test?\n\nDone.",
			"disapproval": false,
			"date": "2009-12-17 04:20:18.198508",
			"approval": false
		},
		{
			"sender": "sionide21@gmail.com",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/179079/diff/19/21\nFile src/pkg/time/time_test.go (right):\n\nhttp://codereview.appspot.com/179079/diff/19/21#newcode104\nsrc/pkg/time/time_test.go:104: func TestISO8601Conversion(t *testing.T) {\nOn 2009/12/17 04:27:12, rsc wrote:\n> On 2009/12/17 02:00:08, rsc wrote:\n> > If there are two tests, there will be more.  Make a table\n> > (see utctests and localtests for examples, above) and\n> > iterate over it.  \n> > \n> > Then you can easily add a third test that has a time zone\n> > of +0420.\n> \n> Please add a test with a timezone of +0420.\n> \n> \n\nDone.",
			"disapproval": false,
			"date": "2009-12-17 04:46:01.109957",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"sionide21@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nWill submit after 180081, currently out for review.",
			"disapproval": false,
			"date": "2009-12-17 20:25:19.205614",
			"approval": true
		}
	],
	"owner_email": "sionide21@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "benolive",
	"subject": "code review 179079: \tAdded ISO 8601 time format output.",
	"created": "2009-12-16 14:25:42.381329",
	"patchsets": [
		1,
		6,
		1005,
		9,
		13,
		19,
		25,
		1030
	],
	"modified": "2009-12-17 20:25:19.205614",
	"closed": false,
	"issue": 179079
}