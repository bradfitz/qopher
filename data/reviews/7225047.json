{
	"description": "doc: document runtime requirements\n\nFixes issue 3897.\n\nStrawman proposal, not ready for submission.\n\nAlso adds freebsd/arm to list of supported platforms in install-source.html\n\nDiscussion: https://groups.google.com/d/topic/golang-nuts/7JFyFTaqT9w/discussion",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"adg@golang.org",
		"minux.ma@gmail.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "go.peter.90@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Microsoft (Windows), Canonical (Ubuntu), etc. assign support end dates to versions of their operating systems. Should Go drop support too?",
			"disapproval": false,
			"date": "2013-01-26 06:11:05.727410",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Jan 27, 2013 at 5:29 AM, <alex.brainman@gmail.com> wrote:\r\n\r\n>  please don't drop support for XP, as there are still a lot of\r\n>>\r\n> installation here.\r\n> I second this sentiment. There are still a lot of windows xp computers\r\n> out there (I still have one). Especially in a corporate world. Some\r\n> windows developers targets \"all windows users\" and would not touch tool\r\n> that does not provide this compatibility. Most of our code works fine on\r\n> windows 2000, it is silly to just disregard that.\r\n>\r\nso you think we should keep supporting windows 2000?\r\n",
			"disapproval": false,
			"date": "2013-01-26 21:31:32.678410",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html\nFile doc/go1platform.html (right):\n\nhttps://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html#newcode7\ndoc/go1platform.html:7: This page documents the minimum, and in some cases maximum, requirements\nThis needs to be more specific. Is it about programs produced by the gc or gccgo compilers? Do we need separate documents for each?\n\nIt is also unclear to me whether this should be about where the compiler will run, vs where the compiled go code will run. Presumably the former is a subset of the latter.\n\nhttps://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html#newcode20\ndoc/go1platform.html:20: In line with the source level compatibility goals of Go 1, hardware and\ns/hardware/processor architectures/\n\nhttps://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html#newcode26\ndoc/go1platform.html:26: <h2 id=\"go1\">Go 1.0</h2>\nThe document should not be oriented around Go versions. Go 1.x should be a given; that's all this document should cover.\n\nDifferences between 1.0 and 1.1 may be annotated with an asterisk or other such character, where the footnote explains when support was added.\n\nWe should assume that anyone reading this document is willing to use the latest version of Go.",
			"disapproval": false,
			"date": "2013-01-29 04:58:05.075450",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"bradfitz@golang.org",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html\nFile doc/go1platform.html (right):\n\nhttps://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html#newcode22\ndoc/go1platform.html:22: supported during the lifetime of Go 1.\nGo 1 is a specification and standard library backwards compatibility promise, not a specific release of software. I think this document would be better off stating that it applies to the gc and gccgo toolchains. There may be an alternate toolchain some time in the future which doesn't follow the rules in this document.",
			"disapproval": false,
			"date": "2013-01-27 11:33:07.626050",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "why all reviewers but adg are removed?\n\nOn 2013/01/27 12:56:02, minux wrote:\n> i'd like we first show a true system support matrix\n> (with colors indicating whether the support is complete,\n> with or w/o cgo, etc...)\n> \n> For example:\n>       Linux    Darwin    FreeBSD    Windows\n> 386     ok       ok        ok         ok\n> amd64   ok       ok        ok         ok\n> arm     ok       n/a      no cgo      n/a\n> \n> legend: green - production support, yellow - experimental\n>         red   - not available\n> \n> and a detailed explanations section follows that matrix\n> and give accurate details (we should make each matrix\n> cell clickable, and link to corresponding subsection\n> below).\nwhat's your opinion about this suggestion?\nI think we'd better show a clearer (and simpler) view\nfirst, and then add in the details.",
			"disapproval": false,
			"date": "2013-02-02 17:50:21.375030",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Feb 3, 2013 at 8:12 AM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> > what's your opinion about this suggestion?\r\n> > I think we'd better show a clearer (and simpler) view\r\n> > first, and then add in the details.\r\n>\r\n> I am not keen on using color to distinguish between the options as it\r\n> does not translate well onto the printed page, color is also an issue\r\n> for 1/12th of the population (lesser for women) who find the usual web\r\n> colors hard to distinguish. I think bold, italics, or strikethrough\r\n> might be better.\r\n>\r\nok. however, using color is a minor point and my main point is we\r\nuse a matrix (table) to give an high level system support overview\r\nand then provide details below.\r\n\r\nthe individual cells of the table also serve as a link to corresponding\r\nsection below should the user become interested in the details, and\r\ni guess most user don't need (or want) details such as windows NT 4\r\nis not supported and so on.\r\n",
			"disapproval": false,
			"date": "2013-02-03 17:10:46.775520",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html\nFile doc/go1platform.html (right):\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode49\ndoc/go1platform.html:49: <code>amd64</code> processors with SSE2 instruction set extensions.\nOn 2013/01/26 12:09:20, dfc wrote:\n> On 2013/01/26 11:29:11, minux wrote:\n> > SSE2 is mandatory for amd64 processors.\n> Do you think it is safe to say all x86_64/amd64 processors are supported ?\nyes.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode53\ndoc/go1platform.html:53: ARMv6, most notably the CPU found in the Raspberry Pi are not supported.\nOn 2013/01/26 12:09:20, dfc wrote:\n> On 2013/01/26 11:29:11, minux wrote:\n> > why? they just have to use software floating point.\n> > i don't think that is equivalent to ARMv6 not being supported.\n> It might just be easier to leave the whole ARMv6/RPi stuff out.\nyeah, i agree. because the major audience of this document should\nalready been using Go 1.1.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode82\ndoc/go1platform.html:82: 2.6.27 or later, and <code>arm</code> with kernel 2.6.35 or later. Older kernel\nOn 2013/01/26 12:09:20, dfc wrote:\n> On 2013/01/26 11:29:11, minux wrote:\n> > why 2.6.35?\n> For the ARMv5 cas helpers, I thought they were unreliable before .35.\nany references?\ni think i can build and test Go on an older Debian/armel VM with kernel\n2.6.32-5-versatile.\n> > also we need glibc-compatible libc.\n> Sure, do you have any idea which version ?\nThat's where the problem comes, I don't know exactly what do we expect\nfrom the libc in general. I remembered that some reports showed uclibc\nis unusable?? I'm not sure (I don't use dynamic linked Go programs on\nembedded systems, but i can try building Go with uclibc if necessary).\nThat's why when i add relevant section to golang.org/doc/install, i simply\nmention glibc as that's what our builders use.\n\nThe problem is that there're simply too many libc implementations to\nchoose from, esp. for ARM.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode87\ndoc/go1platform.html:87: <code>windows</code>, Windows XP service pack 2 and above on <code>386</code>.\nOn 2013/01/26 12:09:20, dfc wrote:\n> On 2013/01/26 05:56:53, peterGo wrote:\n> > /Windows XP service pack 2/Windows XP Service Pack 3/\n> > http://windows.microsoft.com/en-US/windows/help/what-does-end-of-support-mean\n> yup, personally I'd like to see XP be wiped from this earth, but this section is\n> documenting the world as it existed in 2012. I would be happy to change this to\nplease don't drop support for XP, as there are still a lot of installation here.\nbut I don't mind we only support Windows XP SP3 x86 and above.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode88\ndoc/go1platform.html:88: All <code>amd64</code> versions of Windows are supported.\nOn 2013/01/26 11:29:11, minux wrote:\n> On 2013/01/26 05:56:53, peterGo wrote:\n> > /All <code>amd64</code> versions of Windows are supported./Windows XP Service\n> > Pack 2 and above on <code>amd64</code>./\n> > http://windows.microsoft.com/en-US/windows/help/what-does-end-of-support-mean\t\n> Windows XP SP2 and above for desktop, and Windows Server 2003\n> and above for server.\nJust FYI, I can't verify XP SP2 x64, but i think 2003 R2 does work.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode142\ndoc/go1platform.html:142: <code>netbsd</code> versions 5.1 (TODO(bsiegert) confirm) and later on\nOn 2013/01/26 12:09:20, dfc wrote:\n> On 2013/01/26 11:29:11, minux wrote:\n> > we don't support NetBSD 5 any more, 6 is the strict minimum.\n> > Go 1.0 might have partial support for NetBSD 5.x. \n> I believe NetBSD wasn't a supported platform for Go 1.0, so we can avoid\n> mentioning version 5 at all.\nAgree.\n\nhttps://codereview.appspot.com/7225047/diff/10001/doc/go1platform.html\nFile doc/go1platform.html (right):\n\nhttps://codereview.appspot.com/7225047/diff/10001/doc/go1platform.html#newcode45\ndoc/go1platform.html:45: <code>386</code> processors of Pentium class or higher.\nwe are using MOVQ and EMMS for sync/atomic.LoadUint64,\nso the minimum requirement is Pentium MMX.\n\nhttps://codereview.appspot.com/7225047/diff/10001/doc/go1platform.html#newcode51\ndoc/go1platform.html:51: <code>arm</code> processors supporting the ARMv5 or ARMv7 architecture.\nARMv5E and ARMv6 (both without VFP support), and ARMv7.\n\nhttps://codereview.appspot.com/7225047/diff/10001/doc/go1platform.html#newcode93\ndoc/go1platform.html:93: operating systems, and support for <code>freebsd/arm</code>.\nthe FreeBSD/ARM support is still preliminary, but I will finish\nit once I get my RPi.\n\nhttps://codereview.appspot.com/7225047/diff/10001/doc/go1platform.html#newcode107\ndoc/go1platform.html:107: <code>amd64</code> processors with SSE2 instruction set extensions.\n?\n\nhttps://codereview.appspot.com/7225047/diff/10001/doc/go1platform.html#newcode110\ndoc/go1platform.html:110: <code>arm</code> processors supporting the ARMv5, ARMv6, and ARMv7 architecture.\ns/ARMv5/ARMv5E/\n\nhttps://codereview.appspot.com/7225047/diff/10001/doc/go1platform.html#newcode113\ndoc/go1platform.html:113: platform. For cross compilation, the target architecture must be supplied via\ni still think GOARM is a misnomer, as it really should be named\nGOVFP.\nI do think GOARM could be used later for what it really is for--\nARM architecture versions.\n\nGiven that GOARM is not covered by Go 1 contract, I still propose\nwe rename it to GOVFP, deprecate its use in Go 1.1 and remove\n(or perhaps assign new meanings to) it in Go 1.2.\n\nhttps://codereview.appspot.com/7225047/diff/10001/doc/go1platform.html#newcode147\ndoc/go1platform.html:147: <code>openbsd</code> version 5.2 and above on <code>amd64</code>.\ni believe we support OpenBSD/386 as jsing once gave me\nbenchmark data on it for CL 6820120.\nThe minimum requirement is the same for amd64 and i386.",
			"disapproval": false,
			"date": "2013-01-26 13:28:03.480100",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"bradfitz@golang.org",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i'd like we first show a true system support matrix\n(with colors indicating whether the support is complete,\nwith or w/o cgo, etc...)\n\nFor example:\n      Linux    Darwin    FreeBSD    Windows\n386     ok       ok        ok         ok\namd64   ok       ok        ok         ok\narm     ok       n/a      no cgo      n/a\n\nlegend: green - production support, yellow - experimental\n        red   - not available\n\nand a detailed explanations section follows that matrix\nand give accurate details (we should make each matrix\ncell clickable, and link to corresponding subsection\nbelow).\n\nhttps://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html\nFile doc/go1platform.html (right):\n\nhttps://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html#newcode16\ndoc/go1platform.html:16: TODO(dfc) integrate supported gccgo platforms.\nshould confirm with iant. below is my educated guess:\nLinux (x86, x86_64, arm, mips, [mips64?] and alpha at least)\nSolaris (x86, x86_64, sparc and sparc64)\nRTEMS (x86 ??)\nIrix (x86_64 ??)\n\ndefinitely not supported (yet):\n*BSD (NetBSD could be supported before Go 1.1)\nDarwin (porting in progress)\nWindows",
			"disapproval": false,
			"date": "2013-01-27 12:56:02.771260",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for your comments. \n\n@peter - I do not know which versions of Windows are supported, I'll see what brainman has to say when he is back next week.\n\n@minux - i've added a link in the issue description to the discussion on golang-nuts.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html\nFile doc/go1platform.html (right):\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode46\ndoc/go1platform.html:46: TODO(dfc) MMX ? AVX ? SSE\nOn 2013/01/26 11:29:11, minux wrote:\n> i think we only need a pentium pro class processor, and nothing more.\n\nDone.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode49\ndoc/go1platform.html:49: <code>amd64</code> processors with SSE2 instruction set extensions.\nOn 2013/01/26 11:29:11, minux wrote:\n> SSE2 is mandatory for amd64 processors.\n\nDo you think it is safe to say all x86_64/amd64 processors are supported ?\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode52\ndoc/go1platform.html:52: <code>arm</code> processors supporting the ARMv5 or ARMv7 microarchitecture.\nOn 2013/01/26 11:29:11, minux wrote:\n> nitpicking: technically, it's not called microarchitecture,\n> and should just be called architecture.\n> \n> In fact, ARM Holdings sells architectural license to others\n> so some ARM processors are not even using ARM Holding's\n> microarchitecture (one notable examples is StrongARM by DEC).\n\nDone.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode53\ndoc/go1platform.html:53: ARMv6, most notably the CPU found in the Raspberry Pi are not supported.\nOn 2013/01/26 11:29:11, minux wrote:\n> why? they just have to use software floating point.\n> i don't think that is equivalent to ARMv6 not being supported.\n\nIt might just be easier to leave the whole ARMv6/RPi stuff out.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode75\ndoc/go1platform.html:75: <code>freebsd</code> versions 8.2 and later on <code>386</code> and <code>amd64</code>.\nOn 2013/01/26 11:29:11, minux wrote:\n> version 7 or latter according to http://golang.org/doc/install\n\nDone.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode82\ndoc/go1platform.html:82: 2.6.27 or later, and <code>arm</code> with kernel 2.6.35 or later. Older kernel\nOn 2013/01/26 11:29:11, minux wrote:\n> why 2.6.35?\n\nFor the ARMv5 cas helpers, I thought they were unreliable before .35.\n\n> \n> also we need glibc-compatible libc.\n\nSure, do you have any idea which version ?\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode87\ndoc/go1platform.html:87: <code>windows</code>, Windows XP service pack 2 and above on <code>386</code>.\nOn 2013/01/26 05:56:53, peterGo wrote:\n> /Windows XP service pack 2/Windows XP Service Pack 3/\n> http://windows.microsoft.com/en-US/windows/help/what-does-end-of-support-mean\n\nyup, personally I'd like to see XP be wiped from this earth, but this section is documenting the world as it existed in 2012. I would be happy to change this to vaguer\n\n<code>windows</code> non specified.\n\nI'll ask brainman for his input next week.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode95\ndoc/go1platform.html:95: in Go 1.0 and adds support for <code>netbsd</code> and <code>openbsd</code>\nOn 2013/01/26 11:29:11, minux wrote:\n> FreeBSD/ARM.\n\nDone.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode109\ndoc/go1platform.html:109: <code>amd64</code> processors with SSE2 instruction set extensions.\nOn 2013/01/26 11:29:11, minux wrote:\n> remove \"with SSE2 ISA extensions\" as explained above.\n\nDone.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode114\ndoc/go1platform.html:114: correct microarchitecture when compiled from source on the target platform.\nOn 2013/01/26 11:29:11, minux wrote:\n> will automatically choose correct VFP architecture to use\n> when compiled from source on the target platform.\n> For cross compiles, the user needs to specific correct\n> <code>GOARM</code> as explained in section <a href=\"#??\">GOARM</a>.\n\nDone.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode129\ndoc/go1platform.html:129: <code>freebsd</code> versions 8.2 and later on <code>386</code> and\nOn 2013/01/26 11:29:11, minux wrote:\n> we still support FreeBSD 7.\n\nDone.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode142\ndoc/go1platform.html:142: <code>netbsd</code> versions 5.1 (TODO(bsiegert) confirm) and later on\nOn 2013/01/26 11:29:11, minux wrote:\n> we don't support NetBSD 5 any more, 6 is the strict minimum.\n> Go 1.0 might have partial support for NetBSD 5.x.\n\nI believe NetBSD wasn't a supported platform for Go 1.0, so we can avoid mentioning version 5 at all.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode146\ndoc/go1platform.html:146: <code>openbsd</code> version 9000 (TODO(jsing) confirm) and later on\nOn 2013/01/26 11:29:11, minux wrote:\n> 5.2 and above.\n> we need the user to enable rthread manually for previous OpenBSD \n> version in Go 1.0.x.\n\nDone. Again, NetBSD was not supported on Go 1.0 so we can avoid mentioning rthreads.",
			"disapproval": false,
			"date": "2013-01-26 12:09:20.453140",
			"approval": false
		},
		{
			"sender": "go.peter.90@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html\nFile doc/go1platform.html (right):\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode87\ndoc/go1platform.html:87: <code>windows</code>, Windows XP service pack 2 and above on <code>386</code>.\n/Windows XP service pack 2/Windows XP Service Pack 3/\nhttp://windows.microsoft.com/en-US/windows/help/what-does-end-of-support-mean\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode88\ndoc/go1platform.html:88: All <code>amd64</code> versions of Windows are supported.\n/All <code>amd64</code> versions of Windows are supported./Windows XP Service Pack 2 and above on <code>amd64</code>./\nhttp://windows.microsoft.com/en-US/windows/help/what-does-end-of-support-mean\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode150\ndoc/go1platform.html:150: <code>windows</code>, Windows XP service pack 2 and above on <code>386</code>.\n/Windows XP service pack 2/Windows XP Service Pack 3/\nhttp://windows.microsoft.com/en-US/windows/help/what-does-end-of-support-mean\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode151\ndoc/go1platform.html:151: All <code>amd64</code> versions of Windows are supported.\n/All <code>amd64</code> versions of Windows are supported./Windows XP Service Pack 2 and above on <code>amd64</code>./\nhttp://windows.microsoft.com/en-US/windows/help/what-does-end-of-support-mean",
			"disapproval": false,
			"date": "2013-01-26 05:56:53.777240",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"bradfitz@golang.org",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/27 09:11:46, dfc wrote:\n...\n> * which windows versions, I don't think we can say 'or later' in all cases, do\n> we need to list them all ?\n\nLooking at the issue you are fixing, I do not see any particular need to provide many details as far as windows os concerned.\n\nI think we should say that windows is supported on 386 and amd64, and not supported on arm. Maybe we could even say \"windows 32-bit\" for 386 and \"windows 64-bit\" for amd64, because 386 and amd64 terms aren't used in windows world, as far as I know it.\n\nI don't think we need to provide any more details then that. We make every effort to support all windows versions. As far as I know, there aren't any show stoppers. If we will find something different in the future, we could change this text then.\n\nAlex",
			"disapproval": false,
			"date": "2013-01-28 01:21:56.688970",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "sorry, i take this discussion to golang-dev (cc: +golang-dev).\n\nAs i see some important issues worthy to be discussed\non golang-dev.\n\nWe need to determine accurate minimum linux kernel\nrequirement.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html\nFile doc/go1platform.html (right):\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode46\ndoc/go1platform.html:46: TODO(dfc) MMX ? AVX ? SSE\ni think we only need a pentium pro class processor, and nothing more.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode49\ndoc/go1platform.html:49: <code>amd64</code> processors with SSE2 instruction set extensions.\nSSE2 is mandatory for amd64 processors.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode52\ndoc/go1platform.html:52: <code>arm</code> processors supporting the ARMv5 or ARMv7 microarchitecture.\nnitpicking: technically, it's not called microarchitecture,\nand should just be called architecture.\n\nIn fact, ARM Holdings sells architectural license to others\nso some ARM processors are not even using ARM Holding's\nmicroarchitecture (one notable examples is StrongARM by DEC).\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode53\ndoc/go1platform.html:53: ARMv6, most notably the CPU found in the Raspberry Pi are not supported.\nwhy? they just have to use software floating point.\ni don't think that is equivalent to ARMv6 not being supported.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode75\ndoc/go1platform.html:75: <code>freebsd</code> versions 8.2 and later on <code>386</code> and <code>amd64</code>.\nversion 7 or latter according to http://golang.org/doc/install\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode81\ndoc/go1platform.html:81: <code>386</code> with kernel 2.6.27 or later, <code>amd64</code> with kernel\n2.6.23 or later according to http://golang.org/doc/install\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode82\ndoc/go1platform.html:82: 2.6.27 or later, and <code>arm</code> with kernel 2.6.35 or later. Older kernel\nwhy 2.6.35?\n\nalso we need glibc-compatible libc.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode87\ndoc/go1platform.html:87: <code>windows</code>, Windows XP service pack 2 and above on <code>386</code>.\ni think Go 1.0 still supports windows 2000, although\ni haven't have chance to verify that.\nref: http://golang.org/doc/install\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode88\ndoc/go1platform.html:88: All <code>amd64</code> versions of Windows are supported.\nOn 2013/01/26 05:56:53, peterGo wrote:\n> /All <code>amd64</code> versions of Windows are supported./Windows XP Service\n> Pack 2 and above on <code>amd64</code>./\n> http://windows.microsoft.com/en-US/windows/help/what-does-end-of-support-mean\t\nWindows XP SP2 and above for desktop, and Windows Server 2003\nand above for server.\n\nhttp://support.microsoft.com/lifecycle/search/default.aspx?sort=PN&alpha=windows+server&Filter=FilterNO\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode95\ndoc/go1platform.html:95: in Go 1.0 and adds support for <code>netbsd</code> and <code>openbsd</code>\nFreeBSD/ARM.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode109\ndoc/go1platform.html:109: <code>amd64</code> processors with SSE2 instruction set extensions.\nremove \"with SSE2 ISA extensions\" as explained above.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode114\ndoc/go1platform.html:114: correct microarchitecture when compiled from source on the target platform.\nwill automatically choose correct VFP architecture to use\nwhen compiled from source on the target platform.\nFor cross compiles, the user needs to specific correct\n<code>GOARM</code> as explained in section <a href=\"#??\">GOARM</a>.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode129\ndoc/go1platform.html:129: <code>freebsd</code> versions 8.2 and later on <code>386</code> and\nwe still support FreeBSD 7.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode137\ndoc/go1platform.html:137: 2.6.27 or later, and <code>arm</code> with kernel 2.6.35 or later. Older kernel\ni don't what's reason behind 2.6.27 and 2.6.35.\n\nFYI, \n2.6.27 is released on October 9, 2008\n2.6.35 is released on August 1, 2010, which is too recent\nIMO.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode142\ndoc/go1platform.html:142: <code>netbsd</code> versions 5.1 (TODO(bsiegert) confirm) and later on\nwe don't support NetBSD 5 any more, 6 is the strict minimum.\nGo 1.0 might have partial support for NetBSD 5.x.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode146\ndoc/go1platform.html:146: <code>openbsd</code> version 9000 (TODO(jsing) confirm) and later on\n5.2 and above.\nwe need the user to enable rthread manually for previous OpenBSD \nversion in Go 1.0.x.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode150\ndoc/go1platform.html:150: <code>windows</code>, Windows XP service pack 2 and above on <code>386</code>.\nOn 2013/01/26 05:56:53, peterGo wrote:\n> /Windows XP service pack 2/Windows XP Service Pack 3/\n> http://windows.microsoft.com/en-US/windows/help/what-does-end-of-support-mean\nwe need to decide whether to drop support for windows 2000.\n\nhttps://codereview.appspot.com/7225047/diff/1002/doc/go1platform.html#newcode151\ndoc/go1platform.html:151: All <code>amd64</code> versions of Windows are supported.\nOn 2013/01/26 05:56:53, peterGo wrote:\n> /All <code>amd64</code> versions of Windows are supported./Windows XP Service\n> Pack 2 and above on <code>amd64</code>./\n> http://windows.microsoft.com/en-US/windows/help/what-does-end-of-support-mean\t\nsee above.",
			"disapproval": false,
			"date": "2013-01-26 11:29:11.615790",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7225047/diff/10001/doc/go1platform.html\nFile doc/go1platform.html (right):\n\nhttps://codereview.appspot.com/7225047/diff/10001/doc/go1platform.html#newcode27\ndoc/go1platform.html:27: to the tool chain and runtime flavor, and indicate a 32bit Intel instruction\n32-bit, here and elsewhere",
			"disapproval": false,
			"date": "2013-01-26 21:40:19.070510",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I doubt many people have win2k, so its support is not critical. Let's go with xp and up.\n\nI am more concerned about windows 8. Does it works there? I don't know anyone, who has windows 8 with go installation on it.\n\nAlex",
			"disapproval": false,
			"date": "2013-01-26 21:47:31.401840",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2013-01-28 17:51:53.197990",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello go.peter.90@gmail.com, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-26 12:03:18.287040",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please take another look. I am experimenting with a table layout for the operating system matrix. This might need some help from the website stylesheet to look decent.\n\nStill to be finalised\n* kernel version for linux, do we say minimum and/or recommended ? Can we make a change between 1.0 and 1.1 ?\n* which windows versions, I don't think we can say 'or later' in all cases, do we need to list them all ?",
			"disapproval": false,
			"date": "2013-01-27 09:11:46.436150",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "some random thoughts:\r\n1. i think we need to have a section to tell the user how to check if a\r\nmachine has\r\nsome feature (e.g. MMX, SSE2, VFPv3...) on all supported systems.\r\n\r\n2. should we have builders that help testing on the minimum supported\r\nsystems?\r\nif we make guarantee like this in the document, imo we should do so.\r\n\r\n3. we deprecate GOARM in Go 1.1, and instead favor GOVFP.\r\nan alternative would be, introduce some structures to it, so that we can\r\nreally\r\nrepresent ARMv7 w/o VFP and ARMv7 with VFP and ARMv7 with VFP and NEON.\r\nBecause we could generate better code for ARMv6 and above, but I don't feel\r\nit's right to drop support for ARMv5 now.\r\n\r\n4. We need builder for OpenBSD/386.\r\n",
			"disapproval": false,
			"date": "2013-01-26 13:28:59.462450",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Jan 27, 2013 at 5:47 AM, <alex.brainman@gmail.com> wrote:\r\n\r\n> I doubt many people have win2k, so its support is not critical. Let's go\r\n> with xp and up.\r\n>\r\nsure. fine with me.\r\n\r\n>\r\n> I am more concerned about windows 8. Does it works there? I don't know\r\n> anyone, who has windows 8 with go installation on it.\r\n>\r\nMe neither. I will post a question to golang-nuts.\r\n",
			"disapproval": false,
			"date": "2013-01-26 22:01:33.672250",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"go.peter.90@gmail.com",
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> please don't drop support for XP, as there are still a lot of installation here.\n\nI second this sentiment. There are still a lot of windows xp computers out there (I still have one). Especially in a corporate world. Some windows developers targets \"all windows users\" and would not touch tool that does not provide this compatibility. Most of our code works fine on windows 2000, it is silly to just disregard that.\n\nAlex",
			"disapproval": false,
			"date": "2013-01-26 21:29:53.064880",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/29 04:58:05, adg wrote:\n> https://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html\n> File doc/go1platform.html (right):\n> \n> https://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html#newcode7\n> doc/go1platform.html:7: This page documents the minimum, and in some cases\n> maximum, requirements\n> This needs to be more specific. Is it about programs produced by the gc or gccgo\n> compilers? Do we need separate documents for each?\n\nI don't know, I think gccgo needs to be documented elsewhere as the set of supported platforms is governed by gcc to some extent. I will reword this to document only the gc compiler suite.\n\n> It is also unclear to me whether this should be about where the compiler will\n> run, vs where the compiled go code will run. Presumably the former is a subset\n> of the latter.\n> \n> https://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html#newcode20\n> doc/go1platform.html:20: In line with the source level compatibility goals of Go\n> 1, hardware and\n> s/hardware/processor architectures/\n> \n> https://codereview.appspot.com/7225047/diff/12002/doc/go1platform.html#newcode26\n> doc/go1platform.html:26: <h2 id=\"go1\">Go 1.0</h2>\n> The document should not be oriented around Go versions. Go 1.x should be a\n> given; that's all this document should cover.\n> \n> Differences between 1.0 and 1.1 may be annotated with an asterisk or other such\n> character, where the footnote explains when support was added.\n> \n> We should assume that anyone reading this document is willing to use the latest\n> version of Go.\n\nYup, but internally, on golang-dev there have been debates about which linux kernel version, which SSE2 version etc. I hoped by documenting Go 1.0 retroactively we could resolve those debates. I think it turns out it doesn't matter.\n\nI'll rework the table to show only only Go 1.1 and add footnotes.",
			"disapproval": false,
			"date": "2013-02-01 22:04:45.695290",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Feb 2, 2013 at 12:50 PM, <minux.ma@gmail.com> wrote:\r\n\r\n> why all reviewers but adg are removed?\r\n\r\n\r\nI just wanted to assign adg the task of being the final arbiter.\r\nYou are all still welcome to review and make comments.\r\nBecause codereview adds anyone who replies to the R= line,\r\nit can get a bit overwhelming.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-02-02 21:29:33.193250",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 4 February 2013 12:16, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> Sure, i'll give it a crack after work tonight. Could I ask for some\r\n> love for the stylesheet to make tables a bit nicer ?\r\n>\r\n\r\nSure. Try with the styles used by go1.html, as a start.\r\n",
			"disapproval": false,
			"date": "2013-02-04 01:22:22.537210",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-01 22:36:10.664170",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I agree that the matrix is a good idea. Instead of colors, the words\r\n> could be \"ok\", \"exp\", \"n/a\", with footnotes for platforms with\r\n> exceptions like freebsd-arm.\r\n\r\nSure, i'll give it a crack after work tonight. Could I ask for some\r\nlove for the stylesheet to make tables a bit nicer ?\r\n",
			"disapproval": false,
			"date": "2013-02-04 01:16:07.523800",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7225047/diff/22001/doc/go1runtime.html\nFile doc/go1runtime.html (right):\n\nhttps://codereview.appspot.com/7225047/diff/22001/doc/go1runtime.html#newcode18\ndoc/go1runtime.html:18: should continue to be supported during the lifetime of Go 1. Additional\nI am not comfortable with this. This document should be \"Here's what is currently supported by the gc compiler\", not \"Here's what we promise to support.\"\n\nIn a few years' time it is not unlikely that we might phase out support for older kernels or processors. I don't want to conflate the requirements of the gc compiler with the Go 1 language and library guarantees.\n\nPlease rename the doc \"gcruntime.html\" or similar, and drop this paragraph.\n\nhttps://codereview.appspot.com/7225047/diff/22001/doc/go1runtime.html#newcode25\ndoc/go1runtime.html:25: The Go 1 compiler suite produce binary executables compatible with the\ns_Go 1_<code>gc</code>_\n\nhttps://codereview.appspot.com/7225047/diff/22001/doc/go1runtime.html#newcode31\ndoc/go1runtime.html:31: <code>386</code> processors with a 387 floating point coprocesssor. Support\nDoes this mean I could actually run Go on a 486? Should we specify an actual minimum processor? I feel like \"Intel\" should be mentioned here.\n\nhttps://codereview.appspot.com/7225047/diff/22001/doc/go1runtime.html#newcode51\ndoc/go1runtime.html:51: The Go 1 runtime is compatible with the following operating system releases.\ns/ 1//",
			"disapproval": false,
			"date": "2013-02-04 01:24:22.280930",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> what's your opinion about this suggestion?\r\n> I think we'd better show a clearer (and simpler) view\r\n> first, and then add in the details.\r\n\r\nI am not keen on using color to distinguish between the options as it\r\ndoes not translate well onto the printed page, color is also an issue\r\nfor 1/12th of the population (lesser for women) who find the usual web\r\ncolors hard to distinguish. I think bold, italics, or strikethrough\r\nmight be better.\r\n\r\nAs the lack of cgo is only an issue for a smaller % of the platforms,\r\nwe could handle that with a footnote as it is the exception these\r\ndays.\r\n",
			"disapproval": false,
			"date": "2013-02-03 00:12:20.149280",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dave@cheney.net",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/03 17:10:46, minux wrote:\n> On Sun, Feb 3, 2013 at 8:12 AM, Dave Cheney <mailto:dave@cheney.net> wrote:\n> \n> > > what's your opinion about this suggestion?\n> > > I think we'd better show a clearer (and simpler) view\n> > > first, and then add in the details.\n> >\n> > I am not keen on using color to distinguish between the options as it\n> > does not translate well onto the printed page, color is also an issue\n> > for 1/12th of the population (lesser for women) who find the usual web\n> > colors hard to distinguish. I think bold, italics, or strikethrough\n> > might be better.\n> >\n> ok. however, using color is a minor point and my main point is we\n> use a matrix (table) to give an high level system support overview\n> and then provide details below.\n\nI agree that the matrix is a good idea. Instead of colors, the words could be \"ok\", \"exp\", \"n/a\", with footnotes for platforms with exceptions like freebsd-arm.",
			"disapproval": false,
			"date": "2013-02-04 01:15:00.169390",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 7225047: doc: document runtime requirements",
	"created": "2013-01-26 03:57:45.849090",
	"patchsets": [
		1,
		2001,
		1002,
		10001,
		12002,
		16001,
		19001,
		22001
	],
	"modified": "2013-02-04 01:15:00.169390",
	"closed": false,
	"issue": 7225047
}