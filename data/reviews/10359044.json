{
	"description": "go.tools/cmd/cover: fix build\nNeed the ./ for the path. Quick fix to get the build green, but what really is the right answer for Windows?",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"alex.brainman@gmail.com"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-06-21 21:46:55.956240",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ce519700268b&repo=tools ***\n\ngo.tools/cmd/cover: fix build\nNeed the ./ for the path. Quick fix to get the build green, but what really is the right answer for Windows?\n\nR=golang-dev\nCC=golang-dev\nhttps://codereview.appspot.com/10359044",
			"disapproval": false,
			"date": "2013-06-21 21:47:07.054480",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"r@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Rob, I am trying to reproduce the problem on windows, but I cannot. Do you have any logs or references?\n\nAlex",
			"disapproval": false,
			"date": "2013-06-23 23:56:30.929700",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The build failure was on Unix, where . is not necessarily in $PATH.\r\n\r\nMy question is how to deal with this issue on Windows. Is . (or\r\nwhatever it's called) always in %PATH% (or whatever it's called)? If\r\nnot, how do I name \"the file in my current directory\"?\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-24 14:49:38.076240",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"r@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/24 14:49:38, r wrote:\n> The build failure was on Unix, where . is not necessarily in $PATH.\n\nAhha!\n\n> My question is how to deal with this issue on Windows. Is . (or\n> whatever it's called) always in %PATH% (or whatever it's called)?\n\nPATH is user controlled. So you put what you like in it. But Windows always look for your binary in you current directory first (unless your binary name has some path elements in it, like \\). So, effectively, . is always at the front of your %PATH%.\n\n> If\n> not, how do I name \"the file in my current directory\"?\n\nJust like on unix: .\\testcover.exe. Windows will accept / instead of \\ too, so ./testcover.exe will work too.\n\nAlex",
			"disapproval": false,
			"date": "2013-06-25 00:21:20.040230",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Great, thanks. That means it should work.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-25 02:43:05.408510",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 10359044: go.tools/cmd/cover: fix build",
	"created": "2013-06-21 21:46:51.823020",
	"patchsets": [
		1,
		3001
	],
	"modified": "2013-06-25 02:43:05.527700",
	"closed": true,
	"issue": 10359044
}