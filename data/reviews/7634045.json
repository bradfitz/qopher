{
	"description": "database/sql: add DB.SetMaxIdleConns\n\nUpdate issue 4805",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"snaury@gmail.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-18 21:47:16.085470",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-18 19:50:02.055080",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7634045/diff/4001/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttps://codereview.appspot.com/7634045/diff/4001/src/pkg/database/sql/sql.go#newcode183\nsrc/pkg/database/sql/sql.go:183: // session state and observing that state is required, either do not\n\"and observing that stat is required\" is hard to parse. rewrite.\n\nhttps://codereview.appspot.com/7634045/diff/4001/src/pkg/database/sql/sql.go#newcode204\nsrc/pkg/database/sql/sql.go:204: MaxIdleConns int\nthis is the first exported field for this struct, a big step. do you want to make it now?",
			"disapproval": false,
			"date": "2013-03-18 20:19:51.853260",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 18, 2013 at 1:19 PM, <r@golang.org> wrote:\r\n\r\n>\r\n> https://codereview.appspot.**com/7634045/diff/4001/src/pkg/**\r\n> database/sql/sql.go<https://codereview.appspot.com/7634045/diff/4001/src/pkg/database/sql/sql.go>\r\n> File src/pkg/database/sql/sql.go (right):\r\n>\r\n> https://codereview.appspot.**com/7634045/diff/4001/src/pkg/**\r\n> database/sql/sql.go#newcode183<https://codereview.appspot.com/7634045/diff/4001/src/pkg/database/sql/sql.go#newcode183>\r\n> src/pkg/database/sql/sql.go:**183: // session state and observing that\r\n>\r\n> state is required, either do not\r\n> \"and observing that stat is required\" is hard to parse. rewrite.\r\n>\r\n\r\nSuggestions welcome.  I don't know what would sound better and still be\r\naccurate.\r\n\r\nhttps://codereview.appspot.**com/7634045/diff/4001/src/pkg/**\r\n> database/sql/sql.go#newcode204<https://codereview.appspot.com/7634045/diff/4001/src/pkg/database/sql/sql.go#newcode204>\r\n> src/pkg/database/sql/sql.go:**204: MaxIdleConns int\r\n> this is the first exported field for this struct, a big step. do you\r\n> want to make it now?\r\n>\r\n\r\nYes.  The alternative proposed earlier is a SetMaxIdleConns function.  Do\r\nyou prefer that?\r\n",
			"disapproval": false,
			"date": "2013-03-18 20:39:42.287820",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7634045/diff/4001/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttps://codereview.appspot.com/7634045/diff/4001/src/pkg/database/sql/sql.go#newcode183\nsrc/pkg/database/sql/sql.go:183: // session state and observing that state is required, either do not\nand that state will be accessed by the program while the connection is active ?",
			"disapproval": false,
			"date": "2013-03-18 21:03:02.941980",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 18, 2013 at 1:39 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> Yes.  The alternative proposed earlier is a SetMaxIdleConns function.  Do\r\n> you prefer that?\r\n\r\nI would. It's a smaller step.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-03-18 21:03:21.761050",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\r\n\r\nJust the setter method here.  Removed the unrelated English changes.\r\n\r\nOn Mon, Mar 18, 2013 at 2:47 PM, <bradfitz@golang.org> wrote:\r\n\r\n> Hello golang-dev@googlegroups.com, r@golang.org (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> https://codereview.appspot.**com/7634045/<https://codereview.appspot.com/7634045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-18 21:48:10.115480",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7634045/diff/13001/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttps://codereview.appspot.com/7634045/diff/13001/src/pkg/database/sql/sql.go#newcode351\nsrc/pkg/database/sql/sql.go:351: // SetMaxIdleConns controls the size of the idle connection pool.\nit's clear as is but let's be pedantic.\n// SetMaxIdleConns sets the maximum number of connections in the idle connection pool.\n// A value of zero, the default, specifies no limit.\n\nhttps://codereview.appspot.com/7634045/diff/13001/src/pkg/database/sql/sql.go#newcode355\nsrc/pkg/database/sql/sql.go:355: if n == 0 {\nwhat if n < 0?",
			"disapproval": false,
			"date": "2013-03-18 21:53:45.430320",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7634045/diff/13001/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttps://codereview.appspot.com/7634045/diff/13001/src/pkg/database/sql/sql.go#newcode351\nsrc/pkg/database/sql/sql.go:351: // SetMaxIdleConns controls the size of the idle connection pool.\nOn 2013/03/18 21:53:46, r wrote:\n> it's clear as is but let's be pedantic.\n> // SetMaxIdleConns sets the maximum number of connections in the idle connection\n> pool.\n> // A value of zero, the default, specifies no limit.\n\nWe've never supported \"no limit\", and no code in this CL does that either.\n\nhttps://codereview.appspot.com/7634045/diff/13001/src/pkg/database/sql/sql.go#newcode355\nsrc/pkg/database/sql/sql.go:355: if n == 0 {\nOn 2013/03/18 21:53:46, r wrote:\n> what if n < 0?\n\ndb.maxIdle < 0 disables the cache.  This case makes sure that SetMaxIdleConns(0) doesn't restore db.maxIdle to zero to mean \"default\" and instead makes the public API's explicit zero mean zero (by making it negative), not default.",
			"disapproval": false,
			"date": "2013-03-18 22:12:02.434910",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-03-18 22:22:00.419740",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-18 22:15:03.709500",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.  Now with more explicit comments and some of your updated wording.\r\n\r\nOn Mon, Mar 18, 2013 at 3:15 PM, <bradfitz@golang.org> wrote:\r\n\r\n> Hello golang-dev@googlegroups.com, r@golang.org (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> https://codereview.appspot.**com/7634045/<https://codereview.appspot.com/7634045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-18 22:15:57.077830",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1130cc72c645 ***\n\ndatabase/sql: add DB.SetMaxIdleConns\n\nUpdate issue 4805\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/7634045",
			"disapproval": false,
			"date": "2013-03-18 22:33:06.998510",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/18 22:33:06, bradfitz wrote:\n> *** Submitted as https://code.google.com/p/go/source/detail?r=1130cc72c645 ***\n> \n> database/sql: add DB.SetMaxIdleConns\n\nPlease see issue 4805 (https://code.google.com/p/go/issues/detail?id=4805), this CL breaks prepared statements.",
			"disapproval": false,
			"date": "2013-04-20 11:39:55.231610",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/04/20 11:39:55, snaury wrote:\n> Please see issue 4805 (https://code.google.com/p/go/issues/detail?id=4805), this\n> CL breaks prepared statements.\n\nOops, sorry for the noise, it doesn't. The 2 connections default was before as well. %)",
			"disapproval": false,
			"date": "2013-04-20 11:42:16.102990",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 7634045: database/sql: add DB.SetMaxIdleConns",
	"created": "2013-03-18 19:49:53.631440",
	"patchsets": [
		1,
		2001,
		4001,
		13001,
		19001,
		24001
	],
	"modified": "2013-04-20 11:42:16.291590",
	"closed": true,
	"issue": 7634045
}