{
	"description": "build: delete make paraphernalia\n\nAs a convenience to people working on the tools,\nleave Makefiles that invoke the go dist tool appropriately.\nThey are not used during the build.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"n13m3y3r@gmail.com",
		"gustavo@niemeyer.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5636050/diff/4001/src/Make.dist\nFile src/Make.dist (right):\n\nhttp://codereview.appspot.com/5636050/diff/4001/src/Make.dist#newcode10\nsrc/Make.dist:10: install:\nall the other tools' Makefiles including this file assume this target is first in the file, right?  worth commenting, or is this some make convention?",
			"disapproval": false,
			"date": "2012-02-06 17:32:55.218350",
			"approval": true
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 6, 2012 at 16:22, Russ Cox <rsc@golang.org> wrote:\n> On Mon, Feb 6, 2012 at 13:20, Gustavo Niemeyer <gustavo@niemeyer.net> wrote:\n>> Exactly. We can only do either if we build dist first, right?\n>\n> Yes. \u00a0Is that such a hardship?\n> Even if you have to build it by hand, it's just\n>\n> cd src/cmd/dist\n> cc *.c\n> ./a.out version\n>\n> I do not want to have this functionality in two places,\n> which means the shell script must go.\n\nMy suggestion was simply:\n\n\"It'd be nice to take the building of dist out of make.bash\"\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2012-02-06 18:25:17.895598",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-06 16:49:53.584638",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 6, 2012 at 13:20, Gustavo Niemeyer <gustavo@niemeyer.net> wrote:\n> Exactly. We can only do either if we build dist first, right?\n\nYes.  Is that such a hardship?\nEven if you have to build it by hand, it's just\n\ncd src/cmd/dist\ncc *.c\n./a.out version\n\nI do not want to have this functionality in two places,\nwhich means the shell script must go.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-06 18:22:09.812100",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry, I did not read your message carefully enough.\nHowever, what do you suggest?  A new shell script\nwith those two lines?  I am trying to reduce the number\nof scripts, and also the build process for cmd/dist is\nintentionally trivial so that it is not problematic to write\nit in multiple places (e.g., make.bash and make.bat).\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-06 18:27:41.207487",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 6, 2012 at 16:27, Russ Cox <rsc@golang.org> wrote:\n> Sorry, I did not read your message carefully enough.\n> However, what do you suggest? \u00a0A new shell script\n> with those two lines? \u00a0I am trying to reduce the number\n> of scripts, and also the build process for cmd/dist is\n> intentionally trivial so that it is not problematic to write\n> it in multiple places (e.g., make.bash and make.bat).\n\n\"make.bash -dist-tool\", maybe?\n\nIf you feel strongly against it, I can certainly build it by hand.\nIt's just that the automated builds tend to work for longer with a\nslightly better defined interface. I was quite amazed that the daily\npackage builds were working until last week without any changes since\n60.3 (!), just because you kept using the same *.bash convention on\nthe surface.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2012-02-06 18:34:55.042373",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 6, 2012 at 13:34, Gustavo Niemeyer <gustavo@niemeyer.net> wrote:\n> If you feel strongly against it, I can certainly build it by hand.\n> It's just that the automated builds tend to work for longer with a\n> slightly better defined interface. I was quite amazed that the daily\n> package builds were working until last week without any changes since\n> 60.3 (!), just because you kept using the same *.bash convention on\n> the surface.\n\nWhy did it break last week?\n",
			"disapproval": false,
			"date": "2012-02-06 18:36:04.292772",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 6, 2012 at 12:32,  <bradfitz@golang.org> wrote:\n> all the other tools' Makefiles including this file assume this target is\n> first in the file, right? \u00a0worth commenting, or is this some make\n> convention?\n\nadded\n\n# Default target (first).\n",
			"disapproval": false,
			"date": "2012-02-06 18:01:53.209696",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"n13m3y3r@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5636050/diff/4001/src/version.bash\nFile src/version.bash (left):\n\nhttp://codereview.appspot.com/5636050/diff/4001/src/version.bash#oldcode9\nsrc/version.bash:9: if [ -f \"$GOROOT/VERSION\" -a \"$1\" != \"-save\" ]; then\nIt'd be nice to take the building of dist out of make.bash, so that we can live without the -save feature being removed here. Otherwise we have a small chicken/egg issue: the only way to record the VERSION file is to build everything, or to manually cherry pick the gcc line out.",
			"disapproval": false,
			"date": "2012-02-06 18:13:39.375416",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ad8cc8d6a3d5 ***\n\nbuild: delete make paraphernalia\n\nAs a convenience to people working on the tools,\nleave Makefiles that invoke the go dist tool appropriately.\nThey are not used during the build.\n\nR=golang-dev, bradfitz, n13m3y3r, gustavo\nCC=golang-dev\nhttp://codereview.appspot.com/5636050",
			"disapproval": false,
			"date": "2012-02-06 18:34:27.710570",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I imagined you could\n\ncp VERSION.cache VERSION\n\nor\n\ngo tool dist version >VERSION\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-06 18:16:43.504591",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 6, 2012 at 16:16, Russ Cox <rsc@golang.org> wrote:\n> I imagined you could\n>\n> cp VERSION.cache VERSION\n>\n> or\n>\n> go tool dist version >VERSION\n\nExactly. We can only do either if we build dist first, right?\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2012-02-06 18:20:41.747643",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ok; 5634048\n",
			"disapproval": false,
			"date": "2012-02-06 18:37:09.553092",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Why did it break last week?\n\nThe build wasn't prepared to deal with the $GOBIN/tool convention properly.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2012-02-06 18:40:42.600394",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5636050: build: delete make paraphernalia",
	"created": "2012-02-06 16:47:22.249475",
	"patchsets": [
		1,
		2001,
		3031,
		4001,
		3064
	],
	"modified": "2012-02-06 18:34:28.494759",
	"closed": true,
	"issue": 5636050
}