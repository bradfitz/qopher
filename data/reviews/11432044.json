{
	"description": "net/http: document NewRequest treating Reader as ReadCloser",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"rogpeppe@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-07-17 07:58:19.197590",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-07-17 08:12:09.918540",
			"approval": true
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM except i'd like to see at least one more comment\nand a test for the expected closing behaviour.\n\nhttps://codereview.appspot.com/11432044/diff/6001/src/pkg/net/http/request.go\nFile src/pkg/net/http/request.go (right):\n\nhttps://codereview.appspot.com/11432044/diff/6001/src/pkg/net/http/request.go#newcode430\nsrc/pkg/net/http/request.go:430: // methods Do, Post, and PostForm, and Transport.RoundTrip.\ni'd also like to see a similar comment on Client.Post (and possibly Post itself).",
			"disapproval": false,
			"date": "2013-07-17 14:36:12.366970",
			"approval": true
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It might also be nice to have a slightly clearer comment\nin finishRequest, e.g.\n\n// Close the body, unless we're about to close the\n// whole TCP connection anyway (or it's a client\n// request in which case closeAfterReply will\n// never be set).",
			"disapproval": false,
			"date": "2013-07-17 14:39:19.658680",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "A client request would never be there. That comment would suggest it could\r\nand be confusing.\r\n\r\nDid you just grep for Body.Close?\r\n\r\nThe server has nothing to do with this, right?\r\nOn Jul 18, 2013 12:39 AM, <rogpeppe@gmail.com> wrote:\r\n\r\n> It might also be nice to have a slightly clearer comment\r\n> in finishRequest, e.g.\r\n>\r\n> // Close the body, unless we're about to close the\r\n> // whole TCP connection anyway (or it's a client\r\n> // request in which case closeAfterReply will\r\n> // never be set).\r\n>\r\n>\r\n> https://codereview.appspot.**com/11432044/<https://codereview.appspot.com/11432044/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-17 20:23:32.455690",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=25133d85b948 ***\n\nnet/http: document NewRequest treating Reader as ReadCloser\n\nR=golang-dev, dsymonds, rogpeppe\nCC=golang-dev\nhttps://codereview.appspot.com/11432044",
			"disapproval": false,
			"date": "2013-07-18 00:10:18.393890",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 17 July 2013 21:23, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> A client request would never be there. That comment would suggest it could\r\n> and be confusing.\r\n>\r\n> Did you just grep for Body.Close?\r\n\r\nPretty much - yes, I misread the code, sorry.\r\n\r\nHaving looked again, I think the new comment is now just wrong.\r\nThe body is closed only if we get as far as transferWriter.WriteBody\r\nand even then only if we successfully write it.\r\n\r\nHow is a caller supposed to know if it should close\r\nthe body or not? The only reliable approach that I can\r\nsee is to close the body anyway and rely on the fact that\r\nClose is usually idempotent. This seems wrong.\r\n\r\nCan I suggest that we ensure that the body is *always*\r\nclosed by the documented methods, or *never*? This\r\nhalfway house seems like a recipe for hard-to-find leaks.\r\n\r\nAlso, I still think it's important that Client.Post should have\r\na comment - that method doesn't even reference the Request\r\ntype, let alone NewRequest. It's a bit much to expect\r\na user without much knowledge of net/http internals to infer\r\nthat they should look at the comment on NewRequest to\r\nwork out that the Reader they're passing to Post might be closed.\r\n",
			"disapproval": false,
			"date": "2013-07-18 08:44:04.057370",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't want to change semantics.\r\n\r\nIt's easy enough to write an ExactlyOnceCloserReader wrapper around a\r\nreader with an idempotent close for the rare cases where Close is delicate.\r\n\r\nBut feel free to send a doc CL for Client.Post. I forgot that even took a\r\nReader. That might even predate me. I also never use it.\r\n On Jul 18, 2013 6:44 PM, \"roger peppe\" <rogpeppe@gmail.com> wrote:\r\n\r\n> On 17 July 2013 21:23, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> > A client request would never be there. That comment would suggest it\r\n> could\r\n> > and be confusing.\r\n> >\r\n> > Did you just grep for Body.Close?\r\n>\r\n> Pretty much - yes, I misread the code, sorry.\r\n>\r\n> Having looked again, I think the new comment is now just wrong.\r\n> The body is closed only if we get as far as transferWriter.WriteBody\r\n> and even then only if we successfully write it.\r\n>\r\n> How is a caller supposed to know if it should close\r\n> the body or not? The only reliable approach that I can\r\n> see is to close the body anyway and rely on the fact that\r\n> Close is usually idempotent. This seems wrong.\r\n>\r\n> Can I suggest that we ensure that the body is *always*\r\n> closed by the documented methods, or *never*? This\r\n> halfway house seems like a recipe for hard-to-find leaks.\r\n>\r\n> Also, I still think it's important that Client.Post should have\r\n> a comment - that method doesn't even reference the Request\r\n> type, let alone NewRequest. It's a bit much to expect\r\n> a user without much knowledge of net/http internals to infer\r\n> that they should look at the comment on NewRequest to\r\n> work out that the Reader they're passing to Post might be closed.\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-18 08:54:46.885890",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 11432044: net/http: document NewRequest treating Reader as ReadCloser",
	"created": "2013-07-17 07:57:54.906760",
	"patchsets": [
		1,
		3001,
		6001,
		13001
	],
	"modified": "2013-07-18 15:21:36.425850",
	"closed": true,
	"issue": 11432044
}