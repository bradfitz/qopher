{
	"description": "go.talks/pkg/socket: fix go-tour non-main package wrong message\n\nFixes issue 5871.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "chaishushan@gmail.com",
			"recipients": [
				"chaishushan@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.talks",
			"disapproval": false,
			"date": "2013-07-12 03:08:58.289920",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"chaishushan@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No need to shell out to the go tool again. Just import \"go/parser\"\nand \"go/token\", and do the following...\n\nhttps://codereview.appspot.com/11200044/diff/6001/pkg/socket/socket.go\nFile pkg/socket/socket.go (right):\n\nhttps://codereview.appspot.com/11200044/diff/6001/pkg/socket/socket.go#newcode198\npkg/socket/socket.go:198: return err\ninstead, do this here:\n\nif name, err := packageName(body); err == nil && name != 'main\" {\n   return errors.New(`executable programs must\u00a0use \"package main\"`)\n}\nreturn err\n\nand add this func\n\nfunc packageName(body string) (string, error) {\n\tf, err := parser.ParseFile(token.NewFileSet(), \"prog.go\", strings.NewReader(body), parser.PackageClauseOnly)\n\tif err != nil {\n\t\treturn \"\", err\n\t}\n\treturn f.Name.String(), nil\n}",
			"disapproval": false,
			"date": "2013-07-12 04:09:44.689000",
			"approval": false
		},
		{
			"sender": "chaishushan@gmail.com",
			"recipients": [
				"chaishushan@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please take another look.\n\nhttps://codereview.appspot.com/11200044/diff/6001/pkg/socket/socket.go\nFile pkg/socket/socket.go (right):\n\nhttps://codereview.appspot.com/11200044/diff/6001/pkg/socket/socket.go#newcode198\npkg/socket/socket.go:198: return err\nOn 2013/07/12 04:09:44, adg wrote:\n> instead, do this here:\n> \n> if name, err := packageName(body); err == nil && name != 'main\" {\n>    return errors.New(`executable programs must&nbsp;use \"package main\"`)\n> }\n> return err\n> \n> and add this func\n> \n> func packageName(body string) (string, error) {\n> \tf, err := parser.ParseFile(token.NewFileSet(), \"prog.go\",\n> strings.NewReader(body), parser.PackageClauseOnly)\n> \tif err != nil {\n> \t\treturn \"\", err\n> \t}\n> \treturn f.Name.String(), nil\n> }\n\nThanks for your suggest!\nDone.",
			"disapproval": false,
			"date": "2013-07-12 04:43:53.082880",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"chaishushan@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=018a73a768a5&repo=talks ***\n\ngo.talks/pkg/socket: fix go-tour non-main package wrong message\n\nFixes issue 5871.\n\nR=golang-dev, adg\nCC=golang-dev\nhttps://codereview.appspot.com/11200044\n\nCommitter: Andrew Gerrand <adg@golang.org>\n\nhttps://codereview.appspot.com/11200044/diff/12001/pkg/socket/socket.go\nFile pkg/socket/socket.go (right):\n\nhttps://codereview.appspot.com/11200044/diff/12001/pkg/socket/socket.go#newcode160\npkg/socket/socket.go:160: if name, err := packageName(body); err == nil && name != \"main\" {\nI move this to inside the execution error check",
			"disapproval": false,
			"date": "2013-07-15 02:13:58.915030",
			"approval": false
		}
	],
	"owner_email": "chaishushan@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "chai2010",
	"subject": "code review 11200044: go.talks/pkg/socket: fix go-tour non-main package wrong...",
	"created": "2013-07-12 03:07:13.042840",
	"patchsets": [
		1,
		3001,
		6001,
		12001
	],
	"modified": "2013-07-15 08:37:27.384970",
	"closed": true,
	"issue": 11200044
}