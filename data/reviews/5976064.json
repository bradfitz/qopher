{
	"description": "runtime.Callers: make documentation match code\nIt is a bug that Caller and Callers disagree about the offset of the skip\nparameter. Document the bug.",
	"cc": [
		"rsc@golang.org",
		"dsymonds@golang.org",
		"r@google.com",
		"iant@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It's safer to document the bug than to fix it.\n\nI'd still be happy to check in the fix, but not without broad consensus.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-04-03 21:17:50.502290",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 03/04/2012, at 6:30 PM, David Symonds wrote:\n\n> The change makes the code more correct, but it's changing the\n> semantics of existing code that may have already worked around this\n> bug. That doesn't seem like a good idea.\n\nI am aware.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-04-03 09:27:26.772671",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This paragraph in the compatibility document is my argument in favor of the change:\n\n\tBugs. If a compiler or library has a bug that violates the\n\tspecification, a program that depends on the buggy behavior may\n\tbreak if the bug is fixed. We reserve the right to fix such bugs.\n\nThe existing implementation of runtime.Callers disagrees with its specification. The question becomes, do we fix the docs or the code? I argue the code, since there is no good reason for Caller and Callers to disagree this way and it's clearly a bug in any case. However, it's also clear that fixing it might break things, which is an argument to change the docs. My defense is the paragraph cited: we reserve the right to fix bugs.\n\nStill, it's a judgment call.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-04-03 10:27:31.282727",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"dsymonds@golang.org",
				"r@google.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am not sure about this. \nThe RFC822 code was basically impossible to use correctly.\nThis code is possible to use correctly, you just have to pass\na slightly different argument.  I think maybe we should \ndocument the current behavior here, because it is possible\nto use correctly as is.",
			"disapproval": false,
			"date": "2012-04-03 21:07:15.022065",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-04-03 07:58:53.198123",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"dsymonds@golang.org",
				"r@google.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, dsymonds@golang.org, r@google.com, iant@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-03 21:16:42.878691",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The change makes the code more correct, but it's changing the\nsemantics of existing code that may have already worked around this\nbug. That doesn't seem like a good idea.\n",
			"disapproval": false,
			"date": "2012-04-03 08:30:01.032078",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "My instinct is that we should reserve that right to fix bugs that have\nserious consequences, have clearly undesirable behaviour, or prevent\nreasonable use of the code. If I'm reading the code right, the current\nruntime.Callers is not skipping enough, which merely means that users\nneed to stick a +1 in their code; that is unfortunate, but it doesn't\nseem to be worth changing the semantics.\n\nAnyway, that's my two zlotys. I'm curious to hear what other people think.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-04-03 12:06:21.012952",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"dsymonds@golang.org",
				"r@google.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-04-03 13:33:37.402911",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Let's sit on it for another day or two and see.\nThe compat document says\n\n\"Bugs. If a compiler or library has a bug that violates the\nspecification, a program that depends on the buggy behavior may break\nif the bug is fixed. We reserve the right to fix such bugs.\"\n\nbut the kind of thing I imagined exercising that would\nbe if strconv.ParseFloat had a case or two that was\nincorrect, we could fix it.  This would not affect most\ncode, since the function is (presumed) mostly correct,\nso most uses would not see a change in behavior.\n\nruntime.Callers is different: it's wrong in every single\nanswer, so fixing the bug changes changes the behavior\nof every call.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-04-03 21:23:10.833145",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 04/04/2012, at 7:23 AM, Russ Cox wrote:\n\n> Let's sit on it for another day or two and see.\n> The compat document says\n> \n> \"Bugs. If a compiler or library has a bug that violates the\n> specification, a program that depends on the buggy behavior may break\n> if the bug is fixed. We reserve the right to fix such bugs.\"\n> \n> but the kind of thing I imagined exercising that would\n> be if strconv.ParseFloat had a case or two that was\n> incorrect, we could fix it.  This would not affect most\n> code, since the function is (presumed) mostly correct,\n> so most uses would not see a change in behavior.\n> \n> runtime.Callers is different: it's wrong in every single\n> answer, so fixing the bug changes changes the behavior\n> of every call.\n\nThat's a good argument. Both statically and dynamically, though, the number of calls to runtime.Callers is close to zero, while calls to strconv.ParseFloat will be fairly frequent.  Not sure that's a strong enough counterargument.\n\nYou'll note the current version of the CL takes your position and updates the document rather than the code.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-04-03 21:44:43.703116",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"dsymonds@golang.org",
				"r@google.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM for updating docs.",
			"disapproval": false,
			"date": "2012-04-03 22:01:43.215704",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM for doc change\n",
			"disapproval": false,
			"date": "2012-04-09 23:34:32.890678",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"dsymonds@golang.org",
				"r@google.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a7db811befb8 ***\n\nruntime.Callers: make documentation match code\nIt is a bug that Caller and Callers disagree about the offset of the skip\nparameter. Document the bug.\n\nR=rsc, dsymonds, r, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5976064",
			"disapproval": false,
			"date": "2012-04-09 23:48:06.344661",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5976064: runtime.Callers: make documentation match code",
	"created": "2012-04-03 07:58:46.235222",
	"patchsets": [
		1,
		5001,
		7001
	],
	"modified": "2012-04-09 23:48:09.410225",
	"closed": true,
	"issue": 5976064
}