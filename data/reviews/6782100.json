{
	"description": "cmd/gc: check malloc return value\n\nCheck the return value from malloc - do not assume that we were\nallocated memory just because we asked for it.\n\nUpdate issue 4415.",
	"cc": [
		"minux.ma@gmail.com",
		"daniel.morsing@gmail.com",
		"remyoudompheng@gmail.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-11-25 16:21:30.502010",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"jsing@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "found more unchecked mallocs:\nhttps://codereview.appspot.com/6856080",
			"disapproval": false,
			"date": "2012-11-23 15:09:38.883130",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-11-25 13:08:26.288280",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"jsing@google.com",
				"minux.ma@gmail.com",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Why not just use mal()? That function already bails on allocation failure.",
			"disapproval": false,
			"date": "2012-11-25 14:19:33.077720",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "because this malloc has a corresponding free.\r\n\r\nR\u00e9my.\r\n\r\n2012/11/25, daniel.morsing@gmail.com <daniel.morsing@gmail.com>:\r\n> Why not just use mal()? That function already bails on allocation\r\n> failure.\r\n>\r\n> https://codereview.appspot.com/6782100/\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-25 14:23:00.315560",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"minux.ma@gmail.com",
				"daniel.morsing@gmail.com",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3d70c606eb75 ***\n\ncmd/gc: check malloc return value\n\nCheck the return value from malloc - do not assume that we were\nallocated memory just because we asked for it.\n\nUpdate issue 4415.\n\nR=minux.ma, daniel.morsing, remyoudompheng, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6782100",
			"disapproval": false,
			"date": "2012-11-26 11:03:40.760770",
			"approval": false
		}
	],
	"owner_email": "jsing@google.com",
	"private": false,
	"base_url": "",
	"owner": "jsing",
	"subject": "code review 6782100: cmd/gc: check malloc return value",
	"created": "2012-11-22 15:02:07.633470",
	"patchsets": [
		1,
		1001,
		1002,
		1004
	],
	"modified": "2012-11-26 11:03:43.222170",
	"closed": true,
	"issue": 6782100
}