{
	"description": "image/gif: do not allow pixels outside the current palette\n\nAfter loading a frame of a GIF, check that each pixel\nis inside the frame's palette.\n\nFixes issue 5401.",
	"cc": [
		"nigeltao@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"nigel.thorne@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigel.thorne@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttp://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-26 08:18:25.033250",
			"approval": false
		},
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please take a look. (Corrected the wrong Nigel. Sorry.)",
			"disapproval": false,
			"date": "2013-06-26 13:05:37.442450",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"jeff.allen@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10597043/diff/3002/src/pkg/image/gif/reader.go\nFile src/pkg/image/gif/reader.go (right):\n\nhttps://codereview.appspot.com/10597043/diff/3002/src/pkg/image/gif/reader.go#newcode219\nsrc/pkg/image/gif/reader.go:219: }\nfor _, pixel := range m.Pix {\n  if int(pixel) >= len(m.Palette) {",
			"disapproval": false,
			"date": "2013-06-26 17:45:18.496660",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"jeff.allen@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10597043/diff/3002/src/pkg/image/gif/reader.go\nFile src/pkg/image/gif/reader.go (right):\n\nhttps://codereview.appspot.com/10597043/diff/3002/src/pkg/image/gif/reader.go#newcode214\nsrc/pkg/image/gif/reader.go:214: // check that the color indexes are inside the palette\nThe comment should be a complete sentence: start with a capital letter and end with a full stop.\n\nhttps://codereview.appspot.com/10597043/diff/3002/src/pkg/image/gif/reader.go#newcode215\nsrc/pkg/image/gif/reader.go:215: for i := range m.Pix {\nThis loop should be surrounded by an\nif len(m.Palette) != 0xFF { ... }\nsince it'd be nice to avoid the O(N) loop if we have a full palette.\n\nhttps://codereview.appspot.com/10597043/diff/3002/src/pkg/image/gif/reader_test.go\nFile src/pkg/image/gif/reader_test.go (right):\n\nhttps://codereview.appspot.com/10597043/diff/3002/src/pkg/image/gif/reader_test.go#newcode117\nsrc/pkg/image/gif/reader_test.go:117: // make a local copy of testGIF\nWhile you're here, make this comment a complete sentence.\n\nhttps://codereview.appspot.com/10597043/diff/3002/src/pkg/image/gif/reader_test.go#newcode143\nsrc/pkg/image/gif/reader_test.go:143: // crash1.gif (no palette information, so any pixel data\nComments should be complete sentences.\n\nSimilarly below.\n\nhttps://codereview.appspot.com/10597043/diff/3002/src/pkg/image/gif/reader_test.go#newcode146\nsrc/pkg/image/gif/reader_test.go:146: 0x47, 0x49, 0x46, 0x38, 0x39, 0x61, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x02, 0x02, 0x4C, 0x01, 0x00, 0x3B,\nAs trivial as this image is, I would prefer to synthesize a malformed GIF image here instead of using crash1.gif, to avoid any potential copyright concerns.",
			"disapproval": false,
			"date": "2013-06-27 00:39:00.490240",
			"approval": false
		},
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-27 08:05:56.647420",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"jeff.allen@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10597043/diff/14001/src/pkg/image/gif/reader_test.go\nFile src/pkg/image/gif/reader_test.go (right):\n\nhttps://codereview.appspot.com/10597043/diff/14001/src/pkg/image/gif/reader_test.go#newcode152\nsrc/pkg/image/gif/reader_test.go:152: // Encode the pixels: neither are in range, because there's not palette.\ns/are/is/\ns/not/no/\n\nhttps://codereview.appspot.com/10597043/diff/14001/src/pkg/image/gif/reader_test.go#newcode179\nsrc/pkg/image/gif/reader_test.go:179: pix := []byte{0, 2}\nplease gruntle me by turning on all the bits: check values 0 1 2 3 255 by looping with the same header but different pixel values",
			"disapproval": false,
			"date": "2013-06-27 13:23:46.049180",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"jeff.allen@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10597043/diff/20001/src/pkg/image/gif/reader_test.go\nFile src/pkg/image/gif/reader_test.go (right):\n\nhttps://codereview.appspot.com/10597043/diff/20001/src/pkg/image/gif/reader_test.go#newcode141\nsrc/pkg/image/gif/reader_test.go:141: func TestIssue5401a(t *testing.T) {\nI'd call them TestNoPalette and TestPixelOutsidePaletteRange.\n\nhttps://codereview.appspot.com/10597043/diff/20001/src/pkg/image/gif/reader_test.go#newcode171\nsrc/pkg/image/gif/reader_test.go:171: // Manufacture a GIF with a 2 color palette and a pixel referencing\nThis comment isn't quite right, for small pval.\n\nhttps://codereview.appspot.com/10597043/diff/20001/src/pkg/image/gif/reader_test.go#newcode192\nsrc/pkg/image/gif/reader_test.go:192: exp := \"\"\nThe usual Go language is s/exp/want/.",
			"disapproval": false,
			"date": "2013-06-28 09:10:38.977830",
			"approval": false
		},
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-28 14:43:17.365340",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"jeff.allen@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nI'll make the trivial fixes and submit.\n\nhttps://codereview.appspot.com/10597043/diff/24001/src/pkg/image/gif/reader.go\nFile src/pkg/image/gif/reader.go (right):\n\nhttps://codereview.appspot.com/10597043/diff/24001/src/pkg/image/gif/reader.go#newcode215\nsrc/pkg/image/gif/reader.go:215: if len(m.Palette) != 0xFF {\nOops, 255 should be 256.\n\nhttps://codereview.appspot.com/10597043/diff/24001/src/pkg/image/gif/reader_test.go\nFile src/pkg/image/gif/reader_test.go (right):\n\nhttps://codereview.appspot.com/10597043/diff/24001/src/pkg/image/gif/reader_test.go#newcode171\nsrc/pkg/image/gif/reader_test.go:171: // Manufacture a GIF with a 2 color palette\nAdd a trailing full stop.\n\nhttps://codereview.appspot.com/10597043/diff/24001/src/pkg/image/gif/reader_test.go#newcode196\nsrc/pkg/image/gif/reader_test.go:196: t.Log(pval)\nDelete.",
			"disapproval": false,
			"date": "2013-07-01 04:09:48.774640",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"jeff.allen@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=fc3ae28f77f9 ***\n\nimage/gif: do not allow pixels outside the current palette\n\nAfter loading a frame of a GIF, check that each pixel\nis inside the frame's palette.\n\nFixes issue 5401.\n\nR=nigeltao, r\nCC=golang-dev\nhttps://codereview.appspot.com/10597043\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2013-07-01 04:11:57.920540",
			"approval": false
		}
	],
	"owner_email": "jeff.allen@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "jeff.allen",
	"subject": "code review 10597043: image/gif: do not allow pixels outside the current palette",
	"created": "2013-06-26 08:05:31.409320",
	"patchsets": [
		1,
		3001,
		6001,
		3002,
		14001,
		20001,
		24001
	],
	"modified": "2013-07-17 08:36:26.472500",
	"closed": true,
	"issue": 10597043
}