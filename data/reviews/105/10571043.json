{
	"description": "crypto/sha1: provide a top-level Sum function\nMakes it easy to ask the simple question, what is the hash of this data?",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10571043/diff/4001/src/pkg/crypto/sha1/sha1.go\nFile src/pkg/crypto/sha1/sha1.go (right):\n\nhttps://codereview.appspot.com/10571043/diff/4001/src/pkg/crypto/sha1/sha1.go#newcode131\nsrc/pkg/crypto/sha1/sha1.go:131: func Sum(data []byte) [Size]byte {\ngoapi doesn't handle this:\n\n+pkg crypto/sha1, func Sum([]uint8) [Size]uint8\n\nBut why in just sha1? Why not md5, sha256, sha512?",
			"disapproval": false,
			"date": "2013-06-25 21:45:17.321580",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-25 21:29:43.734060",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-25 21:37:16.518020",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-06-25 21:44:20.334460",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10571043/diff/4001/src/pkg/crypto/sha1/sha1.go\nFile src/pkg/crypto/sha1/sha1.go (right):\n\nhttps://codereview.appspot.com/10571043/diff/4001/src/pkg/crypto/sha1/sha1.go#newcode131\nsrc/pkg/crypto/sha1/sha1.go:131: func Sum(data []byte) [Size]byte {\nOn 2013/06/25 21:45:17, bradfitz wrote:\n> goapi doesn't handle this:\n> \n> +pkg crypto/sha1, func Sum([]uint8) [Size]uint8\n> \n> But why in just sha1? Why not md5, sha256, sha512?\n\ni plan to put its analog in all the hash packages. if all you need is a hash, the current API is clunky.\n\nwhat do you mean, goapi doesn't handle it? it prints out the addition just fine.",
			"disapproval": false,
			"date": "2013-06-25 21:49:22.734660",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jun 25, 2013 at 2:49 PM, <r@golang.org> wrote:\r\n\r\n>\r\n> https://codereview.appspot.**com/10571043/diff/4001/src/**\r\n> pkg/crypto/sha1/sha1.go<https://codereview.appspot.com/10571043/diff/4001/src/pkg/crypto/sha1/sha1.go>\r\n> File src/pkg/crypto/sha1/sha1.go (right):\r\n>\r\n> https://codereview.appspot.**com/10571043/diff/4001/src/**\r\n> pkg/crypto/sha1/sha1.go#**newcode131<https://codereview.appspot.com/10571043/diff/4001/src/pkg/crypto/sha1/sha1.go#newcode131>\r\n> src/pkg/crypto/sha1/sha1.go:**131: func Sum(data []byte) [Size]byte {\r\n> On 2013/06/25 21:45:17, bradfitz wrote:\r\n>\r\n>> goapi doesn't handle this:\r\n>>\r\n>\r\n>  +pkg crypto/sha1, func Sum([]uint8) [Size]uint8\r\n>>\r\n>\r\n>  But why in just sha1? Why not md5, sha256, sha512?\r\n>>\r\n>\r\n> what do you mean, goapi doesn't handle it? it prints out the addition\r\n> just fine.\r\n>\r\n\r\n[Size]uint8 isn't a Go type.\r\n\r\nIt should say [20]uint8.\r\n",
			"disapproval": false,
			"date": "2013-06-25 22:10:54.918730",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Size is a constant, so [Size]uint8 is a Go type. goapi isn't resolving\r\nthe name right.\r\n\r\nIt should not say [20]uint8 since the constant is defined in the\r\npackage for a reason: it is the size of this return value.\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-25 22:45:24.782960",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes, I'm just saying that goapi is broken.\r\n\r\n\r\n\r\nOn Tue, Jun 25, 2013 at 3:45 PM, Rob Pike <r@golang.org> wrote:\r\n\r\n> Size is a constant, so [Size]uint8 is a Go type. goapi isn't resolving\r\n> the name right.\r\n>\r\n> It should not say [20]uint8 since the constant is defined in the\r\n> package for a reason: it is the size of this return value.\r\n> -rob\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-25 22:49:40.910660",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "[Size]byte is probably fine even for goapi. If Size changes, goapi will\r\ntell us.\r\nThere's a false positive if we rewrite [Size]byte to [20]byte later, but no\r\nbig deal.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-06-25 22:56:01.938800",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=d3f99f091748 ***\n\ncrypto/sha1: provide a top-level Sum function\nMakes it easy to ask the simple question, what is the hash of this data?\n\nR=golang-dev, rsc, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/10571043",
			"disapproval": false,
			"date": "2013-06-26 00:04:21.171700",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 10571043: crypto/sha1: provide a top-level Sum function",
	"created": "2013-06-25 21:29:35.380250",
	"patchsets": [
		1,
		4001,
		13001
	],
	"modified": "2013-06-26 00:04:22.691590",
	"closed": true,
	"issue": 10571043
}