{
	"description": "cmd/go: log compilation errors when scanning directories and packages\nBefore, some packages disappear silently if the package cannot be imported,\nsuch as if the import statement is unparseable.\nBefore:\n        % ls src\n        foo   issue\n        % go list ./...\n        _/home/r/bug/src/foo\n        %\nAfter:\n        % go list ./...\n        src/issue/issue.go:3:5: expected 'STRING', found newline\n        _/home/r/bug/src/foo\n        %",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-25 21:01:42.403660",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-25 21:04:12.920120",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10568043/diff/8001/src/cmd/go/main.go\nFile src/cmd/go/main.go (right):\n\nhttps://codereview.appspot.com/10568043/diff/8001/src/cmd/go/main.go#newcode489\nsrc/cmd/go/main.go:489: if !strings.Contains(err.Error(), \"no Go source files\") {\nCould you check for build.NoGoError instead?\nThat's what godoc and vet use.\n\nhttps://codereview.appspot.com/10568043/diff/8001/src/cmd/go/main.go#newcode490\nsrc/cmd/go/main.go:490: log.Print(err)\nDoes the error have enough context? Should the path be printed here too?\n\nhttps://codereview.appspot.com/10568043/diff/8001/src/cmd/go/main.go#newcode594\nsrc/cmd/go/main.go:594: if !strings.Contains(err.Error(), \"no Go source files\") {\nSame.",
			"disapproval": false,
			"date": "2013-06-26 00:42:59.476210",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10568043/diff/8001/src/cmd/go/main.go\nFile src/cmd/go/main.go (right):\n\nhttps://codereview.appspot.com/10568043/diff/8001/src/cmd/go/main.go#newcode490\nsrc/cmd/go/main.go:490: log.Print(err)\nOn 2013/06/26 00:42:59, rsc wrote:\n> Does the error have enough context? Should the path be printed here too?\n\nlooks fine to me:\n\ntubenose=% go list cmd/...\n/Users/r/go/src/cmd/zot/x.go:3:8: expected 'STRING', found 'INT' 3\ncmd/api\ncmd/cgo\ncmd/fix\ncmd/go\ncmd/godoc\ncmd/gofmt\ncmd/yacc\ntubenose=%",
			"disapproval": false,
			"date": "2013-06-26 17:39:10.420590",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-26 17:40:18.996810",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-06-26 17:47:05.964410",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=4724e59b3b85 ***\n\ncmd/go: log compilation errors when scanning directories and packages\nBefore, some packages disappear silently if the package cannot be imported,\nsuch as if the import statement is unparseable.\nBefore:\n        % ls src\n        foo   issue\n        % go list ./...\n        _/home/r/bug/src/foo\n        %\nAfter:\n        % go list ./...\n        src/issue/issue.go:3:5: expected 'STRING', found newline\n        _/home/r/bug/src/foo\n        %\n\nR=rsc\nCC=golang-dev\nhttps://codereview.appspot.com/10568043",
			"disapproval": false,
			"date": "2013-06-26 17:48:07.134370",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 10568043: cmd/go: log compilation errors when scanning directorie...",
	"created": "2013-06-25 21:01:39.393550",
	"patchsets": [
		1,
		3001,
		8001,
		14001,
		15003
	],
	"modified": "2013-06-26 17:48:08.894600",
	"closed": true,
	"issue": 10568043
}