{
	"description": "ssh: handle bad servers better.\n\nThis change prevents bad servers from crashing a client by sending an\ninvalid channel ID. It also makes the client disconnect in more cases\nof invalid messages from a server and cleans up the client channels\nin the event of a disconnect.",
	"cc": [
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://agl%40golang.org@code.google.com/p/go.crypto/",
			"disapproval": false,
			"date": "2012-04-23 22:29:48.033273",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=af839935547f&repo=crypto ***\n\nssh: handle bad servers better.\n\nThis change prevents bad servers from crashing a client by sending an\ninvalid channel ID. It also makes the client disconnect in more cases\nof invalid messages from a server and cleans up the client channels\nin the event of a disconnect.\n\nR=dave\nCC=golang-dev\nhttp://codereview.appspot.com/6099050",
			"disapproval": false,
			"date": "2012-04-24 17:46:29.934867",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6099050/diff/2001/ssh/client.go\nFile ssh/client.go (right):\n\nhttp://codereview.appspot.com/6099050/diff/2001/ssh/client.go#newcode276\nssh/client.go:276: return\nIt wasn't clear here whether you wanted to tear down the connection, or whether it's best to ignore disconnect messages from the server.",
			"disapproval": false,
			"date": "2012-04-23 22:30:22.242819",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thank you for closing this long standing TODO.\n\nhttp://codereview.appspot.com/6099050/diff/2001/ssh/client.go\nFile ssh/client.go (right):\n\nhttp://codereview.appspot.com/6099050/diff/2001/ssh/client.go#newcode276\nssh/client.go:276: return\nRFC 4254 s 11 says all impls MUST accept and process this message. Certainly it could be cleaner, but closeAll gets the job done. A future enhancement might be to place the disconnection message text into an error and pass it back to any readers or writers of a channel. \n\nOn 2012/04/23 22:30:22, agl1 wrote:\n> It wasn't clear here whether you wanted to tear down the connection, or whether\n> it's best to ignore disconnect messages from the server.\n\nhttp://codereview.appspot.com/6099050/diff/4001/ssh/client.go\nFile ssh/client.go (right):\n\nhttp://codereview.appspot.com/6099050/diff/4001/ssh/client.go#newcode187\nssh/client.go:187: defer func() {\nNice use of the defer.\n\nhttp://codereview.appspot.com/6099050/diff/4001/ssh/client.go#newcode437\nssh/client.go:437: func (c *chanlist) closeAll() {\nThanks for implementing this.",
			"disapproval": false,
			"date": "2012-04-24 09:04:27.270328",
			"approval": true
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 6099050: ssh: handle bad servers better.",
	"created": "2012-04-23 22:26:05.609856",
	"patchsets": [
		1,
		2001,
		4001,
		2002
	],
	"modified": "2012-04-24 17:46:31.516127",
	"closed": true,
	"issue": 6099050
}