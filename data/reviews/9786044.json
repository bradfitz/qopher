{
	"description": "runtime: flag static variables as no-pointers\n\nVariables in data sections of 32-bit executables interfere with\ngarbage collector's ability to free objects and/or unnecessarily\nslow down the garbage collector.\n\nThis changeset moves some static variables to .noptr sections.\n'files' in symtab.c is now allocated dynamically.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dvyukov@google.com",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/26 16:41:26, dvyukov wrote:\n> LGTM with nitpicks\n> \n> https://codereview.appspot.com/9786044/diff/15001/src/pkg/runtime/symtab.c\n> File src/pkg/runtime/symtab.c (right):\n> \n> https://codereview.appspot.com/9786044/diff/15001/src/pkg/runtime/symtab.c#newcode310\n> src/pkg/runtime/symtab.c:310: static struct {\n> { on next line for structs\n> \n> https://codereview.appspot.com/9786044/diff/15001/src/pkg/runtime/symtab.c#newcode316\n> src/pkg/runtime/symtab.c:316: enum {\n> { on next line\n> or everything on the same line\n> we use both variants\n\nI suppose I can run hg submit.",
			"disapproval": false,
			"date": "2013-05-26 18:06:23.021760",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c\nFile src/pkg/runtime/symtab.c (left):\n\nhttps://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c#oldcode322\nsrc/pkg/runtime/symtab.c:322: } files[200];\nwhy use malloc for files?",
			"disapproval": false,
			"date": "2013-05-26 16:14:22.968770",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c\nFile src/pkg/runtime/symtab.c (right):\n\nhttps://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c#newcode316\nsrc/pkg/runtime/symtab.c:316: const int32 maxfiles = 200;\nOn 2013/05/26 16:16:06, dvyukov wrote:\n> we do not use const, please use enum.\n\nIt appears the dist tool fails to handle enums:\n\ngo tool dist: FAILED: ... runtime/symtab.c",
			"disapproval": false,
			"date": "2013-05-26 16:24:01.104690",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c\nFile src/pkg/runtime/symtab.c (right):\n\nhttps://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c#newcode316\nsrc/pkg/runtime/symtab.c:316: const int32 maxfiles = 200;\nOn 2013/05/26 16:24:01, atom wrote:\n> On 2013/05/26 16:16:06, dvyukov wrote:\n> > we do not use const, please use enum.\n> \n> It appears the dist tool fails to handle enums:\n> \n> go tool dist: FAILED: ... runtime/symtab.c\n\n... but... how does it handle all other enums?",
			"disapproval": false,
			"date": "2013-05-26 16:28:33.289960",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/26 16:22:45, minux wrote:\n> On Mon, May 27, 2013 at 12:17 AM, <mailto:dvyukov@google.com> wrote:\n> \n> > On 2013/05/26 16:14:22, minux wrote:\n> >\n> > https://codereview.appspot.**com/9786044/diff/5001/src/pkg/**\n> >\n> runtime/symtab.c<https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c>\n> >\n> >> File src/pkg/runtime/symtab.c (left):\n> >>\n> >\n> >\n> > https://codereview.appspot.**com/9786044/diff/5001/src/pkg/**\n> >\n> runtime/symtab.c#oldcode322<https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c#oldcode322>\n> >\n> >> src/pkg/runtime/symtab.c:322: } files[200];\n> >> why use malloc for files?\n> >>\n> >\n> > I guess to not scan it during every GC for the whole duration of the\n> > program.\n> >\n> why not just put them into .noptrbss?\n> because they are temporary data?\n\nThe field files.srcstring contains a pointer. It isn't impossible for garbage collection to start while running the dosrcline() function.",
			"disapproval": false,
			"date": "2013-05-26 16:33:42.510420",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-05-26 16:05:34.282580",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Does not linker figure out that an array of int8 is NoPointers?",
			"disapproval": false,
			"date": "2013-05-26 16:11:06.633310",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, May 27, 2013 at 12:11 AM, <dvyukov@google.com> wrote:\r\n\r\n> Does not linker figure out that an array of int8 is NoPointers?\r\n>\r\nThe C compilers don't generate typeinfo.\r\n",
			"disapproval": false,
			"date": "2013-05-26 16:12:34.565620",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e6c4fa4c0c25 ***\n\nruntime: flag static variables as no-pointers\n\nVariables in data sections of 32-bit executables interfere with\ngarbage collector's ability to free objects and/or unnecessarily\nslow down the garbage collector.\n\nThis changeset moves some static variables to .noptr sections.\n'files' in symtab.c is now allocated dynamically.\n\nR=golang-dev, dvyukov, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/9786044",
			"disapproval": false,
			"date": "2013-05-27 06:12:26.782660",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c\nFile src/pkg/runtime/symtab.c (right):\n\nhttps://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c#newcode316\nsrc/pkg/runtime/symtab.c:316: const int32 maxfiles = 200;\nwe do not use const, please use enum.",
			"disapproval": false,
			"date": "2013-05-26 16:16:06.584970",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/26 16:14:22, minux wrote:\n> https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c\n> File src/pkg/runtime/symtab.c (left):\n> \n> https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c#oldcode322\n> src/pkg/runtime/symtab.c:322: } files[200];\n> why use malloc for files?\n\nI guess to not scan it during every GC for the whole duration of the program.",
			"disapproval": false,
			"date": "2013-05-26 16:17:14.331290",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, May 27, 2013 at 12:17 AM, <dvyukov@google.com> wrote:\r\n\r\n> On 2013/05/26 16:14:22, minux wrote:\r\n>\r\n> https://codereview.appspot.**com/9786044/diff/5001/src/pkg/**\r\n> runtime/symtab.c<https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c>\r\n>\r\n>> File src/pkg/runtime/symtab.c (left):\r\n>>\r\n>\r\n>\r\n> https://codereview.appspot.**com/9786044/diff/5001/src/pkg/**\r\n> runtime/symtab.c#oldcode322<https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c#oldcode322>\r\n>\r\n>> src/pkg/runtime/symtab.c:322: } files[200];\r\n>> why use malloc for files?\r\n>>\r\n>\r\n> I guess to not scan it during every GC for the whole duration of the\r\n> program.\r\n>\r\nwhy not just put them into .noptrbss?\r\nbecause they are temporary data?\r\n",
			"disapproval": false,
			"date": "2013-05-26 16:22:45.540370",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/26 16:12:34, minux wrote:\n> On Mon, May 27, 2013 at 12:11 AM, <mailto:dvyukov@google.com> wrote:\n> \n> > Does not linker figure out that an array of int8 is NoPointers?\n> >\n> The C compilers don't generate typeinfo.\n\nThe linker conservatively marks all C objects as pointers, right?",
			"disapproval": false,
			"date": "2013-05-26 16:18:17.510110",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/26 16:17:14, dvyukov wrote:\n> On 2013/05/26 16:14:22, minux wrote:\n> > https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c\n> > File src/pkg/runtime/symtab.c (left):\n> > \n> >\n> https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c#oldcode322\n> > src/pkg/runtime/symtab.c:322: } files[200];\n> > why use malloc for files?\n> \n> I guess to not scan it during every GC for the whole duration of the program.\n\nYes.",
			"disapproval": false,
			"date": "2013-05-26 16:20:45.620240",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c\nFile src/pkg/runtime/symtab.c (right):\n\nhttps://codereview.appspot.com/9786044/diff/5001/src/pkg/runtime/symtab.c#newcode316\nsrc/pkg/runtime/symtab.c:316: const int32 maxfiles = 200;\nOn 2013/05/26 16:28:33, dvyukov wrote:\n> On 2013/05/26 16:24:01, atom wrote:\n> > On 2013/05/26 16:16:06, dvyukov wrote:\n> > > we do not use const, please use enum.\n> > \n> > It appears the dist tool fails to handle enums:\n> > \n> > go tool dist: FAILED: ... runtime/symtab.c\n> \n> ... but... how does it handle all other enums?\n\n... the error was caused a missing ;",
			"disapproval": false,
			"date": "2013-05-26 16:37:16.050270",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM with nitpicks\n\nhttps://codereview.appspot.com/9786044/diff/15001/src/pkg/runtime/symtab.c\nFile src/pkg/runtime/symtab.c (right):\n\nhttps://codereview.appspot.com/9786044/diff/15001/src/pkg/runtime/symtab.c#newcode310\nsrc/pkg/runtime/symtab.c:310: static struct {\n{ on next line for structs\n\nhttps://codereview.appspot.com/9786044/diff/15001/src/pkg/runtime/symtab.c#newcode316\nsrc/pkg/runtime/symtab.c:316: enum {\n{ on next line\nor everything on the same line\nwe use both variants",
			"disapproval": false,
			"date": "2013-05-26 16:41:26.682440",
			"approval": true
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9786044/diff/15001/src/pkg/runtime/symtab.c\nFile src/pkg/runtime/symtab.c (right):\n\nhttps://codereview.appspot.com/9786044/diff/15001/src/pkg/runtime/symtab.c#newcode310\nsrc/pkg/runtime/symtab.c:310: static struct {\nOn 2013/05/26 16:41:26, dvyukov wrote:\n> { on next line for structs\n\nDone.\n\nhttps://codereview.appspot.com/9786044/diff/15001/src/pkg/runtime/symtab.c#newcode316\nsrc/pkg/runtime/symtab.c:316: enum {\nOn 2013/05/26 16:41:26, dvyukov wrote:\n> { on next line\n> or everything on the same line\n> we use both variants\n\nDone.",
			"disapproval": false,
			"date": "2013-05-26 16:47:37.590180",
			"approval": false
		}
	],
	"owner_email": "0xE2.0x9A.0x9B@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "atom",
	"subject": "code review 9786044: runtime: flag static variables as no-pointers",
	"created": "2013-05-26 15:59:39.429850",
	"patchsets": [
		1,
		2001,
		5001,
		15001,
		20001,
		24001
	],
	"modified": "2013-05-27 06:12:32.294380",
	"closed": true,
	"issue": 9786044
}