{
	"description": "Added RuneIndex and RuneIndexInString functions to utf8 package for finding the byte index of a utf8 sequence.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "ibw@isaacwagner.me",
			"recipients": [
				"ibw@isaacwagner.me",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nI'd like you to review the following change.",
			"disapproval": false,
			"date": "2009-12-01 23:57:24.739234",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"ibw@isaacwagner.me",
				"rsc@golang.org",
				"agl@chromium.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I'm not in favor of these functions. They encourage n^2 algorithms by naive programmers.  A better approach would involve a type that memoizes the indexing or uses a doubled representation to allow efficient indexing by rune.  It's quite hard to get the engineering right but it's worth it because everyone benefits.",
			"disapproval": false,
			"date": "2009-12-02 00:46:06.395659",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, Dec 1, 2009 at 16:46,  <r@golang.org> wrote:\n> I'm not in favor of these functions. They encourage n^2 algorithms by\n> naive programmers. \u00a0A better approach would involve a type that memoizes\n> the indexing or uses a doubled representation to allow efficient\n> indexing by rune. \u00a0It's quite hard to get the engineering right but it's\n> worth it because everyone benefits.\n\nAfter thinking about this for a day or two, I agree.\nThe number of situations in which RuneIndex would\nactually be useful without being horrendously inefficient\nis pretty small.\n\nI happened to look at the UTF-8 article on Wikipedia\nearlier today, and there is a comment there that is\nright on the money:\n\n    In UCS-2 (but not UTF-16) Unicode code points\n    are all the same size, making measurements of a\n    fixed number of them easy. This is often mistakenly\n    considered important due to confusion caused by old\n    documentation written for ASCII, where \"character\"\n    was used as a synonym for \"byte\". If you measure strings\n    using bytes instead of \"characters\" most algorithms\n    can be easily and efficiently adapted for UTF-8.\n\nRob is right: RuneIndex only encourages bad behavior.\n\nSorry.\nRuss\n",
			"disapproval": false,
			"date": "2009-12-02 02:16:36.317292",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ibw@isaacwagner.me",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2009-12-02 09:08:17.431541",
			"approval": false
		},
		{
			"sender": "agl@chromium.org",
			"recipients": [
				"ibw@isaacwagner.me",
				"rsc@golang.org",
				"agl@chromium.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "N.B. I'll leave it up to someone else to decide if we actually want these functions.\n\nhttp://codereview.appspot.com/163060/diff/1006/1007\nFile src/pkg/utf8/utf8.go (right):\n\nhttp://codereview.appspot.com/163060/diff/1006/1007#newcode296\nsrc/pkg/utf8/utf8.go:296: for index < len(b) {\nThis can be written more cleanly, no?\n\nc := 0;\nfor i, _ := range s {\n  if c == n {\n    return i;\n  }\n  c++;\n}\n\nThen you need a string, rather than a []byte. So move the body into the function below and, here, call the other function with string(b).\n\nhttp://codereview.appspot.com/163060/diff/1006/1007#newcode320\nsrc/pkg/utf8/utf8.go:320: for i, _ := range bytes {\nthis should use copy()",
			"disapproval": false,
			"date": "2009-12-02 00:08:09.015402",
			"approval": false
		},
		{
			"sender": "ibw@isaacwagner.me",
			"recipients": [
				"ibw@isaacwagner.me",
				"rsc@golang.org",
				"agl@chromium.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Ah, that is a much better (cleaner) way of doing it. I created these functions after a brief conversation with rsc, so I think he'll OK them for a commit. Thanks for the suggestions.",
			"disapproval": false,
			"date": "2009-12-02 00:36:36.053038",
			"approval": false
		},
		{
			"sender": "ibw@isaacwagner.me",
			"recipients": [
				"ibw@isaacwagner.me",
				"rsc@golang.org",
				"agl@chromium.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2009/12/02 00:46:06, r wrote:\n> I'm not in favor of these functions. They encourage n^2 algorithms by naive\n> programmers.  A better approach would involve a type that memoizes the indexing\n> or uses a doubled representation to allow efficient indexing by rune.  It's\n> quite hard to get the engineering right but it's worth it because everyone\n> benefits.\n\nWould you explain what exactly you mean by a function that memorizes the indexing? Now the first thing that I think of is keeping track of every single byte array sent, the index asked for, and the index returned, and if it is seen again, return the same value. I highly doubt this is what you meant.\n\nCould you give me a bit more of an idea of what you were thinking?",
			"disapproval": false,
			"date": "2009-12-02 00:57:55.658582",
			"approval": false
		},
		{
			"sender": "ibw@isaacwagner.me",
			"recipients": [
				"ibw@isaacwagner.me",
				"rsc@golang.org",
				"agl@chromium.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2009/12/02 00:57:55, Ibw wrote:\n> On 2009/12/02 00:46:06, r wrote:\n> > I'm not in favor of these functions. They encourage n^2 algorithms by naive\n> > programmers.  A better approach would involve a type that memoizes the\n> indexing\n> > or uses a doubled representation to allow efficient indexing by rune.  It's\n> > quite hard to get the engineering right but it's worth it because everyone\n> > benefits.\n> \n> Would you explain what exactly you mean by a function that memorizes the\n> indexing? Now the first thing that I think of is keeping track of every single\n> byte array sent, the index asked for, and the index returned, and if it is seen\n> again, return the same value. I highly doubt this is what you meant.\n> \n> Could you give me a bit more of an idea of what you were thinking?\n\nAnd perhaps would the changes you are suggesting be appropriate for an other CL down the road?",
			"disapproval": false,
			"date": "2009-12-02 01:16:25.908909",
			"approval": false
		}
	],
	"owner_email": "ibw@isaacwagner.me",
	"private": false,
	"base_url": "",
	"owner": "Ibw",
	"subject": "code review 163060: Added RuneIndex and RuneIndexInString functions to utf8...",
	"created": "2009-12-01 23:57:01.802307",
	"patchsets": [
		1,
		1003,
		1006,
		1011
	],
	"modified": "2009-12-02 09:08:17.431780",
	"closed": false,
	"issue": 163060
}