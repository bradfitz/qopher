{
	"description": "go/printer: make //line formatting idempotent\n\nFixes \"test.sh\" (long test) in src/cmd/gofmt.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"gri@golang.org"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello gri (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-11-02 19:52:00.716410",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-14 04:32:38.061367",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5307081/diff/7001/src/pkg/go/printer/printer.go\nFile src/pkg/go/printer/printer.go (right):\n\nhttp://codereview.appspot.com/5307081/diff/7001/src/pkg/go/printer/printer.go#newcode259\nsrc/pkg/go/printer/printer.go:259: func (p *printer) writeCommentPrefix(pos, next token.Position, c, prev *ast.Comment, isKeyword bool) {\nplease change to:\n\nprev, comment *ast.Comment\n\nand then the function comment also works.\n\nhttp://codereview.appspot.com/5307081/diff/7001/src/pkg/go/printer/printer.go#newcode345\nsrc/pkg/go/printer/printer.go:345: // turn off indent if we're about to print a line comment.\ns/line comment/line directive/\n\n(a line comment is any comment starting with // )\n\nhttp://codereview.appspot.com/5307081/diff/7001/src/pkg/go/printer/printer.go#newcode547\nsrc/pkg/go/printer/printer.go:547: defer func() {\nI don't undertand why this is needed. Does it not work w/o it?\n\np.pos is the estimated/actual AST (source) position, it shouldn't be affected by a line directive.",
			"disapproval": false,
			"date": "2011-11-14 21:34:23.752875",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5307081/diff/7001/src/pkg/go/printer/printer.go\nFile src/pkg/go/printer/printer.go (right):\n\nhttp://codereview.appspot.com/5307081/diff/7001/src/pkg/go/printer/printer.go#newcode259\nsrc/pkg/go/printer/printer.go:259: func (p *printer) writeCommentPrefix(pos, next token.Position, c, prev *ast.Comment, isKeyword bool) {\nOn 2011/11/14 21:34:23, gri wrote:\n> please change to:\n> \n> prev, comment *ast.Comment\n> \n> and then the function comment also works.\n\nDone.\n\nhttp://codereview.appspot.com/5307081/diff/7001/src/pkg/go/printer/printer.go#newcode345\nsrc/pkg/go/printer/printer.go:345: // turn off indent if we're about to print a line comment.\nOn 2011/11/14 21:34:23, gri wrote:\n> s/line comment/line directive/\n> \n> (a line comment is any comment starting with // )\n\nDone.\n\nhttp://codereview.appspot.com/5307081/diff/7001/src/pkg/go/printer/printer.go#newcode547\nsrc/pkg/go/printer/printer.go:547: defer func() {\nOn 2011/11/14 21:34:23, gri wrote:\n> I don't undertand why this is needed. Does it not work w/o it?\n> \n> p.pos is the estimated/actual AST (source) position, it shouldn't be affected by\n> a line directive.\n\nThe line directive was in the original input, so it affected\nwhat Filename and Line the code that follows it is marked with.\nThis code applies the line directive to the estimate too.\nOtherwise you can get incorrect spacing following the line\ndirective, which makes the line directive mostly worthless.\n\nIf you run test.sh in gofmt it should show the failure.",
			"disapproval": false,
			"date": "2011-11-16 21:30:58.273286",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5307081/diff/13001/src/pkg/go/printer/printer.go\nFile src/pkg/go/printer/printer.go (right):\n\nhttp://codereview.appspot.com/5307081/diff/13001/src/pkg/go/printer/printer.go#newcode541\nsrc/pkg/go/printer/printer.go:541: if strings.HasPrefix(text, linePrefix) {\nplease add a comment before the if statement explaining what is happening. That will make it much easier understanding this code 1/2 year down the road.",
			"disapproval": false,
			"date": "2011-11-16 21:44:49.225736",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=26ff89ca1a99 ***\n\ngo/printer: make //line formatting idempotent\n\nFixes \"test.sh\" (long test) in src/cmd/gofmt.\n\nR=gri\nCC=golang-dev\nhttp://codereview.appspot.com/5307081",
			"disapproval": false,
			"date": "2011-11-16 22:55:39.153311",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5307081/diff/14003/src/pkg/go/printer/printer.go\nFile src/pkg/go/printer/printer.go (right):\n\nhttp://codereview.appspot.com/5307081/diff/14003/src/pkg/go/printer/printer.go#newcode550\nsrc/pkg/go/printer/printer.go:550: // accordingly, after printing the directive.\nFYI: I think this is actually a bug in the current Position design: A line directive affects the line number reported by a token.Position, but really it shouldn't because the source line number (for purposes of reproduction of the source) is not really changing. If that issue were fixed, I think this code would not be needed (which is why I had a question in the first place about this). This is a TODO on my side.",
			"disapproval": false,
			"date": "2011-11-16 23:16:58.344741",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5307081: go/printer: make //line formatting idempotent",
	"created": "2011-11-02 19:51:48.192389",
	"patchsets": [
		1,
		2001,
		4001,
		7001,
		13001,
		14003
	],
	"modified": "2011-11-16 23:16:58.503936",
	"closed": true,
	"issue": 5307081
}