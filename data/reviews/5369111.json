{
	"description": "strconv: make Ftoa faster\n\nMake code amenable to escape analysis\nso that the decimal values do not escape.\n\nbenchmark                               old ns/op    new ns/op    delta\nstrconv_test.BenchmarkAtof64Decimal           229          233   +1.75%\nstrconv_test.BenchmarkAtof64Float             261          263   +0.77%\nstrconv_test.BenchmarkAtof64FloatExp         7760         7757   -0.04%\nstrconv_test.BenchmarkAtof64Big              3086         3053   -1.07%\nstrconv_test.BenchmarkFtoa64Decimal          6866         2629  -61.71%\nstrconv_test.BenchmarkFtoa64Float            7211         3064  -57.51%\nstrconv_test.BenchmarkFtoa64FloatExp        12587         8263  -34.35%\nstrconv_test.BenchmarkFtoa64Big              7058         2825  -59.97%\njson.BenchmarkCodeEncoder               357355200    276528200  -22.62%\njson.BenchmarkCodeMarshal               360735200    279646400  -22.48%\njson.BenchmarkCodeDecoder               731528600    709460600   -3.02%\njson.BenchmarkCodeUnmarshal             754774400    731051200   -3.14%\njson.BenchmarkCodeUnmarshalReuse        713379000    704218000   -1.28%\njson.BenchmarkSkipValue                  51594300     51682600   +0.17%\n\nbenchmark                                old MB/s     new MB/s  speedup\njson.BenchmarkCodeEncoder                    5.43         7.02    1.29x\njson.BenchmarkCodeMarshal                    5.38         6.94    1.29x\njson.BenchmarkCodeDecoder                    2.65         2.74    1.03x\njson.BenchmarkCodeUnmarshal                  2.57         2.65    1.03x\njson.BenchmarkCodeUnmarshalReuse             2.72         2.76    1.01x\njson.BenchmarkSkipValue                     38.61        38.55    1.00x",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-11-15 16:02:53.217473",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d29fa3306eaf ***\n\nstrconv: make Ftoa faster\n\nMake code amenable to escape analysis\nso that the decimal values do not escape.\n\nbenchmark                               old ns/op    new ns/op    delta\nstrconv_test.BenchmarkAtof64Decimal           229          233   +1.75%\nstrconv_test.BenchmarkAtof64Float             261          263   +0.77%\nstrconv_test.BenchmarkAtof64FloatExp         7760         7757   -0.04%\nstrconv_test.BenchmarkAtof64Big              3086         3053   -1.07%\nstrconv_test.BenchmarkFtoa64Decimal          6866         2629  -61.71%\nstrconv_test.BenchmarkFtoa64Float            7211         3064  -57.51%\nstrconv_test.BenchmarkFtoa64FloatExp        12587         8263  -34.35%\nstrconv_test.BenchmarkFtoa64Big              7058         2825  -59.97%\njson.BenchmarkCodeEncoder               357355200    276528200  -22.62%\njson.BenchmarkCodeMarshal               360735200    279646400  -22.48%\njson.BenchmarkCodeDecoder               731528600    709460600   -3.02%\njson.BenchmarkCodeUnmarshal             754774400    731051200   -3.14%\njson.BenchmarkCodeUnmarshalReuse        713379000    704218000   -1.28%\njson.BenchmarkSkipValue                  51594300     51682600   +0.17%\n\nbenchmark                                old MB/s     new MB/s  speedup\njson.BenchmarkCodeEncoder                    5.43         7.02    1.29x\njson.BenchmarkCodeMarshal                    5.38         6.94    1.29x\njson.BenchmarkCodeDecoder                    2.65         2.74    1.03x\njson.BenchmarkCodeUnmarshal                  2.57         2.65    1.03x\njson.BenchmarkCodeUnmarshalReuse             2.72         2.76    1.01x\njson.BenchmarkSkipValue                     38.61        38.55    1.00x\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5369111",
			"disapproval": false,
			"date": "2011-11-15 17:17:29.660168",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-11-15 16:10:47.678082",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5369111: strconv: make Ftoa faster",
	"created": "2011-11-14 20:36:17.844535",
	"patchsets": [
		1,
		5002,
		8001,
		6003,
		7003
	],
	"modified": "2011-11-15 17:20:39.527905",
	"closed": true,
	"issue": 5369111
}