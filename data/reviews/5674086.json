{
	"description": "sync: say that Cond.Wait can not return spuriously",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"rsc@golang.org",
		"remyoudompheng@gmail.com",
		"r@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "That seems like a lot to add.\nHow about just\n\n// Unlike in other systems, Wait cannot return unless awoken by\nBroadcast or Signal.\n\nThe doc comment shouldn't turn into a tutorial on how to use the primitives.\n",
			"disapproval": false,
			"date": "2012-02-17 07:31:23.526683",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 17, 2012 at 11:31 AM, <remyoudompheng@gmail.com> wrote:\n\n> On 2012/02/17 07:27:02, r wrote:\n>\n>> LGTM\n>> although it's becoming a huge comment for a supposedly simple-to-use\n>>\n> function.\n>\n> Maybe the comment could be left short and code moved to examples?\n>\n>\nSorry I fall behind somewhat, what are \"examples\"? I saw some talks about\n\"examples\" in the group, but I thought that they are provided in\npackage/function comments.\n\n>although it's becoming a huge comment for a supposedly simple-to-use\nfunction.\n\nThat's because it's supposedly simple-to-use extremely hard-to-use function\n:)\n",
			"disapproval": false,
			"date": "2012-02-17 07:39:32.379801",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 17/02/2012, at 6:31 PM, Russ Cox wrote:\n\n> That seems like a lot to add.\n> How about just\n> \n> // Unlike in other systems, Wait cannot return unless awoken by\n> Broadcast or Signal.\n> \n> The doc comment shouldn't turn into a tutorial on how to use the primitives.\n\nyes, that's better.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-17 07:55:55.450234",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 17, 2012 at 11:44 AM, <remyoudompheng@gmail.com> wrote:\n\n> On 2012/02/17 07:39:32, dvyukov wrote:\n>\n>> Sorry I fall behind somewhat, what are \"examples\"? I saw some talks\n>>\n> about\n>\n>> \"examples\" in the group, but I thought that they are provided in\n>> package/function comments.\n>>\n>\n>\n> It's a feature that was added to testing package and godoc:\n> http://tip.golang.org/pkg/**testing/ <http://tip.golang.org/pkg/testing/>\n>\n> You write a special func ExampleCond_Wait() containing the example code.\n\n\nOK, I will shorten the comment and  move both examples to Examples...\nhowever not it's much harder problem, it's easy to provide a short\nsenseless code snippet, but it's hard to provide a good sensible example...\nIt's difficult to come up with a good example for one-time Cond\nnotification where chan would not be a better solution... I think we don't\nwant to promote non-idiomatic Go in Examples, right?\n",
			"disapproval": false,
			"date": "2012-02-17 08:39:02.316606",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nalthough it's becoming a huge comment for a supposedly simple-to-use function.\n\nhttp://codereview.appspot.com/5674086/diff/2002/src/pkg/sync/cond.go\nFile src/pkg/sync/cond.go (right):\n\nhttp://codereview.appspot.com/5674086/diff/2002/src/pkg/sync/cond.go#newcode60\nsrc/pkg/sync/cond.go:60: // can not happen.  So in some cases the caller may Wait without a loop:\nA spurious return from Wait cannot happen (outside of an interrupt), so in\nsome cases the caller may Wait without looping:",
			"disapproval": false,
			"date": "2012-02-17 07:27:02.255321",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/17 07:39:32, dvyukov wrote:\n> Sorry I fall behind somewhat, what are \"examples\"? I saw some talks about\n> \"examples\" in the group, but I thought that they are provided in\n> package/function comments.\n> \n\nIt's a feature that was added to testing package and godoc:\nhttp://tip.golang.org/pkg/testing/\n\nYou write a special func ExampleCond_Wait() containing the example code.",
			"disapproval": false,
			"date": "2012-02-17 07:44:47.919412",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-17 07:15:13.992221",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=57956dacf262 ***\n\nsync: say that Cond.Wait can not return spuriously\n\nR=golang-dev, r, rsc, remyoudompheng, r\nCC=golang-dev\nhttp://codereview.appspot.com/5674086",
			"disapproval": false,
			"date": "2012-02-17 09:20:46.199921",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/17 07:27:02, r wrote:\n> LGTM\n> although it's becoming a huge comment for a supposedly simple-to-use function.\n\nMaybe the comment could be left short and code moved to examples?",
			"disapproval": false,
			"date": "2012-02-17 07:31:31.567957",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd be happy to forget about the example, at least for now.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-17 09:01:00.731425",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/17 09:01:00, r2 wrote:\n> I'd be happy to forget about the example, at least for now.\n\nDone. PTAL.",
			"disapproval": false,
			"date": "2012-02-17 09:10:48.406087",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-17 09:19:17.350430",
			"approval": true
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 5674086: sync: say that Cond.Wait can not return spuriously",
	"created": "2012-02-17 07:12:41.010966",
	"patchsets": [
		1,
		1001,
		2002,
		4002,
		6001,
		3003
	],
	"modified": "2012-02-17 09:20:47.503059",
	"closed": true,
	"issue": 5674086
}