{
	"description": "runtime: delete UpdateMemStats, replace with ReadMemStats(&stats).\n\nUnexports runtime.MemStats and rename MemStatsType to MemStats.\nThe new accessor requires passing a pointer to a user-allocated\nMemStats structure.\n\nFixes issue 2572.",
	"cc": [
		"bradfitz@google.com",
		"rsc@golang.org",
		"bradfitz@golang.org",
		"gustavo@niemeyer.net",
		"golang-dev@googlegroups.com",
		"remy@archlinux.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I like this.\n\nBut now it highlights that weird type name.  Could we\ns/MemStatsType/MemStats/ and rename the copying accessor?  (Remy, I'm just\nasking the group here, not giving review feedback...)\n\n\n\nOn Mon, Feb 6, 2012 at 7:00 AM, <remyoudompheng@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com,\n> remy@archlinux.org),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> runtime: delete UpdateMemStats, replace with MemStat(&stats).\n>\n> Fixes issue 2572.\n>\n> Please review this at http://codereview.appspot.com/**5616072/<http://codereview.appspot.com/5616072/>\n>\n> Affected files:\n>  M src/cmd/godoc/godoc.go\n>  M src/pkg/encoding/gob/timing_**test.go\n>  M src/pkg/expvar/expvar.go\n>  M src/pkg/fmt/fmt_test.go\n>  M src/pkg/net/rpc/server_test.go\n>  M src/pkg/reflect/all_test.go\n>  M src/pkg/runtime/gc_test.go\n>  M src/pkg/runtime/malloc.h\n>  M src/pkg/runtime/mem.go\n>  M src/pkg/runtime/mgc0.c\n>  M src/pkg/runtime/pprof/pprof.go\n>  M src/pkg/strconv/itoa_test.go\n>  M test/bench/garbage/tree2.go\n>  M test/chan/select2.go\n>  M test/closure.go\n>  M test/gc2.go\n>  M test/init1.go\n>  M test/malloc1.go\n>  M test/mallocrand.go\n>  M test/mallocrep.go\n>  M test/mallocrep1.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-06 15:56:21.683412",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I assumed Load (despite being a letter longer) was chosen because the\n> signature is different, with an out parameter rather than returning. \u00a0I like\n> that as a convention (Load*), even though it'll never really come up often\n> in Go.\n\nYou're absolutely right. In the cases I've used Get it was actually\nreturning the value (e.g. GetLogger). Load would be more sensible\nindeed.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2012-02-06 16:36:06.586141",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"bradfitz@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@google.com, rsc@golang.org, bradfitz@golang.org, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-06 17:59:36.270176",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 6, 2012 at 8:33 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n>\n>\n> On Mon, Feb 6, 2012 at 8:32 AM, Gustavo Niemeyer <gustavo@niemeyer.net>wrote:\n>\n>> > type MemStats\n>> >\n>> > func ReadMemStats(m *MemStats)\n>>\n>> Get would be my suggested color. I've often used that pattern for\n>> top-level functions because of the same conflict.\n>\n>\n> I assumed Load (despite being a letter longer) was chosen because the\n> signature is different, with an out parameter rather than returning.  I\n> like that as a convention (Load*), even though it'll never really come up\n> often in Go.\n>\n\ns/Load/Read/g.  I can't type and/or think, apparently.\n",
			"disapproval": false,
			"date": "2012-02-06 18:20:18.758456",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Sorry; Java poisoned the Get well.\n\nAgreed, that's a bad use case for it. Please ignore me.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2012-02-06 16:36:58.946489",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"bradfitz@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4696c572aaa6 ***\n\nruntime: delete UpdateMemStats, replace with ReadMemStats(&stats).\n\nUnexports runtime.MemStats and rename MemStatsType to MemStats.\nThe new accessor requires passing a pointer to a user-allocated\nMemStats structure.\n\nFixes issue 2572.\n\nR=bradfitz, rsc, bradfitz, gustavo\nCC=golang-dev, remy\nhttp://codereview.appspot.com/5616072",
			"disapproval": false,
			"date": "2012-02-06 18:16:39.786632",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Works for me.\n\nOn Mon, Feb 6, 2012 at 8:25 AM, <rsc@golang.org> wrote:\n\n> type MemStats\n>\n> func ReadMemStats(m *MemStats)\n>\n> ?\n>\n>\n> http://codereview.appspot.com/**5616072/<http://codereview.appspot.com/5616072/>\n>\n",
			"disapproval": false,
			"date": "2012-02-06 16:31:11.385844",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 6, 2012 at 11:32, Gustavo Niemeyer <gustavo@niemeyer.net> wrote:\n> Get would be my suggested color. I've often used that pattern for\n> top-level functions because of the same conflict.\n\nSorry; Java poisoned the Get well.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-06 16:35:25.671277",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"bradfitz@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@google.com, rsc@golang.org, bradfitz@golang.org, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-06 17:26:44.691392",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"bradfitz@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@google.com, rsc@golang.org, bradfitz@golang.org, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-06 17:16:08.761323",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"bradfitz@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is a definite improvement; thanks.\n\nhttp://codereview.appspot.com/5616072/diff/5/src/pkg/runtime/mem.go\nFile src/pkg/runtime/mem.go (right):\n\nhttp://codereview.appspot.com/5616072/diff/5/src/pkg/runtime/mem.go#newcode11\nsrc/pkg/runtime/mem.go:11: // Not locked during update; approximate.\n// General statistics can stay here.  It is just for these uint64s,\nlike the headings on the blocks below.  There does need to be a doc comment though.\n\n// A MemStats records statistics about the memory allocator.\ntype MemStats struct {\n    // General statistics.\n    Alloc uint64...\n\nhttp://codereview.appspot.com/5616072/diff/5/src/pkg/runtime/mem.go#newcode66\nsrc/pkg/runtime/mem.go:66: // ReadMemStats gathers memory statistics and outputs the result\nOn 2012/02/06 17:31:07, bradfitz wrote:\n> Maybe something shorter, like:\n> \n> // ReadMemStats populates m with memory statistics.\n> \n> But I'm not the wording expert.\n\nsgtm",
			"disapproval": false,
			"date": "2012-02-06 17:56:38.676031",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"bradfitz@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/06 16:25:30, rsc wrote:\n> type MemStats\n> \n> func ReadMemStats(m *MemStats)\n> \n> ?\n\nThis looks prettier indeed.",
			"disapproval": false,
			"date": "2012-02-06 17:27:31.363203",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-06 15:00:25.865089",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"bradfitz@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "type MemStats\n\nfunc ReadMemStats(m *MemStats)\n\n?",
			"disapproval": false,
			"date": "2012-02-06 16:25:30.197306",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"bradfitz@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5616072/diff/5/src/pkg/runtime/mem.go\nFile src/pkg/runtime/mem.go (right):\n\nhttp://codereview.appspot.com/5616072/diff/5/src/pkg/runtime/mem.go#newcode11\nsrc/pkg/runtime/mem.go:11: // Not locked during update; approximate.\nthis comment is old now and could go.\n\nalso, the \"// General statistics\" is in the wrong place.  this probably predates the godoc convention of putting comments above the type.\n\nA proper comment on this type would be nice.\n\nhttp://codereview.appspot.com/5616072/diff/5/src/pkg/runtime/mem.go#newcode66\nsrc/pkg/runtime/mem.go:66: // ReadMemStats gathers memory statistics and outputs the result\nMaybe something shorter, like:\n\n// ReadMemStats populates m with memory statistics.\n\nBut I'm not the wording expert.",
			"disapproval": false,
			"date": "2012-02-06 17:31:07.232593",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"bradfitz@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-06 18:00:59.089500",
			"approval": true
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> type MemStats\n>\n> func ReadMemStats(m *MemStats)\n\nGet would be my suggested color. I've often used that pattern for\ntop-level functions because of the same conflict.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2012-02-06 16:32:36.478204",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 6, 2012 at 8:32 AM, Gustavo Niemeyer <gustavo@niemeyer.net>wrote:\n\n> > type MemStats\n> >\n> > func ReadMemStats(m *MemStats)\n>\n> Get would be my suggested color. I've often used that pattern for\n> top-level functions because of the same conflict.\n\n\nI assumed Load (despite being a letter longer) was chosen because the\nsignature is different, with an out parameter rather than returning.  I\nlike that as a convention (Load*), even though it'll never really come up\noften in Go.\n",
			"disapproval": false,
			"date": "2012-02-06 16:33:53.667974",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 5616072: runtime: delete UpdateMemStats, replace with ReadMemSta...",
	"created": "2012-02-06 14:59:44.493782",
	"patchsets": [
		1,
		2001,
		3022,
		7003,
		5,
		2068,
		5023
	],
	"modified": "2012-02-06 19:27:30.069000",
	"closed": true,
	"issue": 5616072
}