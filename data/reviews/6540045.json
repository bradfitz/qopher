{
	"description": "vet: fix rangeloop.\n\nIn a range loop, the presence of a value implies the presence of a key.\nHowever, the presence of a value as an *ast.Ident does not imply that\nthe key is also an *ast.Ident, thus leading to a panic any time the\ntwo argument form is used where the key is not an identifier.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Also, how the heck do you run this to check against // ERROR lines?\r\n\"go run ../../../test/run.go -v -summary -- ./rangeloop.go\" does not\r\ndo anything useful.\r\n",
			"disapproval": false,
			"date": "2012-09-19 13:05:54.603310",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Sep 19, 2012 at 6:05 AM, David Symonds <dsymonds@golang.org> wrote:\r\n> Also, how the heck do you run this to check against // ERROR lines?\r\n> \"go run ../../../test/run.go -v -summary -- ./rangeloop.go\" does not\r\n> do anything useful.\r\n\r\ncd src/cmd/vet\r\nmake test\r\n",
			"disapproval": false,
			"date": "2012-09-19 18:07:53.539970",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks Dave.",
			"disapproval": false,
			"date": "2012-09-19 17:04:49.567070",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-19 13:04:25.101370",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=357285dcdff5 ***\n\nvet: fix rangeloop.\n\nIn a range loop, the presence of a value implies the presence of a key.\nHowever, the presence of a value as an *ast.Ident does not imply that\nthe key is also an *ast.Ident, thus leading to a panic any time the\ntwo argument form is used where the key is not an identifier.\n\nR=golang-dev, adg, r\nCC=golang-dev\nhttp://codereview.appspot.com/6540045",
			"disapproval": false,
			"date": "2012-09-19 22:12:54.211130",
			"approval": false
		}
	],
	"owner_email": "dsymonds@golang.org",
	"private": false,
	"base_url": "",
	"owner": "dsymonds",
	"subject": "code review 6540045: vet: fix rangeloop.",
	"created": "2012-09-19 13:03:58.441910",
	"patchsets": [
		1,
		2001,
		4001,
		6002
	],
	"modified": "2012-09-19 22:12:57.209620",
	"closed": true,
	"issue": 6540045
}