{
	"description": "exp/locale/search: API proposal for locale-sensitive string search.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org",
		"r@golang.org"
	],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2013-01-11 20:40:38.446940",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "looks reasonable.\n\nwhy not write an illustrative example now, even if it doesn't run yet?\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go\nFile src/pkg/exp/locale/search/search.go (right):\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode19\nsrc/pkg/exp/locale/search/search.go:19: IgnoreDiacritics                    // Ignore diacritics marks. (\"o\" == \"\u00f6\").\ns/ marks/\nalso i'd swap the order of the two o's: \"\u00f6\" == \"o\"\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode27\nsrc/pkg/exp/locale/search/search.go:27: // Search provides locale-sensitve search functionality.\ns/sensitve/sensitive/\n\nit's a Searcher, not a Search. i slightly prefer you rename the struct Search, since it's not an interface.\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode37\nsrc/pkg/exp/locale/search/search.go:37: // NewFromTable returns a Searcher given a Weigher.\nif it's from a weigher, why is it \"FromTable\"?\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode52\nsrc/pkg/exp/locale/search/search.go:52: // Match checks whether a an b are equivalent.\ns/an/and/\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode57\nsrc/pkg/exp/locale/search/search.go:57: // MatchString checks whether a an b are equivalent.\nditto\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode131\nsrc/pkg/exp/locale/search/search.go:131: // pattern, it will be more efficient to use Pattern, rather than the direct\ns/, than/\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode144\nsrc/pkg/exp/locale/search/search.go:144: func (s *Searcher) CompileString(string) *Pattern {\ns/string/b &/\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode148\nsrc/pkg/exp/locale/search/search.go:148: // Match checks whether b is equivalent to p.\nis 'equivalent' a term of art here? why not 'match'?",
			"disapproval": false,
			"date": "2013-02-21 00:17:09.240410",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-21 17:17:30.743770",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go\nFile src/pkg/exp/locale/search/search.go (right):\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode19\nsrc/pkg/exp/locale/search/search.go:19: IgnoreDiacritics                    // Ignore diacritics marks. (\"o\" == \"\u00f6\").\nOn 2013/02/21 00:17:09, r wrote:\n> s/ marks/\n> also i'd swap the order of the two o's: \"\u00f6\" == \"o\"\n\nDone.\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode27\nsrc/pkg/exp/locale/search/search.go:27: // Search provides locale-sensitve search functionality.\nOn 2013/02/21 00:17:09, r wrote:\n> s/sensitve/sensitive/\n> \n> it's a Searcher, not a Search. i slightly prefer you rename the struct Search,\n> since it's not an interface.\n\nDone.\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode37\nsrc/pkg/exp/locale/search/search.go:37: // NewFromTable returns a Searcher given a Weigher.\nOn 2013/02/21 00:17:09, r wrote:\n> if it's from a weigher, why is it \"FromTable\"?\n\nDone.\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode52\nsrc/pkg/exp/locale/search/search.go:52: // Match checks whether a an b are equivalent.\nOn 2013/02/21 00:17:09, r wrote:\n> s/an/and/\n\nDone.\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode57\nsrc/pkg/exp/locale/search/search.go:57: // MatchString checks whether a an b are equivalent.\nOn 2013/02/21 00:17:09, r wrote:\n> ditto\n\nDone.\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode144\nsrc/pkg/exp/locale/search/search.go:144: func (s *Searcher) CompileString(string) *Pattern {\nOn 2013/02/21 00:17:09, r wrote:\n> s/string/b &/\n\nDone.\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode148\nsrc/pkg/exp/locale/search/search.go:148: // Match checks whether b is equivalent to p.\nOn 2013/02/21 00:17:09, r wrote:\n> is 'equivalent' a term of art here? why not 'match'?\n\nDone.\n\nhttps://codereview.appspot.com/7096045/diff/5001/src/pkg/exp/locale/search/search.go#newcode148\nsrc/pkg/exp/locale/search/search.go:148: // Match checks whether b is equivalent to p.\nOn 2013/02/21 00:17:09, r wrote:\n> is 'equivalent' a term of art here? why not 'match'?\n\nDone.",
			"disapproval": false,
			"date": "2013-02-21 17:18:16.921340",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM for now but i think there may be another approach worth trying.\nthis is exp, so check it in for now and we'll revisit.",
			"disapproval": false,
			"date": "2013-02-22 23:58:28.636450",
			"approval": true
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 7096045: exp/locale/search: API proposal for locale-sensitive st...",
	"created": "2013-01-11 20:40:02.305950",
	"patchsets": [
		1,
		1001,
		5001,
		10001
	],
	"modified": "2013-02-22 23:58:28.636450",
	"closed": false,
	"issue": 7096045
}