{
	"description": "lib9: handle empty TMPDIR more gracefully.\n\nBefore, an empty TMPDIR would lead to:\ncannot create <nil>/go.o: No such file or directory",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"dave@cheney.net",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-04-05 06:01:41.832110",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "How this happens in real life:\n\nBuild up an Env for os/exec.Cmd to run go build with:\n\ncmd.Env = []string{\"TMPDIR=\" + os.Getenv(\"TMPDIR\")}\n\nYou expect this to work, because you set TMPDIR in ~/.bash_profile, but then you run the same command in screen TMPDIR doesn't get set for some reason, causing you to set an empty TMPDIR.\n\nThis would have been better:\n\ncmd.Env = []string{\"TMPDIR=\" + os.TempDir()}\n\nbut I thought I'd try to save one other person from this confusion.",
			"disapproval": false,
			"date": "2013-04-05 06:04:27.581980",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The CL description doesn't look right.  If tmpdir is the empty string, why would it print <nil> in the error message?",
			"disapproval": false,
			"date": "2013-04-05 06:10:14.667350",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/04/05 06:10:14, iant wrote:\n> The CL description doesn't look right.  If tmpdir is the empty string, why would\n> it print <nil> in the error message?\n\nTry it for yourself:\n\n$ TMPDIR= go build a.go\n# command-line-arguments\ncannot create <nil>/go.o: No such file or directory\n\nld does:\n\np = smprint(\"%s/go.o\", tmpdir);\n\ntmpdir comes from mktempdir, which does:\n\np = smprint(\"%s/go-link-XXXXXX\", tmp);\n\ntmp is \"\" so p is /go-link-something. Then mkdtemp fails causing mktempdir to return nil.\n\nMaybe the better fix would be for mktempdir to check errno after calling mkdtemp.\n\nNot quite sure what it should do with the error though? Suggestions welcome.",
			"disapproval": false,
			"date": "2013-04-05 06:24:46.125420",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks for the explanation.",
			"disapproval": false,
			"date": "2013-04-05 06:33:34.174040",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I cannot reproduce the original failure on either linux or darwin.",
			"disapproval": false,
			"date": "2013-04-07 08:46:12.647590",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "$ cat k.go \npackage main\nimport \"C\"\nfunc main() {\n}\n\n$ TMPDIR= go build k.go\n# command-line-arguments\ncannot create <nil>/go.o: No such file or directory",
			"disapproval": false,
			"date": "2013-04-07 08:54:58.619310",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> This would have been better:\n> \n> cmd.Env = []string{\"TMPDIR=\" + os.TempDir()}\n> \n> but I thought I'd try to save one other person from this confusion.\n\nCould you propose a fix for this please.",
			"disapproval": false,
			"date": "2013-04-07 09:45:57.121330",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/04/07 09:45:57, dfc wrote:\n> > This would have been better:\n> > cmd.Env = []string{\"TMPDIR=\" + os.TempDir()}\n> > but I thought I'd try to save one other person from this confusion.\n> Could you propose a fix for this please.\n\nMmm... I don't quite understand the question.\n\nThe code I wrote in my program was:\n\ncmd.Env = []string{\"TMPDIR=\" + os.Getenv(\"TMPDIR\")}\n\nThis is generally a problem of the os.Getenv API: you can't tell the difference between a variable not being set and being set and empty.\n\nIn this specific case, better code for me to write would have been:\n\ncmd.Env = []string{\"TMPDIR=\" + os.TempDir()}\n\nAnyway, by accidentally setting TMPDIR to an empty value I got the strange <nil>/go.o error, which was quite confusing. This CL is about doing something better than printing a strange error when TMPDIR is empty.\n\nRegards\n\nAlbert",
			"disapproval": false,
			"date": "2013-04-07 09:53:35.883840",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Oh, my mistake, I thought this was inside os/exec. \r\n\r\nOn 07/04/2013, at 19:53, fullung@gmail.com wrote:\r\n\r\n> On 2013/04/07 09:45:57, dfc wrote:\r\n>> > This would have been better:\r\n>> > cmd.Env = []string{\"TMPDIR=\" + os.TempDir()}\r\n>> > but I thought I'd try to save one other person from this confusion.\r\n>> Could you propose a fix for this please.\r\n> \r\n> Mmm... I don't quite understand the question.\r\n> \r\n> The code I wrote in my program was:\r\n> \r\n> cmd.Env = []string{\"TMPDIR=\" + os.Getenv(\"TMPDIR\")}\r\n> \r\n> This is generally a problem of the os.Getenv API: you can't tell the\r\n> difference between a variable not being set and being set and empty.\r\n> \r\n> In this specific case, better code for me to write would have been:\r\n> \r\n> cmd.Env = []string{\"TMPDIR=\" + os.TempDir()}\r\n> \r\n> Anyway, by accidentally setting TMPDIR to an empty value I got the\r\n> strange <nil>/go.o error, which was quite confusing. This CL is about\r\n> doing something better than printing a strange error when TMPDIR is\r\n> empty.\r\n> \r\n> Regards\r\n> \r\n> Albert\r\n> \r\n> https://codereview.appspot.com/8355045/\r\n",
			"disapproval": false,
			"date": "2013-04-07 10:00:04.938810",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\nOn Thu, Apr 4, 2013 at 11:04 PM, <fullung@gmail.com> wrote:\r\n\r\n> How this happens in real life:\r\n>\r\n> Build up an Env for os/exec.Cmd to run go build with:\r\n>\r\n> cmd.Env = []string{\"TMPDIR=\" + os.Getenv(\"TMPDIR\")}\r\n>\r\n> You expect this to work, because you set TMPDIR in ~/.bash_profile, but\r\n> then you run the same command in screen TMPDIR doesn't get set for some\r\n> reason, causing you to set an empty TMPDIR.\r\n>\r\n> This would have been better:\r\n>\r\n> cmd.Env = []string{\"TMPDIR=\" + os.TempDir()}\r\n>\r\n> but I thought I'd try to save one other person from this confusion.\r\n>\r\n> https://codereview.appspot.**com/8355045/<https://codereview.appspot.com/8355045/>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-07 16:00:47.499700",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=cce4c4f5fa17 ***\n\nlib9: handle empty TMPDIR more gracefully.\n\nBefore, an empty TMPDIR would lead to:\ncannot create <nil>/go.o: No such file or directory\n\nR=golang-dev, iant, dave, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/8355045\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2013-04-07 18:16:22.965070",
			"approval": false
		}
	],
	"owner_email": "fullung@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "albert.strasheim",
	"subject": "lib9: handle empty TMPDIR more gracefully.",
	"created": "2013-04-05 06:00:31.919930",
	"patchsets": [
		1,
		1001,
		3001
	],
	"modified": "2013-04-07 18:24:54.368360",
	"closed": true,
	"issue": 8355045
}