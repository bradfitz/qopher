{
	"description": "cmd/gc: add space to export data to match linker expectations\n\nThe linker split PKGDEF into (prefix, name, def) pairs,\nand defines def to begin after a space following the identifier.\nThis is totally wrong for the following export data:\n\n        func \"\".FunctionName()\n        var SomethingCompletelyUnrelated int\n\nThe linker would parse\n    name=`\"\".FunctionName()\\n\\tvar`\n    def=`SomethingCompletelyUnrelated int`\nsince there is no space after FunctionName.",
	"cc": [
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-09 20:21:25.696760",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-01-08 00:51:21.595850",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-09 20:33:14.019040",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks.\n\nhttps://codereview.appspot.com/7068051/diff/13002/src/cmd/gc/export.c\nFile src/cmd/gc/export.c (right):\n\nhttps://codereview.appspot.com/7068051/diff/13002/src/cmd/gc/export.c#newcode222\nsrc/cmd/gc/export.c:222: typecheckinl(n);\n// NOTE: The space after %#S here is necessary for ld's export data parser.",
			"disapproval": false,
			"date": "2013-01-09 20:44:15.700710",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I honestly think the correct change is to modify export data formatting to include a space after the identifier, but it would again-again change the object file format.\n\nThe whole thing must have been wrong for ages. The export data in Go 1 is not significantly different from now and the linker code in Go 1 seems identical.",
			"disapproval": false,
			"date": "2013-01-08 00:54:01.109220",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "could this be tested? (I gave it a try, but failed).\r\n",
			"disapproval": false,
			"date": "2013-01-09 11:59:13.998930",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-09 20:18:02.336390",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry, didn't mean to re-mail the same patch.",
			"disapproval": false,
			"date": "2013-01-09 20:33:03.528170",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM modulo the 4 2012s.\n\nhttps://codereview.appspot.com/7068051/diff/13002/test/fixedbugs/bug472.dir/p1.go\nFile test/fixedbugs/bug472.dir/p1.go (right):\n\nhttps://codereview.appspot.com/7068051/diff/13002/test/fixedbugs/bug472.dir/p1.go#newcode1\ntest/fixedbugs/bug472.dir/p1.go:1: // Copyright 2012 The Go Authors.  All rights reserved.\n2013\n\nhttps://codereview.appspot.com/7068051/diff/13002/test/fixedbugs/bug472.dir/p2.go\nFile test/fixedbugs/bug472.dir/p2.go (right):\n\nhttps://codereview.appspot.com/7068051/diff/13002/test/fixedbugs/bug472.dir/p2.go#newcode1\ntest/fixedbugs/bug472.dir/p2.go:1: // Copyright 2012 The Go Authors.  All rights reserved.\nditto",
			"disapproval": false,
			"date": "2013-01-09 20:45:04.321820",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/1/9 minux <minux.ma@gmail.com> wrote:\r\n> could this be tested? (I gave it a try, but failed).\r\n\r\nThe problem happened when trying go test std with gcflags \"-l -l -l -l -l\".\r\nI managed to find a reproducing case that doesn't need any special flags.\r\n",
			"disapproval": false,
			"date": "2013-01-09 19:14:52.510220",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think that adding a space there is fine. I expect the go/types\r\nreader will not care.\r\nThe object file format includes the hg revision in the header, and if\r\nit doesn't match\r\nthe compilers and linkers refuse to read it, so we can change the\r\nobject file format\r\nessentially at will.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-09 19:56:30.011560",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=6c39cb75b6ee ***\n\ncmd/gc: add space to export data to match linker expectations\n\nThe linker split PKGDEF into (prefix, name, def) pairs,\nand defines def to begin after a space following the identifier.\nThis is totally wrong for the following export data:\n\n        func \"\".FunctionName()\n        var SomethingCompletelyUnrelated int\n\nThe linker would parse\n    name=`\"\".FunctionName()\\n\\tvar`\n    def=`SomethingCompletelyUnrelated int`\nsince there is no space after FunctionName.\n\nR=minux.ma, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7068051",
			"disapproval": false,
			"date": "2013-01-09 21:03:03.375580",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-09 19:15:53.109280",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/09 19:14:52, remyoudompheng wrote:\n> On 2013/1/9 minux <mailto:minux.ma@gmail.com> wrote:\n> > could this be tested? (I gave it a try, but failed).\n> \n> The problem happened when trying go test std with gcflags \"-l -l -l -l -l\".\n> I managed to find a reproducing case that doesn't need any special flags.\n\n$ go run run.go -- fixedbugs/bug472.go\nrundir               fixedbugs/bug472.go : exit status 1\n6l: conflicting definitions for @\"runtime\".GC()\n\tfunc\n:\tfunc @\"runtime\".GC()\n\tfunc @\"runtime\".Version() (? string) { return \"devel +84a2c61092a9 Wed Jan 02 14:40:27 2013 -0800\" }\np2.6:\tfunc @\"runtime\".GC()\n\tfunc @\"runtime\".GOROOT() (? string)\n6l: conflicting definitions for @\"runtime\".Gosched()\n\tfunc\n:\tfunc @\"runtime\".Gosched()\n\tfunc @\"runtime\".GOROOT() (? string)\np2.6:\tfunc @\"runtime\".Gosched()\n\tfunc @\"runtime\".Version() (? string) { return \"devel +84a2c61092a9 Wed Jan 02 14:40:27 2013 -0800\" }\ngo tool 6l: exit status 1\n\nexit status 1",
			"disapproval": false,
			"date": "2013-01-09 19:18:12.674300",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7068051/diff/13002/src/cmd/gc/export.c\nFile src/cmd/gc/export.c (right):\n\nhttps://codereview.appspot.com/7068051/diff/13002/src/cmd/gc/export.c#newcode222\nsrc/cmd/gc/export.c:222: typecheckinl(n);\nOn 2013/01/09 20:44:15, rsc wrote:\n> // NOTE: The space after %#S here is necessary for ld's export data parser.\n\nDone.\n\nhttps://codereview.appspot.com/7068051/diff/13002/test/fixedbugs/bug472.dir/p1.go\nFile test/fixedbugs/bug472.dir/p1.go (right):\n\nhttps://codereview.appspot.com/7068051/diff/13002/test/fixedbugs/bug472.dir/p1.go#newcode1\ntest/fixedbugs/bug472.dir/p1.go:1: // Copyright 2012 The Go Authors.  All rights reserved.\nOn 2013/01/09 20:45:04, minux wrote:\n> 2013\n\nDone.\n\nhttps://codereview.appspot.com/7068051/diff/13002/test/fixedbugs/bug472.dir/p2.go\nFile test/fixedbugs/bug472.dir/p2.go (right):\n\nhttps://codereview.appspot.com/7068051/diff/13002/test/fixedbugs/bug472.dir/p2.go#newcode1\ntest/fixedbugs/bug472.dir/p2.go:1: // Copyright 2012 The Go Authors.  All rights reserved.\nOn 2013/01/09 20:45:04, minux wrote:\n> ditto\n\nDone.",
			"disapproval": false,
			"date": "2013-01-09 21:00:57.056950",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 7068051: cmd/gc: add space to export data to match linker expect...",
	"created": "2013-01-08 00:50:42.257980",
	"patchsets": [
		1,
		1001,
		4001,
		11001,
		10003,
		13002,
		12016,
		10005,
		13003
	],
	"modified": "2013-01-09 21:03:04.804690",
	"closed": true,
	"issue": 7068051
}