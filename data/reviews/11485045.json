{
	"description": "cmd/ld: be specific about EABI floating point ABI\n\nAt Canonical we have a number of post build steps that analyse the final binaries. We had a bug in our tool that got confused about the floating point ABI, which we've fixed, but at the same time, it doesn't hurt for the linker to be more specific.\n\nUpdate issue 5640\n\nBe specific about EABI floating point ABI.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org",
		"minux.ma@gmail.com"
	],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-07-19 02:18:53.854740",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "An alternative solution would be to leave ld/elf.c as is, and update\r\nhdr.flags to a specific value based on goarm in 5l just after the call\r\nto elfinit().\r\n\r\nOn Fri, Jul 19, 2013 at 12:18 PM,  <dave@cheney.net> wrote:\r\n> Reviewers: rsc, minux,\r\n>\r\n> Message:\r\n> Hello rsc@golang.org, minux.ma@gmail.com (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> cmd/ld: be specific about EABI floating point ABI\r\n>\r\n> At Canonical we have a number of post build steps that analyse the final\r\n> binaries. We had a bug in our tool that got confused about the floating\r\n> point ABI, which we've fixed, but at the same time, it doesn't hurt for\r\n> the linker to be more specific.\r\n>\r\n> Update issue 5640\r\n>\r\n> Be specific about EABI floating point ABI.\r\n>\r\n> Please review this at https://codereview.appspot.com/11485045/\r\n>\r\n> Affected files:\r\n>   M src/cmd/ld/elf.c\r\n>\r\n>\r\n> Index: src/cmd/ld/elf.c\r\n> ===================================================================\r\n> --- a/src/cmd/ld/elf.c\r\n> +++ b/src/cmd/ld/elf.c\r\n> @@ -57,7 +57,11 @@\r\n>         case '5':\r\n>                 // we only use EABI on linux/arm\r\n>                 if(HEADTYPE == Hlinux)\r\n> -                       hdr.flags = 0x5000002; // has entry point, Version5\r\n> EABI\r\n> +#ifdef __ARM_PCS_VFP\r\n> +                       hdr.flags = 0x5000402; // has entry point, Version5\r\n> EABI, hard-float ABI\r\n> +#else\r\n> +                       hdr.flags = 0x5000202; // has entry point, Version5\r\n> EABI, soft-float ABI\r\n> +#endif\r\n>                 // fallthrough\r\n>         default:\r\n>                 hdr.phoff = ELF32HDRSIZE;       /* Must be be ELF32HDRSIZE:\r\n> first PHdr must follow ELF header */\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-19 02:20:24.096440",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It seems wrong for the binary that 5l generates to depend on a #define on\r\nthe host system. 5l is supposed to work for generating ARM binaries on any\r\nsystem and produce the same binary each time. What is the real criteria for\r\ndeciding between the two values?\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-07-19 02:38:32.202350",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "For 5l, I think it is the value of goarm. For $DAYJOB we don't build\r\non anything but armhf, but I will redo the patch to update the flags\r\nbased on goarm after the call to elfinit().\r\n\r\nOn Fri, Jul 19, 2013 at 12:38 PM, Russ Cox <rsc@golang.org> wrote:\r\n> It seems wrong for the binary that 5l generates to depend on a #define on\r\n> the host system. 5l is supposed to work for generating ARM binaries on any\r\n> system and produce the same binary each time. What is the real criteria for\r\n> deciding between the two values?\r\n>\r\n> Russ\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-19 02:41:55.353010",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can you also dig up the exact meaning of the two bits (0x400 and 0x200)? I\r\nam particularly worried about 0x200. If it means a specific software\r\nfloating point ABI, I am sure we don't implement it. What's there we more\r\nor less made up.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-07-19 02:50:25.315580",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://infocenter.arm.com/help/topic/com.arm.doc.ihi0044d/IHI0044D_aaelf.pdf,\r\npage 16, table 4-2\r\n\r\nOn Fri, Jul 19, 2013 at 12:50 PM, Russ Cox <rsc@golang.org> wrote:\r\n> Can you also dig up the exact meaning of the two bits (0x400 and 0x200)? I\r\n> am particularly worried about 0x200. If it means a specific software\r\n> floating point ABI, I am sure we don't implement it. What's there we more or\r\n> less made up.\r\n>\r\n> Russ\r\n",
			"disapproval": false,
			"date": "2013-07-19 02:57:00.146150",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "in a sense, both constants do not match our generated code exactly.\r\n\r\nthose constants are mainly about whether the program pass fp argument\r\nin normal arm register or vfp register. however, we always pass arguments\r\non stack.\r\n\r\ni think the annotation is only relevant for cgo programs, so we could\r\ndetermine\r\nthat flag from the elf header of shared library (libc.so, specifically) we\r\nare using.\r\n",
			"disapproval": false,
			"date": "2013-07-19 08:20:28.609550",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 11485045: cmd/ld: be specific about EABI floating point ABI",
	"created": "2013-07-19 02:05:19.646050",
	"patchsets": [
		1,
		3001,
		6001,
		11001
	],
	"modified": "2013-07-19 08:20:28.650170",
	"closed": false,
	"issue": 11485045
}