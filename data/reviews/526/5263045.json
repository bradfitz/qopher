{
	"description": "crypto/tls: fix broken looping code in windows root CA fetcher",
	"cc": [
		"alex.brainman@gmail.com",
		"hectorchu@gmail.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nI've not removed return in initDefaultRoots().\n\nAlso, I got to play with the new multiple assignment ordering rules in here. :)",
			"disapproval": false,
			"date": "2011-10-14 12:19:00.257269",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5263045/diff/1001/src/pkg/crypto/tls/root_windows.go\nFile src/pkg/crypto/tls/root_windows.go (right):\n\nhttp://codereview.appspot.com/5263045/diff/1001/src/pkg/crypto/tls/root_windows.go#newcode22\nsrc/pkg/crypto/tls/root_windows.go:22: prev, cur = cur, syscall.CertEnumCertificatesInStore(store, prev)\nThis loop is not correct.  As I see it CertEnumCertificatesInStore() will be called twice at the beginning with prev == nil.  In fact this problem leads to every certificate being parsed twice.\n\nhttp://codereview.appspot.com/5263045/diff/1001/src/pkg/crypto/tls/root_windows.go#newcode45\nsrc/pkg/crypto/tls/root_windows.go:45: // TODO(brainman): To be fixed\nSince you are fixing this infinite loop, remove this return.",
			"disapproval": false,
			"date": "2011-10-14 12:50:59.398014",
			"approval": false
		},
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nI've also changed the parsing code to take a copy of the buffer we're provided by Windows.\n\nx509.ParseCertificate calls asn1.Unmarshal which slices the passed-in byte slice for things such as asn1.RawContent (raw DER data that needs to be kept around, things like the Raw field in x509.Certificate)\n\nNot sure if anything in x509.CertPool actually *reads* those fields, but if they did, the underlying memory would've been freed by iterating to the next CertContext by calling CertOpenSystemStore().\n\nhttp://codereview.appspot.com/5263045/diff/1001/src/pkg/crypto/tls/root_windows.go\nFile src/pkg/crypto/tls/root_windows.go (right):\n\nhttp://codereview.appspot.com/5263045/diff/1001/src/pkg/crypto/tls/root_windows.go#newcode22\nsrc/pkg/crypto/tls/root_windows.go:22: prev, cur = cur, syscall.CertEnumCertificatesInStore(store, prev)\nOn 2011/10/14 12:50:59, hector wrote:\n> This loop is not correct.  As I see it CertEnumCertificatesInStore() will be\n> called twice at the beginning with prev == nil.  In fact this problem leads to\n> every certificate being parsed twice.\n\nNot sure I follow. The code should be equivalent to what was there before (except that it doesn't loop indefinitely when it encounters a certificate it can't parse).\n\nGood catch. I consider my attempt at using multiple assignment correctly a failure.\n\nOh well.\n\nhttp://codereview.appspot.com/5263045/diff/1001/src/pkg/crypto/tls/root_windows.go#newcode45\nsrc/pkg/crypto/tls/root_windows.go:45: // TODO(brainman): To be fixed\nOn 2011/10/14 12:50:59, hector wrote:\n> Since you are fixing this infinite loop, remove this return.\n\nDone.",
			"disapproval": false,
			"date": "2011-10-14 13:41:03.885978",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-10-14 16:23:29.133721",
			"approval": true
		},
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/14 13:41:03, mkrautz wrote:\n> Not sure I follow. The code should be equivalent to what was there before\n> (except that it doesn't loop indefinitely when it encounters a certificate it\n> can't parse).\n\nIgnore this. This was my previous comment to this, before I figured out I had screwed up.",
			"disapproval": false,
			"date": "2011-10-14 13:42:57.637632",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5263045/diff/5001/src/pkg/crypto/tls/root_windows.go\nFile src/pkg/crypto/tls/root_windows.go (right):\n\nhttp://codereview.appspot.com/5263045/diff/5001/src/pkg/crypto/tls/root_windows.go#newcode22\nsrc/pkg/crypto/tls/root_windows.go:22: prev = cur\nGet rid of prev please. And rename cur to cert.\n\nhttp://codereview.appspot.com/5263045/diff/5001/src/pkg/crypto/tls/root_windows.go#newcode38\nsrc/pkg/crypto/tls/root_windows.go:38: if err != nil {\nReverse the polarity of this test, so we don't need continue.\nDo it like this: if cert, err := ...; err == nil {",
			"disapproval": false,
			"date": "2011-10-14 14:27:57.737271",
			"approval": false
		},
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello alex.brainman@gmail.com, hectorchu@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-14 14:43:42.008776",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-10-14 15:09:12.643861",
			"approval": true
		},
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/14 15:09:12, hector wrote:\n> LGTM\n\nThanks for the suggestions. It's much nicer now.",
			"disapproval": false,
			"date": "2011-10-14 15:27:40.876575",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"krautz@gmail.com",
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=65ea102b8d02 ***\n\ncrypto/tls: fix broken looping code in windows root CA fetcher\n\nR=alex.brainman, hectorchu, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5263045\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-10-14 16:27:21.083596",
			"approval": false
		}
	],
	"owner_email": "krautz@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mkrautz",
	"subject": "code review 5263045: crypto/tls: fix broken looping code in windows root CA ...",
	"created": "2011-10-14 12:14:23.978892",
	"patchsets": [
		1,
		1001,
		5001,
		10001
	],
	"modified": "2011-10-15 12:39:37.384149",
	"closed": true,
	"issue": 5263045
}