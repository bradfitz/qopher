{
	"description": "doc: general update of gccgo_install\n\nFixes issue 3325.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"minux.ma@gmail.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-20 18:24:09.671361",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nthat's a lot of docs.\n\nhttp://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html\nFile doc/gccgo_install.html (right):\n\nhttp://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html#newcode50\ndoc/gccgo_install.html:50: convenience, a known stable version of the Go support is available in\nknown-stable?\n\nhttp://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html#newcode86\ndoc/gccgo_install.html:86: On x86 GNU/Linux systems the gccgo compiler is able to\ngccgo was previously in <code>.\n\nlikewise with gold?",
			"disapproval": false,
			"date": "2012-03-20 18:36:10.173039",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html\nFile doc/gccgo_install.html (right):\n\nhttp://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html#newcode18\ndoc/gccgo_install.html:18: Note that gccgo is not the 6g compiler; see\ns/6g/gc/\nto be consistent with the other documents.\n\nhttp://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html#newcode117\ndoc/gccgo_install.html:117: option <code>--with-ld=GOLD_BINARY</code>.\nslant the word GOLD_BINARY or use something like /path/to/your/gold/binary\nif the user should replace the word with the actual gold binary?",
			"disapproval": false,
			"date": "2012-03-20 18:36:40.913600",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the comments.  Updated.\n\nhttp://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html\nFile doc/gccgo_install.html (right):\n\nhttp://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html#newcode18\ndoc/gccgo_install.html:18: Note that gccgo is not the 6g compiler; see\nOn 2012/03/20 18:36:41, minux wrote:\n> s/6g/gc/\n> to be consistent with the other documents.\n\nDone.\n\nhttp://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html#newcode50\ndoc/gccgo_install.html:50: convenience, a known stable version of the Go support is available in\nOn 2012/03/20 18:36:10, bradfitz wrote:\n> known-stable?\n\nI just changed it to stable.\n\nhttp://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html#newcode86\ndoc/gccgo_install.html:86: On x86 GNU/Linux systems the gccgo compiler is able to\nOn 2012/03/20 18:36:10, bradfitz wrote:\n> gccgo was previously in <code>.\n> \n> likewise with gold?\n\nI dropped all the <code> annotations for gccgo and GCC and gold, I don't think they helped.\n\nhttp://codereview.appspot.com/5858043/diff/1/doc/gccgo_install.html#newcode117\ndoc/gccgo_install.html:117: option <code>--with-ld=GOLD_BINARY</code>.\nOn 2012/03/20 18:36:41, minux wrote:\n> slant the word GOLD_BINARY or use something like /path/to/your/gold/binary\n> if the user should replace the word with the actual gold binary?\n\nDone.",
			"disapproval": false,
			"date": "2012-03-20 18:53:29.572996",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nthis is great\nplease run tidy before submitting\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html\nFile doc/gccgo_install.html (right):\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode10\ndoc/gccgo_install.html:10: frontend itself is under a BSD-style license, gccgo is\nsigh. i guess the Teutonic \"frontend\" is a word now.\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode44\ndoc/gccgo_install.html:44: If you can not use a release, or simply prefer to build gccgo for\ns/can not/cannot/\ns/simply //\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode236\ndoc/gccgo_install.html:236: Use the <code>-static-libgo</code> option to link statically against\nnot --static-libgo? (two minus signs?)\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode244\ndoc/gccgo_install.html:244: default for the <code>gc</code> compiler).\nditto\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode330\ndoc/gccgo_install.html:330: and interfaces will show up as two element structures.  Go\ns/two element/two-element/\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode331\ndoc/gccgo_install.html:331: maps and channels are always represented as C pointers.\nC pointers to run-time structures\n\n(for clarity)\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode484\ndoc/gccgo_install.html:484: <code>-fdump-go-spec=<var>FILENAME</var></code>.  This will create the\nagain, only one minus?\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode485\ndoc/gccgo_install.html:485: file <code><var>FILENAME</var></code> as a side-effect of the\ns/-/ /\n\nmultiword adjectives have hyphens, adjective plus noun don't need them.",
			"disapproval": false,
			"date": "2012-03-20 20:51:28.190027",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks.  Submitting.\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html\nFile doc/gccgo_install.html (right):\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode10\ndoc/gccgo_install.html:10: frontend itself is under a BSD-style license, gccgo is\nOn 2012/03/20 20:51:28, r wrote:\n> sigh. i guess the Teutonic \"frontend\" is a word now.\n\nYep.\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode44\ndoc/gccgo_install.html:44: If you can not use a release, or simply prefer to build gccgo for\nOn 2012/03/20 20:51:28, r wrote:\n> s/can not/cannot/\n> s/simply //\n\nDone.\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode236\ndoc/gccgo_install.html:236: Use the <code>-static-libgo</code> option to link statically against\nOn 2012/03/20 20:51:28, r wrote:\n> not --static-libgo? (two minus signs?)\n\nSurprisingly, no (although --static-libgo does work also).  gcc mostly does not follow the GNU long argument conventions, except for --help, --version, etc.\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode244\ndoc/gccgo_install.html:244: default for the <code>gc</code> compiler).\nOn 2012/03/20 20:51:28, r wrote:\n> ditto\n\nYes, correct here too.\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode330\ndoc/gccgo_install.html:330: and interfaces will show up as two element structures.  Go\nOn 2012/03/20 20:51:28, r wrote:\n> s/two element/two-element/\n\nDone.\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode331\ndoc/gccgo_install.html:331: maps and channels are always represented as C pointers.\nOn 2012/03/20 20:51:28, r wrote:\n> C pointers to run-time structures\n> \n> (for clarity)\n\nDone.\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode484\ndoc/gccgo_install.html:484: <code>-fdump-go-spec=<var>FILENAME</var></code>.  This will create the\nOn 2012/03/20 20:51:28, r wrote:\n> again, only one minus?\n\nYep.\n\nhttp://codereview.appspot.com/5858043/diff/3003/doc/gccgo_install.html#newcode485\ndoc/gccgo_install.html:485: file <code><var>FILENAME</var></code> as a side-effect of the\nOn 2012/03/20 20:51:28, r wrote:\n> s/-/ /\n> \n> multiword adjectives have hyphens, adjective plus noun don't need them.\n\nDone.",
			"disapproval": false,
			"date": "2012-03-20 21:16:13.090108",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ec3f6fe48043 ***\n\ndoc: general update of gccgo_install\n\nFixes issue 3325.\n\nR=golang-dev, bradfitz, minux.ma, r\nCC=golang-dev\nhttp://codereview.appspot.com/5858043",
			"disapproval": false,
			"date": "2012-03-20 21:16:39.362699",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 5858043: doc: general update of gccgo_install",
	"created": "2012-03-20 18:24:05.076421",
	"patchsets": [
		1,
		3003,
		8001
	],
	"modified": "2012-03-20 21:16:40.822102",
	"closed": true,
	"issue": 5858043
}