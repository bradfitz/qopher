{
	"description": "runtime/race: add output tests for different GORACE params",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-16 17:32:35.265660",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=79dc72819280 ***\n\nruntime/race: add output tests for different GORACE params\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/13065043",
			"disapproval": false,
			"date": "2013-08-16 17:54:09.574000",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\n\r\nOn Fri, Aug 16, 2013 at 10:32 AM, <dvyukov@google.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://dvyukov%40google.com@**code.google.com/p/go/<http://40google.com@code.google.com/p/go/>\r\n>\r\n>\r\n> Description:\r\n> runtime/race: add output tests for different GORACE params\r\n>\r\n> Please review this at https://codereview.appspot.**com/13065043/<https://codereview.appspot.com/13065043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/race/output_**test.go\r\n>\r\n>\r\n> Index: src/pkg/runtime/race/output_**test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/race/output_**test.go\r\n> +++ b/src/pkg/runtime/race/output_**test.go\r\n> @@ -41,11 +41,13 @@\r\n>                 // GODEBUG spoils program output, GOMAXPROCS makes it\r\n> flaky.\r\n>                 for _, env := range os.Environ() {\r\n>                         if strings.HasPrefix(env, \"GODEBUG=\") ||\r\n> -                               strings.HasPrefix(env, \"GOMAXPROCS=\") {\r\n> +                               strings.HasPrefix(env, \"GOMAXPROCS=\") ||\r\n> +                               strings.HasPrefix(env, \"GORACE=\") {\r\n>                                 continue\r\n>                         }\r\n>                         cmd.Env = append(cmd.Env, env)\r\n>                 }\r\n> +               cmd.Env = append(cmd.Env, \"GORACE=\"+test.gorace)\r\n>                 got, _ := cmd.CombinedOutput()\r\n>                 if !regexp.MustCompile(test.re).**MatchString(string(got))\r\n> {\r\n>                         t.Fatalf(\"failed test case %v,\r\n> expect:\\n%v\\ngot:\\n%s\",\r\n> @@ -56,10 +58,11 @@\r\n>\r\n>  var tests = []struct {\r\n>         name   string\r\n> +       gorace string\r\n>         source string\r\n>         re     string\r\n>  }{\r\n> -       {\"simple\", `\r\n> +       {\"simple\", \"atexit_sleep_ms=0\", `\r\n>  package main\r\n>  import \"time\"\r\n>  func main() {\r\n> @@ -84,23 +87,70 @@\r\n>  WARNING: DATA RACE\r\n>  Write by goroutine [0-9]:\r\n>    main\\.store\\(\\)\r\n> -      .*/main\\.go:12 \\+0x[0-9,a-f]+\r\n> +      .+/main\\.go:12 \\+0x[0-9,a-f]+\r\n>    main\\.racer\\(\\)\r\n> -      .*/main\\.go:19 \\+0x[0-9,a-f]+\r\n> +      .+/main\\.go:19 \\+0x[0-9,a-f]+\r\n>\r\n>  Previous write by main goroutine:\r\n>    main\\.store\\(\\)\r\n> -      .*/main\\.go:12 \\+0x[0-9,a-f]+\r\n> +      .+/main\\.go:12 \\+0x[0-9,a-f]+\r\n>    main\\.main\\(\\)\r\n> -      .*/main\\.go:8 \\+0x[0-9,a-f]+\r\n> +      .+/main\\.go:8 \\+0x[0-9,a-f]+\r\n>\r\n>  Goroutine [0-9] \\(running\\) created at:\r\n>    main\\.startRacer\\(\\)\r\n> -      .*/main\\.go:15 \\+0x[0-9,a-f]+\r\n> +      .+/main\\.go:15 \\+0x[0-9,a-f]+\r\n>    main\\.main\\(\\)\r\n> -      .*/main\\.go:7 \\+0x[0-9,a-f]+\r\n> +      .+/main\\.go:7 \\+0x[0-9,a-f]+\r\n>  ==================\r\n>  Found 1 data race\\(s\\)\r\n>  exit status 66\r\n>  `},\r\n> +\r\n> +       {\"exitcode\", \"atexit_sleep_ms=0 exitcode=13\", `\r\n> +package main\r\n> +func main() {\r\n> +       done := make(chan bool)\r\n> +       x := 0\r\n> +       go func() {\r\n> +               x = 42\r\n> +               done <- true\r\n> +       }()\r\n> +       x = 43\r\n> +       <-done\r\n>  }\r\n> +`, `exit status 13`},\r\n> +\r\n> +       {\"strip_path_prefix\", \"atexit_sleep_ms=0\r\n> strip_path_prefix=/main.\", `\r\n> +package main\r\n> +func main() {\r\n> +       done := make(chan bool)\r\n> +       x := 0\r\n> +       go func() {\r\n> +               x = 42\r\n> +               done <- true\r\n> +       }()\r\n> +       x = 43\r\n> +       <-done\r\n> +}\r\n> +`, `\r\n> +      go:7 \\+0x[0-9,a-f]+\r\n> +`},\r\n> +\r\n> +       {\"halt_on_error\", \"atexit_sleep_ms=0 halt_on_error=1\", `\r\n> +package main\r\n> +func main() {\r\n> +       done := make(chan bool)\r\n> +       x := 0\r\n> +       go func() {\r\n> +               x = 42\r\n> +               done <- true\r\n> +       }()\r\n> +       x = 43\r\n> +       <-done\r\n> +}\r\n> +`, `\r\n> +==================\r\n> +exit status 66\r\n> +`},\r\n> +}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-16 17:33:34.405730",
			"approval": true
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 13065043: runtime/race: add output tests for different GORACE params",
	"created": "2013-08-16 17:30:42.117660",
	"patchsets": [
		1,
		3001,
		4002,
		9001
	],
	"modified": "2013-08-16 17:54:11.811400",
	"closed": true,
	"issue": 13065043
}