{
	"description": "net: limit number of concurrent cgo calls\n\nThe limit is 500. There is no way to change it.\nThis primarily affects name resolution.\nIf a million goroutines try to resolve DNS names,\nonly 500 will get to execute cgo calls at a time.\nBut in return the operating system will not crash.\n\nFixes issue 5625.",
	"cc": [
		"bradfitz@golang.org"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"dan.kortschak@adelaide.edu.au",
		"r@golang.org",
		"dvyukov@google.com"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dan.kortschak@adelaide.edu.au",
				"r@golang.org",
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/16 05:32:21, rsc wrote:\n> On Thu, Aug 15, 2013 at 11:34 PM, <mailto:dan.kortschak@adelaide.edu.au> wrote:\n> \n> > https://codereview.appspot.**com/13038043/diff/6001/src/**\n> >\n> pkg/net/net.go#newcode446<https://codereview.appspot.com/13038043/diff/6001/src/pkg/net/net.go#newcode446>\n> > src/pkg/net/net.go:446: threadLimit <- struct{}{}\n> > Is this safe since threadLimit is buffered? Referring to thread at\n> >\n> https://groups.google.com/d/**topic/golang-dev/ShqsqvCzkWg%3Chttps://groups.google.com/d/topic/golang-dev/ShqsqvCzkWg>\n> \n> \n> Yes, it is safe. The example is unsafe because it is using the channel ops\n> to protect access to memory, and when used in this way they do not do that.\n> But they do work fine for just making sure there are a certain number of\n> goroutines doing a particular operation.\n\n\nThis is a hard question.\nI believe formally Dan is correct. There is no difference in the spec for memory accesses and other operations. Formally all cgo calls happen concurrently (not ordered by happens-before).",
			"disapproval": false,
			"date": "2013-08-16 08:33:11.894260",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Aug 15, 2013 at 11:34 PM, <dan.kortschak@adelaide.edu.au> wrote:\r\n\r\n> https://codereview.appspot.**com/13038043/diff/6001/src/**\r\n> pkg/net/net.go#newcode446<https://codereview.appspot.com/13038043/diff/6001/src/pkg/net/net.go#newcode446>\r\n> src/pkg/net/net.go:446: threadLimit <- struct{}{}\r\n> Is this safe since threadLimit is buffered? Referring to thread at\r\n> https://groups.google.com/d/**topic/golang-dev/ShqsqvCzkWg<https://groups.google.com/d/topic/golang-dev/ShqsqvCzkWg>\r\n\r\n\r\nYes, it is safe. The example is unsafe because it is using the channel ops\r\nto protect access to memory, and when used in this way they do not do that.\r\nBut they do work fine for just making sure there are a certain number of\r\ngoroutines doing a particular operation.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-08-16 05:32:21.602320",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dan.kortschak@adelaide.edu.au",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/13038043/diff/6001/src/pkg/net/net.go\nFile src/pkg/net/net.go (right):\n\nhttps://codereview.appspot.com/13038043/diff/6001/src/pkg/net/net.go#newcode446\nsrc/pkg/net/net.go:446: threadLimit <- struct{}{}\nIs this safe since threadLimit is buffered? Referring to thread at https://groups.google.com/d/topic/golang-dev/ShqsqvCzkWg",
			"disapproval": false,
			"date": "2013-08-16 03:34:15.530210",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dan.kortschak@adelaide.edu.au",
				"r@golang.org",
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/13038043/diff/6001/src/pkg/net/dialgoogle_test.go\nFile src/pkg/net/dialgoogle_test.go (right):\n\nhttps://codereview.appspot.com/13038043/diff/6001/src/pkg/net/dialgoogle_test.go#newcode71\nsrc/pkg/net/dialgoogle_test.go:71: for i := 0; i < N*9/10; i++ {\nThere are tests that count number of goroutines in net. And they also appear in stack traces.\nDoes waiting for all makes the test longer, or it makes it flaky?\nI would not bother about few additional seconds in a non Short test.",
			"disapproval": false,
			"date": "2013-08-16 08:26:52.791830",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dan.kortschak@adelaide.edu.au",
				"r@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-16 05:38:49.367680",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: bradfitz),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-16 03:15:47.247820",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 13038043: net: limit number of concurrent cgo calls",
	"created": "2013-08-16 03:08:06.116290",
	"patchsets": [
		1,
		3001,
		6001
	],
	"modified": "2013-08-16 08:33:12.631680",
	"closed": false,
	"issue": 13038043
}