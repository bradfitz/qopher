{
	"description": "go/types: really output log traces for debugging NetBSD/386 test timeouts",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"dave@cheney.net",
		"iant@google.com",
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i will leave this cl open as a reminder\r\nand try to implement my proposal\r\nin a new cl. i hope we can catch the\r\ncause of the test timeout with that.\r\n\r\nOn Thursday, January 17, 2013, Dave Cheney wrote:\r\n\r\n> SGTM\r\n>\r\n> On Thursday, January 17, 2013, minux wrote:\r\n>\r\n>>\r\n>> On Thursday, January 17, 2013, Dave Cheney wrote:\r\n>>\r\n>>> could the last chance timeout which is killing the tet stone dead ask\r\n>>> for a goroutine stack trace befor killing the process?\r\n>>>\r\n>> another thing that i'd like to do is to send a signal first to the testee\r\n>> and let the testing package flush the log first and then dump stack\r\n>> trace and die.\r\n>>\r\n>> seems we can use sigquit on unix and ctrl-break on windows.\r\n>> what do you think? i think this would be generally useful.\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-16 22:43:59.752470",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "SGTM\r\n\r\nOn Thursday, January 17, 2013, minux wrote:\r\n\r\n>\r\n> On Thursday, January 17, 2013, Dave Cheney wrote:\r\n>\r\n>> could the last chance timeout which is killing the tet stone dead ask for\r\n>> a goroutine stack trace befor killing the process?\r\n>>\r\n> another thing that i'd like to do is to send a signal first to the testee\r\n> and let the testing package flush the log first and then dump stack\r\n> trace and die.\r\n>\r\n> seems we can use sigquit on unix and ctrl-break on windows.\r\n> what do you think? i think this would be generally useful.\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-16 22:23:52.135490",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thursday, January 17, 2013, Dave Cheney wrote:\r\n\r\n> could the last chance timeout which is killing the tet stone dead ask for\r\n> a goroutine stack trace befor killing the process?\r\n>\r\nanother thing that i'd like to do is to send a signal first to the testee\r\nand let the testing package flush the log first and then dump stack\r\ntrace and die.\r\n\r\nseems we can use sigquit on unix and ctrl-break on windows.\r\nwhat do you think? i think this would be generally useful.\r\n",
			"disapproval": false,
			"date": "2013-01-16 22:16:19.181850",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-16 19:39:09.518310",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm probably missing something obvious, but would it be possible to have the testing package output the log of the current test if a timeout occurs?",
			"disapproval": false,
			"date": "2013-01-16 20:34:36.839730",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thursday, January 17, 2013, wrote:\r\n\r\n> I'm probably missing something obvious, but would it be possible to have\r\n> the testing package output the log of the current test if a timeout\r\n> occurs?\r\n>\r\nthe problem with netbsd/386 builder is that the test is struck\r\nsomewhere and cmd/go kills it without giving it a chance to output\r\nthe buffered logs.\r\n\r\nhttp://build.golang.org/log/a1b6377bdf3620ef2d3bc46dcdcf9e0e3ddfb60d\r\n\r\nanother strange thing about it is that, the test fails on both netbsd/386\r\nand\r\nfreebsd/arm occasionally, but both dave and i cannot reproduce it when\r\nrunning all.bash manually (i remember i've run all.bash 200 times in a row\r\nwithout\r\na single failure while in the mean time, the builder failed once... pretty\r\nweird).\r\n",
			"disapproval": false,
			"date": "2013-01-16 20:45:57.589500",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nProvided we promise to take it out again when we figure this out.  I don't think we want the test always printing to stderr.",
			"disapproval": false,
			"date": "2013-01-16 22:03:35.712470",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "could the last chance timeout which is killing the tet stone dead ask for a\r\ngoroutine stack trace befor killing the process?\r\n\r\nOn Thursday, January 17, 2013, wrote:\r\n\r\n> LGTM\r\n>\r\n> Provided we promise to take it out again when we figure this out.  I\r\n> don't think we want the test always printing to stderr.\r\n>\r\n>\r\n> https://codereview.appspot.**com/7129045/<https://codereview.appspot.com/7129045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-16 22:08:51.342430",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/16 22:16:19, minux wrote:\n> \n> seems we can use sigquit on unix and ctrl-break on windows.\n> what do you think? i think this would be generally useful.\n\nNo idea on Windows, but on Unix SIGQUIT is generated by ^\\, so I think SIGTERM would be better.",
			"disapproval": false,
			"date": "2013-01-16 23:01:46.090440",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thursday, January 17, 2013, wrote:\r\n\r\n> On 2013/01/16 22:16:19, minux wrote:\r\n>\r\n>  seems we can use sigquit on unix and ctrl-break on windows.\r\n>> what do you think? i think this would be generally useful.\r\n>>\r\n>\r\n> No idea on Windows, but on Unix SIGQUIT is generated by ^\\, so I think\r\n> SIGTERM would be better.\r\n>\r\ni chose sigquit so that the user can easily generate it by pressing ^\\.\r\nthe status quo when ^\\ is pressed is that the program do a register dump\r\nand a back trace. i think flush the buffered output before that would be\r\nreasonable.\r\nanyway, any signal is fine for this purpose, maybe we can separate these\r\ntwo roles, and when a certain signal is received, flush the buffer but don't\r\nkill the process so the user can know the progress of the test.\r\ni'm open to suggestions.\r\n",
			"disapproval": false,
			"date": "2013-01-17 09:47:44.800500",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jan 17, 2013 at 1:47 AM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n> On Thursday, January 17, 2013, wrote:\r\n>>\r\n>> On 2013/01/16 22:16:19, minux wrote:\r\n>>\r\n>>> seems we can use sigquit on unix and ctrl-break on windows.\r\n>>> what do you think? i think this would be generally useful.\r\n>>\r\n>>\r\n>> No idea on Windows, but on Unix SIGQUIT is generated by ^\\, so I think\r\n>> SIGTERM would be better.\r\n>\r\n> i chose sigquit so that the user can easily generate it by pressing ^\\.\r\n> the status quo when ^\\ is pressed is that the program do a register dump\r\n> and a back trace. i think flush the buffered output before that would be\r\n> reasonable.\r\n\r\nI see.  OK, that seems reasonable.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2013-01-18 06:23:53.551210",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"iant@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Q=wait",
			"disapproval": false,
			"date": "2013-06-17 21:45:37.721640",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 7129045: go/types: really output log traces for debugging NetBSD...",
	"created": "2013-01-16 19:01:35.057030",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2013-06-17 21:45:37.912950",
	"closed": false,
	"issue": 7129045
}