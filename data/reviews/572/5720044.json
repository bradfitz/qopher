{
	"description": "all: more typos",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"r@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Mar 2, 2012, at 1:04 PM, Brad Fitzpatrick wrote:\n\n> LGTM but implementor is also a valid spelling\n\ni prefer -er.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-03-02 02:11:07.702636",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but implementor is also a valid spelling\n\nOn Thu, Mar 1, 2012 at 5:58 PM, <gri@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go\n>\n>\n> Description:\n> all: more typos\n>\n> Please review this at http://codereview.appspot.com/**5720044/<http://codereview.appspot.com/5720044/>\n>\n> Affected files:\n>  M src/cmd/go/build.go\n>  M src/pkg/crypto/ecdsa/ecdsa.go\n>  M src/pkg/go/printer/testdata/**parser.go\n>  M src/pkg/io/pipe.go\n>  M src/pkg/syscall/exec_plan9.go\n>\n>\n> Index: src/cmd/go/build.go\n> ==============================**==============================**=======\n> --- a/src/cmd/go/build.go\n> +++ b/src/cmd/go/build.go\n> @@ -990,7 +990,7 @@\n>  var errPrintedOutput = errors.New(\"already printed output - no need to\n> show error\")\n>\n>  // run runs the command given by cmdline in the directory dir.\n> -// If the commnd fails, run prints information about the failure\n> +// If the command fails, run prints information about the failure\n>  // and returns a non-nil error.\n>  func (b *builder) run(dir, shortenDir string, desc string, cmdargs\n> ...interface{}) error {\n>        out, err := b.runOut(dir, desc, cmdargs...)\n> Index: src/pkg/crypto/ecdsa/ecdsa.go\n> ==============================**==============================**=======\n> --- a/src/pkg/crypto/ecdsa/ecdsa.**go\n> +++ b/src/pkg/crypto/ecdsa/ecdsa.**go\n> @@ -7,7 +7,7 @@\n>  package ecdsa\n>\n>  // References:\n> -//   [NSA]: Suite B implementor's guide to FIPS 186-3,\n> +//   [NSA]: Suite B implementer's guide to FIPS 186-3,\n>  //     http://www.nsa.gov/ia/_files/**ecdsa.pdf<http://www.nsa.gov/ia/_files/ecdsa.pdf>\n>  //   [SECG]: SECG, SEC1\n>  //     http://www.secg.org/download/**aid-780/sec1-v2.pdf<http://www.secg.org/download/aid-780/sec1-v2.pdf>\n> Index: src/pkg/go/printer/testdata/**parser.go\n> ==============================**==============================**=======\n> --- a/src/pkg/go/printer/testdata/**parser.go\n> +++ b/src/pkg/go/printer/testdata/**parser.go\n> @@ -52,7 +52,7 @@\n>        // Non-syntactic parser control\n>        exprLev int // < 0: in control clause, >= 0: in expression\n>\n> -       // Ordinary identifer scopes\n> +       // Ordinary identifier scopes\n>        pkgScope   *ast.Scope        // pkgScope.Outer == nil\n>        topScope   *ast.Scope        // top-most scope; may be pkgScope\n>        unresolved []*ast.Ident      // unresolved identifiers\n> Index: src/pkg/io/pipe.go\n> ==============================**==============================**=======\n> --- a/src/pkg/io/pipe.go\n> +++ b/src/pkg/io/pipe.go\n> @@ -178,7 +178,7 @@\n>  // It is safe to call Read and Write in parallel with each other or with\n>  // Close. Close will complete once pending I/O is done. Parallel calls to\n>  // Read, and parallel calls to Write, are also safe:\n> -// the invidual calls will be gated sequentially.\n> +// the individual calls will be gated sequentially.\n>  func Pipe() (*PipeReader, *PipeWriter) {\n>        p := new(pipe)\n>        p.rwait.L = &p.l\n> Index: src/pkg/syscall/exec_plan9.go\n> ==============================**==============================**=======\n> --- a/src/pkg/syscall/exec_plan9.**go\n> +++ b/src/pkg/syscall/exec_plan9.**go\n> @@ -71,13 +71,13 @@\n>        return bb\n>  }\n>\n> -// gbit16 reads a 16-bit numeric value from a 9P protocol message strored\n> in b,\n> +// gbit16 reads a 16-bit numeric value from a 9P protocol message stored\n> in b,\n>  // returning the value and the remaining slice of b.\n>  func gbit16(b []byte) (uint16, []byte) {\n>        return uint16(b[0]) | uint16(b[1])<<8, b[2:]\n>  }\n>\n> -// gstring reads a string from a 9P protocol message strored in b,\n> +// gstring reads a string from a 9P protocol message stored in b,\n>  // returning the value as a Go string and the remaining slice of b.\n>  func gstring(b []byte) (string, []byte) {\n>        n, b := gbit16(b)\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-02 02:04:15.753641",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-03-02 01:58:11.467439",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=c741d60a882a ***\n\nall: more typos\n\nR=golang-dev, bradfitz, r\nCC=golang-dev\nhttp://codereview.appspot.com/5720044",
			"disapproval": false,
			"date": "2012-03-02 19:15:49.838778",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5720044: all: more typos",
	"created": "2012-03-02 01:53:57.843718",
	"patchsets": [
		1,
		2001,
		5001,
		1002,
		9001,
		11001,
		9
	],
	"modified": "2012-03-05 19:24:32.770536",
	"closed": true,
	"issue": 5720044
}