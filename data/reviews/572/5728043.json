{
	"description": "build: re-enable some broken tests in run.bash\n        Part of issue 2982.\n        Fixes issue 3076.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org",
		"remyoudompheng@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@google.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks.  It's nice to see that the go command improvements are helping.\n\nhttp://codereview.appspot.com/5728043/diff/4001/doc/progs/run\nFile doc/progs/run (right):\n\nhttp://codereview.appspot.com/5728043/diff/4001/doc/progs/run#newcode10\ndoc/progs/run:10: GC=\"go tool ${GOCHAR}g\"\nI'd like to see this script use the go command directly (go build).\n\nhttp://codereview.appspot.com/5728043/diff/4001/misc/cgo/gmp/fib.go\nFile misc/cgo/gmp/fib.go (right):\n\nhttp://codereview.appspot.com/5728043/diff/4001/misc/cgo/gmp/fib.go#newcode13\nmisc/cgo/gmp/fib.go:13: big \"./gmp\"\nPlease put the ./ imports in their own section\n\nimport (\n    \"runtime\"\n\n    big \"./gmp\"\n)\n\ngofmt won't reorder across a blank line.\n\nhttp://codereview.appspot.com/5728043/diff/4001/misc/cgo/gmp/pi.go\nFile misc/cgo/gmp/pi.go (right):\n\nhttp://codereview.appspot.com/5728043/diff/4001/misc/cgo/gmp/pi.go#newcode41\nmisc/cgo/gmp/pi.go:41: big \"./gmp\"\nsame\n\nhttp://codereview.appspot.com/5728043/diff/4001/misc/cgo/stdio/chain.go\nFile misc/cgo/stdio/chain.go (right):\n\nhttp://codereview.appspot.com/5728043/diff/4001/misc/cgo/stdio/chain.go#newcode10\nmisc/cgo/stdio/chain.go:10: \"./stdio\"\nsame\n\nhttp://codereview.appspot.com/5728043/diff/4001/misc/cgo/stdio/fib.go\nFile misc/cgo/stdio/fib.go (right):\n\nhttp://codereview.appspot.com/5728043/diff/4001/misc/cgo/stdio/fib.go#newcode13\nmisc/cgo/stdio/fib.go:13: \"./stdio\"\nsame\n\nhttp://codereview.appspot.com/5728043/diff/4001/test/bench/go1/dummy_test.go\nFile test/bench/go1/dummy_test.go (right):\n\nhttp://codereview.appspot.com/5728043/diff/4001/test/bench/go1/dummy_test.go#newcode3\ntest/bench/go1/dummy_test.go:3: import \"testing\"\nCan this file be deleted now?",
			"disapproval": false,
			"date": "2012-03-02 18:49:54.882252",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The go tool already recognizes *.c files but not apparently, on the command line.\n\nFor cgo/life, if you move life.go, life.h, c-life.c to a life subdirectory, and import it as \"./life\" from main.go, it will be go build-able.",
			"disapproval": false,
			"date": "2012-03-02 18:59:43.065598",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/02 18:59:43, remyoudompheng wrote:\n> The go tool already recognizes *.c files but not apparently, on the command\n> line.\n> \n> For cgo/life, if you move life.go, life.h, c-life.c to a life subdirectory, and\n> import it as \"./life\" from main.go, it will be go build-able.\nSome of the cgo tests can be build this way. But not all, because some C source files\nneed to be built by gcc, not 5c/6c/8c.\n\nI'm proposing for these.",
			"disapproval": false,
			"date": "2012-03-02 19:06:23.455666",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/02 19:27:29, rsc wrote:\n> I think go test should only complain if\n> \n> #Test + #Benchmark + #Example == 0\nIt is the case for the go1 benchmark, so dummy_test.go have to remain.\nBut 'go test' still can't handle it, will look into it.\n\nminux-MBP:go1 minux$ go test\n# testmain.../test/bench/go1/_test/_testmain.go:5: imported and not used: \"regexp\"\n.../test/bench/go1/_test/_testmain.go:6: imported and not used: \"testing\".../test/bench/go1/_test/_testmain.go:9: import path cannot be absolute path\n.../test/bench/go1/_test/_testmain.go:14: undefined: <nil>.testing.../test/bench/go1/_test/_testmain.go:18: undefined: <nil>.testing\n.../test/bench/go1/_test/_testmain.go:42: undefined: <nil>.testing.../test/bench/go1/_test/_testmain.go:47: undefined: <nil>.regexp\n.../test/bench/go1/_test/_testmain.go:52: undefined: <nil>.regexp.../test/bench/go1/_test/_testmain.go:61: undefined: <nil>.testing\nFAIL    /Users/minux/work/go/test/bench/go1 [build failed]",
			"disapproval": false,
			"date": "2012-03-02 19:34:51.236442",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/02 19:39:50, rsc wrote:\n> These errors should go away with some upcoming go command fixes.\nLooking forward to the these fixes.\n\nI still need a way to detect CGO_ENABLED if the user doesn't set it in run.bash.\nI think the only way to do is to use pkg go/build.",
			"disapproval": false,
			"date": "2012-03-02 20:00:52.739301",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Mar 3, 2012 at 3:28 PM,  <minux.ma@gmail.com> wrote:\n\n> I added a iscgoenabled.go to src/ to detect CGO_ENABLED for run.bash,\n> I'm not sure if there is any alternative. RFC for this.\n\nI'd prefer tweaking src/cmd/dist/build.c since run.bash contains\n\"eval $(go tool dist env)\" line.\n",
			"disapproval": false,
			"date": "2012-03-03 11:34:19.815034",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "These errors should go away with some upcoming go command fixes.\n",
			"disapproval": false,
			"date": "2012-03-02 19:39:50.600420",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Any opinions on this CL and how to detect CGO_ENABLED for run.bash?",
			"disapproval": false,
			"date": "2012-03-05 18:37:43.667581",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Mar 3, 2012 at 7:34 PM, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\n\n> On Sat, Mar 3, 2012 at 3:28 PM,  <minux.ma@gmail.com> wrote:\n>\n> > I added a iscgoenabled.go to src/ to detect CGO_ENABLED for run.bash,\n> > I'm not sure if there is any alternative. RFC for this.\n>\n> I'd prefer tweaking src/cmd/dist/build.c since run.bash contains\n> \"eval $(go tool dist env)\" line.\n>\nBut dist doesn't know about whether this OS/ARCH combination supports cgo.\nOnly pkg/go/build/build.go knows that, and I don't want to duplicate that\nknowledge.\n\nAnother option would be we add it to cmd/go, for example, go cgoflags?\nAdditional benefit: we can get appropriate CFLAGS from it when compiling\nexternal C files [e.g., -m32 or -m64? I know this can be deduced from\nGOARCH, but\nI don't think we should duplicate that logic in every Makefile for external\nC files].\n",
			"disapproval": false,
			"date": "2012-03-03 12:38:09.582754",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-03-02 18:45:25.615565",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "test/bench/go1: still can't enable, because there is a bug in 'go test .'\n\nBlockers for other misc/cgo tests:\nWe need a way to compile external C source files\nI propose to add something like this:\n#cgo external: xxx.c\nOr, is there any better approach available?\n(We have to let the go command to compile the external C programs, because\nonly go know the necessary CFLAGS [e.g., -m32 or -m64?])\n",
			"disapproval": false,
			"date": "2012-03-02 18:54:28.464697",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think go test should only complain if\n\n#Test + #Benchmark + #Example == 0\n\nWant to send a CL?\n",
			"disapproval": false,
			"date": "2012-03-02 19:27:29.623493",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nAlso enabled misc/cgo/life.\n\nhttp://codereview.appspot.com/5728043/diff/4001/doc/progs/run\nFile doc/progs/run (right):\n\nhttp://codereview.appspot.com/5728043/diff/4001/doc/progs/run#newcode10\ndoc/progs/run:10: GC=\"go tool ${GOCHAR}g\"\nOn 2012/03/02 18:49:55, rsc1 wrote:\n> I'd like to see this script use the go command directly (go build).\nSome of the files are only meant to be compiled (not linked).\nI'm not sure if we should ignore the compiled object files, and use \n'go run' to run the programs which actually need to.\n\nhttp://codereview.appspot.com/5728043/diff/4001/test/bench/go1/dummy_test.go\nFile test/bench/go1/dummy_test.go (right):\n\nhttp://codereview.appspot.com/5728043/diff/4001/test/bench/go1/dummy_test.go#newcode3\ntest/bench/go1/dummy_test.go:3: import \"testing\"\nOn 2012/03/02 18:49:55, rsc1 wrote:\n> Can this file be deleted now?\nIf this file is deleted, go test won't find any tests in the files.\n(This might be a bug for 'go test', what do you think?)",
			"disapproval": false,
			"date": "2012-03-02 19:26:14.685996",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\ntest/bench/go1 enabled thanks to recent go and gc bugfixes.\nI added a iscgoenabled.go to src/ to detect CGO_ENABLED for run.bash, \nI'm not sure if there is any alternative. RFC for this.",
			"disapproval": false,
			"date": "2012-03-03 06:28:09.325451",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5728043/diff/7051/misc/cgo/gmp/fib.go\nFile misc/cgo/gmp/fib.go (right):\n\nhttp://codereview.appspot.com/5728043/diff/7051/misc/cgo/gmp/fib.go#newcode15\nmisc/cgo/gmp/fib.go:15: big \"./gmp\"\nYou can undo the moves and just do\n\nbig \".\"\n\nSame in the other places.  It's odd and not what you'd do in real life,\nbut it's fine for this test.",
			"disapproval": false,
			"date": "2012-03-05 21:47:11.879361",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/05 21:47:11, rsc wrote:\n> misc/cgo/gmp/fib.go:15: big \"./gmp\"\n> You can undo the moves and just do\n> \n> big \".\"\n> \n> Same in the other places.  It's odd and not what you'd do in real life,\n> but it's fine for this test.\nI've tried this, and also this:\nimport \"../gmp\"\n\nBut they don't work.",
			"disapproval": false,
			"date": "2012-03-06 19:56:19.502427",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 6, 2012 at 14:56,  <minux.ma@gmail.com> wrote:\n> I've tried this, and also this:\n> import \"../gmp\"\n>\n> But they don't work.\n\nThat's weird.  I just tried them and they work.\nI sent out CL 5731048 for the cgo changes.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-03-07 03:46:48.641483",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/07 03:46:48, rsc wrote:\n> On Tue, Mar 6, 2012 at 14:56,  <mailto:minux.ma@gmail.com> wrote:\n> > I've tried this, and also this:\n> > import \"../gmp\"\n> >\n> > But they don't work.\n> \n> That's weird.  I just tried them and they work.\n> I sent out CL 5731048 for the cgo changes.\nOh, I missed the // +build ignore lines...",
			"disapproval": false,
			"date": "2012-03-07 04:48:14.840558",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5728043: build: re-enable some broken tests in run.bash",
	"created": "2012-03-02 18:29:27.670674",
	"patchsets": [
		1,
		4,
		4001,
		5018,
		4035,
		2082,
		7023,
		4059,
		6049,
		61,
		5040,
		62,
		63,
		4104,
		64,
		4128,
		7051,
		9002
	],
	"modified": "2012-03-07 06:18:05.152903",
	"closed": true,
	"issue": 5728043
}