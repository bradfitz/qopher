{
	"description": "net: replace print(..) with fmt.Fprint(os.Stderr, ...)",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"mikioh.mikioh@gmail.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-03-04 00:06:53.312016",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5720069/diff/3001/src/pkg/net/fd.go\nFile src/pkg/net/fd.go (right):\n\nhttp://codereview.appspot.com/5720069/diff/3001/src/pkg/net/fd.go#newcode239\nsrc/pkg/net/fd.go:239: fmt.Fprintln(os.Stderr, \"pollServer WaitFD:\", err)\nwhat about saving the last error in pollServer like following:\n\ntype pollServer struct {\n        :\n        lasterr error\n}\n\nthen panics for pollServer can print lasterr when it's needed.\n\nhttp://codereview.appspot.com/5720069/diff/3001/src/pkg/net/fd.go#newcode291\nsrc/pkg/net/fd.go:291: fmt.Fprintln(os.Stderr, \"Start pollServer:\", err)\npanic(\"newPollServer \" + err.Error())\n\nhttp://codereview.appspot.com/5720069/diff/3001/src/pkg/net/fd_linux.go\nFile src/pkg/net/fd_linux.go (right):\n\nhttp://codereview.appspot.com/5720069/diff/3001/src/pkg/net/fd_linux.go#newcode88\nsrc/pkg/net/fd_linux.go:88: fmt.Fprintf(os.Stderr, \"Epoll unexpected fd=%d\\n\", fd)\nremove?\n\nhttp://codereview.appspot.com/5720069/diff/3001/src/pkg/net/fd_linux.go#newcode106\nsrc/pkg/net/fd_linux.go:106: fmt.Fprintf(os.Stderr, \"Epoll modify fd=%d: %v\\n\", fd, err)\nsaving lasterr for pollster here?\n\nhttp://codereview.appspot.com/5720069/diff/3001/src/pkg/net/fd_linux.go#newcode111\nsrc/pkg/net/fd_linux.go:111: fmt.Fprintf(os.Stderr, \"Epoll delete fd=%d: %v\\n\", fd, err)\nditto",
			"disapproval": false,
			"date": "2012-03-04 03:23:30.965132",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NO\n\nI am trying to keep net's dependencies down.\nI know that it probably already depends on fmt\nbut let's not add more.  The builtin print already\nwrites to stderr.\n\nI will kill the dependencies and add a test for them.\n",
			"disapproval": false,
			"date": "2012-03-05 15:12:41.889954",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-03-07 00:07:39.000315",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FWIW, thanks for the push.  I'm very glad we have the\nintended policy written down now.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-03-07 02:56:55.043375",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5720069: net: replace print(..) with fmt.Fprint(os.Stderr, ...)",
	"created": "2012-03-04 00:06:45.321997",
	"patchsets": [
		1,
		3001
	],
	"modified": "2012-03-07 00:07:41.504280",
	"closed": true,
	"issue": 5720069
}