{
	"description": "http: corrects undocumented side effects in http.DefaultTransport's RoundTrip method\nFixes issue 2140.\n\nThe http.DefaultTransport's RoundTrip method leaves the http.Request object\nin an altered state after performing the round trip.  This patch removes\nthe header from the Request before returning to the client.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-08-08 20:51:52.459973",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1cf966ee02cf ***\n\nhttp: corrects undocumented side effects in http.DefaultTransport's RoundTrip method\nFixes issue 2140.\n\nThe http.DefaultTransport's RoundTrip method leaves the http.Request object\nin an altered state after performing the round trip.  This patch removes\nthe header from the Request before returning to the client.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/4857041\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2011-08-10 21:16:17.190032",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-08-08 21:34:01.159838",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Went to submit, but:\n\nwarning: cannot find dgrijalva@ngmoco.com in CONTRIBUTORS\n\nHave you submitted the CLA?\n\n\nOn Mon, Aug 8, 2011 at 3:39 PM, <dgrijalva@ngmoco.com> wrote:\n\n> On 2011/08/08 21:41:39, dgrijalva wrote:\n>\n>> Hello mailto:golang-dev@**googlegroups.com <golang-dev@googlegroups.com>,\n>> mailto:bradfitz@golang.org\n>>\n> (cc:\n>\n>> mailto:golang-dev@**googlegroups.com <golang-dev@googlegroups.com>),\n>>\n>\n>  Please take another look.\n>>\n>\n> Fixed.  Thanks for all your help.\n>\n>\n> http://codereview.appspot.com/**4857041/<http://codereview.appspot.com/4857041/>\n>\n",
			"disapproval": false,
			"date": "2011-08-08 22:46:18.395075",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-08-08 19:01:43.139606",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Could you add a test?\n\nAlso, what if the original request was:\n\nGET / HTTP/1.x\nAccept-Encoding: foo\n\nYour patch removes foo as well as gzip, no?\n\nOn Mon, Aug 8, 2011 at 12:01 PM, <dgrijalva@ngmoco.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> http: corrects undocumented side effects in http.DefaultTransport's\n> RoundTrip method\n> Fixes issue 2140.\n>\n> The http.DefaultTransport's RoundTrip method leaves the http.Request\n> object\n> in an altered state after performing the round trip.  This patch removes\n> the header from the Request before returning to the client.\n>\n> Please review this at http://codereview.appspot.com/**4857041/<http://codereview.appspot.com/4857041/>\n>\n> Affected files:\n>  M src/pkg/http/transport.go\n>\n>\n> Index: src/pkg/http/transport.go\n> ==============================**==============================**=======\n> --- a/src/pkg/http/transport.go\n> +++ b/src/pkg/http/transport.go\n> @@ -511,6 +511,9 @@\n>                        if err != nil || resp.ContentLength == 0 {\n>                                return resp, err\n>                        }\n> +                       if rc.addedGzip {\n> +                               forReq.Header.Del(\"Accept-**Encoding\")\n> +                       }\n>                        if rc.addedGzip && resp.Header.Get(\"Content-**Encoding\")\n> == \"gzip\" {\n>                                resp.Header.Del(\"Content-**Encoding\")\n>                                resp.Header.Del(\"Content-**Length\")\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-08-08 20:00:56.118441",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-08-08 20:52:18.769750",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": " There aren't currently any tests around RoundTrip. I'll see if I can put something together. \n\nThe Accept-Encoding:foo case is covered since the gzip behavior will only be triggered if req.Header.Get(\"Accept-Encoding\") == \"\".\n\n-dave\n\nOn Monday, August 8, 2011 at 1:00 PM, Brad Fitzpatrick wrote:\n\n> Could you add a test?\n> \n> Also, what if the original request was:\n> \n> GET / HTTP/1.x\n> Accept-Encoding: foo\n> \n> Your patch removes foo as well as gzip, no? \n> \n> On Mon, Aug 8, 2011 at 12:01 PM, <dgrijalva@ngmoco.com (mailto:dgrijalva@ngmoco.com)> wrote:\n> >  Reviewers: golang-dev_googlegroups.com (http://golang-dev_googlegroups.com),\n> > \n> >  Message:\n> >  Hello golang-dev@googlegroups.com (mailto:golang-dev@googlegroups.com) (cc: golang-dev@googlegroups.com (mailto:golang-dev@googlegroups.com)),\n> > \n> >  I'd like you to review this change to\n> > https://go.googlecode.com/hg/\n> > \n> > \n> >  Description:\n> >  http: corrects undocumented side effects in http.DefaultTransport's\n> >  RoundTrip method\n> >  Fixes issue 2140.\n> > \n> >  The http.DefaultTransport's RoundTrip method leaves the http.Request\n> >  object\n> >  in an altered state after performing the round trip. This patch removes\n> >  the header from the Request before returning to the client.\n> > \n> >  Please review this at http://codereview.appspot.com/4857041/\n> > \n> >  Affected files:\n> > M src/pkg/http/transport.go\n> > \n> > \n> >  Index: src/pkg/http/transport.go\n> >  ===================================================================\n> >  --- a/src/pkg/http/transport.go\n> >  +++ b/src/pkg/http/transport.go\n> >  @@ -511,6 +511,9 @@\n> > if err != nil || resp.ContentLength == 0 {\n> > return resp, err\n> > }\n> >  +  if rc.addedGzip {\n> >  +  forReq.Header.Del(\"Accept-Encoding\")\n> >  +  }\n> > if rc.addedGzip && resp.Header.Get(\"Content-Encoding\") == \"gzip\" {\n> > resp.Header.Del(\"Content-Encoding\")\n> > resp.Header.Del(\"Content-Length\")\n> > \n> > \n> \n\n",
			"disapproval": false,
			"date": "2011-08-08 20:07:51.744251",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Aug 8, 2011 at 1:07 PM, Dave Grijalva <dgrijalva@ngmoco.com> wrote:\n\n>  There aren't currently any tests around RoundTrip.  I'll see if I can put\n> something together.\n>\n\nThere's a bunch in transport_test.go and server_test.go.  Sometimes they go\nvia Get, which is a thin wrapper around RoundTrip, but some in\ntransport_test use RoundTrip directly.\n\n\n> The Accept-Encoding:foo case is covered since the gzip behavior will only\n> be triggered if req.Header.Get(\"Accept-Encoding\") == \"\".\n>\n\nShould be an easy test then.  :-)\n",
			"disapproval": false,
			"date": "2011-08-08 20:27:51.171967",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "oh crap. I missed that part in the guide. Let me get that figured out... \n\n-dave\n\nOn Monday, August 8, 2011 at 3:46 PM, Brad Fitzpatrick wrote:\n\n> Went to submit, but:\n> \n> warning: cannot find dgrijalva@ngmoco.com (mailto:dgrijalva@ngmoco.com) in CONTRIBUTORS\n> \n> Have you submitted the CLA?\n> \n> \n>  On Mon, Aug 8, 2011 at 3:39 PM, <dgrijalva@ngmoco.com (mailto:dgrijalva@ngmoco.com)> wrote:\n> >  On 2011/08/08 21:41:39, dgrijalva wrote:\n> > >  Hello mailto:golang-dev@googlegroups.com, mailto:bradfitz@golang.org\n> >  (cc:\n> > >  mailto:golang-dev@googlegroups.com),\n> > \n> > >  Please take another look.\n> > \n> >  Fixed. Thanks for all your help.\n> > \n> > \n> > http://codereview.appspot.com/4857041/\n> \n\n",
			"disapproval": false,
			"date": "2011-08-08 22:49:19.919317",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": " Updated with tests. Sorry for the noise. I'm new to hg. \n\nThere might be a bit of redundancy in these tests, but they cover the three specific cases we're interested in explicitly:\n- a request with an empty accept-encoding header, where we do want to do transparent gzip\n- a request with some other accept-encoding value, where we want to pass through\n- a request with accept-encoding == \"gzip\", where we also want to pass through\n\n-dave\n\nOn Monday, August 8, 2011 at 1:27 PM, Brad Fitzpatrick wrote:\n\n> On Mon, Aug 8, 2011 at 1:07 PM, Dave Grijalva <dgrijalva@ngmoco.com (mailto:dgrijalva@ngmoco.com)> wrote:\n> >  There aren't currently any tests around RoundTrip. I'll see if I can put something together.\n> \n> There's a bunch in transport_test.go and server_test.go. Sometimes they go via Get, which is a thin wrapper around RoundTrip, but some in transport_test use RoundTrip directly. \n> \n> > The Accept-Encoding:foo case is covered since the gzip behavior will only be triggered if req.Header.Get(\"Accept-Encoding\") == \"\".\n> > \n> \n> \n> Should be an easy test then. :-)\n> \n\n",
			"disapproval": false,
			"date": "2011-08-08 20:55:29.798758",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4857041/diff/13001/src/pkg/http/transport_test.go\nFile src/pkg/http/transport_test.go (right):\n\nhttp://codereview.appspot.com/4857041/diff/13001/src/pkg/http/transport_test.go#newcode418\nsrc/pkg/http/transport_test.go:418: t.Fatalf(\"body = %q; want %q\", g, e)\nErrorf here and elsewhere seems fine.\n\nYou only use Fatalf if it's not possible to continue any more tests.\n\nhttp://codereview.appspot.com/4857041/diff/13001/src/pkg/http/transport_test.go#newcode455\nsrc/pkg/http/transport_test.go:455: t.Fatalf(\"body = %q; want %q\", g, e)\nthis test (TestRoundTripGzip) contains 3 lines with this exact failure message.  Likewise with the other 3.\n\nIf this test breaks in the future and somebody is stuck debugging it (which is almost guaranteed to happen), that person doesn't know which test broke.\n\nYou could break this into 3 differently-named tests or make this a table-driven test.\n\nSee: http://code.google.com/p/go-wiki/wiki/TableDrivenTests",
			"disapproval": false,
			"date": "2011-08-08 20:57:06.166495",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/08/08 21:41:39, dgrijalva wrote:\n> Hello mailto:golang-dev@googlegroups.com, mailto:bradfitz@golang.org (cc:\n> mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nFixed.  Thanks for all your help.",
			"disapproval": false,
			"date": "2011-08-08 22:39:06.406071",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Much nicer. Two little things...\n\nhttp://codereview.appspot.com/4857041/diff/3003/src/pkg/http/transport_test.go\nFile src/pkg/http/transport_test.go (right):\n\nhttp://codereview.appspot.com/4857041/diff/3003/src/pkg/http/transport_test.go#newcode392\nsrc/pkg/http/transport_test.go:392: expect_accept string\nGo style is fooBar not foo_bar\n\nhttp://codereview.appspot.com/4857041/diff/3003/src/pkg/http/transport_test.go#newcode402\nsrc/pkg/http/transport_test.go:402: // Test that modifications made by the RoundTripper are cleaned up\nThat that modification to the Request by the ...",
			"disapproval": false,
			"date": "2011-08-08 21:38:45.763584",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Okay. We just submitted the CLA document via email. Is there a step I should take to follow up or will you get the updated committers list automatically? \n\n-dave\n\nOn Monday, August 8, 2011 at 3:49 PM, Dave Grijalva wrote:\n\n> oh crap. I missed that part in the guide. Let me get that figured out... \n> \n> -dave\n> \n> On Monday, August 8, 2011 at 3:46 PM, Brad Fitzpatrick wrote:\n> \n> > Went to submit, but:\n> > \n> > warning: cannot find dgrijalva@ngmoco.com (mailto:dgrijalva@ngmoco.com) in CONTRIBUTORS\n> > \n> > Have you submitted the CLA?\n> > \n> > \n> >  On Mon, Aug 8, 2011 at 3:39 PM, <dgrijalva@ngmoco.com (mailto:dgrijalva@ngmoco.com)> wrote:\n> > >  On 2011/08/08 21:41:39, dgrijalva wrote:\n> > > >  Hello mailto:golang-dev@googlegroups.com, mailto:bradfitz@golang.org\n> > >  (cc:\n> > > >  mailto:golang-dev@googlegroups.com),\n> > > \n> > > >  Please take another look.\n> > > \n> > >  Fixed. Thanks for all your help.\n> > > \n> > > \n> > > http://codereview.appspot.com/4857041/\n> > \n> \n\n",
			"disapproval": false,
			"date": "2011-08-10 19:36:41.561038",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-08-08 21:41:39.140750",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Got it, thanks!\n\nOn Wed, Aug 10, 2011 at 12:36 PM, Dave Grijalva <dgrijalva@ngmoco.com>wrote:\n\n> Okay.  We just submitted the CLA document via email.  Is there a step I\n> should take to follow up or will you get the updated committers list\n> automatically?\n>\n> -dave\n>\n> On Monday, August 8, 2011 at 3:49 PM, Dave Grijalva wrote:\n>\n>  oh crap.  I missed that part in the guide.  Let me get that figured\n> out...\n>\n> -dave\n>\n> On Monday, August 8, 2011 at 3:46 PM, Brad Fitzpatrick wrote:\n>\n> Went to submit, but:\n>\n> warning: cannot find dgrijalva@ngmoco.com in CONTRIBUTORS\n>\n> Have you submitted the CLA?\n>\n>\n> On Mon, Aug 8, 2011 at 3:39 PM, <dgrijalva@ngmoco.com> wrote:\n>\n> On 2011/08/08 21:41:39, dgrijalva wrote:\n>\n> Hello mailto:golang-dev@**googlegroups.com <golang-dev@googlegroups.com>,\n> mailto:bradfitz@golang.org\n>\n> (cc:\n>\n> mailto:golang-dev@**googlegroups.com <golang-dev@googlegroups.com>),\n>\n>\n> Please take another look.\n>\n>\n> Fixed.  Thanks for all your help.\n>\n>\n> http://codereview.appspot.com/**4857041/<http://codereview.appspot.com/4857041/>\n>\n>\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-08-10 19:41:37.456255",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Dave,\n\nThanks!\n\nThanks for sticking through the somewhat painful initial process (tests, our\nstyle, CLA, etc).  Future patches should be a lot easier now.  :)\n\n- Brad\n\n\nOn Wed, Aug 10, 2011 at 2:16 PM, <bradfitz@golang.org> wrote:\n\n> *** Submitted as\n> http://code.google.com/p/go/**source/detail?r=1cf966ee02cf<http://code.google.com/p/go/source/detail?r=1cf966ee02cf>***\n>\n>\n> http: corrects undocumented side effects in http.DefaultTransport's\n> RoundTrip method\n> Fixes issue 2140.\n>\n> The http.DefaultTransport's RoundTrip method leaves the http.Request\n> object\n> in an altered state after performing the round trip.  This patch removes\n> the header from the Request before returning to the client.\n>\n> R=golang-dev, bradfitz\n> CC=golang-dev\n>\n> http://codereview.appspot.com/**4857041<http://codereview.appspot.com/4857041>\n>\n> Committer: Brad Fitzpatrick <bradfitz@golang.org>\n>\n>\n>\n> http://codereview.appspot.com/**4857041/<http://codereview.appspot.com/4857041/>\n>\n",
			"disapproval": false,
			"date": "2011-08-10 21:17:46.628321",
			"approval": false
		}
	],
	"owner_email": "dgrijalva@ngmoco.com",
	"private": false,
	"base_url": "",
	"owner": "dgrijalva",
	"subject": "code review 4857041: http: corrects undocumented side effects in http.Defaul...",
	"created": "2011-08-08 18:56:10.392222",
	"patchsets": [
		1,
		2001,
		5001,
		7002,
		13001,
		15001,
		3003,
		2002
	],
	"modified": "2011-08-10 21:17:46.628321",
	"closed": false,
	"issue": 4857041
}