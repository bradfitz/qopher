{
	"description": "net/http: new benchmark to measure server without network\n\nNo net package involved. And with ReportAllocs we can see\nhow much garbage is created per request.",
	"cc": [
		"adg@golang.org",
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/20 04:48:33, bradfitz wrote:\n> Sure, I took the Chrome one, without its non-realistic cookies.\n\nThanks. Do you think there is value in testing a larger response (what is the typical size of the 2009 google homepage for eg) and/or with chunked encoding.",
			"disapproval": false,
			"date": "2013-03-20 04:58:44.345270",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Fair enough, can't be everything to everyone.\r\n\r\nOn Wed, Mar 20, 2013 at 5:16 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>\r\n>\r\n> On Tue, Mar 19, 2013 at 9:58 PM, <dave@cheney.net> wrote:\r\n>>\r\n>> On 2013/03/20 04:48:33, bradfitz wrote:\r\n>>>\r\n>>> Sure, I took the Chrome one, without its non-realistic cookies.\r\n>>\r\n>>\r\n>> Thanks. Do you think there is value in testing a larger response (what\r\n>> is the typical size of the 2009 google homepage for eg) and/or with\r\n>> chunked encoding.\r\n>\r\n>\r\n> I'm sure there's value in benchmarking the whole spectrum of size and\r\n> options.  But this is the bare minimum and I was trying to benchmark an\r\n> extreme end of the spectrum.  Well, it was, until you had me add more\r\n> headers.\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-20 06:19:52.380770",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-03-20 03:41:21.907490",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-20 04:29:36.649010",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You already LGTM'd, but PTAL ... fixed a data race.  Have to wait for both\r\nthe conn *and* Serve to finish before looping.\r\n\r\nOn Tue, Mar 19, 2013 at 9:36 PM, <bradfitz@golang.org> wrote:\r\n\r\n> Hello adg@golang.org (cc: golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> https://codereview.appspot.**com/7913044/<https://codereview.appspot.com/7913044/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-20 04:37:54.924210",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-20 04:36:37.162010",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-20 04:47:35.619620",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Could you use/reuse and of the sample requests from request_test.go ? The idea is they represent both real world, and synthetic examples.",
			"disapproval": false,
			"date": "2013-03-20 04:41:35.780820",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sure, I took the Chrome one, without its non-realistic cookies.\r\n\r\n\r\nOn Tue, Mar 19, 2013 at 9:41 PM, <dave@cheney.net> wrote:\r\n\r\n> Could you use/reuse and of the sample requests from request_test.go ?\r\n> The idea is they represent both real world, and synthetic examples.\r\n>\r\n> https://codereview.appspot.**com/7913044/<https://codereview.appspot.com/7913044/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-20 04:48:33.732410",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 19, 2013 at 9:58 PM, <dave@cheney.net> wrote:\r\n\r\n> On 2013/03/20 04:48:33, bradfitz wrote:\r\n>\r\n>> Sure, I took the Chrome one, without its non-realistic cookies.\r\n>>\r\n>\r\n> Thanks. Do you think there is value in testing a larger response (what\r\n> is the typical size of the 2009 google homepage for eg) and/or with\r\n> chunked encoding.\r\n>\r\n\r\nI'm sure there's value in benchmarking the whole spectrum of size and\r\noptions.  But this is the bare minimum and I was trying to benchmark an\r\nextreme end of the spectrum.  Well, it was, until you had me add more\r\nheaders.\r\n",
			"disapproval": false,
			"date": "2013-03-20 06:16:13.625700",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=8fa3f49f6ab1 ***\n\nnet/http: new benchmark to measure server without network\n\nNo net package involved. And with ReportAllocs we can see\nhow much garbage is created per request.\n\nR=adg, dave\nCC=golang-dev\nhttps://codereview.appspot.com/7913044",
			"disapproval": false,
			"date": "2013-03-20 06:32:55.239950",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 7913044: net/http: new benchmark to measure server without network",
	"created": "2013-03-20 02:58:38.739910",
	"patchsets": [
		1,
		2001,
		6001,
		2002,
		11001,
		16001
	],
	"modified": "2013-03-20 06:32:57.495630",
	"closed": true,
	"issue": 7913044
}