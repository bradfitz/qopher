{
	"description": "cmd/gc: fix escape analysis bug\n\nWas not handling &x.y[0] and &x.y.z correctly where\ny is an array or struct-valued field (not a pointer).",
	"cc": [
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"ken@google.com",
		"remyoudompheng@gmail.com"
	],
	"messages": [
		{
			"sender": "ken@google.com",
			"recipients": [
				"rsc@golang.org",
				"ken@google.com",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "lgtm",
			"disapproval": false,
			"date": "2012-09-24 20:01:27.266110",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=0ece4ff29314 ***\n\ncmd/gc: fix escape analysis bug\n\nWas not handling &x.y[0] and &x.y.z correctly where\ny is an array or struct-valued field (not a pointer).\n\nR=ken2\nCC=golang-dev\nhttp://codereview.appspot.com/6551059",
			"disapproval": false,
			"date": "2012-09-24 19:53:16.204150",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-24 19:53:11.279890",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I suppose the bug is present in Go 1.0.3 ?\r\n",
			"disapproval": false,
			"date": "2012-09-24 20:10:23.045010",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Sep 24, 2012 at 4:10 PM, R\u00e9my Oudompheng\r\n<remyoudompheng@gmail.com> wrote:\r\n> I suppose the bug is present in Go 1.0.3 ?\r\n\r\nYes but as far as I know no one has run into it. It is somewhat\r\ncompensated for by the fact that &T{} is always treated as escaping\r\nand by the fact that most programs do not allocate a big struct and\r\nthen return only a pointer to a piece of it. If we do a Go 1.0.4 we'd\r\nwant to include it, but I hope we won't do that.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-09-24 21:30:53.151170",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6551059: cmd/gc: fix escape analysis bug",
	"created": "2012-09-22 14:10:20.761590",
	"patchsets": [
		1,
		4001
	],
	"modified": "2012-09-24 20:10:23.121030",
	"closed": true,
	"issue": 6551059
}