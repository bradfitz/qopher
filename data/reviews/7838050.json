{
	"description": "cmd/gc: fix nil pointer dereferences.\n\nFixes issue 5119.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dvyukov@google.com",
		"dave@cheney.net",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am not sure it worth fixing, because gc setups own SIGSEGV  andler\r\nthat does exit(1) if there were some compilation errors before.\r\n\r\nOn Sun, Mar 24, 2013 at 1:52 PM,  <remyoudompheng@gmail.com> wrote:\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> cmd/gc: fix nil pointer dereferences.\r\n>\r\n> Fixes issue 5119.\r\n>\r\n> Please review this at https://codereview.appspot.com/7838050/\r\n>\r\n> Affected files:\r\n>   M src/cmd/gc/dcl.c\r\n>   M src/cmd/gc/subr.c\r\n>\r\n>\r\n> Index: src/cmd/gc/dcl.c\r\n> ===================================================================\r\n> --- a/src/cmd/gc/dcl.c\r\n> +++ b/src/cmd/gc/dcl.c\r\n> @@ -1339,6 +1339,8 @@\r\n>         f = methtype(pa, 1);\r\n>         if(f == T) {\r\n>                 t = pa;\r\n> +               if(t == T) // rely on typecheck having complained before\r\n> +                       return;\r\n>                 if(t != T) {\r\n>                         if(isptr[t->etype]) {\r\n>                                 if(t->sym != S) {\r\n> @@ -1347,10 +1349,8 @@\r\n>                                 }\r\n>                                 t = t->type;\r\n>                         }\r\n> -               }\r\n> -               if(t->broke) // rely on typecheck having complained before\r\n> -                       return;\r\n> -               if(t != T) {\r\n> +                       if(t->broke) // rely on typecheck having complained\r\n> before\r\n> +                               return;\r\n>                         if(t->sym == S) {\r\n>                                 yyerror(\"invalid receiver type %T (%T is an\r\n> unnamed type)\", pa, t);\r\n>                                 return;\r\n> Index: src/cmd/gc/subr.c\r\n> ===================================================================\r\n> --- a/src/cmd/gc/subr.c\r\n> +++ b/src/cmd/gc/subr.c\r\n> @@ -714,6 +714,12 @@\r\n>\r\n>         a = *(Type**)va;\r\n>         b = *(Type**)vb;\r\n> +       if(a->sym == S && b->sym == S)\r\n> +               return 0;\r\n> +       if(a->sym == S)\r\n> +               return -1;\r\n> +       if(b->sym == S)\r\n> +               return 1;\r\n>         i = strcmp(a->sym->name, b->sym->name);\r\n>         if(i != 0)\r\n>                 return i;\r\n> @@ -1393,7 +1399,7 @@\r\n>         Node *r, *old;\r\n>         char *why;\r\n>\r\n> -       if(n == N || n->type == T)\r\n> +       if(n == N || n->type == T || n->type->broke)\r\n>                 return n;\r\n>\r\n>         old = n;\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-24 10:12:43.507010",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-24 09:52:50.145760",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "One small suggestion.\n\n@dmitry: I think we should try to address any complaint that the tools find, so that we can avoid being distracted by them later on.\n\nhttps://codereview.appspot.com/7838050/diff/5001/src/cmd/gc/dcl.c\nFile src/cmd/gc/dcl.c (right):\n\nhttps://codereview.appspot.com/7838050/diff/5001/src/cmd/gc/dcl.c#newcode1344\nsrc/cmd/gc/dcl.c:1344: if(t != T) {\nDo you need this check? The line above ensures if t == T 1344 won't be reached.",
			"disapproval": false,
			"date": "2013-03-25 02:49:42.099690",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 25, 2013 at 6:49 AM,  <dave@cheney.net> wrote:\r\n> One small suggestion.\r\n>\r\n> @dmitry: I think we should try to address any complaint that the tools\r\n> find, so that we can avoid being distracted by them later on.\r\n\r\nI think for ASan SIGSEGV complaining just must be turned off.\r\n",
			"disapproval": false,
			"date": "2013-03-25 04:05:36.060330",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nThe SIGSEGV handler is there to give a nicer error, but it's still good to\r\navoid nil derefs. Thanks.\r\n",
			"disapproval": false,
			"date": "2013-03-25 21:57:54.156180",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=924fbbd725d4 ***\n\ncmd/gc: fix nil pointer dereferences.\n\nFixes issue 5119.\n\nR=golang-dev, dvyukov, dave, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7838050",
			"disapproval": false,
			"date": "2013-03-26 07:20:17.063680",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 7838050: cmd/gc: fix nil pointer dereferences.",
	"created": "2013-03-24 09:51:50.420420",
	"patchsets": [
		1,
		2001,
		5001,
		12001
	],
	"modified": "2013-03-26 07:20:19.130010",
	"closed": true,
	"issue": 7838050
}