{
	"description": "go.tools/go/types: simplify handling of blank _ identifiers\n\nAlso: Fixes a couple of places where scopes instead\n      of objsets were used (missed in previous CL).",
	"cc": [
		"adonovan@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-24 18:36:53.906850",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11419047/diff/6001/go/types/api.go\nFile go/types/api.go (right):\n\nhttps://codereview.appspot.com/11419047/diff/6001/go/types/api.go#newcode91\ngo/types/api.go:91: // for each expression that is type-checked. Expressions corresponding\nOn 2013/07/24 19:01:11, adonovan wrote:\n> s/Expressions corresponding to identifiers on the lhs of a\n> declaration/Identifiers declaring a variable/\n\nDone.\n\nhttps://codereview.appspot.com/11419047/diff/6001/go/types/api.go#newcode115\ngo/types/api.go:115: //\t*ast.CaseClause    type-specific *Var introduced for each single-type type switch clause\nOn 2013/07/24 19:01:11, adonovan wrote:\n> s/each single-type type switch clause/each type-switch case clause, including\n> default/\n\nDone.\n\nhttps://codereview.appspot.com/11419047/diff/6001/go/types/objects.go\nFile go/types/objects.go (right):\n\nhttps://codereview.appspot.com/11419047/diff/6001/go/types/objects.go#newcode17\ngo/types/objects.go:17: // TODO(gri) Should Object.Parent() only be set it the parent actually contains the object? (not true for _ named objects)\nOn 2013/07/24 19:01:11, adonovan wrote:\n> IMHO better to set it always, since it's more regular and still provides useful\n> information.  The user should not be surprised that\n> obj.Parent().Lookup(obj.Name())==obj is not an invariant since Lookup(_) is\n> always nil.\n\nack",
			"disapproval": false,
			"date": "2013-07-24 19:38:08.347270",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nNice.\n\nhttps://codereview.appspot.com/11419047/diff/6001/go/types/api.go\nFile go/types/api.go (right):\n\nhttps://codereview.appspot.com/11419047/diff/6001/go/types/api.go#newcode91\ngo/types/api.go:91: // for each expression that is type-checked. Expressions corresponding\ns/Expressions corresponding to identifiers on the lhs of a declaration/Identifiers declaring a variable/\n\nhttps://codereview.appspot.com/11419047/diff/6001/go/types/api.go#newcode115\ngo/types/api.go:115: //\t*ast.CaseClause    type-specific *Var introduced for each single-type type switch clause\ns/each single-type type switch clause/each type-switch case clause, including default/\n\nhttps://codereview.appspot.com/11419047/diff/6001/go/types/objects.go\nFile go/types/objects.go (right):\n\nhttps://codereview.appspot.com/11419047/diff/6001/go/types/objects.go#newcode17\ngo/types/objects.go:17: // TODO(gri) Should Object.Parent() only be set it the parent actually contains the object? (not true for _ named objects)\nIMHO better to set it always, since it's more regular and still provides useful information.  The user should not be surprised that obj.Parent().Lookup(obj.Name())==obj is not an invariant since Lookup(_) is always nil.",
			"disapproval": false,
			"date": "2013-07-24 19:01:11.386600",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=76254f85f092&repo=tools ***\n\ngo.tools/go/types: simplify handling of blank _ identifiers\n\nAlso: Fixes a couple of places where scopes instead\n      of objsets were used (missed in previous CL).\n\nR=adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/11419047",
			"disapproval": false,
			"date": "2013-07-24 19:39:14.669490",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 11419047: go.tools/go/types: simplify handling of blank _ identifiers",
	"created": "2013-07-24 18:23:40.444060",
	"patchsets": [
		1,
		3001,
		6001,
		12001
	],
	"modified": "2013-07-24 19:39:15.972600",
	"closed": true,
	"issue": 11419047
}