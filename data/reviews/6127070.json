{
	"description": "exp/locale/collate: fixed two bugs uncovered by regression tests.\nThe first bug was that tertiary ignorables had the same colElem as\nimplicit colElems, yielding unexpected results. The current encoding\nensures that a non-implicit colElem is never 0.  This fix uncovered\nanother bug of the trie that indexed incorrectly into the null block.\nThis was caused by an unfinished optimization that would avoid the\nneed to max out the most-significant bits of continuation bytes.\nThis bug was also present in the trie used in exp/norm and has been\nfixed there as well. The appearence of the bug was rare, as the lower\nblocks happened to be nearly nil.",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-05-01 10:47:22.916575",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-05-02 11:16:20.425836",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=bc9a5c0eb13c ***\n\nexp/locale/collate: fixed two bugs uncovered by regression tests.\nThe first bug was that tertiary ignorables had the same colElem as\nimplicit colElems, yielding unexpected results. The current encoding\nensures that a non-implicit colElem is never 0.  This fix uncovered\nanother bug of the trie that indexed incorrectly into the null block.\nThis was caused by an unfinished optimization that would avoid the\nneed to max out the most-significant bits of continuation bytes.\nThis bug was also present in the trie used in exp/norm and has been\nfixed there as well. The appearence of the bug was rare, as the lower\nblocks happened to be nearly nil.\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/6127070",
			"disapproval": false,
			"date": "2012-05-02 15:01:47.077676",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 6127070: exp/locale/collate: fixed two bugs uncovered by regress...",
	"created": "2012-05-01 10:46:34.642611",
	"patchsets": [
		1,
		2001,
		2002,
		11001
	],
	"modified": "2012-05-02 15:01:48.982831",
	"closed": true,
	"issue": 6127070
}