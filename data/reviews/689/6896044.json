{
	"description": "go-tour: convert from HTML to present format\n\nThis makes it easier for us to maintain the tour, and puts the tour\nsample programs in individual go files that are compilable and\ntestable.\n\nThis also removes the code that shows content specific to the appengine\nor local versions, erring on the side of inclusivity. I intend to add\nsome more appengine-specific stuff in a followup CL.",
	"cc": [
		"campoy@google.com",
		"bradfitz@golang.org",
		"campoy@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go-tour",
			"disapproval": false,
			"date": "2012-12-21 00:51:04.287850",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "For the conversion tool, see this CL: https://codereview.appspot.com/7003043",
			"disapproval": false,
			"date": "2012-12-21 00:57:05.626110",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Added a couple of reviewers. Would love to get this done.",
			"disapproval": false,
			"date": "2013-01-08 23:52:32.535230",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2013-01-08 23:53:01.133910",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6896044/diff/27077/tour.article\nFile tour.article (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/tour.article#newcode14\ntour.article:14: \nI saw just another one and assumed it was something you could see around. Actually I could just find that other one. I put a comment on it.\n\nOn 2013/01/14 22:32:25, adg wrote:\n> On 2013/01/14 11:11:45, gocampoy wrote:\n> > Are these empty lines expected?\n> \n> when you say \"these\" are you referring to just this one, or are there others?\n> this one is an error, I can't see the others.\n\nhttps://codereview.appspot.com/6896044/diff/39001/tour.article\nFile tour.article (right):\n\nhttps://codereview.appspot.com/6896044/diff/39001/tour.article#newcode778\ntour.article:778: \nAnother example of the extra blank lines.",
			"disapproval": false,
			"date": "2013-01-14 23:03:19.549890",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6896044/diff/27077/gotour/tour.go\nFile gotour/tour.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/gotour/tour.go#newcode54\ngotour/tour.go:54: no = false\nbreak?\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/default-selection.go\nFile prog/default-selection.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/default-selection.go#newcode9\nprog/default-selection.go:9: tick := time.Tick(1e8)\nWe should use time.Milliseconds here\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/exercise-errors.go\nFile prog/exercise-errors.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/exercise-errors.go#newcode3\nprog/exercise-errors.go:3: import (\nNo need of parenthesis here\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/exercise-http-handlers.go\nFile prog/exercise-http-handlers.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/exercise-http-handlers.go#newcode3\nprog/exercise-http-handlers.go:3: import (\nNo need of parens\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/exercise-loops-and-functions.go\nFile prog/exercise-loops-and-functions.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/exercise-loops-and-functions.go#newcode3\nprog/exercise-loops-and-functions.go:3: import (\nNo need of parens\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/exercise-maps.go\nFile prog/exercise-maps.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/exercise-maps.go#newcode4\nprog/exercise-maps.go:4: \"code.google.com/p/go-tour/wc\"\nNo need of parens\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/exported-names.go\nFile prog/exported-names.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/exported-names.go#newcode9\nprog/exported-names.go:9: fmt.Println(math.pi)\nThis won't compile, which is exactly what the slide is about. But wouldn't it be better to write only programs that compile?\nMaybe we should comment this out?\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/for-is-gos-while.go\nFile prog/for-is-gos-while.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/for-is-gos-while.go#newcode7\nprog/for-is-gos-while.go:7: for sum < 1000 {\nThis and for-continued.go have exactly the same content. Is that intended?\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/goroutines.go\nFile prog/goroutines.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/goroutines.go#newcode10\nprog/goroutines.go:10: time.Sleep(100 * time.Millisecond)\nNo more explaining Gosched! Yay for that!\n\nBut, are we sure this will still print the hello and world in order?\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/range-and-close.go\nFile prog/range-and-close.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/prog/range-and-close.go#newcode17\nprog/range-and-close.go:17: c := make(chan int, 10)\nThis example would be clearer with an unbuffered chan\n\nhttps://codereview.appspot.com/6896044/diff/27077/tour.article\nFile tour.article (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/tour.article#newcode14\ntour.article:14: \nAre these empty lines expected?",
			"disapproval": false,
			"date": "2013-01-14 11:11:45.199910",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the review, but let's not change any of the tour content in this CL. That can happen in a follow-up change. All of the prog/ files are automatically generated by a conversion tool, and should be identical to the code samples in the existing tour.\n\nI'm going for as close to functionally identical in this CL; we can tidy up the content in a follow-up CL.\n\nhttps://codereview.appspot.com/6896044/diff/27077/gotour/tour.go\nFile gotour/tour.go (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/gotour/tour.go#newcode54\ngotour/tour.go:54: no = false\nOn 2013/01/14 11:11:45, gocampoy wrote:\n> break?\nreturned instead\n\nhttps://codereview.appspot.com/6896044/diff/27077/tour.article\nFile tour.article (right):\n\nhttps://codereview.appspot.com/6896044/diff/27077/tour.article#newcode14\ntour.article:14: \nOn 2013/01/14 11:11:45, gocampoy wrote:\n> Are these empty lines expected?\n\nwhen you say \"these\" are you referring to just this one, or are there others? this one is an error, I can't see the others.",
			"disapproval": false,
			"date": "2013-01-14 22:32:24.912380",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fair enough. I want to modify the tour with the feedback I'm getting from the life events, so I will do it myself later.\n\nOn 2013/01/14 22:32:24, adg wrote:\n> Thanks for the review, but let's not change any of the tour content in this CL.\n> That can happen in a follow-up change. All of the prog/ files are automatically\n> generated by a conversion tool, and should be identical to the code samples in\n> the existing tour.\n> \n> I'm going for as close to functionally identical in this CL; we can tidy up the\n> content in a follow-up CL.\n> \n> https://codereview.appspot.com/6896044/diff/27077/gotour/tour.go\n> File gotour/tour.go (right):\n> \n> https://codereview.appspot.com/6896044/diff/27077/gotour/tour.go#newcode54\n> gotour/tour.go:54: no = false\n> On 2013/01/14 11:11:45, gocampoy wrote:\n> > break?\n> returned instead\n> \n> https://codereview.appspot.com/6896044/diff/27077/tour.article\n> File tour.article (right):\n> \n> https://codereview.appspot.com/6896044/diff/27077/tour.article#newcode14\n> tour.article:14: \n> On 2013/01/14 11:11:45, gocampoy wrote:\n> > Are these empty lines expected?\n> \n> when you say \"these\" are you referring to just this one, or are there others?\n> this one is an error, I can't see the others.",
			"disapproval": false,
			"date": "2013-01-14 23:03:07.575790",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Anyone care to review this? It's not as big as it looks; just review the stuff outside of prog/.",
			"disapproval": false,
			"date": "2013-01-22 23:52:43.119240",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI did not look carefully at how you are parsing the templates. Is {/* ... */} your own kind of thing? I thought the template package used {{/* ... */}}.",
			"disapproval": false,
			"date": "2013-01-23 02:46:55.890550",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 23 January 2013 13:46, <rsc@golang.org> wrote:\r\n\r\n> I did not look carefully at how you are parsing the templates. Is {/*\r\n> ... */} your own kind of thing? I thought the template package used {{/*\r\n> ... */}}.\r\n>\r\n\r\nI just made a mistake.\r\n",
			"disapproval": false,
			"date": "2013-01-23 06:43:24.665230",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go-tour/source/detail?r=f2bc36ab9779 ***\n\ngo-tour: convert from HTML to present format\n\nThis makes it easier for us to maintain the tour, and puts the tour\nsample programs in individual go files that are compilable and\ntestable.\n\nThis also removes the code that shows content specific to the appengine\nor local versions, erring on the side of inclusivity. I intend to add\nsome more appengine-specific stuff in a followup CL.\n\nR=campoy, bradfitz, campoy, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/6896044",
			"disapproval": false,
			"date": "2013-01-23 06:39:34.191570",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 6896044: go-tour: convert from HTML to present format",
	"created": "2012-12-06 00:23:40.041130",
	"patchsets": [
		1,
		2001,
		5001,
		3,
		9001,
		10075,
		14001,
		17001,
		19074,
		24001,
		26076,
		28001,
		29078,
		27077,
		39001,
		44001,
		47001
	],
	"modified": "2013-01-23 06:39:34.191570",
	"closed": true,
	"issue": 6896044
}