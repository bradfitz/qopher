{
	"description": "gc: detect type switch variable not used cases.\n\nFixes issue 873\nFixes issue 2162",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-04 14:38:14.940269",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Fri, Nov 4, 2011 at 10:33,  <lvd@google.com> wrote:\n> done, although it's hard to see how l->n could be moved to the heap if\n> !l->n->used, so can't think of a unittest that i could break without it.\n\naha.  either way then.\nmaybe a comment.\n",
			"disapproval": false,
			"date": "2011-11-04 14:41:21.817591",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-04 13:41:01.892277",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "very nice\n\nhttp://codereview.appspot.com/5341043/diff/8001/src/cmd/gc/walk.c\nFile src/cmd/gc/walk.c (right):\n\nhttp://codereview.appspot.com/5341043/diff/8001/src/cmd/gc/walk.c#newcode85\nsrc/cmd/gc/walk.c:85: if(!nsyntaxerrors) {\nif nsyntaxerrors was true, how did we get here?\nThat's supposed to have bailed out long ago.\nIf this is possible, it seems like there's a bug somewhere else.\nIf this is necessary, please move to the top of this function:\n\n    if(nsyntaxerrors > 0)\n        return;\n\nBut I'd like to understand why.\n\nhttp://codereview.appspot.com/5341043/diff/8001/src/cmd/gc/walk.c#newcode87\nsrc/cmd/gc/walk.c:87: // to the NONAME in it's definition and back down to all instances again.\ns/ and back down.*//\n\nhttp://codereview.appspot.com/5341043/diff/8001/src/cmd/gc/walk.c#newcode93\nsrc/cmd/gc/walk.c:93: if(l->n->op != ONAME || l->n->class != PAUTO || l->n->sym->name[0] == '&' || l->n->used)\nneeds &~PHEAP ?",
			"disapproval": false,
			"date": "2011-11-04 13:50:20.683887",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "all done.\n\nalso fixed test/typeswitch2.go, albeit by redefining the language :-)\n\ni could not find in the spec that the init statement is in a scope enclosing the test expression in a typeswitch, and i think instead of erroring that the first t is unused, it's more useful to say that the second t is probably not what you mean.  it's a bit of a hairsplit, because in either case it's an error if the variables are identical and it doesn't matter if they're different .   from the point of the handling of := this is more consistent too, i think.  \n\nbut it's up to you.\n\nhttp://codereview.appspot.com/5341043/diff/8001/src/cmd/gc/walk.c\nFile src/cmd/gc/walk.c (right):\n\nhttp://codereview.appspot.com/5341043/diff/8001/src/cmd/gc/walk.c#newcode85\nsrc/cmd/gc/walk.c:85: if(!nsyntaxerrors) {\nOn 2011/11/04 13:50:21, rsc wrote:\n> if nsyntaxerrors was true, how did we get here?\n> That's supposed to have bailed out long ago.\n> If this is possible, it seems like there's a bug somewhere else.\n> If this is necessary, please move to the top of this function:\n> \n>     if(nsyntaxerrors > 0)\n>         return;\n> \n> But I'd like to understand why.\n\nturns out it can go\n\nhttp://codereview.appspot.com/5341043/diff/8001/src/cmd/gc/walk.c#newcode87\nsrc/cmd/gc/walk.c:87: // to the NONAME in it's definition and back down to all instances again.\nOn 2011/11/04 13:50:21, rsc wrote:\n> s/ and back down.*//\n\nDone.\n\nhttp://codereview.appspot.com/5341043/diff/8001/src/cmd/gc/walk.c#newcode93\nsrc/cmd/gc/walk.c:93: if(l->n->op != ONAME || l->n->class != PAUTO || l->n->sym->name[0] == '&' || l->n->used)\nOn 2011/11/04 13:50:21, rsc wrote:\n> needs &~PHEAP ?\n\ndone, although it's hard to see how l->n could be moved to the heap if !l->n->used, so can't think of a unittest that i could break without it.",
			"disapproval": false,
			"date": "2011-11-04 14:33:08.940898",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "all done.  running tests again and submitting\n\nhttp://codereview.appspot.com/5341043/diff/15001/src/cmd/gc/go.y\nFile src/cmd/gc/go.y (right):\n\nhttp://codereview.appspot.com/5341043/diff/15001/src/cmd/gc/go.y#newcode422\nsrc/cmd/gc/go.y:422: $$ = nod(OTYPESW, N, $3->n->right);\nOn 2011/11/04 15:54:33, rsc wrote:\n> delete blank lines around this statement?\n\nDone.\n\nhttp://codereview.appspot.com/5341043/diff/15001/src/cmd/gc/walk.c\nFile src/cmd/gc/walk.c (right):\n\nhttp://codereview.appspot.com/5341043/diff/15001/src/cmd/gc/walk.c#newcode98\nsrc/cmd/gc/walk.c:98: yyerror(\"type switch variable %S declared and not used\", l->n->sym);\nOn 2011/11/04 15:54:33, rsc wrote:\n> s/type switch variable // to match other message.\n\nDone.\n\nhttp://codereview.appspot.com/5341043/diff/15001/test/fixedbugs/bug309.go\nFile test/fixedbugs/bug309.go (right):\n\nhttp://codereview.appspot.com/5341043/diff/15001/test/fixedbugs/bug309.go#newcode18\ntest/fixedbugs/bug309.go:18: _ = v\nOn 2011/11/04 15:54:33, rsc wrote:\n> Please put the default: on the type switch, not the select.\n> I think the internal compiler error had something\n> to do with v not being used in this arm of the type switch.\n\nDone.",
			"disapproval": false,
			"date": "2011-11-04 15:57:47.559550",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=021b31d6d1e4 ***\n\ngc: detect type switch variable not used cases.\n\nFixes issue 873\nFixes issue 2162\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5341043",
			"disapproval": false,
			"date": "2011-11-04 16:03:56.883668",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "let's not redefine the language today.\n\nthe spec says\n\"The TypeSwitchGuard may include a short variable declaration. When\nthat form is used, the variable is declared in each clause.\"\nthe clauses are each in their own blocks.\nthus the t := 0 is in a different scope than the\nindividual t's in the blocks.\n",
			"disapproval": false,
			"date": "2011-11-04 14:40:52.013783",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nVery nice.\n\nhttp://codereview.appspot.com/5341043/diff/15001/src/cmd/gc/go.y\nFile src/cmd/gc/go.y (right):\n\nhttp://codereview.appspot.com/5341043/diff/15001/src/cmd/gc/go.y#newcode422\nsrc/cmd/gc/go.y:422: $$ = nod(OTYPESW, N, $3->n->right);\ndelete blank lines around this statement?\n\nhttp://codereview.appspot.com/5341043/diff/15001/src/cmd/gc/walk.c\nFile src/cmd/gc/walk.c (right):\n\nhttp://codereview.appspot.com/5341043/diff/15001/src/cmd/gc/walk.c#newcode98\nsrc/cmd/gc/walk.c:98: yyerror(\"type switch variable %S declared and not used\", l->n->sym);\ns/type switch variable // to match other message.\n\nhttp://codereview.appspot.com/5341043/diff/15001/test/fixedbugs/bug309.go\nFile test/fixedbugs/bug309.go (right):\n\nhttp://codereview.appspot.com/5341043/diff/15001/test/fixedbugs/bug309.go#newcode18\ntest/fixedbugs/bug309.go:18: _ = v\nPlease put the default: on the type switch, not the select.\nI think the internal compiler error had something\nto do with v not being used in this arm of the type switch.",
			"disapproval": false,
			"date": "2011-11-04 15:54:33.646950",
			"approval": true
		}
	],
	"owner_email": "lvd@google.com",
	"private": false,
	"base_url": "",
	"owner": "lvd",
	"subject": "code review 5341043: gc: detect type switch variable not used cases.",
	"created": "2011-11-04 10:54:41.577364",
	"patchsets": [
		1,
		2001,
		4001,
		7001,
		8001,
		11001,
		14,
		5006,
		15001,
		18001
	],
	"modified": "2011-11-04 16:03:57.748939",
	"closed": true,
	"issue": 5341043
}