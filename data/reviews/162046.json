{
	"description": "Added a method on UDPConn so they can actually send broadcast packets.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "runningwild@gmail.com",
			"recipients": [
				"runningwild@gmail.com",
				"r@golang.org",
				"gri@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r (cc: gri),\n\nI'd like you to review the following change.",
			"disapproval": false,
			"date": "2009-11-29 19:53:27.101920",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"runningwild@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Thanks.  Is there a reason to expose the method\ninstead of just always setting this flag?",
			"disapproval": false,
			"date": "2009-11-29 22:00:24.085030",
			"approval": false
		},
		{
			"sender": "runningwild@gmail.com",
			"recipients": [
				"runningwild@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2009/11/29 22:00:24, rsc wrote:\n> Thanks.  Is there a reason to expose the method\n> instead of just always setting this flag?\n\nNot sure.  I think it's considered a bit of a safety net to make sure that you don't accidentally start flooding your network with packets.  I suppose it's useful if you allow a user to enter an arbitrary address.  I don't mind changing it, I just want to be able to broadcast packets :)",
			"disapproval": false,
			"date": "2009-11-30 01:42:36.743982",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"runningwild@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Ok, let's just set it all the time and not expose the method.\nKeep the interface simple.\n\nThis is the same thing as in TCPConn: it sets NODELAY\nall the time, because no one ever wants delay.",
			"disapproval": false,
			"date": "2009-11-30 02:14:10.712188",
			"approval": false
		},
		{
			"sender": "runningwild@gmail.com",
			"recipients": [
				"runningwild@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2009/11/30 02:14:10, rsc wrote:\n> Ok, let's just set it all the time and not expose the method.\n> Keep the interface simple.\n> \n> This is the same thing as in TCPConn: it sets NODELAY\n> all the time, because no one ever wants delay.\n\nDone.",
			"disapproval": false,
			"date": "2009-11-30 06:00:03.137540",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"runningwild@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nThanks.  Could you please complete the CLA as\ndescribed at http://golang.org/doc/contribute.html#copyright ?\nDon't worry about preparing an AUTHORS/CONTRIBUTORS CL -\nwe'll make the file modifications - just let me know once\nyou've completed the agreement.\n\nThanks.",
			"disapproval": false,
			"date": "2009-11-30 18:45:55.230999",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"runningwild@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2009-12-02 09:06:53.284124",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"runningwild@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2009-12-02 09:52:58.143163",
			"approval": false
		},
		{
			"sender": "runningwild@gmail.com",
			"recipients": [
				"runningwild@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2009/11/30 18:45:55, rsc wrote:\n> LGTM\n> \n> Thanks.  Could you please complete the CLA as\n> described at http://golang.org/doc/contribute.html#copyright ?\n> Don't worry about preparing an AUTHORS/CONTRIBUTORS CL -\n> we'll make the file modifications - just let me know once\n> you've completed the agreement.\n> \n> Thanks.\n\nI've completed the agreement.",
			"disapproval": false,
			"date": "2009-11-30 19:02:09.580311",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"runningwild@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=14d035c58cdd ***\n\nAdded a method on UDPConn so they can actually send broadcast packets.\n\nR=rsc\nhttp://codereview.appspot.com/162046\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2009-11-30 20:03:59.760647",
			"approval": false
		}
	],
	"owner_email": "runningwild@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "runningwild",
	"subject": "code review 162046: Added a method on UDPConn so they can actually send bro...",
	"created": "2009-11-27 16:43:39.843971",
	"patchsets": [
		1,
		4,
		1007,
		12,
		13
	],
	"modified": "2009-12-02 09:52:58.143406",
	"closed": false,
	"issue": 162046
}