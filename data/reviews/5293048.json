{
	"description": "go spec: introduce rune type",
	"cc": [
		"r@golang.org",
		"iant@golang.org",
		"rsc@golang.org",
		"r@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-10-19 21:54:24.060105",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nOn Oct 19, 2011, at 2:41 PM, rsc@golang.org wrote:\n\n> \n> http://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html\n> File doc/go_spec.html (right):\n> \n> http://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode1501\n> doc/go_spec.html:1501: bool byte complex64 complex128 float32 float64\n> add rune\n> \n> http://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode1514\n> doc/go_spec.html:1514: append cap close complex copy imag len\n> add delete\n> \n> http://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode1797\n> doc/go_spec.html:1797: var r  = 'a'     // r  has type int\n> Is this a decision or a placeholder?\n> I don't feel strongly, but you seemed to be\n> leaning heavily toward 'a' being rune.\n\ni'd rather not mix the decision about the type of character constants into this discussion.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2011-10-19 21:43:03.940853",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode2\ndoc/go_spec.html:2: <!-- subtitle Version of October 19, 2011 -->\nchanged to presumed submission date 10/25\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode695\ndoc/go_spec.html:695: rune        alias for int\nOn 2011/10/19 20:49:13, iant wrote:\n> I'm not sure we should say that rune is an alias for int.  It is today, but in\n> the future it will be an alias for int32.  Can we just say that rune is an alias\n> for either int or int32?  Or should we add a note that it will change in the\n> future?\n\nDone.\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode695\ndoc/go_spec.html:695: rune        alias for int\nOn 2011/10/19 21:36:49, rsc wrote:\n> On 2011/10/19 20:49:13, iant wrote:\n> > I'm not sure we should say that rune is an alias for int.  It is today, but in\n> > the future it will be an alias for int32.  Can we just say that rune is an\n> alias\n> > for either int or int32?  Or should we add a note that it will change in the\n> > future?\n> \n> I think we should say that it will change in the future to int32.\n> The long term plan is that there be just one definition.\n\nDone.\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode715\ndoc/go_spec.html:715: <code>byte</code> and <code>rune</code>, which are an aliases for\nOn 2011/10/19 20:49:13, iant wrote:\n> s/an //\n\nDone.\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode3375\ndoc/go_spec.html:3375: the equivalent <code>[]int</code>) to a string type yields a\nOn 2011/10/19 20:49:13, iant wrote:\n> In the future we plan to remove the conversion to []int, so I'm not sure it\n> should be mentioned here.\n\nDone.\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode3375\ndoc/go_spec.html:3375: the equivalent <code>[]int</code>) to a string type yields a\nOn 2011/10/19 21:36:49, rsc wrote:\n> On 2011/10/19 20:49:13, iant wrote:\n> > In the future we plan to remove the conversion to []int, so I'm not sure it\n> > should be mentioned here.\n> \n> Agreed.\n\nDone.\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode3396\ndoc/go_spec.html:3396: Converting a value of a string type to <code>[]rune</code> (or <code>[]int</code>)\nOn 2011/10/19 21:36:49, rsc wrote:\n> On 2011/10/19 20:49:13, iant wrote:\n> > Again I think we should drop the mention of []int.\n> \n> Agreed.\n\nDone.\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode3396\ndoc/go_spec.html:3396: Converting a value of a string type to <code>[]rune</code> (or <code>[]int</code>)\nOn 2011/10/19 20:49:13, iant wrote:\n> Again I think we should drop the mention of []int.\n\nDone.",
			"disapproval": false,
			"date": "2011-10-19 21:44:16.371643",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5293048/diff/13001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5293048/diff/13001/doc/go_spec.html#newcode717\ndoc/go_spec.html:717: future), respectively.\nOn 2011/10/19 21:59:02, r wrote:\n> To avoid portability issues, all numeric types are distinct except byte, which\n> is an alias for uint8, and rune, which is an alias for int (to become int32 in a\n> later version of Go).\n\nDone.",
			"disapproval": false,
			"date": "2011-10-19 22:02:08.022948",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-19 20:42:39.843506",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode695\ndoc/go_spec.html:695: rune        alias for int\nI'm not sure we should say that rune is an alias for int.  It is today, but in the future it will be an alias for int32.  Can we just say that rune is an alias for either int or int32?  Or should we add a note that it will change in the future?\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode715\ndoc/go_spec.html:715: <code>byte</code> and <code>rune</code>, which are an aliases for\ns/an //\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode3375\ndoc/go_spec.html:3375: the equivalent <code>[]int</code>) to a string type yields a\nIn the future we plan to remove the conversion to []int, so I'm not sure it should be mentioned here.\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode3396\ndoc/go_spec.html:3396: Converting a value of a string type to <code>[]rune</code> (or <code>[]int</code>)\nAgain I think we should drop the mention of []int.",
			"disapproval": false,
			"date": "2011-10-19 20:49:13.101129",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode1501\ndoc/go_spec.html:1501: bool byte complex64 complex128 float32 float64\nadd rune\n\nhttp://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode1514\ndoc/go_spec.html:1514: append cap close complex copy imag len\nadd delete\n\nhttp://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode1797\ndoc/go_spec.html:1797: var r  = 'a'     // r  has type int\nIs this a decision or a placeholder?\nI don't feel strongly, but you seemed to be\nleaning heavily toward 'a' being rune.\n\nhttp://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode3400\ndoc/go_spec.html:3400: []int(MyString(\"\u767d\u9d6c\u7fd4\"))  // []int{0x767d, 0x9d6c, 0x7fd4}\ns/int/rune/g",
			"disapproval": false,
			"date": "2011-10-19 21:41:53.597472",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode1501\ndoc/go_spec.html:1501: bool byte complex64 complex128 float32 float64\nOn 2011/10/19 21:41:53, rsc wrote:\n> add rune\n\nDone.\n\nhttp://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode1514\ndoc/go_spec.html:1514: append cap close complex copy imag len\nOn 2011/10/19 21:41:53, rsc wrote:\n> add delete\n\nDone.\n\nhttp://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode1797\ndoc/go_spec.html:1797: var r  = 'a'     // r  has type int\nOn 2011/10/19 21:41:53, rsc wrote:\n> Is this a decision or a placeholder?\n> I don't feel strongly, but you seemed to be\n> leaning heavily toward 'a' being rune.\n\nI think this is an independent change and doesn't have to be done now. However, the advantage of doing it now would be that it could be done w/o having an effect (since rune == int).\n\nI just added an example to illustrate the status quo (unchanged). Happy to remove it. Opinions?\n\nhttp://codereview.appspot.com/5293048/diff/9002/doc/go_spec.html#newcode3400\ndoc/go_spec.html:3400: []int(MyString(\"\u767d\u9d6c\u7fd4\"))  // []int{0x767d, 0x9d6c, 0x7fd4}\nOn 2011/10/19 21:41:53, rsc wrote:\n> s/int/rune/g\n\nDone.",
			"disapproval": false,
			"date": "2011-10-19 21:52:45.712924",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode695\ndoc/go_spec.html:695: rune        alias for int\nOn 2011/10/19 20:49:13, iant wrote:\n> I'm not sure we should say that rune is an alias for int.  It is today, but in\n> the future it will be an alias for int32.  Can we just say that rune is an alias\n> for either int or int32?  Or should we add a note that it will change in the\n> future?\n\nI think we should say that it will change in the future to int32.\nThe long term plan is that there be just one definition.\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode3375\ndoc/go_spec.html:3375: the equivalent <code>[]int</code>) to a string type yields a\nOn 2011/10/19 20:49:13, iant wrote:\n> In the future we plan to remove the conversion to []int, so I'm not sure it\n> should be mentioned here.\n\nAgreed.\n\nhttp://codereview.appspot.com/5293048/diff/8001/doc/go_spec.html#newcode3396\ndoc/go_spec.html:3396: Converting a value of a string type to <code>[]rune</code> (or <code>[]int</code>)\nOn 2011/10/19 20:49:13, iant wrote:\n> Again I think we should drop the mention of []int.\n\nAgreed.",
			"disapproval": false,
			"date": "2011-10-19 21:36:49.429760",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nBut please leave unsubmitted.  We'll clpatch+submit\nwhen we do the big push next week.",
			"disapproval": false,
			"date": "2011-10-19 21:52:08.918614",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5293048/diff/13001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5293048/diff/13001/doc/go_spec.html#newcode717\ndoc/go_spec.html:717: future), respectively.\nTo avoid portability issues, all numeric types are distinct except byte, which is an alias for uint8, and rune, which is an alias for int (to become int32 in a later version of Go).",
			"disapproval": false,
			"date": "2011-10-19 21:59:01.979105",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b950f41f4326 ***\n\ngo spec: introduce rune type\n\nR=r, iant, rsc, r\nCC=golang-dev\nhttp://codereview.appspot.com/5293048\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-11-01 05:09:27.836664",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5293048: go spec: introduce rune type",
	"created": "2011-10-19 18:44:57.319696",
	"patchsets": [
		1,
		2001,
		5001,
		2002,
		8001,
		9002,
		9003,
		10004,
		13001,
		16001
	],
	"modified": "2011-11-18 19:37:40.128813",
	"closed": true,
	"issue": 5293048
}