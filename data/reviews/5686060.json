{
	"description": "ld: add NOPTRBSS for large, pointer-free uninitialized data\ncc: add #pragma textflag to set it\nruntime: mark mheap to go into noptr-bss.\n        remove special case in garbage collector\n\nRemove the ARM from.flag field created by CL 5687044.\nThe DUPOK flag was already in p->reg, so keep using that.\n\nOtherwise test/nilptr.go creates a very large binary.\nShould fix the arm build.\nDiagnosed by minux.ma; replacement for CL 5690044.",
	"cc": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=dd834d2b760d ***\n\nld: add NOPTRBSS for large, pointer-free uninitialized data\ncc: add #pragma textflag to set it\nruntime: mark mheap to go into noptr-bss.\n        remove special case in garbage collector\n\nRemove the ARM from.flag field created by CL 5687044.\nThe DUPOK flag was already in p->reg, so keep using that.\n\nOtherwise test/nilptr.go creates a very large binary.\nShould fix the arm build.\nDiagnosed by minux.ma; replacement for CL 5690044.\n\nR=golang-dev, minux.ma, r\nCC=golang-dev\nhttp://codereview.appspot.com/5686060",
			"disapproval": false,
			"date": "2012-02-22 03:08:46.187261",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-21 21:42:08.147158",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Testing on arm builder results in:\ntype..eq.runtime._complex128: redefinition: runtime.sizeof_C_MStats\n(435) GLOBL.EQ runtime.sizeof_C_MStats+0(SB),$GOK-name(0)(R0)\ntype..eq.runtime._complex128: redefinition: runtime.algarray\n(1203) GLOBL.EQ runtime.algarray+0(SB),R0,$GOK-name(0)(R0)\ngo tool dist: FAILED:\n/home/minux/work2/tmp/gobuilder/test/pkg/tool/linux_arm/5l -o\n/home/minux/work2/tmp/gobuilder/test/pkg/tool/linux_arm/go_bootstrap\n$WORK/_go_.5\n",
			"disapproval": false,
			"date": "2012-02-21 22:13:33.423411",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "That's weird.  I did a full cross-compile build without problems.\nI will try again.\n",
			"disapproval": false,
			"date": "2012-02-21 22:29:55.746896",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nmakes sense to me, although i bet it will cause problems on some kernels just because\n\nhttp://codereview.appspot.com/5686060/diff/5001/src/cmd/cc/dpchk.c\nFile src/cmd/cc/dpchk.c (right):\n\nhttp://codereview.appspot.com/5686060/diff/5001/src/cmd/cc/dpchk.c#newcode581\nsrc/cmd/cc/dpchk.c:581: while(getnsc() != '\\n')\ncan you get EOF or something infinitely looping here?",
			"disapproval": false,
			"date": "2012-02-21 23:23:50.606814",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5686060/diff/5001/src/cmd/cc/lexbody\nFile src/cmd/cc/lexbody (right):\n\nhttp://codereview.appspot.com/5686060/diff/5001/src/cmd/cc/lexbody#newcode80\nsrc/cmd/cc/lexbody:80: while(getnsc() != '\\n')\nditto",
			"disapproval": false,
			"date": "2012-02-21 23:24:11.724731",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 21, 2012 at 18:23,  <r@golang.org> wrote:\n> can you get EOF or something infinitely looping here?\n\nprobably, but these are all over the place.  not for this CL.\n",
			"disapproval": false,
			"date": "2012-02-22 03:05:26.439109",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 21, 2012 at 17:13, minux <minux.ma@gmail.com> wrote:\n> Testing on arm builder results in:\n> type..eq.runtime._complex128: redefinition: runtime.sizeof_C_MStats\n> (435) GLOBL.EQ runtime.sizeof_C_MStats+0(SB),$GOK-name(0)(R0)\n> type..eq.runtime._complex128: redefinition: runtime.algarray\n> (1203) GLOBL.EQ runtime.algarray+0(SB),R0,$GOK-name(0)(R0)\n> go tool dist: FAILED:\n> /home/minux/work2/tmp/gobuilder/test/pkg/tool/linux_arm/5l -o\n> /home/minux/work2/tmp/gobuilder/test/pkg/tool/linux_arm/go_bootstrap\n> $WORK/_go_.5\n\ni can't reproduce this with a cross-build.\ni am going to submit this and debug on the builder if necessary.\n",
			"disapproval": false,
			"date": "2012-02-22 03:08:25.881377",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5686060: ld: add NOPTRBSS for large, pointer-free uninitialized data",
	"created": "2012-02-21 20:44:54.159444",
	"patchsets": [
		1,
		2001,
		1002,
		5001,
		2030
	],
	"modified": "2012-02-22 03:08:46.957719",
	"closed": true,
	"issue": 5686060
}