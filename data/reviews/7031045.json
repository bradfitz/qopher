{
	"description": "net/http: make NewRequest pick a ContentLength from a *bytes.Reader too\n\nIt already did so for its sibling, *strings.Reader, as well as *bytes.Buffer.",
	"cc": [
		"edsrzf@gmail.com",
		"dave@cheney.net",
		"adg@golang.org",
		"kevlar@google.com",
		"remyoudompheng@gmail.com",
		"adg@google.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"edsrzf@gmail.com",
				"dave@cheney.net",
				"adg@golang.org",
				"kevlar@google.com",
				"remyoudompheng@gmail.com",
				"adg@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-02 22:34:40.495170",
			"approval": true
		},
		{
			"sender": "kevlar@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "For what it's worth, I would actually be in favor of checking for Len() and\r\nusing that and documenting it.  It seems like it could be a very useful\r\nfeature to provide.  I may be naive, but it seems like most things\r\nimplementing interface { io.Reader; Len() int } will have the behavior we\r\nwant.\r\n\r\n\r\nOn Tue, Jan 1, 2013 at 7:13 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> Snap, I was just about to suggest this\r\n>\r\n>         type lengther interface {\r\n>                 Len() int\r\n>         }\r\n>         if body, ok := body.(lengther); ok && body != nil {\r\n>                 req.ContentLength = int64(body.Len())\r\n>         }\r\n>\r\n> On Wed, Jan 2, 2013 at 2:10 PM,  <edsrzf@gmail.com> wrote:\r\n> > Might it be worth defining an interface with a Len method to pick up all\r\n> > three of these cases plus more? And document it of course.\r\n> >\r\n> > https://codereview.appspot.com/7031045/\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-02 07:26:07.459890",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Snap, I was just about to suggest this\r\n\r\n        type lengther interface {\r\n                Len() int\r\n        }\r\n        if body, ok := body.(lengther); ok && body != nil {\r\n                req.ContentLength = int64(body.Len())\r\n        }\r\n\r\nOn Wed, Jan 2, 2013 at 2:10 PM,  <edsrzf@gmail.com> wrote:\r\n> Might it be worth defining an interface with a Len method to pick up all\r\n> three of these cases plus more? And document it of course.\r\n>\r\n> https://codereview.appspot.com/7031045/\r\n",
			"disapproval": false,
			"date": "2013-01-02 03:13:16.753270",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"edsrzf@gmail.com",
				"dave@cheney.net",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-02 04:15:59.054090",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 2, 2013 at 6:29 AM, R\u00e9my Oudompheng <remyoudompheng@gmail.com>wrote:\r\n\r\n> Does io.sectionReader also fit the scheme?\r\n>\r\n\r\nyes, done.  Let's keep this to just common types in the stdlib.\r\n io.SectionReader qualifies.\r\n\r\nPTAL.  Has tests now too.\r\n",
			"disapproval": false,
			"date": "2013-01-02 19:33:39.331290",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-01-02 02:49:57.955030",
			"approval": false
		},
		{
			"sender": "adg@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "What if the SectionReader has been Read from or Seeked, will Size still be\r\naccurate? Seems like the odd one out to me.\r\nOn 3 Jan 2013 06:33, \"Brad Fitzpatrick\" <bradfitz@golang.org> wrote:\r\n\r\n>\r\n>\r\n> On Wed, Jan 2, 2013 at 6:29 AM, R\u00e9my Oudompheng <remyoudompheng@gmail.com>wrote:\r\n>\r\n>> Does io.sectionReader also fit the scheme?\r\n>>\r\n>\r\n> yes, done.  Let's keep this to just common types in the stdlib.\r\n>  io.SectionReader qualifies.\r\n>\r\n> PTAL.  Has tests now too.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-02 22:08:50.627380",
			"approval": false
		},
		{
			"sender": "edsrzf@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"edsrzf@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Might it be worth defining an interface with a Len method to pick up all three of these cases plus more? And document it of course.",
			"disapproval": false,
			"date": "2013-01-02 03:10:23.621810",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fair enough, I guess if it is only three cases then that probably tips\r\nthe scale on the side of less magic. Would it be possible to add a\r\ntest for the three supported types, and possibly one unsupported one ?\r\n\r\nOn Wed, Jan 2, 2013 at 2:12 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> Maybe, but then we have to worry about false matches, and we have to\r\n> document more.\r\n>\r\n> This version, otoh, requires no fear or new docs.  It just completes the\r\n> set.\r\n>\r\n>\r\n> On Tue, Jan 1, 2013 at 7:10 PM, <edsrzf@gmail.com> wrote:\r\n>>\r\n>> Might it be worth defining an interface with a Len method to pick up all\r\n>> three of these cases plus more? And document it of course.\r\n>>\r\n>> https://codereview.appspot.com/7031045/\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-02 03:14:31.798960",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Maybe, but then we have to worry about false matches, and we have to\r\ndocument more.\r\n\r\nThis version, otoh, requires no fear or new docs.  It just completes the\r\nset.\r\n\r\n\r\nOn Tue, Jan 1, 2013 at 7:10 PM, <edsrzf@gmail.com> wrote:\r\n\r\n> Might it be worth defining an interface with a Len method to pick up all\r\n> three of these cases plus more? And document it of course.\r\n>\r\n> https://codereview.appspot.**com/7031045/<https://codereview.appspot.com/7031045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-02 03:12:05.381930",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "oh, good catch.  I thought Size was size remaining, but guess not, and I\r\nhad no test for that. Removed it for now. PTAL. I'll let other apply the\r\nrest of the paint in future CLs.\r\n\r\nOn Wed, Jan 2, 2013 at 2:08 PM, Andrew Gerrand <adg@google.com> wrote:\r\n\r\n> What if the SectionReader has been Read from or Seeked, will Size still be\r\n> accurate? Seems like the odd one out to me.\r\n> On 3 Jan 2013 06:33, \"Brad Fitzpatrick\" <bradfitz@golang.org> wrote:\r\n>\r\n>>\r\n>>\r\n>> On Wed, Jan 2, 2013 at 6:29 AM, R\u00e9my Oudompheng <remyoudompheng@gmail.com\r\n>> > wrote:\r\n>>\r\n>>> Does io.sectionReader also fit the scheme?\r\n>>>\r\n>>\r\n>> yes, done.  Let's keep this to just common types in the stdlib.\r\n>>  io.SectionReader qualifies.\r\n>>\r\n>> PTAL.  Has tests now too.\r\n>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-02 22:27:51.384710",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> For what it's worth, I would actually be in favor of checking for Len() and\r\n> using that and documenting it.  It seems like it could be a very useful\r\n> feature to provide.  I may be naive, but it seems like most things\r\n> implementing interface { io.Reader; Len() int } will have the behavior we\r\n> want.\r\n\r\nYeah, I'd like to see that too. It feels like the Go way.\r\n",
			"disapproval": false,
			"date": "2013-01-02 07:35:39.886150",
			"approval": false
		},
		{
			"sender": "kevlar@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 2, 2013 at 6:29 AM, R\u00e9my Oudompheng <remyoudompheng@gmail.com>wrote:\r\n\r\n> Does io.sectionReader also fit the scheme?\r\n>\r\n\r\nI was contemplating whether Size() and/or Seek would be reasonable to\r\ncheck, but I think Len() is a closer analogue to Content-Length.  The\r\nwrapper around an os.File or an io.SectionReader would be pretty simple.\r\n\r\n\r\n> R\u00e9my.\r\n>\r\n> 2013/1/2, Kyle Lemons <kevlar@google.com>:\r\n> > For what it's worth, I would actually be in favor of checking for Len()\r\n> and\r\n> > using that and documenting it.  It seems like it could be a very useful\r\n> > feature to provide.  I may be naive, but it seems like most things\r\n> > implementing interface { io.Reader; Len() int } will have the behavior we\r\n> > want.\r\n> >\r\n> >\r\n> > On Tue, Jan 1, 2013 at 7:13 PM, Dave Cheney <dave@cheney.net> wrote:\r\n> >\r\n> >> Snap, I was just about to suggest this\r\n> >>\r\n> >>         type lengther interface {\r\n> >>                 Len() int\r\n> >>         }\r\n> >>         if body, ok := body.(lengther); ok && body != nil {\r\n> >>                 req.ContentLength = int64(body.Len())\r\n> >>         }\r\n> >>\r\n> >> On Wed, Jan 2, 2013 at 2:10 PM,  <edsrzf@gmail.com> wrote:\r\n> >> > Might it be worth defining an interface with a Len method to pick up\r\n> >> > all\r\n> >> > three of these cases plus more? And document it of course.\r\n> >> >\r\n> >> > https://codereview.appspot.com/7031045/\r\n> >>\r\n> >\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-02 19:22:09.309000",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Does io.sectionReader also fit the scheme?\r\n\r\nR\u00e9my.\r\n\r\n2013/1/2, Kyle Lemons <kevlar@google.com>:\r\n> For what it's worth, I would actually be in favor of checking for Len() and\r\n> using that and documenting it.  It seems like it could be a very useful\r\n> feature to provide.  I may be naive, but it seems like most things\r\n> implementing interface { io.Reader; Len() int } will have the behavior we\r\n> want.\r\n>\r\n>\r\n> On Tue, Jan 1, 2013 at 7:13 PM, Dave Cheney <dave@cheney.net> wrote:\r\n>\r\n>> Snap, I was just about to suggest this\r\n>>\r\n>>         type lengther interface {\r\n>>                 Len() int\r\n>>         }\r\n>>         if body, ok := body.(lengther); ok && body != nil {\r\n>>                 req.ContentLength = int64(body.Len())\r\n>>         }\r\n>>\r\n>> On Wed, Jan 2, 2013 at 2:10 PM,  <edsrzf@gmail.com> wrote:\r\n>> > Might it be worth defining an interface with a Len method to pick up\r\n>> > all\r\n>> > three of these cases plus more? And document it of course.\r\n>> >\r\n>> > https://codereview.appspot.com/7031045/\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-02 14:29:11.882900",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"edsrzf@gmail.com",
				"dave@cheney.net",
				"adg@golang.org",
				"kevlar@google.com",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, edsrzf@gmail.com, dave@cheney.net, adg@golang.org, kevlar@google.com, remyoudompheng@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-02 19:33:03.361530",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"edsrzf@gmail.com",
				"dave@cheney.net",
				"adg@golang.org",
				"kevlar@google.com",
				"remyoudompheng@gmail.com",
				"adg@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, edsrzf@gmail.com, dave@cheney.net, adg@golang.org, kevlar@google.com, remyoudompheng@gmail.com, adg@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-02 22:28:09.609090",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"edsrzf@gmail.com",
				"dave@cheney.net",
				"adg@golang.org",
				"kevlar@google.com",
				"remyoudompheng@gmail.com",
				"adg@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=84a2c61092a9 ***\n\nnet/http: make NewRequest pick a ContentLength from a *bytes.Reader too\n\nIt already did so for its sibling, *strings.Reader, as well as *bytes.Buffer.\n\nR=edsrzf, dave, adg, kevlar, remyoudompheng, adg, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7031045",
			"disapproval": false,
			"date": "2013-01-02 22:40:27.433480",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 7031045: net/http: make NewRequest pick a ContentLength from a *...",
	"created": "2013-01-02 02:49:38.961170",
	"patchsets": [
		1,
		2001,
		5001,
		2003,
		13001,
		1003
	],
	"modified": "2013-01-02 22:40:29.530290",
	"closed": true,
	"issue": 7031045
}