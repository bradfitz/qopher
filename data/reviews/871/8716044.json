{
	"description": "cmd/ld: always do external link for -linkmode=external\n\nThere are tests in run.bash for -linkmode=external.\n\nFixes issue 5238.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"remyoudompheng@gmail.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't understand this part of the commit descriptionn: \"There are tests\r\nin run.bash for -linkmode=external.\"\r\n\r\nIf there are already tests, why is the dashboard not failing?  Are the\r\ntests not run?\r\n\r\n\r\nOn Fri, Apr 12, 2013 at 11:29 AM, <iant@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> cmd/ld: always do external link for -linkmode=external\r\n>\r\n> There are tests in run.bash for -linkmode=external.\r\n>\r\n> Fixes issue 5238.\r\n>\r\n> Please review this at https://codereview.appspot.**com/8716044/<https://codereview.appspot.com/8716044/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/ld/lib.c\r\n>\r\n>\r\n> Index: src/cmd/ld/lib.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/ld/lib.c\r\n> +++ b/src/cmd/ld/lib.c\r\n> @@ -45,6 +45,10 @@\r\n>  static int     maxlibdir = 0;\r\n>  static int     cout = -1;\r\n>\r\n> +// Set if we see an object compiled by the host compiler that is not\r\n> +// from a package that is known to support internal linking mode.\r\n> +static int     externalobj = 0;\r\n> +\r\n>  static void    hostlinksetup(void);\r\n>\r\n>  char*  goroot;\r\n> @@ -295,6 +299,19 @@\r\n>                 loadinternal(\"math\");\r\n>         if(flag_race)\r\n>                 loadinternal(\"runtime/race\");\r\n> +       if(linkmode == LinkExternal) {\r\n> +               // This indicates a user requested -linkmode=external.\r\n> +               // The startup code uses an import of runtime/cgo to decide\r\n> +               // whether to initialize the TLS.  So give it one.  This\r\n> could\r\n> +               // be handled differently but it's an unusual case.\r\n> +               loadinternal(\"runtime/cgo\");\r\n> +               // Pretend that we really imported the package.\r\n> +               // This will do no harm if we did in fact import it.\r\n> +               s = lookup(\"go.importpath.runtime/**cgo.\", 0);\r\n> +               s->type = SDATA;\r\n> +               s->dupok = 1;\r\n> +               s->reachable = 1;\r\n> +       }\r\n>\r\n>         for(i=0; i<libraryp; i++) {\r\n>                 if(debug['v'])\r\n> @@ -303,14 +320,11 @@\r\n>                 objfile(library[i].file, library[i].pkg);\r\n>         }\r\n>\r\n> -       if(linkmode == LinkExternal && !iscgo)\r\n> -               linkmode = LinkInternal;\r\n> -\r\n> -       // If we got this far in automatic mode, there were no\r\n> -       // cgo uses that suggest we need external mode.\r\n> -       // Switch to internal.\r\n>         if(linkmode == LinkAuto) {\r\n> -               linkmode = LinkInternal;\r\n> +               if(iscgo && externalobj)\r\n> +                       linkmode = LinkExternal;\r\n> +               else\r\n> +                       linkmode = LinkInternal;\r\n>         }\r\n>\r\n>         if(linkmode == LinkInternal) {\r\n> @@ -532,8 +546,8 @@\r\n>                 }\r\n>         }\r\n>\r\n> -       if(!isinternal && linkmode == LinkAuto)\r\n> -               linkmode = LinkExternal;\r\n> +       if(!isinternal)\r\n> +               externalobj = 1;\r\n>\r\n>         if(nhostobj >= mhostobj) {\r\n>                 if(mhostobj == 0)\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-12 18:40:20.729750",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-04-12 18:29:42.593530",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The test for linkmode=external tests that it is not broken, but not\r\nthat it is indeed externally linked.\r\n\r\n2013/4/12 Brad Fitzpatrick <bradfitz@golang.org>:\r\n> I don't understand this part of the commit descriptionn: \"There are tests in\r\n> run.bash for -linkmode=external.\"\r\n>\r\n> If there are already tests, why is the dashboard not failing?  Are the tests\r\n> not run?\r\n>\r\n>\r\n> On Fri, Apr 12, 2013 at 11:29 AM, <iant@golang.org> wrote:\r\n>>\r\n>> Reviewers: golang-dev1,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com,\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://go.googlecode.com/hg/\r\n>>\r\n>>\r\n>> Description:\r\n>> cmd/ld: always do external link for -linkmode=external\r\n>>\r\n>> There are tests in run.bash for -linkmode=external.\r\n>>\r\n>> Fixes issue 5238.\r\n>>\r\n>> Please review this at https://codereview.appspot.com/8716044/\r\n>>\r\n>> Affected files:\r\n>>   M src/cmd/ld/lib.c\r\n>>\r\n>>\r\n>> Index: src/cmd/ld/lib.c\r\n>> ===================================================================\r\n>> --- a/src/cmd/ld/lib.c\r\n>> +++ b/src/cmd/ld/lib.c\r\n>> @@ -45,6 +45,10 @@\r\n>>  static int     maxlibdir = 0;\r\n>>  static int     cout = -1;\r\n>>\r\n>> +// Set if we see an object compiled by the host compiler that is not\r\n>> +// from a package that is known to support internal linking mode.\r\n>> +static int     externalobj = 0;\r\n>> +\r\n>>  static void    hostlinksetup(void);\r\n>>\r\n>>  char*  goroot;\r\n>> @@ -295,6 +299,19 @@\r\n>>                 loadinternal(\"math\");\r\n>>         if(flag_race)\r\n>>                 loadinternal(\"runtime/race\");\r\n>> +       if(linkmode == LinkExternal) {\r\n>> +               // This indicates a user requested -linkmode=external.\r\n>> +               // The startup code uses an import of runtime/cgo to\r\n>> decide\r\n>> +               // whether to initialize the TLS.  So give it one.  This\r\n>> could\r\n>> +               // be handled differently but it's an unusual case.\r\n>> +               loadinternal(\"runtime/cgo\");\r\n>> +               // Pretend that we really imported the package.\r\n>> +               // This will do no harm if we did in fact import it.\r\n>> +               s = lookup(\"go.importpath.runtime/cgo.\", 0);\r\n>> +               s->type = SDATA;\r\n>> +               s->dupok = 1;\r\n>> +               s->reachable = 1;\r\n>> +       }\r\n>>\r\n>>         for(i=0; i<libraryp; i++) {\r\n>>                 if(debug['v'])\r\n>> @@ -303,14 +320,11 @@\r\n>>                 objfile(library[i].file, library[i].pkg);\r\n>>         }\r\n>>\r\n>> -       if(linkmode == LinkExternal && !iscgo)\r\n>> -               linkmode = LinkInternal;\r\n>> -\r\n>> -       // If we got this far in automatic mode, there were no\r\n>> -       // cgo uses that suggest we need external mode.\r\n>> -       // Switch to internal.\r\n>>         if(linkmode == LinkAuto) {\r\n>> -               linkmode = LinkInternal;\r\n>> +               if(iscgo && externalobj)\r\n>> +                       linkmode = LinkExternal;\r\n>> +               else\r\n>> +                       linkmode = LinkInternal;\r\n>>         }\r\n>>\r\n>>         if(linkmode == LinkInternal) {\r\n>> @@ -532,8 +546,8 @@\r\n>>                 }\r\n>>         }\r\n>>\r\n>> -       if(!isinternal && linkmode == LinkAuto)\r\n>> -               linkmode = LinkExternal;\r\n>> +       if(!isinternal)\r\n>> +               externalobj = 1;\r\n>>\r\n>>         if(nhostobj >= mhostobj) {\r\n>>                 if(mhostobj == 0)\r\n>>\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@googlegroups.com.\r\n>> For more options, visit https://groups.google.com/groups/opt_out.\r\n>>\r\n>>\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-12 18:42:28.872140",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Apr 12, 2013 at 11:40 AM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> I don't understand this part of the commit descriptionn: \"There are tests in\r\n> run.bash for -linkmode=external.\"\r\n>\r\n> If there are already tests, why is the dashboard not failing?  Are the tests\r\n> not run?\r\n\r\nThe tests are run.  This is a slight change to the way that\r\n-linkmode=external works: it is now always run even if runtime/cgo is\r\nnot imported.  I meant to imply that this CL is OK because the tests\r\ncontinue to pass.\r\n\r\nThe effect of this change is to ensure that the external linker is\r\nused; I'm not sure how to test that specifically.\r\n",
			"disapproval": false,
			"date": "2013-04-12 18:51:12.011440",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM i think",
			"disapproval": false,
			"date": "2013-04-12 18:51:22.886380",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=54957b8906eb ***\n\ncmd/ld: always do external link for -linkmode=external\n\nThere are tests in run.bash for -linkmode=external.\n\nFixes issue 5238.\n\nR=golang-dev, bradfitz, remyoudompheng, r\nCC=golang-dev\nhttps://codereview.appspot.com/8716044",
			"disapproval": false,
			"date": "2013-04-12 20:21:28.178890",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 8716044: cmd/ld: always do external link for -linkmode=external",
	"created": "2013-04-12 18:29:38.535720",
	"patchsets": [
		1,
		6001
	],
	"modified": "2013-04-12 20:21:29.627440",
	"closed": true,
	"issue": 8716044
}