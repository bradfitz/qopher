{
	"description": "runtime: fix traceback in cgo programs\nFixes issue 6061.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-07 20:00:35.573330",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12609043/diff/6001/src/pkg/runtime/proc.c\nFile src/pkg/runtime/proc.c (right):\n\nhttps://codereview.appspot.com/12609043/diff/6001/src/pkg/runtime/proc.c#newcode724\nsrc/pkg/runtime/proc.c:724: gp->goid = runtime\u00b7xadd64(&runtime\u00b7sched.goidgen, 1);\nI've moved this, so that we put fully initialized g into allg.",
			"disapproval": false,
			"date": "2013-08-07 20:05:20.476990",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nWorks for me now on darwin-amd64.\r\n\r\nThanks!\r\n\r\n\r\nOn Wed, Aug 7, 2013 at 1:00 PM, <dvyukov@google.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://dvyukov%40google.com@**code.google.com/p/go/<http://40google.com@code.google.com/p/go/>\r\n>\r\n>\r\n> Description:\r\n> runtime: fix traceback in cgo programs\r\n> Fixes issue 6061.\r\n>\r\n> Please review this at https://codereview.appspot.**com/12609043/<https://codereview.appspot.com/12609043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/crash_cgo_**test.go\r\n>   M src/pkg/runtime/panic.c\r\n>   M src/pkg/runtime/proc.c\r\n>\r\n>\r\n> Index: src/pkg/runtime/crash_cgo_**test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/crash_cgo_**test.go\r\n> +++ b/src/pkg/runtime/crash_cgo_**test.go\r\n> @@ -22,6 +22,14 @@\r\n>         }\r\n>  }\r\n>\r\n> +func TestCgoTraceback(t *testing.T) {\r\n> +       got := executeTest(t, cgoTracebackSource, nil)\r\n> +       want := \"OK\\n\"\r\n> +       if got != want {\r\n> +               t.Fatalf(\"expected %q, but got %q\", want, got)\r\n> +       }\r\n> +}\r\n> +\r\n>  const cgoSignalDeadlockSource = `\r\n>  package main\r\n>\r\n> @@ -86,3 +94,22 @@\r\n>         fmt.Printf(\"OK\\n\")\r\n>  }\r\n>  `\r\n> +\r\n> +const cgoTracebackSource = `\r\n> +package main\r\n> +\r\n> +/* void foo(void) {} */\r\n> +import \"C\"\r\n> +\r\n> +import (\r\n> +       \"fmt\"\r\n> +       \"runtime\"\r\n> +)\r\n> +\r\n> +func main() {\r\n> +       C.foo()\r\n> +       buf := make([]byte, 1)\r\n> +       runtime.Stack(buf, true)\r\n> +       fmt.Printf(\"OK\\n\")\r\n> +}\r\n> +`\r\n> Index: src/pkg/runtime/panic.c\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/panic.c\r\n> +++ b/src/pkg/runtime/panic.c\r\n> @@ -415,6 +415,8 @@\r\n>                 runtime\u00b7exit(3);\r\n>         }\r\n>         m->dying = 1;\r\n> +       if(g != nil)\r\n> +               g->writebuf = nil;\r\n>         runtime\u00b7xadd(&runtime\u00b7**panicking, 1);\r\n>         runtime\u00b7lock(&paniclk);\r\n>  }\r\n> Index: src/pkg/runtime/proc.c\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/proc.c\r\n> +++ b/src/pkg/runtime/proc.c\r\n> @@ -712,11 +712,18 @@\r\n>         gp->sched.sp = gp->stackbase;\r\n>         gp->sched.lr = 0;\r\n>         gp->sched.g = gp;\r\n> +       gp->syscallpc = gp->sched.pc;\r\n> +       gp->syscallsp = gp->sched.sp;\r\n> +       gp->syscallstack = gp->stackbase;\r\n> +       gp->syscallguard = gp->stackguard;\r\n>         gp->status = Gsyscall;\r\n>         mp->curg = gp;\r\n>         mp->locked = LockInternal;\r\n>         mp->lockedg = gp;\r\n>         gp->lockedm = mp;\r\n> +       gp->goid = runtime\u00b7xadd64(&runtime\u00b7sched.**goidgen, 1);\r\n> +       if(raceenabled)\r\n> +               gp->racectx = runtime\u00b7racegostart(runtime\u00b7**newextram);\r\n>         // put on allg for garbage collector\r\n>         runtime\u00b7lock(&runtime\u00b7sched);\r\n>         if(runtime\u00b7lastg == nil)\r\n> @@ -725,9 +732,6 @@\r\n>                 runtime\u00b7lastg->alllink = gp;\r\n>         runtime\u00b7lastg = gp;\r\n>         runtime\u00b7unlock(&runtime\u00b7sched)**;\r\n> -       gp->goid = runtime\u00b7xadd64(&runtime\u00b7sched.**goidgen, 1);\r\n> -       if(raceenabled)\r\n> -               gp->racectx = runtime\u00b7racegostart(runtime\u00b7**newextram);\r\n>\r\n>         // Add m to the extra list.\r\n>         mnext = lockextra(true);\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-07 20:23:21.157840",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=60d62a3b3991 ***\n\nruntime: fix traceback in cgo programs\nFixes issue 6061.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/12609043",
			"disapproval": false,
			"date": "2013-08-07 20:31:59.479860",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 12609043: runtime: fix traceback in cgo programs",
	"created": "2013-08-07 15:38:21.987660",
	"patchsets": [
		1,
		3001,
		6001,
		9001,
		16001
	],
	"modified": "2013-08-08 16:47:04.116270",
	"closed": true,
	"issue": 12609043
}