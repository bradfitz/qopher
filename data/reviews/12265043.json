{
	"description": "container/heap: add Fix and document the min is element 0.\n\nFixes issue 5372.\nFixes issue 5577.",
	"cc": [
		"gri@golang.org",
		"rsc@golang.org",
		"bradfitz@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-08-01 15:42:16.242990",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "s/()// in the description.\r\nFunctions are just names, no need for a () suffix.\r\n",
			"disapproval": false,
			"date": "2013-08-01 15:55:20.057990",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/01 15:55:20, rsc wrote:\n> s/()// in the description.\n> Functions are just names, no need for a () suffix.\n\nUnderstood and done.",
			"disapproval": false,
			"date": "2013-08-01 15:58:43.685240",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12265043/diff/11001/src/pkg/container/heap/heap.go\nFile src/pkg/container/heap/heap.go (right):\n\nhttps://codereview.appspot.com/12265043/diff/11001/src/pkg/container/heap/heap.go#newcode9\nsrc/pkg/container/heap/heap.go:9: // This means the minimum element of the entire heap is the root,\n// The minimum element in the tree is the root, at index 0.\n\nhttps://codereview.appspot.com/12265043/diff/11001/src/pkg/container/heap/heap.go#newcode82\nsrc/pkg/container/heap/heap.go:82: // Fix the element at position i, restoring the heap if the value\n// Fix reestablishes the heap ordering after the element at index i has changed its value.\n// Changing the value of the element at index i and then calling Fix is equivalent to,\n// but less expensive than, calling Remove(h, i) followed by a Push of the new value.\n// The complexity is O(log(n)) where n = h.Len().\n\nhttps://codereview.appspot.com/12265043/diff/11001/src/pkg/container/heap/heap.go#newcode86\nsrc/pkg/container/heap/heap.go:86: if i != n {\nWhy this test?\nCallers should not be passing i >= n.",
			"disapproval": false,
			"date": "2013-08-02 20:05:51.811120",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12265043/diff/11001/src/pkg/container/heap/heap.go\nFile src/pkg/container/heap/heap.go (right):\n\nhttps://codereview.appspot.com/12265043/diff/11001/src/pkg/container/heap/heap.go#newcode9\nsrc/pkg/container/heap/heap.go:9: // This means the minimum element of the entire heap is the root,\nOn 2013/08/02 20:05:51, rsc wrote:\n> // The minimum element in the tree is the root, at index 0.\n\nDone.\n\nhttps://codereview.appspot.com/12265043/diff/11001/src/pkg/container/heap/heap.go#newcode82\nsrc/pkg/container/heap/heap.go:82: // Fix the element at position i, restoring the heap if the value\nOn 2013/08/02 20:05:51, rsc wrote:\n> // Fix reestablishes the heap ordering after the element at index i has changed\n> its value.\n> // Changing the value of the element at index i and then calling Fix is\n> equivalent to,\n> // but less expensive than, calling Remove(h, i) followed by a Push of the new\n> value.\n> // The complexity is O(log(n)) where n = h.Len().\n\nDone.\n\nhttps://codereview.appspot.com/12265043/diff/11001/src/pkg/container/heap/heap.go#newcode86\nsrc/pkg/container/heap/heap.go:86: if i != n {\nOn 2013/08/02 20:05:51, rsc wrote:\n> Why this test?\n> Callers should not be passing i >= n.\n\nDone.",
			"disapproval": false,
			"date": "2013-08-02 21:54:10.387340",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-02 21:54:27.989590",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nWill defer to others on docs.\n\nhttps://codereview.appspot.com/12265043/diff/20001/src/pkg/container/heap/heap.go\nFile src/pkg/container/heap/heap.go (right):\n\nhttps://codereview.appspot.com/12265043/diff/20001/src/pkg/container/heap/heap.go#newcode9\nsrc/pkg/container/heap/heap.go:9: // This means the minimum element in the tree is the root, at index 0.\nI would drop \"This means\". It sounds weird starting a paragraph.",
			"disapproval": false,
			"date": "2013-08-05 16:56:29.608360",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12265043/diff/20001/src/pkg/container/heap/heap.go\nFile src/pkg/container/heap/heap.go (right):\n\nhttps://codereview.appspot.com/12265043/diff/20001/src/pkg/container/heap/heap.go#newcode9\nsrc/pkg/container/heap/heap.go:9: // This means the minimum element in the tree is the root, at index 0.\nOn 2013/08/05 16:56:29, bradfitz wrote:\n> I would drop \"This means\". It sounds weird starting a paragraph.\n\nIndeed. The text I suggested had that edit.",
			"disapproval": false,
			"date": "2013-08-05 17:33:58.130190",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Leaving final sign-off for gri.",
			"disapproval": false,
			"date": "2013-08-05 17:34:06.485680",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org, rsc@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-05 22:13:50.087870",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you gentlemen.\n\nhttps://codereview.appspot.com/12265043/diff/20001/src/pkg/container/heap/heap.go\nFile src/pkg/container/heap/heap.go (right):\n\nhttps://codereview.appspot.com/12265043/diff/20001/src/pkg/container/heap/heap.go#newcode9\nsrc/pkg/container/heap/heap.go:9: // This means the minimum element in the tree is the root, at index 0.\nOn 2013/08/05 17:33:58, rsc wrote:\n> On 2013/08/05 16:56:29, bradfitz wrote:\n> > I would drop \"This means\". It sounds weird starting a paragraph.\n> \n> Indeed. The text I suggested had that edit.\n\nDone.",
			"disapproval": false,
			"date": "2013-08-05 22:15:09.972360",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/12265043/diff/27001/src/pkg/container/heap/heap.go\nFile src/pkg/container/heap/heap.go (right):\n\nhttps://codereview.appspot.com/12265043/diff/27001/src/pkg/container/heap/heap.go#newcode59\nsrc/pkg/container/heap/heap.go:59: // Same as Remove(h, 0).\nIt is equivalent to Remove(h, 0).\n\n(while you're here, please make this a sentence.)",
			"disapproval": false,
			"date": "2013-08-05 22:21:40.743940",
			"approval": true
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org, rsc@golang.org, bradfitz@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-05 22:24:37.544860",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/05 22:21:40, r wrote:\n> LGTM\n> \n> https://codereview.appspot.com/12265043/diff/27001/src/pkg/container/heap/heap.go\n> File src/pkg/container/heap/heap.go (right):\n> \n> https://codereview.appspot.com/12265043/diff/27001/src/pkg/container/heap/heap.go#newcode59\n> src/pkg/container/heap/heap.go:59: // Same as Remove(h, 0).\n> It is equivalent to Remove(h, 0).\n> \n> (while you're here, please make this a sentence.)\n\nHeh, there you go.\n\nWhen I make small changes like this, is is sufficient to hg upload and then Publish & Mail comments? I keep doing hg mail, and end up sending two mails each time.",
			"disapproval": false,
			"date": "2013-08-05 22:26:30.513240",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If you say hg mail CL it will automatically send another mail. Just hg\r\nupload, and reply to the comments via Rietveld.\r\n- gri\r\n\r\n\r\nOn Mon, Aug 5, 2013 at 3:26 PM, <pieter@binky.org.uk> wrote:\r\n\r\n> On 2013/08/05 22:21:40, r wrote:\r\n>\r\n>> LGTM\r\n>>\r\n>\r\n>\r\n> https://codereview.appspot.**com/12265043/diff/27001/src/**\r\n> pkg/container/heap/heap.go<https://codereview.appspot.com/12265043/diff/27001/src/pkg/container/heap/heap.go>\r\n>\r\n>> File src/pkg/container/heap/heap.go (right):\r\n>>\r\n>\r\n>\r\n> https://codereview.appspot.**com/12265043/diff/27001/src/**\r\n> pkg/container/heap/heap.go#**newcode59<https://codereview.appspot.com/12265043/diff/27001/src/pkg/container/heap/heap.go#newcode59>\r\n>\r\n>> src/pkg/container/heap/heap.**go:59: // Same as Remove(h, 0).\r\n>> It is equivalent to Remove(h, 0).\r\n>>\r\n>\r\n>  (while you're here, please make this a sentence.)\r\n>>\r\n>\r\n> Heh, there you go.\r\n>\r\n> When I make small changes like this, is is sufficient to hg upload and\r\n> then Publish & Mail comments? I keep doing hg mail, and end up sending\r\n> two mails each time.\r\n>\r\n> https://codereview.appspot.**com/12265043/<https://codereview.appspot.com/12265043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-05 22:38:22.406530",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/05 22:38:22, gri wrote:\n> If you say hg mail CL it will automatically send another mail. Just hg\n> upload, and reply to the comments via Rietveld.\n> - gri\n\nI know, I was just wondering what the protocol was. I'll do as you say in the future, thank you.",
			"disapproval": false,
			"date": "2013-08-05 22:40:25.382340",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-05 22:44:46.671330",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"pieter@binky.org.uk",
				"gri@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b2b6f8df031e ***\n\ncontainer/heap: add Fix and document the min is element 0.\n\nFixes issue 5372.\nFixes issue 5577.\n\nR=gri, rsc, bradfitz, r\nCC=golang-dev\nhttps://codereview.appspot.com/12265043\n\nCommitter: Robert Griesemer <gri@golang.org>",
			"disapproval": false,
			"date": "2013-08-05 22:45:43.047500",
			"approval": false
		}
	],
	"owner_email": "pieter@binky.org.uk",
	"private": false,
	"base_url": "",
	"owner": "peted",
	"subject": "code review 12265043: container/heap: add Fix and document the min is element 0.",
	"created": "2013-08-01 15:41:03.569400",
	"patchsets": [
		1,
		3001,
		6001,
		11001,
		16001,
		20001,
		27001,
		34001
	],
	"modified": "2013-08-06 16:55:21.371450",
	"closed": true,
	"issue": 12265043
}