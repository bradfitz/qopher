{
	"description": "go.tools/go/type: hook up interface method receivers\n\nAlso:\n- Renamed Object.SameName -> Object.SameId\n- Exported Object.Id",
	"cc": [
		"adonovan@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11567046/diff/5001/go/types/objects.go\nFile go/types/objects.go (right):\n\nhttps://codereview.appspot.com/11567046/diff/5001/go/types/objects.go#newcode60\ngo/types/objects.go:60: func (obj *object) Id() string {\nCan you temporarily expose a standalone utility function Id(pkg *Pkg, path string) since I will for a while need to construct a few Ids without an Object?",
			"disapproval": false,
			"date": "2013-07-19 22:40:43.183520",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-19 22:35:44.103100",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/19 22:35:44, gri wrote:\n> Hello mailto:adonovan@google.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go.tools\n\nGenerally LG but I'm concerned that the receiver type of methods of named interfaces will be quite long-winded types, such as \"interface{Stringer()string}\".  Can you use the named type where it exists?",
			"disapproval": false,
			"date": "2013-07-19 22:40:38.259880",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Also use the named receiver type for interface methods, where available.\n\nhttps://codereview.appspot.com/11567046/diff/5001/go/types/objects.go\nFile go/types/objects.go (right):\n\nhttps://codereview.appspot.com/11567046/diff/5001/go/types/objects.go#newcode60\ngo/types/objects.go:60: func (obj *object) Id() string {\nOn 2013/07/19 22:40:43, adonovan wrote:\n> Can you temporarily expose a standalone utility function Id(pkg *Pkg, path\n> string) since I will for a while need to construct a few Ids without an Object?\n\nDone.",
			"disapproval": false,
			"date": "2013-07-19 22:52:49.049180",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/11567046/diff/13001/go/types/gcimporter.go\nFile go/types/gcimporter.go (right):\n\nhttps://codereview.appspot.com/11567046/diff/13001/go/types/gcimporter.go#newcode613\ngo/types/gcimporter.go:613: sig.recv = NewVar(token.NoPos, pkg, \"\", typ)\nI guess there's not much you can do here about typ being the complete interface type (short of poking new named types into all the receivers after parseNamedType calls this function...\n\nhttps://codereview.appspot.com/11567046/diff/13001/go/types/universe.go\nFile go/types/universe.go (right):\n\nhttps://codereview.appspot.com/11567046/diff/13001/go/types/universe.go#newcode105\ngo/types/universe.go:105: sig.recv = NewVar(token.NoPos, nil, \"\", typ)\nShouldn't sig.recv.typ be the result of NewTypeName below?",
			"disapproval": false,
			"date": "2013-07-19 22:56:47.791530",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11567046/diff/13001/go/types/gcimporter.go\nFile go/types/gcimporter.go (right):\n\nhttps://codereview.appspot.com/11567046/diff/13001/go/types/gcimporter.go#newcode613\ngo/types/gcimporter.go:613: sig.recv = NewVar(token.NoPos, pkg, \"\", typ)\nOn 2013/07/19 22:56:48, adonovan wrote:\n> I guess there's not much you can do here about typ being the complete interface\n> type (short of poking new named types into all the receivers after\n> parseNamedType calls this function...\n\nI can pass possibly pass it down, or fix it later. I'll add a TODO for now.\n\nhttps://codereview.appspot.com/11567046/diff/13001/go/types/universe.go\nFile go/types/universe.go (right):\n\nhttps://codereview.appspot.com/11567046/diff/13001/go/types/universe.go#newcode105\ngo/types/universe.go:105: sig.recv = NewVar(token.NoPos, nil, \"\", typ)\nOn 2013/07/19 22:56:48, adonovan wrote:\n> Shouldn't sig.recv.typ be the result of NewTypeName below?\n\nDone.",
			"disapproval": false,
			"date": "2013-07-19 23:10:06.558820",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=074cb389529e&repo=tools ***\n\ngo.tools/go/type: hook up interface method receivers\n\nAlso:\n- Renamed Object.SameName -> Object.SameId\n- Exported Object.Id\n\nR=adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/11567046",
			"disapproval": false,
			"date": "2013-07-19 23:26:34.676120",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 11567046: go.tools/go/type: hook up interface method receivers",
	"created": "2013-07-19 22:35:28.782970",
	"patchsets": [
		1,
		3001,
		5001,
		11001,
		13001,
		16001,
		20001,
		23001
	],
	"modified": "2013-07-19 23:26:36.641980",
	"closed": true,
	"issue": 11567046
}