{
	"description": "crypto/tls: allow alternate low-level cryptographic functions\n\ncrypto/tls relies on the crypto/ implementations of AES, 3DES,\nMD5, SHA1 and RC4. For performance or security reasons it may\nbe preferable to use alternate implementations (such as a Go\nwrapper to OpenSSL).\n\nThis change enables use of alternate AES, 3DES, MD5, SHA1 and\nRC4 function by setting global functions that crypto/tls uses\nto create cipher or hash objects. By default the standard Go\nimplementations are used.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"jgc@jgc.org",
		"bradfitz@golang.org",
		"agl@google.com",
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 23, 2013 at 2:22 PM, John Graham-Cumming <jgc@jgc.org> wrote:\r\n\r\n> On Wed, Jan 23, 2013 at 10:19 PM, Russ Cox <rsc@golang.org> wrote:\r\n>\r\n>> If you want to sub in faster implementations, why not compile a copy of\r\n>> Go with those implementations in the standard places?\r\n>\r\n>\r\n> I can, but then it means that I am maintaining a local copy of Go which\r\n> I'd rather avoid. And it may be the case that others have the same speed\r\n> critical need for using OpenSSL (or similar) primitives.\r\n\r\n\r\nOne fear is that this crutch leads to everybody doing this, and Go's crypto\r\nnot getting faster.\r\n",
			"disapproval": false,
			"date": "2013-01-23 22:46:58.442130",
			"approval": false
		},
		{
			"sender": "jgc@jgc.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 23, 2013 at 10:19 PM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> If you want to sub in faster implementations, why not compile a copy of Go\r\n> with those implementations in the standard places?\r\n\r\n\r\nI can, but then it means that I am maintaining a local copy of Go which I'd\r\nrather avoid. And it may be the case that others have the same speed\r\ncritical need for using OpenSSL (or similar) primitives.\r\n\r\nJohn.\r\n",
			"disapproval": false,
			"date": "2013-01-23 22:23:11.843590",
			"approval": false
		},
		{
			"sender": "jgrahamc@gmail.com",
			"recipients": [
				"jgrahamc@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-23 16:31:02.846720",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If you want to sub in faster implementations, why not compile a copy of Go\r\nwith those implementations in the standard places?\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-23 22:19:59.492610",
			"approval": false
		},
		{
			"sender": "agl@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "We already have a registry of hash functions in crypto. I think a\r\npatch that gets the hash function from that registry rather than\r\ndirectly would be fine. That registry was designed to allow for\r\noptional hash functions, but using it to switch out implementations\r\nisn't a bother.\r\n\r\nHowever, this change adds an extra registry just in crypto/tls, and\r\njust for a few functions. I don't think that's good. That's why I\r\nsuggested that the cipher implementations couldn't be switched out on\r\nthe golang-nuts thread.\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2013-01-23 22:52:41.838050",
			"approval": false
		},
		{
			"sender": "jgc@jgc.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 23, 2013 at 10:52 PM, Adam Langley <agl@google.com> wrote:\r\n\r\n> We already have a registry of hash functions in crypto. I think a\r\n> patch that gets the hash function from that registry rather than\r\n> directly would be fine. That registry was designed to allow for\r\n> optional hash functions, but using it to switch out implementations\r\n> isn't a bother.\r\n>\r\n\r\nYes, it would be possible to use the hash registry, but RC4 is also needed\r\nso it would be necessary create a block cipher (or just cipher) registry as\r\nwell so that crypto/tls could get RC4 from it.\r\n\r\nI'm happy to write code to do that if people think it would be acceptable.\r\nIf that's not acceptable then I'll withdraw this CL and will maintain a\r\nlocal Go.\r\n",
			"disapproval": false,
			"date": "2013-01-23 23:03:19.092490",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> One fear is that this crutch leads to everybody doing this, and Go's crypto\r\n> not getting faster.\r\n\r\nI understand that John has a deadline, and the squeaky wheel gets the\r\ngrease, but I share Brad's concern. Additionally I see this as an\r\noptional feature of the standard library, which means it'll probably\r\nbreak, and nobody will notice for a long time.\r\n\r\nAlthough unqualified, I am happy to assist manually translating\r\n(properly licensed) code from other public domain projects into plan 9\r\nasm if that will help.\r\n",
			"disapproval": false,
			"date": "2013-01-24 01:17:32.713080",
			"approval": false
		},
		{
			"sender": "jgrahamc@gmail.com",
			"recipients": [
				"jgrahamc@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jgc@jgc.org",
				"bradfitz@golang.org",
				"agl@google.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/24 01:17:32, dfc wrote:\n> I understand that John has a deadline, and the squeaky wheel gets the\n> grease, but I share Brad's concern. Additionally I see this as an\n> optional feature of the standard library, which means it'll probably\n> break, and nobody will notice for a long time.\n\nI will withdraw this change and keep a locally maintained version of Go.",
			"disapproval": false,
			"date": "2013-01-28 09:51:44.594700",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"jgrahamc@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jgc@jgc.org",
				"bradfitz@golang.org",
				"agl@google.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=close\n\nrejected / retracted.",
			"disapproval": false,
			"date": "2013-06-05 21:04:00.102180",
			"approval": false
		}
	],
	"owner_email": "jgrahamc@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "jgc",
	"subject": "code review 7197048: crypto/tls: allow alternate low-level cryptographic fun...",
	"created": "2013-01-23 16:29:32.313580",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2013-06-05 21:04:00.264980",
	"closed": false,
	"issue": 7197048
}