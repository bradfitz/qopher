{
	"description": "dist: support building from a git repository\n\nTo allow users to work with a git repository instead of the default hg\none, execute:\n\n  git rev-parse --short HEAD\n\nto grab the version.\n\nSigned-off-by: Ramkumar Ramachandra <artagnon@gmail.com>",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"rsc@golang.org",
		"remyoudompheng@gmail.com",
		"dsymonds@golang.org"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 30 July 2013 17:05, Ramkumar Ramachandra <artagnon@gmail.com> wrote:\r\n\r\n> Russ Cox wrote:\r\n> > You can write a VERSION file if you want control\r\n> > over the string.\r\n>\r\n> True, and that's what I did the first time around. I found out that\r\n> all.bash was failing with a hg error, so looked at the source and\r\n> found out about the VERSION file.\r\n>\r\n> The patch is one step in the direction towards supporting contributors\r\n> using git out-of-the-box. I'm also writing a git equivalent for\r\n> codereview.py, which I plan to submit shortly.\r\n>\r\n> I'm not married to the implementation, but do you agree with the goal\r\n> of getting more contributors?\r\n>\r\n\r\nHow does this get us more contributors? Why would you want to use git to\r\nwork on a Mercurial repository?\r\n",
			"disapproval": false,
			"date": "2013-07-30 07:16:07.938040",
			"approval": false
		},
		{
			"sender": "Artagnon@gmail.com",
			"recipients": [
				"Artagnon@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-29 10:45:39.171990",
			"approval": false
		},
		{
			"sender": "artagnon@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Russ Cox wrote:\r\n> You can write a VERSION file if you want control\r\n> over the string.\r\n\r\nTrue, and that's what I did the first time around. I found out that\r\nall.bash was failing with a hg error, so looked at the source and\r\nfound out about the VERSION file.\r\n\r\nThe patch is one step in the direction towards supporting contributors\r\nusing git out-of-the-box. I'm also writing a git equivalent for\r\ncodereview.py, which I plan to submit shortly.\r\n\r\nI'm not married to the implementation, but do you agree with the goal\r\nof getting more contributors?\r\n",
			"disapproval": false,
			"date": "2013-07-30 07:06:05.309690",
			"approval": false
		},
		{
			"sender": "Artagnon@gmail.com",
			"recipients": [
				"Artagnon@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-29 13:23:03.995370",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't think this is a good idea in the first place, but if you're going\r\nto do it, please try git *after* Mercurial fails. Don't slow the build down\r\nfor everyone else.\r\n",
			"disapproval": false,
			"date": "2013-07-29 23:44:31.693490",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM\r\n\r\nThere's no need for this. You can write a VERSION file if you want control\r\nover the string.\r\n",
			"disapproval": true,
			"date": "2013-07-30 01:40:08.408680",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "2013/7/30 Ramkumar Ramachandra <artagnon@gmail.com>:\r\n> Russ Cox wrote:\r\n>> You can write a VERSION file if you want control\r\n>> over the string.\r\n>\r\n> True, and that's what I did the first time around. I found out that\r\n> all.bash was failing with a hg error, so looked at the source and\r\n> found out about the VERSION file.\r\n>\r\n> The patch is one step in the direction towards supporting contributors\r\n> using git out-of-the-box. I'm also writing a git equivalent for\r\n> codereview.py, which I plan to submit shortly.\r\n\r\nWhat's the point? There is already\r\nhttps://codereview.appspot.com/static/upload.py\r\n\r\n> I'm not married to the implementation, but do you agree with the goal\r\n> of getting more contributors?\r\n\r\nWe shouldn't need to add boilerplate to attract contributors.\r\nContributors are happier with less contribution boilerplate.\r\n\r\nR\u00e9my.\r\n",
			"disapproval": false,
			"date": "2013-07-30 07:14:10.049130",
			"approval": false
		},
		{
			"sender": "artagnon@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Andrew Gerrand wrote:\r\n> How does this get us more contributors? Why would you want to use git to\r\n> work on a Mercurial repository?\r\n\r\n... because I'm more comfortable with git? I'm feeling suffocated on\r\nMercurial, because it misses the tools that I use everyday:\r\n\r\n  diffcore-pickaxe; both the -S and -G variants to narrow history\r\n  blame -M -CCC, to associate exact blame\r\n  log --follow, to read history of a file beyond renames\r\n\r\nEither way, I'm not bringing \"technical superiority\" to the argument;\r\njust enable people to contribute using the tools they're already\r\nfamiliar with? Is there some downside to this, or am I missing\r\nsomething?\r\n",
			"disapproval": false,
			"date": "2013-07-30 07:28:01.753030",
			"approval": false
		},
		{
			"sender": "artagnon@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R\u00e9my Oudompheng wrote:\r\n> https://codereview.appspot.com/static/upload.py\r\n\r\nAs I'm sure you've noticed, codereview.py is derived from this (and\r\nspecialized for hg). I'd probably use a thin wrapper specialized for\r\ngit.\r\n",
			"disapproval": false,
			"date": "2013-07-30 07:34:10.760360",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 30 July 2013 17:05, Ramkumar Ramachandra <artagnon@gmail.com> wrote:\r\n\r\n> The patch is one step in the direction towards supporting contributors\r\n> using git out-of-the-box. I'm also writing a git equivalent for\r\n> codereview.py, which I plan to submit shortly.\r\n\r\nPlease don't pursue this. It's only going to bring pain. I say that as\r\nsomeone who also much prefers git, and finds using hg like doing a\r\njigsaw puzzle while wearing boxing gloves. We already have regular\r\npain with dealing with Mercurial changes and the codereview plugin,\r\nand adding the extra burden of git-using contributors using yet\r\nanother layer on top of that is horrifying. I'm sure there are lots of\r\npeople (such as me) who would prefer to use git for contributions to\r\nGo, but I doubt there are many people whose contributions we deeply\r\ncare about that would outright refuse to use Mercurial even in the\r\nlimited sense that is required.\r\n",
			"disapproval": false,
			"date": "2013-07-30 07:45:18.576610",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 30 July 2013 17:27, Ramkumar Ramachandra <artagnon@gmail.com> wrote:\r\n\r\n> Andrew Gerrand wrote:\r\n> > How does this get us more contributors? Why would you want to use git to\r\n> > work on a Mercurial repository?\r\n>\r\n> ... because I'm more comfortable with git? I'm feeling suffocated on\r\n> Mercurial, because it misses the tools that I use everyday:\r\n>\r\n>   diffcore-pickaxe; both the -S and -G variants to narrow history\r\n>   blame -M -CCC, to associate exact blame\r\n>   log --follow, to read history of a file beyond renames\r\n>\r\n> Either way, I'm not bringing \"technical superiority\" to the argument;\r\n> just enable people to contribute using the tools they're already\r\n> familiar with? Is there some downside to this, or am I missing\r\n> something?\r\n\r\n\r\nMy concern is git stuff leaking into discussions, making it harder for\r\npeople to collaborate. We have a system that works. Whatever we choose,\r\nsome people will prefer something else. When collaborating, consistency\r\ntrumps personal preference every time.\r\n\r\nSo long as revision numbers, commands, or anything ese git-related does not\r\nleak into golang-dev or the Mercurial change history, then I don't mind\r\nwhat tools you use (any more than I care what editor you use). But we're\r\nnot going to make it a supported part of the development process. Sorry.\r\n\r\nAndrew\r\n",
			"disapproval": false,
			"date": "2013-07-30 07:49:17.671720",
			"approval": false
		},
		{
			"sender": "Artagnon@gmail.com",
			"recipients": [
				"Artagnon@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Abandoned.",
			"disapproval": false,
			"date": "2013-07-30 07:54:40.087150",
			"approval": false
		},
		{
			"sender": "artagnon@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "David Symonds wrote:\r\n> We already have regular\r\n> pain with dealing with Mercurial changes and the codereview plugin,\r\n> and adding the extra burden of git-using contributors using yet\r\n> another layer on top of that is horrifying.\r\n\r\nI see. Yes, codereview.py is very poorly maintained, and I noticed\r\nthat the authentication mechanism it uses is also deprecated: Google\r\nrecommends OAuth 2.0 now.\r\n\r\nFrankly, it would make a lot more sense to get Rietveld to understand\r\nwhat git send-email (and whatever the hg equivalent is) generates.\r\n\r\n> I'm sure there are lots of\r\n> people (such as me) who would prefer to use git for contributions to\r\n> Go, but I doubt there are many people whose contributions we deeply\r\n> care about that would outright refuse to use Mercurial even in the\r\n> limited sense that is required.\r\n\r\nI think of the issue purely as a matter of preference and convenience,\r\nmore than \"refusal\".\r\n\r\nEither way, it doesn't look like the community is interested.  So,\r\nI'll drop this.\r\n",
			"disapproval": false,
			"date": "2013-07-30 07:54:48.910970",
			"approval": false
		}
	],
	"owner_email": "Artagnon@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Artagnon",
	"subject": "code review 12022043: dist: support building from a git repository",
	"created": "2013-07-29 10:44:18.706290",
	"patchsets": [
		1,
		3001,
		3002,
		9001
	],
	"modified": "2013-07-30 07:54:49.183500",
	"closed": true,
	"issue": 12022043
}