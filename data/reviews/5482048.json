{
	"description": "go: implement doc, fmt, fix, list, vet\n\nThis CL is concerned with the basic Package structure\nand applies it to the (trivial) implementations of the\ndoc, fmt, fix, list, and vet commands.\n\nThe command as a whole is still very much a work in progress.\nIn particular, work making the error messages look nice\nis deferred to a future CL.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"dsymonds@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Dec 13, 2011 at 02:36,  <dsymonds@golang.org> wrote:\n> Oh, yeah, I don't like the sound of -s being the default for this. I'd\n> expect this to *only* reformat source, not modify it.\n\nok\n",
			"disapproval": false,
			"date": "2011-12-13 19:24:05.678145",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"dsymonds@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-12-13 19:28:28.679633",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-13 03:31:02.518959",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"dsymonds@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=dee9f2348c4a ***\n\ngo: implement doc, fmt, fix, list, vet\n\nThis CL is concerned with the basic Package structure\nand applies it to the (trivial) implementations of the\ndoc, fmt, fix, list, and vet commands.\n\nThe command as a whole is still very much a work in progress.\nIn particular, work making the error messages look nice\nis deferred to a future CL.\n\nR=golang-dev, adg, dsymonds, r\nCC=golang-dev\nhttp://codereview.appspot.com/5482048",
			"disapproval": false,
			"date": "2011-12-13 19:28:50.658271",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5482048/diff/1011/src/cmd/go/fmt.go\nFile src/cmd/go/fmt.go (right):\n\nhttp://codereview.appspot.com/5482048/diff/1011/src/cmd/go/fmt.go#newcode12\nsrc/cmd/go/fmt.go:12: Fmt runs the command 'gofmt -l -s -w' on the packages named\nOn 2011/12/13 06:50:12, adg wrote:\n> why -s? seems potentially controversial\n\nOh, yeah, I don't like the sound of -s being the default for this. I'd expect this to *only* reformat source, not modify it.",
			"disapproval": false,
			"date": "2011-12-13 07:36:37.908019",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"dsymonds@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5482048/diff/1011/src/cmd/go/fmt.go\nFile src/cmd/go/fmt.go (right):\n\nhttp://codereview.appspot.com/5482048/diff/1011/src/cmd/go/fmt.go#newcode29\nsrc/cmd/go/fmt.go:29: run(append([]string{\"gofmt\", \"-l\", \"-s\", \"-w\"}, pkg.gofiles...)...)\n-s is here too\n\nhttp://codereview.appspot.com/5482048/diff/1011/src/cmd/go/main.go\nFile src/cmd/go/main.go (right):\n\nhttp://codereview.appspot.com/5482048/diff/1011/src/cmd/go/main.go#newcode184\nsrc/cmd/go/main.go:184: log.Printf(format, args...)\nOn 2011/12/13 06:50:12, adg wrote:\n> log.Fatalf ?\n\nFatalf is exactly the same as Printf followed by os.Exit(1). rsc, i don't understand your reply here.",
			"disapproval": false,
			"date": "2011-12-13 19:28:21.755886",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5482048/diff/1011/src/cmd/go/fmt.go\nFile src/cmd/go/fmt.go (right):\n\nhttp://codereview.appspot.com/5482048/diff/1011/src/cmd/go/fmt.go#newcode12\nsrc/cmd/go/fmt.go:12: Fmt runs the command 'gofmt -l -s -w' on the packages named\nwhy -s? seems potentially controversial\n\nhttp://codereview.appspot.com/5482048/diff/1011/src/cmd/go/main.go\nFile src/cmd/go/main.go (right):\n\nhttp://codereview.appspot.com/5482048/diff/1011/src/cmd/go/main.go#newcode184\nsrc/cmd/go/main.go:184: log.Printf(format, args...)\nlog.Fatalf ?\n\nhttp://codereview.appspot.com/5482048/diff/1011/src/cmd/go/pkg.go\nFile src/cmd/go/pkg.go (right):\n\nhttp://codereview.appspot.com/5482048/diff/1011/src/cmd/go/pkg.go#newcode58\nsrc/cmd/go/pkg.go:58: if p.imports == nil {\nThis might be worth a comment.",
			"disapproval": false,
			"date": "2011-12-13 06:50:12.669196",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Dec 13, 2011 at 01:50,  <adg@golang.org> wrote:\n> log.Fatalf ?\n\nno thanks.  i want control over exit\n",
			"disapproval": false,
			"date": "2011-12-13 19:24:34.377127",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Dec 13, 2011 at 14:28,  <r@golang.org> wrote:\n> Fatalf is exactly the same as Printf followed by os.Exit(1). rsc, i\n> don't understand your reply here.\n\nIn later CLs I may need to do cleanup like removing\ntemporary outputs at exit, so I'd rather that all the\ncalls to os.Exit are in the command source explicitly.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-13 21:03:54.539066",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5482048: go: implement doc, fmt, fix, list, vet",
	"created": "2011-12-12 15:26:00.384179",
	"patchsets": [
		1,
		2001,
		1011,
		7003
	],
	"modified": "2011-12-13 19:28:51.622659",
	"closed": true,
	"issue": 5482048
}