{
	"description": "6a/6l: add IMUL3Q and SHLDL\n\nAlthough Intel considers the three-argument form of IMUL to be a\nvariant of IMUL, I couldn't make 6l able to differentiate it without\nhuge changes, so I called it IMUL3.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/21 15:45:37, rsc wrote:\n> arith_amd64.s:144: \tSHLQ CX, DX:AX\t\t// w<<s | w1>>\u015d\n> \n> I would expect SHLL to take the same kind of argument, assuming I\n> understand what SHLDL is meant to do.\n\nIn fact, SHLDL is exactly SHLQ as you've written it. I was lead astray by Intel's naming in their reference manual. I've removed this part of the patch, thanks!\n\n\n> I do see the bytes for IMUL3Q in the IMUL line, suggesting that it is\n> covered by this entry in ymul,\n>          Yi8,    Yrl,    Zib_rr, 1,\n> suggesting that perhaps just adding the entry in the assembly grammar\n> to fill that out would work?\n\nZib_rr however, does this:\n\n\u00bb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7case Zib_rr:\n\u00bb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00bb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7*andptr++ = op;\n\u00bb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00bb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7asmand(&p->to, &p->to);\n\u00bb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00bb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7*andptr++ = vaddr(&p->from, nil);\n\u00bb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00bb\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7break;\n\nSince the asmand takes the same |to| argument twice, it can't express IMUL3Q. That line in yimul is the only use of Zib_rr so there's a sniff of a bug. But I'm rather too scared of breaking existing code to change its meaning.\n\n\nCheers\n\nAGL",
			"disapproval": false,
			"date": "2012-02-22 00:40:40.178301",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThat got simple.",
			"disapproval": false,
			"date": "2012-02-22 02:42:16.614402",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-21 15:32:59.571712",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm very sorry that we don't have better documentation for the assembly syntax.\nI think both of these may already supported.\n\nFrom math/big:\n\narith_amd64.s:144: \tSHLQ CX, DX:AX\t\t// w<<s | w1>>\u015d\n\nI would expect SHLL to take the same kind of argument, assuming I\nunderstand what SHLDL is meant to do.\n\nMy usual algorithm for discovering things like this\nis to look in 6l's optab for the relevant bytes and work backward\nfrom there, and I don't see the bytes that you're adding for SHLDL anywhere\nelse in the table, so perhaps I am confused about what SHLDL does.\n\nI do see the bytes for IMUL3Q in the IMUL line, suggesting that it is\ncovered by this entry in ymul,\n         Yi8,    Yrl,    Zib_rr, 1,\nsuggesting that perhaps just adding the entry in the assembly grammar\nto fill that out would work?\n\nThe 8l instruction set is fairly incomplete, because it was done for the\nthen-new 386 and only expanded piecemeal since then.  The 6l\ninstruction set, however, should complete as of the early x86-64s.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-21 15:45:37.155219",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=cb8fedfeecbf ***\n\n6a/6l: add IMUL3Q and SHLDL\n\nAlthough Intel considers the three-argument form of IMUL to be a\nvariant of IMUL, I couldn't make 6l able to differentiate it without\nhuge changes, so I called it IMUL3.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5686055",
			"disapproval": false,
			"date": "2012-02-23 15:51:18.553837",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 5686055: 6a/6l: add IMUL3Q and SHLDL",
	"created": "2012-02-21 15:03:19.153790",
	"patchsets": [
		1,
		2001,
		3001,
		5001,
		11,
		12,
		6013,
		8001
	],
	"modified": "2012-02-23 15:51:19.567379",
	"closed": true,
	"issue": 5686055
}