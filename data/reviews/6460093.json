{
	"description": "test: change run.go to ignore \\r in compiler output (fixes windows build)",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"minux.ma@gmail.com",
		"remyoudompheng@gmail.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6460093/diff/4001/test/run.go\nFile test/run.go (right):\n\nhttp://codereview.appspot.com/6460093/diff/4001/test/run.go#newcode405\ntest/run.go:405: }\nOn 2012/08/16 02:04:26, dfc wrote:\n> \n> line = strings.TrimRight(\"\\r\") \n> \n\nstrings.TrimRight code looks scary to me :-). I wouldn't use HasSuffix either, but it is kind of symetrical to the rest of the code in here. I would like to leave it as is, but happy to change if you insist.",
			"disapproval": false,
			"date": "2012-08-16 02:10:24.792940",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Aug 16, 2012 at 2:29 PM, <remyoudompheng@gmail.com> wrote:\r\n\r\n> What is the reason why CL 5847068 does not work on Windows? Is it\r\n>\r\nit works on windows, but it fixed another aspect of the problem.\r\n\r\n> because the program is incorrect (i.e. windows stdout automatically\r\n> inserts \\r), or because Mercurial automatically converted newlines in\r\n> the *.out files?\r\n>\r\n> If it is because of Mercurial, it should be fixed there.\r\n>\r\nno, mercurial will keep the file as it is.\r\n\r\nthe reason is this:\r\ngo program write \\n as is to console, so in the past, we don't need to\r\nbother with \\r.\r\nC program and misc/cgo/stdio uses C's stdio mechanism, and it will use \\r\\n\r\nfor newline.\r\n\r\n\r\nif this is not a build fix CL, i would propose we change runcmd() to filter\r\nthe \\r,\r\nbut as rsc hasn't acknowledged CL 5847068, we can't do that now, so i think\r\nwe shall submit this CL as is now and when CL 5847068 is acked, i will\r\nchange\r\nruncmd() instead and revert this change. WDYT?\r\n",
			"disapproval": false,
			"date": "2012-08-16 06:41:55.722350",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-08-16 01:56:03.203520",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6460093/diff/4001/test/run.go\nFile test/run.go (right):\n\nhttp://codereview.appspot.com/6460093/diff/4001/test/run.go#newcode405\ntest/run.go:405: }\nI have not used it often, but would\n\nline = strings.TrimRight(\"\\r\") \n\nbe appropriate here?",
			"disapproval": false,
			"date": "2012-08-16 02:04:26.276610",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b86e4ec1dd66 ***\n\ntest: change run.go to ignore \\r in compiler output (fixes windows build)\n\nR=golang-dev, dave, minux.ma, remyoudompheng\nCC=golang-dev\nhttp://codereview.appspot.com/6460093",
			"disapproval": false,
			"date": "2012-08-16 06:47:09.470430",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If your version works (and it looks like it does), the I'd go with that. \r\n\r\nOn 16/08/2012, at 12:10, alex.brainman@gmail.com wrote:\r\n\r\n> \r\n> http://codereview.appspot.com/6460093/diff/4001/test/run.go\r\n> File test/run.go (right):\r\n> \r\n> http://codereview.appspot.com/6460093/diff/4001/test/run.go#newcode405\r\n> test/run.go:405: }\r\n> On 2012/08/16 02:04:26, dfc wrote:\r\n> \r\n>> line = strings.TrimRight(\"\\r\")\r\n> \r\n> \r\n> strings.TrimRight code looks scary to me :-). I wouldn't use HasSuffix\r\n> either, but it is kind of symetrical to the rest of the code in here. I\r\n> would like to leave it as is, but happy to change if you insist.\r\n> \r\n> http://codereview.appspot.com/6460093/\r\n",
			"disapproval": false,
			"date": "2012-08-16 03:07:35.143780",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/16 06:41:55, minux wrote:\n> \n> the reason is this:\n> go program write \\n as is to console, so in the past, we don't need to\n> bother with \\r.\n> C program and misc/cgo/stdio uses C's stdio mechanism, and it will use \\r\\n\n> for newline.\n> \n\nYes. When you say \"C program\" you mean 8g. Right? We can change 8g, but we can't change misc/cgo/stdio. So we need to find a way for run.go to handle this situation.\n\n> ... WDYT?\n\nHopefully my change will fix the build. We could decide about \"correct\" way later.\n\nAlex",
			"disapproval": false,
			"date": "2012-08-16 06:51:59.901560",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-08-16 06:18:00.082020",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "What is the reason why CL 5847068 does not work on Windows? Is it because the program is incorrect (i.e. windows stdout automatically inserts \\r), or because Mercurial automatically converted newlines in the *.out files?\n\nIf it is because of Mercurial, it should be fixed there.",
			"disapproval": false,
			"date": "2012-08-16 06:29:14.911120",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-08-31 15:01:03.408750",
			"approval": true
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 6460093: test: change run.go to ignore \\r in compiler output (fi...",
	"created": "2012-08-16 01:52:20.103260",
	"patchsets": [
		1,
		2001,
		4001,
		4003
	],
	"modified": "2012-08-31 15:01:03.604320",
	"closed": true,
	"issue": 6460093
}