{
	"description": "exp/template/html: normalize '<' in text and RCDATA nodes.\n\nThe template\n\n  <{{.}}\n\nwould violate the structure preservation property if allowed and not\nnormalized, because when {{.}} emitted \"\", the \"<\" would be part of\na text node, but if {{.}} emitted \"a\", the \"<\" would not be part of\na text node.\n\nThis change rewrites '<' in text nodes and RCDATA text nodes to\n'&lt;' allowing template authors to write the common, and arguably more\nreadable:\n\n    Your price: {{.P1}} < list price {{.P2}}\n\nwhile preserving the structure preservation property.\n\nIt also lays the groundwork for comment elision, rewriting\n\n    Foo <!-- comment with secret project details --> Bar\n\nto\n\n    Foo  Bar",
	"cc": [
		"nigeltao@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-17 03:23:33.691551",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go\nFile src/pkg/exp/template/html/escape.go (right):\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go#newcode103\nsrc/pkg/exp/template/html/escape.go:103: // *NodeEdits are the accumulated edits to apply during commit.\ns/*NodeEdits/xxxNodeEdits/. The asterisk looks like you're dereferencing a pointer.\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go#newcode506\nsrc/pkg/exp/template/html/escape.go:506: d, t := contextAfterText(c, s)\ns/d, t/c1, s1/, or do\n----\nc0, s0 := c, s\nc, s = contextAfterText(c, s)\n----\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go#newcode508\nsrc/pkg/exp/template/html/escape.go:508: if c.state == stateText || c.state == stateRCDATA {\nYou could fold this if guard into the previous line.\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go#newcode509\nsrc/pkg/exp/template/html/escape.go:509: s, e := len(n.Text)-len(s), len(n.Text)-len(t)\nI don't like how you're declaring a \"s\" variable that shadows another one. I'd call these \"i0, i1\".\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go#newcode513\nsrc/pkg/exp/template/html/escape.go:513: b.Write(ltEntity)\nb.WriteString(\"&lt;\") and delete line 499.",
			"disapproval": false,
			"date": "2011-09-18 01:25:31.766204",
			"approval": true
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Incremental diffs at http://codereview.appspot.com/5043043/diff2/5003:12001/src/pkg/exp/template/html/escape.go\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go\nFile src/pkg/exp/template/html/escape.go (right):\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go#newcode103\nsrc/pkg/exp/template/html/escape.go:103: // *NodeEdits are the accumulated edits to apply during commit.\nOn 2011/09/18 01:25:32, nigeltao wrote:\n> s/*NodeEdits/xxxNodeEdits/. The asterisk looks like you're dereferencing a\n> pointer.\n\nDone.\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go#newcode506\nsrc/pkg/exp/template/html/escape.go:506: d, t := contextAfterText(c, s)\nOn 2011/09/18 01:25:32, nigeltao wrote:\n> s/d, t/c1, s1/, or do\n\nDone\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go#newcode508\nsrc/pkg/exp/template/html/escape.go:508: if c.state == stateText || c.state == stateRCDATA {\nOn 2011/09/18 01:25:32, nigeltao wrote:\n> You could fold this if guard into the previous line.\n\nDone.\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go#newcode509\nsrc/pkg/exp/template/html/escape.go:509: s, e := len(n.Text)-len(s), len(n.Text)-len(t)\nOn 2011/09/18 01:25:32, nigeltao wrote:\n> I don't like how you're declaring a \"s\" variable that shadows another one. I'd\n> call these \"i0, i1\".\n\nDone.\n\nhttp://codereview.appspot.com/5043043/diff/5003/src/pkg/exp/template/html/escape.go#newcode513\nsrc/pkg/exp/template/html/escape.go:513: b.Write(ltEntity)\nOn 2011/09/18 01:25:32, nigeltao wrote:\n> b.WriteString(\"&lt;\") and delete line 499.\n\nDone.",
			"disapproval": false,
			"date": "2011-09-18 18:56:50.016682",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2e00b068ff36 ***\n\nexp/template/html: normalize '<' in text and RCDATA nodes.\n\nThe template\n\n  <{{.}}\n\nwould violate the structure preservation property if allowed and not\nnormalized, because when {{.}} emitted \"\", the \"<\" would be part of\na text node, but if {{.}} emitted \"a\", the \"<\" would not be part of\na text node.\n\nThis change rewrites '<' in text nodes and RCDATA text nodes to\n'&lt;' allowing template authors to write the common, and arguably more\nreadable:\n\n    Your price: {{.P1}} < list price {{.P2}}\n\nwhile preserving the structure preservation property.\n\nIt also lays the groundwork for comment elision, rewriting\n\n    Foo <!-- comment with secret project details --> Bar\n\nto\n\n    Foo  Bar\n\nR=nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/5043043",
			"disapproval": false,
			"date": "2011-09-18 19:04:57.351566",
			"approval": false
		}
	],
	"owner_email": "mikesamuel@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "MikeSamuel",
	"subject": "code review 5043043: exp/template/html: normalize '<' in text and RCDATA nodes.",
	"created": "2011-09-17 03:16:37.413434",
	"patchsets": [
		1,
		2001,
		1002,
		6001,
		8001,
		5003,
		12001,
		2004
	],
	"modified": "2011-09-18 19:04:59.332767",
	"closed": true,
	"issue": 5043043
}