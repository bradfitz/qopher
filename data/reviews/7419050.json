{
	"description": "net/http: close TCP connection on Response.Body.Close\n\nPreviously the HTTP client's (*Response).Body.Close would try\nto keep reading until EOF, hoping to reuse the keep-alive HTTP\nconnection, but the EOF might never come, or it might take a\nlong time. Now we immediately close the TCP connection if we\nhaven't seen EOF.\n\nThis shifts the burden onto clients to read their whole response\nbodies if they want the advantage of reusing TCP connections.\n\nIn the future maybe we could decide on heuristics to read some\nnumber of bytes for some max amount of time before forcefully\nclosing, but I'd rather not for now.\n\nStatistically, touching this code makes things regress, so I\nwouldn't be surprised if this introduces new bugs, but all the\ntests pass, and I think the code is simpler now too. Maybe.\n\nPlease test your HTTP client code before Go 1.1.\n\nFixes issue 3672",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-04 23:04:52.825540",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It's definitely better, I don't know how much simpler it is though. The disembodied closure callbacks are definitely tricky.\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go\nFile src/pkg/net/http/transport.go (right):\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go#newcode642\nsrc/pkg/net/http/transport.go:642: waitForBodyRead = make(chan bool, 2)\nokay, so I knew what this did once, because I remember reviewing it when it first went in, but now I'm having a harder time understanding it. A few comments around this code would really help.\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go#newcode644\nsrc/pkg/net/http/transport.go:644: waitForBodyRead <- false // don't reuse this connection\nsee, I don't see why this does what the comment says :-/\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go#newcode899\nsrc/pkg/net/http/transport.go:899: err := es.body.Close()\nis it really closed if you don't call close?\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go#newcode916\nsrc/pkg/net/http/transport.go:916: type readerAndCloser struct {\nyou mean io.ReadCloser ?",
			"disapproval": false,
			"date": "2013-03-05 06:44:28.016170",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go\nFile src/pkg/net/http/transport.go (right):\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go#newcode642\nsrc/pkg/net/http/transport.go:642: waitForBodyRead = make(chan bool, 2)\nOn 2013/03/05 06:44:28, adg wrote:\n> okay, so I knew what this did once, because I remember reviewing it when it\n> first went in, but now I'm having a harder time understanding it. A few comments\n> around this code would really help.\n\nThere are comments down below in the only place where this is read:\n\n// Wait for the just-returned response body to be fully consumed\n// before we race and peek on the underlying bufio reader.\nif waitForBodyRead != nil {\n     alive = <-waitForBodyRead\n}\n\nif !alive {\n   pc.close()\n}\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go#newcode644\nsrc/pkg/net/http/transport.go:644: waitForBodyRead <- false // don't reuse this connection\nOn 2013/03/05 06:44:28, adg wrote:\n> see, I don't see why this does what the comment says :-/\n\nI can make it say \"set alive to false; closes conn\"\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go#newcode899\nsrc/pkg/net/http/transport.go:899: err := es.body.Close()\nOn 2013/03/05 06:44:28, adg wrote:\n> is it really closed if you don't call close?\n\nYes, because this function is named Close.\n\nThis es.body.Close() would do the keep-reading-until-EOF thing, which is what we don't want if we're in the middle of a body.  In that case we just want to kill the connection.\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go#newcode916\nsrc/pkg/net/http/transport.go:916: type readerAndCloser struct {\nOn 2013/03/05 06:44:28, adg wrote:\n> you mean io.ReadCloser ?\n\nNo. This is a struct embedding a Reader and a Closer so it IMPLEMENTS ReadCloser.",
			"disapproval": false,
			"date": "2013-03-05 16:35:50.891700",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go\nFile src/pkg/net/http/transport.go (right):\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go#newcode644\nsrc/pkg/net/http/transport.go:644: waitForBodyRead <- false // don't reuse this connection\nOn 2013/03/05 16:35:50, bradfitz wrote:\n> On 2013/03/05 06:44:28, adg wrote:\n> > see, I don't see why this does what the comment says :-/\n> \n> I can make it say \"set alive to false; closes conn\"\n\nI think it's ok\n\nhttps://codereview.appspot.com/7419050/diff/4001/src/pkg/net/http/transport.go#newcode916\nsrc/pkg/net/http/transport.go:916: type readerAndCloser struct {\nOn 2013/03/05 16:35:50, bradfitz wrote:\n> On 2013/03/05 06:44:28, adg wrote:\n> > you mean io.ReadCloser ?\n> \n> No. This is a struct embedding a Reader and a Closer so it IMPLEMENTS\n> ReadCloser.\n\noh nuts. totes obvs",
			"disapproval": false,
			"date": "2013-03-06 01:30:37.297320",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-05 18:51:35.045690",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=d4e1ec84876c ***\n\nnet/http: close TCP connection on Response.Body.Close\n\nPreviously the HTTP client's (*Response).Body.Close would try\nto keep reading until EOF, hoping to reuse the keep-alive HTTP\nconnection, but the EOF might never come, or it might take a\nlong time. Now we immediately close the TCP connection if we\nhaven't seen EOF.\n\nThis shifts the burden onto clients to read their whole response\nbodies if they want the advantage of reusing TCP connections.\n\nIn the future maybe we could decide on heuristics to read some\nnumber of bytes for some max amount of time before forcefully\nclosing, but I'd rather not for now.\n\nStatistically, touching this code makes things regress, so I\nwouldn't be surprised if this introduces new bugs, but all the\ntests pass, and I think the code is simpler now too. Maybe.\n\nPlease test your HTTP client code before Go 1.1.\n\nFixes issue 3672\n\nR=golang-dev, adg\nCC=golang-dev\nhttps://codereview.appspot.com/7419050",
			"disapproval": false,
			"date": "2013-03-06 02:47:23.189870",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 7419050: net/http: close TCP connection on Response.Body.Close",
	"created": "2013-03-04 23:04:40.602400",
	"patchsets": [
		1,
		2001,
		4001,
		10001,
		14001
	],
	"modified": "2013-03-06 02:47:24.816620",
	"closed": true,
	"issue": 7419050
}