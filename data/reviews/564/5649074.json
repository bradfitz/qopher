{
	"description": "builder: really set $GOBUILDEXIT for Windows",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nOn Feb 12, 2012 5:46 PM, <alex.brainman@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> builder: really set $GOBUILDEXIT for Windows\n>\n> Please review this at http://codereview.appspot.com/**5649074/<http://codereview.appspot.com/5649074/>\n>\n> Affected files:\n>  M misc/dashboard/builder/main.go\n>\n>\n> Index: misc/dashboard/builder/main.go\n> ==============================**==============================**=======\n> --- a/misc/dashboard/builder/main.**go\n> +++ b/misc/dashboard/builder/main.**go\n> @@ -54,7 +54,7 @@\n>        buildRelease  = flag.Bool(\"release\", false, \"Build and upload\n> binary release archives\")\n>        buildRevision = flag.String(\"rev\", \"\", \"Build specified revision\n> and exit\")\n>        buildCmd      = flag.String(\"cmd\", filepath.Join(\".\", allCmd),\n> \"Build command (specify relative to go/src/)\")\n> -       failAll = flag.Bool(\"fail\", false, \"fail all builds\")\n> +       failAll       = flag.Bool(\"fail\", false, \"fail all builds\")\n>        external      = flag.Bool(\"external\", false, \"Build external\n> packages\")\n>        parallel      = flag.Bool(\"parallel\", false, \"Build multiple\n> targets in parallel\")\n>        verbose       = flag.Bool(\"v\", false, \"verbose\")\n> @@ -88,7 +88,7 @@\n>                }\n>                builders[i] = b\n>        }\n> -\n> +\n>        if *failAll {\n>                failMode(builders)\n>                return\n> @@ -383,10 +383,10 @@\n>        if hash == \"\" {\n>                return false\n>        }\n> -\n> +\n>        log.Printf(\"fail %s %s\\n\", b.name, hash)\n>\n> -       if err := b.recordResult(false, \"\", hash, \"\", \"auto-fail mode run\n> by \" + os.Getenv(\"USER\"), 0); err != nil {\n> +       if err := b.recordResult(false, \"\", hash, \"\", \"auto-fail mode run\n> by \"+os.Getenv(\"USER\"), 0); err != nil {\n>                log.Print(err)\n>        }\n>        return true\n> @@ -478,7 +478,6 @@\n>                \"GOOS=\" + b.goos,\n>                \"GOARCH=\" + b.goarch,\n>                \"GOROOT_FINAL=/usr/local/go\",\n> -               \"GOBUILDEXIT=1\", // On Windows, exit all.bat with\n> completion status.\n>        }\n>        for _, k := range extraEnv {\n>                s, err := os.Getenverror(k)\n> @@ -496,7 +495,8 @@\n>                \"GOARCH\":       b.goarch,\n>                \"GOROOT_FINAL\": \"/c/go\",\n>                // TODO(brainman): remove once we find make that does not\n> hang.\n> -               \"MAKEFLAGS\": \"-j1\",\n> +               \"MAKEFLAGS\":   \"-j1\",\n> +               \"GOBUILDEXIT\": \"1\", // exit all.bat with completion status.\n>        }\n>        for _, name := range extraEnv {\n>                s, err := os.Getenverror(name)\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-13 03:26:52.246880",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=676788f0eb7f ***\n\nbuilder: really set $GOBUILDEXIT for Windows\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5649074",
			"disapproval": false,
			"date": "2012-02-13 03:32:51.908618",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/13 03:26:52, rsc1 wrote:\n> LGTM\n\nWill you update windows builders when you have time, please. Thank you.\n\nAlex",
			"disapproval": false,
			"date": "2012-02-13 03:34:28.155550",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-12 22:46:07.504140",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5649074: builder: really set $GOBUILDEXIT for Windows",
	"created": "2012-02-12 22:44:40.364336",
	"patchsets": [
		1,
		2001,
		3001,
		5002
	],
	"modified": "2012-02-13 03:34:28.249359",
	"closed": true,
	"issue": 5649074
}