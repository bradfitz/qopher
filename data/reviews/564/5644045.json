{
	"description": "encoding/gob: document CommonType\nAlso bring the names in doc.go in line with the source.\nMore radical resolutions are possible but require substantial internal\nchanges for very little benefit. Fixing it this way lets us keep the\nembedding, which has a huge simplifying effect, and guarantees\nbinary compatibility.\n\nFixes issue 2848.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-07 03:29:03.069106",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n On Feb 6, 2012 7:29 PM, <r@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> encoding/gob: document CommonType\n> Also bring the names in doc.go in line with the source.\n> More radical resolutions are possible but require substantial internal\n> changes for very little benefit. Fixing it this way lets us keep the\n> embedding, which has a huge simplifying effect, and guarantees\n> binary compatibility.\n>\n> Fixes issue 2848.\n>\n> Please review this at http://codereview.appspot.com/**5644045/<http://codereview.appspot.com/5644045/>\n>\n> Affected files:\n>  M src/pkg/encoding/gob/doc.go\n>  M src/pkg/encoding/gob/type.go\n>\n>\n> Index: src/pkg/encoding/gob/doc.go\n> ==============================**==============================**=======\n> --- a/src/pkg/encoding/gob/doc.go\n> +++ b/src/pkg/encoding/gob/doc.go\n> @@ -162,7 +162,7 @@\n>                StructT *StructType\n>                MapT    *MapType\n>        }\n> -       type ArrayType struct {\n> +       type arrayType struct {\n>                CommonType\n>                Elem typeId\n>                Len  int\n> @@ -171,19 +171,19 @@\n>                Name string // the name of the struct type\n>                Id  int    // the id of the type, repeated so it's inside\n> the type\n>        }\n> -       type SliceType struct {\n> +       type sliceType struct {\n>                CommonType\n>                Elem typeId\n>        }\n> -       type StructType struct {\n> +       type structType struct {\n>                CommonType\n>                Field []*fieldType // the fields of the struct.\n>        }\n> -       type FieldType struct {\n> +       type fieldType struct {\n>                Name string // the name of the field.\n>                Id   int    // the type id of the field, which must be\n> already defined\n>        }\n> -       type MapType struct {\n> +       type mapType struct {\n>                CommonType\n>                Key  typeId\n>                Elem typeId\n> @@ -308,15 +308,15 @@\n>        // Set the field number implicitly to -1; this is done at the\n> beginning\n>        // of every struct, including nested structs.\n>        03      // Add 3 to field number; now 2 (wireType.structType; this\n> is a struct).\n> -               // structType starts with an embedded commonType, which\n> appears\n> +               // structType starts with an embedded CommonType, which\n> appears\n>                // as a regular structure here too.\n> -       01      // add 1 to field number (now 0); start of embedded\n> commonType.\n> +       01      // add 1 to field number (now 0); start of embedded\n> CommonType.\n>        01      // add 1 to field number (now 0, the name of the type)\n>        05      // string is (unsigned) 5 bytes long\n> -       50 6f 69 6e 74  // wireType.structType.**commonType.name<http://wireType.structType.commonType.name>= \"Point\"\n> +       50 6f 69 6e 74  // wireType.structType.**CommonType.name<http://wireType.structType.CommonType.name>= \"Point\"\n>        01      // add 1 to field number (now 1, the id of the type)\n> -       ff 82   // wireType.structType.**commonType._id = 65\n> -       00      // end of embedded wiretype.structType.commonType struct\n> +       ff 82   // wireType.structType.**CommonType._id = 65\n> +       00      // end of embedded wiretype.structType.CommonType struct\n>        01      // add 1 to field number (now 1, the field array in\n> wireType.structType)\n>        02      // There are two fields in the type (len(structType.field))\n>        01      // Start of first field structure; add 1 to get field\n> number 0: field[0].name\n> Index: src/pkg/encoding/gob/type.go\n> ==============================**==============================**=======\n> --- a/src/pkg/encoding/gob/type.go\n> +++ b/src/pkg/encoding/gob/type.go\n> @@ -180,7 +180,10 @@\n>        return t.gobType().name()\n>  }\n>\n> -// Common elements of all types.\n> +// CommonType holds elements of all types.\n> +// It is a historical artifact, kept for binary compatibility and exported\n> +// only for the benefit of the package's encoding of type descriptors. It\n> is\n> +// not intended for direct use by clients.\n>  type CommonType struct {\n>        Name string\n>        Id   typeId\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-07 04:07:43.327501",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f7a090be42f5 ***\n\nencoding/gob: document CommonType\nAlso bring the names in doc.go in line with the source.\nMore radical resolutions are possible but require substantial internal\nchanges for very little benefit. Fixing it this way lets us keep the\nembedding, which has a huge simplifying effect, and guarantees\nbinary compatibility.\n\nFixes issue 2848.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5644045",
			"disapproval": false,
			"date": "2012-02-07 05:16:01.779693",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5644045: encoding/gob: document CommonType",
	"created": "2012-02-07 03:28:54.959040",
	"patchsets": [
		1,
		4001
	],
	"modified": "2012-02-07 05:16:03.567884",
	"closed": true,
	"issue": 5644045
}