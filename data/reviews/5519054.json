{
	"description": "windows: use ArbitraryUserPointer as TLS slot",
	"cc": [
		"hectorchu@gmail.com",
		"alex.brainman@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "vcc.163@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\u5728 2012\u5e741\u67086\u65e5\u661f\u671f\u4e94\uff0cHector Chu <hectorchu@gmail.com> \u5199\u9053\uff1a\n> Can you confirm that it solves your ODBC problem Wei?\n\nyes\n\n>\n> On 6 January 2012 08:40,  <vcc.163@gmail.com> wrote:\n>> Reviewers: hector, brainman,\n>>\n>> Message:\n>> Hello hectorchu@gmail.com, alex.brainman@gmail.com (cc:\n>> golang-dev@googlegroups.com),\n>>\n>> I'd like you to review this change to\n>> http://go.googlecode.com/hg/\n>>\n>>\n>> Description:\n>> windows: use ArbitraryUserPointer as TLS slot\n>>\n>> Please review this at http://codereview.appspot.com/5519054/\n>>\n>> Affected files:\n>>  M src/cmd/6l/pass.c\n>>  M src/cmd/8l/pass.c\n>>  M src/pkg/runtime/cgo/gcc_windows_386.c\n>>  M src/pkg/runtime/cgo/gcc_windows_amd64.c\n>>  M src/pkg/runtime/mkasmh.sh\n>>  M src/pkg/runtime/sys_windows_386.s\n>>  M src/pkg/runtime/sys_windows_amd64.s\n>>\n>>\n>> Index: src/cmd/6l/pass.c\n>> ===================================================================\n>> --- a/src/cmd/6l/pass.c\n>> +++ b/src/cmd/6l/pass.c\n>> @@ -276,7 +276,7 @@\n>>                        // Convert\n>>                        //   op   n(GS), reg\n>>                        // to\n>> -                       //   MOVL 0x58(GS), reg\n>> +                       //   MOVL 0x28(GS), reg\n>>                        //   op   n(reg), reg\n>>                        // The purpose of this patch is to fix some\naccesses\n>>                        // to extern register variables (TLS) on Windows,\nas\n>> @@ -291,7 +291,7 @@\n>>                                q->as = p->as;\n>>                                p->as = AMOVQ;\n>>                                p->from.type = D_INDIR+D_GS;\n>> -                               p->from.offset = 0x58;\n>> +                               p->from.offset = 0x28;\n>>                        }\n>>                }\n>>                if(HEADTYPE == Hlinux || HEADTYPE == Hfreebsd\n>> @@ -428,11 +428,11 @@\n>>                        p->from.offset = tlsoffset+0;\n>>                        p->to.type = D_CX;\n>>                        if(HEADTYPE == Hwindows) {\n>> -                               // movq %gs:0x58, %rcx\n>> +                               // movq %gs:0x28, %rcx\n>>                                // movq (%rcx), %rcx\n>>                                p->as = AMOVQ;\n>>                                p->from.type = D_INDIR+D_GS;\n>> -                               p->from.offset = 0x58;\n>> +                               p->from.offset = 0x28;\n>>\n",
			"disapproval": false,
			"date": "2012-01-06 12:59:28.123903",
			"approval": false
		},
		{
			"sender": "vcc.163@gmail.com",
			"recipients": [
				"vcc.163@gmail.com",
				"hectorchu@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello hectorchu@gmail.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttp://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-06 08:40:54.736315",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can you confirm that it solves your ODBC problem Wei?\n\nOn 6 January 2012 08:40,  <vcc.163@gmail.com> wrote:\n> Reviewers: hector, brainman,\n>\n> Message:\n> Hello hectorchu@gmail.com, alex.brainman@gmail.com (cc:\n> golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> http://go.googlecode.com/hg/\n>\n>\n> Description:\n> windows: use ArbitraryUserPointer as TLS slot\n>\n> Please review this at http://codereview.appspot.com/5519054/\n>\n> Affected files:\n> \u00a0M src/cmd/6l/pass.c\n> \u00a0M src/cmd/8l/pass.c\n> \u00a0M src/pkg/runtime/cgo/gcc_windows_386.c\n> \u00a0M src/pkg/runtime/cgo/gcc_windows_amd64.c\n> \u00a0M src/pkg/runtime/mkasmh.sh\n> \u00a0M src/pkg/runtime/sys_windows_386.s\n> \u00a0M src/pkg/runtime/sys_windows_amd64.s\n>\n>\n> Index: src/cmd/6l/pass.c\n> ===================================================================\n> --- a/src/cmd/6l/pass.c\n> +++ b/src/cmd/6l/pass.c\n> @@ -276,7 +276,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// Convert\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// \u00a0 op \u00a0 n(GS), reg\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// to\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 MOVL 0x58(GS), reg\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 MOVL 0x28(GS), reg\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// \u00a0 op \u00a0 n(reg), reg\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// The purpose of this patch is to fix some accesses\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// to extern register variables (TLS) on Windows, as\n> @@ -291,7 +291,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0q->as = p->as;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->as = AMOVQ;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->from.type = D_INDIR+D_GS;\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p->from.offset = 0x58;\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p->from.offset = 0x28;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if(HEADTYPE == Hlinux || HEADTYPE == Hfreebsd\n> @@ -428,11 +428,11 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->from.offset = tlsoffset+0;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->to.type = D_CX;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if(HEADTYPE == Hwindows) {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // movq %gs:0x58, %rcx\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // movq %gs:0x28, %rcx\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// movq (%rcx), %rcx\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->as = AMOVQ;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->from.type = D_INDIR+D_GS;\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p->from.offset = 0x58;\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p->from.offset = 0x28;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->to.type = D_CX;\n>\n>\n> Index: src/cmd/8l/pass.c\n> ===================================================================\n> --- a/src/cmd/8l/pass.c\n> +++ b/src/cmd/8l/pass.c\n> @@ -259,7 +259,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// Convert\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// \u00a0 op \u00a0 n(GS), reg\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// to\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 MOVL 0x2C(FS), reg\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 MOVL 0x14(FS), reg\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// \u00a0 op \u00a0 n(reg), reg\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// The purpose of this patch is to fix some\n> accesses\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// to extern register variables (TLS) on\n> Windows, as\n> @@ -273,7 +273,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0q->as = p->as;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->as = AMOVL;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->from.type = D_INDIR+D_FS;\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p->from.offset = 0x2C;\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p->from.offset = 0x14;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if(HEADTYPE == Hlinux) {\n> @@ -424,7 +424,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0case Hwindows:\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->as = AMOVL;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->from.type = D_INDIR+D_FS;\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p->from.offset = 0x2c;\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p->from.offset = 0x14;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p->to.type = D_CX;\n>\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p = appendp(p);\n> Index: src/pkg/runtime/cgo/gcc_windows_386.c\n> ===================================================================\n> --- a/src/pkg/runtime/cgo/gcc_windows_386.c\n> +++ b/src/pkg/runtime/cgo/gcc_windows_386.c\n> @@ -45,8 +45,8 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 */\n> \u00a0 \u00a0 \u00a0 \u00a0tls0 = (void*)LocalAlloc(LPTR, 32);\n> \u00a0 \u00a0 \u00a0 \u00a0asm volatile (\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"movl %0, %%fs:0x2c\\n\" \u00a0// MOVL tls0, 0x2c(FS)\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"movl %%fs:0x2c, %%eax\\n\" \u00a0 \u00a0 \u00a0 // MOVL 0x2c(FS), tmp\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"movl %0, %%fs:0x14\\n\" \u00a0// MOVL tls0, 0x2c(FS)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"movl %%fs:0x14, %%eax\\n\" \u00a0 \u00a0 \u00a0 // MOVL 0x2c(FS), tmp\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"movl %1, 0(%%eax)\\n\" \u00a0 // MOVL g, 0(FS)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"movl %2, 4(%%eax)\\n\" \u00a0 // MOVL m, 4(FS)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0:: \"r\"(tls0), \"r\"(ts.g), \"r\"(ts.m) : \"%eax\"\n> Index: src/pkg/runtime/cgo/gcc_windows_amd64.c\n> ===================================================================\n> --- a/src/pkg/runtime/cgo/gcc_windows_amd64.c\n> +++ b/src/pkg/runtime/cgo/gcc_windows_amd64.c\n> @@ -45,8 +45,8 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 */\n> \u00a0 \u00a0 \u00a0 \u00a0tls0 = (void*)LocalAlloc(LPTR, 64);\n> \u00a0 \u00a0 \u00a0 \u00a0asm volatile (\n> - \u00a0 \u00a0 \u00a0 \u00a0 \"movq %0, %%gs:0x58\\n\" \u00a0 \u00a0 \u00a0 \u00a0// MOVL tls0, 0x58(GS)\n> - \u00a0 \u00a0 \u00a0 \u00a0 \"movq %%gs:0x58, %%rax\\n\" // MOVQ 0x58(GS), tmp\n> + \u00a0 \u00a0 \u00a0 \u00a0 \"movq %0, %%gs:0x28\\n\" \u00a0 \u00a0 \u00a0 \u00a0// MOVL tls0, 0x58(GS)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \"movq %%gs:0x28, %%rax\\n\" // MOVQ 0x58(GS), tmp\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"movq %1, 0(%%rax)\\n\" // MOVQ g, 0(GS)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\"movq %2, 8(%%rax)\\n\" // MOVQ m, 8(GS)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0:: \"r\"(tls0), \"r\"(ts.g), \"r\"(ts.m) : \"%rax\"\n> Index: src/pkg/runtime/mkasmh.sh\n> ===================================================================\n> --- a/src/pkg/runtime/mkasmh.sh\n> +++ b/src/pkg/runtime/mkasmh.sh\n> @@ -38,7 +38,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0# \u00a0 \u00a0 \u00a0 ../../libcgo/darwin_386.c:/^threadentry\n> \u00a0 \u00a0 \u00a0 \u00a0case \"$GOOS\" in\n> \u00a0 \u00a0 \u00a0 \u00a0windows)\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo '#define \u00a0 get_tls(r) \u00a0 \u00a0 \u00a0MOVL 0x2c(FS), r'\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo '#define \u00a0 get_tls(r) \u00a0 \u00a0 \u00a0MOVL 0x14(FS), r'\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0echo '#define \u00a0 g(r) \u00a0 \u00a00(r)'\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0echo '#define \u00a0 m(r) \u00a0 \u00a04(r)'\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0;;\n> @@ -82,7 +82,7 @@\n> \u00a0amd64)\n> \u00a0 \u00a0 \u00a0 \u00a0case \"$GOOS\" in\n> \u00a0 \u00a0 \u00a0 \u00a0windows)\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo '#define \u00a0 get_tls(r) MOVQ 0x58(GS), r'\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 echo '#define \u00a0 get_tls(r) MOVQ 0x28(GS), r'\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0echo '#define \u00a0 g(r) 0(r)'\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0echo '#define \u00a0 m(r) 8(r)'\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0;;\n> Index: src/pkg/runtime/sys_windows_386.s\n> ===================================================================\n> --- a/src/pkg/runtime/sys_windows_386.s\n> +++ b/src/pkg/runtime/sys_windows_386.s\n> @@ -98,7 +98,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0PUSHL \u00a0 BX\n> \u00a0 \u00a0 \u00a0 \u00a0PUSHL \u00a0 SI\n> \u00a0 \u00a0 \u00a0 \u00a0PUSHL \u00a0 DI\n> - \u00a0 \u00a0 \u00a0 PUSHL \u00a0 0x2c(FS)\n> + \u00a0 \u00a0 \u00a0 PUSHL \u00a0 0x14(FS)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVL \u00a0 \u00a0SP, DX\n>\n> \u00a0 \u00a0 \u00a0 \u00a0// setup dummy m, g\n> @@ -108,7 +108,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0CALL \u00a0 \u00a0runtime\u00b7memclr(SB) \u00a0 \u00a0 \u00a0// smashes AX,BX,CX\n>\n> \u00a0 \u00a0 \u00a0 \u00a0LEAL \u00a0 \u00a0m_tls(SP), CX\n> - \u00a0 \u00a0 \u00a0 MOVL \u00a0 \u00a0CX, 0x2c(FS)\n> + \u00a0 \u00a0 \u00a0 MOVL \u00a0 \u00a0CX, 0x14(FS)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVL \u00a0 \u00a0SP, m(CX)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVL \u00a0 \u00a0SP, BX\n> \u00a0 \u00a0 \u00a0 \u00a0SUBL \u00a0 \u00a0$g_end, SP \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// space for G\n> @@ -129,7 +129,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0get_tls(CX)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVL \u00a0 \u00a0g(CX), CX\n> \u00a0 \u00a0 \u00a0 \u00a0MOVL \u00a0 \u00a0g_stackbase(CX), SP\n> - \u00a0 \u00a0 \u00a0 POPL \u00a0 \u00a00x2c(FS)\n> + \u00a0 \u00a0 \u00a0 POPL \u00a0 \u00a00x14(FS)\n> \u00a0 \u00a0 \u00a0 \u00a0POPL \u00a0 \u00a0DI\n> \u00a0 \u00a0 \u00a0 \u00a0POPL \u00a0 \u00a0SI\n> \u00a0 \u00a0 \u00a0 \u00a0POPL \u00a0 \u00a0BX\n> @@ -208,7 +208,7 @@\n>\n> \u00a0 \u00a0 \u00a0 \u00a0// Set up tls.\n> \u00a0 \u00a0 \u00a0 \u00a0LEAL \u00a0 \u00a0m_tls(CX), SI\n> - \u00a0 \u00a0 \u00a0 MOVL \u00a0 \u00a0SI, 0x2c(FS)\n> + \u00a0 \u00a0 \u00a0 MOVL \u00a0 \u00a0SI, 0x14(FS)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVL \u00a0 \u00a0CX, m(SI)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVL \u00a0 \u00a0DX, g(SI)\n>\n> @@ -246,5 +246,5 @@\n> \u00a0// setldt(int entry, int address, int limit)\n> \u00a0TEXT runtime\u00b7setldt(SB),7,$0\n> \u00a0 \u00a0 \u00a0 \u00a0MOVL \u00a0 \u00a0address+4(FP), CX\n> - \u00a0 \u00a0 \u00a0 MOVL \u00a0 \u00a0CX, 0x2c(FS)\n> + \u00a0 \u00a0 \u00a0 MOVL \u00a0 \u00a0CX, 0x14(FS)\n> \u00a0 \u00a0 \u00a0 \u00a0RET\n> Index: src/pkg/runtime/sys_windows_amd64.s\n> ===================================================================\n> --- a/src/pkg/runtime/sys_windows_amd64.s\n> +++ b/src/pkg/runtime/sys_windows_amd64.s\n> @@ -121,7 +121,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0PUSHQ \u00a0 BX\n> \u00a0 \u00a0 \u00a0 \u00a0PUSHQ \u00a0 SI\n> \u00a0 \u00a0 \u00a0 \u00a0PUSHQ \u00a0 DI\n> - \u00a0 \u00a0 \u00a0 PUSHQ \u00a0 0x58(GS)\n> + \u00a0 \u00a0 \u00a0 PUSHQ \u00a0 0x28(GS)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVQ \u00a0 \u00a0SP, DX\n>\n> \u00a0 \u00a0 \u00a0 \u00a0// setup dummy m, g\n> @@ -131,7 +131,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0CALL \u00a0 \u00a0runtime\u00b7memclr(SB) \u00a0 \u00a0 \u00a0// smashes AX,BX,CX\n>\n> \u00a0 \u00a0 \u00a0 \u00a0LEAQ \u00a0 \u00a0m_tls(SP), CX\n> - \u00a0 \u00a0 \u00a0 MOVQ \u00a0 \u00a0CX, 0x58(GS)\n> + \u00a0 \u00a0 \u00a0 MOVQ \u00a0 \u00a0CX, 0x28(GS)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVQ \u00a0 \u00a0SP, m(CX)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVQ \u00a0 \u00a0SP, BX\n> \u00a0 \u00a0 \u00a0 \u00a0SUBQ \u00a0 \u00a0$g_end, SP \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// space for G\n> @@ -152,7 +152,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0get_tls(CX)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVQ \u00a0 \u00a0g(CX), CX\n> \u00a0 \u00a0 \u00a0 \u00a0MOVQ \u00a0 \u00a0g_stackbase(CX), SP\n> - \u00a0 \u00a0 \u00a0 POPQ \u00a0 \u00a00x58(GS)\n> + \u00a0 \u00a0 \u00a0 POPQ \u00a0 \u00a00x28(GS)\n> \u00a0 \u00a0 \u00a0 \u00a0POPQ \u00a0 \u00a0DI\n> \u00a0 \u00a0 \u00a0 \u00a0POPQ \u00a0 \u00a0SI\n> \u00a0 \u00a0 \u00a0 \u00a0POPQ \u00a0 \u00a0BX\n> @@ -254,7 +254,7 @@\n>\n> \u00a0 \u00a0 \u00a0 \u00a0// Set up tls.\n> \u00a0 \u00a0 \u00a0 \u00a0LEAQ \u00a0 \u00a0m_tls(CX), SI\n> - \u00a0 \u00a0 \u00a0 MOVQ \u00a0 \u00a0SI, 0x58(GS)\n> + \u00a0 \u00a0 \u00a0 MOVQ \u00a0 \u00a0SI, 0x28(GS)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVQ \u00a0 \u00a0CX, m(SI)\n> \u00a0 \u00a0 \u00a0 \u00a0MOVQ \u00a0 \u00a0DX, g(SI)\n>\n> @@ -276,5 +276,5 @@\n> \u00a0// set tls base to DI\n> \u00a0TEXT runtime\u00b7settls(SB),7,$0\n> \u00a0 \u00a0 \u00a0 \u00a0CALL \u00a0 \u00a0runtime\u00b7setstacklimits(SB)\n> - \u00a0 \u00a0 \u00a0 MOVQ \u00a0 \u00a0DI, 0x58(GS)\n> + \u00a0 \u00a0 \u00a0 MOVQ \u00a0 \u00a0DI, 0x28(GS)\n> \u00a0 \u00a0 \u00a0 \u00a0RET\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-06 08:48:06.577199",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-01-06 16:19:07.156360",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"vcc.163@gmail.com",
				"hectorchu@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-09 00:22:28.197945",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"vcc.163@gmail.com",
				"hectorchu@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=003182d3b2cd ***\n\nwindows: use ArbitraryUserPointer as TLS slot\n\nR=hectorchu, alex.brainman\nCC=golang-dev\nhttp://codereview.appspot.com/5519054\n\nCommitter: Alex Brainman <alex.brainman@gmail.com>",
			"disapproval": false,
			"date": "2012-01-09 00:23:17.165028",
			"approval": false
		}
	],
	"owner_email": "vcc.163@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "vcc",
	"subject": "code review 5519054: windows: use ArbitraryUserPointer as TLS slot",
	"created": "2012-01-06 08:35:45.488023",
	"patchsets": [
		1,
		3,
		4,
		3008
	],
	"modified": "2012-01-09 01:41:38.151867",
	"closed": true,
	"issue": 5519054
}