{
	"description": "goauth2: update for Go 1",
	"cc": [
		"ality@pbrane.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"maruel@chromium.org",
		"proppy@google.com"
	],
	"messages": [
		{
			"sender": "maruel@chromium.org",
			"recipients": [
				"adg@golang.org",
				"proppy@google.com",
				"maruel@chromium.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "lgtm\n\nDo you mind incorporating the example change there: http://codereview.appspot.com/5632043/ ?\n\nIt was slightly disheartening to look at an example about buzz. The profile example gives small bits of information that is simpler to understand IMHO.\n\nhttp://codereview.appspot.com/5629060/diff/6001/oauth/oauth.go\nFile oauth/oauth.go (right):\n\nhttp://codereview.appspot.com/5629060/diff/6001/oauth/oauth.go#newcode76\noauth/oauth.go:76: if t.Expiry == nil {\nnote: I didn't feel it easier to understand to have it on 3 lines, it happily fits on one.\n\nhttp://codereview.appspot.com/5629060/diff/6001/oauth/oauth.go#newcode221\noauth/oauth.go:221: tok.Expiry = &e\nWhy use a named variable?\ntok.Expiry = &time.Now().Add(b.ExpiresIn * time.Second)\nwould be fine?",
			"disapproval": false,
			"date": "2012-02-05 13:21:21.930438",
			"approval": true
		},
		{
			"sender": "maruel@chromium.org",
			"recipients": [
				"adg@golang.org",
				"proppy@google.com",
				"maruel@chromium.org",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/05 13:24:50, adg wrote:\n> I'd prefer to take your example change in a separate CL, if you don't mind.\n\nnp. I updated 5632043 in case.\n\nThanks for the bits about return value address, I'm still learning.\n\n\nOn 2012/02/05 14:06:55, ality wrote:\n> mailto:adg@golang.org once said:\n> > >Why use a named variable?\n> > >tok.Expiry = &time.Now().Add(b.ExpiresIn * time.Second)\n> > >would be fine?\n> > \n> > No, that won't work. The return value of a function is not addressable.\n> > (http://weekly.golang.org/doc/go_spec.html#Address_operators)\n> \n> You could make Expiry a value instead of a pointer.\n> Then it would be:\n> \n> \ttok.Expiry = time.Now().Add(b.ExpiresIn * time.Second)\n> \n> And instead of checking for nil you would use the IsZero method.\n\nI tend to agree with Anthony. Not using a pointer here reduces the likelihood of messing up.\n\nNote that my original CL I thought about using time.Time but didn't because I wanted to keep the CL as simple as possible. :)",
			"disapproval": false,
			"date": "2012-02-05 14:13:30.788580",
			"approval": false
		},
		{
			"sender": "maruel@chromium.org",
			"recipients": [
				"adg@golang.org",
				"proppy@google.com",
				"maruel@chromium.org",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5629060/diff/6001/oauth/oauth.go\nFile oauth/oauth.go (right):\n\nhttp://codereview.appspot.com/5629060/diff/6001/oauth/oauth.go#newcode187\noauth/oauth.go:187: return errors.New(\"no exisiting Token\")\nexisting",
			"disapproval": false,
			"date": "2012-02-05 16:29:02.618651",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"proppy@google.com",
				"maruel@chromium.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello proppy, M-A (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/goauth2",
			"disapproval": false,
			"date": "2012-02-05 12:56:54.775328",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "adg@golang.org once said:\n> >Why use a named variable?\n> >tok.Expiry = &time.Now().Add(b.ExpiresIn * time.Second)\n> >would be fine?\n> \n> No, that won't work. The return value of a function is not addressable.\n> (http://weekly.golang.org/doc/go_spec.html#Address_operators)\n\nYou could make Expiry a value instead of a pointer.\nThen it would be:\n\n\ttok.Expiry = time.Now().Add(b.ExpiresIn * time.Second)\n\nAnd instead of checking for nil you would use the IsZero method.\n\nCheers,\n  Anthony\n",
			"disapproval": false,
			"date": "2012-02-05 14:06:55.169880",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"proppy@google.com",
				"maruel@chromium.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd prefer to take your example change in a separate CL, if you don't mind.\n\nhttp://codereview.appspot.com/5629060/diff/6001/oauth/oauth.go\nFile oauth/oauth.go (right):\n\nhttp://codereview.appspot.com/5629060/diff/6001/oauth/oauth.go#newcode76\noauth/oauth.go:76: if t.Expiry == nil {\nOn 2012/02/05 13:21:22, M-A wrote:\n> note: I didn't feel it easier to understand to have it on 3 lines, it happily\n> fits on one.\n\nWhy use one line when 3 lines will do? :-)\n\nhttp://codereview.appspot.com/5629060/diff/6001/oauth/oauth.go#newcode221\noauth/oauth.go:221: tok.Expiry = &e\nOn 2012/02/05 13:21:22, M-A wrote:\n> Why use a named variable?\n> tok.Expiry = &time.Now().Add(b.ExpiresIn * time.Second)\n> would be fine?\n\nNo, that won't work. The return value of a function is not addressable. (http://weekly.golang.org/doc/go_spec.html#Address_operators)\n\n$ cat foo.go \npackage main\n\nimport \"time\"\n\nfunc main() {\n\tt := &time.Now()\n\t_ = t\n}\n$ go run foo.go\n# _/foo\n/Users/nf/foo.go:6: cannot take the address of time.Now()",
			"disapproval": false,
			"date": "2012-02-05 13:24:50.334229",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"adg@golang.org",
				"maruel@chromium.org",
				"proppy@google.com",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5629060/diff/7002/oauth/oauth.go\nFile oauth/oauth.go (right):\n\nhttp://codereview.appspot.com/5629060/diff/7002/oauth/oauth.go#newcode218\noauth/oauth.go:218: tok.Expiry = time.Unix(0, 0)\nOn 2012/02/06 00:21:12, M-A wrote:\n> Sadly, this won't trigger IsZero() at line 76.\n> \n> \"IsZero reports whether t represents the zero time instant, January 1, year 1,\n> 00:00:00 UTC.\"\n\ntime.Time{}.IsZero() should work.",
			"disapproval": false,
			"date": "2012-02-06 11:23:37.830824",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 6 February 2012 01:06, Anthony Martin <ality@pbrane.org> wrote:\n> instead of checking for nil you would use the IsZero method.\n\nI didn't notice IsZero. Thanks for the suggestion. I've made Expiry a\ntime.Time value now.\n\nAndrew\n",
			"disapproval": false,
			"date": "2012-02-05 22:33:07.492650",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"proppy@google.com",
				"maruel@chromium.org",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 4ee7c273e92e ***\n\ngoauth2: update for Go 1\n\nR=proppy, maruel, ality\nCC=golang-dev\nhttp://codereview.appspot.com/5629060",
			"disapproval": false,
			"date": "2012-02-05 23:40:52.815414",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"proppy@google.com",
				"maruel@chromium.org",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5629060/diff/6001/oauth/oauth.go\nFile oauth/oauth.go (right):\n\nhttp://codereview.appspot.com/5629060/diff/6001/oauth/oauth.go#newcode187\noauth/oauth.go:187: return errors.New(\"no exisiting Token\")\nOn 2012/02/05 16:29:02, M-A wrote:\n> existing\n\nDone.",
			"disapproval": false,
			"date": "2012-02-05 22:33:12.607946",
			"approval": false
		},
		{
			"sender": "maruel@chromium.org",
			"recipients": [
				"adg@golang.org",
				"maruel@chromium.org",
				"proppy@google.com",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5629060/diff/7002/oauth/oauth.go\nFile oauth/oauth.go (right):\n\nhttp://codereview.appspot.com/5629060/diff/7002/oauth/oauth.go#newcode218\noauth/oauth.go:218: tok.Expiry = time.Unix(0, 0)\nSadly, this won't trigger IsZero() at line 76.\n\n\"IsZero reports whether t represents the zero time instant, January 1, year 1, 00:00:00 UTC.\"",
			"disapproval": false,
			"date": "2012-02-06 00:21:12.791193",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "maruel@chromium.org once said:\n> http://codereview.appspot.com/5629060/diff/7002/oauth/oauth.go#newcode218\n> oauth/oauth.go:218: tok.Expiry = time.Unix(0, 0)\n> Sadly, this won't trigger IsZero() at line 76.\n\nTrue.  The test needs to be:\n\nif b.ExpiresIn > 0 {\n\ttok.Expiry = time.Now().Add(b.ExpiresIn * time.Second)\n}\n",
			"disapproval": false,
			"date": "2012-02-06 00:34:27.737570",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5629060: goauth2: update for Go 1",
	"created": "2012-02-05 12:56:49.527207",
	"patchsets": [
		1,
		3001,
		4001,
		6001,
		9001,
		7002
	],
	"modified": "2012-02-06 11:23:38.159360",
	"closed": true,
	"issue": 5629060
}