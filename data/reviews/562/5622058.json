{
	"description": "cmd/dist: generate files for package runtime\ngoc2c moves here.\nparallel builds like old makefiles (-j4).\nadd clean command.\nadd banner command.\nimplement Go version check.\nreal argument parsing (same as 6g etc)\n\nWindows changes will be a separate CL.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"iant@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-03 07:49:02.606825",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttp://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/build.c#newcode1120\nsrc/cmd/dist/build.c:1120: \"install      install individual directory\\n\"\ninstall [dir] ?",
			"disapproval": false,
			"date": "2012-02-03 20:50:34.514860",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nThis is actually working with all.bash now.\nI will send the Windows updates in a separate CL.\nFor now this is not hooked into the build so it\ndoesn't matter that the Windows stuff is old.\n",
			"disapproval": false,
			"date": "2012-02-03 20:27:19.501479",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5622058/diff/8001/src/cmd/dist/a.h\nFile src/cmd/dist/a.h (right):\n\nhttp://codereview.appspot.com/5622058/diff/8001/src/cmd/dist/a.h#newcode115\nsrc/cmd/dist/a.h:115: void\tbgrunv(char *dir, int mode, Vec *argv);\nneed these on windows still?\n\nhttp://codereview.appspot.com/5622058/diff/8001/src/cmd/dist/goc2c.c\nFile src/cmd/dist/goc2c.c (right):\n\nhttp://codereview.appspot.com/5622058/diff/8001/src/cmd/dist/goc2c.c#newcode720\nsrc/cmd/dist/goc2c.c:720: bprintf(&out, \"// AUTO-GENERATED by autogen.sh; DO NOT EDIT\\n\\n\");\ns/autogen.sh/go tool dist/ ?\n\nhttp://codereview.appspot.com/5622058/diff/8001/src/cmd/dist/main.c\nFile src/cmd/dist/main.c (right):\n\nhttp://codereview.appspot.com/5622058/diff/8001/src/cmd/dist/main.c#newcode39\nsrc/cmd/dist/main.c:39: vflag += xstrlen(argv[1]) - 1;\nso -verbose is like -vvvvvvv? don't really care, unless these are documented somewhere.\n\nhttp://codereview.appspot.com/5622058/diff/8001/src/cmd/dist/unix.c\nFile src/cmd/dist/unix.c (right):\n\nhttp://codereview.appspot.com/5622058/diff/8001/src/cmd/dist/unix.c#newcode126\nsrc/cmd/dist/unix.c:126: #define MAXBG 4 /* maximum number of jobs to run at once */\nthat's pretty arbitrary, but fine for now.\n\nhttp://codereview.appspot.com/5622058/diff/8001/src/cmd/dist/unix.c#newcode226\nsrc/cmd/dist/unix.c:226: if(bg[i].pid == pid)\nshould you zero this field too, now that it's matched, in case the OS re-uses the pid quickly?",
			"disapproval": false,
			"date": "2012-02-03 18:07:04.209951",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 3, 2012 at 17:06,  <iant@golang.org> wrote:\n> src/cmd/dist/build.c:868: if(hassuffix(file, \"cmd/go/doc.go\") ||\n> hassuffix(file, \"cmd\\\\go\\\\doc.go\"))\n> Is this weird special case really worth it?\n\nSadly, the alternatives are all worse.\nI have to figure out to exclude the file or else 6g complains\nthat I handed a file in 'package documentation' along with\na bunch in package main.\n\n> http://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/build.c#newcode1269\n> src/cmd/dist/build.c:1269: case 'v':\n> I suppose you could make -v be an option for the dist program itself\n> rather than an option for the various commands.\n\nIndeed; I was trying to keep the usage simpler: flags all in one place.\n\n> http://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/unix.c#newcode43\n> src/cmd/dist/unix.c:43: // bpathf is the same as bprintf (on windows it\n> turns / into \\ after the printf).\n> Comment should say it returns the string.\n\nDone.\n\n> http://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/unix.c#newcode236\n> src/cmd/dist/unix.c:236: while((pid = waitpid(-1, &status, 0)) < 0) {\n> Might as well just call wait rather than waitpid.\n\nDone.  Thanks.  I can never keep them straight.\n\n> http://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/windows.c#newcode10\n> src/cmd/dist/windows.c:10: #ifdef WIN32\n> Where is bpathf for Windows?\n\nWindows is a future CL.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-03 23:15:17.140562",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d267ecc8b934 ***\n\ncmd/dist: generate files for package runtime\ngoc2c moves here.\nparallel builds like old makefiles (-j4).\nadd clean command.\nadd banner command.\nimplement Go version check.\nreal argument parsing (same as 6g etc)\n\nWindows changes will be a separate CL.\n\nR=golang-dev, bradfitz, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5622058",
			"disapproval": false,
			"date": "2012-02-03 23:16:45.217224",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttp://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/build.c#newcode868\nsrc/cmd/dist/build.c:868: if(hassuffix(file, \"cmd/go/doc.go\") || hassuffix(file, \"cmd\\\\go\\\\doc.go\"))\nIs this weird special case really worth it?\n\nhttp://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/build.c#newcode1269\nsrc/cmd/dist/build.c:1269: case 'v':\nI suppose you could make -v be an option for the dist program itself rather than an option for the various commands.\n\nhttp://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/unix.c\nFile src/cmd/dist/unix.c (right):\n\nhttp://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/unix.c#newcode43\nsrc/cmd/dist/unix.c:43: // bpathf is the same as bprintf (on windows it turns / into \\ after the printf).\nComment should say it returns the string.\n\nhttp://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/unix.c#newcode236\nsrc/cmd/dist/unix.c:236: while((pid = waitpid(-1, &status, 0)) < 0) {\nMight as well just call wait rather than waitpid.\n\nhttp://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/windows.c\nFile src/cmd/dist/windows.c (right):\n\nhttp://codereview.appspot.com/5622058/diff/11011/src/cmd/dist/windows.c#newcode10\nsrc/cmd/dist/windows.c:10: #ifdef WIN32\nWhere is bpathf for Windows?",
			"disapproval": false,
			"date": "2012-02-03 22:06:45.289998",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5622058: cmd/dist: generate files for package runtime",
	"created": "2012-02-03 07:25:10.720206",
	"patchsets": [
		1,
		1002,
		4001,
		8001,
		15001,
		14003,
		11011,
		13003
	],
	"modified": "2012-02-03 22:06:45.289998",
	"closed": true,
	"issue": 5622058
}