{
	"description": "quietgcc: ignore some clang-centric warnings\r\n\r\nclang has some additional warnings that need to be silenced\r\nwhen building with -Werror.\r\n\r\nFixes issue 2878.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"iant@google.com"
	],
	"messages": [
		{
			"sender": "bobbypowers@gmail.com",
			"recipients": [
				"bobbypowers@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/04 05:26:49, rsc wrote:\n> Does this break gcc?\n\nOn my machine with gcc 4.6.2 it does not -- gcc knows about these two options, they're just not enabled by default.  I don't have easy access to older gccs to test.  I can conditionally add them to the gcc flags if you think it will be an issue.",
			"disapproval": false,
			"date": "2012-02-04 05:33:35.774681",
			"approval": false
		},
		{
			"sender": "bobbypowers@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "okay.  I'll close this CL for now and revisit the issue after quietgcc's\nreplacement lands.\n\nOn Sat, Feb 4, 2012 at 12:34 AM, Russ Cox <rsc@golang.org> wrote:\n\n> Don't put too much effort into this particular file.\n> It is being replaced very soon.  We can also use\n> different options if the compiler is named clang.\n>\n",
			"disapproval": false,
			"date": "2012-02-04 05:41:29.788329",
			"approval": false
		},
		{
			"sender": "bobbypowers@gmail.com",
			"recipients": [
				"bobbypowers@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-04 05:21:00.024900",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Don't put too much effort into this particular file.\nIt is being replaced very soon.  We can also use\ndifferent options if the compiler is named clang.\n",
			"disapproval": false,
			"date": "2012-02-04 05:34:52.124981",
			"approval": false
		},
		{
			"sender": "bobbypowers@gmail.com",
			"recipients": [
				"bobbypowers@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-02-04 05:22:36.848267",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bobbypowers@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Does this break gcc?",
			"disapproval": false,
			"date": "2012-02-04 05:26:49.258669",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "rsc@golang.org writes:\n\n> Does this break gcc?\n\nIt would not break gcc.  gcc as a matter of policy ignores unrecognized\noptions starting with -Wno-.  If some other warning or error is\nproduced, gcc will also produce an error about the unrecognized warning.\nBut if no warning or error is produced, the unrecognized -Wno- option is\nsilently ignored.\n\nIan\n",
			"disapproval": false,
			"date": "2012-02-04 05:50:51.996530",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Feb 4, 2012 at 00:50, Ian Lance Taylor <iant@google.com> wrote:\n> It would not break gcc. \u00a0gcc as a matter of policy ignores unrecognized\n> options starting with -Wno-. \u00a0If some other warning or error is\n> produced, gcc will also produce an error about the unrecognized warning.\n> But if no warning or error is produced, the unrecognized -Wno- option is\n> silently ignored.\n\nAnother thing Apple broke?\n\ncc1: error: unrecognized command line option \"-Wno-dangling-else\"\n",
			"disapproval": false,
			"date": "2012-02-08 05:16:50.578605",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Russ Cox <rsc@golang.org> writes:\n\n> On Sat, Feb 4, 2012 at 00:50, Ian Lance Taylor <iant@google.com> wrote:\n>> It would not break gcc. \u00a0gcc as a matter of policy ignores unrecognized\n>> options starting with -Wno-. \u00a0If some other warning or error is\n>> produced, gcc will also produce an error about the unrecognized warning.\n>> But if no warning or error is produced, the unrecognized -Wno- option is\n>> silently ignored.\n>\n> Another thing Apple broke?\n>\n> cc1: error: unrecognized command line option \"-Wno-dangling-else\"\n\n<sigh>\n\nIan\n",
			"disapproval": false,
			"date": "2012-02-08 05:20:45.802096",
			"approval": false
		}
	],
	"owner_email": "bobbypowers@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "bpowers",
	"subject": "code review 5627049: quietgcc: ignore some clang-centric warnings",
	"created": "2012-02-04 05:20:57.989621",
	"patchsets": [
		1
	],
	"modified": "2012-02-04 05:50:52.178207",
	"closed": true,
	"issue": 5627049
}