{
	"description": "test: fix flaky NaN-key map complexity test\n\nDon't measure wall time in map.go. Keep it portable\nand only test NaN, but not time.\n\nMove time tests to mapnan.go and only measure user CPU time,\nnot wall time. It builds on Darwin and Linux, the primary\nplatforms where people hack on the runtime & in particular\nmaps. The runtime is shared, though, so we don't need it to\nrun on all of the platforms.\n\nFixes flaky build failures like:\nhttp://build.golang.org/log/ba67eceefdeaa1142cb6c990a62fa3ffd8fd73f8",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"remyoudompheng@gmail.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8479043/diff/5001/test/mapnan.go\nFile test/mapnan.go (right):\n\nhttps://codereview.appspot.com/8479043/diff/5001/test/mapnan.go#newcode47\ntest/mapnan.go:47: n := 30000 // 0.02 seconds on a MacBook Air\nOn 2013/04/07 18:47:21, r wrote:\n> might as well be more specific. macbook airs may be around forever. something\n> like Late 2010 MacBook Air or 1.4GHz Core Duo MacBook Air\n\nThis is just code movement. I don't know whose MacBook Air this was, nor its specs.  I assume Russ', which IIRC is the same as mine.  I'll update it to say Mid 2011, which is what my system info says here.\n\nhttps://codereview.appspot.com/8479043/diff/5001/test/mapnan.go#newcode59\ntest/mapnan.go:59: return\nOn 2013/04/07 18:47:21, r wrote:\n> d\n\nwill do. also just code movement, though.",
			"disapproval": false,
			"date": "2013-04-07 18:53:06.169770",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-04-07 18:32:37.501480",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/8479043/diff/5001/test/mapnan.go\nFile test/mapnan.go (right):\n\nhttps://codereview.appspot.com/8479043/diff/5001/test/mapnan.go#newcode47\ntest/mapnan.go:47: n := 30000 // 0.02 seconds on a MacBook Air\nmight as well be more specific. macbook airs may be around forever. something like Late 2010 MacBook Air or 1.4GHz Core Duo MacBook Air\n\nhttps://codereview.appspot.com/8479043/diff/5001/test/mapnan.go#newcode59\ntest/mapnan.go:59: return\nd",
			"disapproval": false,
			"date": "2013-04-07 18:47:21.829480",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=845066f7e0df ***\n\ntest: fix flaky NaN-key map complexity test\n\nDon't measure wall time in map.go. Keep it portable\nand only test NaN, but not time.\n\nMove time tests to mapnan.go and only measure user CPU time,\nnot wall time. It builds on Darwin and Linux, the primary\nplatforms where people hack on the runtime & in particular\nmaps. The runtime is shared, though, so we don't need it to\nrun on all of the platforms.\n\nFixes flaky build failures like:\nhttp://build.golang.org/log/ba67eceefdeaa1142cb6c990a62fa3ffd8fd73f8\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/8479043",
			"disapproval": false,
			"date": "2013-04-07 18:56:18.274440",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "$ go run run.go -show_skips\n??                   linkx.go            : skipped; unknown pattern: $G\nskip                 mapnan.go           : +build darwin,linux\n[...]\n\nThe build tag is always false.",
			"disapproval": false,
			"date": "2013-04-08 07:01:12.379660",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "That fixes the flakiness!\r\n\r\n\r\n\r\nOn Mon, Apr 8, 2013 at 12:01 AM, <remyoudompheng@gmail.com> wrote:\r\n\r\n> $ go run run.go -show_skips\r\n> ??                   linkx.go            : skipped; unknown pattern: $G\r\n> skip                 mapnan.go           : +build darwin,linux\r\n> [...]\r\n>\r\n> The build tag is always false.\r\n>\r\n> https://codereview.appspot.**com/8479043/<https://codereview.appspot.com/8479043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-08 07:03:10.857780",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 8479043: test: fix flaky NaN-key map complexity test",
	"created": "2013-04-07 18:32:24.679170",
	"patchsets": [
		1,
		2001,
		5001,
		2003
	],
	"modified": "2013-04-08 07:01:12.501150",
	"closed": true,
	"issue": 8479043
}