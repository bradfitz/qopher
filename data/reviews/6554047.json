{
	"description": "sync: add Once test with panic\nTests behavior of Once when initialization function panics.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6554047/diff/5001/src/pkg/sync/once_test.go\nFile src/pkg/sync/once_test.go (right):\n\nhttps://codereview.appspot.com/6554047/diff/5001/src/pkg/sync/once_test.go#newcode23\nsrc/pkg/sync/once_test.go:23: t.Errorf(\"once failed: %d is not 1\", v)\nOn 2012/09/20 19:17:32, r wrote:\n> please make this a different string, so it's clearer (other than by source line)\n> which message it is. maybe\n> \n> \"once failed inside run: ...\"\n\nDone.\n\nhttps://codereview.appspot.com/6554047/diff/5001/src/pkg/sync/once_test.go#newcode40\nsrc/pkg/sync/once_test.go:40: t.Errorf(\"once failed: %d is not 1\", *o)\nOn 2012/09/20 19:17:32, r wrote:\n> \"once failed outside run:...\"\n\nDone.\n\nhttps://codereview.appspot.com/6554047/diff/5001/src/pkg/sync/once_test.go#newcode61\nsrc/pkg/sync/once_test.go:61: })\nOn 2012/09/20 19:17:32, r wrote:\n> this may set a record for most convoluted flow of control yet constructed in a\n> go function.\n\nWell, at least it is straight-line. I don't think it will be simpler if I move some code into separate functions...",
			"disapproval": false,
			"date": "2012-09-20 19:28:57.678450",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6554047/diff/5001/src/pkg/sync/once_test.go\nFile src/pkg/sync/once_test.go (right):\n\nhttp://codereview.appspot.com/6554047/diff/5001/src/pkg/sync/once_test.go#newcode23\nsrc/pkg/sync/once_test.go:23: t.Errorf(\"once failed: %d is not 1\", v)\nplease make this a different string, so it's clearer (other than by source line) which message it is. maybe\n\n\"once failed inside run: ...\"\n\nhttp://codereview.appspot.com/6554047/diff/5001/src/pkg/sync/once_test.go#newcode40\nsrc/pkg/sync/once_test.go:40: t.Errorf(\"once failed: %d is not 1\", *o)\n\"once failed outside run:...\"\n\nhttp://codereview.appspot.com/6554047/diff/5001/src/pkg/sync/once_test.go#newcode61\nsrc/pkg/sync/once_test.go:61: })\nthis may set a record for most convoluted flow of control yet constructed in a go function.",
			"disapproval": false,
			"date": "2012-09-20 19:17:32.567740",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-20 19:13:10.586850",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d2b0f85e5d9f ***\n\nsync: add Once test with panic\nTests behavior of Once when initialization function panics.\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/6554047",
			"disapproval": false,
			"date": "2012-09-20 19:29:43.316400",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6554047: sync: add Once test with panic",
	"created": "2012-09-20 19:10:08.674600",
	"patchsets": [
		1,
		3,
		1002,
		5001,
		10001,
		12001
	],
	"modified": "2012-09-20 19:29:44.318270",
	"closed": true,
	"issue": 6554047
}