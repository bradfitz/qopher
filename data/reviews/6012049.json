{
	"description": "cmd/6g: restore magic multiply for /=, %=.\n\nAlso enables turning /= 2 in a right shift.\n\nPart of issue 2230.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com",
		"remy@archlinux.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6012049/diff/3001/src/cmd/6g/ggen.c\nFile src/cmd/6g/ggen.c (right):\n\nhttp://codereview.appspot.com/6012049/diff/3001/src/cmd/6g/ggen.c#newcode392\nsrc/cmd/6g/ggen.c:392: if(nr->op == OLITERAL) {\nIsn't this already handled by cgen() and cgen_div()?",
			"disapproval": false,
			"date": "2012-04-12 17:29:30.838173",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6012049/diff/3001/src/cmd/6g/ggen.c\nFile src/cmd/6g/ggen.c (right):\n\nhttp://codereview.appspot.com/6012049/diff/3001/src/cmd/6g/ggen.c#newcode392\nsrc/cmd/6g/ggen.c:392: if(nr->op == OLITERAL) {\nI think this needs to be if(smallintconst(nr)).\nConstants larger than 32 bits cannot be used directly\nand have to be moved into a register.\nIf this means giving up magic multiply for \nsuch large constants, I can live with that.",
			"disapproval": false,
			"date": "2012-04-12 14:41:54.510334",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6012049/diff/3001/src/cmd/6g/ggen.c\nFile src/cmd/6g/ggen.c (right):\n\nhttp://codereview.appspot.com/6012049/diff/3001/src/cmd/6g/ggen.c#newcode392\nsrc/cmd/6g/ggen.c:392: if(nr->op == OLITERAL) {\nOn 2012/04/12 17:29:31, remyoudompheng wrote:\n> Isn't this already handled by cgen() and cgen_div()?\n\nLooks like it is.",
			"disapproval": false,
			"date": "2012-04-12 17:36:08.130220",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-12 14:21:38.551913",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=762426ee0cca ***\n\ncmd/6g: restore magic multiply for /=, %=.\n\nAlso enables turning /= 2 in a right shift.\n\nPart of issue 2230.\n\nR=rsc\nCC=golang-dev, remy\nhttp://codereview.appspot.com/6012049",
			"disapproval": false,
			"date": "2012-04-13 08:12:48.562550",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6012049: cmd/6g: restore magic multiply for /=, %=.",
	"created": "2012-04-12 14:21:21.800504",
	"patchsets": [
		1,
		3,
		3001,
		5001
	],
	"modified": "2012-04-16 20:27:35.652737",
	"closed": true,
	"issue": 6012049
}