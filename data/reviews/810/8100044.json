{
	"description": "go/printer: use strings.Split instead of specialized code\n\nWith the faster strings package, the difference between\nthe specialized code and strings.Split is in the noise:\n\nbenchmark         old ns/op    new ns/op    delta\nBenchmarkPrint     16724291     16686729   -0.22%\n\n(Measured on a Mac Pro, 2.8GHz Quad-core Intel Xeon,\n4GB 800 MHz DDR2, Mac OS X 10.8.3)",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-03-28 22:40:08.802280",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Thu, Mar 28, 2013 at 3:40 PM, <gri@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> go/printer: use strings.Split instead of specialized code\r\n>\r\n> With the faster strings package, the difference between\r\n> the specialized code and strings.Split is in the noise:\r\n>\r\n> benchmark         old ns/op    new ns/op    delta\r\n> BenchmarkPrint     16724291     16686729   -0.22%\r\n>\r\n> (Measured on a Mac Pro, 2.8GHz Quad-core Intel Xeon,\r\n> 4GB 800 MHz DDR2, Max OS X 10.8.3).\r\n>\r\n> Please review this at https://codereview.appspot.**com/8100044/<https://codereview.appspot.com/8100044/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/go/printer/printer.go\r\n>\r\n>\r\n> Index: src/pkg/go/printer/printer.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/go/printer/printer.**go\r\n> +++ b/src/pkg/go/printer/printer.**go\r\n> @@ -395,35 +395,6 @@\r\n>         }\r\n>  }\r\n>\r\n> -// Split comment text into lines\r\n> -// (using strings.Split(text, \"\\n\") is significantly slower for\r\n> -// this specific purpose, as measured with: go test -bench=Print)\r\n> -//\r\n> -func split(text string) []string {\r\n> -       // count lines (comment text never ends in a newline)\r\n> -       n := 1\r\n> -       for i := 0; i < len(text); i++ {\r\n> -               if text[i] == '\\n' {\r\n> -                       n++\r\n> -               }\r\n> -       }\r\n> -\r\n> -       // split\r\n> -       lines := make([]string, n)\r\n> -       n = 0\r\n> -       i := 0\r\n> -       for j := 0; j < len(text); j++ {\r\n> -               if text[j] == '\\n' {\r\n> -                       lines[n] = text[i:j] // exclude newline\r\n> -                       i = j + 1            // discard newline\r\n> -                       n++\r\n> -               }\r\n> -       }\r\n> -       lines[n] = text[i:]\r\n> -\r\n> -       return lines\r\n> -}\r\n> -\r\n>  // Returns true if s contains only white space\r\n>  // (only tabs and blanks can appear in the printer's context).\r\n>  //\r\n> @@ -616,7 +587,7 @@\r\n>\r\n>         // for /*-style comments, print line by line and let the\r\n>         // write function take care of the proper indentation\r\n> -       lines := split(text)\r\n> +       lines := strings.Split(text, \"\\n\")\r\n>\r\n>         // The comment started in the first column but is going\r\n>         // to be indented. For an idempotent result, add indentation\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-28 22:46:49.419920",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=5e794a4e3035 ***\n\ngo/printer: use strings.Split instead of specialized code\n\nWith the faster strings package, the difference between\nthe specialized code and strings.Split is in the noise:\n\nbenchmark         old ns/op    new ns/op    delta\nBenchmarkPrint     16724291     16686729   -0.22%\n\n(Measured on a Mac Pro, 2.8GHz Quad-core Intel Xeon,\n4GB 800 MHz DDR2, Mac OS X 10.8.3)\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/8100044",
			"disapproval": false,
			"date": "2013-03-28 22:47:43.178000",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 8100044: go/printer: use strings.Split instead of specialized code",
	"created": "2013-03-28 22:39:39.279360",
	"patchsets": [
		1,
		1002,
		4001,
		5002
	],
	"modified": "2013-03-28 22:47:44.158430",
	"closed": true,
	"issue": 8100044
}