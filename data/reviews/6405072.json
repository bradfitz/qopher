{
	"description": "textproto: new field serialization routine",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"adg@golang.org",
		"bradfitz@golang.org",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"pascal@quies.net",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-07-21 12:55:06.922650",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"pascal@quies.net",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Does this fix any issues? What's the purpose of this change?\n\nhttp://codereview.appspot.com/6405072/diff/2001/src/pkg/net/textproto/writer.go\nFile src/pkg/net/textproto/writer.go (right):\n\nhttp://codereview.appspot.com/6405072/diff/2001/src/pkg/net/textproto/writer.go#newcode15\nsrc/pkg/net/textproto/writer.go:15: const LongLineLength = 78\nneed these be exported constants? I don't think so",
			"disapproval": false,
			"date": "2012-07-22 22:31:41.425520",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Andrew,\r\n\r\n> Does this fix any issues? What's the purpose of this change?\r\n\r\nWriteMIMEField adds folding functionality which can be used for writing HTTP \r\nand SMTP headers. I shared my patch because the resolved comment in \r\ntransfer.go requested it explicitly:\r\n\r\n\t// TODO: At some point, there should be a generic mechanism for\r\n\t// writing long headers, using HTTP line splitting\r\n\r\n> http://codereview.appspot.com/6405072/diff/2001/src/pkg/net/textproto/writer\r\n> .go#newcode15 src/pkg/net/textproto/writer.go:15: const LongLineLength = 78\r\n> need these be exported constants? I don't think so\r\n\r\nUnlikely indeed.\r\n",
			"disapproval": false,
			"date": "2012-07-23 17:21:32.247260",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"pascal@quies.net",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6405072/diff/2001/src/pkg/net/textproto/writer.go\nFile src/pkg/net/textproto/writer.go (right):\n\nhttp://codereview.appspot.com/6405072/diff/2001/src/pkg/net/textproto/writer.go#newcode131\nsrc/pkg/net/textproto/writer.go:131: field := make([]byte, len(name)+len(body)+2)\nin the common case, this function shouldn't allocate any memory.",
			"disapproval": false,
			"date": "2012-07-30 01:11:46.337330",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pascal@quies.net",
				"adg@golang.org",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm a little skeptical that this is necessary, but it's definitely quite a bit more complex than it should be. If you can simplify it then we can look at whether it pays for itself. Right now it doesn't.",
			"disapproval": false,
			"date": "2012-07-30 01:15:16.897580",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Your concerns are well understood. After a forced Google account merge I can't \r\nsubmit changes to this issue anymore. The attachment contains an update.",
			"disapproval": false,
			"date": "2012-08-03 13:49:21.054140",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please open a new CL if you want to continue working on this patch.\r\nYou can rm $GOROOT/.hg/codereview/cl.6405072 and then run hg change to\r\nmake a new one as if this one had never existed.\r\n\r\nI looked at the file, though, and it seems like it still allocates in\r\nthe common case. The current code uses WriteString explicitly to avoid\r\nthat problem.\r\nI'd like to understand what this does to benchmarks (I think Brad has\r\none in the http package for this function) and I'd also like to\r\nunderstand how important this really is. Are there commonly used\r\nservers or clients that reject lines > 80 characters?\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-08-03 19:21:47.825130",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"pascal@quies.net",
				"adg@golang.org",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6405072/diff/2001/src/pkg/net/http/header.go\nFile src/pkg/net/http/header.go (left):\n\nhttp://codereview.appspot.com/6405072/diff/2001/src/pkg/net/http/header.go#oldcode96\nsrc/pkg/net/http/header.go:96: ws, ok := w.(writeStringer)\nall this writeStringer stuff was done for performance reasons.  I'd hate to throw that away for a corner case.  If anything, only call textproto.WriteMIMEField if len(v) > textproto.MaxFieldValueLength (const) or something.",
			"disapproval": false,
			"date": "2012-08-07 04:08:17.099280",
			"approval": false
		}
	],
	"owner_email": "pascal@quies.net",
	"private": false,
	"base_url": "",
	"owner": "pascal",
	"subject": "code review 6405072: textproto: new field serialization routine",
	"created": "2012-07-21 12:54:00.933510",
	"patchsets": [
		1,
		2001
	],
	"modified": "2012-08-07 04:08:17.099280",
	"closed": false,
	"issue": 6405072
}