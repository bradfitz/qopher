{
	"description": "encoding/base32, encoding/base64: fix issues with decoder whitespace handling\n\nAdds a new reader to filter newlines, which fixes errors seen in the\ndecoder chunking code. Found additional issues with whitespace handling\nafter the first padding character.\nFixes issue 4779.",
	"cc": [
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "pkwarren@gmail.com",
			"recipients": [
				"pkwarren@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-10 17:46:15.773490",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"pkwarren@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7311069/diff/2002/src/pkg/encoding/base64/base64.go\nFile src/pkg/encoding/base64/base64.go (right):\n\nhttps://codereview.appspot.com/7311069/diff/2002/src/pkg/encoding/base64/base64.go#newcode227\nsrc/pkg/encoding/base64/base64.go:227: // Ignore this character.\nseems this if is of no use now.\n\nhttps://codereview.appspot.com/7311069/diff/2002/src/pkg/encoding/base64/base64.go#newcode237\nsrc/pkg/encoding/base64/base64.go:237: non_ws_idx := bytes.IndexFunc(src, func(r rune) bool {\nwe don't use underscores in Go, please see:\nhttp://golang.org/doc/effective_go.html#mixed-caps",
			"disapproval": false,
			"date": "2013-02-10 20:40:29.622550",
			"approval": false
		},
		{
			"sender": "pkwarren@gmail.com",
			"recipients": [
				"pkwarren@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7311069/diff/2002/src/pkg/encoding/base64/base64.go\nFile src/pkg/encoding/base64/base64.go (right):\n\nhttps://codereview.appspot.com/7311069/diff/2002/src/pkg/encoding/base64/base64.go#newcode227\nsrc/pkg/encoding/base64/base64.go:227: // Ignore this character.\nOn 2013/02/10 20:40:29, minux wrote:\n> seems this if is of no use now.\n\nThis is still in use - removing it causes some of the existing tests to fail.\n\nhttps://codereview.appspot.com/7311069/diff/2002/src/pkg/encoding/base64/base64.go#newcode237\nsrc/pkg/encoding/base64/base64.go:237: non_ws_idx := bytes.IndexFunc(src, func(r rune) bool {\nOn 2013/02/10 20:40:29, minux wrote:\n> we don't use underscores in Go, please see:\n> http://golang.org/doc/effective_go.html#mixed-caps\n\nUpdated.",
			"disapproval": false,
			"date": "2013-02-10 21:14:29.603310",
			"approval": false
		},
		{
			"sender": "pkwarren@gmail.com",
			"recipients": [
				"pkwarren@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-10 21:14:02.278270",
			"approval": false
		},
		{
			"sender": "pkwarren@gmail.com",
			"recipients": [
				"pkwarren@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-10 21:18:28.554370",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pkwarren@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7311069/diff/5/src/pkg/encoding/base64/base64.go\nFile src/pkg/encoding/base64/base64.go (right):\n\nhttps://codereview.appspot.com/7311069/diff/5/src/pkg/encoding/base64/base64.go#newcode233\nsrc/pkg/encoding/base64/base64.go:233: nonWsIdx := bytes.IndexFunc(src, func(r rune) bool {\nWhy is this necessary if the newlineFilteringReader is already stripping \\r and \\n?",
			"disapproval": false,
			"date": "2013-02-14 19:20:17.023010",
			"approval": false
		},
		{
			"sender": "pkwarren@gmail.com",
			"recipients": [
				"pkwarren@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7311069/diff/5/src/pkg/encoding/base64/base64.go\nFile src/pkg/encoding/base64/base64.go (right):\n\nhttps://codereview.appspot.com/7311069/diff/5/src/pkg/encoding/base64/base64.go#newcode233\nsrc/pkg/encoding/base64/base64.go:233: nonWsIdx := bytes.IndexFunc(src, func(r rune) bool {\nOn 2013/02/14 19:20:17, rsc wrote:\n> Why is this necessary if the newlineFilteringReader is already stripping \\r and\n> \\n?\n\nnewlineFilteringReader is only currently used in NewDecoder(*Encoding, io.Reader). There are other entry points into this function (Decode(dst, src []byte) and DecodeString(s string)) which call this method directly. If preferred, I could wrap the parameters passed to those methods with a newlineFilteringReader and remove all of this logic to ensure the only entry points into this function have already removed all whitespace.\n\nMy original goal was to fix the reported issue with using a Reader, but after closer inspection I found additional errors in the whitespace handling in decode().",
			"disapproval": false,
			"date": "2013-02-14 20:01:25.710500",
			"approval": false
		},
		{
			"sender": "pkwarren@gmail.com",
			"recipients": [
				"pkwarren@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-23 22:41:21.193590",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pkwarren@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nNext up, base32. Could you please add it to this same CL?",
			"disapproval": false,
			"date": "2013-03-11 20:52:29.462710",
			"approval": true
		},
		{
			"sender": "pkwarren@gmail.com",
			"recipients": [
				"pkwarren@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-11 23:01:22.776170",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Commit message first line:\r\n\r\nencoding/base32, encoding/base64: fix issues with decoder whitespace\r\nhandling\r\n\r\nOn Mon, Mar 11, 2013 at 4:01 PM, <pkwarren@gmail.com> wrote:\r\n\r\n> Hello minux.ma@gmail.com, rsc@golang.org (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.**com/7311069/<https://codereview.appspot.com/7311069/>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-11 23:10:08.997500",
			"approval": false
		},
		{
			"sender": "pkwarren@gmail.com",
			"recipients": [
				"pkwarren@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Updated first line of commit message.",
			"disapproval": false,
			"date": "2013-03-11 23:43:56.502870",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pkwarren@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "same in base32. otherwise looks good. thanks.\n\nhttps://codereview.appspot.com/7311069/diff/22001/src/pkg/encoding/base64/base64_test.go\nFile src/pkg/encoding/base64/base64_test.go (right):\n\nhttps://codereview.appspot.com/7311069/diff/22001/src/pkg/encoding/base64/base64_test.go#newcode300\nsrc/pkg/encoding/base64/base64_test.go:300: encoded_no_ws := strings.Replace(encoded, \"\\n\", \"\", -1)\nencodedShort\n\nor something without _s",
			"disapproval": false,
			"date": "2013-03-12 03:18:27.520910",
			"approval": false
		},
		{
			"sender": "pkwarren@gmail.com",
			"recipients": [
				"pkwarren@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, rsc@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-12 05:14:13.882000",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pkwarren@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=15d86e64b42e ***\n\nencoding/base32, encoding/base64: fix issues with decoder whitespace handling\n\nAdds a new reader to filter newlines, which fixes errors seen in the\ndecoder chunking code. Found additional issues with whitespace handling\nafter the first padding character.\nFixes issue 4779.\n\nR=minux.ma, rsc, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7311069\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-03-12 05:50:14.542110",
			"approval": false
		}
	],
	"owner_email": "pkwarren@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "pkwarren",
	"subject": "code review 7311069: encoding/base32, encoding/base64: fix issues with decod...",
	"created": "2013-02-10 17:43:20.192390",
	"patchsets": [
		1,
		2001,
		2002,
		7001,
		5,
		15001,
		19001,
		22001,
		30001,
		29002
	],
	"modified": "2013-03-12 05:53:04.467680",
	"closed": true,
	"issue": 7311069
}