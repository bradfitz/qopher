{
	"description": "runtime: better diagnostic for malloc/free deadlocks\nI've implemented it several times during various experiments,\nit would be good if it is there right away.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-08 15:04:40.888040",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Does it really matter? Isn't that clear from the stack trace. 'malloc/free'\r\nhere was not intended to mean that there's a malloc and a free fighting. It\r\njust meant memory allocation. Maybe it would be better to just say \"memory\r\nallocation deadlock\".\r\n",
			"disapproval": false,
			"date": "2013-02-08 20:44:39.188410",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Feb 9, 2013 at 12:44 AM, Russ Cox <rsc@golang.org> wrote:\r\n> Does it really matter? Isn't that clear from the stack trace. 'malloc/free'\r\n> here was not intended to mean that there's a malloc and a free fighting. It\r\n> just meant memory allocation. Maybe it would be better to just say \"memory\r\n> allocation deadlock\".\r\n\r\n\r\nIt was useful because g0's are not unwinded. So it saves additional\r\ngdb session, and gdb does not actually work on my Mac.\r\n\r\nCan we unwind g0's on throw or GOTRACEBACK=2? That would be really\r\ncool. Another debug hack I had to do is:\r\nhttps://codereview.appspot.com/7314062/patch/2001/3005?column_width=120\r\n",
			"disapproval": false,
			"date": "2013-02-09 07:03:45.044120",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd prefer to leave all this out. This goes into every binary, so the\r\nmessages here are for end users, not for runtime developers. For detailed\r\nruntime information, having to use a debugger does not seem so onerous.\r\n\r\nIf you want to make things better on a Mac, we am still waiting for someone\r\nto fix the debug info to work with the standard OS X gdb.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-02-13 21:45:31.641390",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-02-14 12:39:55.510940",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 7318043: runtime: better diagnostic for malloc/free deadlocks",
	"created": "2013-02-08 15:03:28.984840",
	"patchsets": [
		1,
		2001,
		3
	],
	"modified": "2013-02-14 12:39:56.815250",
	"closed": true,
	"issue": 7318043
}