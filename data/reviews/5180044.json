{
	"description": "time: make month/day name comparisons case insenstive\n\nFixes issue 2324.",
	"cc": [
		"r@golang.org",
		"r@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5180044/diff/10002/src/pkg/time/format.go\nFile src/pkg/time/format.go (right):\n\nhttp://codereview.appspot.com/5180044/diff/10002/src/pkg/time/format.go#newcode238\nsrc/pkg/time/format.go:238: for i, c1 := range s1 {\nthe strings are ascii and the rest of the code assumes they are. might as well loop on bytes and avoid the conversions.\n\nhttp://codereview.appspot.com/5180044/diff/10002/src/pkg/time/format.go#newcode242\nsrc/pkg/time/format.go:242: if c1 < 'a' || c1 > 'z' || (c2|' ') != c1 {\ni'm a fan of or'ing with ' ' but i've been yelled at too often for being obscure. today's programmers don't know what a bit is, let alone have ascii memorized, so just write the addition.\n\nsorry. sniff.",
			"disapproval": false,
			"date": "2011-10-04 17:40:44.317609",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5180044/diff/10005/src/pkg/time/format.go\nFile src/pkg/time/format.go (right):\n\nhttp://codereview.appspot.com/5180044/diff/10005/src/pkg/time/format.go#newcode238\nsrc/pkg/time/format.go:238: for i, c1 := range s1 {\nthis is still a range; use a loop and do bytes, as i said previously, and the drop the conversions\n\nhttp://codereview.appspot.com/5180044/diff/10005/src/pkg/time/format.go#newcode241\nsrc/pkg/time/format.go:241: c1 |= 'a' - 'A'\nc2 |= 'a' - 'A'\n\nalso // 'a'-'A' is known to be a single bit.\n\nhttp://codereview.appspot.com/5180044/diff/10005/src/pkg/time/format.go#newcode242\nsrc/pkg/time/format.go:242: if c1 < 'a' || c1 > 'z' || c2|('a'-'A') != c1 {\nnow drop the | here - it's cleaner to do it before.",
			"disapproval": false,
			"date": "2011-10-04 17:59:46.658375",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"borman@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-03 21:54:13.269645",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Should have a test, otherwise you didn't really fix anything (at least\nlong-term).\n\nOn Mon, Oct 3, 2011 at 2:54 PM, <borman@google.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> pkg/time: make month/day name comparisons case insenstive\n>\n> Addresses issue 2324 \"pkg/time: time.Parse is case sensitive\"\n>\n> Please review this at http://codereview.appspot.com/**5180044/<http://codereview.appspot.com/5180044/>\n>\n> Affected files:\n>  M src/pkg/time/format.go\n>\n>\n> Index: src/pkg/time/format.go\n> ==============================**==============================**=======\n> --- a/src/pkg/time/format.go\n> +++ b/src/pkg/time/format.go\n> @@ -4,6 +4,7 @@\n>        \"bytes\"\n>        \"os\"\n>        \"strconv\"\n> +       \"strings\"\n>  )\n>\n>  const (\n> @@ -234,7 +235,7 @@\n>\n>  func lookup(tab []string, val string) (int, string, os.Error) {\n>        for i, v := range tab {\n> -               if len(val) >= len(v) && val[0:len(v)] == v {\n> +               if len(val) >= len(v) && strings.EqualFold(val[0:len(v)**],\n> v) {\n>                        return i, val[len(v):], nil\n>                }\n>        }\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-10-03 21:55:18.547524",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Add a test.\n\nAlso, the CL description should just start with \"time:\", not \"pkg/time:\".\n",
			"disapproval": false,
			"date": "2011-10-03 21:58:43.695063",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "R=r",
			"disapproval": false,
			"date": "2011-10-03 22:09:50.941608",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/03 21:58:43, dsymonds wrote:\n> Add a test.\n> \n> Also, the CL description should just start with \"time:\", not \"pkg/time:\".\n\nDone and Done.",
			"disapproval": false,
			"date": "2011-10-03 22:10:35.196318",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5180044/diff/7001/src/pkg/time/format.go\nFile src/pkg/time/format.go (right):\n\nhttp://codereview.appspot.com/5180044/diff/7001/src/pkg/time/format.go#newcode238\nsrc/pkg/time/format.go:238: if len(val) >= len(v) && strings.EqualFold(val[0:len(v)], v) {\nthis is overkill and dependency-injecting. ASCII is good enough - the layout strings are ASCII. we can revisit this when we have proper internationalization.",
			"disapproval": false,
			"date": "2011-10-03 22:29:51.324340",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-04 18:15:10.696036",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5180044/diff/19001/src/pkg/time/format.go\nFile src/pkg/time/format.go (right):\n\nhttp://codereview.appspot.com/5180044/diff/19001/src/pkg/time/format.go#newcode242\nsrc/pkg/time/format.go:242: // 'a' - 'A' is know to be a single bit that\ns/know/known/\ns/ that/./\nor maybe\n// Move to lower-case; 'a'-'A' is known to be a single bit.",
			"disapproval": false,
			"date": "2011-10-04 18:19:23.123182",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5180044/diff/14001/src/pkg/time/format.go\nFile src/pkg/time/format.go (right):\n\nhttp://codereview.appspot.com/5180044/diff/14001/src/pkg/time/format.go#newcode235\nsrc/pkg/time/format.go:235: func strcaseeq(s1, s2 string) bool {\nthis isn't C. \"equal\" would be fine, with an appropriate comment.",
			"disapproval": false,
			"date": "2011-10-04 17:30:06.593793",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-04 17:34:34.404139",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nI removed the dependency on the strings package.  I didn't see much option but to write my own version of strcasecmp, however.",
			"disapproval": false,
			"date": "2011-10-04 16:22:25.256544",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/04 17:45:00, borman wrote:\n> On 2011/10/04 17:40:44, r wrote:\n> > http://codereview.appspot.com/5180044/diff/10002/src/pkg/time/format.go\n> > File src/pkg/time/format.go (right):\n> > \n> >\n> http://codereview.appspot.com/5180044/diff/10002/src/pkg/time/format.go#newcode238\n> > src/pkg/time/format.go:238: for i, c1 := range s1 {\n> > the strings are ascii and the rest of the code assumes they are. might as well\n> > loop on bytes and avoid the conversions.\n> > \n> >\n> http://codereview.appspot.com/5180044/diff/10002/src/pkg/time/format.go#newcode242\n> > src/pkg/time/format.go:242: if c1 < 'a' || c1 > 'z' || (c2|' ') != c1 {\n> > i'm a fan of or'ing with ' ' but i've been yelled at too often for being\n> > obscure. today's programmers don't know what a bit is, let alone have ascii\n> > memorized, so just write the addition.\n> > \n> > sorry. sniff.\n> \n> Well, I guess it is confusing to EBCDIC users...\n\nI don't think you are going to like the \"fix\".  You can't use addition, but I did get rid of the ' '.",
			"disapproval": false,
			"date": "2011-10-04 17:46:55.224806",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "one last thing.\nplease change the CL to read\n\nFixes issue 2324.\n\nin exactly that format.\n\nOn Oct 4, 2011, at 11:23 AM, r@golang.org wrote:\n\n> LGTM\n> \n> \n> http://codereview.appspot.com/5180044/\n\n",
			"disapproval": false,
			"date": "2011-10-04 18:23:49.071329",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "or if you don't like \"equal\", go with \"match\".",
			"disapproval": false,
			"date": "2011-10-04 17:30:28.182846",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/04 17:40:44, r wrote:\n> http://codereview.appspot.com/5180044/diff/10002/src/pkg/time/format.go\n> File src/pkg/time/format.go (right):\n> \n> http://codereview.appspot.com/5180044/diff/10002/src/pkg/time/format.go#newcode238\n> src/pkg/time/format.go:238: for i, c1 := range s1 {\n> the strings are ascii and the rest of the code assumes they are. might as well\n> loop on bytes and avoid the conversions.\n> \n> http://codereview.appspot.com/5180044/diff/10002/src/pkg/time/format.go#newcode242\n> src/pkg/time/format.go:242: if c1 < 'a' || c1 > 'z' || (c2|' ') != c1 {\n> i'm a fan of or'ing with ' ' but i've been yelled at too often for being\n> obscure. today's programmers don't know what a bit is, let alone have ascii\n> memorized, so just write the addition.\n> \n> sorry. sniff.\n\nWell, I guess it is confusing to EBCDIC users...",
			"disapproval": false,
			"date": "2011-10-04 17:45:00.068516",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-04 17:47:11.590741",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5180044/diff/10005/src/pkg/time/format.go\nFile src/pkg/time/format.go (right):\n\nhttp://codereview.appspot.com/5180044/diff/10005/src/pkg/time/format.go#newcode238\nsrc/pkg/time/format.go:238: for i, c1 := range s1 {\nOn 2011/10/04 17:59:46, r wrote:\n> this is still a range; use a loop and do bytes, as i said previously, and the\n> drop the conversions\n\nOkay, sorry.  I forget that range on string does not always return indicies 0, 1, 2, ...  Was using range to eliminate the len() per byte.  I could do it in reverse to ge the same but I will go with the straight forward code.\n\nhttp://codereview.appspot.com/5180044/diff/10005/src/pkg/time/format.go#newcode241\nsrc/pkg/time/format.go:241: c1 |= 'a' - 'A'\nOn 2011/10/04 17:59:46, r wrote:\n> c2 |= 'a' - 'A'\n> \n> also // 'a'-'A' is known to be a single bit.\n\nDone.\n\nhttp://codereview.appspot.com/5180044/diff/10005/src/pkg/time/format.go#newcode242\nsrc/pkg/time/format.go:242: if c1 < 'a' || c1 > 'z' || c2|('a'-'A') != c1 {\nOn 2011/10/04 17:59:46, r wrote:\n> now drop the | here - it's cleaner to do it before.\n\nDone.",
			"disapproval": false,
			"date": "2011-10-04 18:14:53.815773",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=e631c2616d16 ***\n\ntime: make month/day name comparisons case insenstive\n\nFixes issue 2324.\n\nR=r, r\nCC=golang-dev\nhttp://codereview.appspot.com/5180044\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2011-10-04 19:52:35.047230",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-04 18:21:22.038894",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"borman@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-10-04 18:23:12.852583",
			"approval": true
		}
	],
	"owner_email": "borman@google.com",
	"private": false,
	"base_url": "",
	"owner": "borman",
	"subject": "code review 5180044: time: make month/day name comparisons case insenstive",
	"created": "2011-10-03 21:48:41.673671",
	"patchsets": [
		1,
		2001,
		3,
		7001,
		5,
		14001,
		10002,
		10005,
		19001,
		20001,
		11004,
		3005,
		23001,
		14007
	],
	"modified": "2011-10-04 18:23:12.852583",
	"closed": false,
	"issue": 5180044
}