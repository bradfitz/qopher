{
	"description": "cmd/gc: do not export useless private symbols.\n\nFixes issue 4252.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com",
		"mirtchovski@gmail.com",
		"daniel.morsing@gmail.com",
		"dave@cheney.net",
		"lvd@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-12-01 16:55:24.206840",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The CL should reduce the include craziness in Go builds. \n\nIt is difficult to measure the resulting performance variation but on x86-64\n\nBefore:\nperf stat bin/go install -a std -> 54.2G instructions\ntime bin/go install -a std -> 28.97s user, 8.17s system\n\nAfter:\nperf stat bin/go install -a std -> 48.3G instructions\ntime bin/go install -a std -> 25.93s user, 7.81s system\n\nLines of export data (ar pf xxx.a __.PKGDEF | wc -l) on some packages:\n\n             Before  After\nencoding/asn1  418     35\nfmt            358     44\nnet            758    360 (linux/amd64)\nnet/http/pprof 606    361\nunicode        877    241\n\nar pf fmt.a | wc -l: 358\nar pf",
			"disapproval": false,
			"date": "2012-12-01 17:04:08.712950",
			"approval": false
		},
		{
			"sender": "mirtchovski@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "just a style thing, no other comments from me.\n\nhttps://codereview.appspot.com/6856126/diff/5001/src/cmd/gc/export.c\nFile src/cmd/gc/export.c (right):\n\nhttps://codereview.appspot.com/6856126/diff/5001/src/cmd/gc/export.c#newcode161\nsrc/cmd/gc/export.c:161: if (t && t->sym && t->sym->def && !exportedsym(t->sym)) {\nif( like you did above.",
			"disapproval": false,
			"date": "2012-12-01 17:29:57.575280",
			"approval": false
		},
		{
			"sender": "lvd@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6856126/diff/5001/test/declbuiltin.dir/a.go\nFile test/declbuiltin.dir/a.go (right):\n\nhttps://codereview.appspot.com/6856126/diff/5001/test/declbuiltin.dir/a.go#newcode14\ntest/declbuiltin.dir/a.go:14: func Test() {\nshouldnt main.go run this one?",
			"disapproval": false,
			"date": "2012-12-03 22:40:29.178490",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the careful review.\n\nhttps://codereview.appspot.com/6856126/diff/15001/src/cmd/gc/lex.c\nFile src/cmd/gc/lex.c (right):\n\nhttps://codereview.appspot.com/6856126/diff/15001/src/cmd/gc/lex.c#newcode2019\nsrc/cmd/gc/lex.c:2019: if(etype != Txxx && (etype != TANY || debug['A']) && s->def == N)\nOn 2012/12/07 10:41:29, DMorsing wrote:\n> Need to flag origpkg here as well if you want to catch redeclarations of the\n> builtin types in the syms array.\n> \n> There are also some typedefs in the 5g, 6g and 8g folders that need to be\n> flagged origpkg.\n\nDone but I don't see the typedefs in [568]g you are talking about.\n\nhttps://codereview.appspot.com/6856126/diff/15001/src/cmd/gc/lex.c#newcode2040\nsrc/cmd/gc/lex.c:2040: s->origpkg = builtinpkg;\nOn 2012/12/07 10:41:29, DMorsing wrote:\n> This will make redefined symbols part of the builtin package.\n> \n> Move these lines into the if (s->def == N) blocks.\n\nDone.\n\nhttps://codereview.appspot.com/6856126/diff/15001/test/fixedbugs/issue4252.dir/a.go\nFile test/fixedbugs/issue4252.dir/a.go (right):\n\nhttps://codereview.appspot.com/6856126/diff/15001/test/fixedbugs/issue4252.dir/a.go#newcode8\ntest/fixedbugs/issue4252.dir/a.go:8: const true = 0 == 1\nOn 2012/12/07 10:41:29, DMorsing wrote:\n> These consts will be turned into literal values when inlined. For a proper test,\n> use vars here.\n\nDone.",
			"disapproval": false,
			"date": "2012-12-07 18:55:53.538240",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6856126/diff/5001/src/cmd/gc/lex.c\nFile src/cmd/gc/lex.c (right):\n\nhttps://codereview.appspot.com/6856126/diff/5001/src/cmd/gc/lex.c#newcode2040\nsrc/cmd/gc/lex.c:2040: s->origpkg = builtinpkg;\nWhat about the table driven symbols and the symbols declared in 5g, 6g, 8g?",
			"disapproval": false,
			"date": "2012-12-01 18:07:00.862550",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/12/01 18:07:00, DMorsing wrote:\n> https://codereview.appspot.com/6856126/diff/5001/src/cmd/gc/lex.c\n> File src/cmd/gc/lex.c (right):\n> \n> https://codereview.appspot.com/6856126/diff/5001/src/cmd/gc/lex.c#newcode2040\n> src/cmd/gc/lex.c:2040: s->origpkg = builtinpkg;\n> What about the table driven symbols and the symbols declared in 5g, 6g, 8g?\n\nHere is a datapoint from linux/arm. This was the 5g invocation compiling pkg/net\n\nbefore:\n\nCommand being timed: \"/home/dfc/go/pkg/tool/linux_arm/5g -o /tmp/go-build199703639/net/_obj/_go_.5 -p net -D _/home/dfc/go/src/pkg/net -I /tmp/go-build199703639 ./dial.go ./dnsclient.go ./dnsclient_unix.go ./dnsconfig_unix.go ./dnsmsg.go ./fd_linux.go ./fd_unix.go ./file_unix.go ./hosts.go ./interface.go ./interface_linux.go ./ip.go ./iprawsock.go ./iprawsock_posix.go ./ipsock.go ./ipsock_posix.go ./lookup.go ./lookup_unix.go ./mac.go ./net.go ./newpollserver_unix.go ./parse.go ./pipe.go ./port.go ./port_unix.go ./sendfile_linux.go ./sock_linux.go ./sock_posix.go ./sockopt_linux.go ./sockopt_posix.go ./sockoptip_linux.go ./sockoptip_posix.go ./tcpsock.go ./tcpsock_posix.go ./udpsock.go ./udpsock_posix.go ./unixsock.go ./unixsock_posix.go /tmp/go-build199703639/net/_obj/_cgo_gotypes.go /tmp/go-build199703639/net/_obj/cgo_linux.cgo1.go /tmp/go-build199703639/net/_obj/cgo_unix.cgo1.go\"\nUser time (seconds): 3.85\nSystem time (seconds): 0.69\nPercent of CPU this job got: 99%\nElapsed (wall clock) time (h:mm:ss or m:ss): 0:04.57\nAverage shared text size (kbytes): 0\nAverage unshared data size (kbytes): 0\nAverage stack size (kbytes): 0\nAverage total size (kbytes): 0\nMaximum resident set size (kbytes): 435184\nAverage resident set size (kbytes): 0\nMajor (requiring I/O) page faults: 0\nMinor (reclaiming a frame) page faults: 27255\nVoluntary context switches: 0\nInvoluntary context switches: 513\nSwaps: 0\nFile system inputs: 0\nFile system outputs: 0\nSocket messages sent: 0\nSocket messages received: 0\nSignals delivered: 0\nPage size (bytes): 4096\nExit status: 0\n\nafter:\n\nCommand being timed: \"/home/dfc/go/pkg/tool/linux_arm/5g -o /tmp/go-build199703639/net/_obj/_go_.5 -p net -D _/home/dfc/go/src/pkg/net -I /tmp/go-build199703639 ./dial.go ./dnsclient.go ./dnsclient_unix.go ./dnsconfig_unix.go ./dnsmsg.go ./fd_linux.go ./fd_unix.go ./file_unix.go ./hosts.go ./interface.go ./interface_linux.go ./ip.go ./iprawsock.go ./iprawsock_posix.go ./ipsock.go ./ipsock_posix.go ./lookup.go ./lookup_unix.go ./mac.go ./net.go ./newpollserver_unix.go ./parse.go ./pipe.go ./port.go ./port_unix.go ./sendfile_linux.go ./sock_linux.go ./sock_posix.go ./sockopt_linux.go ./sockopt_posix.go ./sockoptip_linux.go ./sockoptip_posix.go ./tcpsock.go ./tcpsock_posix.go ./udpsock.go ./udpsock_posix.go ./unixsock.go ./unixsock_posix.go /tmp/go-build199703639/net/_obj/_cgo_gotypes.go /tmp/go-build199703639/net/_obj/cgo_linux.cgo1.go /tmp/go-build199703639/net/_obj/cgo_unix.cgo1.go\"\nUser time (seconds): 3.46\nSystem time (seconds): 0.63\nPercent of CPU this job got: 99%\nElapsed (wall clock) time (h:mm:ss or m:ss): 0:04.10\nAverage shared text size (kbytes): 0\nAverage unshared data size (kbytes): 0\nAverage stack size (kbytes): 0\nAverage total size (kbytes): 0\nMaximum resident set size (kbytes): 395920\nAverage resident set size (kbytes): 0\nMajor (requiring I/O) page faults: 0\nMinor (reclaiming a frame) page faults: 24801\nVoluntary context switches: 0\nInvoluntary context switches: 75\nSwaps: 0\nFile system inputs: 0\nFile system outputs: 0\nSocket messages sent: 0\nSocket messages received: 0\nSignals delivered: 0\nPage size (bytes): 4096\nExit status: 0",
			"disapproval": false,
			"date": "2012-12-02 08:41:29.866040",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nCode looks good as long as it works. This is all very subtle.\nCan you move the declbuiltin.dir to fixedbugs/bugNNN.dir?\nI'd like to avoid new subdirectories of test/.\nPlease wait until the pending comments by others are addressed.\nThanks.",
			"disapproval": false,
			"date": "2012-12-06 05:47:53.208760",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Still have to take a look at DMorsing's comment.\n\nhttp://codereview.appspot.com/6856126/diff/5001/src/cmd/gc/export.c\nFile src/cmd/gc/export.c (right):\n\nhttp://codereview.appspot.com/6856126/diff/5001/src/cmd/gc/export.c#newcode161\nsrc/cmd/gc/export.c:161: if (t && t->sym && t->sym->def && !exportedsym(t->sym)) {\nOn 2012/12/01 17:29:57, aam wrote:\n> if( like you did above.\n\nDone.\n\nhttp://codereview.appspot.com/6856126/diff/5001/test/declbuiltin.dir/a.go\nFile test/declbuiltin.dir/a.go (right):\n\nhttp://codereview.appspot.com/6856126/diff/5001/test/declbuiltin.dir/a.go#newcode14\ntest/declbuiltin.dir/a.go:14: func Test() {\nOn 2012/12/03 22:40:30, lvd2 wrote:\n> shouldnt main.go run this one?\n\nDone.",
			"disapproval": false,
			"date": "2012-12-06 07:23:55.147340",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com, mirtchovski@gmail.com, daniel.morsing@gmail.com, dave@cheney.net, lvd@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-06 07:22:51.288440",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On an old arm5 host this change shaved 300ms and 10mb off the build time for pkg/net\n\ndfc@qnap:~/go/src/pkg/net$ /usr/bin/time -v go build\n        Command being timed: \"go build\"\n        User time (seconds): 4.37\n        System time (seconds): 0.48\n        Percent of CPU this job got: 96%\n        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:05.01\n        Average shared text size (kbytes): 0\n        Average unshared data size (kbytes): 0\n        Average stack size (kbytes): 0\n        Average total size (kbytes): 0\n        Maximum resident set size (kbytes): 108208\n        Average resident set size (kbytes): 0\n        Major (requiring I/O) page faults: 0\n        Minor (reclaiming a frame) page faults: 60003\n        Voluntary context switches: 320\n        Involuntary context switches: 219\n        Swaps: 0\n        File system inputs: 0\n        File system outputs: 8088\n        Socket messages sent: 0\n        Socket messages received: 0\n        Signals delivered: 0\n        Page size (bytes): 4096\n        Exit status: 0\n\nafter:\n\ndfc@qnap:~/go/src/pkg/net$ /usr/bin/time -v go build\n        Command being timed: \"go build\"\n        User time (seconds): 4.09\n        System time (seconds): 0.47\n        Percent of CPU this job got: 95%\n        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:04.75\n        Average shared text size (kbytes): 0\n        Average unshared data size (kbytes): 0\n        Average stack size (kbytes): 0\n        Average total size (kbytes): 0\n        Maximum resident set size (kbytes): 98436\n        Average resident set size (kbytes): 0\n        Major (requiring I/O) page faults: 1\n        Minor (reclaiming a frame) page faults: 57511\n        Voluntary context switches: 322\n        Involuntary context switches: 216\n        Swaps: 0\n        File system inputs: 208\n        File system outputs: 7896\n        Socket messages sent: 0\n        Socket messages received: 0\n        Signals delivered: 0\n        Page size (bytes): 4096\n        Exit status: 0\n\nThe results for the whole stdlibrary are even more impressive\n\nbefore:\n\ndfc@qnap:~/go/src$ /usr/bin/time -v go build -a std\n        Command being timed: \"go build -a std\"\n        User time (seconds): 91.40\n        System time (seconds): 10.33\n        Percent of CPU this job got: 94%\n        Elapsed (wall clock) time (h:mm:ss or m:ss): 1:47.15\n        Average shared text size (kbytes): 0\n        Average unshared data size (kbytes): 0\n        Average stack size (kbytes): 0\n        Average total size (kbytes): 0\n        Maximum resident set size (kbytes): 195004\n        Average resident set size (kbytes): 0\n        Major (requiring I/O) page faults: 2\n        Minor (reclaiming a frame) page faults: 1036733\n        Voluntary context switches: 2608\n        Involuntary context switches: 1930\n        Swaps: 0\n        File system inputs: 848\n        File system outputs: 295064\n        Socket messages sent: 0\n        Socket messages received: 0\n        Signals delivered: 0\n        Page size (bytes): 4096\n        Exit status: 0\n\nafter:\n\n\t\tdfc@qnap:~/go/src$ /usr/bin/time -v go build -a std\n\t\t        Command being timed: \"go build -a std\"\n\t\t        User time (seconds): 81.01\n\t\t        System time (seconds): 8.71\n\t\t        Percent of CPU this job got: 97%\n\t\t        Elapsed (wall clock) time (h:mm:ss or m:ss): 1:32.27\n\t\t        Average shared text size (kbytes): 0\n\t\t        Average unshared data size (kbytes): 0\n\t\t        Average stack size (kbytes): 0\n\t\t        Average total size (kbytes): 0\n\t\t        Maximum resident set size (kbytes): 192900\n\t\t        Average resident set size (kbytes): 0\n\t\t        Major (requiring I/O) page faults: 2\n\t\t        Minor (reclaiming a frame) page faults: 910154\n\t\t        Voluntary context switches: 2578\n\t\t        Involuntary context switches: 1564\n\t\t        Swaps: 0\n\t\t        File system inputs: 248\n\t\t        File system outputs: 288344\n\t\t        Socket messages sent: 0\n\t\t        Socket messages received: 0\n\t\t        Signals delivered: 0\n\t\t        Page size (bytes): 4096\n\t\t        Exit status: 0",
			"disapproval": false,
			"date": "2012-12-07 00:37:38.523250",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I misremembered how the code was structured. On src/cmd/gc/lex.c:2031 there's a loop that pulls in the arch dependent types (int, uint and uintptr). Those have to be tagged as well if there's anyone out there who is insane enough to redefine int.",
			"disapproval": false,
			"date": "2012-12-07 19:06:12.464730",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I got around to testing this CL and it's broken in its current form.\n\nhttps://codereview.appspot.com/6856126/diff/15001/src/cmd/gc/lex.c\nFile src/cmd/gc/lex.c (right):\n\nhttps://codereview.appspot.com/6856126/diff/15001/src/cmd/gc/lex.c#newcode2019\nsrc/cmd/gc/lex.c:2019: if(etype != Txxx && (etype != TANY || debug['A']) && s->def == N)\nNeed to flag origpkg here as well if you want to catch redeclarations of the builtin types in the syms array.\n\nThere are also some typedefs in the 5g, 6g and 8g folders that need to be flagged origpkg.\n\nhttps://codereview.appspot.com/6856126/diff/15001/src/cmd/gc/lex.c#newcode2040\nsrc/cmd/gc/lex.c:2040: s->origpkg = builtinpkg;\nThis will make redefined symbols part of the builtin package.\n\nMove these lines into the if (s->def == N) blocks.\n\nhttps://codereview.appspot.com/6856126/diff/15001/test/fixedbugs/issue4252.dir/a.go\nFile test/fixedbugs/issue4252.dir/a.go (right):\n\nhttps://codereview.appspot.com/6856126/diff/15001/test/fixedbugs/issue4252.dir/a.go#newcode8\ntest/fixedbugs/issue4252.dir/a.go:8: const true = 0 == 1\nThese consts will be turned into literal values when inlined. For a proper test, use vars here.",
			"disapproval": false,
			"date": "2012-12-07 10:41:28.955500",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=6b602ab487d6 ***\n\ncmd/gc: do not export useless private symbols.\n\nFixes issue 4252.\n\nR=rsc, golang-dev, mirtchovski, daniel.morsing, dave, lvd\nCC=golang-dev\nhttps://codereview.appspot.com/6856126",
			"disapproval": false,
			"date": "2012-12-08 13:43:15.770390",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/12/07 19:06:12, DMorsing wrote:\n> I misremembered how the code was structured. On src/cmd/gc/lex.c:2031 there's a\n> loop that pulls in the arch dependent types (int, uint and uintptr). Those have\n> to be tagged as well if there's anyone out there who is insane enough to\n> redefine int.\n\nIndeed, thanks.",
			"disapproval": false,
			"date": "2012-12-07 19:14:07.131790",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com, mirtchovski@gmail.com, daniel.morsing@gmail.com, dave@cheney.net, lvd@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-07 19:14:17.875710",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-12-07 20:25:30.168970",
			"approval": true
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6856126: cmd/gc: do not export useless private symbols.",
	"created": "2012-12-01 16:55:06.063830",
	"patchsets": [
		1,
		2001,
		5001,
		15001,
		24001,
		27002,
		26006
	],
	"modified": "2012-12-08 13:43:17.476240",
	"closed": true,
	"issue": 6856126
}