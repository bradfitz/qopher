{
	"description": "html/template: wraps package template instead of exposing func Escape\n\nThis does escaping on first execution.\n\ntemplate.go defines the same interface elements as package template.\nIt requires rather more duplication of code than I'd like, but I'm\nnot clear how to avoid that.\n\nMaybe instead of\n\n    mySet.ParseGlob(...)\n    template.ParseSetGlob(...)\n    mySet.ParseFiles(...)\n    mySet.ParseTemplateFiles(...)\n    template.ParseTemplateFiles(...)\n\nwe combine these into a fileset abstraction that can be wrapped\n\n    var fileset template.FileSet\n    fileset.Glob(...)  // Load a few files by glob\n    fileset.Files(...)  // Load a few {{define}}d files\n    fileset.TemplateFiles(...)  // Load a few files as template bodies\n    fileset.Funcs(...)  // Make the givens func available to templates\n    // Do the parsing.\n    set, err := fileset.ParseSet()\n    // or set, err := fileset.ParseInto(set)\n\nor provide an interface that can receive filenames and functions and\nparse messages:\n\n    type Bundle interface {\n      TemplateFile(string)\n      File(string)\n      Funcs(FuncMap)\n    }\n\nand define template.Parse* to handle the file-system stuff and send\nmessages to a bundle:\n\n    func ParseFiles(b Bundle, filenames ...string)",
	"cc": [
		"r@google.com",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-14 20:34:49.406730",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "i think you may be right that a simpler API for template would help this; it may also be better overall.\n\ni also think there's merit in the proposal to use the template file extension/name as a hint about escaping.\n\nlet me ponder for a day or so. (just got back in town)",
			"disapproval": false,
			"date": "2011-10-17 20:41:37.242321",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Cool.  I'm in Chicago for a conference so will be on email but at odd times.\nOn Oct 17, 2011 4:41 PM, <r@golang.org> wrote:\n\n> i think you may be right that a simpler API for template would help\n> this; it may also be better overall.\n>\n> i also think there's merit in the proposal to use the template file\n> extension/name as a hint about escaping.\n>\n> let me ponder for a day or so. (just got back in town)\n>\n> http://codereview.appspot.com/**5270042/<http://codereview.appspot.com/5270042/>\n>\n",
			"disapproval": false,
			"date": "2011-10-17 22:00:36.500070",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/17 20:41:37, r wrote:\n> i think you may be right that a simpler API for template would help this; it may\n> also be better overall.\n> \n> i also think there's merit in the proposal to use the template file\n> extension/name as a hint about escaping.\n> \n> let me ponder for a day or so. (just got back in town)\n\nAre you waiting on me to rework this?",
			"disapproval": false,
			"date": "2011-10-28 18:54:00.351874",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\npretty sure this API is going to change, but might as well get this in.\n\nhttp://codereview.appspot.com/5270042/diff/11001/src/pkg/exp/template/html/error.go\nFile src/pkg/exp/template/html/error.go (right):\n\nhttp://codereview.appspot.com/5270042/diff/11001/src/pkg/exp/template/html/error.go#newcode115\nsrc/pkg/exp/template/html/error.go:115: //   Package htmltemplate looks through template calls to compute the\nhtmltemplate?",
			"disapproval": false,
			"date": "2011-11-01 17:05:25.784646",
			"approval": true
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5270042/diff/11001/src/pkg/exp/template/html/error.go\nFile src/pkg/exp/template/html/error.go (right):\n\nhttp://codereview.appspot.com/5270042/diff/11001/src/pkg/exp/template/html/error.go#newcode115\nsrc/pkg/exp/template/html/error.go:115: //   Package htmltemplate looks through template calls to compute the\nOn 2011/11/01 17:05:25, r wrote:\n> htmltemplate?\n\nChanged htmltemplate to html/template in 4 places in this file.",
			"disapproval": false,
			"date": "2011-11-04 17:01:57.579509",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3431b3469cce ***\n\nhtml/template: wraps package template instead of exposing func Escape\n\nThis does escaping on first execution.\n\ntemplate.go defines the same interface elements as package template.\nIt requires rather more duplication of code than I'd like, but I'm\nnot clear how to avoid that.\n\nMaybe instead of\n\n    mySet.ParseGlob(...)\n    template.ParseSetGlob(...)\n    mySet.ParseFiles(...)\n    mySet.ParseTemplateFiles(...)\n    template.ParseTemplateFiles(...)\n\nwe combine these into a fileset abstraction that can be wrapped\n\n    var fileset template.FileSet\n    fileset.Glob(...)  // Load a few files by glob\n    fileset.Files(...)  // Load a few {{define}}d files\n    fileset.TemplateFiles(...)  // Load a few files as template bodies\n    fileset.Funcs(...)  // Make the givens func available to templates\n    // Do the parsing.\n    set, err := fileset.ParseSet()\n    // or set, err := fileset.ParseInto(set)\n\nor provide an interface that can receive filenames and functions and\nparse messages:\n\n    type Bundle interface {\n      TemplateFile(string)\n      File(string)\n      Funcs(FuncMap)\n    }\n\nand define template.Parse* to handle the file-system stuff and send\nmessages to a bundle:\n\n    func ParseFiles(b Bundle, filenames ...string)\n\nR=r, r\nCC=golang-dev\nhttp://codereview.appspot.com/5270042",
			"disapproval": false,
			"date": "2011-11-04 17:09:27.046420",
			"approval": false
		}
	],
	"owner_email": "mikesamuel@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "MikeSamuel",
	"subject": "code review 5270042: html/template: wraps package template instead of ex...",
	"created": "2011-10-13 18:50:58.405860",
	"patchsets": [
		1,
		2001,
		3,
		6001,
		8001,
		9009,
		11001,
		18001,
		20008,
		23001
	],
	"modified": "2011-11-04 17:09:28.515951",
	"closed": true,
	"issue": 5270042
}