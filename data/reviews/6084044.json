{
	"description": "cmd/5l: dwarf line number support for Linux/ARM\n   Part of issue 3747.",
	"cc": [
		"dave@cheney.net",
		"lvd@google.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This has worked really well for me for over a week. It was very useful in debugging the memmove/memset issue. I encourage you to consider submitting this for wide review.",
			"disapproval": false,
			"date": "2012-06-25 10:18:36.614347",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jun 25, 2012 at 6:18 PM, <dave@cheney.net> wrote:\r\n\r\n> This has worked really well for me for over a week. It was very useful\r\n> in debugging the memmove/memset issue. I encourage you to consider\r\n> submitting this for wide review.\r\n>\r\nsome part is still missing, most notably type information is missing in the\r\nDWARF.\r\n\r\ni've already investigated this issue and unfortunately, it's much harder to\r\nfix, I\r\nhave to change both 5g and 5l, and perhaps 5c also.\r\n\r\nmaybe I should just submitting this part for review and open a separate CL\r\nfor\r\nthe types.\r\n\r\nwhat do you think?\r\n",
			"disapproval": false,
			"date": "2012-06-25 19:45:42.128866",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jun 25, 2012 at 9:45 PM, minux <minux.ma@gmail.com> wrote:\r\n\r\n>\r\n> On Mon, Jun 25, 2012 at 6:18 PM, <dave@cheney.net> wrote:\r\n>\r\n>> This has worked really well for me for over a week. It was very useful\r\n>> in debugging the memmove/memset issue. I encourage you to consider\r\n>> submitting this for wide review.\r\n>>\r\n> some part is still missing, most notably type information is missing in\r\n> the DWARF.\r\n>\r\n> i've already investigated this issue and unfortunately, it's much harder\r\n> to fix, I\r\n> have to change both 5g and 5l, and perhaps 5c also.\r\n>\r\n\r\ncan you expand a little on why this is missing?  does the compiler not emit\r\ngotype for variables (wouldn't that break reflection?) or does ld/dwarf.c\r\nfail to decode the type information emitted by the compiler?\r\n\r\n\r\n>\r\n> maybe I should just submitting this part for review and open a separate CL\r\n> for\r\n> the types.\r\n>\r\n>\r\nRuss' call, but the original dwarf support came in roughly per-section\r\nchunks, so if this is useful, i think that's a good idea.\r\n\r\n\r\n> what do you think?\r\n>\r\n",
			"disapproval": false,
			"date": "2012-06-25 19:49:23.886103",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It's fine to mail this out for review even if it omits the types, and then do the types in a separate CL.",
			"disapproval": false,
			"date": "2012-06-26 00:26:54.655997",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jun 26, 2012 at 3:49 AM, Luuk van Dijk <lvd@google.com> wrote:\r\n>\r\n> On Mon, Jun 25, 2012 at 9:45 PM, minux <minux.ma@gmail.com> wrote:\r\n>>\r\n>> some part is still missing, most notably type information is missing in\r\n>> the DWARF.\r\n>> i've already investigated this issue and unfortunately, it's much harder\r\n>> to fix, I\r\n>> have to change both 5g and 5l, and perhaps 5c also.\r\n>>\r\n> can you expand a little on why this is missing?  does the compiler not\r\n> emit gotype for variables (wouldn't that break reflection?) or does\r\n> ld/dwarf.c fail to decode the type information emitted by the compiler?\r\n>\r\nmy initial analysis of this problem:\r\nthe cmd/gc part and cmd/ld/dwarf.c are ok, the main missing part is that\r\n5g doesn't encode gotype's corresponding symbol into the .5 files.\r\n\r\nif i change .5 file format, i have to change so many places (libmach, 5a,\r\n5c, 5g\r\nand 5l), so this is a pretty big change i guess.\r\n",
			"disapproval": false,
			"date": "2012-06-25 20:02:11.682762",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jun 25, 2012 at 10:01 PM, minux <minux.ma@gmail.com> wrote:\r\n\r\n>\r\n> On Tue, Jun 26, 2012 at 3:49 AM, Luuk van Dijk <lvd@google.com> wrote:\r\n>\r\n>> On Mon, Jun 25, 2012 at 9:45 PM, minux <minux.ma@gmail.com> wrote:\r\n>>\r\n>>> some part is still missing, most notably type information is missing in\r\n>>> the DWARF.\r\n>>> i've already investigated this issue and unfortunately, it's much harder\r\n>>> to fix, I\r\n>>> have to change both 5g and 5l, and perhaps 5c also.\r\n>>>\r\n>> can you expand a little on why this is missing?  does the compiler not\r\n>> emit gotype for variables (wouldn't that break reflection?) or does\r\n>> ld/dwarf.c fail to decode the type information emitted by the compiler?\r\n>>\r\n> my initial analysis of this problem:\r\n> the cmd/gc part and cmd/ld/dwarf.c are ok, the main missing part is that\r\n> 5g doesn't encode gotype's corresponding symbol into the .5 files.\r\n>\r\n\r\nthen how can reflect still find the type information it needs?\r\n\r\n\r\n>\r\n> if i change .5 file format, i have to change so many places (libmach, 5a,\r\n> 5c, 5g\r\n> and 5l), so this is a pretty big change i guess.\r\n>\r\n",
			"disapproval": false,
			"date": "2012-06-25 20:08:26.556485",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jun 26, 2012 at 4:08 AM, Luuk van Dijk <lvd@google.com> wrote:\r\n>\r\n> On Mon, Jun 25, 2012 at 10:01 PM, minux <minux.ma@gmail.com> wrote:\r\n>>\r\n>> On Tue, Jun 26, 2012 at 3:49 AM, Luuk van Dijk <lvd@google.com> wrote:\r\n>>\r\n>>> On Mon, Jun 25, 2012 at 9:45 PM, minux <minux.ma@gmail.com> wrote:\r\n>>>\r\n>>>> some part is still missing, most notably type information is missing in\r\n>>>> the DWARF.\r\n>>>> i've already investigated this issue and unfortunately, it's much\r\n>>>> harder to fix, I\r\n>>>> have to change both 5g and 5l, and perhaps 5c also.\r\n>>>>\r\n>>> can you expand a little on why this is missing?  does the compiler not\r\n>>> emit gotype for variables (wouldn't that break reflection?) or does\r\n>>> ld/dwarf.c fail to decode the type information emitted by the compiler?\r\n>>>\r\n>> my initial analysis of this problem:\r\n>> the cmd/gc part and cmd/ld/dwarf.c are ok, the main missing part is that\r\n>> 5g doesn't encode gotype's corresponding symbol into the .5 files.\r\n>>\r\n> then how can reflect still find the type information it needs?\r\n>\r\ni didn't think about this earlier, i will try to find out why.\r\n\r\nyou can verify my hypothesis by comparing the output of these two commands:\r\ngrep gotype cmd/5g/*.[ch]\r\ngrep gotype cmd/6g/*.[ch]\r\n\r\nin fact, there isn't a \"Sym *gotype\" field in struct Addr in cmd/5g/gg.h.\r\nI think this might be the reason why 5l can't generate DWARF type\r\ninformation.\r\n",
			"disapproval": false,
			"date": "2012-06-25 20:19:55.057377",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jun 25, 2012 at 10:19 PM, minux <minux.ma@gmail.com> wrote:\r\n\r\n>\r\n> On Tue, Jun 26, 2012 at 4:08 AM, Luuk van Dijk <lvd@google.com> wrote:\r\n>>\r\n>> On Mon, Jun 25, 2012 at 10:01 PM, minux <minux.ma@gmail.com> wrote:\r\n>>>\r\n>>> On Tue, Jun 26, 2012 at 3:49 AM, Luuk van Dijk <lvd@google.com> wrote:\r\n>>>\r\n>>>> On Mon, Jun 25, 2012 at 9:45 PM, minux <minux.ma@gmail.com> wrote:\r\n>>>>\r\n>>>>> some part is still missing, most notably type information is missing\r\n>>>>> in the DWARF.\r\n>>>>> i've already investigated this issue and unfortunately, it's much\r\n>>>>> harder to fix, I\r\n>>>>> have to change both 5g and 5l, and perhaps 5c also.\r\n>>>>>\r\n>>>> can you expand a little on why this is missing?  does the compiler not\r\n>>>> emit gotype for variables (wouldn't that break reflection?) or does\r\n>>>> ld/dwarf.c fail to decode the type information emitted by the compiler?\r\n>>>>\r\n>>> my initial analysis of this problem:\r\n>>> the cmd/gc part and cmd/ld/dwarf.c are ok, the main missing part is that\r\n>>> 5g doesn't encode gotype's corresponding symbol into the .5 files.\r\n>>>\r\n>> then how can reflect still find the type information it needs?\r\n>>\r\n> i didn't think about this earlier, i will try to find out why.\r\n>\r\n> you can verify my hypothesis by comparing the output of these two commands:\r\n> grep gotype cmd/5g/*.[ch]\r\n> grep gotype cmd/6g/*.[ch]\r\n>\r\n> in fact, there isn't a \"Sym *gotype\" field in struct Addr in cmd/5g/gg.h.\r\n> I think this might be the reason why 5l can't generate DWARF type\r\n> information.\r\n>\r\n\r\nhttp://code.google.com/p/go/source/detail?r=ef495a3586b5 is the CL where\r\nrsc added gotype to 6g.  he mentioned that reflect doesn't use it, it was\r\nfor the go debugger.\r\n\r\n/L\r\n",
			"disapproval": false,
			"date": "2012-06-25 20:51:21.973066",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, lvd@google.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-06-30 04:50:27.242326",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping. While this CL isn't complete, it is a great improvement over not having any symbols at all. I've been running this on my arm builds without issue, i'd really like to see it committed if possible.",
			"disapproval": false,
			"date": "2012-07-31 23:19:57.266330",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-08-03 19:08:15.367590",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=372286d59a57 ***\n\ncmd/5l: dwarf line number support for Linux/ARM\n   Part of issue 3747.\n\nR=dave, lvd, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6084044",
			"disapproval": false,
			"date": "2012-08-07 02:09:34.074910",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6084044: cmd/5l: dwarf line number support for Linux/ARM",
	"created": "2012-04-20 18:42:56.834172",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		14008,
		27001,
		30001,
		33001,
		38001
	],
	"modified": "2012-08-07 02:09:37.600730",
	"closed": true,
	"issue": 6084044
}