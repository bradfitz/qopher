{
	"description": "cmd/gc: support x[i:j:k]\n\nDesign doc at golang.org/s/go12slice.\nThis is an experimental feature and may not be included in the release.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"bradfitz@golang.org",
		"tracey.brendan@gmail.com",
		"daniel.morsing@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-06-28 22:05:08.184560",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10743046/diff/6001/src/cmd/gc/typecheck.c\nFile src/cmd/gc/typecheck.c (right):\n\nhttps://codereview.appspot.com/10743046/diff/6001/src/cmd/gc/typecheck.c#newcode1802\nsrc/cmd/gc/typecheck.c:1802: yyerror(\"inverted slice index %N > %N\", lo, hi);\nnot the best message; not even clear how to parse it. (is it the slice or the index that's inverted, and what does 'inverted' mean?)\n\nsuggestion: \"invalid slice indexes: %N > %N\"",
			"disapproval": false,
			"date": "2013-07-01 17:02:39.010930",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/10743046/diff/6001/src/cmd/gc/typecheck.c\nFile src/cmd/gc/typecheck.c (right):\n\nhttps://codereview.appspot.com/10743046/diff/6001/src/cmd/gc/typecheck.c#newcode1802\nsrc/cmd/gc/typecheck.c:1802: yyerror(\"inverted slice index %N > %N\", lo, hi);\nOn 2013/07/01 17:02:39, r wrote:\n> not the best message; not even clear how to parse it. (is it the slice or the\n> index that's inverted, and what does 'inverted' mean?)\n> \n> suggestion: \"invalid slice indexes: %N > %N\"\n\nChanged to \"invalid slice index: %N > %N\".",
			"disapproval": false,
			"date": "2013-07-01 21:26:57.533000",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM as an experiment.\ny.tab.c won't load in codereview",
			"disapproval": false,
			"date": "2013-07-01 23:52:28.228740",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Brad: Enjoy.\r\n",
			"disapproval": false,
			"date": "2013-07-03 01:45:14.541180",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Wait for Rob, but I believe it is okay to use in the tree in any way. The\r\ngoal is to understand how it will be used. Keep in mind that we may need to\r\nback out all the uses if we decide not to go forward with it, although I\r\nthink that it's more likely we'll keep it in some form.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-07-02 01:21:58.219850",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ed9fb0ef363c ***\n\ncmd/gc: support x[i:j:k]\n\nDesign doc at golang.org/s/go12slice.\nThis is an experimental feature and may not be included in the release.\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/10743046",
			"disapproval": false,
			"date": "2013-07-02 00:32:41.473000",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"tracey.brendan@gmail.com",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/02 13:31:58, tracey.brendan_gmail.com wrote:\n> Just curious, what has changed since\n> \n> https://code.google.com/p/go/issues/detail?id=4371&can=1&q=brendan&colspec=ID%2520Status%2520Stars%2520Priority%2520Owner%2520Reporter%2520Summary\n> \n> \n\nThis is unrelated to slice striding. Read golang.org/s/go12slice for more info.",
			"disapproval": false,
			"date": "2013-07-02 13:41:37.986890",
			"approval": false
		},
		{
			"sender": "tracey.brendan@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Just curious, what has changed since\r\n\r\nhttps://code.google.com/p/go/issues/detail?id=4371&can=1&q=brendan&colspec=ID%20Status%20Stars%20Priority%20Owner%20Reporter%20Summary\r\n\r\n\r\nOn Monday, July 1, 2013 9:21:57 PM UTC-4, rsc wrote:\r\n>\r\n> Wait for Rob, but I believe it is okay to use in the tree in any way. The \r\n> goal is to understand how it will be used. Keep in mind that we may need to \r\n> back out all the uses if we decide not to go forward with it, although I \r\n> think that it's more likely we'll keep it in some form.\r\n>\r\n> Russ\r\n>\r\n>",
			"disapproval": false,
			"date": "2013-07-02 13:31:58.375340",
			"approval": false
		},
		{
			"sender": "tracey.brendan@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I hadn't seen that, thank you\r\n\r\n",
			"disapproval": false,
			"date": "2013-07-02 14:01:33.596100",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Open season?\r\n\r\nWhat are the rules?  Specifically: are performance-related CLs acceptable?\r\n\r\n\r\nOn Mon, Jul 1, 2013 at 5:32 PM, <rsc@golang.org> wrote:\r\n\r\n> *** Submitted as\r\n> https://code.google.com/p/go/**source/detail?r=ed9fb0ef363c<https://code.google.com/p/go/source/detail?r=ed9fb0ef363c>***\r\n>\r\n>\r\n> cmd/gc: support x[i:j:k]\r\n>\r\n> Design doc at golang.org/s/go12slice.\r\n> This is an experimental feature and may not be included in the release.\r\n>\r\n> R=golang-dev, r\r\n> CC=golang-dev\r\n> https://codereview.appspot.**com/10743046<https://codereview.appspot.com/10743046>\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.**com/10743046/<https://codereview.appspot.com/10743046/>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-02 00:44:07.196600",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 10743046: cmd/gc: support x[i:j:k]",
	"created": "2013-06-28 22:02:48.801600",
	"patchsets": [
		1,
		3001,
		6001,
		11001,
		15001
	],
	"modified": "2013-07-03 01:45:14.862150",
	"closed": true,
	"issue": 10743046
}