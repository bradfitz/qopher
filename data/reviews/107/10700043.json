{
	"description": "runtime: always traceback a goroutine that calls runtime.throw\nUpdate issue 5723.\nIf runtime.throw happens on g0 (e.g. scheduler, GC or newstack/oldstack),\ncurrently it's unclear where it happens and what are the arguments.\nIt already happens for SIGSEGV, but not for throw.\nSee e.g.:\nhttp://build.golang.org/log/f4c648906e1289ec2237c1d0880fb1a8b1852a08",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-06-27 18:17:35.720600",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am not convinced this is correct. There are times when g switches to g0\r\nand g0 detects a problem with g and calls throw. For example, morestack and\r\nlessstack. I do not want to see the g0 stack there. It is distracting.\r\n",
			"disapproval": false,
			"date": "2013-06-27 19:02:06.601320",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This CL changes if(g != m->g0) to if(1). Instead, how about if(g != m->g0\r\n|| m->curg == nil)?\r\n",
			"disapproval": false,
			"date": "2013-06-27 19:05:26.015470",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/27 19:02:06, rsc wrote:\n> I am not convinced this is correct. There are times when g switches to g0\n> and g0 detects a problem with g and calls throw. For example, morestack and\n> lessstack. I do not want to see the g0 stack there. It is distracting.\n\nThis is completely unactionable w/o g0 stack:\nhttps://code.google.com/p/go/issues/detail?id=5139\n\nHere is another recent example:\nhttps://code.google.com/p/go/issues/detail?id=5831\n\nFor morestack/lessstack g0 stack can be useful as well, if e.g. it reports malloc/free deadlock, how does it call malloc?",
			"disapproval": false,
			"date": "2013-07-15 22:42:24.232170",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/15 22:42:24, dvyukov wrote:\n> On 2013/06/27 19:02:06, rsc wrote:\n> > I am not convinced this is correct. There are times when g switches to g0\n> > and g0 detects a problem with g and calls throw. For example, morestack and\n> > lessstack. I do not want to see the g0 stack there. It is distracting.\n> \n> This is completely unactionable w/o g0 stack:\n> https://code.google.com/p/go/issues/detail?id=5139\n> \n> Here is another recent example:\n> https://code.google.com/p/go/issues/detail?id=5831\n> \n> For morestack/lessstack g0 stack can be useful as well, if e.g. it reports\n> malloc/free deadlock, how does it call malloc?\n\n\nThe same change done by https://code.google.com/p/go/source/detail?r=95e1e4bd8da9a31e16f11e873f50b6de965554cc\nclosing",
			"disapproval": false,
			"date": "2013-07-18 14:29:53.027640",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-07-18 14:30:10.475780",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 10700043: runtime: always traceback a goroutine that calls runtim...",
	"created": "2013-06-27 18:17:07.045560",
	"patchsets": [
		1,
		3001,
		5002
	],
	"modified": "2013-07-18 14:30:11.863990",
	"closed": true,
	"issue": 10700043
}