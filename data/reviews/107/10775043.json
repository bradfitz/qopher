{
	"description": "syscall: reduce duplication between *bsd and linux\n\nPart 3 of several.\n\n* Linux has grown a SetsockoptByte.\n* SetsockoptIPMreqn is handled directly by syscall_linux.go and syscall_freebsd.go.",
	"cc": [
		"golang-dev@googlegroups.com",
		"mikioh.mikioh@gmail.com",
		"r@golang.org",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-29 03:44:51.831010",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd prefer use of constants instead of unsafe.Sizeof but it only reduces typecheck traverse distances during a build. So, no big deal and feel free to ignore.\n\nhttps://codereview.appspot.com/10775043/diff/5001/src/pkg/syscall/syscall_unix.go\nFile src/pkg/syscall/syscall_unix.go (right):\n\nhttps://codereview.appspot.com/10775043/diff/5001/src/pkg/syscall/syscall_unix.go#newcode248\nsrc/pkg/syscall/syscall_unix.go:248: return setsockopt(fd, level, opt, uintptr(unsafe.Pointer(mreq)), unsafe.Sizeof(*mreq))\nyou can use SizeofIPMreq\n\nhttps://codereview.appspot.com/10775043/diff/5001/src/pkg/syscall/syscall_unix.go#newcode252\nsrc/pkg/syscall/syscall_unix.go:252: return setsockopt(fd, level, opt, uintptr(unsafe.Pointer(mreq)), unsafe.Sizeof(*mreq))\nSizeofIPv6Mreq\n\nhttps://codereview.appspot.com/10775043/diff/5001/src/pkg/syscall/syscall_unix.go#newcode260\nsrc/pkg/syscall/syscall_unix.go:260: return setsockopt(fd, level, opt, uintptr(unsafe.Pointer(l)), unsafe.Sizeof(*l))\nSizeofLinger\n\nhttps://codereview.appspot.com/10775043/diff/5001/src/pkg/syscall/syscall_unix.go#newcode268\nsrc/pkg/syscall/syscall_unix.go:268: return setsockopt(fd, level, opt, uintptr(unsafe.Pointer(tv)), unsafe.Sizeof(*tv))\nSizeofTimeval... is missing. ;)",
			"disapproval": false,
			"date": "2013-06-29 05:02:23.977120",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sure thing. Assuming all those constants are defined for all BSDs I'll\r\naddress this in my next patch set.\r\n\r\nOn Sat, Jun 29, 2013 at 3:02 PM,  <mikioh.mikioh@gmail.com> wrote:\r\n> I'd prefer use of constants instead of unsafe.Sizeof but it only reduces\r\n> typecheck traverse distances during a build. So, no big deal and feel\r\n> free to ignore.\r\n>\r\n>\r\n> https://codereview.appspot.com/10775043/diff/5001/src/pkg/syscall/syscall_unix.go\r\n> File src/pkg/syscall/syscall_unix.go (right):\r\n>\r\n> https://codereview.appspot.com/10775043/diff/5001/src/pkg/syscall/syscall_unix.go#newcode248\r\n> src/pkg/syscall/syscall_unix.go:248: return setsockopt(fd, level, opt,\r\n> uintptr(unsafe.Pointer(mreq)), unsafe.Sizeof(*mreq))\r\n> you can use SizeofIPMreq\r\n>\r\n> https://codereview.appspot.com/10775043/diff/5001/src/pkg/syscall/syscall_unix.go#newcode252\r\n> src/pkg/syscall/syscall_unix.go:252: return setsockopt(fd, level, opt,\r\n> uintptr(unsafe.Pointer(mreq)), unsafe.Sizeof(*mreq))\r\n> SizeofIPv6Mreq\r\n>\r\n> https://codereview.appspot.com/10775043/diff/5001/src/pkg/syscall/syscall_unix.go#newcode260\r\n> src/pkg/syscall/syscall_unix.go:260: return setsockopt(fd, level, opt,\r\n> uintptr(unsafe.Pointer(l)), unsafe.Sizeof(*l))\r\n> SizeofLinger\r\n>\r\n> https://codereview.appspot.com/10775043/diff/5001/src/pkg/syscall/syscall_unix.go#newcode268\r\n> src/pkg/syscall/syscall_unix.go:268: return setsockopt(fd, level, opt,\r\n> uintptr(unsafe.Pointer(tv)), unsafe.Sizeof(*tv))\r\n> SizeofTimeval... is missing. ;)\r\n>\r\n> https://codereview.appspot.com/10775043/\r\n",
			"disapproval": false,
			"date": "2013-06-29 05:04:40.308270",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-06-29 06:04:21.014510",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, mikioh.mikioh@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-29 08:07:01.340100",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10775043/diff/13001/src/pkg/syscall/syscall_unix.go\nFile src/pkg/syscall/syscall_unix.go (right):\n\nhttps://codereview.appspot.com/10775043/diff/13001/src/pkg/syscall/syscall_unix.go#newcode234\nsrc/pkg/syscall/syscall_unix.go:234: var n = byte(value)\nwhy bother?",
			"disapproval": false,
			"date": "2013-07-01 17:06:50.601530",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10775043/diff/13001/src/pkg/syscall/syscall_unix.go\nFile src/pkg/syscall/syscall_unix.go (right):\n\nhttps://codereview.appspot.com/10775043/diff/13001/src/pkg/syscall/syscall_unix.go#newcode234\nsrc/pkg/syscall/syscall_unix.go:234: var n = byte(value)\nOn 2013/07/01 17:06:50, r wrote:\n> why bother?\n\nThis was copied from syscall_bsd.go. I can make that change if you like, but i'd prefer to leave this as it is.",
			"disapproval": false,
			"date": "2013-07-02 12:19:23.572980",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"r@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=6a0a834fc612 ***\n\nsyscall: reduce duplication between *bsd and linux\n\nPart 3 of several.\n\n* Linux has grown a SetsockoptByte.\n* SetsockoptIPMreqn is handled directly by syscall_linux.go and syscall_freebsd.go.\n\nR=golang-dev, mikioh.mikioh, r, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/10775043",
			"disapproval": false,
			"date": "2013-07-05 03:25:43.133320",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n On Jul 4, 2013 5:20 PM, <dave@cheney.net> wrote:\r\n\r\n> On 2013/07/02 12:23:01, dfc wrote:\r\n>\r\n>> Hello mailto:golang-dev@**googlegroups.com <golang-dev@googlegroups.com>,\r\n>>\r\n> mailto:mikioh.mikioh@gmail.com**, mailto:r@golang.org (cc:\r\n>\r\n>> mailto:golang-dev@**googlegroups.com <golang-dev@googlegroups.com>),\r\n>>\r\n>\r\n>  Please take another look.\r\n>>\r\n>\r\n> gentle ping, Independence celebrations excepted.\r\n>\r\n> https://codereview.appspot.**com/10775043/<https://codereview.appspot.com/10775043/>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-05 00:26:58.860250",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/02 12:23:01, dfc wrote:\n> Hello mailto:golang-dev@googlegroups.com, mailto:mikioh.mikioh@gmail.com, mailto:r@golang.org (cc:\n> mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\ngentle ping, Independence celebrations excepted.",
			"disapproval": false,
			"date": "2013-07-05 00:20:52.215010",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10775043/diff/13001/src/pkg/syscall/syscall_unix.go\nFile src/pkg/syscall/syscall_unix.go (right):\n\nhttps://codereview.appspot.com/10775043/diff/13001/src/pkg/syscall/syscall_unix.go#newcode234\nsrc/pkg/syscall/syscall_unix.go:234: var n = byte(value)\nOn 2013/07/02 12:19:23, dfc wrote:\n> On 2013/07/01 17:06:50, r wrote:\n> > why bother?\n> \n> This was copied from syscall_bsd.go. I can make that change if you like, but i'd\n> prefer to leave this as it is.\n\noh, sorry, rereading that, it is silly. PTAL",
			"disapproval": false,
			"date": "2013-07-02 12:22:29.143540",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, mikioh.mikioh@gmail.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-02 12:23:01.016490",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 10775043: syscall: reduce duplication between *bsd and linux",
	"created": "2013-06-29 02:53:08.490180",
	"patchsets": [
		1,
		3001,
		5001,
		13001,
		21001,
		27001
	],
	"modified": "2013-07-05 10:23:07.646550",
	"closed": true,
	"issue": 10775043
}