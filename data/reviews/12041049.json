{
	"description": "go.tools/go/types: check fallthrough statements",
	"cc": [
		"adonovan@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "One comment; otherwise LG.\n\nhttps://codereview.appspot.com/12041049/diff/7001/go/types/stmt.go\nFile go/types/stmt.go (right):\n\nhttps://codereview.appspot.com/12041049/diff/7001/go/types/stmt.go#newcode252\ngo/types/stmt.go:252: check.invalidAST(s.Label.Pos(), \"fallthrough statement cannot have label\")\nIs this the specified behaviour?  It's not what gc implements.",
			"disapproval": false,
			"date": "2013-07-30 22:58:41.049040",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-30 22:54:13.461710",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nSorry, I was thinking of a labelled fallthrough (legal), not a fallthrough\r\nwith label (illegal).\r\n\r\n\r\n\r\nOn 30 July 2013 18:58, <adonovan@google.com> wrote:\r\n\r\n> One comment; otherwise LG.\r\n>\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.**com/12041049/diff/7001/go/**types/stmt.go<https://codereview.appspot.com/12041049/diff/7001/go/types/stmt.go>\r\n> File go/types/stmt.go (right):\r\n>\r\n> https://codereview.appspot.**com/12041049/diff/7001/go/**\r\n> types/stmt.go#newcode252<https://codereview.appspot.com/12041049/diff/7001/go/types/stmt.go#newcode252>\r\n> go/types/stmt.go:252: check.invalidAST(s.Label.Pos()**, \"fallthrough\r\n> statement cannot have label\")\r\n> Is this the specified behaviour?  It's not what gc implements.\r\n>\r\n> https://codereview.appspot.**com/12041049/<https://codereview.appspot.com/12041049/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-30 23:00:22.522390",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=adbe0029a5f9&repo=tools ***\n\ngo.tools/go/types: check fallthrough statements\n\nR=adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/12041049",
			"disapproval": false,
			"date": "2013-07-30 23:01:00.704900",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 12041049: go.tools/go/types: check fallthrough statements",
	"created": "2013-07-30 21:34:18.286440",
	"patchsets": [
		1,
		3001,
		5001,
		7001,
		12001
	],
	"modified": "2013-07-30 23:01:02.115290",
	"closed": true,
	"issue": 12041049
}