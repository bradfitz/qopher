{
	"description": "http: added virtual host mappings BEFORE default path mappings\n+ reply to fixes asked by rsc at patch6\n\nSee http://groups.google.com/group/golang-nuts/browse_thread/thread/872b2c6feb556e62\nand http://codereview.appspot.com/4070043",
	"cc": [
		"bradfitz@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"josvazg@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4070043/diff/1/src/pkg/http/server.go\nFile src/pkg/http/server.go (right):\n\nhttp://codereview.appspot.com/4070043/diff/1/src/pkg/http/server.go#newcode533\nsrc/pkg/http/server.go:533: // Patterns must begin with /, excepfor virtual hosts paths explained later.\ntypo\n\nhttp://codereview.appspot.com/4070043/diff/1/src/pkg/http/server.go#newcode541\nsrc/pkg/http/server.go:541: // For VirtualHost paths are path with a host-name at the beginning\nmissing word or punctuation?\n\nhttp://codereview.appspot.com/4070043/diff/1/src/pkg/http/server.go#newcode623\nsrc/pkg/http/server.go:623: h=findHandler(mux.m,r.URL.Path)\nyou should run this through gofmt.  This style is wrong.",
			"disapproval": false,
			"date": "2011-01-25 17:57:22.349610",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "please run hg mail to send in code reviews.\nthat will take care of things like making sure\nyou've run gofmt.\n\nplease sort your imports.\n\ncan still use just one map.\n\nruss\n",
			"disapproval": false,
			"date": "2011-01-25 18:01:21.047552",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Ok\n1 - fix comments\n2 - run gofmt\n3 - run hg mail\n4 - rewrite for one map\n5 - add a cache (on a separate map)?\n\nI will have to do it tomorrow at work. (How can I download my patch to another computer with a copy of golang)",
			"disapproval": false,
			"date": "2011-01-25 22:49:55.404638",
			"approval": false
		},
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, Jan 25, 2011 at 2:49 PM, <josvazg@gmail.com> wrote:\n\n>\n> I will have to do it tomorrow at work. (How can I download my patch to\n> another computer with a copy of golang)\n>\n\n$ hg help clpatch\n",
			"disapproval": false,
			"date": "2011-01-26 00:04:39.392268",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"bradfitz@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitzgo, rsc, bradfitzwork (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change.",
			"disapproval": false,
			"date": "2011-01-26 15:13:18.972521",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4070043/diff/4002/src/pkg/http/serve_test.go\nFile src/pkg/http/serve_test.go (right):\n\nhttp://codereview.appspot.com/4070043/diff/4002/src/pkg/http/serve_test.go#newcode10\nsrc/pkg/http/serve_test.go:10: \"bytes\"\nsort imports\n\nhttp://codereview.appspot.com/4070043/diff/4002/src/pkg/http/serve_test.go#newcode140\nsrc/pkg/http/serve_test.go:140: rw.Write(([]byte)(\"Default\"))\nthe () around []byte are unnecessary.\nsame in various places below\nrw.Flush is also unnecessary.\nResponseWriter argument is usually named w.\n\nhttp://codereview.appspot.com/4070043/diff/4002/src/pkg/http/serve_test.go#newcode154\nsrc/pkg/http/serve_test.go:154: func GetVHost(url, host string) (r *Response, finalURL string, err os.Error) {\nThis is a copy of http.Get but I don't see what's different.\nPlease comment what's different (or fix Get if there's a bug).\n\nhttp://codereview.appspot.com/4070043/diff/4002/src/pkg/http/serve_test.go#newcode200\nsrc/pkg/http/serve_test.go:200: s := (string)(msg)\n() are unnecessary around string\n\nhttp://codereview.appspot.com/4070043/diff/4002/src/pkg/http/serve_test.go#newcode211\nsrc/pkg/http/serve_test.go:211: checkResponse(t, \"http://localhost:12345/someDir/apage\", \"\", \"someDir\")\nplease use a table.\nsee url_test.go, for example.\n\nvar virtualTests = []struct {\n    url string\n    host string\n    data string\n}{\n    {\"http://localhost:12345/someDir/apage\", \"\", \"someDir\"},\n    ...\n}\n\nhttp://codereview.appspot.com/4070043/diff/4002/src/pkg/http/server.go\nFile src/pkg/http/server.go (right):\n\nhttp://codereview.appspot.com/4070043/diff/4002/src/pkg/http/server.go#newcode533\nsrc/pkg/http/server.go:533: // Patterns must begin with /, except for virtual hosts paths explained later.\ndelete\nchange previous two lines to\n// Patterns named fixed, rooted paths, like \"/favicon.ico\",\n// or rooted subtrees, like \"/images/\" (note the trailing slash).\n\nhttp://codereview.appspot.com/4070043/diff/4002/src/pkg/http/server.go#newcode541\nsrc/pkg/http/server.go:541: // Virtual host paths are also supported. They start with a host-name at the\n// Patterns may optionally begin with a host name, restricting matches to\n// URLs on that host only.  Host-specific patterns take precedence over\n// general patterns, so that a handler might register for the two patterns\n// \"/codesearch\" and \"codesearch.google.com/\" without also taking over\n// requests for \"http://www.google.com/\".\n\nhttp://codereview.appspot.com/4070043/diff/4002/src/pkg/http/server.go#newcode604\nsrc/pkg/http/server.go:604: // Cached?\nThis cache is going to grow without bound, and we have no data\nshowing that it is necessary anyway.  Please remove.\n\nIn your original CL you had a function like\n\nfunc (mux *ServeMux) match(path string) Handler {\n    ... original matching code (lines 601-611 of original code) ...\n}\n\nIf you restore that then this becomes\n\nh := mux.match(r.Host + r.URL.Path)\nif h == nil {\n    h = mux.match(r.URL.Path)\n}\nif h == nil {\n    h = NotFoundHandler()\n}\nh.ServeHTTP(w, r)",
			"disapproval": false,
			"date": "2011-01-26 15:29:37.395361",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello bradfitzgo, rsc (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-01-26 16:31:50.956765",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello bradfitzgo, rsc (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-01-26 16:35:41.506935",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "the code looks good.\nthe test still looks a bit like a Java test\ninstead of a Go test.  some suggestions below.\n\nplease change the CL description to\n\nhttp: implement host patterns\n\nshort and sweet\n\nhttp://codereview.appspot.com/4070043/diff/17001/src/pkg/http/serve_test.go\nFile src/pkg/http/serve_test.go (right):\n\nhttp://codereview.appspot.com/4070043/diff/17001/src/pkg/http/serve_test.go#newcode139\nsrc/pkg/http/serve_test.go:139: func defaultHandler(w ResponseWriter, r *Request) {\nkind of repetitive.  here's an alternative\n\ntype stringHandler string\n\nfunc (s stringHandler) ServeHTTP(w ResponseWriter, r *Request) {\n    w.Write([]byte(s))\n}\n\nHandle(\"/\", stringHandler(\"Default\"))\nHandle(\"/someDir/\", stringHandler(\"someDir\"))\netc\n\nand then the Handle calls should be table-driven too.\n\nhttp://codereview.appspot.com/4070043/diff/17001/src/pkg/http/serve_test.go#newcode157\nsrc/pkg/http/serve_test.go:157: func GetVHost(url, host string) (r *Response, finalURL string, err os.Error) {\nThis is exploting what amounts to a bug in send: \nit doesn't use the same information to choose where\nto dial as Request does to choose what Host: line to include.\n\nA better choice would be to use a ClientConn.\nIn the test you can set up with\n\n    conn, err := net.Dial(\"tcp\", \"\", \"localhost:12345\")\n    if err != nil {\n        return nil, err\n    }\n    defer conn.Close()\n    cc := NewClientConn(conn, nil)\n\nand then each iteration would do:\n\n    var req Request\n    if req.URL, err = ParseURL(url); err != nil {\n        t.Errorf(\"cannot parse url: %v\", err)\n        continue\n    }\n    if err := cc.Write(&Request{URL: url}); err != nil {\n        t.Errorf(\"writing request: %v\", err)\n        continue\n    }\n    resp, err := cc.Read()\n    if err != nil {\n        t.Errorf(\"reading response: %v\", err)\n        continue\n    }\n\nhttp://codereview.appspot.com/4070043/diff/17001/src/pkg/http/serve_test.go#newcode215\nsrc/pkg/http/serve_test.go:215: var vtests = []struct {\nmove to global, just above this Test func.\n\nvar virtualHostTests = ...\n\nhttp://codereview.appspot.com/4070043/diff/17001/src/pkg/http/serve_test.go#newcode227\nsrc/pkg/http/serve_test.go:227: for i := 0; i < len(vtests); i++ {\nfor _, tt := range virtualHostTests {\n\nhttp://codereview.appspot.com/4070043/diff/17001/src/pkg/http/serve_test.go#newcode228\nsrc/pkg/http/serve_test.go:228: checkResponse(t, vtests[i].url, vtests[i].host, vtests[i].data)\nnow that there's only one call, inline the code and delete checkResponse.\n\nhttp://codereview.appspot.com/4070043/diff/17001/src/pkg/http/server.go\nFile src/pkg/http/server.go (right):\n\nhttp://codereview.appspot.com/4070043/diff/17001/src/pkg/http/server.go#newcode531\nsrc/pkg/http/server.go:531: // Patterns named fixed, rooted paths, like \"/favicon.ico\",\ns/named/name/ (error in original text, but please fix)\n\nhttp://codereview.appspot.com/4070043/diff/17001/src/pkg/http/server.go#newcode533\nsrc/pkg/http/server.go:533: // Patterns must begin with /, except for virtual hosts paths explained later.\nplease delete this line\n\nhttp://codereview.appspot.com/4070043/diff/17001/src/pkg/http/server.go#newcode616\nsrc/pkg/http/server.go:616: // Host-specific patterns first, then most-specific (longest) pattern wins.\n// Host-specific pattern takes precedence over general patterns.\n\nmentioning \"most-specific (longest)\" is confusing,\nbecause the code that does that is not here.",
			"disapproval": false,
			"date": "2011-01-26 16:54:25.107200",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Can't seem to work at home, hg clpatch seems not supported by my home hg version (version 1.4.3):\n\nhg help clpatch\n*** failed to import extension codereview from /home/jose/lib/codereview/codereview.py: [Errno 2] No such file or directory\nhg: unknown command 'clpatch'\nMercurial Distributed SCM\n\nbasic commands:\n...\n\n---\nAlso can't compile with ./all.bash, the compilation hangs after the net package:\n...\ngopack grc _test/net.a _gotest_.6 \nmake[2]: Leaving directory `/home/jose/go/src/pkg/net'\n\n(hangs forever)",
			"disapproval": false,
			"date": "2011-01-26 20:07:44.713526",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Jan 26, 2011 at 15:07,  <josvazg@gmail.com> wrote:\n> Can't seem to work at home, hg clpatch seems not supported by my home hg\n> version (version 1.4.3):\n\nsee http://golang.org/doc/contribute.html.\nyou need to configure the mercurial extension\non your home machine the same way you\ndid on your other machine.\n\n---\nEdit $GOROOT/.hg/hgrc to add:\n\n[extensions]\ncodereview = YOUR_GO_ROOT/lib/codereview/codereview.py\n\n[ui]\nusername = Your Name <you@server.dom>\n\nReplace YOUR_GO_ROOT with the value of $GOROOT. The Mercurial\nconfiguration file format does not allow environment variable\nsubstitution. The username information will not be used unless you are\na committer (see below), but Mercurial complains if it is missing.\n--\n\n> gopack grc _test/net.a _gotest_.6\n> make[2]: Leaving directory `/home/jose/go/src/pkg/net'\n>\n> (hangs forever)\n\nthis is probably a networking problem.\nare you on the internet?\nare you on a Mac?\n\nruss\n",
			"disapproval": false,
			"date": "2011-01-26 20:25:13.142092",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Yes I already tried that:\n$ cat .hg/hgrc \n[paths]\ndefault = https://go.googlecode.com/hg/\n\n[extensions]\ncodereview = /home/jose/lib/codereview/codereview.py\n\n[ui]\nusername = Jose Luis V\u00e1zquez Gonz\u00e1lez <josvazg@gmail.com>\n\nDo you see something wrong on the file?\n\nAnd yes, the all.bash problem was a networking problem:\n\ngopack grc _test/net.a _gotest_.6 \nmake[2]: Leaving directory `/home/jose/go/src/pkg/net'\n--- FAIL: net.TestDialGoogle\n...\n\tDial(\"tcp6\", \"\", \"74.125.19.99:http\") = _, dial tcp6 74.125.19.99:80: connection timed out\n...\nconnection timed out\nFAIL\n\nI am on ubuntu 10.04 (same at work) and I have internet access, (I am typing this on codereview.appspot.com), but maybe there is (temporary) some problem in Spain ISP networks to access those IPs.",
			"disapproval": false,
			"date": "2011-01-26 21:02:22.097230",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Jan 26, 2011 at 16:02,  <josvazg@gmail.com> wrote:\n> Yes I already tried that:\n> $ cat .hg/hgrc\n> [paths]\n> default = https://go.googlecode.com/hg/\n>\n> [extensions]\n> codereview = /home/jose/lib/codereview/codereview.py\n\ndoes this file exist?\ni would have expected it to say something\nlike /home/jose/go/lib/codereview/codereview.py\nunless your $GOROOT is /home/jose.\n\n> \u00a0 \u00a0 \u00a0 \u00a0Dial(\"tcp6\", \"\", \"74.125.19.99:http\") = _, dial tcp6 74.125.19.99:80:\n> connection timed out\n\nhg sync should fix this for you.\ni pushed out a fix to this bug earlier today.\nsorry about the trouble.\n\nruss\n",
			"disapproval": false,
			"date": "2011-01-26 21:23:02.632660",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Thanks a lot!\n\n- The path for codereview.py was wrong, I didn't notice.\n\n- The compilation was successful now after an hg sync.",
			"disapproval": false,
			"date": "2011-01-26 21:40:33.879161",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Why do I get this error?:\n$ hg clpatch 4070043\nwarning: cannot find josvazg@gmail.com in CONTRIBUTORS\nhgpatch: exceptions.OSError: [Errno 2] No such file or directory",
			"disapproval": false,
			"date": "2011-01-26 21:41:24.109288",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Jan 26, 2011 at 16:41,  <josvazg@gmail.com> wrote:\n> Why do I get this error?:\n> $ hg clpatch 4070043\n> warning: cannot find josvazg@gmail.com in CONTRIBUTORS\n\nThis is okay.  (clpatch is usually for people who are\nsubmitting a change for someone, and it's a reminder to us.)\n\n> hgpatch: exceptions.OSError: [Errno 2] No such file or directory\n\nSounds like you have not run all.bash\nor if you did have not set your $PATH to\ninclude the bin directory where binaries\ngot installed ($GOBIN or if not set $GOROOT/bin).\n\nhgpatch is the name of a Go program installed\nby all.bash, and this message is saying that\nthe Python plugin cannot find it to execute it.\nIt is not a very good error message.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-01-26 21:45:54.311125",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello bradfitzgo, rsc (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-01-27 15:50:53.616736",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4070043/diff/1003/src/pkg/http/serve_test.go\nFile src/pkg/http/serve_test.go (right):\n\nhttp://codereview.appspot.com/4070043/diff/1003/src/pkg/http/serve_test.go#newcode204\nsrc/pkg/http/serve_test.go:204: func TestVirtualHostHandlers(t *testing.T) {\nTestHostPatterns\n\ni know that other servers call these \"virtual hosts\"\nbut they are no more virtual than any other host.\n\nhttp://codereview.appspot.com/4070043/diff/1003/src/pkg/http/serve_test.go#newcode210\nsrc/pkg/http/serve_test.go:210: checkResponse(t, vt.url, vt.expected)\nplease inline this call.\nthere is only one call in the entire file\nand it is easier to see the context if the\ncode is here instead of somewhere else.\n\nif you do that you can also inline the getFakedVirtHost\nand lift the connection management out of the loop\nso that you only dial once.\n\nsee my last round of suggestions for sample code.",
			"disapproval": false,
			"date": "2011-01-27 16:19:54.309721",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello bradfitzgo, rsc (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-01-27 17:43:07.066588",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Very close.  Looks like a Go test now.  :-)\n\nhttp://codereview.appspot.com/4070043/diff/33001/src/pkg/http/serve_test.go\nFile src/pkg/http/serve_test.go (right):\n\nhttp://codereview.appspot.com/4070043/diff/33001/src/pkg/http/serve_test.go#newcode149\nsrc/pkg/http/serve_test.go:149: {\"someHost.com:12345/someDir/\", \"someHost.com:12345/someDir\"},\nI'd suggest dropping :12345 here and in the tests.\nIt's unnecessary.\n\nhttp://codereview.appspot.com/4070043/diff/33001/src/pkg/http/serve_test.go#newcode167\nsrc/pkg/http/serve_test.go:167: go ListenAndServe(\":12345\", nil)\nThis creates a race - the goroutine might not listen\nbefore the Dial tries to connect - and also hard-codes\na port, which is undesirable.\n\nInstead, I think you need to do:\n\nl, err := net.Listen(\"tcp\", \"127.0.0.1:0\")  // any port\nif err != nil {\n    t.Fatal(err)\n}\ndefer l.Close()\ngo http.Serve(l, nil)\n\nconn, err := net.Dial(\"tcp\", \"\", l.Addr().String())\nif err != nil {\n    t.Fatal(err)\n}\n\n\n(Fatal is like Error but aborts the test, so you don't need the return.)\n\nhttp://codereview.appspot.com/4070043/diff/33001/src/pkg/http/serve_test.go#newcode192\nsrc/pkg/http/serve_test.go:192: if s == \"\" {\nthis test isn't necessary given s != vt.expected below\ndelete\n\nhttp://codereview.appspot.com/4070043/diff/33001/src/pkg/http/serve_test.go#newcode197\nsrc/pkg/http/serve_test.go:197: t.Errorf(\"Get Result header is unexpected: %v instead of %v\\n\", s, r)\n%q will print quoted strings, which is useful here.\nalso, usually clearer and shorter to print code:\n\nt.Errorf(\"Get(%q) = %q, want %q\", vt.url, s, vt.expected)",
			"disapproval": false,
			"date": "2011-01-27 17:55:38.427872",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello bradfitzgo, rsc (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-01-28 10:38:48.006894",
			"approval": false
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Couldn't work at home again.\nI fixed my GO building environment so that ./all.bash and hg clpatch could find all GO binaries in the PATH and that worked.\n\nhg clpatch forced me to do hg sync before and then hg clpatch tried to pacth serve_test.go, but it failed with an error. Maybe the new version of serve_test.go already contains changes incompatible with my patch?\nAt work everything works ok, but I haven't done any hg sync or hg pull.",
			"disapproval": false,
			"date": "2011-01-28 10:43:26.784121",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Fri, Jan 28, 2011 at 05:43,  <josvazg@gmail.com> wrote:\n> Couldn't work at home again.\n> I fixed my GO building environment so that ./all.bash and hg clpatch\n> could find all GO binaries in the PATH and that worked.\n>\n> hg clpatch forced me to do hg sync before and then hg clpatch tried to\n> pacth serve_test.go, but it failed with an error. Maybe the new version\n> of serve_test.go already contains changes incompatible with my patch?\n> At work everything works ok, but I haven't done any hg sync or hg pull.\n\nSorry about that.  clpatch is not really meant for moving\nwork back and forth between computers, so it doesn't handle\nthese kinds of cases terribly well.  It's really meant for submitters\nto patch in CLs in order to submit them (I will run clpatch to\nsubmit this CL when it is done, for example).\nI switch between computers by copying the entire Go tree\n($GOROOT) from machine to machine.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-01-28 13:07:28.678069",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nThanks for seeing this through.\n\nPlease complete a CLA as described at\nhttp://golang.org/doc/contribute.html#copyright\nso that we can add the changes to the repository.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-01-28 13:11:01.044069",
			"approval": true
		},
		{
			"sender": "josvazg@gmail.com",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Done. I guess I should be receiving an answer from Google by post mail?\n\nDo you think this change will be included in the next go releases?\nThanks for your help!",
			"disapproval": false,
			"date": "2011-01-29 10:57:51.929121",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Sat, Jan 29, 2011 at 05:57,  <josvazg@gmail.com> wrote:\n> Done. I guess I should be receiving an answer from Google by post mail?\n\nI don't think so.  It just ends up recorded in our open source records,\nwhich we check before adding someone to the AUTHORS and CONTRIBUTORS\nfiles.  I see your form submission in the records.\n\n> Do you think this change will be included in the next go releases?\n\nIt will.  Thanks again.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-01-30 17:16:18.692693",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"josvazg@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=49c53513a8a2 ***\n\nhttp: add host patterns\n\nR=bradfitzgo, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/4070043\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-02-01 18:59:02.883254",
			"approval": false
		}
	],
	"owner_email": "josvazg@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "josvazg",
	"subject": "code review 4070043: http: added virtual host mappings BEFORE default path m...",
	"created": "2011-01-25 15:29:17.723463",
	"patchsets": [
		1,
		4002,
		13001,
		17001,
		1003,
		33001,
		38001
	],
	"modified": "2011-02-01 18:59:02.883254",
	"closed": false,
	"issue": 4070043
}