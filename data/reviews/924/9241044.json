{
	"description": "cmd/5c, cmd/6c, cmd/8c: isolate textflag and dataflag\n\nFixes issue 5419.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"minux.ma@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-05-07 11:40:43.876880",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ping.",
			"disapproval": false,
			"date": "2013-05-31 22:49:15.790010",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "SGTM. I'm wondering how to test this change, do we use this pattern\r\noften inside the runtime ?\r\n\r\nOn Sat, Jun 1, 2013 at 8:49 AM,  <ality@pbrane.org> wrote:\r\n> Ping.\r\n>\r\n> https://codereview.appspot.com/9241044/\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-31 23:53:09.314590",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/31 23:53:09, dfc wrote:\n> SGTM. I'm wondering how to test this change, do we use this pattern\n> often inside the runtime ?\n\nNot often, no. I added a test that would work if test/run.go\nsupported compiling C code. I don't know how involved it would\nbe to add it, though. Any ideas?\n\n  Anthony",
			"disapproval": false,
			"date": "2013-06-01 18:49:25.796550",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "minux <minux.ma@gmail.com> once said:\r\n> why not place the test in runtime?\r\n\r\nHow would I do that? The test uses run.go's errorcheck since\r\nthe success condition is an error from [568]c.\r\n\r\nI'll try to think up other ways to test this.\r\n\r\n  Anthony\r\n",
			"disapproval": false,
			"date": "2013-06-02 00:20:18.595800",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sunday, June 2, 2013, ality wrote:\r\n>\r\n> On 2013/05/31 23:53:09, dfc wrote:\r\n>\r\n>> SGTM. I'm wondering how to test this change, do we use this pattern\r\n>> often inside the runtime ?\r\n>>\r\n>\r\n> Not often, no. I added a test that would work if test/run.go\r\n> supported compiling C code. I don't know how involved it would\r\n> be to add it, though. Any ideas?\r\n\r\nwhy not place the test in runtime?\r\n",
			"disapproval": false,
			"date": "2013-06-01 20:46:11.813240",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nI changed the test to invoke the C compiler with\nthe go tool. Hopefully, that's not too gross.\n\n  Anthony",
			"disapproval": false,
			"date": "2013-06-02 07:35:37.646180",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/02 00:20:18, ality wrote:\n> minux <mailto:minux.ma@gmail.com> once said:\n> > why not place the test in runtime?\n> How would I do that? The test uses run.go's errorcheck since\n> the success condition is an error from [568]c.\nI assumed that you check disassembly for textflag 7.\n\ni think what's important is the textflag in disassembly output\nTEXT \u00b7nosplitfunc(SB),7,$0\nrather than the diagnosetics (as if the textflag is correct, the\nlinker could also check nosplit stack overflow error).",
			"disapproval": false,
			"date": "2013-06-02 14:34:45.451410",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nHonestly, I'd throw away the test.",
			"disapproval": false,
			"date": "2013-06-03 19:25:04.723740",
			"approval": true
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/03 19:25:04, rsc wrote:\n> LGTM\n> \n> Honestly, I'd throw away the test.\n\nOkay. I'll submit without the test.\n\n  Anthony",
			"disapproval": false,
			"date": "2013-06-04 22:15:46.153080",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=930fd4cb92fa ***\n\ncmd/5c, cmd/6c, cmd/8c: isolate textflag and dataflag\n\nFixes issue 5419.\n\nR=golang-dev, dave, minux.ma, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/9241044",
			"disapproval": false,
			"date": "2013-06-04 22:18:12.592780",
			"approval": false
		}
	],
	"owner_email": "ality@pbrane.org",
	"private": false,
	"base_url": "",
	"owner": "ality",
	"subject": "code review 9241044: cmd/5c, cmd/6c, cmd/8c: isolate textflag and dataflag",
	"created": "2013-05-07 06:40:56.789540",
	"patchsets": [
		1,
		2001,
		4001,
		13001,
		17001,
		22001,
		25001
	],
	"modified": "2013-06-04 22:18:15.663230",
	"closed": true,
	"issue": 9241044
}