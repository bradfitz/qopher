{
	"description": "\tAdd Close() method to rpc.Client to allow graceful connection teardown.\n  Fixes issue 675",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "msolo@gmail.com",
			"recipients": [
				"msolo@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change.",
			"disapproval": false,
			"date": "2010-04-16 05:20:02.598221",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nlooks good but please update CL description: Fixes issue 675.\n\n\nOn Apr 15, 2010, at 10:20 PM, msolo@gmail.com wrote:\n\n> Reviewers: rsc,\n> \n> Message:\n> Hello rsc (cc: golang-dev@googlegroups.com),\n> \n> I'd like you to review this change.\n> \n> \n> Description:\n> add Close() method to rpc.Client to allow graceful connection teardown\n> \n> Please review this at http://codereview.appspot.com/924042/show\n> \n> Affected files:\n>  M src/pkg/rpc/client.go\n> \n> \n> Index: src/pkg/rpc/client.go\n> ===================================================================\n> --- a/src/pkg/rpc/client.go\n> +++ b/src/pkg/rpc/client.go\n> @@ -37,6 +37,7 @@\n> \tenc      *gob.Encoder\n> \tdec      *gob.Decoder\n> \tpending  map[uint64]*Call\n> +\tclosing  bool\n> }\n> \n> func (client *Client) send(c *Call) {\n> @@ -72,7 +73,7 @@\n> \t\tresponse := new(Response)\n> \t\terr = client.dec.Decode(response)\n> \t\tif err != nil {\n> -\t\t\tif err == os.EOF {\n> +\t\t\tif err == os.EOF && !client.closing {\n> \t\t\t\terr = io.ErrUnexpectedEOF\n> \t\t\t}\n> \t\t\tbreak\n> @@ -101,7 +102,9 @@\n> \t\t_ = call.Done <- call // do not block\n> \t}\n> \tclient.mutex.Unlock()\n> -\tlog.Stderr(\"rpc: client protocol error:\", err)\n> +\tif !(err == os.EOF && client.closing) {\n> +\t\tlog.Stderr(\"rpc: client protocol error:\", err)\n> +\t}\n> }\n> \n> // NewClient returns a new Client to handle requests to the\n> @@ -146,6 +149,16 @@\n> \treturn NewClient(conn), nil\n> }\n> \n> +func (client *Client) Close() os.Error {\n> +\tif client.shutdown != nil || client.closing {\n> +\t\treturn os.ErrorString(\"rpc: already closed\")\n> +\t}\n> +\tclient.mutex.Lock()\n> +\tclient.closing = true\n> +\tclient.mutex.Unlock()\n> +\treturn client.conn.Close()\n> +}\n> +\n> // Go invokes the function asynchronously.  It returns the Call structure representing\n> // the invocation.  The done channel will signal when the call is complete by returning\n> // the same Call object.  If done is nil, Go will allocate a new channel.\n> \n> \n> \n> \n> -- \n> Subscription settings: http://groups.google.com/group/golang-dev/subscribe?hl=en\n\n",
			"disapproval": false,
			"date": "2010-04-16 05:25:32.446536",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\n> + \u00a0 \u00a0 \u00a0 if !(err == os.EOF && client.closing) {\n\ntypically we demorgan these away for\neasier readability:\n\nif err != os.EOF || !client.closing\n",
			"disapproval": false,
			"date": "2010-04-16 05:31:26.886680",
			"approval": true
		},
		{
			"sender": "msolo@gmail.com",
			"recipients": [
				"msolo@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2010-04-16 06:41:33.234385",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"msolo@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Believe Rob made a similar change.",
			"disapproval": false,
			"date": "2010-04-27 05:48:39.515068",
			"approval": false
		},
		{
			"sender": "msolo@gmail.com",
			"recipients": [
				"msolo@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2011-12-12 20:00:24.076152",
			"approval": false
		}
	],
	"owner_email": "msolo@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "msolo",
	"subject": "code review 924042: \tAdd Close() method to rpc.Client to allow graceful con...",
	"created": "2010-04-16 05:12:24.379466",
	"patchsets": [
		1,
		2001,
		8001
	],
	"modified": "2011-12-12 20:00:25.221704",
	"closed": true,
	"issue": 924042
}