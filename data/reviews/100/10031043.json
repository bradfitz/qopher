{
	"description": "[release-branch.go1.1] runtime: zeroize g->fnstart to not prevent GC of the closure\n\n\u00ab\u00ab\u00ab CL 9557043 / 2c128d417029\nruntime: zeroize g->fnstart to not prevent GC of the closure\nFixes issue 5493.\n\nR=golang-dev, minux.ma, iant\nCC=golang-dev\nhttps://codereview.appspot.com/9557043\n\u00bb\u00bb\u00bb\n",
	"cc": [
		"dvyukov@google.com",
		"iant@golang.org",
		"minux.ma@gmail.com",
		"bradfitz@golang.org",
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"dvyukov@google.com",
				"iant@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dvyukov, iant, minux (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-05 00:44:18.327360",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\n\r\nOn Tue, Jun 4, 2013 at 5:44 PM, <adg@golang.org> wrote:\r\n\r\n> Reviewers: dvyukov, iant, minux,\r\n>\r\n> Message:\r\n> Hello dvyukov, iant, minux (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> [release-branch.go1.1] runtime: zeroize g->fnstart to not prevent GC of\r\n> the closure\r\n>\r\n> \u00ab\u00ab\u00ab CL 9557043 / 2c128d417029\r\n> runtime: zeroize g->fnstart to not prevent GC of the closure\r\n> Fixes issue 5493.\r\n>\r\n> R=golang-dev, minux.ma, iant\r\n> CC=golang-dev\r\n> https://codereview.appspot.**com/9557043<https://codereview.appspot.com/9557043>\r\n> \u00bb\u00bb\u00bb\r\n>\r\n>\r\n> Please review this at https://codereview.appspot.**com/10031043/<https://codereview.appspot.com/10031043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/proc.c\r\n>   A test/fixedbugs/issue5493.go\r\n>\r\n>\r\n> Index: src/pkg/runtime/proc.c\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/proc.c\r\n> +++ b/src/pkg/runtime/proc.c\r\n> @@ -1232,6 +1232,7 @@\r\n>  goexit0(G *gp)\r\n>  {\r\n>         gp->status = Gdead;\r\n> +       gp->fnstart = nil;\r\n>         gp->m = nil;\r\n>         gp->lockedm = nil;\r\n>         m->curg = nil;\r\n> Index: test/fixedbugs/issue5493.go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/test/fixedbugs/issue5493.go\r\n> @@ -0,0 +1,52 @@\r\n> +// run\r\n> +\r\n> +// Copyright 2013 The Go Authors. All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +package main\r\n> +\r\n> +import (\r\n> +       \"runtime\"\r\n> +       \"sync\"\r\n> +       \"sync/atomic\"\r\n> +       \"time\"\r\n> +)\r\n> +\r\n> +const N = 10\r\n> +var count int64\r\n> +\r\n> +func run() error {\r\n> +       f1 := func() {}\r\n> +       f2 := func() {\r\n> +               func() {\r\n> +                       f1()\r\n> +               }()\r\n> +       }\r\n> +       runtime.SetFinalizer(&f1, func(f *func()) {\r\n> +               atomic.AddInt64(&count, -1)\r\n> +       })\r\n> +       go f2()\r\n> +       return nil\r\n> +}\r\n> +\r\n> +func main() {\r\n> +       count = N\r\n> +       var wg sync.WaitGroup\r\n> +       wg.Add(N)\r\n> +       for i := 0; i < N; i++ {\r\n> +               go func() {\r\n> +                       run()\r\n> +                       wg.Done()\r\n> +               }()\r\n> +       }\r\n> +       wg.Wait()\r\n> +       for i := 0; i < 2*N; i++ {\r\n> +               time.Sleep(10 * time.Millisecond)\r\n> +               runtime.GC()\r\n> +       }\r\n> +       if count != 0 {\r\n> +               panic(\"not all finalizers are called\")\r\n> +       }\r\n> +}\r\n> +\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-05 00:49:30.318460",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\r\n\r\nOn Wed, Jun 5, 2013 at 10:49 AM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> LGTM\r\n>\r\n>\r\n>\r\n> On Tue, Jun 4, 2013 at 5:44 PM, <adg@golang.org> wrote:\r\n>>\r\n>> Reviewers: dvyukov, iant, minux,\r\n>>\r\n>> Message:\r\n>> Hello dvyukov, iant, minux (cc: golang-dev@googlegroups.com),\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://code.google.com/p/go\r\n>>\r\n>>\r\n>> Description:\r\n>> [release-branch.go1.1] runtime: zeroize g->fnstart to not prevent GC of\r\n>> the closure\r\n>>\r\n>> \u00ab\u00ab\u00ab CL 9557043 / 2c128d417029\r\n>> runtime: zeroize g->fnstart to not prevent GC of the closure\r\n>> Fixes issue 5493.\r\n>>\r\n>> R=golang-dev, minux.ma, iant\r\n>> CC=golang-dev\r\n>> https://codereview.appspot.com/9557043\r\n>> \u00bb\u00bb\u00bb\r\n>>\r\n>>\r\n>> Please review this at https://codereview.appspot.com/10031043/\r\n>>\r\n>> Affected files:\r\n>>   M src/pkg/runtime/proc.c\r\n>>   A test/fixedbugs/issue5493.go\r\n>>\r\n>>\r\n>> Index: src/pkg/runtime/proc.c\r\n>> ===================================================================\r\n>> --- a/src/pkg/runtime/proc.c\r\n>> +++ b/src/pkg/runtime/proc.c\r\n>> @@ -1232,6 +1232,7 @@\r\n>>  goexit0(G *gp)\r\n>>  {\r\n>>         gp->status = Gdead;\r\n>> +       gp->fnstart = nil;\r\n>>         gp->m = nil;\r\n>>         gp->lockedm = nil;\r\n>>         m->curg = nil;\r\n>> Index: test/fixedbugs/issue5493.go\r\n>> ===================================================================\r\n>> new file mode 100644\r\n>> --- /dev/null\r\n>> +++ b/test/fixedbugs/issue5493.go\r\n>> @@ -0,0 +1,52 @@\r\n>> +// run\r\n>> +\r\n>> +// Copyright 2013 The Go Authors. All rights reserved.\r\n>> +// Use of this source code is governed by a BSD-style\r\n>> +// license that can be found in the LICENSE file.\r\n>> +\r\n>> +package main\r\n>> +\r\n>> +import (\r\n>> +       \"runtime\"\r\n>> +       \"sync\"\r\n>> +       \"sync/atomic\"\r\n>> +       \"time\"\r\n>> +)\r\n>> +\r\n>> +const N = 10\r\n>> +var count int64\r\n>> +\r\n>> +func run() error {\r\n>> +       f1 := func() {}\r\n>> +       f2 := func() {\r\n>> +               func() {\r\n>> +                       f1()\r\n>> +               }()\r\n>> +       }\r\n>> +       runtime.SetFinalizer(&f1, func(f *func()) {\r\n>> +               atomic.AddInt64(&count, -1)\r\n>> +       })\r\n>> +       go f2()\r\n>> +       return nil\r\n>> +}\r\n>> +\r\n>> +func main() {\r\n>> +       count = N\r\n>> +       var wg sync.WaitGroup\r\n>> +       wg.Add(N)\r\n>> +       for i := 0; i < N; i++ {\r\n>> +               go func() {\r\n>> +                       run()\r\n>> +                       wg.Done()\r\n>> +               }()\r\n>> +       }\r\n>> +       wg.Wait()\r\n>> +       for i := 0; i < 2*N; i++ {\r\n>> +               time.Sleep(10 * time.Millisecond)\r\n>> +               runtime.GC()\r\n>> +       }\r\n>> +       if count != 0 {\r\n>> +               panic(\"not all finalizers are called\")\r\n>> +       }\r\n>> +}\r\n>> +\r\n>>\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@googlegroups.com.\r\n>> For more options, visit https://groups.google.com/groups/opt_out.\r\n>>\r\n>>\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-05 00:51:40.788440",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"dvyukov@google.com",
				"iant@golang.org",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=91ebf3762c9d ***\n\n[release-branch.go1.1] runtime: zeroize g->fnstart to not prevent GC of the closure\n\n\u00ab\u00ab\u00ab CL 9557043 / 2c128d417029\nruntime: zeroize g->fnstart to not prevent GC of the closure\nFixes issue 5493.\n\nR=golang-dev, minux.ma, iant\nCC=golang-dev\nhttps://codereview.appspot.com/9557043\n\u00bb\u00bb\u00bb\n\nR=dvyukov, iant, minux.ma, bradfitz, dave\nCC=golang-dev\nhttps://codereview.appspot.com/10031043",
			"disapproval": false,
			"date": "2013-06-05 00:52:08.242850",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-06-10 11:49:17.608500",
			"approval": true
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 10031043: [release-branch.go1.1] runtime: zeroize g->fnstart to n...",
	"created": "2013-06-05 00:43:56.097240",
	"patchsets": [
		1,
		2001,
		8001
	],
	"modified": "2013-06-10 11:49:17.675270",
	"closed": true,
	"issue": 10031043
}