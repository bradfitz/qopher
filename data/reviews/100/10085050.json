{
	"description": "cmd/5l: use guaranteed undefined instruction for UNDEF to match [68]l.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "SGTM I guess. Is there a reference for the impossible instruction,\r\npossibly in the ARM manual ?\r\n\r\nOn Fri, Jun 7, 2013 at 8:58 PM,  <minux.ma@gmail.com> wrote:\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> cmd/5l: use guaranteed undefined instruction for UNDEF to match [68]l.\r\n>\r\n> Please review this at https://codereview.appspot.com/10085050/\r\n>\r\n> Affected files:\r\n>   M src/cmd/5l/asm.c\r\n>\r\n>\r\n> Index: src/cmd/5l/asm.c\r\n> ===================================================================\r\n> --- a/src/cmd/5l/asm.c\r\n> +++ b/src/cmd/5l/asm.c\r\n> @@ -1515,11 +1515,9 @@\r\n>                 // This is supposed to be something that stops execution.\r\n>                 // It's not supposed to be reached, ever, but if it is, we'd\r\n>                 // like to be able to tell how we got there.  Assemble as\r\n> -               //      BL $0\r\n> -               // TODO: Use addrel.\r\n> -               v = (0 - pc) - 8;\r\n> -               o1 = opbra(ABL, C_SCOND_NONE);\r\n> -               o1 |= (v >> 2) & 0xffffff;\r\n> +               // 0xf7fabcfd which is guranteed to raise undefined\r\n> instruction\r\n> +               // exception.\r\n> +               o1 = 0xf7fabcfd;\r\n>                 break;\r\n>         case 97:        /* CLZ Rm, Rd */\r\n>                 o1 = oprrr(p->as, p->scond);\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-07 11:00:53.708530",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-07 10:58:10.596670",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/07 11:00:53, dfc wrote:\n> SGTM I guess. Is there a reference for the impossible instruction,\n> possibly in the ARM manual ?\nSection A3.16.5 Architecturally Undefined Instruction space\nin ARMv5 Architecture Reference Manual [0].\n\nnote: i intentionally choose the instruction code so that they are\nunlikely to be recognized as breakpoints by OS (such as Linux, see\n[1] for details).\n\n[0]: http://infocenter.arm.com/help/topic/com.arm.doc.ddi0100i/index.html\n[1]: http://lxr.linux.no/#linux+v3.9.4/arch/arm/kernel/ptrace.c#L50",
			"disapproval": false,
			"date": "2013-06-07 11:12:20.745040",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\r\n\r\nOn Fri, Jun 7, 2013 at 9:12 PM,  <minux.ma@gmail.com> wrote:\r\n> On 2013/06/07 11:00:53, dfc wrote:\r\n>>\r\n>> SGTM I guess. Is there a reference for the impossible instruction,\r\n>> possibly in the ARM manual ?\r\n>\r\n> Section A3.16.5 Architecturally Undefined Instruction space\r\n> in ARMv5 Architecture Reference Manual [0].\r\n>\r\n> note: i intentionally choose the instruction code so that they are\r\n> unlikely to be recognized as breakpoints by OS (such as Linux, see\r\n> [1] for details).\r\n>\r\n> [0]:\r\n> http://infocenter.arm.com/help/topic/com.arm.doc.ddi0100i/index.html\r\n> [1]: http://lxr.linux.no/#linux+v3.9.4/arch/arm/kernel/ptrace.c#L50\r\n>\r\n> https://codereview.appspot.com/10085050/\r\n",
			"disapproval": false,
			"date": "2013-06-10 00:41:16.996400",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-06-10 17:30:24.728010",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e1e236ba6097 ***\n\ncmd/5l: use guaranteed undefined instruction for UNDEF to match [68]l.\n\nR=golang-dev, dave, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/10085050",
			"disapproval": false,
			"date": "2013-06-10 18:02:53.620600",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 10085050: cmd/5l: use guaranteed undefined instruction for UNDEF ...",
	"created": "2013-06-07 10:57:24.183450",
	"patchsets": [
		1,
		2001,
		5001,
		11001
	],
	"modified": "2013-06-10 18:02:57.657970",
	"closed": true,
	"issue": 10085050
}