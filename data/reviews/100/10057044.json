{
	"description": "cmd/gc: move genembedtramp into portable code\n\nRequires adding new linker instruction\n        RET\tf(SB)\nmeaning return but then immediately call f.\nThis is what you'd use to implement a tail call after\nfiddling with the arguments, but the compiler only\nuses it in genwrapper.\n\nThis CL eliminates the copy-and-paste genembedtramp\nfunctions from 5g/8g/6g and makes the code run on ARM\nfor the first time. It removes a small special case for function\ngeneration, which should help Carl a bit, but at the same time\nit does not bother to implement general tail call optimization,\nwhich we do not want anyway.\n\nFixes issue 5627.",
	"cc": [
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-06-11 13:41:46.751410",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=4fb5b9ee0f0c ***\n\ncmd/gc: move genembedtramp into portable code\n\nRequires adding new linker instruction\n        RET\tf(SB)\nmeaning return but then immediately call f.\nThis is what you'd use to implement a tail call after\nfiddling with the arguments, but the compiler only\nuses it in genwrapper.\n\nThis CL eliminates the copy-and-paste genembedtramp\nfunctions from 5g/8g/6g and makes the code run on ARM\nfor the first time. It removes a small special case for function\ngeneration, which should help Carl a bit, but at the same time\nit does not bother to implement general tail call optimization,\nwhich we do not want anyway.\n\nFixes issue 5627.\n\nR=ken2\nCC=golang-dev\nhttps://codereview.appspot.com/10057044",
			"disapproval": false,
			"date": "2013-06-11 13:41:53.867780",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry rsc, this has upset the -race builders.\r\n\r\nOn Tue, Jun 11, 2013 at 11:41 PM,  <rsc@golang.org> wrote:\r\n> *** Submitted as\r\n> https://code.google.com/p/go/source/detail?r=4fb5b9ee0f0c ***\r\n>\r\n>\r\n> cmd/gc: move genembedtramp into portable code\r\n>\r\n> Requires adding new linker instruction\r\n>         RET     f(SB)\r\n> meaning return but then immediately call f.\r\n> This is what you'd use to implement a tail call after\r\n> fiddling with the arguments, but the compiler only\r\n> uses it in genwrapper.\r\n>\r\n> This CL eliminates the copy-and-paste genembedtramp\r\n> functions from 5g/8g/6g and makes the code run on ARM\r\n> for the first time. It removes a small special case for function\r\n> generation, which should help Carl a bit, but at the same time\r\n> it does not bother to implement general tail call optimization,\r\n> which we do not want anyway.\r\n>\r\n> Fixes issue 5627.\r\n>\r\n> R=ken2\r\n> CC=golang-dev\r\n> https://codereview.appspot.com/10057044\r\n>\r\n>\r\n> https://codereview.appspot.com/10057044/\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-11 13:58:38.089890",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 10057044: cmd/gc: move genembedtramp into portable code",
	"created": "2013-06-11 05:16:20.013530",
	"patchsets": [
		1,
		2001,
		5001,
		7001,
		11001
	],
	"modified": "2013-06-11 13:58:38.729630",
	"closed": true,
	"issue": 10057044
}