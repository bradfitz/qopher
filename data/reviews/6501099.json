{
	"description": "runtime: arm: abort if VFPv3 support missing\n\nFixes issue 3456.\n\nThis proposal is a reformulation of CL 5987063. This CL resets\nthe default GOARM value to 6 and allows the use of the VFPv3\noptimisation if GOARM=7. Binaries built with this CL in place\nwill abort if GOARM=7 was used and the target host does not\nsupport VFPv3.",
	"cc": [
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"ajstarks@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"ajstarks@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2012-09-11 23:08:25.203890",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"ajstarks@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-17 21:13:17.131040",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"ajstarks@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=bfad57cc7171 ***\n\nruntime: arm: abort if VFPv3 support missing\n\nFixes issue 3456.\n\nThis proposal is a reformulation of CL 5987063. This CL resets\nthe default GOARM value to 6 and allows the use of the VFPv3\noptimisation if GOARM=7. Binaries built with this CL in place\nwill abort if GOARM=7 was used and the target host does not\nsupport VFPv3.\n\nR=minux.ma, rsc, ajstarks\nCC=golang-dev\nhttp://codereview.appspot.com/6501099",
			"disapproval": false,
			"date": "2012-09-17 23:55:16.547810",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"ajstarks@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you very much for your comments. PTAL.\n\nhttp://codereview.appspot.com/6501099/diff/7/src/cmd/5l/asm.c\nFile src/cmd/5l/asm.c (right):\n\nhttp://codereview.appspot.com/6501099/diff/7/src/cmd/5l/asm.c#newcode2228\nsrc/cmd/5l/asm.c:2228: // instruction which only exists on VFPv3. We use GOARM=7 to gate it.\nOn 2012/09/16 08:04:18, minux wrote:\n> do we need to mention the non-negative return value here?\n> i think it suffices to say we use GOARM=7 to gate vmov (imm).\n\nDone.\n\nhttp://codereview.appspot.com/6501099/diff/7/src/cmd/5l/l.h\nFile src/cmd/5l/l.h (right):\n\nhttp://codereview.appspot.com/6501099/diff/7/src/cmd/5l/l.h#newcode319\nsrc/cmd/5l/l.h:319: EXTERN\tint\tgoarm; // default to 6\nOn 2012/09/16 08:04:18, minux wrote:\n> i suggest we don't add this comment, then we don't\n> need to keep this in sync with the initialization code.\n\nDone.\n\nhttp://codereview.appspot.com/6501099/diff/7/src/pkg/runtime/signal_linux_arm.c\nFile src/pkg/runtime/signal_linux_arm.c (right):\n\nhttp://codereview.appspot.com/6501099/diff/7/src/pkg/runtime/signal_linux_arm.c#newcode150\nsrc/pkg/runtime/signal_linux_arm.c:150: #define HWCAP_VFP\t(1 << 6)\nOn 2012/09/16 08:04:18, minux wrote:\n> while we're at it, please add // introduced in at least 2.6.11\n> \n> ref: http://lxr.linux.no/linux+v2.6.11/include/asm-arm/procinfo.h\n\nDone.\n\nhttp://codereview.appspot.com/6501099/diff/7/src/pkg/runtime/signal_linux_arm.c#newcode151\nsrc/pkg/runtime/signal_linux_arm.c:151: #define HWCAP_VFPv3\t(1 << 13)\nOn 2012/09/16 08:04:18, minux wrote:\n> // introduced in 2.6.30\n> \n> note for reviewers:\n> this is ok, because you can't use VFPv3 without kernel's support.\n> \n> ref: http://lxr.linux.no/linux+v2.6.30/arch/arm/include/asm/hwcap.h#L20\n\nDone.",
			"disapproval": false,
			"date": "2012-09-16 15:05:50.396300",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"ajstarks@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, rsc@golang.org, ajstarks@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-16 15:05:59.884640",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"ajstarks@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, rsc@golang.org, ajstarks@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-07 11:01:02.486810",
			"approval": false
		},
		{
			"sender": "ajstarks@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Tested with the raspberry pi: (Raspbian distro, hardware float)\r\n\r\npi@pi ~/go/src/pkg/runtime $ uname -a\r\nLinux pi 3.2.27+ #102 PREEMPT Sat Sep 1 01:00:50 BST 2012 armv6l GNU/Linux\r\npi@pi ~/go/src/pkg/runtime $ go test -c && ./runtime.test\r\nPASS\r\npi@pi ~/go/src/pkg/runtime $ GOARM=5 go test -c && ./runtime.test\r\nPASS\r\npi@pi ~/go/src/pkg/runtime $ GOARM=7 go test -c && ./runtime.test\r\nruntime: this CPU has no VFPv3 floating point hardware, so it cannot run\r\nthis GOARM=7 binary. Recompile using GOARM=6.\r\n\r\n\r\n\r\n\r\nOn Sep 7, 2012, at 7:01 AM, dave@cheney.net wrote:\r\n\r\n> Reviewers: minux, rsc, ajstarks,\r\n> \r\n> Message:\r\n> Hello minux.ma@gmail.com, rsc@golang.org, ajstarks@gmail.com (cc:\r\n> golang-dev@googlegroups.com),\r\n> \r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n> \r\n> \r\n> Description:\r\n> runtime: arm: abort if VFPv3 support missing\r\n> \r\n> Fixes issue 3456.\r\n> \r\n> This proposal is a reformulation of CL 5987063. This CL resets\r\n> the default GOARM value to 6 and allows the use of the VFPv3\r\n> optimisation if GOARM=7. Binaries built with this CL in place\r\n> will abort if GOARM=7 was used and the target host does not\r\n> support VFPv3.\r\n> \r\n> Please review this at http://codereview.appspot.com/6501099/\r\n> \r\n> Affected files:\r\n>  M src/cmd/5l/asm.c\r\n>  M src/cmd/5l/l.h\r\n>  M src/cmd/5l/obj.c\r\n>  M src/pkg/runtime/signal_linux_arm.c\r\n> \r\n> \r\n> Index: src/cmd/5l/asm.c\r\n> ===================================================================\r\n> --- a/src/cmd/5l/asm.c\r\n> +++ b/src/cmd/5l/asm.c\r\n> @@ -2211,7 +2211,9 @@\r\n> int\r\n> chipzero(Ieee *e)\r\n> {\r\n> -\tif(e->l != 0 || e->h != 0)\r\n> +\t// if this procedure returns 0, then 5l will use the \"vmov (imm)\"\r\n> +\t// instruction which only exists on VFPv3. We use GOARM=7 to gate it.\r\n> +\tif(goarm < 7 || e->l != 0 || e->h != 0)\r\n> \t\treturn -1;\r\n> \treturn 0;\r\n> }\r\n> @@ -2222,6 +2224,11 @@\r\n> \tint n;\r\n> \tulong h;\r\n> \r\n> +\t// if this procedure returns non-negative number 5l will use the \"vmov (imm)\"\r\n> +\t// instruction which only exists on VFPv3. We use GOARM=7 to gate it.\r\n> +\tif(goarm < 7)\r\n> +\t\tgoto no;\r\n> +\r\n> \tif(e->l != 0 || (e->h&0xffff) != 0)\r\n> \t\tgoto no;\r\n> \th = e->h & 0x7fc00000;\r\n> Index: src/cmd/5l/l.h\r\n> ===================================================================\r\n> --- a/src/cmd/5l/l.h\r\n> +++ b/src/cmd/5l/l.h\r\n> @@ -316,6 +316,8 @@\r\n> EXTERN\tProg*\tblitrl;\r\n> EXTERN\tProg*\telitrl;\r\n> \r\n> +EXTERN\tint\tgoarm; // default to 6\r\n> +\r\n> void\tinitdiv(void);\r\n> EXTERN\tProg*\tprog_div;\r\n> EXTERN\tProg*\tprog_divu;\r\n> Index: src/cmd/5l/obj.c\r\n> ===================================================================\r\n> --- a/src/cmd/5l/obj.c\r\n> +++ b/src/cmd/5l/obj.c\r\n> @@ -93,7 +93,7 @@\r\n> \tif(p != nil)\r\n> \t\tgoarm = atoi(p);\r\n> \telse\r\n> -\t\tgoarm = 7;\r\n> +\t\tgoarm = 6;\r\n> \tif(goarm == 5)\r\n> \t\tdebug['F'] = 1;\r\n> \r\n> Index: src/pkg/runtime/signal_linux_arm.c\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/signal_linux_arm.c\r\n> +++ b/src/pkg/runtime/signal_linux_arm.c\r\n> @@ -148,6 +148,7 @@\r\n> #define AT_HWCAP\t16 // introduced in at least 2.6.11\r\n> #define AT_RANDOM\t25 // introduced in 2.6.29\r\n> #define HWCAP_VFP\t(1 << 6)\r\n> +#define HWCAP_VFPv3\t(1 << 13)\r\n> static uint32 runtime\u00b7randomNumber;\r\n> uint8  runtime\u00b7armArch = 6;\t// we default to ARMv6\r\n> uint32 runtime\u00b7hwcap;\t// set by setup_auxv\r\n> @@ -161,6 +162,11 @@\r\n> \t\truntime\u00b7printf(\"this GOARM=%d binary. Recompile using GOARM=5.\\n\", runtime\u00b7goarm);\r\n> \t\truntime\u00b7exit(1);\r\n> \t}\r\n> +\tif(runtime\u00b7goarm > 6 && !(runtime\u00b7hwcap & HWCAP_VFPv3)) {\r\n> +\t\truntime\u00b7printf(\"runtime: this CPU has no VFPv3 floating point hardware, so it cannot run\\n\");\r\n> +\t\truntime\u00b7printf(\"this GOARM=%d binary. Recompile using GOARM=6.\\n\", runtime\u00b7goarm);\r\n> +\t\truntime\u00b7exit(1);\r\n> +\t}\r\n> }\r\n> \r\n> #pragma textflag 7\r\n> \r\n> \r\n\r\n",
			"disapproval": false,
			"date": "2012-09-08 06:15:43.022590",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"ajstarks@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM with some minor comment suggestions.\n\nsorry for the late review.\n\nhttp://codereview.appspot.com/6501099/diff/7/src/cmd/5l/asm.c\nFile src/cmd/5l/asm.c (right):\n\nhttp://codereview.appspot.com/6501099/diff/7/src/cmd/5l/asm.c#newcode2228\nsrc/cmd/5l/asm.c:2228: // instruction which only exists on VFPv3. We use GOARM=7 to gate it.\ndo we need to mention the non-negative return value here?\ni think it suffices to say we use GOARM=7 to gate vmov (imm).\n\nhttp://codereview.appspot.com/6501099/diff/7/src/cmd/5l/l.h\nFile src/cmd/5l/l.h (right):\n\nhttp://codereview.appspot.com/6501099/diff/7/src/cmd/5l/l.h#newcode319\nsrc/cmd/5l/l.h:319: EXTERN\tint\tgoarm; // default to 6\ni suggest we don't add this comment, then we don't\nneed to keep this in sync with the initialization code.\n\nhttp://codereview.appspot.com/6501099/diff/7/src/pkg/runtime/signal_linux_arm.c\nFile src/pkg/runtime/signal_linux_arm.c (right):\n\nhttp://codereview.appspot.com/6501099/diff/7/src/pkg/runtime/signal_linux_arm.c#newcode150\nsrc/pkg/runtime/signal_linux_arm.c:150: #define HWCAP_VFP\t(1 << 6)\nwhile we're at it, please add // introduced in at least 2.6.11\n\nref: http://lxr.linux.no/linux+v2.6.11/include/asm-arm/procinfo.h\n\nhttp://codereview.appspot.com/6501099/diff/7/src/pkg/runtime/signal_linux_arm.c#newcode151\nsrc/pkg/runtime/signal_linux_arm.c:151: #define HWCAP_VFPv3\t(1 << 13)\n// introduced in 2.6.30\n\nnote for reviewers:\nthis is ok, because you can't use VFPv3 without kernel's support.\n\nref: http://lxr.linux.no/linux+v2.6.30/arch/arm/include/asm/hwcap.h#L20",
			"disapproval": false,
			"date": "2012-09-16 08:04:18.686020",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"ajstarks@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, please wait for rsc.",
			"disapproval": false,
			"date": "2012-09-16 17:05:37.383870",
			"approval": true
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6501099: runtime: arm: abort if VFPv3 support missing",
	"created": "2012-09-07 04:50:31.309040",
	"patchsets": [
		1,
		2001,
		1005,
		6001,
		5005,
		7,
		1008,
		4005,
		14001
	],
	"modified": "2012-09-17 23:55:18.900760",
	"closed": true,
	"issue": 6501099
}