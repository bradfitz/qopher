{
	"description": "cmd/dist: make 'make' quieter for developers",
	"cc": [
		"golang-dev@googlegroups.com",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-08 19:57:52.423545",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Wed, Feb 8, 2012 at 11:57 AM,  <rsc@golang.org> wrote:\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> cmd/dist: make 'make' quieter for developers\n>\n> Please review this at http://codereview.appspot.com/5646055/\n>\n> Affected files:\n> \u00a0M src/Make.dist\n> \u00a0M src/cmd/dist/build.c\n> \u00a0M src/cmd/dist/unix.c\n>\n>\n> Index: src/Make.dist\n> ===================================================================\n> --- a/src/Make.dist\n> +++ b/src/Make.dist\n> @@ -3,12 +3,16 @@\n> \u00a0# license that can be found in the LICENSE file.\n>\n> \u00a0# Run go tool dist to install a command.\n> +# The -v causes dist to print the name of each directory as it runs.\n> \u00a0# The -vv causes dist to print each build command as it runs.\n> \u00a0# go tool dist clean cleans all directories, not just this one,\n> \u00a0# but it's as close as we can get.\n>\n> \u00a0# Default target (first).\n> \u00a0install:\n> + \u00a0 \u00a0 \u00a0 go tool dist install -v\n> +\n> +verbose:\n> \u00a0 \u00a0 \u00a0 \u00a0go tool dist install -vv\n>\n> \u00a0clean:\n> Index: src/cmd/dist/build.c\n> ===================================================================\n> --- a/src/cmd/dist/build.c\n> +++ b/src/cmd/dist/build.c\n> @@ -501,6 +501,9 @@\n> \u00a0 \u00a0 \u00a0 \u00a0Time ttarg, t;\n> \u00a0 \u00a0 \u00a0 \u00a0int i, j, k, n, doclean;\n>\n> + \u00a0 \u00a0 \u00a0 if(vflag)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 xprintf(\"%s\\n\", dir);\n> +\n> \u00a0 \u00a0 \u00a0 \u00a0binit(&b);\n> \u00a0 \u00a0 \u00a0 \u00a0binit(&b1);\n> \u00a0 \u00a0 \u00a0 \u00a0binit(&path);\n> @@ -1242,7 +1245,6 @@\n> \u00a0{\n> \u00a0 \u00a0 \u00a0 \u00a0int i;\n> \u00a0 \u00a0 \u00a0 \u00a0Buf b;\n> - \u00a0 \u00a0 \u00a0 char *p;\n>\n> \u00a0 \u00a0 \u00a0 \u00a0ARGBEGIN{\n> \u00a0 \u00a0 \u00a0 \u00a0case 'v':\n> @@ -1259,12 +1261,8 @@\n> \u00a0 \u00a0 \u00a0 \u00a0setup();\n>\n> \u00a0 \u00a0 \u00a0 \u00a0binit(&b);\n> - \u00a0 \u00a0 \u00a0 for(i=0; i<nelem(buildorder); i++) {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p = bprintf(&b, buildorder[i], gochar);\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if(vflag > 0)\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 xprintf(\"%s\\n\", p);\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 install(p);\n> - \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 for(i=0; i<nelem(buildorder); i++)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 install(bprintf(&b, buildorder[i], gochar));\n> \u00a0 \u00a0 \u00a0 \u00a0bfree(&b);\n> \u00a0}\n>\n> Index: src/cmd/dist/unix.c\n> ===================================================================\n> --- a/src/cmd/dist/unix.c\n> +++ b/src/cmd/dist/unix.c\n> @@ -386,7 +386,7 @@\n> \u00a0void\n> \u00a0xremove(char *p)\n> \u00a0{\n> - \u00a0 \u00a0 \u00a0 if(vflag > 1)\n> + \u00a0 \u00a0 \u00a0 if(vflag > 2)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0xprintf(\"rm %s\\n\", p);\n> \u00a0 \u00a0 \u00a0 \u00a0unlink(p);\n> \u00a0}\n> @@ -408,11 +408,11 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0bprintf(&b, \"%s/%s\", p, dir.p[i]);\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0xremoveall(bstr(&b));\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if(vflag > 1)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if(vflag > 2)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0xprintf(\"rm %s\\n\", p);\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0rmdir(p);\n> \u00a0 \u00a0 \u00a0 \u00a0} else {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if(vflag > 1)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if(vflag > 2)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0xprintf(\"rm %s\\n\", p);\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0unlink(p);\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-08 20:01:23.128607",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=640ad369a382 ***\n\ncmd/dist: make 'make' quieter for developers\n\nR=golang-dev, gri\nCC=golang-dev\nhttp://codereview.appspot.com/5646055",
			"disapproval": false,
			"date": "2012-02-08 20:26:50.352597",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5646055: cmd/dist: make 'make' quieter for developers",
	"created": "2012-02-08 19:36:23.124358",
	"patchsets": [
		1,
		2001,
		1002,
		6001
	],
	"modified": "2012-02-08 20:26:51.157898",
	"closed": true,
	"issue": 5646055
}