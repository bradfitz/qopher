{
	"description": "exp/html: adjust inCellIM to match spec\n\nClean up flow of control.\n\nIgnore </table>, </tbody>, </tfoot>, </thead>, </tr> if there is not\nan appropriate element in table scope.\n\nPass 3 more tests.",
	"cc": [
		"golang-dev@googlegroups.com",
		"nigeltao@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, nigeltao@golang.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-21 17:46:26.953956",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, and submitting, but I'm curious about the unconditional popUntil.\n\nhttp://codereview.appspot.com/6206093/diff/5001/src/pkg/exp/html/parse.go\nFile src/pkg/exp/html/parse.go (right):\n\nhttp://codereview.appspot.com/6206093/diff/5001/src/pkg/exp/html/parse.go#newcode1492\nsrc/pkg/exp/html/parse.go:1492: p.popUntil(tableScope, \"td\", \"th\")\nShould this be\nif p.popUntil(etc) {\n  // etc\n}\n// Ignore the token.\nreturn true",
			"disapproval": false,
			"date": "2012-05-22 00:30:18.983458",
			"approval": true
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6206093/diff/5001/src/pkg/exp/html/parse.go\nFile src/pkg/exp/html/parse.go (right):\n\nhttp://codereview.appspot.com/6206093/diff/5001/src/pkg/exp/html/parse.go#newcode1492\nsrc/pkg/exp/html/parse.go:1492: p.popUntil(tableScope, \"td\", \"th\")\nThe spec says:\n\nThe stack of open elements cannot have both a td and a th element in table scope at the same time, nor can it have neither when the close the cell algorithm is invoked.\n\nIf this is true, popUntil will always return true here.",
			"disapproval": false,
			"date": "2012-05-22 03:15:30.741423",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3ce27769ca65 ***\n\nexp/html: adjust inCellIM to match spec\n\nClean up flow of control.\n\nIgnore </table>, </tbody>, </tfoot>, </thead>, </tr> if there is not\nan appropriate element in table scope.\n\nPass 3 more tests.\n\nR=golang-dev, nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/6206093\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2012-05-22 00:31:31.022581",
			"approval": false
		}
	],
	"owner_email": "andybalholm@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "andybalholm",
	"subject": "code review 6206093: exp/html: adjust inCellIM to match spec",
	"created": "2012-05-21 17:45:39.413550",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2012-05-22 03:33:07.371213",
	"closed": true,
	"issue": 6206093
}