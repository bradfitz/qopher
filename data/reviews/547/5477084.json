{
	"description": "strconv: some allocation tests",
	"cc": [
		"rsc@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5477084/diff/4001/src/pkg/strconv/itoa_test.go\nFile src/pkg/strconv/itoa_test.go (right):\n\nhttp://codereview.appspot.com/5477084/diff/4001/src/pkg/strconv/itoa_test.go#newcode144\nsrc/pkg/strconv/itoa_test.go:144: want := 1 // TODO(bradfitz): this should be 0, once escape analysis is better\n// This could go to 0 with more aggressive escape analysis.\n\nIt is unclear whether it should.\n\nhttp://codereview.appspot.com/5477084/diff/4001/src/pkg/strconv/itoa_test.go#newcode152\nsrc/pkg/strconv/itoa_test.go:152: t.Errorf(\"with global buffer, did %d allocations, want 0\", n)\ns/global/reused/",
			"disapproval": false,
			"date": "2011-12-13 22:17:23.357283",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-12-13 22:46:33.751303",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5477084/diff/4001/src/pkg/strconv/itoa_test.go\nFile src/pkg/strconv/itoa_test.go (right):\n\nhttp://codereview.appspot.com/5477084/diff/4001/src/pkg/strconv/itoa_test.go#newcode144\nsrc/pkg/strconv/itoa_test.go:144: want := 1 // TODO(bradfitz): this should be 0, once escape analysis is better\ns/could/might/ in rewrite",
			"disapproval": false,
			"date": "2011-12-13 22:21:51.546964",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4e1666acb8f3 ***\n\nstrconv: some allocation tests\n\nR=rsc, r\nCC=golang-dev\nhttp://codereview.appspot.com/5477084",
			"disapproval": false,
			"date": "2011-12-13 22:49:30.140260",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Dec 13, 2011 at 2:22 PM, <r@golang.org> wrote:\n\n> while you're here, do this to ftoa as well. it's the problem case.\n>\n\nsure, but it's not actually.  I benchmarked stuff earlier today,\n\nbase (tip):\njson.BenchmarkCodeEncoder      10 157603000 ns/op  12.31 MB/s\njson.BenchmarkCodeMarshal      10 162457000 ns/op  11.94 MB/s\n\nboth int & float appending (worse)\njson.BenchmarkCodeEncoder      10 160052000 ns/op  12.12 MB/s\njson.BenchmarkCodeMarshal      10 165107300 ns/op  11.75 MB/s\njson.BenchmarkCodeEncoder      10 160771800 ns/op  12.07 MB/s\njson.BenchmarkCodeMarshal      10 167691300 ns/op  11.57 MB/s\njson.BenchmarkCodeEncoder      10 159810600 ns/op  12.14 MB/s\njson.BenchmarkCodeMarshal      10 165264000 ns/op  11.74 MB/s\n\nonly int appending, not float (much worse)\njson.BenchmarkCodeEncoder      10 193743300 ns/op  10.02 MB/s\njson.BenchmarkCodeMarshal      10 199017000 ns/op   9.75 MB/s\njson.BenchmarkCodeEncoder      10 192821900 ns/op  10.06 MB/s\njson.BenchmarkCodeMarshal      10 198689300 ns/op   9.77 MB/s\n\nonly float appending, not int (better)\njson.BenchmarkCodeEncoder      10 142498500 ns/op  13.62 MB/s\njson.BenchmarkCodeMarshal      10 148199700 ns/op  13.09 MB/s\njson.BenchmarkCodeEncoder      10 141918100 ns/op  13.67 MB/s\njson.BenchmarkCodeMarshal      10 149464400 ns/op  12.98 MB/s\njson.BenchmarkCodeEncoder      10 142543300 ns/op  13.61 MB/s\njson.BenchmarkCodeMarshal      10 148394600 ns/op  13.08 MB/s\n",
			"disapproval": false,
			"date": "2011-12-13 22:24:17.929710",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-13 22:15:32.139586",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "while you're here, do this to ftoa as well. it's the problem case.",
			"disapproval": false,
			"date": "2011-12-13 22:22:21.475733",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-13 22:28:43.002869",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5477084: strconv: some allocation tests",
	"created": "2011-12-13 22:15:13.185143",
	"patchsets": [
		1,
		2001,
		4001,
		7001,
		1002
	],
	"modified": "2011-12-13 22:49:32.302848",
	"closed": true,
	"issue": 5477084
}