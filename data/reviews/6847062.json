{
	"description": "go.talks: add 2012/waza\nConcurrency is not Parallelism talk from Waza 2012.",
	"cc": [
		"golang-dev@googlegroups.com",
		"campoy@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"campoy@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "My two cents.\n\nIs this hosted somewhere already?\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide\nFile 2012/waza.slide (right):\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide#newcode1\n2012/waza.slide:1: # This is a file.\nYes, it is ... but do we need this?\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide#newcode56\n2012/waza.slide:56: One is about structure, one is about execution.\nI would say which is which (just in case)\n\nConcurrency is about structure, parallelism is about execution.\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide#newcode179\n2012/waza.slide:179: Two gopher procedures, plus a staging pile\nEnd with '.'\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide#newcode185\n2012/waza.slide:185: Run more concurrent procedures to get more throughput\nEnd with '.'\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide#newcode215\n2012/waza.slide:215: - cart => marshaling, rendering, or networking\ns/marshaling/marshalling/, maybe?\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide#newcode233\n2012/waza.slide:233: Like launching a function with shell's & notation.\n`&` should make this clearer\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide#newcode251\n2012/waza.slide:251: The select statement is like a switch, but the decision is based on ability to communicate rather than equal values.\n`select` and `switch`\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide#newcode271\n2012/waza.slide:271: Here's a non-concurrent example\nEnd with '.'\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide#newcode283\n2012/waza.slide:283: This copies items from the input channel to the output channel\nEnd with '.'\n\nhttps://codereview.appspot.com/6847062/diff/1/2012/waza.slide#newcode283\n2012/waza.slide:283: This copies items from the input channel to the output channel\nEnd with '.'",
			"disapproval": false,
			"date": "2012-11-17 00:00:54.662140",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"campoy@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6847062/diff/1018/2012/waza.slide\nFile 2012/waza.slide (right):\n\nhttps://codereview.appspot.com/6847062/diff/1018/2012/waza.slide#newcode175\n2012/waza.slide:175: .image waza/gophercomplex2.jpg\nI was surprised this image is the same than the previous slide. I would have expected only one gopher here.",
			"disapproval": false,
			"date": "2012-11-17 00:33:26.456810",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.talks",
			"disapproval": false,
			"date": "2012-11-16 20:35:35.157540",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"campoy@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, campoy@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-17 00:18:30.885810",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "gophers are procedures not cores.\r\n",
			"disapproval": false,
			"date": "2012-11-17 00:55:41.921320",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"campoy@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=232d341de375&repo=talks ***\n\ngo.talks: add 2012/waza\nConcurrency is not Parallelism talk from Waza 2012.\n\nR=golang-dev, campoy\nCC=golang-dev\nhttp://codereview.appspot.com/6847062",
			"disapproval": false,
			"date": "2012-11-17 00:56:30.542570",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6847062: go.talks: add 2012/waza",
	"created": "2012-11-16 20:35:18.859470",
	"patchsets": [
		1,
		1018,
		11020
	],
	"modified": "2012-11-17 00:56:31.630290",
	"closed": true,
	"issue": 6847062
}