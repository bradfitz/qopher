{
	"description": "godoc: specify HTML page metadata with a JSON blob\n\nThis allows HTML pages to specify arbitrary data in a header:\n\n<!--{\n        \"Title\": \"The page title\",\n        ...\n}-->\n\nreplacing the old style comments:\n\n<!-- title The page title -->",
	"cc": [
		"gri@golang.org",
		"rsc@golang.org",
		"r@google.com",
		"bradfitz@golang.org",
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "<!--{ ... JSON }-->\n\n?\n\n\nOn Wed, Jan 18, 2012 at 2:46 PM, Andrew Gerrand <adg@golang.org> wrote:\n\n> Russ has suggested another approach: put a JSON blob at the top,\n> instead of a list of comments that we'll need to parse.\n>\n> For example, the heading in go_spec.html would change from\n>\n> <!-- title The Go Programming Language Specification -->\n> <!-- subtitle Version of January 13, 2012 -->\n>\n> to this\n>\n> {\n>    \"title\": \"The Go Programming Language Specification\",\n>    \"subtitle\": \"Version of January 13, 2012\",\n> }\n>\n> This makes it easier to add structured metadata to these files.\n>\n> The one disadvantage is that if you open the plain .html file with a\n> web browser (bypassing godoc) you get a JSON blob at the top. 99% of\n> the time people view these through godoc, so that doesn't seem like a\n> big deal.\n>\n> Thoughts? Objections?\n>\n> Andrew\n>\n",
			"disapproval": false,
			"date": "2012-01-18 22:52:08.437858",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Put the JSON inside an HTML comment?\n",
			"disapproval": false,
			"date": "2012-01-18 22:52:30.755682",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"gri@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org, rsc@golang.org, r@google.com, bradfitz@golang.org, dsymonds@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-18 23:21:23.381500",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 19 January 2012 09:31, Russ Cox <rsc@golang.org> wrote:\n> why are we going to add more <!-- keywords -->?\n\neg,\n\n<!-- path /learn/articles/defer-panic-recover -->\n<!-- tags defer, panic, recover -->\n",
			"disapproval": false,
			"date": "2012-01-18 22:33:44.890411",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "use JSON\n\n",
			"disapproval": false,
			"date": "2012-01-18 22:49:28.940964",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adg@golang.org",
				"gri@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5532093/diff/5026/src/cmd/godoc/godoc.go\nFile src/cmd/godoc/godoc.go (right):\n\nhttp://codereview.appspot.com/5532093/diff/5026/src/cmd/godoc/godoc.go#newcode724\nsrc/cmd/godoc/godoc.go:724: if end := bytes.Index(src, jsonEnd); end > -1 && bytes.HasPrefix(src, jsonStart) {\nlook for prefix first?\n\nhttp://codereview.appspot.com/5532093/diff/5026/src/cmd/godoc/godoc.go#newcode725\nsrc/cmd/godoc/godoc.go:725: b := src[4 : end+1] // drop leading <!-- and include trailing }\ns/4/len(jsonStart)-1/",
			"disapproval": false,
			"date": "2012-01-18 23:29:41.897851",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"gri@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "rsc: done\n\nhttp://codereview.appspot.com/5532093/diff/5026/src/cmd/godoc/godoc.go\nFile src/cmd/godoc/godoc.go (right):\n\nhttp://codereview.appspot.com/5532093/diff/5026/src/cmd/godoc/godoc.go#newcode724\nsrc/cmd/godoc/godoc.go:724: if end := bytes.Index(src, jsonEnd); end > -1 && bytes.HasPrefix(src, jsonStart) {\nOn 2012/01/18 23:29:42, gri wrote:\n> look for prefix first?\n\nDone.\n\nhttp://codereview.appspot.com/5532093/diff/5026/src/cmd/godoc/godoc.go#newcode725\nsrc/cmd/godoc/godoc.go:725: b := src[4 : end+1] // drop leading <!-- and include trailing }\nOn 2012/01/18 23:29:42, gri wrote:\n> s/4/len(jsonStart)-1/\n\nDone.",
			"disapproval": false,
			"date": "2012-01-18 23:38:55.846460",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"gri@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 0b98ba2443b0 ***\n\ngodoc: specify HTML page metadata with a JSON blob\n\nThis allows HTML pages to specify arbitrary data in a header:\n\n<!--{\n        \"Title\": \"The page title\",\n        ...\n}-->\n\nreplacing the old style comments:\n\n<!-- title The page title -->\n\nR=gri, rsc, r, bradfitz, dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/5532093",
			"disapproval": false,
			"date": "2012-01-19 00:25:04.054383",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "why are we going to add more <!-- keywords -->?\n",
			"disapproval": false,
			"date": "2012-01-18 22:31:53.715694",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This will help as we add new <!-- keywords -->.\n",
			"disapproval": false,
			"date": "2012-01-18 22:31:26.571221",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adg@golang.org",
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhope those Rx's are correct :-)",
			"disapproval": false,
			"date": "2012-01-18 22:34:20.974678",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-01-18 22:30:13.919259",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Russ has suggested another approach: put a JSON blob at the top,\ninstead of a list of comments that we'll need to parse.\n\nFor example, the heading in go_spec.html would change from\n\n<!-- title The Go Programming Language Specification -->\n<!-- subtitle Version of January 13, 2012 -->\n\nto this\n\n{\n    \"title\": \"The Go Programming Language Specification\",\n    \"subtitle\": \"Version of January 13, 2012\",\n}\n\nThis makes it easier to add structured metadata to these files.\n\nThe one disadvantage is that if you open the plain .html file with a\nweb browser (bypassing godoc) you get a JSON blob at the top. 99% of\nthe time people view these through godoc, so that doesn't seem like a\nbig deal.\n\nThoughts? Objections?\n\nAndrew\n",
			"disapproval": false,
			"date": "2012-01-18 22:47:06.728032",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You need to say \"Title\": in the various doc files, not \"title\".\n(I looked at the data structure to double-check that you\ndidn't have an override on the field.  Please leave it\nthat way: a 1:1 mapping is simpler to remember.)\n",
			"disapproval": false,
			"date": "2012-01-18 23:30:55.397973",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5532093: godoc: specify HTML page metadata with a JSON blob",
	"created": "2012-01-18 22:28:34.166855",
	"patchsets": [
		1,
		2001,
		4001,
		1002,
		5026,
		5027,
		2031
	],
	"modified": "2012-01-19 00:25:06.566327",
	"closed": true,
	"issue": 5532093
}