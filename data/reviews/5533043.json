{
	"description": "gc: do not try to add a key with incorrect type to a hash\n\nFixes issue 2623.",
	"cc": [
		"rsc@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jra@nella.org",
			"recipients": [
				"jra@nella.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-07 23:41:27.462210",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please add a new test, or modify an existing test.\n\nOn Sat, Jan 7, 2012 at 3:41 PM, <jra@nella.org> wrote:\n\n> Reviewers: rsc,\n>\n> Message:\n> Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> gc: do not try to add a key with incorrect type to a hash\n>\n> Fixes issue 2623.\n>\n> Please review this at http://codereview.appspot.com/**5533043/<http://codereview.appspot.com/5533043/>\n>\n> Affected files:\n>  M src/cmd/gc/typecheck.c\n>\n>\n> Index: src/cmd/gc/typecheck.c\n> ==============================**==============================**=======\n> --- a/src/cmd/gc/typecheck.c\n> +++ b/src/cmd/gc/typecheck.c\n> @@ -2130,7 +2130,10 @@\n>                        typecheck(&l->left, Erv);\n>                        defaultlit(&l->left, t->down);\n>                        l->left = assignconv(l->left, t->down, \"map key\");\n> -                       keydup(l->left, hash, nhash);\n> +                       /* issue 2623: do not try to use the key if\n> assignconv decided it was a bad type */\n> +                       if (l->left->op != OCONV) {\n> +                               keydup(l->left, hash, nhash);\n> +                       }\n>\n>                        r = l->right;\n>                        pushtype(r, t->type);\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-08 01:58:29.257419",
			"approval": false
		},
		{
			"sender": "jra@nella.org",
			"recipients": [
				"jra@nella.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-11 13:14:00.046488",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jra@nella.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5533043/diff/5001/src/cmd/gc/typecheck.c\nFile src/cmd/gc/typecheck.c (right):\n\nhttp://codereview.appspot.com/5533043/diff/5001/src/cmd/gc/typecheck.c#newcode2133\nsrc/cmd/gc/typecheck.c:2133: /* issue 2623: do not try to use the key if assignconv decided it was a bad type */\nCan drop comment.  Just\n\nif(l->left->op != OCONV)\n    keydup(l->left, hash, nhash);\n\nThanks.\n\nhttp://codereview.appspot.com/5533043/diff/5001/test/fixedbugs/bug392.go\nFile test/fixedbugs/bug392.go (right):\n\nhttp://codereview.appspot.com/5533043/diff/5001/test/fixedbugs/bug392.go#newcode1\ntest/fixedbugs/bug392.go:1: // $G $D/$F.go || echo \"Issue2623\"\nPlease use errchk instead.  Then golden.out need not be changed.\n\n// errchk $G -e $D/$F.go\n\ncopyright notice\n\npackage main\n\nvar m = map[string]int{\n    \"abc\": 1,\n    1: 2,  // ERROR \"cannot use 1.*as type string\"\n}",
			"disapproval": false,
			"date": "2012-01-17 00:23:07.283056",
			"approval": false
		},
		{
			"sender": "jra@nella.org",
			"recipients": [
				"jra@nella.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-17 14:35:48.392417",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nWill rename bug396.go to bug397.go and submit.\n",
			"disapproval": false,
			"date": "2012-01-19 20:53:41.872054",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jra@nella.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=0a330311e1d3 ***\n\ngc: do not try to add a key with incorrect type to a hash\n\nFixes issue 2623.\n\nR=rsc, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5533043\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-01-20 18:34:41.317424",
			"approval": false
		}
	],
	"owner_email": "jra@nella.org",
	"private": false,
	"base_url": "",
	"owner": "jra",
	"subject": "code review 5533043: gc: do not try to add a key with incorrect type to a hash",
	"created": "2012-01-07 23:41:10.524277",
	"patchsets": [
		1,
		2001,
		3003,
		3,
		5001,
		10001,
		2003
	],
	"modified": "2012-01-27 00:16:21.549236",
	"closed": true,
	"issue": 5533043
}