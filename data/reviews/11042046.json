{
	"description": "undo CL 11161044 / ba455262a9db\n\nI want to think more carefully about this.\n\nWe put this in because Marshal encoded named []byte but Unmarshal rejected them.\nAnd we noticed that Marshal's behavior was undocumented so we documented it.\nBut I am starting to think the docs and Unmarshal were correct and Marshal's\nbehavior was the problem.\n\nRolling back to give us more time to think.\n\n\u00ab\u00ab\u00ab original CL description\njson: unmarshal types that are byte slices.\n\nThe json package cheerfully would marshal\n\n        type S struct {\n                IP net.IP\n        }\n\nbut would give an error when unmarshalling.  This change allows any\ntype whose concrete type is a byte slice to be unmarshalled from a\nstring.\n\nFixes issue 5086.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/11161044\n\nCommitter: Russ Cox <rsc@golang.org>\n\u00bb\u00bb\u00bb",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-12 21:39:52.607820",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "(The change being rolled back only went in yesterday, so this doesn't\r\naffect Go 1.1 compatibility.)\r\n",
			"disapproval": false,
			"date": "2013-07-12 21:40:39.207130",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-12 21:41:03.365040",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=93e8422d5a38 ***\n\nundo CL 11161044 / ba455262a9db\n\nI want to think more carefully about this.\n\nWe put this in because Marshal encoded named []byte but Unmarshal rejected them.\nAnd we noticed that Marshal's behavior was undocumented so we documented it.\nBut I am starting to think the docs and Unmarshal were correct and Marshal's\nbehavior was the problem.\n\nRolling back to give us more time to think.\n\n\u00ab\u00ab\u00ab original CL description\njson: unmarshal types that are byte slices.\n\nThe json package cheerfully would marshal\n\n        type S struct {\n                IP net.IP\n        }\n\nbut would give an error when unmarshalling.  This change allows any\ntype whose concrete type is a byte slice to be unmarshalled from a\nstring.\n\nFixes issue 5086.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/11161044\n\nCommitter: Russ Cox <rsc@golang.org>\n\u00bb\u00bb\u00bb\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/11042046",
			"disapproval": false,
			"date": "2013-07-12 21:42:06.105640",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 11042046: undo CL 11161044 / ba455262a9db",
	"created": "2013-07-12 21:37:37.567090",
	"patchsets": [
		1,
		3001,
		5
	],
	"modified": "2013-07-12 21:42:07.967350",
	"closed": true,
	"issue": 11042046
}