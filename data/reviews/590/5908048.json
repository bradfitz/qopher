{
	"description": "go.crypto/ssh: respect adjust window msg on server.",
	"cc": [
		"golang-dev@googlegroups.com",
		"agl@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I understand this may not be looked at soon with Go1, but I have time \nthis weekend...\n\nThis appears to me to partially solve a problem I've been having with \nthe ssh server package.  Reference unit test code here:\nhttps://gist.github.com/2188648\n\nAlthough this appears to expand how large of a continuous read the \nserver can sustain, it will still dead-lock on a larger message (again \nsee test code).\n\nThis is related to, but doesn't appear to fully fix issue 3204.\n\n-Daniel\n\n\nOn 03/24/2012 03:32 PM, kardianos@gmail.com wrote:\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: agl@golang.org,\n> golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> http://code.google.com/p/go.crypto\n>\n>\n> Description:\n> go.crypto/ssh: respect adjust window msg on server.\n>\n> Please review this at http://codereview.appspot.com/5908048/\n>\n> Affected files:\n> M ssh/channel.go\n> M ssh/server.go\n>\n>\n> Index: ssh/channel.go\n> ===================================================================\n> --- a/ssh/channel.go\n> +++ b/ssh/channel.go\n> @@ -149,6 +149,9 @@\n> case *channelEOFMsg:\n> c.theySentEOF = true\n> c.cond.Signal()\n> + case *windowAdjustMsg:\n> + c.theirWindow += packet.AdditionalBytes\n> + c.cond.Signal()\n> default:\n> panic(\"unknown packet type\")\n> }\n> Index: ssh/server.go\n> ===================================================================\n> --- a/ssh/server.go\n> +++ b/ssh/server.go\n> @@ -570,6 +570,16 @@\n> c.handlePacket(msg)\n> s.lock.Unlock()\n>\n> + case *windowAdjustMsg:\n> + s.lock.Lock()\n> + c, ok := s.channels[msg.PeersId]\n> + if !ok {\n> + s.lock.Unlock()\n> + continue\n> + }\n> + c.handlePacket(msg)\n> + s.lock.Unlock()\n> +\n> case *channelEOFMsg:\n> s.lock.Lock()\n> c, ok := s.channels[msg.PeersId]\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-24 22:38:44.798225",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=72ff0e1315af&repo=crypto ***\n\ngo.crypto/ssh: respect adjust window msg on server.\n\nR=golang-dev\nCC=agl, golang-dev\nhttp://codereview.appspot.com/5908048\n\nCommitter: Adam Langley <agl@golang.org>",
			"disapproval": false,
			"date": "2012-03-26 16:44:41.536239",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: agl@golang.org, golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttp://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-03-24 22:32:06.494987",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-03-31 21:43:57.305660",
			"approval": false
		}
	],
	"owner_email": "kardianos@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "kardia",
	"subject": "code review 5908048: go.crypto/ssh: respect adjust window msg on server.",
	"created": "2012-03-24 22:18:45.213507",
	"patchsets": [
		1,
		2001,
		2002
	],
	"modified": "2012-03-31 21:43:58.601845",
	"closed": true,
	"issue": 5908048
}