{
	"description": "gc: fieldnames in structliterals in exported inlines should not be qualified if they're embedded builtin types.\n\nTrust me.\nFixes issue 2687.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/17 09:24:24, lvd wrote:\n\nhm, i think i said 'not significantly simpler but done anyway' but rietveld ate my comments.  so all done and passing.",
			"disapproval": false,
			"date": "2012-01-17 09:28:01.967740",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5545047/diff/1002/src/cmd/gc/fmt.c\nFile src/cmd/gc/fmt.c (right):\n\nhttp://codereview.appspot.com/5545047/diff/1002/src/cmd/gc/fmt.c#newcode1152\nsrc/cmd/gc/fmt.c:1152: // another special case: if n->left is an embedded field of builtin type,\nI think this would be significantly simpler as\n\nif(embedded) {\n   t = fieldtype\n   if(t->sym == S)\n      t = t->type;\n   fmtprint(f, \"%T: %N\", t, l->n->right);\n} else \n   fmtprint(f, \"%hhS: %N\", l->n->left->sym, l->n->right);",
			"disapproval": false,
			"date": "2012-01-16 23:23:06.635010",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-14 13:16:34.248779",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-01-17 09:24:24.206246",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-17 19:37:52.370623",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-18 16:47:55.628211",
			"approval": true
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3c060add43fb ***\n\ngc: fieldnames in structliterals in exported inlines should not be qualified if they're embedded builtin types.\n\nTrust me.\nFixes issue 2687.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5545047",
			"disapproval": false,
			"date": "2012-01-18 16:51:33.288846",
			"approval": false
		}
	],
	"owner_email": "lvd@google.com",
	"private": false,
	"base_url": "",
	"owner": "lvd",
	"subject": "code review 5545047: gc: fieldnames in structliterals in exported inlines sh...",
	"created": "2012-01-13 12:32:54.153977",
	"patchsets": [
		1,
		2001,
		1002,
		3005,
		5003,
		6006,
		9001
	],
	"modified": "2012-01-18 16:57:37.018052",
	"closed": true,
	"issue": 5545047
}