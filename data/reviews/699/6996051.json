{
	"description": "cmd/6l, cmd/8l: add -Z flag to zero stack frame on entry\n\nReplacement for GOEXPERIMENT=zerostack, easier to use.\nDoes not require a separate toolchain.",
	"cc": [
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"bradfitz@golang.org",
		"minux.ma@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=948c7bbdd29d ***\n\ncmd/6l, cmd/8l: add -Z flag to zero stack frame on entry\n\nReplacement for GOEXPERIMENT=zerostack, easier to use.\nDoes not require a separate toolchain.\n\nR=ken2\nCC=golang-dev\nhttps://codereview.appspot.com/6996051",
			"disapproval": false,
			"date": "2012-12-22 16:20:21.573090",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Russ,\r\n    Do you want to document -Z in cmd/ld/doc.go as I think this is\r\ngenerally useful\r\nand issue 353 has a very low priority?\r\nAs I'm writing a CL to support -Z in 5l, I can add the required docs if you\r\nagree.\r\n",
			"disapproval": false,
			"date": "2012-12-23 17:12:57.949880",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-12-22 16:20:11.697580",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Nice.\r\n\r\nOn Sat, Dec 22, 2012 at 8:20 AM, <rsc@golang.org> wrote:\r\n\r\n> Reviewers: ken2,\r\n>\r\n> Message:\r\n> Hello ken2 (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> cmd/6l, cmd/8l: add -Z flag to zero stack frame on entry\r\n>\r\n> Replacement for GOEXPERIMENT=zerostack, easier to use.\r\n> Does not require a separate toolchain.\r\n>\r\n> Please review this at https://codereview.appspot.**com/6996051/<https://codereview.appspot.com/6996051/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/6l/pass.c\r\n>   M src/cmd/8l/pass.c\r\n>\r\n>\r\n> Index: src/cmd/6l/pass.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/6l/pass.c\r\n> +++ b/src/cmd/6l/pass.c\r\n> @@ -653,6 +653,34 @@\r\n>                         q1->pcond = p;\r\n>                 }\r\n>\r\n> +               if(debug['Z'] && autoffset && !(cursym->text->from.scale&*\r\n> *NOSPLIT)) {\r\n> +                       // 6l -Z means zero the stack frame on entry.\r\n> +                       // This slows down function calls but can help\r\n> avoid\r\n> +                       // false positives in garbage collection.\r\n> +                       p = appendp(p);\r\n> +                       p->as = AMOVQ;\r\n> +                       p->from.type = D_SP;\r\n> +                       p->to.type = D_DI;\r\n> +\r\n> +                       p = appendp(p);\r\n> +                       p->as = AMOVQ;\r\n> +                       p->from.type = D_CONST;\r\n> +                       p->from.offset = autoffset/8;\r\n> +                       p->to.type = D_CX;\r\n> +\r\n> +                       p = appendp(p);\r\n> +                       p->as = AMOVQ;\r\n> +                       p->from.type = D_CONST;\r\n> +                       p->from.offset = 0;\r\n> +                       p->to.type = D_AX;\r\n> +\r\n> +                       p = appendp(p);\r\n> +                       p->as = AREP;\r\n> +\r\n> +                       p = appendp(p);\r\n> +                       p->as = ASTOSQ;\r\n> +               }\r\n> +\r\n>                 for(; p != P; p = p->link) {\r\n>                         pcsize = p->mode/8;\r\n>                         a = p->from.type;\r\n> Index: src/cmd/8l/pass.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/8l/pass.c\r\n> +++ b/src/cmd/8l/pass.c\r\n> @@ -593,6 +593,34 @@\r\n>                 }\r\n>                 deltasp = autoffset;\r\n>\r\n> +               if(debug['Z'] && autoffset && !(cursym->text->from.scale&*\r\n> *NOSPLIT)) {\r\n> +                       // 8l -Z means zero the stack frame on entry.\r\n> +                       // This slows down function calls but can help\r\n> avoid\r\n> +                       // false positives in garbage collection.\r\n> +                       p = appendp(p);\r\n> +                       p->as = AMOVL;\r\n> +                       p->from.type = D_SP;\r\n> +                       p->to.type = D_DI;\r\n> +\r\n> +                       p = appendp(p);\r\n> +                       p->as = AMOVL;\r\n> +                       p->from.type = D_CONST;\r\n> +                       p->from.offset = autoffset/4;\r\n> +                       p->to.type = D_CX;\r\n> +\r\n> +                       p = appendp(p);\r\n> +                       p->as = AMOVL;\r\n> +                       p->from.type = D_CONST;\r\n> +                       p->from.offset = 0;\r\n> +                       p->to.type = D_AX;\r\n> +\r\n> +                       p = appendp(p);\r\n> +                       p->as = AREP;\r\n> +\r\n> +                       p = appendp(p);\r\n> +                       p->as = ASTOSL;\r\n> +               }\r\n> +\r\n>                 for(; p != P; p = p->link) {\r\n>                         a = p->from.type;\r\n>                         if(a == D_AUTO)\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-12-22 16:45:54.061830",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sure, we can add it to the docs. I am not sure how long it will stay but it\r\ndoes seem to be useful if you're running into the problem.\r\n",
			"disapproval": false,
			"date": "2012-12-23 19:07:57.267040",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6996051: cmd/6l, cmd/8l: add -Z flag to zero stack frame on entry",
	"created": "2012-12-22 16:17:21.786720",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2012-12-23 17:12:58.026680",
	"closed": true,
	"issue": 6996051
}