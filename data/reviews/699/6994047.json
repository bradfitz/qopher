{
	"description": "exp/types: resolve composite literal keys\n\nThe parser/resolver cannot accurately resolve\ncomposite literal keys that are identifiers;\nit needs type information.\nInstead, try to resolve them but leave final\njudgement to the type checker.",
	"cc": [
		"adonovan@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks for the quick fix.\n\nhttps://codereview.appspot.com/6994047/diff/1003/src/pkg/exp/types/expr.go\nFile src/pkg/exp/types/expr.go (right):\n\nhttps://codereview.appspot.com/6994047/diff/1003/src/pkg/exp/types/expr.go#newcode510\nsrc/pkg/exp/types/expr.go:510: // compositeLitKey resolves unresolved composite literal keys.\nMight be good to add here:\n\n  compositeLitKey resolves unresolved composite literal keys. \n  Such references are always to declarations in the file, package or universe scope.\n  For details...",
			"disapproval": false,
			"date": "2012-12-28 17:33:29.862430",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-12-27 00:21:55.791590",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=d7f56af8557e ***\n\nexp/types: resolve composite literal keys\n\nThe parser/resolver cannot accurately resolve\ncomposite literal keys that are identifiers;\nit needs type information.\nInstead, try to resolve them but leave final\njudgement to the type checker.\n\nR=adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/6994047",
			"disapproval": false,
			"date": "2012-12-28 18:40:41.387620",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6994047/diff/1003/src/pkg/exp/types/expr.go\nFile src/pkg/exp/types/expr.go (right):\n\nhttps://codereview.appspot.com/6994047/diff/1003/src/pkg/exp/types/expr.go#newcode510\nsrc/pkg/exp/types/expr.go:510: // compositeLitKey resolves unresolved composite literal keys.\nOn 2012/12/28 17:33:29, adonovan wrote:\n> Might be good to add here:\n> \n>   compositeLitKey resolves unresolved composite literal keys. \n>   Such references are always to declarations in the file, package or universe\n> scope.\n>   For details...\n\nPrefer to leave as is. There's a really long comment in the parser (as noted), and the parser has really extensive comments about resolution.",
			"disapproval": false,
			"date": "2012-12-28 18:40:19.075190",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-27 00:51:24.480320",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 6994047: exp/types: resolve composite literal keys",
	"created": "2012-12-26 23:51:10.327390",
	"patchsets": [
		1,
		2001,
		1002,
		7001,
		9001,
		9002,
		7005,
		9,
		12004,
		1003,
		7010
	],
	"modified": "2012-12-28 18:40:43.080340",
	"closed": true,
	"issue": 6994047
}