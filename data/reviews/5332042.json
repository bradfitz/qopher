{
	"description": "net: split the time given to SetTimeout between read and write\n\nThe previous SetTimeout behavior was surprising developers by setting the\nread and write deadlines to the same value, doubling the time spent\npushing data around the socket.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org",
		"n13m3y3r@gmail.com"
	],
	"messages": [
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Note: that ipraw test was still passing with SetTimeout(100e6), but I\npromised to change all the callsites in the stdlib. I have a feeling\nit was chosen fairly arbitrarily, but am not willing to tempt fate.\n\nOn Sat, Oct 29, 2011 at 12:27 PM,  <jeff@somethingsimilar.com> wrote:\n> Reviewers: rsc,\n>\n> Message:\n> Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> net: split the time given to SetTimeout between read and write\n>\n> The previous SetTimeout behavior was surprising developers by setting\n> the\n> read and write deadlines to the same value, doubling the time spent\n> pushing data around the socket.\n>\n> Please review this at http://codereview.appspot.com/5332042/\n>\n> Affected files:\n> \u00a0M src/pkg/net/ipraw_test.go\n> \u00a0M src/pkg/net/net.go\n> \u00a0M src/pkg/net/sock.go\n>\n>\n> Index: src/pkg/net/ipraw_test.go\n> ===================================================================\n> --- a/src/pkg/net/ipraw_test.go\n> +++ b/src/pkg/net/ipraw_test.go\n> @@ -100,7 +100,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0t.Fatalf(`net.WriteToIP(..., %v) = %v, %v`, raddr, n, err)\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> - \u00a0 \u00a0 \u00a0 c.SetTimeout(100e6)\n> + \u00a0 \u00a0 \u00a0 c.SetTimeout(200e6)\n> \u00a0 \u00a0 \u00a0 \u00a0resp := make([]byte, 1024)\n> \u00a0 \u00a0 \u00a0 \u00a0for {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0n, from, err := c.ReadFrom(resp)\n> Index: src/pkg/net/net.go\n> ===================================================================\n> --- a/src/pkg/net/net.go\n> +++ b/src/pkg/net/net.go\n> @@ -38,8 +38,8 @@\n> \u00a0 \u00a0 \u00a0 \u00a0// RemoteAddr returns the remote network address.\n> \u00a0 \u00a0 \u00a0 \u00a0RemoteAddr() Addr\n>\n> - \u00a0 \u00a0 \u00a0 // SetTimeout sets the read and write deadlines associated\n> - \u00a0 \u00a0 \u00a0 // with the connection.\n> + \u00a0 \u00a0 \u00a0 // SetTimeout splits the time given (in nanoseconds) between the\n> read and\n> + \u00a0 \u00a0 \u00a0 // write deadlines.\n> \u00a0 \u00a0 \u00a0 \u00a0SetTimeout(nsec int64) os.Error\n>\n> \u00a0 \u00a0 \u00a0 \u00a0// SetReadTimeout sets the time (in nanoseconds) that\n> Index: src/pkg/net/sock.go\n> ===================================================================\n> --- a/src/pkg/net/sock.go\n> +++ b/src/pkg/net/sock.go\n> @@ -99,10 +99,11 @@\n> \u00a0}\n>\n> \u00a0func setTimeout(fd *netFD, nsec int64) os.Error {\n> - \u00a0 \u00a0 \u00a0 if e := setReadTimeout(fd, nsec); e != nil {\n> + \u00a0 \u00a0 \u00a0 rnsec := nsec / 2\n> + \u00a0 \u00a0 \u00a0 if e := setReadTimeout(fd, rnsec); e != nil {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return e\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> - \u00a0 \u00a0 \u00a0 return setWriteTimeout(fd, nsec)\n> + \u00a0 \u00a0 \u00a0 return setWriteTimeout(fd, nsec-rnsec)\n> \u00a0}\n>\n> \u00a0func setReuseAddr(fd *netFD, reuse bool) os.Error {\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-10-29 19:34:02.508003",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-29 19:27:03.509670",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "FWIW, I actually find the suggested behavior surprising, and the\ncurrent behavior expected.",
			"disapproval": false,
			"date": "2011-10-29 19:35:55.459806",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Once the Go 1 time changes are in I'd like to change\nSetTimeout to take a specific time.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-10-31 17:26:55.269084",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"jeff@somethingsimilar.com",
				"rsc@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2011-11-24 06:41:45.971562",
			"approval": false
		}
	],
	"owner_email": "jeff@somethingsimilar.com",
	"private": false,
	"base_url": "",
	"owner": "jmhodges",
	"subject": "code review 5332042: net: split the time given to SetTimeout between read an...",
	"created": "2011-10-29 19:21:20.838510",
	"patchsets": [
		1,
		2001
	],
	"modified": "2011-11-24 06:41:46.982127",
	"closed": true,
	"issue": 5332042
}