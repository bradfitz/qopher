{
	"description": "runtime, syscall, os/signal: fix windows build",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-14 02:18:59.990996",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=5ddbaedd8223 ***\n\nruntime, syscall, os/signal: fix windows build\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5656048\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/net/dial_test.go\nFile src/pkg/net/dial_test.go (right):\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/net/dial_test.go#newcode91\nsrc/pkg/net/dial_test.go:91: t.Logf(\"skipping test on %q; untested.\", runtime.GOOS)\nOn 2012/02/14 02:35:02, bradfitzgoog wrote:\n> untested? you tested it, and found that it hangs.\n> \n> I'd just say\n> \n> t.Logf(\"skipping known-broken test on windows\")\n\nDone.\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/os/signal/signal_unix.go\nFile src/pkg/os/signal/signal_unix.go (right):\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/os/signal/signal_unix.go#newcode5\nsrc/pkg/os/signal/signal_unix.go:5: // +build darwin freebsd linux netbsd openbsd windows\nOn 2012/02/14 02:35:02, bradfitzgoog wrote:\n> so much for this filename being _unix.go.  :)\n\nAgreed. I would have suggested to create a shortcut for \"unix\", but, unfortunately, the meaning of it varies sometimes.\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/os/signal/signal_windows_test.go\nFile src/pkg/os/signal/signal_windows_test.go (right):\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/os/signal/signal_windows_test.go#newcode4\nsrc/pkg/os/signal/signal_windows_test.go:4: \nOn 2012/02/14 02:35:02, bradfitzgoog wrote:\n> does _windows_test.go mean the same as _windows.go?\n> \n\nYes it does.\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/os/signal/signal_windows_test.go#newcode20\nsrc/pkg/os/signal/signal_windows_test.go:20: t.Fatalf(\"LoadDLL: %s\\n\", e)\nOn 2012/02/14 02:35:02, bradfitzgoog wrote:\n> we tend to use %v for errors, instead of %s.\n\nDone.",
			"disapproval": false,
			"date": "2012-02-14 02:51:46.431868",
			"approval": false
		},
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/net/dial_test.go\nFile src/pkg/net/dial_test.go (right):\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/net/dial_test.go#newcode91\nsrc/pkg/net/dial_test.go:91: t.Logf(\"skipping test on %q; untested.\", runtime.GOOS)\nuntested? you tested it, and found that it hangs.\n\nI'd just say\n\nt.Logf(\"skipping known-broken test on windows\")\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/os/signal/signal_unix.go\nFile src/pkg/os/signal/signal_unix.go (right):\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/os/signal/signal_unix.go#newcode5\nsrc/pkg/os/signal/signal_unix.go:5: // +build darwin freebsd linux netbsd openbsd windows\nso much for this filename being _unix.go.  :)\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/os/signal/signal_windows_test.go\nFile src/pkg/os/signal/signal_windows_test.go (right):\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/os/signal/signal_windows_test.go#newcode4\nsrc/pkg/os/signal/signal_windows_test.go:4: \ndoes _windows_test.go mean the same as _windows.go?\n\nI didn't know that, if so.\n\nIf it doesn't, add a // build line.\n\nhttp://codereview.appspot.com/5656048/diff/3021/src/pkg/os/signal/signal_windows_test.go#newcode20\nsrc/pkg/os/signal/signal_windows_test.go:20: t.Fatalf(\"LoadDLL: %s\\n\", e)\nwe tend to use %v for errors, instead of %s.",
			"disapproval": false,
			"date": "2012-02-14 02:35:01.956676",
			"approval": true
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5656048: runtime, syscall, os/signal: fix windows build",
	"created": "2012-02-14 01:41:25.488452",
	"patchsets": [
		1,
		2001,
		3021,
		4003
	],
	"modified": "2012-02-14 02:51:49.629588",
	"closed": true,
	"issue": 5656048
}