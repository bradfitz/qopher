{
	"description": "exp/cookiejar: implement Cookies and provided tests\n\nThis CL provides the implementation of Cookies and\nthe complete test suite. Several tests have been ported\nfrom the Chromium project as a cross check.",
	"cc": [
		"nigeltao@golang.org",
		"rsc@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode101\nsrc/pkg/exp/cookiejar/jar.go:101: // shouldSend determines whether the cookie c qualifies to be included in a\nOn 2013/02/12 08:03:04, nigeltao wrote:\n> s/the cookie c/e's cookie/\n\nDone.\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode102\nsrc/pkg/exp/cookiejar/jar.go:102: // request to host/path. It is the callers responsibility to check if the\nOn 2013/02/12 08:03:04, nigeltao wrote:\n> s/callers/caller's/\n\nDone.\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode124\nsrc/pkg/exp/cookiejar/jar.go:124: return true // The \"/any/path\" matches \"/\" and \"/any/\" case.\nOn 2013/02/12 08:03:04, nigeltao wrote:\n> I think that this comment and the one two lines below are inconsistent in the\n> order in which strings are requestPath and which strings are e.Path.\n\nDone.\n\nThanks for catching this one!\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode133\nsrc/pkg/exp/cookiejar/jar.go:133: // byPathLength is a []entry which can be sorted according to\nOn 2013/02/12 08:03:04, nigeltao wrote:\n> // byPathLength is a []entry sort.Interface that sorts according to RFC 6265\n> // section 5.4 point 2: by longest path and then by earliest creation time.\n\nDone.\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode180\nsrc/pkg/exp/cookiejar/jar.go:180: selected := make([]entry, 0)\nOn 2013/02/12 08:03:04, nigeltao wrote:\n> selected := ([]entry)(nil)\n\nDone. (But used the var variant)\n\nWhy do you prefer\n  var selected []entry\nor \n  selected := ([]entry)(nil)\nover\n  selected := make([]entry, 0)\n?\nIs it to avoid the allocation if nothing gets\nappended to selected?",
			"disapproval": false,
			"date": "2013-02-12 09:11:44.508940",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org, rsc@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-11 11:44:28.168430",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Just a quick skim on this pass.\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode101\nsrc/pkg/exp/cookiejar/jar.go:101: // shouldSend determines whether the cookie c qualifies to be included in a\ns/the cookie c/e's cookie/\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode102\nsrc/pkg/exp/cookiejar/jar.go:102: // request to host/path. It is the callers responsibility to check if the\ns/callers/caller's/\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode124\nsrc/pkg/exp/cookiejar/jar.go:124: return true // The \"/any/path\" matches \"/\" and \"/any/\" case.\nI think that this comment and the one two lines below are inconsistent in the order in which strings are requestPath and which strings are e.Path.\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode133\nsrc/pkg/exp/cookiejar/jar.go:133: // byPathLength is a []entry which can be sorted according to\n// byPathLength is a []entry sort.Interface that sorts according to RFC 6265\n// section 5.4 point 2: by longest path and then by earliest creation time.\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode180\nsrc/pkg/exp/cookiejar/jar.go:180: selected := make([]entry, 0)\nselected := ([]entry)(nil)",
			"disapproval": false,
			"date": "2013-02-12 08:03:04.069950",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, submitting...\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7311073/diff/5001/src/pkg/exp/cookiejar/jar.go#newcode180\nsrc/pkg/exp/cookiejar/jar.go:180: selected := make([]entry, 0)\nOn 2013/02/12 09:11:44, volker.dobler wrote:\n> Is it to avoid the allocation if nothing gets\n> appended to selected?\n\nIt's just less work: assigning nil is just a few MOVQs of immediate zeroes. Making a non-nil empty slice is a function call to runtime.makeslice.\n\nIt's not really a big deal, but it's also not hard to do less work.\n\nhttps://codereview.appspot.com/7311073/diff/2003/src/pkg/exp/cookiejar/jar_test.go\nFile src/pkg/exp/cookiejar/jar_test.go (right):\n\nhttps://codereview.appspot.com/7311073/diff/2003/src/pkg/exp/cookiejar/jar_test.go#newcode599\nsrc/pkg/exp/cookiejar/jar_test.go:599: \"Fill jar\",\nMissing full stop.\n\nhttps://codereview.appspot.com/7311073/diff/2003/src/pkg/exp/cookiejar/jar_test.go#newcode633\nsrc/pkg/exp/cookiejar/jar_test.go:633: var chromiumTests = [...]jarTest{\nchromiumBasicsTests",
			"disapproval": false,
			"date": "2013-02-14 08:30:49.526810",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=8c44c45a208e ***\n\nexp/cookiejar: implement Cookies and provided tests\n\nThis CL provides the implementation of Cookies and\nthe complete test suite. Several tests have been ported\nfrom the Chromium project as a cross check.\n\nR=nigeltao, rsc, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7311073\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2013-02-14 08:42:30.542800",
			"approval": false
		}
	],
	"owner_email": "dr.volker.dobler@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "volker.dobler",
	"subject": "code review 7311073: exp/cookiejar: implement Cookies and provided tests",
	"created": "2013-02-11 11:30:49.106790",
	"patchsets": [
		1,
		2001,
		5001,
		2003
	],
	"modified": "2013-02-14 09:14:06.684960",
	"closed": true,
	"issue": 7311073
}