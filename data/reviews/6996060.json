{
	"description": "runtime: fix potential crash in sigqueue\nFixes issue 4383.",
	"cc": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"iant@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-12-24 17:12:09.148370",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6996060/diff/3003/src/pkg/os/signal/signal_test.go\nFile src/pkg/os/signal/signal_test.go (right):\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/os/signal/signal_test.go#newcode65\nsrc/pkg/os/signal/signal_test.go:65: return\nwhy skip the test in short mode?\nyou'd better add a t.Log sbout skipping\nif you really don't want to test it in\nshort mode.\nalso note that the builder test only short\nmode, skipping means the builders won't\ncatch future breaks.\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/os/signal/signal_test.go#newcode68\nsrc/pkg/os/signal/signal_test.go:68: go func() {\nneed a way to tear down these two goroutines?\nmaybe this is the reason why yoy skip the test\nin short mode?\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/runtime/sigqueue.goc\nFile src/pkg/runtime/sigqueue.goc (right):\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/runtime/sigqueue.goc#newcode22\nsrc/pkg/runtime/sigqueue.goc:22: // calls notewakeup(&sig).\nthese text need updating?\nit seems the ownership of note is denoted\nby state var. now.\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/runtime/sigqueue.goc#newcode52\nsrc/pkg/runtime/sigqueue.goc:52: #define\tHASWAITER 1\nplease use enum for these two constants.\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/runtime/sigqueue.goc#newcode139\nsrc/pkg/runtime/sigqueue.goc:139: // goc requires that we fall off the end of functions\nis this still true?",
			"disapproval": false,
			"date": "2012-12-25 05:31:37.557430",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done. PTAL. Thanks!\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/os/signal/signal_test.go\nFile src/pkg/os/signal/signal_test.go (right):\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/os/signal/signal_test.go#newcode65\nsrc/pkg/os/signal/signal_test.go:65: return\nOn 2012/12/25 05:31:37, minux wrote:\n> why skip the test in short mode?\n> you'd better add a t.Log sbout skipping\n> if you really don't want to test it in\n> short mode.\n> also note that the builder test only short\n> mode, skipping means the builders won't\n> catch future breaks.\n\nDone.\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/os/signal/signal_test.go#newcode68\nsrc/pkg/os/signal/signal_test.go:68: go func() {\nOn 2012/12/25 05:31:37, minux wrote:\n> need a way to tear down these two goroutines?\n> maybe this is the reason why yoy skip the test\n> in short mode?\n\nDone.\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/runtime/sigqueue.goc\nFile src/pkg/runtime/sigqueue.goc (right):\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/runtime/sigqueue.goc#newcode22\nsrc/pkg/runtime/sigqueue.goc:22: // calls notewakeup(&sig).\nOn 2012/12/25 05:31:37, minux wrote:\n> these text need updating?\n> it seems the ownership of note is denoted\n> by state var. now.\n\nIt seems it was outdated before me (it does not mention kick logic).\nDone.\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/runtime/sigqueue.goc#newcode52\nsrc/pkg/runtime/sigqueue.goc:52: #define\tHASWAITER 1\nOn 2012/12/25 05:31:37, minux wrote:\n> please use enum for these two constants.\n\nDone.\n\nhttps://codereview.appspot.com/6996060/diff/3003/src/pkg/runtime/sigqueue.goc#newcode139\nsrc/pkg/runtime/sigqueue.goc:139: // goc requires that we fall off the end of functions\nOn 2012/12/25 05:31:37, minux wrote:\n> is this still true?\n\nYes",
			"disapproval": false,
			"date": "2012-12-25 10:31:55.914930",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6996060/diff/12001/src/pkg/runtime/sigqueue.goc\nFile src/pkg/runtime/sigqueue.goc (right):\n\nhttps://codereview.appspot.com/6996060/diff/12001/src/pkg/runtime/sigqueue.goc#newcode8\nsrc/pkg/runtime/sigqueue.goc:8: // the signal handler (it cannot block, allocate memory and cannot use locks)\nClause is not parallel.  Suggest \"it cannot block, allocate memory, or use locks\".\n\nhttps://codereview.appspot.com/6996060/diff/12001/src/pkg/runtime/sigqueue.goc#newcode12\nsrc/pkg/runtime/sigqueue.goc:12: // Synchronization between sigsend() and signal_recv() is based on the sig.state\nI think this needs an introductory sentence or two.  E.g., \"sigsend is called by the signal handler to queue a new signal.  signal_recv is called by the Go program to receive a newly queued signal.\"",
			"disapproval": false,
			"date": "2012-12-27 00:05:35.208070",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b07c0f6d6b5f ***\n\nruntime: fix potential crash in sigqueue\nFixes issue 4383.\n\nR=golang-dev, minux.ma, rsc, iant\nCC=golang-dev\nhttps://codereview.appspot.com/6996060",
			"disapproval": false,
			"date": "2012-12-28 11:36:23.449590",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Please wait for rsc or iant to sign off.\n\nhttps://codereview.appspot.com/6996060/diff/12001/src/pkg/runtime/sigqueue.goc\nFile src/pkg/runtime/sigqueue.goc (right):\n\nhttps://codereview.appspot.com/6996060/diff/12001/src/pkg/runtime/sigqueue.goc#newcode15\nsrc/pkg/runtime/sigqueue.goc:15: // new pedning signals.\ns/pedning/pending/",
			"disapproval": false,
			"date": "2012-12-26 02:46:24.616730",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6996060/diff/12001/src/pkg/runtime/sigqueue.goc\nFile src/pkg/runtime/sigqueue.goc (right):\n\nhttps://codereview.appspot.com/6996060/diff/12001/src/pkg/runtime/sigqueue.goc#newcode8\nsrc/pkg/runtime/sigqueue.goc:8: // the signal handler (it cannot block, allocate memory and cannot use locks)\nOn 2012/12/27 00:05:35, iant wrote:\n> Clause is not parallel.  Suggest \"it cannot block, allocate memory, or use\n> locks\".\n\nDone.\n\nhttps://codereview.appspot.com/6996060/diff/12001/src/pkg/runtime/sigqueue.goc#newcode12\nsrc/pkg/runtime/sigqueue.goc:12: // Synchronization between sigsend() and signal_recv() is based on the sig.state\nOn 2012/12/27 00:05:35, iant wrote:\n> I think this needs an introductory sentence or two.  E.g., \"sigsend is called by\n> the signal handler to queue a new signal.  signal_recv is called by the Go\n> program to receive a newly queued signal.\"\n\nDone.\n\nhttps://codereview.appspot.com/6996060/diff/12001/src/pkg/runtime/sigqueue.goc#newcode15\nsrc/pkg/runtime/sigqueue.goc:15: // new pedning signals.\nOn 2012/12/26 02:46:24, minux wrote:\n> s/pedning/pending/\n\nDone.",
			"disapproval": false,
			"date": "2012-12-28 11:33:19.464110",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6996060: runtime: fix potential crash in sigqueue",
	"created": "2012-12-24 16:39:38.186290",
	"patchsets": [
		1,
		2001,
		3,
		6001,
		2002,
		1008,
		3003,
		12001,
		12003,
		19001
	],
	"modified": "2012-12-28 11:36:24.878710",
	"closed": true,
	"issue": 6996060
}