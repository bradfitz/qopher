{
	"description": "cmd/go: simplify flags for coverage\nThe single flag -cover provides the default simplest behavior.\nThe other flags, -covermode and -coverprofile, provide more\ncontrol. The three flags interconnect to work well.",
	"cc": [
		"adg@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-18 21:57:14.674500",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nafter regenerating doc.go",
			"disapproval": false,
			"date": "2013-06-19 00:06:12.919370",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10364044/diff/1/src/cmd/go/doc.go\nFile src/cmd/go/doc.go (right):\n\nhttps://codereview.appspot.com/10364044/diff/1/src/cmd/go/doc.go#newcode745\nsrc/cmd/go/doc.go:745: -cover set,count,atomic\n-covermode ?",
			"disapproval": false,
			"date": "2013-06-18 22:26:16.999350",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-18 22:58:22.606280",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/10364044/diff/5001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttps://codereview.appspot.com/10364044/diff/5001/src/cmd/go/test.go#newcode133\nsrc/cmd/go/test.go:133: The default is to do none, but if -cover or -coverprofile is specified,\nsorry to ask, but given that this is help output destined for people's consoles, can you please wrap it at 80 columns? that matches the rest of the help text.",
			"disapproval": false,
			"date": "2013-06-18 23:54:59.540020",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-19 00:01:41.899210",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=4298a713c372 ***\n\ncmd/go: simplify flags for coverage\nThe single flag -cover provides the default simplest behavior.\nThe other flags, -covermode and -coverprofile, provide more\ncontrol. The three flags interconnect to work well.\n\nR=rsc, adg\nCC=golang-dev\nhttps://codereview.appspot.com/10364044",
			"disapproval": false,
			"date": "2013-06-19 00:15:32.681970",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "There's a definite bug, which is that\n  -covermode=atomic -coverprofile=/tmp/x\nwill use covermode=set (because coverprofile overrides the earlier flag).\n\nIn general I think the code is still thinking about covermode as the point of truth for whether coverage is enabled. It should be just a parameter, meaning it can default to \"set\", not \"\".\n\nThat is:\n\n\t-cover\n\t    Enable coverage analysis.\n\n\t-covermode set,count,atomic\n\t    Set the mode for coverage analysis for the package[s]\n\t    being tested. The values:\n\t\tset: bool: does this statement run?\n\t\tcount: int: how many times does this statement run?\n\t\tatomic: int: count, but correct in multithreaded tests;\n \t\t\tsignificantly more expensive.\n \t    The default is \"set\".\n \t    Implies -cover.\n \n\t-coverprofile cover.out\n\t    Write a coverage profile to the specified file after all tests\n\t    have passed.\n\t    Implies -cover.",
			"disapproval": false,
			"date": "2013-06-19 11:43:38.890190",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Another try: https://codereview.appspot.com/10420043\r\n\r\nThe bug you reported was real but just a dumb bug: s/\"set\"/mode/ in\r\none place fixed it. Nonetheless I redid it to your spec. It may be a\r\nlittle simpler; I don't care much either way.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-19 16:31:46.222830",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 10364044: cmd/go: simplify flags for coverage",
	"created": "2013-06-18 21:57:11.221310",
	"patchsets": [
		1,
		5001,
		10001,
		1005,
		4002
	],
	"modified": "2013-06-19 16:31:46.296580",
	"closed": true,
	"issue": 10364044
}