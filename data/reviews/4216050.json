{
	"description": "xml: permit nested directives.\n    Modify <! case in RawToken so that nested <! ...> directives are\n    accumulated rather than terminating the opening directive at the\n    first >. Keep track of nesting depth, +1 for each <, -1 for each\n    >, but not counting < or > inside single-quoted or double-quoted\n    strings.\n    Fixes issue 1549.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"go.peter.90@gmail.com"
	],
	"messages": [
		{
			"sender": "ehog.hedge@googlemail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"go@googlecode.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello go@googlecode.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-02-24 21:16:40.376561",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Thanks for the change.\n\nThere's a small problem in the handling of quotes:\n\nhttp://codereview.appspot.com/4216050/diff/1001/src/pkg/xml/xml.go\nFile src/pkg/xml/xml.go (right):\n\nhttp://codereview.appspot.com/4216050/diff/1001/src/pkg/xml/xml.go#newcode560\nsrc/pkg/xml/xml.go:560: } else if b == '\\'' || b == '\"' {\nAdd a test for a string such as \"'\".  The center\nquote will switch inquote improperly.\n\nIt should look something like this:\n\nswitch {\ncase b == inquote:\n    inquote = 0\ncase inquote != 0:\n    // nothing\ncase b == '\\'' || b == '\"':\n    inquote = b\ncase b == '>':\n    depth -= 1\ncase b == '<':\n    depth += 1\n}",
			"disapproval": false,
			"date": "2011-02-25 02:55:06.998827",
			"approval": false
		},
		{
			"sender": "ehog.hedge@googlemail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4216050/diff/1001/src/pkg/xml/xml.go\nFile src/pkg/xml/xml.go (right):\n\nhttp://codereview.appspot.com/4216050/diff/1001/src/pkg/xml/xml.go#newcode560\nsrc/pkg/xml/xml.go:560: } else if b == '\\'' || b == '\"' {\nOn 2011/02/25 02:55:07, niemeyer wrote:\n> Add a test for a string such as \"'\".  The center\n> quote will switch inquote improperly.\n> \n> It should look something like this:\n> \n> switch {\n> case b == inquote:\n>     inquote = 0\n> case inquote != 0:\n>     // nothing\n> case b == '\\'' || b == '\"':\n>     inquote = b\n> case b == '>':\n>     depth -= 1\n> case b == '<':\n>     depth += 1\n> }\n\nDone, but still as if-chain -- would a switch be preferred style here?\n\n[Also, should the copyright comment be changed to reflect a 2011 update?]",
			"disapproval": false,
			"date": "2011-02-25 07:38:22.995415",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4216050/diff/17001/src/pkg/xml/xml.go\nFile src/pkg/xml/xml.go (right):\n\nhttp://codereview.appspot.com/4216050/diff/17001/src/pkg/xml/xml.go#newcode569\nsrc/pkg/xml/xml.go:569: depth -= 1\ndepth--\n\nhttp://codereview.appspot.com/4216050/diff/17001/src/pkg/xml/xml.go#newcode572\nsrc/pkg/xml/xml.go:572: depth += 1\ndepth++",
			"disapproval": false,
			"date": "2011-02-25 18:51:04.089177",
			"approval": false
		},
		{
			"sender": "ehog.hedge@googlemail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, niemeyer (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-02-25 09:43:11.850440",
			"approval": false
		},
		{
			"sender": "ehog.hedge@googlemail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 25 February 2011 17:34,  <n13m3y3r@gmail.com> wrote:\n> LGTM\n>\n> http://codereview.appspot.com/4216050/\n>\n\nSo, as I understand it, since I'm not a submitter, someone-perhaps-you\nwill now import & submit (if still OK) the code.\n\nI e-signed a CLA yesterday, so you should be able to find that\nfor any necessary magic, this being my first time and all.\n\nChris\n\n-- \nChris \"allusive\" Dollin\n",
			"disapproval": false,
			"date": "2011-02-25 18:43:07.786757",
			"approval": false
		},
		{
			"sender": "go.peter.90@gmail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"go.peter.90@gmail.com",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4216050/diff/19001/src/pkg/xml/xml.go\nFile src/pkg/xml/xml.go (right):\n\nhttp://codereview.appspot.com/4216050/diff/19001/src/pkg/xml/xml.go#newcode561\nsrc/pkg/xml/xml.go:561: \nTo be consistent with the rest of xml.go and elsewhere, when there are only a few statements in the switch statement case clauses, the blank lines separating the case clauses are unnecessary.",
			"disapproval": false,
			"date": "2011-02-28 19:18:34.854007",
			"approval": false
		},
		{
			"sender": "ehog.hedge@googlemail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, niemeyer (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-02-25 09:42:47.181944",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "> So, as I understand it, since I'm not a submitter, someone-perhaps-you\n> will now import & submit (if still OK) the code.\n\nRight, except I'm not a submitter either.  Someone\nwill look at this and comment/approve/submit.\n\n> I e-signed a CLA yesterday, so you should be able to find that\n> for any necessary magic, this being my first time and all.\n\nWelcome, and thanks!",
			"disapproval": false,
			"date": "2011-02-25 18:47:18.731583",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-02-25 17:34:16.064033",
			"approval": true
		},
		{
			"sender": "ehog.hedge@googlemail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 25 February 2011 09:43,  <ehog.hedge@googlemail.com> wrote:\n> Hello golang-dev@googlegroups.com, niemeyer (cc:\n> golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/4216050/\n>\n\nSorry for the duplicate posting. I got confused about exactly\nwhat needed to be redone after I got a\n\n  warning: gofmt needs to format these files (run hg gofmt):\n\nmessage.\n\nChris\n\n-- \nChris \"allusive\" Dollin\n",
			"disapproval": false,
			"date": "2011-02-25 09:46:13.960303",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "> Done, but still as if-chain -- would a switch be\n> preferred style here?\n\nYeah, I think it is more idiomatic for these cases.\nWasn't for the new case introduced, you could even\nswitch on b.\n\n> [Also, should the copyright comment be changed to reflect a 2011 update?]\n\nNot use about what's the practice for updating those (and avoiding\nconflicts while doing so), but since there are no other updated\nfiles at this point in the tree, I'd say leave it alone for now.",
			"disapproval": false,
			"date": "2011-02-25 13:02:42.525078",
			"approval": false
		},
		{
			"sender": "ehog.hedge@googlemail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, niemeyer, rsc (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-02-25 16:23:04.755683",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as 768498ada484 ***\n\nxml: permit nested directives\n\nReturn <!DOCTYPE ...> with nested directives as one big token.\n\nFixes issue 1549.\n\nR=niemeyer, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/4216050\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-02-28 19:09:10.835431",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> [Also, should the copyright comment be changed to reflect a 2011\n> update?]\n\nno.  we will revisit in 2080.\n",
			"disapproval": false,
			"date": "2011-02-25 15:23:49.660855",
			"approval": false
		},
		{
			"sender": "ehog.hedge@googlemail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello niemeyer, rsc (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-02-26 10:12:58.358596",
			"approval": false
		},
		{
			"sender": "ehog.hedge@googlemail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4216050/diff/1001/src/pkg/xml/xml.go\nFile src/pkg/xml/xml.go (right):\n\nhttp://codereview.appspot.com/4216050/diff/1001/src/pkg/xml/xml.go#newcode560\nsrc/pkg/xml/xml.go:560: } else if b == '\\'' || b == '\"' {\nOn 2011/02/25 02:55:07, niemeyer wrote:\n> Add a test for a string such as \"'\".  The center\n> quote will switch inquote improperly.\n> \n> It should look something like this:\n> \n> switch {\n> case b == inquote:\n>     inquote = 0\n> case inquote != 0:\n>     // nothing\n> case b == '\\'' || b == '\"':\n>     inquote = b\n> case b == '>':\n>     depth -= 1\n> case b == '<':\n>     depth += 1\n> }\n\nDone.\n\nhttp://codereview.appspot.com/4216050/diff/17001/src/pkg/xml/xml.go#newcode569\nsrc/pkg/xml/xml.go:569: }\nOn 2011/02/25 18:51:04, rsc wrote:\n> depth--\n\nDone.\n\nhttp://codereview.appspot.com/4216050/diff/17001/src/pkg/xml/xml.go#newcode572\nsrc/pkg/xml/xml.go:572: p.ungetc(b)\nOn 2011/02/25 18:51:04, rsc wrote:\n> depth++\n\nDone.",
			"disapproval": false,
			"date": "2011-02-26 10:13:33.784297",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-02-28 15:09:31.368128",
			"approval": true
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"ehog.hedge@googlemail.com",
				"go.peter.90@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2011-12-13 21:25:12.410202",
			"approval": false
		}
	],
	"owner_email": "ehog.hedge@googlemail.com",
	"private": false,
	"base_url": "",
	"owner": "eh",
	"subject": "code review 4216050: xml: permit nested directives.",
	"created": "2011-02-24 21:12:48.012808",
	"patchsets": [
		1,
		1001,
		8001,
		12001,
		17001,
		19001
	],
	"modified": "2011-12-13 21:25:12.410202",
	"closed": false,
	"issue": 4216050
}