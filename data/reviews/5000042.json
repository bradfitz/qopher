{
	"description": "runtime: syscall to return both AX and DX for windows/386\n\nFixes issue 2181.",
	"cc": [
		"golang-dev@googlegroups.com",
		"jp@webmaster.ms"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"jp@webmaster.ms",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b539ac52c3fd ***\n\nruntime: syscall to return both AX and DX for windows/386\n\nFixes issue 2181.\n\nR=golang-dev, jp\nCC=golang-dev\nhttp://codereview.appspot.com/5000042",
			"disapproval": false,
			"date": "2011-09-14 06:19:54.179095",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"jp@webmaster.ms",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: jp@webmaster.ms),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-13 05:21:05.635905",
			"approval": false
		},
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"jp@webmaster.ms",
				"reply@codereview.appspotmail.com"
			],
			"text": "good.\n\nhttp://codereview.appspot.com/5000042/diff/5001/src/pkg/runtime/runtime.h\nFile src/pkg/runtime/runtime.h (right):\n\nhttp://codereview.appspot.com/5000042/diff/5001/src/pkg/runtime/runtime.h#newcode311\nsrc/pkg/runtime/runtime.h:311: uintptr\tr2;\n#ifndef _64BIT\nuintptr\tr2;\n#endif",
			"disapproval": false,
			"date": "2011-09-13 07:14:13.719566",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"jp@webmaster.ms",
				"reply@codereview.appspotmail.com"
			],
			"text": "I think the word you are looking for is LGTM. <g>\n\nhttp://golang.org/doc/contribute.html\n\n\"The reviewer approves the change by replying with a mail that says LGTM: looks good to me.\"\n\nhttp://codereview.appspot.com/5000042/diff/5001/src/pkg/runtime/runtime.h\nFile src/pkg/runtime/runtime.h (right):\n\nhttp://codereview.appspot.com/5000042/diff/5001/src/pkg/runtime/runtime.h#newcode311\nsrc/pkg/runtime/runtime.h:311: uintptr\tr2;\nOn 2011/09/13 07:14:13, jp wrote:\n> #ifndef _64BIT\n> uintptr\tr2;\n> #endif\n\nI don't like #ifdef. I start looking for deep meaning when I see one. Can I leave it the way it is? It does not make any difference. Does it?",
			"disapproval": false,
			"date": "2011-09-13 07:24:06.597632",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, jp@webmaster.ms (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-13 12:41:36.235305",
			"approval": false
		},
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5000042/diff/5001/src/pkg/runtime/runtime.h\nFile src/pkg/runtime/runtime.h (right):\n\nhttp://codereview.appspot.com/5000042/diff/5001/src/pkg/runtime/runtime.h#newcode311\nsrc/pkg/runtime/runtime.h:311: uintptr\tr2;\nOn 2011/09/13 07:24:06, brainman wrote:\n> On 2011/09/13 07:14:13, jp wrote:\n> > #ifndef _64BIT\n> > uintptr\tr2;\n> > #endif\n> \n> I don't like #ifdef. I start looking for deep meaning when I see one. Can I\n> leave it the way it is? It does not make any difference. Does it?\n\nThe meaning is to give the reader a hint that r2 is not used on Win64 and to ensure that it is not (ab)used somewhere in the code below.\n\nSecond, if we will start using r2 on Win64 one day, it will be rather double than uintptr. There are no 128-bit ints with high part in RDX, but doubles in XMM0.\n\nYou can leave it without #ifdef though.",
			"disapproval": false,
			"date": "2011-09-13 18:20:03.289290",
			"approval": true
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5000042: runtime: syscall to return both AX and DX for windows/386",
	"created": "2011-09-13 05:20:00.941689",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		13001
	],
	"modified": "2011-09-14 06:19:57.226029",
	"closed": true,
	"issue": 5000042
}