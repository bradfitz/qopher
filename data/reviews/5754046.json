{
	"description": "unicode/utf8: remove dependence on unicode.\nThe dependency was there only to pull in two constants.\nNow we define them locally and verify equality in the test.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but validate the ______ ?\n\nOn Mon, Mar 5, 2012 at 4:00 PM, <r@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go/\n>\n>\n> Description:\n> unicode/utf8: remove dependence on unicode.\n> The dependency was there only to pull in two constants.\n> Now we define them locally and verify equality in the test.\n>\n> Please review this at http://codereview.appspot.com/**5754046/<http://codereview.appspot.com/5754046/>\n>\n> Affected files:\n>  M src/pkg/unicode/utf8/utf8.go\n>  M src/pkg/unicode/utf8/utf8_**test.go\n>\n>\n> Index: src/pkg/unicode/utf8/utf8.go\n> ==============================**==============================**=======\n> --- a/src/pkg/unicode/utf8/utf8.go\n> +++ b/src/pkg/unicode/utf8/utf8.go\n> @@ -6,13 +6,17 @@\n>  // UTF-8. It includes functions to translate between runes and UTF-8 byte\n> sequences.\n>  package utf8\n>\n> -import \"unicode\" // only needed for a couple of constants\n> +// The conditions RuneError==unicode.**ReplacementChar and\n> +// MaxRune==unicode.MaxRune are verified in the tests.\n> +// Defining them locally avoids this package depending on package\n> +// unicode.\n>\n>  // Numbers fundamental to the encoding.\n>  const (\n> -       RuneError = unicode.ReplacementChar // the \"error\" Rune or\n> \"replacement character\".\n> -       RuneSelf  = 0x80                    // characters below Runeself\n> are represented as themselves in a single byte.\n> -       UTFMax    = 4                       // maximum number of bytes of\n> a UTF-8 encoded Unicode character.\n> +       RuneError = '\\uFFFD'     // the \"error\" Rune or \"Unicode\n> replacement character\"\n> +       RuneSelf  = 0x80         // characters below Runeself are\n> represented as themselves in a single byte.\n> +       MaxRune   = '\\U0010FFFF' // Maximum valid Unicode code point.\n> +       UTFMax    = 4            // maximum number of bytes of a UTF-8\n> encoded Unicode character.\n>  )\n>\n>  const (\n> @@ -309,7 +313,7 @@\n>                return 2\n>        }\n>\n> -       if uint32(r) > unicode.MaxRune {\n> +       if uint32(r) > MaxRune {\n>                r = RuneError\n>        }\n>\n> Index: src/pkg/unicode/utf8/utf8_**test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/unicode/utf8/utf8_**test.go\n> +++ b/src/pkg/unicode/utf8/utf8_**test.go\n> @@ -7,9 +7,20 @@\n>  import (\n>        \"bytes\"\n>        \"testing\"\n> +       \"unicode\"\n>        . \"unicode/utf8\"\n>  )\n>\n> +// Validate the\n> +func init() {\n> +       if MaxRune != unicode.MaxRune {\n> +               panic(\"utf8.MaxRune is wrong\")\n> +       }\n> +       if RuneError != unicode.ReplacementChar {\n> +               panic(\"utf8.RuneError is wrong\")\n> +       }\n> +}\n> +\n>  type Utf8Map struct {\n>        r   rune\n>        str string\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-06 00:03:47.632940",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-03-06 00:00:25.849025",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=0916d0c46bb7 ***\n\nunicode/utf8: remove dependence on unicode.\nThe dependency was there only to pull in two constants.\nNow we define them locally and verify equality in the test.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5754046",
			"disapproval": false,
			"date": "2012-03-06 00:14:50.208540",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5754046: unicode/utf8: remove dependence on unicode.",
	"created": "2012-03-06 00:00:16.198465",
	"patchsets": [
		1,
		3001
	],
	"modified": "2012-03-06 00:14:53.551228",
	"closed": true,
	"issue": 5754046
}