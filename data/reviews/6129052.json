{
	"description": "syscall: add a test for passing an fd over a unix socket\n\nRe-submitting previously reverted change 160ec5506cb7.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"r@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6129052/diff/3002/src/pkg/syscall/passfd_test.go\nFile src/pkg/syscall/passfd_test.go (right):\n\nhttp://codereview.appspot.com/6129052/diff/3002/src/pkg/syscall/passfd_test.go#newcode47\nsrc/pkg/syscall/passfd_test.go:47: return // not fatalf, so defers above run.\nOn 2012/04/30 04:43:40, r wrote:\n> Fatalf should still run them, no? i double-checked the code for Fatalf.\n> ditto below.\n\nDone.\n\nhttp://codereview.appspot.com/6129052/diff/3002/src/pkg/syscall/passfd_test.go#newcode109\nsrc/pkg/syscall/passfd_test.go:109: // Look for our fd. I<t should be fd 3, but we work around an fd leak\nOn 2012/04/30 04:43:40, r wrote:\n> s/<//\n\nDone.\n\nhttp://codereview.appspot.com/6129052/diff/3002/src/pkg/syscall/passfd_test.go#newcode122\nsrc/pkg/syscall/passfd_test.go:122: fmt.Println(\"failed to find unix fd\")\nOn 2012/04/30 04:43:40, r wrote:\n> not a failure?\n> below too.\n\nThis isn't a test.  See the comment at the top of the \"Test\" function.  It's a child process that the parent test reads the output of.",
			"disapproval": false,
			"date": "2012-04-30 04:48:11.754357",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6129052/diff/7002/src/pkg/syscall/passfd_test.go\nFile src/pkg/syscall/passfd_test.go (right):\n\nhttp://codereview.appspot.com/6129052/diff/7002/src/pkg/syscall/passfd_test.go#newcode40\nsrc/pkg/syscall/passfd_test.go:40: cmd := exec.Command(os.Args[0], \"-test.run=TestPassFDChild\", \"--\", tempDir)\nOn 2012/04/30 04:55:07, r wrote:\n> it's a regexp. anchor it to be safe.\n\nDone.\n\nhttp://codereview.appspot.com/6129052/diff/7002/src/pkg/syscall/passfd_test.go#newcode95\nsrc/pkg/syscall/passfd_test.go:95: // Not a real test. This is the helper child process for TestPassFD.\nOn 2012/04/30 04:54:48, r wrote:\n> this bothers me. i see the trick but it's creepy that there's a test that looks\n> like a test in all respects, and even runs, but is responsible for its own\n> shutdown.\n> \n> you can put that logic into TestPassFD itself, since you have the env variable.\n> there, say\n> \n> if os.Getenv ... { passFDChild(); return }\n> \n> comment the hell out of it,  and change the name here\n\nDone.",
			"disapproval": false,
			"date": "2012-04-30 05:04:24.873285",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-30 04:48:25.645616",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6129052/diff/7002/src/pkg/syscall/passfd_test.go\nFile src/pkg/syscall/passfd_test.go (right):\n\nhttp://codereview.appspot.com/6129052/diff/7002/src/pkg/syscall/passfd_test.go#newcode95\nsrc/pkg/syscall/passfd_test.go:95: // Not a real test. This is the helper child process for TestPassFD.\nthis bothers me. i see the trick but it's creepy that there's a test that looks like a test in all respects, and even runs, but is responsible for its own shutdown.\n\nyou can put that logic into TestPassFD itself, since you have the env variable.\nthere, say\n\nif os.Getenv ... { passFDChild(); return }\n\ncomment the hell out of it,  and change the name here\n\nhttp://codereview.appspot.com/6129052/diff/7002/src/pkg/syscall/passfd_test.go#newcode96\nsrc/pkg/syscall/passfd_test.go:96: func TestPassFDChild(*testing.T) {\nthis bugs me.\n\nhow about putting this logic into TestP",
			"disapproval": false,
			"date": "2012-04-30 04:54:47.915053",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6129052/diff/7002/src/pkg/syscall/passfd_test.go\nFile src/pkg/syscall/passfd_test.go (right):\n\nhttp://codereview.appspot.com/6129052/diff/7002/src/pkg/syscall/passfd_test.go#newcode40\nsrc/pkg/syscall/passfd_test.go:40: cmd := exec.Command(os.Args[0], \"-test.run=TestPassFDChild\", \"--\", tempDir)\nit's a regexp. anchor it to be safe.",
			"disapproval": false,
			"date": "2012-04-30 04:55:07.531172",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org, r@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-30 05:08:41.657780",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-30 04:36:27.704220",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\r\nOn Apr 30, 2012, at 2:54 PM, r@golang.org wrote:\r\n\r\n> how about putting this logic into TestP\r\n\r\ncool. this is a bug in rietveld. the edit block died and i had to open another line to complete the comment\r\n\r\n",
			"disapproval": false,
			"date": "2012-04-30 04:57:11.745958",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6129052/diff/3002/src/pkg/syscall/passfd_test.go\nFile src/pkg/syscall/passfd_test.go (right):\n\nhttp://codereview.appspot.com/6129052/diff/3002/src/pkg/syscall/passfd_test.go#newcode47\nsrc/pkg/syscall/passfd_test.go:47: return // not fatalf, so defers above run.\nFatalf should still run them, no? i double-checked the code for Fatalf.\nditto below.\n\nhttp://codereview.appspot.com/6129052/diff/3002/src/pkg/syscall/passfd_test.go#newcode109\nsrc/pkg/syscall/passfd_test.go:109: // Look for our fd. I<t should be fd 3, but we work around an fd leak\ns/<//\n\nhttp://codereview.appspot.com/6129052/diff/3002/src/pkg/syscall/passfd_test.go#newcode122\nsrc/pkg/syscall/passfd_test.go:122: fmt.Println(\"failed to find unix fd\")\nnot a failure?\nbelow too.",
			"disapproval": false,
			"date": "2012-04-30 04:43:40.096891",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=15260ef90c98 ***\n\nsyscall: add a test for passing an fd over a unix socket\n\nRe-submitting previously reverted change 160ec5506cb7.\n\nR=golang-dev, r, r\nCC=golang-dev\nhttp://codereview.appspot.com/6129052",
			"disapproval": false,
			"date": "2012-04-30 05:31:25.823955",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org, r@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-30 05:03:44.609285",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6129052/diff/3004/src/pkg/syscall/passfd_test.go\nFile src/pkg/syscall/passfd_test.go (right):\n\nhttp://codereview.appspot.com/6129052/diff/3004/src/pkg/syscall/passfd_test.go#newcode22\nsrc/pkg/syscall/passfd_test.go:22: func TestPassFD(t *testing.T) {\n// The test calls itself using 'go test' to create the child process, using the\n// environment variable to identify the child.",
			"disapproval": false,
			"date": "2012-04-30 05:10:44.010534",
			"approval": true
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6129052: syscall: add a test for passing an fd over a unix socket",
	"created": "2012-04-30 04:35:29.666732",
	"patchsets": [
		1,
		2001,
		3002,
		7002,
		6002,
		3004,
		2003,
		9002
	],
	"modified": "2012-04-30 05:31:28.530137",
	"closed": true,
	"issue": 6129052
}