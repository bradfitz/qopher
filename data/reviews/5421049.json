{
	"description": "gofix: add googlecode module for rewriting Google Code imports\ngoinstall: disallow googlecode.com import paths",
	"cc": [
		"rsc@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-20 22:07:17.653435",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-11-21 15:07:56.035607",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I haven't been following this plan, but it seems unfortunate that we're\nrewriting imports into URLs that 404, such as:\n\nimport \"code.google.com/p/foo/bar\"\n\n*shrug*\n\n\nOn Sun, Nov 20, 2011 at 5:07 PM, <adg@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> gofix: add googlecode module for rewriting Google Code imports\n>\n> This will be checked in once goinstall has the -fix flag and has\n> been changed to reject the old googlecode.com import paths.\n>\n> Please review this at http://codereview.appspot.com/**5421049/<http://codereview.appspot.com/5421049/>\n>\n> Affected files:\n>  M src/cmd/gofix/Makefile\n>  A src/cmd/gofix/googlecode.go\n>  A src/cmd/gofix/googlecode_test.**go\n>\n>\n> Index: src/cmd/gofix/Makefile\n> ==============================**==============================**=======\n> --- a/src/cmd/gofix/Makefile\n> +++ b/src/cmd/gofix/Makefile\n> @@ -10,6 +10,7 @@\n>        filepath.go\\\n>        fix.go\\\n>        go1pkgrename.go\\\n> +       googlecode.go\\\n>        htmlerr.go\\\n>        httpfinalurl.go\\\n>        httpfs.go\\\n> Index: src/cmd/gofix/googlecode.go\n> ==============================**==============================**=======\n> new file mode 100644\n> --- /dev/null\n> +++ b/src/cmd/gofix/googlecode.go\n> @@ -0,0 +1,41 @@\n> +// Copyright 2011 The Go Authors.  All rights reserved.\n> +// Use of this source code is governed by a BSD-style\n> +// license that can be found in the LICENSE file.\n> +\n> +package main\n> +\n> +import (\n> +       \"go/ast\"\n> +       \"regexp\"\n> +)\n> +\n> +func init() {\n> +       register(googlecodeFix)\n> +}\n> +\n> +var googlecodeFix = fix{\n> +       \"googlecode\",\n> +       \"2011-11-21\",\n> +       googlecode,\n> +       `Rewrite Google Code imports from the deprecated form\n> +\"foo.googlecode.com/vcs/path\" to \"code.google.com/p/foo/path\".\n> +`,\n> +}\n> +\n> +var googlecodeRe = regexp.MustCompile(`^([a-z0-9\\**\n> -]+)\\.googlecode\\.com/(svn|**git|hg)(/[a-z0-9A-Z_.\\-/]+)?$`**)\n> +\n> +func googlecode(f *ast.File) bool {\n> +       fixed := false\n> +\n> +       for _, s := range f.Imports {\n> +               old := importPath(s)\n> +               if m := googlecodeRe.**FindStringSubmatch(old); m != nil {\n> +                       new := \"code.google.com/p/\" + m[1] + m[3]\n> +                       if rewriteImport(f, old, new) {\n> +                               fixed = true\n> +                       }\n> +               }\n> +       }\n> +\n> +       return fixed\n> +}\n> Index: src/cmd/gofix/googlecode_test.**go\n> ==============================**==============================**=======\n> new file mode 100644\n> --- /dev/null\n> +++ b/src/cmd/gofix/googlecode_**test.go\n> @@ -0,0 +1,31 @@\n> +// Copyright 2011 The Go Authors.  All rights reserved.\n> +// Use of this source code is governed by a BSD-style\n> +// license that can be found in the LICENSE file.\n> +\n> +package main\n> +\n> +func init() {\n> +       addTestCases(googlecodeTests, googlecode)\n> +}\n> +\n> +var googlecodeTests = []testCase{\n> +       {\n> +               Name: \"googlecode.0\",\n> +               In: `package main\n> +\n> +import (\n> +       \"foo.googlecode.com/hg/bar\"\n> +       \"go-qux-23.googlecode.com/svn\"\n> +       \"zap.googlecode.com/git/some/**path<http://zap.googlecode.com/git/some/path>\n> \"\n> +)\n> +`,\n> +               Out: `package main\n> +\n> +import (\n> +       \"code.google.com/p/foo/bar\"\n> +       \"code.google.com/p/go-qux-23\"\n> +       \"code.google.com/p/zap/some/**path<http://code.google.com/p/zap/some/path>\n> \"\n> +)\n> +`,\n> +       },\n> +}\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-11-21 15:28:37.027853",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Nov 21, 2011 at 10:28, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> I haven't been following this plan, but it seems unfortunate that we're\n> rewriting imports into URLs that 404, such as:\n\nI agree.  http://code.google.com/p/support/issues/detail?id=6043\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-21 15:47:50.183224",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nThis CL now includes the change to goinstall to disallow googlecode.com import paths.",
			"disapproval": false,
			"date": "2011-11-29 01:58:19.835964",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"adg@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-11-30 19:49:07.488506",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm going to submit this tomorrow if there are no objections.",
			"disapproval": false,
			"date": "2011-12-13 06:58:00.799845",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=5814ff585451 ***\n\ngofix: add googlecode module for rewriting Google Code imports\ngoinstall: disallow googlecode.com import paths\n\nR=rsc, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5421049",
			"disapproval": false,
			"date": "2011-12-13 21:46:28.810054",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Dec 13, 2011 at 01:58,  <adg@golang.org> wrote:\n> I'm going to submit this tomorrow if there are no objections.\n\nok.  it doesn't look like this has changed since i sent the LGTM\n",
			"disapproval": false,
			"date": "2011-12-13 18:20:40.268444",
			"approval": true
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5421049: gofix: add googlecode module for rewriting Google Code ...",
	"created": "2011-11-20 22:07:08.043352",
	"patchsets": [
		1,
		4001,
		7001,
		11001,
		16002
	],
	"modified": "2011-12-13 21:46:30.991427",
	"closed": true,
	"issue": 5421049
}