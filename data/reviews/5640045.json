{
	"description": "doc: expand code.html to discuss the go tool in more depth",
	"cc": [
		"golang-dev@googlegroups.com",
		"balasanjay@gmail.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think maybe instead of having a line like \" cat > newmath/sqrt.go\", you could instead say something like create a file named \"newmath/sqrt.go\" as follows: <contents of file here>. cat is an unforgiving editor, and this will allow people to use whatever editor they're familiar with. This will also allow you to get rid of the stuff about ^D.\n\nMaybe the \"Architecture- and operating system-specific code\" could get its own file. It's pretty detailed, and it's not really part of writing Go on a regular basis. This document could instead link to it in a \"Notes and Further Reading\" section.\n\nI don't think this tutorial makes it clear that GOPATH can be a list of elements. The one hint is where it says \"A GOPATH entry contains  ...\". I think that you should note this in more detail somewhere (this is also a good fit for a Notes section).\n\nLast, I think this section should say something about \"go fmt\". I imagine it will be used about as frequently as go build, and go install when writing Go packages.\n\nhttp://codereview.appspot.com/5640045/diff/4/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/4/doc/code.html#newcode115\ndoc/code.html:115: Let's create a new package under our <code>go.example</code> name space\nThe name space you were talking about previously was simply example.\n\nhttp://codereview.appspot.com/5640045/diff/4/doc/code.html#newcode122\ndoc/code.html:122: $ cat > newmath/sqrt.go\nShould escape the \">\"\n\nhttp://codereview.appspot.com/5640045/diff/4/doc/code.html#newcode207\ndoc/code.html:207: $ cat > hello/hello.go\nShould escape the \">\"\n\nhttp://codereview.appspot.com/5640045/diff/4/doc/code.html#newcode385\ndoc/code.html:385: <code><a href=\"http://localhost:6060/cmd/go/#Remote_import_path_syntax\">go help\nThis should be \"/cmd/go/#Remote_import_path_syntax\"",
			"disapproval": false,
			"date": "2012-02-07 07:52:32.171644",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-02-07 06:40:01.618237",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "comments on the rest\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode146\ndoc/code.html:146: This package is imported by its path name, starting after the <code>src</code>\nthe path name of the directory it's in\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode158\ndoc/code.html:158: The <code>go</code> tool takes several commands, the most central being\ns/takes/comprises/\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode165\ndoc/code.html:165: to the <code>pkg</code> or <code>bin</code> subdirectories of the\ns/subdirectories/subdirectory/\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode166\ndoc/code.html:166: <code>GOPATH</code> in which the package source resides.\nanother meaning of GOPATH\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode176\ndoc/code.html:176: $ go install example/newmath\nif you're in example/newmath, which you usually are when you're working on it, you only need\ngo install\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode180\ndoc/code.html:180: No output means that the package and all its dependencies were built correctly.\n\"No output\" is a confusing subject for a sentence, and grammatically ambigous.\n\nNo people mean to do that.\nNo people means to do that.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode232\ndoc/code.html:232: Then we run <code>go install</code>, which builds and installs the binary to\ns/Then/Next,/ ?\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode241\ndoc/code.html:241: To run the program, invoke it by name like you would any other command:\nthe subject of these sentences is sliding around: passive voice, you, it, we, ...\n\ndecide who the subject is and stick with it\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode255\ndoc/code.html:255: The <code>GOPATH</code> tree now looks like this:\nwhat's a GOPATH tree?\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode271\ndoc/code.html:271: When building a command the executable is written the current directory.\ntell them what it's called. it's not obvious.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode280\ndoc/code.html:280: Go has a lightweight test framework composed of the <code>go</code> tool and\nreally the go test subcommand\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode294\ndoc/code.html:294: Let's add a test to our <code>newmath</code> package by creating the file\nshifting subjects again\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode331\ndoc/code.html:331: revision control system (such as Git or Mercurial). This allows the\ndrop the parens\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode332\ndoc/code.html:332: <code>go</code> tool to automatically fetch packages from remote repositories.\nunsplit the infinitive\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode352\ndoc/code.html:352: like this:\nif it's already present but in a later directory, does it replace or override?",
			"disapproval": false,
			"date": "2012-02-29 03:32:53.096453",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, balasanjay@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-29 02:36:28.236361",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "comments on the first half\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode10\ndoc/code.html:10: installing, and fetching Go packages and commands.\ndon't you fetch before you build and install?\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode22\ndoc/code.html:22: the <code>GOPATH</code> environment variable.\nthis paragraph is correct but stilted. try a rewrite. say it out loud.\n\nalso you need to say what GOPATH is: what it means and its syntax. it's introduced badly.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode26\ndoc/code.html:26: A <code>GOPATH</code> entry contains Go source files, package objects, and\nwhat is a GOPATH entry? i thought it would just be the name of a directory.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode31\ndoc/code.html:31: <li>Source files are kept under <code>$GOPATH/src/<i>importpath</i></code>\nwhat is an importpath?\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode41\ndoc/code.html:41: in a directory are considered part of the one package.\nsubdirectories form independent packages\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode86\ndoc/code.html:86: $ mkdir -p $GOPATH/src/example\nset GOPATH",
			"disapproval": false,
			"date": "2012-02-29 03:05:13.524894",
			"approval": false
		},
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Didn't read it in depth, just skimmed it.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode125\ndoc/code.html:125: Then create a file named <code>$GOPATHsrc/example/newmath/sqrt.go</code>\ns/GOPATHsrc/GOPATH\\/src/",
			"disapproval": false,
			"date": "2012-02-29 09:00:42.773445",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode10\ndoc/code.html:10: installing, and fetching Go packages and commands.\nOn 2012/02/29 03:05:13, r wrote:\n> don't you fetch before you build and install?\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode22\ndoc/code.html:22: the <code>GOPATH</code> environment variable.\nOn 2012/02/29 03:05:13, r wrote:\n> this paragraph is correct but stilted. try a rewrite. say it out loud.\n> \n> also you need to say what GOPATH is: what it means and its syntax. it's\n> introduced badly.\n\nRewrote the whole section.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode26\ndoc/code.html:26: A <code>GOPATH</code> entry contains Go source files, package objects, and\nOn 2012/02/29 03:05:13, r wrote:\n> what is a GOPATH entry? i thought it would just be the name of a directory.\n\nwent with \"workspace\" throughout\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode31\ndoc/code.html:31: <li>Source files are kept under <code>$GOPATH/src/<i>importpath</i></code>\nOn 2012/02/29 03:05:13, r wrote:\n> what is an importpath?\n\nRemoved.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode41\ndoc/code.html:41: in a directory are considered part of the one package.\nOn 2012/02/29 03:05:13, r wrote:\n> subdirectories form independent packages\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode146\ndoc/code.html:146: This package is imported by its path name, starting after the <code>src</code>\nOn 2012/02/29 03:32:53, r wrote:\n> the path name of the directory it's in\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode158\ndoc/code.html:158: The <code>go</code> tool takes several commands, the most central being\nOn 2012/02/29 03:32:53, r wrote:\n> s/takes/comprises/\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode165\ndoc/code.html:165: to the <code>pkg</code> or <code>bin</code> subdirectories of the\nOn 2012/02/29 03:32:53, r wrote:\n> s/subdirectories/subdirectory/\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode166\ndoc/code.html:166: <code>GOPATH</code> in which the package source resides.\nOn 2012/02/29 03:32:53, r wrote:\n> another meaning of GOPATH\n\nFixed.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode176\ndoc/code.html:176: $ go install example/newmath\nOn 2012/02/29 03:32:53, r wrote:\n> if you're in example/newmath, which you usually are when you're working on it,\n> you only need\n> go install\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode180\ndoc/code.html:180: No output means that the package and all its dependencies were built correctly.\nOn 2012/02/29 03:32:53, r wrote:\n> \"No output\" is a confusing subject for a sentence, and grammatically ambigous.\n> \n> No people mean to do that.\n> No people means to do that.\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode232\ndoc/code.html:232: Then we run <code>go install</code>, which builds and installs the binary to\nOn 2012/02/29 03:32:53, r wrote:\n> s/Then/Next,/ ?\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode241\ndoc/code.html:241: To run the program, invoke it by name like you would any other command:\nOn 2012/02/29 03:32:53, r wrote:\n> the subject of these sentences is sliding around: passive voice, you, it, we,\n> ...\n> \n> decide who the subject is and stick with it\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode255\ndoc/code.html:255: The <code>GOPATH</code> tree now looks like this:\nOn 2012/02/29 03:32:53, r wrote:\n> what's a GOPATH tree?\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode271\ndoc/code.html:271: When building a command the executable is written the current directory.\nOn 2012/02/29 03:32:53, r wrote:\n> tell them what it's called. it's not obvious.\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode280\ndoc/code.html:280: Go has a lightweight test framework composed of the <code>go</code> tool and\nOn 2012/02/29 03:32:53, r wrote:\n> really the go test subcommand\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode294\ndoc/code.html:294: Let's add a test to our <code>newmath</code> package by creating the file\nOn 2012/02/29 03:32:53, r wrote:\n> shifting subjects again\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode331\ndoc/code.html:331: revision control system (such as Git or Mercurial). This allows the\nOn 2012/02/29 03:32:53, r wrote:\n> drop the parens\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode332\ndoc/code.html:332: <code>go</code> tool to automatically fetch packages from remote repositories.\nOn 2012/02/29 03:32:53, r wrote:\n> unsplit the infinitive\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/7001/doc/code.html#newcode352\ndoc/code.html:352: like this:\nOn 2012/02/29 03:32:53, r wrote:\n> if it's already present but in a later directory, does it replace or override?\n\nDone.",
			"disapproval": false,
			"date": "2012-03-01 05:11:34.014848",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode8\ndoc/code.html:8: This document details the development of a simple Go package and introduces the\nOn 2012/03/01 05:45:01, r wrote:\n> s/details/demonstrates/\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode9\ndoc/code.html:9: <a href=\"/cmd/go/\">go tool</a>, the standard tool for fetching, building, and\nOn 2012/03/01 05:45:01, r wrote:\n> maybe\n> the standard way to fetch, ...\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode9\ndoc/code.html:9: <a href=\"/cmd/go/\">go tool</a>, the standard tool for fetching, building, and\nOn 2012/03/01 05:45:01, r wrote:\n> i'd rather you called this the \"go command\", since there are also \"go tools\".\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode21\ndoc/code.html:21: configuration files to build Go code. Instead, it uses the source code to find\nOn 2012/03/01 05:45:01, r wrote:\n> or other configuration files to guide program construction.\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode27\ndoc/code.html:27: The one thing you must configure is the <code>GOPATH</code> environment\nOn 2012/03/01 05:45:01, r wrote:\n> The one thing  you must do is set a GOPATH...\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode27\ndoc/code.html:27: The one thing you must configure is the <code>GOPATH</code> environment\nOn 2012/03/01 05:45:01, r wrote:\n> The one thing  you must do is set a GOPATH...\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode29\ndoc/code.html:29: tools) where to find the Go packages on your system.\nOn 2012/03/01 05:45:01, r wrote:\n> s/find/& and install/\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode43\ndoc/code.html:43: (On a Windows system we use semicolons as the path separator instead of\nOn 2012/03/01 05:45:01, r wrote:\n> s/ we/,/\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode49\ndoc/code.html:49: <code>/home/user/mygo</code>) specifies the location of a workspace.\nOn 2012/03/01 05:45:01, r wrote:\n> italicise workspace and define it by by deleting the the paragraph break.\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode53\ndoc/code.html:53: A workspace contains Go source files, package objects, and command executables.\nOn 2012/03/01 05:45:01, r wrote:\n> s/.$/\n> forming a self-contained set of Go programs.\n\nIt's not exactly a self-contained set, as packages in one workspace may depend on packages from another. I know what you mean, though. I went with:\n\n\"A workspace contains Go source files and their associated package objects, and command executables.\"\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode64\ndoc/code.html:64: Subdirectories of the <code>src</code> directory form independent packages, and\nOn 2012/03/01 05:45:01, r wrote:\n> s/form/hold/\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode66\ndoc/code.html:66: <code>.s</code>) in one of these subdirectories are considered part of the same\nOn 2012/03/01 05:45:01, r wrote:\n> in each subdirectory are elements of that subdirectory's package.\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode73\ndoc/code.html:73: and then &mdash; if the package source isn't found there &mdash; it searches\nOn 2012/03/01 05:45:01, r wrote:\n> no spaces around the dashes.\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode78\ndoc/code.html:78: Multiple workspaces can <code>GOPATH</code> offer some flexibility and\nOn 2012/03/01 05:45:01, r wrote:\n> delete GOPATH - it's nonsense otherwise\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode80\ndoc/code.html:80: To get started, create a <code>$HOME/mygo</code> directory and set it as the\nOn 2012/03/01 05:45:01, r wrote:\n> start  a new paragraph, section maybe\n> \n> Let's work through a simple example. First, create ...\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode97\ndoc/code.html:97: libraries.\nOn 2012/03/01 05:45:01, r wrote:\n> not sure you want to say this. it's actually not that important and it'll\n> encourage people to create reallyLongNamesThatAreSureToBeUnique. maybe refer to\n> effective go instead. hash is a fine package name.\n\nhash is a fine package name, but we're already using it, and this paragraph is about import paths, not package names. I understand your fear but I think the example we give in the next couple of paragraphs should steer people in the right direction.\n\n> also it might be worth reiterating the difference between packages and path\n> names, or at least referring to effective go if the concepts are unclear.\n\nDone.\n\nAlso added a \"Further reading\" section to the end of the document.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode101\ndoc/code.html:101: A convenient way to choose a name space is to use the location of your version\nOn 2012/03/01 05:45:01, r wrote:\n> s/A convenient/The best/\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode119\ndoc/code.html:119: We'll use <code>example/</code> as our name space:\nOn 2012/03/01 05:45:01, r wrote:\n> maybe code.google.com?\n\nI'd prefer to stick with the shorter name for now, so we can demonstrate go get later.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode200\ndoc/code.html:200: The <code>go</code> tool comprises several commands, the most central being\nOn 2012/03/01 05:45:01, r wrote:\n> here use\n> The go command comprises several subcommands, \n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode301\ndoc/code.html:301: To run the program, invoke it by name like you would any other command:\nOn 2012/03/01 05:45:01, r wrote:\n> s/like/as/\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode400\ndoc/code.html:400: this property to automatically fetch packages from remote repositories.\nOn 2012/03/01 05:45:01, r wrote:\n> unsplit\n\nDone.",
			"disapproval": false,
			"date": "2012-03-01 22:42:07.993578",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 1 March 2012 16:11,  <adg@golang.org> wrote:\n> LGTM\n\nUh, I mean PTAL.\n",
			"disapproval": false,
			"date": "2012-03-01 05:13:04.901939",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "this is much better\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode8\ndoc/code.html:8: This document details the development of a simple Go package and introduces the\ns/details/demonstrates/\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode9\ndoc/code.html:9: <a href=\"/cmd/go/\">go tool</a>, the standard tool for fetching, building, and\nmaybe\nthe standard way to fetch, ...\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode9\ndoc/code.html:9: <a href=\"/cmd/go/\">go tool</a>, the standard tool for fetching, building, and\ni'd rather you called this the \"go command\", since there are also \"go tools\".\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode21\ndoc/code.html:21: configuration files to build Go code. Instead, it uses the source code to find\nor other configuration files to guide program construction.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode23\ndoc/code.html:23: build scripts are always in sync; they are one and the same.\nnice.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode27\ndoc/code.html:27: The one thing you must configure is the <code>GOPATH</code> environment\nThe one thing  you must do is set a GOPATH...\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode29\ndoc/code.html:29: tools) where to find the Go packages on your system.\ns/find/& and install/\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode43\ndoc/code.html:43: (On a Windows system we use semicolons as the path separator instead of\ns/ we/,/\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode49\ndoc/code.html:49: <code>/home/user/mygo</code>) specifies the location of a workspace.\nitalicise workspace and define it by by deleting the the paragraph break.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode53\ndoc/code.html:53: A workspace contains Go source files, package objects, and command executables.\ns/.$/\nforming a self-contained set of Go programs.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode64\ndoc/code.html:64: Subdirectories of the <code>src</code> directory form independent packages, and\ns/form/hold/\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode66\ndoc/code.html:66: <code>.s</code>) in one of these subdirectories are considered part of the same\nin each subdirectory are elements of that subdirectory's package.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode73\ndoc/code.html:73: and then &mdash; if the package source isn't found there &mdash; it searches\nno spaces around the dashes.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode78\ndoc/code.html:78: Multiple workspaces can <code>GOPATH</code> offer some flexibility and\ndelete GOPATH - it's nonsense otherwise\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode80\ndoc/code.html:80: To get started, create a <code>$HOME/mygo</code> directory and set it as the\nstart  a new paragraph, section maybe\n\nLet's work through a simple example. First, create ...\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode97\ndoc/code.html:97: libraries.\nnot sure you want to say this. it's actually not that important and it'll encourage people to create reallyLongNamesThatAreSureToBeUnique. maybe refer to effective go instead. hash is a fine package name.\nalso it might be worth reiterating the difference between packages and path names, or at least referring to effective go if the concepts are unclear.\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode101\ndoc/code.html:101: A convenient way to choose a name space is to use the location of your version\ns/A convenient/The best/\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode119\ndoc/code.html:119: We'll use <code>example/</code> as our name space:\nmaybe code.google.com?\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode200\ndoc/code.html:200: The <code>go</code> tool comprises several commands, the most central being\nhere use\nThe go command comprises several subcommands,\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode301\ndoc/code.html:301: To run the program, invoke it by name like you would any other command:\ns/like/as/\n\nhttp://codereview.appspot.com/5640045/diff/12001/doc/code.html#newcode400\ndoc/code.html:400: this property to automatically fetch packages from remote repositories.\nunsplit",
			"disapproval": false,
			"date": "2012-03-01 05:45:00.871894",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "getting close\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode47\ndoc/code.html:47: Each path in the list (in this case <code>/home/user/ext</code> and\ns/and/or/ \nnumber error\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode85\ndoc/code.html:85: $ mkdir -p $GOPATH/src      # create a place to put source code\nmaybe also put $GOPATH/bin into $PATH. at least suggest it\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode92\ndoc/code.html:92: The standard packages are given short import paths like <code>\"fmt\"</code> and\ns/like/such as/\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode96\ndoc/code.html:96: libraries.\ni still think this is confusing. there are two pieces, package name and the import path, and the way you introduce them confuses matters because these are the same for fmt. also, the term 'name space' is undefined. rewrite so it's clear there are two pieces and that  it's only the import path that has uniqueness issues.\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode126\ndoc/code.html:126: (Assuming that you still have <code>GOPATH</code> set from the previous\nnot a sentence. not even sure what it's about.\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode197\ndoc/code.html:197: Go's naming conventions.\nwhy all the way down here?\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode233\ndoc/code.html:233: has the same affect as the one above:\ns/:/, assuming GOPATH has only the one entry:\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode316\ndoc/code.html:316: their full path.\nok, although it's probably better to mention this earlier and make this a callback",
			"disapproval": false,
			"date": "2012-03-01 23:11:56.597312",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode47\ndoc/code.html:47: Each path in the list (in this case <code>/home/user/ext</code> and\nOn 2012/03/01 23:11:56, r wrote:\n> s/and/or/ \n> number error\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode85\ndoc/code.html:85: $ mkdir -p $GOPATH/src      # create a place to put source code\nOn 2012/03/01 23:11:56, r wrote:\n> maybe also put $GOPATH/bin into $PATH. at least suggest it\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode92\ndoc/code.html:92: The standard packages are given short import paths like <code>\"fmt\"</code> and\nOn 2012/03/01 23:11:56, r wrote:\n> s/like/such as/\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode96\ndoc/code.html:96: libraries.\nOn 2012/03/01 23:11:56, r wrote:\n> i still think this is confusing. there are two pieces, package name and the\n> import path, and the way you introduce them confuses matters because these are\n> the same for fmt. also, the term 'name space' is undefined. rewrite so it's\n> clear there are two pieces and that  it's only the import path that has\n> uniqueness issues.\n\nI think when read top-to-bottom the effect is that they are introduced as distinct elements. Maybe I'm wrong. I'll read over it and think about it some more.\n\nRemoved references to \"name space\", using \"base import path\" instead.\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode126\ndoc/code.html:126: (Assuming that you still have <code>GOPATH</code> set from the previous\nOn 2012/03/01 23:11:56, r wrote:\n> not a sentence. not even sure what it's about.\n\nDone.\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode197\ndoc/code.html:197: Go's naming conventions.\nOn 2012/03/01 23:11:56, r wrote:\n> why all the way down here?\n\nI figure that this is the point where they might still be saying \"huh?\" I don't want to send them off to another document before reading this section.\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode233\ndoc/code.html:233: has the same affect as the one above:\nOn 2012/03/01 23:11:56, r wrote:\n> s/:/, assuming GOPATH has only the one entry:\n\nThis is assumed from the beginning of the document...\n\nhttp://codereview.appspot.com/5640045/diff/14002/doc/code.html#newcode316\ndoc/code.html:316: their full path.\nOn 2012/03/01 23:11:56, r wrote:\n> ok, although it's probably better to mention this earlier and make this a\n> callback\n\nDone.",
			"disapproval": false,
			"date": "2012-03-02 03:11:26.108274",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=fc74ef570a49 ***\n\ndoc: expand code.html to discuss the go tool in more depth\n\nR=golang-dev, balasanjay, r\nCC=golang-dev\nhttp://codereview.appspot.com/5640045\n\nhttp://codereview.appspot.com/5640045/diff/19001/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/19001/doc/code.html#newcode91\ndoc/code.html:91: Add the following lines to <code>$HOME/.profile</code> (or equivalent):\nOn 2012/03/02 04:33:26, r wrote:\n> If you want to do this, add...\n\nDone, but without the if. They should do it.",
			"disapproval": false,
			"date": "2012-03-02 04:35:42.106745",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"balasanjay@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5640045/diff/19001/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5640045/diff/19001/doc/code.html#newcode91\ndoc/code.html:91: Add the following lines to <code>$HOME/.profile</code> (or equivalent):\nIf you want to do this, add...",
			"disapproval": false,
			"date": "2012-03-02 04:33:25.855664",
			"approval": true
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5640045: doc: expand code.html to discuss the go tool in more depth",
	"created": "2012-02-07 01:57:33.257660",
	"patchsets": [
		1,
		1002,
		3001,
		4,
		7001,
		12001,
		14002,
		19001,
		23002
	],
	"modified": "2012-03-02 04:35:44.318872",
	"closed": true,
	"issue": 5640045
}