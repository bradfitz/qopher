{
	"description": "html/template: clean up locking for ExecuteTemplate",
	"cc": [
		"mikesamuel@gmail.com",
		"rogpeppe@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"mikesamuel@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello mikesamuel@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-07 19:23:24.708036",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn 7 December 2011 19:23,  <r@golang.org> wrote:\n> Reviewers: MikeSamuel,\n>\n> Message:\n> Hello mikesamuel@gmail.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> html/template: clean up locking for ExecuteTemplate\n>\n> Please review this at http://codereview.appspot.com/5448137/\n>\n> Affected files:\n> \u00a0M src/pkg/html/template/template.go\n>\n>\n> Index: src/pkg/html/template/template.go\n> ===================================================================\n> --- a/src/pkg/html/template/template.go\n> +++ b/src/pkg/html/template/template.go\n> @@ -49,20 +49,28 @@\n>\n> \u00a0// ExecuteTemplate applies the template associated with t that has the\n> given\n> \u00a0// name to the specified data object and writes the output to wr.\n> -func (t *Template) ExecuteTemplate(wr io.Writer, name string, data\n> interface{}) (err error) {\n> +func (t *Template) ExecuteTemplate(wr io.Writer, name string, data\n> interface{}) error {\n> + \u00a0 \u00a0 \u00a0 tmpl, err := t.lookupAndEscapeTemplate(wr, name)\n> + \u00a0 \u00a0 \u00a0 if err != nil {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\n> + \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 return tmpl.text.Execute(wr, data)\n> +}\n> +\n> +// lookupAndEscapeTemplate guarantees that the template with the given name\n> +// is escaped, or returns an error if it cannot be. It returns the named\n> +// template.\n> +func (t *Template) lookupAndEscapeTemplate(wr io.Writer, name string) (tmpl\n> *Template, err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0t.nameSpace.mu.Lock()\n> - \u00a0 \u00a0 \u00a0 tmpl := t.set[name]\n> + \u00a0 \u00a0 \u00a0 defer t.nameSpace.mu.Unlock()\n> + \u00a0 \u00a0 \u00a0 tmpl = t.set[name]\n> \u00a0 \u00a0 \u00a0 \u00a0if (tmpl == nil) != (t.text.Lookup(name) == nil) {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0panic(\"html/template internal error: template escaping out of\n> sync\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0if tmpl != nil && !tmpl.escaped {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0err = escapeTemplates(tmpl, name)\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> - \u00a0 \u00a0 \u00a0 t.nameSpace.mu.Unlock()\n> - \u00a0 \u00a0 \u00a0 if err != nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return\n> - \u00a0 \u00a0 \u00a0 }\n> - \u00a0 \u00a0 \u00a0 return t.text.ExecuteTemplate(wr, name, data)\n> + \u00a0 \u00a0 \u00a0 return tmpl, err\n> \u00a0}\n>\n> \u00a0// Parse parses a string into a template. Nested template definitions\n>\n>\n",
			"disapproval": false,
			"date": "2011-12-08 11:46:29.430323",
			"approval": true
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"r@golang.org",
				"mikesamuel@gmail.com",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-12-08 13:54:04.929616",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"mikesamuel@gmail.com",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=648ada5634e3 ***\n\nhtml/template: clean up locking for ExecuteTemplate\n\nR=mikesamuel, rogpeppe\nCC=golang-dev\nhttp://codereview.appspot.com/5448137",
			"disapproval": false,
			"date": "2011-12-08 18:15:59.870769",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5448137: html/template: clean up locking for ExecuteTemplate",
	"created": "2011-12-07 19:23:22.233741",
	"patchsets": [
		1,
		4001
	],
	"modified": "2011-12-09 17:37:15.086007",
	"closed": true,
	"issue": 5448137
}