{
	"description": "net/url: consolidated and cleaned URL field handling\n\nRawPath now contains a previously encoded path only,\nrather than duplicating the content of RawQuery.\n\nString uses RawPath if it is available, before\nconsidering Path, in the same way that the http\npackage used to do, but it will then append the\nRawQuery to either.\n\nEncodedPath was removed and a new QueryPath method\nwas introduced. QueryPath assembles an encoded path\nand query string, which is similar to what was\npreviously available in RawPath. This is used by\nhttp, http/cgi and httputil.\n\nAs a result, URL.String, URL.QueryPath, and http's\nrequest handling all use exactly the same logic for\nbuilding URLs, in no circumstance is the RawQuery\nparameter ignored, and RawPath always takes\nprecedence over Path unless the former isn't set.\n\nThis CL breaks compatibility in a way that can't be\ngofixed entirely due to the change in RawPath and\nRawQuery handling.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org",
		"bradfitz@golang.org",
		"gustavo@niemeyer.net"
	],
	"messages": [
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-02 02:27:48.661312",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-02 02:34:56.718432",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5448078/diff/6013/src/pkg/net/url/url.go\nFile src/pkg/net/url/url.go (right):\n\nhttp://codereview.appspot.com/5448078/diff/6013/src/pkg/net/url/url.go#newcode273\nsrc/pkg/net/url/url.go:273: RawPath      string // /path encoded\nI stopped reviewing the patch right here.\n\nThis is LESS clear than it was before.  The entire reason I cleaned up the Raw stuff elsewhere was for clarity.  I was hoping we could actually delete some Raw stuff here.  But you're just changing it?  I don't see how, though.  If we're keeping all this RawFoo, it'll need like a bunch more docs, and probably more than these single trailing line comments.  I'd document the precedence of various fields here too, even if they're documented elsewhere.",
			"disapproval": false,
			"date": "2011-12-05 16:21:12.284867",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> This is LESS clear than it was before.  The entire reason I cleaned up the Raw\n\nHow is it less clear? RawPath now contains a raw.. path! RawQuery contains the RawQuery, which is not ignored anymore blindly, and all of the bits that use such information use it consistently.\n\nIf you disagree with that, I'd appreciate understanding why.\n\n> stuff elsewhere was for clarity.  I was hoping we could actually delete some Raw\n> stuff here.  But you're just changing it?  I don't see how, though.  If we're\n\nWe can, but Russ said they're useful, so I'm proposing a way that improves consistency and clarity  while preserving the functionality.\n\nI'm open to suggestions, though.\n\n> keeping all this RawFoo, it'll need like a bunch more docs, and probably more\n> than these single trailing line comments.  I'd document the precedence of\n> various fields here too, even if they're documented elsewhere.\n\nI'll be very happy to improve that if we agree on the overall direction.",
			"disapproval": false,
			"date": "2011-12-05 16:35:15.410274",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I agree this is still not ideal. Will think more about the problem.\n\nAlright, I've got a much better plan. Will send a design proposal to\nthe list later today.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2011-12-06 14:44:38.859875",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I agree this is still not ideal. Will think more about the problem.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2011-12-06 03:38:08.195672",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2011-12-06 14:36:43.727919",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Dec 5, 2011 at 8:35 AM, <n13m3y3r@gmail.com> wrote:\n\n>\n>  This is LESS clear than it was before.  The entire reason I cleaned up\n>>\n> the Raw\n>\n> How is it less clear? RawPath now contains a raw.. path! RawQuery\n> contains the RawQuery, which is not ignored anymore blindly, and all of\n> the bits that use such information use it consistently.\n>\n> If you disagree with that, I'd appreciate understanding why.\n\n\nWhy do we need both Path and RawPath?\n\nBefore I could look at the comments and see which field name meant what\nfrom the comment examples, but now I see two things named Path with the\nsame comment.  What is their precedence?\n\nWe have 10 fields here.\n\nIf I'm a server and something hands me a URL, which of those 10 fields are\nset? and since all 10 are public, I need to know the precedence rules.\n What are they?\n\nIf I'm a client and need to give somebody a URL, which of those 10 fields\ndo I need to set?\n\nRe-reading your CL description, it's clear that you cleaned something, but\nI still find this all very confusing.\n\nI think if I were to rewrite this, I'd unexport the Raw fields and turn\nthem into methods.  Then if they weren't set, they could default to the\nnon-raw versions.  But Parse could set them.\n\nBut then it's still confusing because if Parse sets them and you change the\nexported Path, does the hidden rawPath still take precedence?  :-/\n",
			"disapproval": false,
			"date": "2011-12-05 16:47:21.499008",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Re-reading your CL description, it's clear that you cleaned something, but I\n> still find this all very confusing.\n\nIf we agree to let go the functionality, the Raw fields can be dropped.\n\nFrom Russ' description, I understood they are necessary so that one\ncan deliver hand-tuned queries to the server, which would be encoded\ndifferently if raw-encoded from the decoded version. The current state\nof this CL preserves that functionality.\n\nShould we drop them?\n\n> I think if I were to rewrite this, I'd unexport the Raw fields and turn them\n> into methods. \u00a0Then if they weren't set, they could default to the non-raw\n> versions. \u00a0But Parse could set them.\n\nWe don't even need independent methods for each of those fields. For\nhttp all we need is already within the QueryPath method, and that's a\ngood thing because it means anyone that wants that information will\nhave it aggregated consistently (already being used in httputil and\ncgi).\n\n> But then it's still confusing because if Parse sets them and you change the\n> exported Path, does the hidden rawPath still take precedence? \u00a0:-/\n\nThere's no point in having a hidden raw path, nor to have accessor\nmethods for them. The reason they are there is to *build* URLs that\nmarshal in custom ways. If we let that go, we can drop them entirely.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2011-12-05 16:57:21.073250",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2011-12-23 00:51:00.101464",
			"approval": false
		}
	],
	"owner_email": "n13m3y3r@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "niemeyer",
	"subject": "code review 5448078: net/url: consolidated and cleaned URL field handling",
	"created": "2011-12-01 19:54:53.193238",
	"patchsets": [
		1,
		2001,
		3,
		5001,
		3002,
		6013
	],
	"modified": "2011-12-23 00:51:02.493093",
	"closed": true,
	"issue": 5448078
}