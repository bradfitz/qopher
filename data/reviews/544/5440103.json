{
	"description": "image: avoid func comparison during ColorModel comparison\n\nWhen I disallowed map + func comparisons, I only did it\nin the static case and missed the comparisons via == on\ninterface values.  Fixing that turned these up.",
	"cc": [
		"nigeltao@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Dec 5, 2011 at 20:10,  <nigeltao@golang.org> wrote:\n> I think that this should return a color.SingleColorModel (which would be\n> a new type), instead of having image.Uniform implement color.Model, but\n> that can be a follow-up CL.\n\nyou're already implementing color.Color.  why not one more?\nthe separate type is not adding anything, except an allocation.\n\nruss\n",
			"disapproval": false,
			"date": "2011-12-06 01:30:08.133313",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=26c455df123d ***\n\nimage: avoid func comparison during ColorModel comparison\n\nWhen I disallowed map + func comparisons, I only did it\nin the static case and missed the comparisons via == on\ninterface values.  Fixing that turned these up.\n\nR=nigeltao, r\nCC=golang-dev\nhttp://codereview.appspot.com/5440103",
			"disapproval": false,
			"date": "2011-12-06 15:47:45.330519",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao, r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-05 15:13:56.871297",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but wait for nigeltao\n\nhttp://codereview.appspot.com/5440103/diff/3003/src/pkg/image/color/color.go\nFile src/pkg/image/color/color.go (right):\n\nhttp://codereview.appspot.com/5440103/diff/3003/src/pkg/image/color/color.go#newcode143\nsrc/pkg/image/color/color.go:143: // are no longer comparable.\nthe 'no longer' will lose relevance over time\n\nThis is not possible if we use the func value directly because funcs cannot be compared.",
			"disapproval": false,
			"date": "2011-12-05 17:59:23.246501",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nhttp://codereview.appspot.com/5440103/diff/3003/src/pkg/image/names.go\nFile src/pkg/image/names.go (right):\n\nhttp://codereview.appspot.com/5440103/diff/3003/src/pkg/image/names.go#newcode33\nsrc/pkg/image/names.go:33: return c\nI think that this should return a color.SingleColorModel (which would be a new type), instead of having image.Uniform implement color.Model, but that can be a follow-up CL.",
			"disapproval": false,
			"date": "2011-12-06 01:10:02.770949",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2011-12-06 04:15:06.334657",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5440103: image: avoid func comparison during ColorModel comparison",
	"created": "2011-12-05 15:11:50.615174",
	"patchsets": [
		1,
		2001,
		3003,
		1007
	],
	"modified": "2011-12-06 15:47:45.907736",
	"closed": true,
	"issue": 5440103
}