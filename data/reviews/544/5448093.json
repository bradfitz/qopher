{
	"description": "crypto/tls: Improve TLS Client Authentication\n\nFix incorrect marshal/unmarshal of certificateRequest.\nAdd support for configuring client-auth on the server side.\nFix the certificate selection in the client side.\nUpdate generate_cert.go to new time package\n\nFixes issue 2521.",
	"cc": [
		"krautz@gmail.com",
		"agl@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com",
		"mikkel@krautz.dk"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"jra@nella.org",
				"agl@chromium.org",
				"krautz@gmail.com",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "A few comments.\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/common.go\nFile src/pkg/crypto/tls/common.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/common.go#newcode162\nsrc/pkg/crypto/tls/common.go:162: AuthenticateClientRequired bool\nThis does not require a valid certificate if AuthenticateClientCAs == nil.\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/common.go#newcode166\nsrc/pkg/crypto/tls/common.go:166: // client certificates are not verified.\nMaybe: \"If nil, client certificates are not verified, but are all deemed valid.\" to remedy the issue above.\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/common.go#newcode167\nsrc/pkg/crypto/tls/common.go:167: AuthenticateClientCAs *x509.CertPool\nMaybe just 'ClientCAs' (in line with RootCAs)?\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/handshake_messages.go\nFile src/pkg/crypto/tls/handshake_messages.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/handshake_messages.go#newcode884\nsrc/pkg/crypto/tls/handshake_messages.go:884: tot := 0\nMaybe call this caLen like in the unmarshal case?\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/handshake_server.go\nFile src/pkg/crypto/tls/handshake_server.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/handshake_server.go#newcode176\nsrc/pkg/crypto/tls/handshake_server.go:176: // See if there is a client certificate\nI don't like the extra code, but...\n\nPer RFC 4346, 7.4.6:\n\nIf no suitable certificate is available, the client SHOULD send a certificate message containingno certificates.  That is, the certificate_list structure has a length of zero.\n\nSo this is correct. I assume you've run into something that doesn't send a certificateMsg in response? A browser? Just curious.",
			"disapproval": false,
			"date": "2011-12-03 02:07:35.876508",
			"approval": false
		},
		{
			"sender": "jra@nella.org",
			"recipients": [
				"jra@nella.org",
				"agl@chromium.org",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@chromium.org (cc: golang-dev@googlegroups.com, mikkel@krautz.dk),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-03 01:08:16.604485",
			"approval": false
		},
		{
			"sender": "jra@nella.org",
			"recipients": [
				"jra@nella.org",
				"agl@chromium.org",
				"krautz@gmail.com",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/common.go\nFile src/pkg/crypto/tls/common.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/common.go#newcode162\nsrc/pkg/crypto/tls/common.go:162: AuthenticateClientRequired bool\nMaybe I should just s/valid//. Because what AuthenticateClientRequired triggers is the check that the client really gave us something, and what AuthenticateClientCAs triggers is a validation on what they gave.\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/handshake_messages.go\nFile src/pkg/crypto/tls/handshake_messages.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/handshake_messages.go#newcode884\nsrc/pkg/crypto/tls/handshake_messages.go:884: tot := 0\nOn 2011/12/03 02:07:35, mkrautz wrote:\n> Maybe call this caLen like in the unmarshal case?\n\nDone.\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/handshake_server.go\nFile src/pkg/crypto/tls/handshake_server.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/handshake_server.go#newcode176\nsrc/pkg/crypto/tls/handshake_server.go:176: // See if there is a client certificate\nNo, honestly, I didn't see that SHOULD in the spec. I made it this way out of defensive principles: if they forget to send it, and we are allowed to handshake with no client cert, then why not keep going?",
			"disapproval": false,
			"date": "2011-12-03 02:42:44.323431",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"jra@nella.org",
				"agl@chromium.org",
				"krautz@gmail.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/common.go\nFile src/pkg/crypto/tls/common.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/5001/src/pkg/crypto/tls/common.go#newcode156\nsrc/pkg/crypto/tls/common.go:156: AuthenticateClient bool\nI think the API should look something like this:\n\ntype ClientAuthType int\n\nconst (\n  NoClientCert ClientAuthType = iota\n  RequestClientCert\n  RequireAnyClientCert\n  VerifyClientCertIfGiven\n  RequireAndVerifyClientCert\n)\n\ntype Config struct {\n  ...\n  ClientAuth ClientAuthType\n  ClientCAs *x509.CertPool\n}\n\nWhere \"Request\" means send a CertificateRequest, \"Require\" means, \"Request\" + reject a connection where the Certificate is empty. \"Verify\" means \"Request\" + reject a connection where a non-empty certificate doesn't match \"ClientCAs\" (but an empty certificate is still possible.) \"RequireAndVerify\" means that every connection must have a verified certificate.\n\nHaving lead the SSL code at Google, the various types of client-auth have lead to confusion and explicit names like this help a lot.",
			"disapproval": false,
			"date": "2011-12-05 17:29:30.041227",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"jra@nella.org",
				"krautz@gmail.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please let me know when I should take another look.\n\nCheers\n\nAGL",
			"disapproval": false,
			"date": "2011-12-10 21:47:17.687231",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Could you change this CL's subject line to be more descriptive?  We've\nalready had 11,046 CLs which \"improve\" things.\n\nOn Thu, Dec 22, 2011 at 8:02 AM, <jra@nella.org> wrote:\n\n> Hello krautz@gmail.com, agl@golang.org (cc: golang-dev@googlegroups.com,\n> mikkel@krautz.dk),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**5448093/<http://codereview.appspot.com/5448093/>\n>\n",
			"disapproval": false,
			"date": "2011-12-22 19:02:03.691311",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"jra@nella.org",
				"krautz@gmail.com",
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "(Drive-by comments.  Consider agl the real reviewer still.)\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/common.go\nFile src/pkg/crypto/tls/common.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/common.go#newcode164\nsrc/pkg/crypto/tls/common.go:164: // TLS Client Authentication.\nWhat's the default?\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/generate_cert.go\nFile src/pkg/crypto/tls/generate_cert.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/generate_cert.go#newcode34\nsrc/pkg/crypto/tls/generate_cert.go:34: now := time.Now().In(time.UTC)\nWhy In(time.UTC)?\n\nThe time.Now() and time.Now().In(time.UTC) are always the exact same moment in time.\n\nThe zone is only for printing.  I don't think this is ever printed anywhere; just compared.\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/generate_cert.go#newcode42\nsrc/pkg/crypto/tls/generate_cert.go:42: NotBefore: now.Add(-300 * time.Second),\nSub(5 * time.Minute)\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/generate_cert.go#newcode44\nsrc/pkg/crypto/tls/generate_cert.go:44: NotAfter: now.Add(60 * 60 * 24 * 365 * time.Second),\nAdd(365 * 24 * time.Hour)\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/x509/verify.go\nFile src/pkg/crypto/x509/verify.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/x509/verify.go#newcode163\nsrc/pkg/crypto/x509/verify.go:163: if opts.Roots == nil {\nthis may not be needed anymore, since findVerifiedParents at tip now doesn't crash if its receiver, Roots, is nil.",
			"disapproval": false,
			"date": "2011-12-22 19:13:06.689562",
			"approval": false
		},
		{
			"sender": "jra@nella.org",
			"recipients": [
				"jra@nella.org",
				"krautz@gmail.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello krautz@gmail.com, agl@golang.org (cc: golang-dev@googlegroups.com, mikkel@krautz.dk),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-22 16:02:18.574498",
			"approval": false
		},
		{
			"sender": "jra@nella.org",
			"recipients": [
				"jra@nella.org",
				"krautz@gmail.com",
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/common.go\nFile src/pkg/crypto/tls/common.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/common.go#newcode164\nsrc/pkg/crypto/tls/common.go:164: // TLS Client Authentication.\nOn 2011/12/22 19:13:06, bradfitz wrote:\n> What's the default?\n\nDone.\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/generate_cert.go\nFile src/pkg/crypto/tls/generate_cert.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/generate_cert.go#newcode42\nsrc/pkg/crypto/tls/generate_cert.go:42: NotBefore: now.Add(-300 * time.Second),\nOn 2011/12/22 19:13:06, bradfitz wrote:\n> Sub(5 * time.Minute)\n\nThe docs say, \"To compute t-d for a duration d, use t.Add(-d)\". So I fixed it to be more readable, but still use Add. ok?\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/tls/generate_cert.go#newcode44\nsrc/pkg/crypto/tls/generate_cert.go:44: NotAfter: now.Add(60 * 60 * 24 * 365 * time.Second),\nOn 2011/12/22 19:13:06, bradfitz wrote:\n> Add(365 * 24 * time.Hour)\n\nDone.\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/x509/verify.go\nFile src/pkg/crypto/x509/verify.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13001/src/pkg/crypto/x509/verify.go#newcode163\nsrc/pkg/crypto/x509/verify.go:163: if opts.Roots == nil {\nOn 2011/12/22 19:13:06, bradfitz wrote:\n> this may not be needed anymore, since findVerifiedParents at tip now doesn't\n> crash if its receiver, Roots, is nil.\n\nDone.",
			"disapproval": false,
			"date": "2012-01-03 02:04:17.340379",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"jra@nella.org",
				"krautz@gmail.com",
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_client.go\nFile src/pkg/crypto/tls/handshake_client.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_client.go#newcode192\nsrc/pkg/crypto/tls/handshake_client.go:192: c2, ok := x509.ParseCertificates(cert.Certificate[0])\nI'd be happy to add a *x509.Certificate member to Certificate to save parsing it each time. The member could be used if non-nil for those who wish to avoid the parsing cost.\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_client.go#newcode197\nsrc/pkg/crypto/tls/handshake_client.go:197: certToSend = &cert\ndo you want to label the outer for loop and break out of it here?\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_server.go\nFile src/pkg/crypto/tls/handshake_server.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_server.go#newcode177\nsrc/pkg/crypto/tls/handshake_server.go:177: var skipCert, skipRead bool\nI think the logic here can be simplified. Remove these bools and then:\n\nmsg, err = c.readHandshake()\nif err != nil {\n  ...\n}\nif certMsg, ok = msg.(*certificateMsg); ok {\n  ... handle cert message ...\n \n  msg, err = c.readHandshake()\n  if err != nil {\n    ...\n  }\n} else {\n  // The message wasn't a certificate...\n}\n\n... msg is ready to be processed here in either case ...\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_server_test.go\nFile src/pkg/crypto/tls/handshake_server_test.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_server_test.go#newcode239\nsrc/pkg/crypto/tls/handshake_server_test.go:239: log.Print(\"Handling request from client \",\nno need to wrap lines.",
			"disapproval": false,
			"date": "2012-01-03 15:33:24.181610",
			"approval": false
		},
		{
			"sender": "jra@nella.org",
			"recipients": [
				"jra@nella.org",
				"krautz@gmail.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello krautz@gmail.com, agl@golang.org (cc: golang-dev@googlegroups.com, mikkel@krautz.dk),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-22 16:03:09.922173",
			"approval": false
		},
		{
			"sender": "jra@nella.org",
			"recipients": [
				"jra@nella.org",
				"krautz@gmail.com",
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_client.go\nFile src/pkg/crypto/tls/handshake_client.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_client.go#newcode192\nsrc/pkg/crypto/tls/handshake_client.go:192: c2, ok := x509.ParseCertificates(cert.Certificate[0])\nOn 2012/01/03 15:33:24, agl1 wrote:\n> I'd be happy to add a *x509.Certificate member to Certificate to save parsing it\n> each time. The member could be used if non-nil for those who wish to avoid the\n> parsing cost.\n\nDone.\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_client.go#newcode197\nsrc/pkg/crypto/tls/handshake_client.go:197: certToSend = &cert\nOn 2012/01/03 15:33:24, agl1 wrote:\n> do you want to label the outer for loop and break out of it here?\n\nDone.\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_server.go\nFile src/pkg/crypto/tls/handshake_server.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_server.go#newcode177\nsrc/pkg/crypto/tls/handshake_server.go:177: var skipCert, skipRead bool\nDone. Thanks, I was scratching my head trying to make that part not suck, and I just needed someone with distance to say, \"make it not suck like this...\" :)\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_server_test.go\nFile src/pkg/crypto/tls/handshake_server_test.go (right):\n\nhttp://codereview.appspot.com/5448093/diff/13003/src/pkg/crypto/tls/handshake_server_test.go#newcode239\nsrc/pkg/crypto/tls/handshake_server_test.go:239: log.Print(\"Handling request from client \",\nOn 2012/01/03 15:33:24, agl1 wrote:\n> no need to wrap lines.\n\nDone.",
			"disapproval": false,
			"date": "2012-01-05 00:28:51.194943",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"jra@nella.org",
				"krautz@gmail.com",
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"mikkel@krautz.dk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d620ce23ebe4 ***\n\ncrypto/tls: Improve TLS Client Authentication\n\nFix incorrect marshal/unmarshal of certificateRequest.\nAdd support for configuring client-auth on the server side.\nFix the certificate selection in the client side.\nUpdate generate_cert.go to new time package\n\nFixes issue 2521.\n\nR=krautz, agl, bradfitz\nCC=golang-dev, mikkel\nhttp://codereview.appspot.com/5448093\n\nCommitter: Adam Langley <agl@golang.org>",
			"disapproval": false,
			"date": "2012-01-05 17:05:50.971694",
			"approval": false
		}
	],
	"owner_email": "jra@nella.org",
	"private": false,
	"base_url": "",
	"owner": "jra",
	"subject": "crypto/tls: Make TLS Client Authentication work according to the spec",
	"created": "2011-12-03 00:57:34.042211",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		13001,
		13003,
		17001
	],
	"modified": "2012-01-08 01:31:48.967572",
	"closed": true,
	"issue": 5448093
}