{
	"description": "graphics: better errors",
	"cc": [
		"nigeltao@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.\n\nhttp://codereview.appspot.com/5316046/diff/9001/graphics/convolve.go\nFile graphics/convolve.go (right):\n\nhttp://codereview.appspot.com/5316046/diff/9001/graphics/convolve.go#newcode81\ngraphics/convolve.go:81: return fmt.Errorf(\"kernel not square (x %d, y %d)\", len(k.X), len(k.Y))\nPrefix the error with the package that it came from. Thus, s/kernel/graphics: kernel/ and similarly a few lines below.\n\nhttp://codereview.appspot.com/5316046/diff/9001/graphics/convolve.go#newcode202\ngraphics/convolve.go:202: if err != nil {\nMove the error check up one line, above the radius calculation.",
			"disapproval": false,
			"date": "2011-10-23 08:10:07.103730",
			"approval": true
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://crawshaw%40google.com@code.google.com/p/graphics-go/",
			"disapproval": false,
			"date": "2011-10-22 01:45:16.090656",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5316046/diff/5001/graphics/blur_test.go\nFile graphics/blur_test.go (right):\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/blur_test.go#newcode151\ngraphics/blur_test.go:151: if err := Blur(empty, empty, nil); err != nil {\nThe other TestFooEmpty functions don't check the error return value. They should be consistent.\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go\nFile graphics/convolve.go (right):\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go#newcode60\ngraphics/convolve.go:60: func kernelDim(w []float64) (size, radius int, err os.Error) {\nI think it would be simpler if it just returned (size, err). The caller can just do \"radius = size/2\". I'd then rename the function kernelSize.\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go#newcode64\ngraphics/convolve.go:64: return 0, 0, os.NewError(\"kernel not square\")\n\"graphics: kernel is not square\".\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go#newcode67\ngraphics/convolve.go:67: return 0, 0, os.NewError(\"kernel size is even\")\n\"graphics: kernel size is not odd\".\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go#newcode69\ngraphics/convolve.go:69: return\nPersonally, I strongly prefer explicit returns. Thus: \"return size, radius, nil\".\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go#newcode250\ngraphics/convolve.go:250: return\nAgain, I'd use an explicit \"return nil\", and similarly below.",
			"disapproval": false,
			"date": "2011-10-22 23:07:09.739036",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as c30839aba20c ***\n\ngraphics: better errors\n\nR=nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/5316046",
			"disapproval": false,
			"date": "2011-10-23 15:31:55.250037",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5316046/diff/5001/graphics/blur_test.go\nFile graphics/blur_test.go (right):\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/blur_test.go#newcode151\ngraphics/blur_test.go:151: if err := Blur(empty, empty, nil); err != nil {\nOn 2011/10/22 23:07:09, nigeltao wrote:\n> The other TestFooEmpty functions don't check the error return value. They should\n> be consistent.\n\nScale and Rotate don't return os.Error yet, so I can't check for it. It's coming in a followup CL with a generalized affine transform, but it's not quite ready yet:\n\nhttp://codereview.appspot.com/5302055\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go\nFile graphics/convolve.go (right):\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go#newcode60\ngraphics/convolve.go:60: func kernelDim(w []float64) (size, radius int, err os.Error) {\nOn 2011/10/22 23:07:09, nigeltao wrote:\n> I think it would be simpler if it just returned (size, err). The caller can just\n> do \"radius = size/2\". I'd then rename the function kernelSize.\n\nDone. (nice)\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go#newcode64\ngraphics/convolve.go:64: return 0, 0, os.NewError(\"kernel not square\")\nOn 2011/10/22 23:07:09, nigeltao wrote:\n> \"graphics: kernel is not square\".\n\nDone.\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go#newcode67\ngraphics/convolve.go:67: return 0, 0, os.NewError(\"kernel size is even\")\nOn 2011/10/22 23:07:09, nigeltao wrote:\n> \"graphics: kernel size is not odd\".\n\nDone.\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go#newcode69\ngraphics/convolve.go:69: return\nOn 2011/10/22 23:07:09, nigeltao wrote:\n> Personally, I strongly prefer explicit returns. Thus: \"return size, radius,\n> nil\".\n\nDone.\n\nhttp://codereview.appspot.com/5316046/diff/5001/graphics/convolve.go#newcode250\ngraphics/convolve.go:250: return\nOn 2011/10/22 23:07:09, nigeltao wrote:\n> Again, I'd use an explicit \"return nil\", and similarly below.\n\nDone.",
			"disapproval": false,
			"date": "2011-10-23 05:41:37.302065",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5316046/diff/9001/graphics/convolve.go\nFile graphics/convolve.go (right):\n\nhttp://codereview.appspot.com/5316046/diff/9001/graphics/convolve.go#newcode81\ngraphics/convolve.go:81: return fmt.Errorf(\"kernel not square (x %d, y %d)\", len(k.X), len(k.Y))\nOn 2011/10/23 08:10:07, nigeltao wrote:\n> Prefix the error with the package that it came from. Thus, s/kernel/graphics:\n> kernel/ and similarly a few lines below.\n\nDone.\n\nhttp://codereview.appspot.com/5316046/diff/9001/graphics/convolve.go#newcode202\ngraphics/convolve.go:202: if err != nil {\nOn 2011/10/23 08:10:07, nigeltao wrote:\n> Move the error check up one line, above the radius calculation.\n\nDone.",
			"disapproval": false,
			"date": "2011-10-23 15:31:10.283250",
			"approval": false
		}
	],
	"owner_email": "crawshaw@google.com",
	"private": false,
	"base_url": "",
	"owner": "crawshaw1",
	"subject": "code review 5316046: graphics: better errors",
	"created": "2011-10-22 01:38:32.328282",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		13001,
		4019
	],
	"modified": "2011-10-23 15:31:56.354507",
	"closed": true,
	"issue": 5316046
}