{
	"description": "os: Plan 9: avoid doing zero-length writes.\n\nPlan 9 I/O preserves message boundaries, while Go\nlibrary code is written for UNIX-like operating\nsystems which do not. Avoid doing zero-length\nwrites in package os.",
	"cc": [
		"rsc@golang.org",
		"rminnich@google.com",
		"ality@pbrane.org",
		"rminnich@gmail.com",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@google.com",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, rminnich@google.com, ality@pbrane.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-22 21:25:10.481190",
			"approval": false
		},
		{
			"sender": "rminnich@gmail.com",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@google.com",
				"ality@pbrane.org",
				"rminnich@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-02-22 21:28:52.590140",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@google.com",
				"ality@pbrane.org",
				"rminnich@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "where do you see this come up? don't you want to preserve message boundaries? \n\nin short, what is the actual problem you're trying to solve?",
			"disapproval": false,
			"date": "2013-02-22 21:33:59.176050",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nI discussed this with Akshat off-list. For better or worse, the os.File\r\ninterface and io.Reader in general assume that 0-length writes will not\r\nturn into EOFs on the other side. Plan 9 is the anomaly here. The os\r\npackage - intended as a portable interface - should remove this surprising\r\nbehavior to make such programs work on Plan 9. Code that cares about\r\nmessage boundaries can use syscall directly.\r\n",
			"disapproval": false,
			"date": "2013-02-22 21:42:03.067250",
			"approval": true
		},
		{
			"sender": "rminnich@gmail.com",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@google.com",
				"ality@pbrane.org",
				"rminnich@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=4810d1060654 ***\n\nos: Plan 9: avoid doing zero-length writes.\n\nPlan 9 I/O preserves message boundaries, while Go\nlibrary code is written for UNIX-like operating\nsystems which do not. Avoid doing zero-length\nwrites in package os.\n\nR=rsc, rminnich, ality, rminnich, r\nCC=golang-dev\nhttps://codereview.appspot.com/7406046\n\nCommitter: Ron Minnich <rminnich@gmail.com>",
			"disapproval": false,
			"date": "2013-02-22 22:06:27.923040",
			"approval": false
		}
	],
	"owner_email": "seed@mail.nanosouffle.net",
	"private": false,
	"base_url": "",
	"owner": "akumar",
	"subject": "code review 7406046: os: Plan 9: avoid doing zero-length writes.",
	"created": "2013-02-22 21:19:29.902080",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2013-02-22 22:07:02.985470",
	"closed": true,
	"issue": 7406046
}