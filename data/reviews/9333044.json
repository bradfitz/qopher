{
	"description": "src/pkg/net/sockopt_linux.go: add TCP_CORK routine to toggle corking\nsrc/pkg/net/tcpsock_posix.go: add TCP_CORK member to TCPConn",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"mikioh.mikioh@gmail.com"
	],
	"messages": [
		{
			"sender": "pabuhr@google.com",
			"recipients": [
				"pabuhr@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-05-09 22:28:44.090780",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"pabuhr@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "CL description's first line should be:\n\nnet: add TCPConn.SetNoPush\n\nActually that's probably a good complete commit message.\n\nhttps://codereview.appspot.com/9333044/diff/5001/src/pkg/net/http/fs.go\nFile src/pkg/net/http/fs.go (right):\n\nhttps://codereview.appspot.com/9333044/diff/5001/src/pkg/net/http/fs.go#newcode416\nsrc/pkg/net/http/fs.go:416: func setNoPush(rw ResponseWriter, v bool) {\ndrop http from this CL for now.  let's just do the net package first.\n\nhttps://codereview.appspot.com/9333044/diff/5001/src/pkg/net/sockopt_linux.go\nFile src/pkg/net/sockopt_linux.go (right):\n\nhttps://codereview.appspot.com/9333044/diff/5001/src/pkg/net/sockopt_linux.go#newcode53\nsrc/pkg/net/sockopt_linux.go:53: func setNoPush(s int, value bool) error {\nthis will need to be implemented on all operating systems.\n\nYou can cross-compile with:\n\n$ cd $GOROOT/src  \n$ GOOS=windows CGO_ENABLED=0 ./make.bash\n\nhttps://codereview.appspot.com/9333044/diff/5001/src/pkg/net/tcpsock_posix.go\nFile src/pkg/net/tcpsock_posix.go (right):\n\nhttps://codereview.appspot.com/9333044/diff/5001/src/pkg/net/tcpsock_posix.go#newcode71\nsrc/pkg/net/tcpsock_posix.go:71: // SetNoPush causes packet \"Nagling\" or automatic concatenation of small packets into bigger frames\nthis doc will need word. In particular, drop the Nagling and quotes, and end in a period.\n\n// SetNoPush controls whether TCP writes are buffered in the kernel. The default is false. Once enabled, setting back to false causes any buffered data to be flushed.",
			"disapproval": false,
			"date": "2013-05-09 22:35:19.977030",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can we make a new package called go.net/tcp instead?\r\n\r\nI now see some desirable operations to TCP as following (skimmed from\r\nissue tracker, golang-nuts, etc).\r\n\r\n1. TCP tweaks\r\n- statistical info for each TCP conn (tcp info, linux and freebsd)\r\n- rwin control\r\n- MSS control\r\n- modular congestion control stuff (freebsd only?)\r\n- new connection setup/teardown (fast open, linux only?)\r\n- multipath TCP (freebsd only?)\r\n\r\n2. TCP socket namespace tweaks\r\n- flexible port usage for (mainly) peer-to-peer apps\r\n\r\n3. TCP socket I/O tweaks\r\n- cork and/or nodelay\r\n\r\nAlso don't want to churn net package until those are settled as concrete API.\r\n(Don't you think primitive CORK and NODELAY make us confuse a bit?)\r\n\r\nWhat do you think?\r\n",
			"disapproval": false,
			"date": "2013-05-12 11:43:27.120980",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, May 12, 2013 at 4:43 AM, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> Can we make a new package called go.net/tcp instead?\r\n>\r\n\r\nYes, but no.\r\n\r\nIt would have to use lots of reflection to get at the underlying fd, and we\r\nalso need this SetCork method for net/http, so it can't be outside the\r\nstandard library.\r\n\r\n\r\n> Also don't want to churn net package until those are settled as concrete\r\n> API.\r\n> (Don't you think primitive CORK and NODELAY make us confuse a bit?)\r\n>\r\n\r\nNot really. The proposal is to only add SetCork, not NODELAY.  See Issue\r\n5352\r\n",
			"disapproval": false,
			"date": "2013-05-12 17:33:20.379710",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, May 12, 2013 at 5:03 PM, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> On Mon, May 13, 2013 at 2:33 AM, Brad Fitzpatrick <bradfitz@golang.org>\r\n> wrote:\r\n>\r\n> > It would have to use lots of reflection to get at the underlying fd, and\r\n> we\r\n> > also need this SetCork method for net/http, so it can't be outside the\r\n> > standard library.\r\n>\r\n> Fair enough.\r\n>\r\n> > Not really. The proposal is to only add SetCork, not NODELAY.  See Issue\r\n> > 5352\r\n>\r\n> - NOPUSH doesn't flush sendbuf when it's turned off but CORK does\r\n> - CORK is automatically uncorked after 200ms\r\n> - NODELAY would be overridden by CORK, then next NODELAY makes sendbuf\r\n> flush\r\n>\r\n\r\nGood thing we're only providing cork.\r\n",
			"disapproval": false,
			"date": "2013-05-13 00:04:30.679330",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, May 13, 2013 at 2:33 AM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> It would have to use lots of reflection to get at the underlying fd, and we\r\n> also need this SetCork method for net/http, so it can't be outside the\r\n> standard library.\r\n\r\nFair enough.\r\n\r\n> Not really. The proposal is to only add SetCork, not NODELAY.  See Issue\r\n> 5352\r\n\r\n- NOPUSH doesn't flush sendbuf when it's turned off but CORK does\r\n- CORK is automatically uncorked after 200ms\r\n- NODELAY would be overridden by CORK, then next NODELAY makes sendbuf flush\r\n\r\nWell... I'm fine once others are fine.\r\n",
			"disapproval": false,
			"date": "2013-05-13 00:03:26.116680",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"pabuhr@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9333044/diff/12001/src/pkg/net/sockopt_linux.go\nFile src/pkg/net/sockopt_linux.go (right):\n\nhttps://codereview.appspot.com/9333044/diff/12001/src/pkg/net/sockopt_linux.go#newcode53\nsrc/pkg/net/sockopt_linux.go:53: func setNoPush(s int, value bool) error {\nplease make three files sockopttcp_linux.go, sockopttcp_posix.go, sockopttcp_stub.go by using hg cp. then put setNoDelay into sockopttcp_posix.go, setCork into sockopttcp_linux.go.\n\nhttps://codereview.appspot.com/9333044/diff/12001/src/pkg/net/sockopt_linux.go#newcode54\nsrc/pkg/net/sockopt_linux.go:54: // Set/reset packet \"Nagling\" for automatic concatenation of small packets into bigger frames.\nis this correct? i guess nagle algo. is just related to ack (delayed ack) thus we might need QUICKACK when delayed ack is the case.\n\nhttps://codereview.appspot.com/9333044/diff/12001/src/pkg/net/sockopt_linux.go#newcode58\nsrc/pkg/net/sockopt_linux.go:58: }\nno fd.incref/fd.decrev?\n\nhttps://codereview.appspot.com/9333044/diff/12001/src/pkg/net/sockopt_linux.go#newcode59\nsrc/pkg/net/sockopt_linux.go:59: err := syscall.SetsockoptInt(s, syscall.SOL_TCP, syscall.TCP_CORK, v)\ns/SOL_TCP/IPPROTO_TCP/; like we usually use AF_XXX instead of PF_XXX in this package.\n\nhttps://codereview.appspot.com/9333044/diff/12001/src/pkg/net/tcpsock_posix.go\nFile src/pkg/net/tcpsock_posix.go (right):\n\nhttps://codereview.appspot.com/9333044/diff/12001/src/pkg/net/tcpsock_posix.go#newcode72\nsrc/pkg/net/tcpsock_posix.go:72: func (c *TCPConn) SetNoPush(value bool) error {\npls move down just after SetNoDelay.",
			"disapproval": false,
			"date": "2013-05-13 00:29:02.665690",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"pabuhr@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please close this CL.\n\nWe've decided to do it in net/http instead.",
			"disapproval": false,
			"date": "2013-05-14 22:22:51.624630",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"pabuhr@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=close",
			"disapproval": false,
			"date": "2013-07-23 16:38:16.928510",
			"approval": false
		}
	],
	"owner_email": "pabuhr@google.com",
	"private": false,
	"base_url": "",
	"owner": "pabuhr",
	"subject": "code review 9333044: net/http/fs.go: add TCP_CORK routine for ResponseWriter...",
	"created": "2013-05-09 22:21:07.551610",
	"patchsets": [
		1,
		2001,
		5001,
		12001
	],
	"modified": "2013-07-23 16:38:17.217260",
	"closed": false,
	"issue": 9333044
}