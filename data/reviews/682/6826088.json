{
	"description": "runtime: allow up to 128 GB of allocated memory\n\nIncorporates code from CL 6828055.\n\nFixes issue 2142.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"devon.odell@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "devon.odell@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"devon.odell@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6826088/diff/5001/src/pkg/runtime/malloc.goc\nFile src/pkg/runtime/malloc.goc (right):\n\nhttp://codereview.appspot.com/6826088/diff/5001/src/pkg/runtime/malloc.goc#newcode343\nsrc/pkg/runtime/malloc.goc:343: // Actually we reserve 136 GB (because the bitmap ends up being 1 GB)\ns/1 GB/12 GB/ ?",
			"disapproval": false,
			"date": "2012-11-12 21:56:00.467240",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6826088/diff/5001/src/pkg/runtime/malloc.h\nFile src/pkg/runtime/malloc.h (right):\n\nhttps://codereview.appspot.com/6826088/diff/5001/src/pkg/runtime/malloc.h#newcode136\nsrc/pkg/runtime/malloc.h:136: #define\tMaxMem\t(1ULL<<(MHeapMap_Bits+PageShift))\t/* 16 GB */\ns/16/128/ in comment",
			"disapproval": false,
			"date": "2012-11-12 20:20:58.257420",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-11-12 19:52:41.364400",
			"approval": false
		},
		{
			"sender": "devon.odell@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"devon.odell@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/12 21:56:00, dho wrote:\n> http://codereview.appspot.com/6826088/diff/5001/src/pkg/runtime/malloc.goc\n> File src/pkg/runtime/malloc.goc (right):\n> \n> http://codereview.appspot.com/6826088/diff/5001/src/pkg/runtime/malloc.goc#newcode343\n> src/pkg/runtime/malloc.goc:343: // Actually we reserve 136 GB (because the\n> bitmap ends up being 1 GB)\n> s/1 GB/12 GB/ ?\n\ner, 8. I'm terrible at math.",
			"disapproval": false,
			"date": "2012-11-12 21:56:29.095260",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"devon.odell@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a310cb32c278 ***\n\nruntime: allow up to 128 GB of allocated memory\n\nIncorporates code from CL 6828055.\n\nFixes issue 2142.\n\nR=golang-dev, iant, devon.odell\nCC=golang-dev\nhttp://codereview.appspot.com/6826088",
			"disapproval": false,
			"date": "2012-11-13 17:45:19.818620",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6826088: runtime: allow up to 128 GB of allocated memory",
	"created": "2012-11-12 19:52:27.161680",
	"patchsets": [
		1,
		2001,
		5001,
		11001
	],
	"modified": "2012-11-13 17:45:22.205750",
	"closed": true,
	"issue": 6826088
}