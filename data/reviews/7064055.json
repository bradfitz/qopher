{
	"description": "fmt: Remove dead code and make comments and variables consistent.",
	"cc": [
		"minux.ma@gmail.com",
		"dave@cheney.net",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7064055/diff/5001/src/pkg/fmt/format.go\nFile src/pkg/fmt/format.go (right):\n\nhttps://codereview.appspot.com/7064055/diff/5001/src/pkg/fmt/format.go#newcode111\nsrc/pkg/fmt/format.go:111: // Clear flags afterwards.\nHmm, i don't like this, it implies that Clear is a method, what about \n\n   and clears flags afterwards.\n\nhttps://codereview.appspot.com/7064055/diff/5001/src/pkg/fmt/format.go#newcode128\nsrc/pkg/fmt/format.go:128: // Clear flags afterwards.\nSee above, \n\n// padString appends s to buf ... and clears flags afterwards.\n\nhttps://codereview.appspot.com/7064055/diff/5001/src/pkg/fmt/format.go#newcode158\nsrc/pkg/fmt/format.go:158: // integer; interprets prec but not wid.  Once formatted, result is sent to\nOn 2013/01/08 21:08:45, minux wrote:\n> why this change?\n\nlooks like the previous line was > 80 chars.",
			"disapproval": false,
			"date": "2013-01-08 23:40:11.233290",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7064055/diff/5001/src/pkg/fmt/format.go\nFile src/pkg/fmt/format.go (right):\n\nhttps://codereview.appspot.com/7064055/diff/5001/src/pkg/fmt/format.go#newcode110\nsrc/pkg/fmt/format.go:110: // Append b to f.buf, padded on left (w > 0) or right (w < 0 or f.minus).\nthe style should really be:\n// pad appends b to f.buf, ....\n\nhttps://codereview.appspot.com/7064055/diff/5001/src/pkg/fmt/format.go#newcode158\nsrc/pkg/fmt/format.go:158: // integer; interprets prec but not wid.  Once formatted, result is sent to\nwhy this change?",
			"disapproval": false,
			"date": "2013-01-08 21:08:45.533110",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-08 15:51:56.555300",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wednesday, January 9, 2013, dfc wrote:\r\n>\r\n> https://codereview.appspot.**com/7064055/diff/5001/src/pkg/**\r\n> fmt/format.go#newcode158<https://codereview.appspot.com/7064055/diff/5001/src/pkg/fmt/format.go#newcode158>\r\n> src/pkg/fmt/format.go:158: // integer; interprets prec but not wid.\r\n> Once formatted, result is sent to\r\n> On 2013/01/08 21:08:45, minux wrote:\r\n>\r\n>> why this change?\r\n>>\r\n>\r\n> looks like the previous line was > 80 chars.\r\n>\r\nthis is not critical and i think maintaining a clear and minimum diff\r\nhistory outweights 80-column display. Generally i will re-wrap the line\r\nonly when there is other things to fix on that line.\r\n",
			"disapproval": false,
			"date": "2013-01-08 23:47:58.530080",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/08 23:40:11, dfc wrote:\n> https://codereview.appspot.com/7064055/diff/5001/src/pkg/fmt/format.go#newcode111\n> src/pkg/fmt/format.go:111: // Clear flags afterwards.\n> Hmm, i don't like this, it implies that Clear is a method, what about \n> \n>    and clears flags afterwards.\n\nI've made the change, but I'm not familiar enough with the fmt package to know if \"Clear flags afterwards\" was meant as \"Flags should be cleared afterwards, by the calling function\" or if it was meant as \"pad clears the flags afterwards\". Do you know which one of these is accurate?\n\nIn the code I can't see any clearing of flags done by either pad, padString or any of the methods that they invoke.",
			"disapproval": false,
			"date": "2013-01-09 03:22:12.788780",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-09 03:15:12.792340",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 9, 2013 at 11:22 AM, <r.eklind.87@gmail.com> wrote:\r\n\r\n> On 2013/01/08 23:40:11, dfc wrote:\r\n> https://codereview.appspot.**com/7064055/diff/5001/src/pkg/**\r\n> fmt/format.go#newcode111<https://codereview.appspot.com/7064055/diff/5001/src/pkg/fmt/format.go#newcode111>\r\n>\r\n>> src/pkg/fmt/format.go:111: // Clear flags afterwards.\r\n>> Hmm, i don't like this, it implies that Clear is a method, what about\r\n>\r\n>      and clears flags afterwards.\r\n>\r\n> In the code I can't see any clearing of flags done by either pad,\r\n> padString or any of the methods that they invoke.\r\n>\r\nSome comments in the fmt package is not very accurate, we need some time\r\nto completely redo those comments.\r\n",
			"disapproval": false,
			"date": "2013-01-09 10:00:48.094820",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7064055/diff/10001/src/pkg/fmt/format.go\nFile src/pkg/fmt/format.go (right):\n\nhttps://codereview.appspot.com/7064055/diff/10001/src/pkg/fmt/format.go#newcode75\nsrc/pkg/fmt/format.go:75: // computePadding computes left and right padding widths (only one will be\nunwrap this line\n\nhttps://codereview.appspot.com/7064055/diff/10001/src/pkg/fmt/format.go#newcode112\nsrc/pkg/fmt/format.go:112: // and clears flags afterwards.\ndelete this line\n\nhttps://codereview.appspot.com/7064055/diff/10001/src/pkg/fmt/format.go#newcode129\nsrc/pkg/fmt/format.go:129: // f.minus) and clears flags afterwards.\ndelete 'and clears flags afterward's. unwrap line\n\nhttps://codereview.appspot.com/7064055/diff/10001/src/pkg/fmt/scan.go\nFile src/pkg/fmt/scan.go (right):\n\nhttps://codereview.appspot.com/7064055/diff/10001/src/pkg/fmt/scan.go#newcode315\nsrc/pkg/fmt/scan.go:315: // SkipSpace provides Scan() methods the ability to skip space and newline\nWhile were here drop all the () in this comment.",
			"disapproval": false,
			"date": "2013-01-18 20:14:10.928260",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, dave@cheney.net, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-20 09:41:10.652640",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-22 22:12:19.213610",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=7b3050fc5fce ***\n\nfmt: Remove dead code and make comments and variables consistent.\n\nR=minux.ma, dave, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7064055\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-22 22:12:50.356260",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-02-22 08:10:57.370410",
			"approval": false
		}
	],
	"owner_email": "r.eklind.87@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "u",
	"subject": "code review 7064055: fmt: Remove dead code and make comments and variables c...",
	"created": "2013-01-08 15:45:39.813980",
	"patchsets": [
		1,
		2001,
		5001,
		10001,
		17001
	],
	"modified": "2013-02-22 08:11:02.416720",
	"closed": true,
	"issue": 7064055
}