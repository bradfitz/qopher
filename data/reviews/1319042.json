{
	"description": "Added socketpair syscall.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "krasin@golang.org",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/1319042/diff/1/2\nFile src/pkg/net/sock.go (right):\n\nhttp://codereview.appspot.com/1319042/diff/1/2#newcode15\nsrc/pkg/net/sock.go:15: func Socketpair(domain int, typ int, protocol int) (fd []int, err os.Error) {\nI know that this returning file descriptors sucks. Please propose the right interface.",
			"disapproval": false,
			"date": "2010-05-27 16:36:10.246651",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "let's do two different CLs - one for the syscall and one for net.\n\n\nOn Thu, May 27, 2010 at 09:36,  <krasin@golang.org> wrote:\n> Reviewers: rsc,\n>\n>\n> http://codereview.appspot.com/1319042/diff/1/2\n> File src/pkg/net/sock.go (right):\n>\n> http://codereview.appspot.com/1319042/diff/1/2#newcode15\n> src/pkg/net/sock.go:15: func Socketpair(domain int, typ int, protocol\n> int) (fd []int, err os.Error) {\n> I know that this returning file descriptors sucks. Please propose the\n> right interface.\n>\n> Description:\n> Added socketpair syscall and net.Socketpair.\n>\n> Please review this at http://codereview.appspot.com/1319042/show\n>\n> Affected files:\n> \u00a0src/pkg/net/sock.go\n> \u00a0src/pkg/syscall/syscall_bsd.go\n> \u00a0M src/pkg/syscall/syscall_linux.go\n> \u00a0M src/pkg/syscall/syscall_linux_386.go\n> \u00a0src/pkg/syscall/zerrors_darwin_386.go\n> \u00a0src/pkg/syscall/zerrors_darwin_amd64.go\n> \u00a0src/pkg/syscall/zerrors_freebsd_386.go\n> \u00a0src/pkg/syscall/zerrors_freebsd_amd64.go\n> \u00a0M src/pkg/syscall/zerrors_linux_386.go\n> \u00a0M src/pkg/syscall/zerrors_linux_amd64.go\n> \u00a0M src/pkg/syscall/zerrors_linux_arm.go\n> \u00a0M src/pkg/syscall/zsyscall_darwin_386.go\n> \u00a0M src/pkg/syscall/zsyscall_darwin_amd64.go\n> \u00a0src/pkg/syscall/zsyscall_freebsd_386.go\n> \u00a0M src/pkg/syscall/zsyscall_freebsd_amd64.go\n> \u00a0M src/pkg/syscall/zsyscall_linux_amd64.go\n> \u00a0M src/pkg/syscall/zsyscall_linux_arm.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2010-05-27 16:37:55.381458",
			"approval": false
		},
		{
			"sender": "krasin@golang.org",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Done\n\nOn 2010/05/27 16:37:55, rsc wrote:\n> let's do two different CLs - one for the syscall and one for net.\n> \n> \n> On Thu, May 27, 2010 at 09:36,  <mailto:krasin@golang.org> wrote:\n> > Reviewers: rsc,\n> >\n> >\n> > http://codereview.appspot.com/1319042/diff/1/2\n> > File src/pkg/net/sock.go (right):\n> >\n> > http://codereview.appspot.com/1319042/diff/1/2#newcode15\n> > src/pkg/net/sock.go:15: func Socketpair(domain int, typ int, protocol\n> > int) (fd []int, err os.Error) {\n> > I know that this returning file descriptors sucks. Please propose the\n> > right interface.\n> >\n> > Description:\n> > Added socketpair syscall and net.Socketpair.\n> >\n> > Please review this at http://codereview.appspot.com/1319042/show\n> >\n> > Affected files:\n> > &nbsp;src/pkg/net/sock.go\n> > &nbsp;src/pkg/syscall/syscall_bsd.go\n> > &nbsp;M src/pkg/syscall/syscall_linux.go\n> > &nbsp;M src/pkg/syscall/syscall_linux_386.go\n> > &nbsp;src/pkg/syscall/zerrors_darwin_386.go\n> > &nbsp;src/pkg/syscall/zerrors_darwin_amd64.go\n> > &nbsp;src/pkg/syscall/zerrors_freebsd_386.go\n> > &nbsp;src/pkg/syscall/zerrors_freebsd_amd64.go\n> > &nbsp;M src/pkg/syscall/zerrors_linux_386.go\n> > &nbsp;M src/pkg/syscall/zerrors_linux_amd64.go\n> > &nbsp;M src/pkg/syscall/zerrors_linux_arm.go\n> > &nbsp;M src/pkg/syscall/zsyscall_darwin_386.go\n> > &nbsp;M src/pkg/syscall/zsyscall_darwin_amd64.go\n> > &nbsp;src/pkg/syscall/zsyscall_freebsd_386.go\n> > &nbsp;M src/pkg/syscall/zsyscall_freebsd_amd64.go\n> > &nbsp;M src/pkg/syscall/zsyscall_linux_amd64.go\n> > &nbsp;M src/pkg/syscall/zsyscall_linux_arm.go\n> >\n> >\n> >\n>",
			"disapproval": false,
			"date": "2010-05-27 16:40:36.201893",
			"approval": false
		},
		{
			"sender": "krasin@golang.org",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Ping\nOn 2010/05/27 16:40:36, Ivan Krasin wrote:\n> Done\n> \n> On 2010/05/27 16:37:55, rsc wrote:\n> > let's do two different CLs - one for the syscall and one for net.\n> > \n> > \n> > On Thu, May 27, 2010 at 09:36,  <mailto:krasin@golang.org> wrote:\n> > > Reviewers: rsc,\n> > >\n> > >\n> > > http://codereview.appspot.com/1319042/diff/1/2\n> > > File src/pkg/net/sock.go (right):\n> > >\n> > > http://codereview.appspot.com/1319042/diff/1/2#newcode15\n> > > src/pkg/net/sock.go:15: func Socketpair(domain int, typ int, protocol\n> > > int) (fd []int, err os.Error) {\n> > > I know that this returning file descriptors sucks. Please propose the\n> > > right interface.\n> > >\n> > > Description:\n> > > Added socketpair syscall and net.Socketpair.\n> > >\n> > > Please review this at http://codereview.appspot.com/1319042/show\n> > >\n> > > Affected files:\n> > > &nbsp;src/pkg/net/sock.go\n> > > &nbsp;src/pkg/syscall/syscall_bsd.go\n> > > &nbsp;M src/pkg/syscall/syscall_linux.go\n> > > &nbsp;M src/pkg/syscall/syscall_linux_386.go\n> > > &nbsp;src/pkg/syscall/zerrors_darwin_386.go\n> > > &nbsp;src/pkg/syscall/zerrors_darwin_amd64.go\n> > > &nbsp;src/pkg/syscall/zerrors_freebsd_386.go\n> > > &nbsp;src/pkg/syscall/zerrors_freebsd_amd64.go\n> > > &nbsp;M src/pkg/syscall/zerrors_linux_386.go\n> > > &nbsp;M src/pkg/syscall/zerrors_linux_amd64.go\n> > > &nbsp;M src/pkg/syscall/zerrors_linux_arm.go\n> > > &nbsp;M src/pkg/syscall/zsyscall_darwin_386.go\n> > > &nbsp;M src/pkg/syscall/zsyscall_darwin_amd64.go\n> > > &nbsp;src/pkg/syscall/zsyscall_freebsd_386.go\n> > > &nbsp;M src/pkg/syscall/zsyscall_freebsd_amd64.go\n> > > &nbsp;M src/pkg/syscall/zsyscall_linux_amd64.go\n> > > &nbsp;M src/pkg/syscall/zsyscall_linux_arm.go\n> > >\n> > >\n> > >\n> >",
			"disapproval": false,
			"date": "2010-06-01 09:05:24.431139",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "This looks pretty good.\nThere should be a stub in syscall_nacl.go too, right?\n\nThe PF constants seem unnecessary.\nThey're always the same as the AF constants,\nso maybe just use the AF ones that already exist?",
			"disapproval": false,
			"date": "2010-06-01 21:30:06.930914",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nThanks.",
			"disapproval": false,
			"date": "2010-06-30 21:55:54.945001",
			"approval": true
		},
		{
			"sender": "krasin@golang.org",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2010/06/01 21:30:06, rsc1 wrote:\n> This looks pretty good.\n> There should be a stub in syscall_nacl.go too, right?\nI don't know. \n\n1. Go NaCl support is completely broken now\n2. It will be much updated after NaCl gets shared libraries and jit support\n3. It will even more updated after PNaCl is out of alpha.\n\nI would prefer do not touch NaCl part until we get PNaCl and JIT support. After that I promise to deliver PNaCl support for Go, because I have plans to use it in my main project. Ask me at krasin@google.com for more details.\n\nIf you still think that I should add this syscall to\n> \n> The PF constants seem unnecessary.\n> They're always the same as the AF constants,\n> so maybe just use the AF ones that already exist?\nDone",
			"disapproval": false,
			"date": "2010-06-18 11:03:47.557336",
			"approval": false
		},
		{
			"sender": "krasin@golang.org",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2010/06/18 11:03:47, Ivan Krasin wrote:\n> On 2010/06/01 21:30:06, rsc1 wrote:\n> > This looks pretty good.\n> > There should be a stub in syscall_nacl.go too, right?\n> I don't know. \n> \n> 1. Go NaCl support is completely broken now\n> 2. It will be much updated after NaCl gets shared libraries and jit support\n> 3. It will even more updated after PNaCl is out of alpha.\n> \n> I would prefer do not touch NaCl part until we get PNaCl and JIT support. After\n> that I promise to deliver PNaCl support for Go, because I have plans to use it\n> in my main project. Ask me at mailto:krasin@google.com for more details.\n> \n> If you still think that I should add this syscall to\nthe CL, let me know.\n\nSorry for truncating the message.\n> > \n> > The PF constants seem unnecessary.\n> > They're always the same as the AF constants,\n> > so maybe just use the AF ones that already exist?\n> Done",
			"disapproval": false,
			"date": "2010-06-18 12:06:35.405173",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Russ,\n\ntake a look again, please.\n\nIvan\n\nOn Wed, Jun 2, 2010 at 1:30 AM,  <rsc@google.com> wrote:\n> This looks pretty good.\n> There should be a stub in syscall_nacl.go too, right?\n>\n> The PF constants seem unnecessary.\n> They're always the same as the AF constants,\n> so maybe just use the AF ones that already exist?\n>\n>\n> http://codereview.appspot.com/1319042/show\n>\n",
			"disapproval": false,
			"date": "2010-06-18 17:27:05.832832",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Ping\n\nOn Fri, Jun 18, 2010 at 9:27 PM, Ivan Krasin <imkrasin@gmail.com> wrote:\n> Russ,\n>\n> take a look again, please.\n>\n> Ivan\n>\n> On Wed, Jun 2, 2010 at 1:30 AM, \u00a0<rsc@google.com> wrote:\n>> This looks pretty good.\n>> There should be a stub in syscall_nacl.go too, right?\n>>\n>> The PF constants seem unnecessary.\n>> They're always the same as the AF constants,\n>> so maybe just use the AF ones that already exist?\n>>\n>>\n>> http://codereview.appspot.com/1319042/show\n>>\n>\n",
			"disapproval": false,
			"date": "2010-06-21 10:13:56.767569",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=982df2b2cb4b ***\n\nsyscall: add socketpair\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/1319042\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2010-06-30 21:58:23.650670",
			"approval": false
		}
	],
	"owner_email": "krasin@golang.org",
	"private": false,
	"base_url": "",
	"owner": "Ivan Krasin",
	"subject": "Added socketpair syscall and net.Socketpair.",
	"created": "2010-05-27 16:33:00.887161",
	"patchsets": [
		1,
		2001,
		7001,
		15001,
		18001
	],
	"modified": "2012-01-22 06:25:16.168698",
	"closed": true,
	"issue": 1319042
}