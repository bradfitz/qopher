{
	"description": "time: add (*Timer).Reset(d Duration)\r\n\r\nThe test passes and nothing crashes, but this\r\nis the first time a did something with the\r\nGo runtime so an extra careful review might\r\nbe in order.\r\n\r\nFixes issue 4412",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for this, but I don't believe we've completely decided what the\r\nAPI should be.\r\n\r\nToday I am leaning toward not having Reset, which conflates two\r\ndifferent problems: backing out the old timer and creating a new one\r\nin the same memory. It is unclear to me how to use Reset safely\r\n(without races) when the timer is sending on C.\r\n\r\nWe already have code to back out the old timer. I think perhaps we\r\nshould leave that alone and then add a Start(d Duration) that must be\r\ncalled only on a stopped or already fired timer.\r\n\r\n// Start restarts the timer to trigger after duration d has elapsed.\r\n// The timer must be inactive, either because it expired or because of\r\na call to Stop.\r\n// Start panics if the timer is still active.\r\nfunc (t *Timer) Start(d Duration)\r\n\r\nThis API I know how to use safely:\r\n\r\nt := time.NewTimer(d)\r\n...\r\nif t.Stop() {\r\n    <-t.C\r\n}\r\nt.Start(d)\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-12-11 17:13:18.624260",
			"approval": false
		},
		{
			"sender": "remigius.gieben@gmail.com",
			"recipients": [
				"remigius.gieben@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-12-11 15:07:24.524610",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"remigius.gieben@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=close\n\nFixed by https://code.google.com/p/go/source/detail?r=ee7deff1bbd7",
			"disapproval": false,
			"date": "2013-06-04 22:37:54.062740",
			"approval": false
		}
	],
	"owner_email": "remigius.gieben@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Miek Gieben",
	"subject": "time: add (*Timer).Reset(d Duration)",
	"created": "2012-12-11 09:49:27.961390",
	"patchsets": [
		1,
		1001
	],
	"modified": "2013-06-04 22:37:54.129190",
	"closed": false,
	"issue": 6932047
}