{
	"description": "time: new AddDate method",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "BTW, at first i had a test that t.AddDate(a, b, c).AddDate(-a, -b, c) == t\nbut that doesn't always work. i suppose it's obvious in retrospect,\nbut perhaps it deserves a comment?\n\nOn 8 December 2011 13:13,  <rogpeppe@gmail.com> wrote:\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> time: new AddDate method\n>\n> Please review this at http://codereview.appspot.com/5465044/\n>\n> Affected files:\n> \u00a0M src/pkg/time/time.go\n> \u00a0M src/pkg/time/time_test.go\n>\n>\n> Index: src/pkg/time/time.go\n> ===================================================================\n> --- a/src/pkg/time/time.go\n> +++ b/src/pkg/time/time.go\n> @@ -564,6 +564,20 @@\n> \u00a0 \u00a0 \u00a0 \u00a0return Duration(t.sec-u.sec)*Second + Duration(t.nsec-u.nsec)\n> \u00a0}\n>\n> +// AddDate returns the time corresponding to adding the\n> +// given number of years, months, and days to t.\n> +// For example, AddDate(-1, 2, 3) applied to January 1, 2011\n> +// returns March 4, 2010.\n> +//\n> +// AddDate normalizes its result in the same way that Date does,\n> +// so, for example, adding one month to October 31 yields\n> +// December 1, the normalized form for November 31.\n> +func (t Time) AddDate(years int, months int, days int) Time {\n> + \u00a0 \u00a0 \u00a0 year, month, day := t.Date()\n> + \u00a0 \u00a0 \u00a0 hour, min, sec := t.Clock()\n> + \u00a0 \u00a0 \u00a0 return Date(year+years, month+Month(months), day+days, hour, min,\n> sec, int(t.nsec), t.loc)\n> +}\n> +\n> \u00a0const (\n> \u00a0 \u00a0 \u00a0 \u00a0secondsPerMinute = 60\n> \u00a0 \u00a0 \u00a0 \u00a0secondsPerHour \u00a0 = 60 * 60\n> Index: src/pkg/time/time_test.go\n> ===================================================================\n> --- a/src/pkg/time/time_test.go\n> +++ b/src/pkg/time/time_test.go\n> @@ -632,6 +632,32 @@\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0}\n>\n> +// Several ways of getting from\n> +// Fri Nov 18 7:56:35 PST 2011\n> +// to\n> +// Thu Mar 19 7:56:35 PST 2016\n> +var addDateTests = []struct {\n> + \u00a0 \u00a0 \u00a0 years, months, days int\n> +}{\n> + \u00a0 \u00a0 \u00a0 {4, 4, 1},\n> + \u00a0 \u00a0 \u00a0 {3, 16, 1},\n> + \u00a0 \u00a0 \u00a0 {3, 15, 30},\n> + \u00a0 \u00a0 \u00a0 {5, -6, -18 - 30 - 12},\n> +}\n> +\n> +func TestAddDate(t *testing.T) {\n> + \u00a0 \u00a0 \u00a0 t0 := Date(2011, 11, 18, 7, 56, 35, 0, UTC)\n> + \u00a0 \u00a0 \u00a0 t1 := Date(2016, 3, 19, 7, 56, 35, 0, UTC)\n> + \u00a0 \u00a0 \u00a0 for _, at := range addDateTests {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 time := t0.AddDate(at.years, at.months, at.days)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if !time.Equal(t1) {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 t.Errorf(\"AddDate(%d, %d, %d) = %v, want %v\",\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 at.years, at.months, at.days,\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 time, t1)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 }\n> +}\n> +\n> \u00a0func BenchmarkNow(b *testing.B) {\n> \u00a0 \u00a0 \u00a0 \u00a0for i := 0; i < b.N; i++ {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Now()\n>\n>\n",
			"disapproval": false,
			"date": "2011-12-08 13:16:04.902701",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Dec 8, 2011 at 08:16, roger peppe <rogpeppe@gmail.com> wrote:\n> BTW, at first i had a test that t.AddDate(a, b, c).AddDate(-a, -b, c) == t\n> but that doesn't always work. i suppose it's obvious in retrospect,\n> but perhaps it deserves a comment?\n\nThe normalization comment should suffice.  I don't want to\nspend more ink on the special cases than on the behavior.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-08 22:53:37.225534",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-08 13:13:39.756522",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping\n\nOn 8 December 2011 22:53, Russ Cox <rsc@golang.org> wrote:\n\n> On Thu, Dec 8, 2011 at 08:16, roger peppe <rogpeppe@gmail.com> wrote:\n> > BTW, at first i had a test that t.AddDate(a, b, c).AddDate(-a, -b, c) ==\n> t\n> > but that doesn't always work. i suppose it's obvious in retrospect,\n> > but perhaps it deserves a comment?\n>\n> The normalization comment should suffice.  I don't want to\n> spend more ink on the special cases than on the behavior.\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-12-14 13:39:16.315192",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-12-15 16:14:09.288903",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=50e6f6bb7af5 ***\n\ntime: new AddDate method\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5465044\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-12-15 16:23:06.330518",
			"approval": false
		}
	],
	"owner_email": "rogpeppe@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rog",
	"subject": "code review 5465044: time: new AddDate method",
	"created": "2011-12-08 13:12:18.154953",
	"patchsets": [
		1,
		3,
		4
	],
	"modified": "2011-12-15 16:23:06.507521",
	"closed": false,
	"issue": 5465044
}