{
	"description": "math: fix special cases in Nextafter\n\nNextafter(0, -1) != -0.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-10 00:38:24.684685",
			"approval": false
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-10 01:00:59.543825",
			"approval": false
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-10 01:01:49.517118",
			"approval": false
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-09 22:12:55.891455",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm sorry, but I take back what I said.\nI tested the C library on my machine,\nand it has nextafter(0, -1) == -0.\nWe should probably match that.\n\nIt may not be worth it, but if you take the\nfloating point bits as an int64, and then do:\n   if negative { xor with 1<<63 - 1 }\nthen I think that maps all the non-NaN\nfloating-point values to int64 in a way\nthat preserves the ordering (the old float64\norder is now the order of the int64).\nIf that's right, then the function can\nsimplify to\n\nif x != x || y != y {\n    return NaN()\n}\n\nix := int64(Float64bits(x))\nix ^= int64(uint64(ix>>63)>>1)\n\niy := int64(Float64bits(y))\niy ^= int64(uint64(iy>>63)>>1)\n\nif ix < iy {\n    ix++\n} else if ix > iy {\n   ix--\n}\n\nix ^= int64(uint64(ix>>63)>>1)\nreturn Float64frombits(uint64(ix))\n\nOr it might not.\nRuss\n",
			"disapproval": false,
			"date": "2011-12-09 22:42:51.949072",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Dec 9, 2011 at 17:42, Russ Cox <rsc@golang.org> wrote:\n> I'm sorry, but I take back what I said.\n\nNever mind: the current code is fine.\nMy C program was using %f and showing -0.00000\nbut that's not really -0.  Changing it to say %.17g\nshows the number we expected.\n\n$ cat x.c\n#include <stdio.h>\n#include <math.h>\n\nint\nmain(void)\n{\n\tprintf(\"%.17g\\n\", nextafter(0, -1));\n}\n$ a.out\n-4.9406564584124654e-324\n$\n\nThis CL is fine as is, except please add this as a test case.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-09 22:45:18.049411",
			"approval": false
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Oops, ignore the 7:39 PM CL. I'll change it back.\n\nOn Fri, Dec 9, 2011 at 5:45 PM, Russ Cox <rsc@golang.org> wrote:\n> On Fri, Dec 9, 2011 at 17:42, Russ Cox <rsc@golang.org> wrote:\n>> I'm sorry, but I take back what I said.\n>\n> Never mind: the current code is fine.\n> My C program was using %f and showing -0.00000\n> but that's not really -0. \u00a0Changing it to say %.17g\n> shows the number we expected.\n>\n> $ cat x.c\n> #include <stdio.h>\n> #include <math.h>\n>\n> int\n> main(void)\n> {\n> \u00a0 \u00a0 \u00a0 \u00a0printf(\"%.17g\\n\", nextafter(0, -1));\n> }\n> $ a.out\n> -4.9406564584124654e-324\n> $\n>\n> This CL is fine as is, except please add this as a test case.\n>\n> Russ\n",
			"disapproval": false,
			"date": "2011-12-10 00:40:19.918034",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f57006515d93 ***\n\nmath: fix special cases in Nextafter\n\nNextafter(0, -1) != -0.\n\nR=rsc, golang-dev\nCC=golang-dev\nhttp://codereview.appspot.com/5467060\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-12-12 20:51:13.842024",
			"approval": false
		}
	],
	"owner_email": "cldorian@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Charlie Dorian",
	"subject": "code review 5467060: math: fix special cases in Nextafter",
	"created": "2011-12-09 22:12:32.509305",
	"patchsets": [
		1,
		2001,
		4001,
		7001,
		7004,
		6003
	],
	"modified": "2011-12-12 21:20:06.932543",
	"closed": true,
	"issue": 5467060
}