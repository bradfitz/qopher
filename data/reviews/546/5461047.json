{
	"description": "misc/dashboard: user interface",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-12-15 05:41:08.038961",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=974a5265f6aa ***\n\nmisc/dashboard: user interface\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5461047\n\nhttp://codereview.appspot.com/5461047/diff/12023/misc/dashboard/app/build/ui.go\nFile misc/dashboard/app/build/ui.go (right):\n\nhttp://codereview.appspot.com/5461047/diff/12023/misc/dashboard/app/build/ui.go#newcode59\nmisc/dashboard/app/build/ui.go:59: err = uiTemplate.Execute(w, struct {\nOn 2011/12/15 23:33:58, rsc wrote:\n> The fields get named types.  The struct should have a named type too.\n> This is a monster of a statement.\n\nDone.\n\nhttp://codereview.appspot.com/5461047/diff/12023/misc/dashboard/app/build/ui.go#newcode147\nmisc/dashboard/app/build/ui.go:147: var uiTemplate = template.Must(template.New(\"ui\").Funcs(\nOn 2011/12/15 23:33:58, rsc wrote:\n> how about\n> \n> var uiTemplate = template.Must(\n>     template.New(\"ui\").\n>         Funcs(\n>             ...\n>         }).\n>         ParseFile(\"build/ui.html\"),\n> )\n> \n> Or else make the FuncMap its own var.\n\nDone.\n\nhttp://codereview.appspot.com/5461047/diff/12023/misc/dashboard/app/build/ui.go#newcode150\nmisc/dashboard/app/build/ui.go:150: \"timeString\":   timeString,\nOn 2011/12/15 23:33:58, rsc wrote:\n> A better name might be datastoreTime\n> Of course, you can also write {{.T.Time}} instead of {{.T | timeString}}\n> and delete the function entirely.\n\nDone.",
			"disapproval": false,
			"date": "2011-12-15 23:48:16.573570",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please make a pass through and add comments.\n\nhttp://codereview.appspot.com/5461047/diff/11009/misc/dashboard/app/build/build.go\nFile misc/dashboard/app/build/build.go (right):\n\nhttp://codereview.appspot.com/5461047/diff/11009/misc/dashboard/app/build/build.go#newcode119\nmisc/dashboard/app/build/build.go:119: func (c *Commit) GetResult(builder, goHash string) *Result {\ns/Get//\n\nhttp://codereview.appspot.com/5461047/diff/11009/misc/dashboard/app/build/build.go#newcode130\nmisc/dashboard/app/build/build.go:130: func (c *Commit) GetResults(goHash string) (results []*Result) {\ns/Get//\n\nhttp://codereview.appspot.com/5461047/diff/11009/misc/dashboard/app/build/build.go#newcode230\nmisc/dashboard/app/build/build.go:230: func GetTag(c appengine.Context, tag string) (*Tag, os.Error) {\nCan probably choose a better Get-free name but I don't know\nwhat this does.  Doc comment?\n\nhttp://codereview.appspot.com/5461047/diff/11009/misc/dashboard/app/build/build.go#newcode397\nmisc/dashboard/app/build/build.go:397: // GetPackages returns all non-Go packages.\ns/Get//",
			"disapproval": false,
			"date": "2011-12-15 16:48:29.306024",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nAdded a whole bunch of comments.\n\nhttp://codereview.appspot.com/5461047/diff/11009/misc/dashboard/app/build/build.go\nFile misc/dashboard/app/build/build.go (right):\n\nhttp://codereview.appspot.com/5461047/diff/11009/misc/dashboard/app/build/build.go#newcode119\nmisc/dashboard/app/build/build.go:119: func (c *Commit) GetResult(builder, goHash string) *Result {\nOn 2011/12/15 16:48:29, rsc wrote:\n> s/Get//\n\nDone.\n\nhttp://codereview.appspot.com/5461047/diff/11009/misc/dashboard/app/build/build.go#newcode130\nmisc/dashboard/app/build/build.go:130: func (c *Commit) GetResults(goHash string) (results []*Result) {\nOn 2011/12/15 16:48:29, rsc wrote:\n> s/Get//\n\nDone.\n\nhttp://codereview.appspot.com/5461047/diff/11009/misc/dashboard/app/build/build.go#newcode230\nmisc/dashboard/app/build/build.go:230: func GetTag(c appengine.Context, tag string) (*Tag, os.Error) {\nThe datastore function is called Get, and that's all this function does, so I think GetTag is a fine name.\n\nhttp://codereview.appspot.com/5461047/diff/11009/misc/dashboard/app/build/build.go#newcode397\nmisc/dashboard/app/build/build.go:397: // GetPackages returns all non-Go packages.\nOn 2011/12/15 16:48:29, rsc wrote:\n> s/Get//\n\nDone.",
			"disapproval": false,
			"date": "2011-12-15 23:23:05.213841",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5461047/diff/12023/misc/dashboard/app/build/ui.go\nFile misc/dashboard/app/build/ui.go (right):\n\nhttp://codereview.appspot.com/5461047/diff/12023/misc/dashboard/app/build/ui.go#newcode59\nmisc/dashboard/app/build/ui.go:59: err = uiTemplate.Execute(w, struct {\nThe fields get named types.  The struct should have a named type too.\nThis is a monster of a statement.\n\nhttp://codereview.appspot.com/5461047/diff/12023/misc/dashboard/app/build/ui.go#newcode147\nmisc/dashboard/app/build/ui.go:147: var uiTemplate = template.Must(template.New(\"ui\").Funcs(\nhow about\n\nvar uiTemplate = template.Must(\n    template.New(\"ui\").\n        Funcs(\n            ...\n        }).\n        ParseFile(\"build/ui.html\"),\n)\n\nOr else make the FuncMap its own var.\n\nhttp://codereview.appspot.com/5461047/diff/12023/misc/dashboard/app/build/ui.go#newcode150\nmisc/dashboard/app/build/ui.go:150: \"timeString\":   timeString,\nA better name might be datastoreTime\nOf course, you can also write {{.T.Time}} instead of {{.T | timeString}}\nand delete the function entirely.",
			"disapproval": false,
			"date": "2011-12-15 23:33:58.812898",
			"approval": true
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5461047: misc/dashboard: user interface",
	"created": "2011-12-08 06:15:12.909175",
	"patchsets": [
		1,
		2001,
		3001,
		6001,
		9001,
		11008,
		11009,
		12023,
		16002
	],
	"modified": "2011-12-15 23:48:19.111717",
	"closed": true,
	"issue": 5461047
}