{
	"description": "cmd/godoc: bake templates and scripts into godoc binary\n\nFixes issue 6010.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"r@golang.org",
		"arnehormann@gmail.com"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go\nFile cmd/godoc/bake.go (right):\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go#newcode27\ncmd/godoc/bake.go:27: varName = flag.String(\"var\", \"bakedFiles\", \"Map variable name\")\ns/M/m/\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go#newcode42\ncmd/godoc/bake.go:42: os.Stdout.Write(src)\ninstead do\n\nos.Stdout = bufio.NewWriter(os.Stdout)\n\nthen you can use Printf and stream it all nicely. don't forget to flush. \n\n(or create a new variable if you prefer)\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.sh\nFile cmd/godoc/bake.sh (right):\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.sh#newcode9\ncmd/godoc/bake.sh:9: gofmt -w template.go\n\none line is fine\n\ngo run ... | gofmt > template.go",
			"disapproval": false,
			"date": "2013-08-15 06:47:26.920490",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-08-15 06:13:58.878090",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You've seen camlistore's fileembed, right?  It generates embed files that\r\nhave similar line breaks to minimize diff sizes, and uses strings instead\r\nof []byte and gives you an io interface to read it.\r\n\r\n\r\n\r\n\r\nOn Wed, Aug 14, 2013 at 11:13 PM, <adg@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go.**tools <https://code.google.com/p/go.tools>\r\n>\r\n>\r\n> Description:\r\n> cmd/godoc: bake templates and scripts into godoc binary\r\n>\r\n> Add bake utility to cmd/bake.\r\n>\r\n> Fixes issue 6010.\r\n>\r\n> Please review this at https://codereview.appspot.**com/12978043/<https://codereview.appspot.com/12978043/>\r\n>\r\n> Affected files:\r\n>   A cmd/bake/bake.go\r\n>   A cmd/godoc/bake.sh\r\n>   M cmd/godoc/handlers.go\r\n>   A cmd/godoc/template.go\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-15 06:24:07.390950",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "not sure why we need any of this.\n\nhttps://codereview.appspot.com/12978043/diff/1/cmd/bake/bake.go\nFile cmd/bake/bake.go (right):\n\nhttps://codereview.appspot.com/12978043/diff/1/cmd/bake/bake.go#newcode86\ncmd/bake/bake.go:86: // Replace BOM with `+\"\\xEF\\xBB\\xBF\"+`\nthis isn't nearly good enough. you need to worry about lots of other things.\n\ninstead, just make it a byte string and do string(bytestring) if you want a string. avoid the UTF-8 issue altogether.",
			"disapproval": false,
			"date": "2013-08-15 06:26:46.396970",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-15 06:55:33.276450",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 15 August 2013 16:24, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> You've seen camlistore's fileembed, right?  It generates embed files that\r\n> have similar line breaks to minimize diff sizes, and uses strings instead\r\n> of []byte and gives you an io interface to read it.\r\n>\r\n\r\nI'd forgotten about fileembed. But this shouldn't be a go installable tool,\r\nanyway. I've made it simpler still.\r\n",
			"disapproval": false,
			"date": "2013-08-15 06:44:52.355430",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-15 06:42:01.826060",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go\nFile cmd/godoc/bake.go (right):\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go#newcode27\ncmd/godoc/bake.go:27: varName = flag.String(\"var\", \"bakedFiles\", \"Map variable name\")\nOn 2013/08/15 06:47:27, r wrote:\n> s/M/m/\n\nDone.\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go#newcode42\ncmd/godoc/bake.go:42: os.Stdout.Write(src)\nOn 2013/08/15 06:47:27, r wrote:\n> instead do\n> \n> os.Stdout = bufio.NewWriter(os.Stdout)\n> \n> then you can use Printf and stream it all nicely. don't forget to flush. \n> \n> (or create a new variable if you prefer)\n> \n\nDone.\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.sh\nFile cmd/godoc/bake.sh (right):\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.sh#newcode9\ncmd/godoc/bake.sh:9: gofmt -w template.go\nOn 2013/08/15 06:47:27, r wrote:\n> \n> one line is fine\n> \n> go run ... | gofmt > template.go\n\nDone.",
			"disapproval": false,
			"date": "2013-08-15 06:52:17.198080",
			"approval": false
		},
		{
			"sender": "arnehormann@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"arnehormann@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12978043/diff/14001/cmd/godoc/bake.go\nFile cmd/godoc/bake.go (right):\n\nhttps://codereview.appspot.com/12978043/diff/14001/cmd/godoc/bake.go#newcode13\ncmd/godoc/bake.go:13: // of foo.txt and bar.txt.\ns/foo.txt/foo.html/",
			"disapproval": false,
			"date": "2013-08-15 08:09:10.765440",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 12978043: cmd/godoc: bake templates and scripts into godoc binary",
	"created": "2013-08-15 06:13:50.088790",
	"patchsets": [
		1,
		7001,
		14001
	],
	"modified": "2013-08-15 11:24:36.941180",
	"closed": false,
	"issue": 12978043
}