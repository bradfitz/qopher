{
	"description": "exp/html/atom: faster Lookup with smaller tables\n\nUse perfect cuckoo hash, to avoid binary search.\nDefine Atom bits as offset+len in long string instead\nof enumeration, to avoid string headers.\n\nBefore: 1909 string bytes + 6060 tables = 7969 total data\nAfter: 1406 string bytes + 2048 tables = 3454 total data\n\nbenchmark          old ns/op    new ns/op    delta\nBenchmarkLookup        83878        64681  -22.89%",
	"cc": [
		"nigeltao@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-06-01 14:06:33.935899",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "nice\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/atom.go\nFile src/pkg/exp/html/atom/atom.go (right):\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/atom.go#newcode75\nsrc/pkg/exp/html/atom/atom.go:75: // equivalent to string(s), but it may be more efficient.\nnot necessary to add this word\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/gen.go\nFile src/pkg/exp/html/atom/gen.go (right):\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/gen.go#newcode92\nsrc/pkg/exp/html/atom/gen.go:92: for changed {\nscope:\n\nfor changed := true; changed; {\n}\n\nbut i would write\n\nfor {\n   changed := false\n   for { ... }\n   if !changed {\n      break\n   }\n}\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/gen.go#newcode110\nsrc/pkg/exp/html/atom/gen.go:110: changed = false\nhere you don't even need changed. see below\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/gen.go#newcode111\nsrc/pkg/exp/html/atom/gen.go:111: besti := -1\ni could use a comment on these variables\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/gen.go#newcode134\nsrc/pkg/exp/html/atom/gen.go:134: changed = true\ncontinue\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/gen.go#newcode135\nsrc/pkg/exp/html/atom/gen.go:135: }\nbreak\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/table.go\nFile src/pkg/exp/html/atom/table.go (right):\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/table.go#newcode629\nsrc/pkg/exp/html/atom/table.go:629: var testAtomList = []string{\nare you sure this isn't present in non-test binaries? you're depending on the linker. it would be almost as easy and guaranteed safe to make an atomtext_test.go file for this",
			"disapproval": false,
			"date": "2012-06-01 16:05:07.602215",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/atom.go\nFile src/pkg/exp/html/atom/atom.go (right):\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/atom.go#newcode50\nsrc/pkg/exp/html/atom/atom.go:50: for i := range t {\nfor i, c := range t {\n\nhttp://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/atom.go#newcode51\nsrc/pkg/exp/html/atom/atom.go:51: if uint32(s[i]) != uint32(t[i]) {\nUnnecessary uint32 conversions?",
			"disapproval": false,
			"date": "2012-06-02 10:25:15.876037",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jun 2, 2012 at 6:25 AM,  <nigeltao@golang.org> wrote:\r\n> http://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/atom.go#newcode50\r\n> src/pkg/exp/html/atom/atom.go:50: for i := range t {\r\n> for i, c := range t {\r\n>\r\n> http://codereview.appspot.com/6262051/diff/5002/src/pkg/exp/html/atom/atom.go#newcode51\r\n> src/pkg/exp/html/atom/atom.go:51: if uint32(s[i]) != uint32(t[i]) {\r\n> Unnecessary uint32 conversions?\r\n\r\nIt's faster as I wrote it, but that's work for the compiler to do.  Will fix.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-06-02 18:04:16.089990",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "you didn't address my question about moving the test data into a separate _test.go file.",
			"disapproval": false,
			"date": "2012-06-02 18:41:00.865830",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6262051/diff/10003/src/pkg/exp/html/atom/gen.go\nFile src/pkg/exp/html/atom/gen.go (right):\n\nhttp://codereview.appspot.com/6262051/diff/10003/src/pkg/exp/html/atom/gen.go#newcode9\nsrc/pkg/exp/html/atom/gen.go:9: // This program generates table.go\nAdd \"and table_test.go\"\n\nhttp://codereview.appspot.com/6262051/diff/10003/src/pkg/exp/html/atom/gen.go#newcode13\nsrc/pkg/exp/html/atom/gen.go:13: //\tgo run\ngo run gen.go -test |gofmt >table_test.go\n\nhttp://codereview.appspot.com/6262051/diff/10003/src/pkg/exp/html/atom/gen.go#newcode187\nsrc/pkg/exp/html/atom/gen.go:187: fmt.Printf(\"const atomtext =\\n\")\ns/atomtext/atomText/ or s/atomtext/text/ ?",
			"disapproval": false,
			"date": "2012-06-03 00:43:19.583138",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-02 18:15:04.792151",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-02 18:51:05.078479",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jun 2, 2012 at 2:41 PM,  <r@golang.org> wrote:\r\n> you didn't address my question about moving the test data into a\r\n> separate _test.go file.\r\n\r\nsorry, not sure how i missed it.\r\nyes, i'm sure that the linker would drop it, but i moved it\r\nto a table_test.go file anyway.\r\n\r\nruss\r\n",
			"disapproval": false,
			"date": "2012-06-02 18:51:01.433687",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but wait for nigeltao",
			"disapproval": false,
			"date": "2012-06-02 20:07:07.894150",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-06-03 00:44:00.555270",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d604b3c0962b ***\n\nexp/html/atom: faster Lookup with smaller tables\n\nUse perfect cuckoo hash, to avoid binary search.\nDefine Atom bits as offset+len in long string instead\nof enumeration, to avoid string headers.\n\nBefore: 1909 string bytes + 6060 tables = 7969 total data\nAfter: 1406 string bytes + 2048 tables = 3454 total data\n\nbenchmark          old ns/op    new ns/op    delta\nBenchmarkLookup        83878        64681  -22.89%\n\nR=nigeltao, r\nCC=golang-dev\nhttp://codereview.appspot.com/6262051",
			"disapproval": false,
			"date": "2012-06-03 02:43:19.354728",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6262051: exp/html/atom: faster Lookup with smaller tables",
	"created": "2012-06-01 03:51:55.818708",
	"patchsets": [
		1,
		2001,
		5001,
		5002,
		11001,
		14001,
		10003,
		18002
	],
	"modified": "2012-06-03 02:43:20.859461",
	"closed": true,
	"issue": 6262051
}