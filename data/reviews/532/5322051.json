{
	"description": "src/pkg/[a-m]*: gofix -r error -force=error",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nFAKE_REPOSITORY",
			"disapproval": false,
			"date": "2011-10-28 04:06:16.619059",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nAll comments optional.\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/archive/zip/struct.go\nFile src/pkg/archive/zip/struct.go (right):\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/archive/zip/struct.go#newcode65\nsrc/pkg/archive/zip/struct.go:65: if osErr, ok := e.(error); ok {\nName \"osErr\" should change to \"err\".  (Probably for later).\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/big/int_test.go\nFile src/pkg/big/int_test.go (right):\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/big/int_test.go#newcode539\nsrc/pkg/big/int_test.go:539: t.Errorf(\"#%d error: %s\", i, err.Error())\nI think we can s/err.Error()/err/ here.\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/big/rat_test.go\nFile src/pkg/big/rat_test.go (right):\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/big/rat_test.go#newcode115\nsrc/pkg/big/rat_test.go:115: t.Errorf(\"#%d error: %s\", i, err.Error())\ns/err.Error()/err/\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/crypto/bcrypt/bcrypt_test.go\nFile src/pkg/crypto/bcrypt/bcrypt_test.go (right):\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/crypto/bcrypt/bcrypt_test.go#newcode88\nsrc/pkg/crypto/bcrypt/bcrypt_test.go:88: t.Errorf(\"%s gave err %v but should have given %v\", name, err.Error(), expected.Error())\ns/err.Error(), expected.Error()/err, expected/\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/crypto/openpgp/armor/armor.go\nFile src/pkg/crypto/openpgp/armor/armor.go (right):\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/crypto/openpgp/armor/armor.go#newcode12\nsrc/pkg/crypto/openpgp/armor/armor.go:12: error_ \"crypto/openpgp/error\"\nProbably appropriate to rename crypto/openpgp/error, in a different CL.\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/debug/macho/file.go\nFile src/pkg/debug/macho/file.go (right):\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/debug/macho/file.go#newcode180\nsrc/pkg/debug/macho/file.go:180: var err error\nerr should probably be a result variable.\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/debug/pe/file.go\nFile src/pkg/debug/pe/file.go (right):\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/debug/pe/file.go#newcode106\nsrc/pkg/debug/pe/file.go:106: var err error\nerr should probably be a result variable.\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/exp/gui/x11/conn.go\nFile src/pkg/exp/gui/x11/conn.go (right):\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/exp/gui/x11/conn.go#newcode91\nsrc/pkg/exp/gui/x11/conn.go:91: log.Println(\"x11:\", err.Error())\nPerhasp s/err.Error()/err/\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/exp/gui/x11/conn.go#newcode110\nsrc/pkg/exp/gui/x11/conn.go:110: log.Println(\"x11:\", err.Error())\nPerhaps s/err.Error()/err/\n\nhttp://codereview.appspot.com/5322051/diff/2001/src/pkg/exp/gui/x11/conn.go#newcode118\nsrc/pkg/exp/gui/x11/conn.go:118: log.Println(\"x11:\", err.Error())\nPerhaps s/err.Error/err/",
			"disapproval": false,
			"date": "2011-10-29 01:15:13.001324",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Thanks.\n\nI sent out 5302075 to apply most of these cleanups.\n(Some were already in the tree.)\nThe eventual gofix will run on tip and will thus incorporate them.\n\n> http://codereview.appspot.com/5322051/diff/2001/src/pkg/crypto/openpgp/armor/armor.go#newcode12\n> src/pkg/crypto/openpgp/armor/armor.go:12: error_ \"crypto/openpgp/error\"\n> Probably appropriate to rename crypto/openpgp/error, in a different CL.\n\nAgreed.  Leaving for Brad.\n\n> http://codereview.appspot.com/5322051/diff/2001/src/pkg/debug/macho/file.go#newcode180\n> src/pkg/debug/macho/file.go:180: var err error\n> err should probably be a result variable.\n\nFWIW, I've been avoiding this in exported functions, because\nreturning (err os.Error) is noisier in the docs than just\nreturning os.Error.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-10-31 20:57:48.555743",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b78bb4f2d2a3 ***\n\nsrc/pkg/[a-m]*: gofix -r error -force=error\n\nR=golang-dev, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5322051",
			"disapproval": false,
			"date": "2011-11-02 02:04:45.599009",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5322051: src/pkg/[a-m]*: gofix -r error",
	"created": "2011-10-28 02:52:28.931005",
	"patchsets": [
		1,
		2001,
		14001
	],
	"modified": "2011-11-02 02:04:46.574253",
	"closed": true,
	"issue": 5322051
}