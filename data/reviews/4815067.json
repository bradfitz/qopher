{
	"description": "runtime: openbsd amd64 runtime support\n\nAdd support for the go runtime on openbsd/amd64. This is based on\nthe existing freebsd runtime.\n\nThreads are implemented using OpenBSD's rthreads, which are currently\ndisabled by default, however can be enabled via the kern.rthreads\nsysctl.\n\nFor now, cgo is disabled.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-07-29 16:48:43.049386",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/signal.c\nFile src/pkg/runtime/openbsd/amd64/signal.c (right):\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/signal.c#newcode74\nsrc/pkg/runtime/openbsd/amd64/signal.c:74: // TODO: si_addr = info->_data._fault._addr;\nOn 2011/07/29 17:58:49, rsc wrote:\n> Can you do that?\n\nYup.\n\n> If you know the offset from info I don't mind \n> \n> gp->sigcode1 = *(uintptr*)((byte*)info + x);\n\nDone. There are several unions and structs involved, so I think it is easier to do this than it is to pull all of the parts in (godefs chokes on the layout).\n\n> but the address is important for catching bugs in the\n> signal handler (a fault address < 4096 is expected;\n> a fault address bigger than that is a fatal error).\n\nAh, good to know.\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/signal.c#newcode94\nsrc/pkg/runtime/openbsd/amd64/signal.c:94: if(runtime\u00b7sigsend(sig)\nOn 2011/07/29 17:58:49, rsc wrote:\n> gratuitous line wrap?\n\nUnwrapping it makes it >80 characters, not sure of the style specifics for C code in go. Easily changed if need be.\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/sys.s\nFile src/pkg/runtime/openbsd/amd64/sys.s (right):\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/sys.s#newcode176\nsrc/pkg/runtime/openbsd/amd64/sys.s:176: MOVL\t$0, R9\t\t\t// arg 6 - pad\nOn 2011/07/29 17:58:49, rsc wrote:\n> What is this line doing?\n\nErm, that'd be a bug - arg 6 is padding and should be zero. offset is arg 7 and needs to be passed on the stack, which is fixed.",
			"disapproval": false,
			"date": "2011-07-30 16:19:02.703826",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-08-08 13:44:18.548652",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Looks great.\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/signal.c\nFile src/pkg/runtime/openbsd/amd64/signal.c (right):\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/signal.c#newcode74\nsrc/pkg/runtime/openbsd/amd64/signal.c:74: // TODO: si_addr = info->_data._fault._addr;\nCan you do that?\nIf you know the offset from info I don't mind \n\ngp->sigcode1 = *(uintptr*)((byte*)info + x);\n\nbut the address is important for catching bugs in the\nsignal handler (a fault address < 4096 is expected;\na fault address bigger than that is a fatal error).\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/signal.c#newcode94\nsrc/pkg/runtime/openbsd/amd64/signal.c:94: if(runtime\u00b7sigsend(sig)\ngratuitous line wrap?\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/sys.s\nFile src/pkg/runtime/openbsd/amd64/sys.s (right):\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/sys.s#newcode176\nsrc/pkg/runtime/openbsd/amd64/sys.s:176: MOVL\t$0, R9\t\t\t// arg 6 - pad\nWhat is this line doing?\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/thread.c\nFile src/pkg/runtime/openbsd/thread.c (right):\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/thread.c#newcode14\nsrc/pkg/runtime/openbsd/thread.c:14: // Basic spinlocks using CAS. We can improve on these later.\nOkay for this CL, but you'll need to improve on\nthem real soon.  Right now the note routines will spin badly.",
			"disapproval": false,
			"date": "2011-07-29 17:58:49.946098",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "The definition of struct sigaction was incorrect, which I have also fixed.",
			"disapproval": false,
			"date": "2011-08-01 10:47:44.029186",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/signal.c\nFile src/pkg/runtime/openbsd/amd64/signal.c (right):\n\nhttp://codereview.appspot.com/4815067/diff/2011/src/pkg/runtime/openbsd/amd64/signal.c#newcode94\nsrc/pkg/runtime/openbsd/amd64/signal.c:94: if(runtime\u00b7sigsend(sig)\nOn 2011/07/30 16:19:02, jsing wrote:\n> On 2011/07/29 17:58:49, rsc wrote:\n> > gratuitous line wrap?\n> \n> Unwrapping it makes it >80 characters, not sure of the style specifics for C\n> code in go. Easily changed if need be.\n\nFine as is, but just fyi there's no rigid 80-char limit here.\n\nhttp://codereview.appspot.com/4815067/diff/11011/src/pkg/runtime/openbsd/amd64/sys.s\nFile src/pkg/runtime/openbsd/amd64/sys.s (right):\n\nhttp://codereview.appspot.com/4815067/diff/11011/src/pkg/runtime/openbsd/amd64/sys.s#newcode177\nsrc/pkg/runtime/openbsd/amd64/sys.s:177: MOVL\tR9, 8(SP)\t\t// arg 7 - offset\nIsn't this overwriting arg 1 - addr?\nWhy?  Is that where arg 7 goes in the\ncalling convention?\nIs it really only 32 bits?\nWorth a comment.",
			"disapproval": false,
			"date": "2011-08-03 20:38:52.891218",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Please take a look.\n\nhttp://codereview.appspot.com/4815067/diff/11011/src/pkg/runtime/openbsd/amd64/sys.s\nFile src/pkg/runtime/openbsd/amd64/sys.s (right):\n\nhttp://codereview.appspot.com/4815067/diff/11011/src/pkg/runtime/openbsd/amd64/sys.s#newcode177\nsrc/pkg/runtime/openbsd/amd64/sys.s:177: MOVL\tR9, 8(SP)\t\t// arg 7 - offset\nOn 2011/08/03 20:38:53, rsc wrote:\n> Isn't this overwriting arg 1 - addr?\n\nYes.\n\n> Why?  Is that where arg 7 goes in the\n> calling convention?\n\nEffectively - arg 7 gets passed on the stack at 8(SP) - I figured we could easily overwrite arg 1 since we have already loaded this into DI. Otherwise we can allocate additional stack space if preferred.\n\n> Is it really only 32 bits?\n\nNo, that should be MOVQ - fixed.\n\n> Worth a comment.\n\nSure.",
			"disapproval": false,
			"date": "2011-08-04 17:15:24.621170",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jsing@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=6bbe8fb97f27 ***\n\nruntime: openbsd amd64 runtime support\n\nAdd support for the go runtime on openbsd/amd64. This is based on\nthe existing freebsd runtime.\n\nThreads are implemented using OpenBSD's rthreads, which are currently\ndisabled by default, however can be enabled via the kern.rthreads\nsysctl.\n\nFor now, cgo is disabled.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/4815067\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-08-08 13:56:41.258138",
			"approval": false
		}
	],
	"owner_email": "jsing@google.com",
	"private": false,
	"base_url": "",
	"owner": "jsing",
	"subject": "code review 4815067: runtime: openbsd amd64 runtime support",
	"created": "2011-07-28 14:54:34.753304",
	"patchsets": [
		14,
		2011,
		9022,
		11011,
		20001
	],
	"modified": "2011-09-10 16:32:45.311419",
	"closed": true,
	"issue": 4815067
}