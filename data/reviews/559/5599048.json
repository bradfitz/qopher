{
	"description": "godoc: add URL mode m=methods\n\nIf set, all methods are shown, not just those\nof non-exported anonynous fields.\n\nThis change will only become functional once\nCL 5576057 is submitted.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-01-30 20:05:04.255889",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Mon, Jan 30, 2012 at 12:05 PM, <gri@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go\n>\n>\n> Description:\n> godoc: add URL mode m=methods\n>\n> If set, all methods are shown, not just those\n> of non-exported anonynous fields.\n>\n> Please review this at http://codereview.appspot.com/**5599048/<http://codereview.appspot.com/5599048/>\n>\n> Affected files:\n>  M src/cmd/godoc/doc.go\n>  M src/cmd/godoc/godoc.go\n>\n>\n> Index: src/cmd/godoc/doc.go\n> ==============================**==============================**=======\n> --- a/src/cmd/godoc/doc.go\n> +++ b/src/cmd/godoc/doc.go\n> @@ -131,7 +131,8 @@\n>  The presentation mode of web pages served by godoc can be controlled with\n> the\n>  \"m\" URL parameter; it accepts a comma-separated list of flag names as\n> value:\n>\n> -       all     show documentation for all (not just exported) declarations\n> +       all     show documentation for all declarations, not just the\n> exported ones\n> +       methods show all embedded methods, not just those of unexported\n> anonymous fields\n>        src     show the original source code rather then the extracted\n> documentation\n>        text    present the page in textual (command-line) form rather than\n> HTML\n>        flat    present flat (not indented) directory listings using full\n> paths\n> Index: src/cmd/godoc/godoc.go\n> ==============================**==============================**=======\n> --- a/src/cmd/godoc/godoc.go\n> +++ b/src/cmd/godoc/godoc.go\n> @@ -867,6 +867,7 @@\n>\n>  const (\n>        noFiltering PageInfoMode = 1 << iota // do not filter exports\n> +       allMethods                           // show all embedded methods\n>        showSource                           // show source code, do not\n> extract documentation\n>        noHtml                               // show result in textual\n> form, do not generate HTML\n>        flatDir                              // show directory in a flat\n> (non-indented) manner\n> @@ -874,10 +875,11 @@\n>\n>  // modeNames defines names for each PageInfoMode flag.\n>  var modeNames = map[string]PageInfoMode{\n> -       \"all\":  noFiltering,\n> -       \"src\":  showSource,\n> -       \"text\": noHtml,\n> -       \"flat\": flatDir,\n> +       \"all\":     noFiltering,\n> +       \"methods\": allMethods,\n> +       \"src\":     showSource,\n> +       \"text\":    noHtml,\n> +       \"flat\":    flatDir,\n>  }\n>\n>  // getPageInfoMode computes the PageInfoMode flags by analyzing the\n> request\n> @@ -1088,6 +1090,9 @@\n>                        if mode&noFiltering != 0 {\n>                                m = doc.AllDecls\n>                        }\n> +                       if mode&allMethods != 0 {\n> +                               m |= doc.AllMethods\n> +                       }\n>                        pdoc = doc.New(pkg, path.Clean(relpath), m) // no\n> trailing '/' in importpath\n>                } else {\n>                        // show source code\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-30 20:06:14.835217",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 7386bcafa9ac ***\n\ngodoc: add URL mode m=methods\n\nIf set, all methods are shown, not just those\nof non-exported anonynous fields.\n\nThis change will only become functional once\nCL 5576057 is submitted.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5599048",
			"disapproval": false,
			"date": "2012-01-30 22:07:54.957931",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5599048: godoc: add URL mode m=methods",
	"created": "2012-01-30 20:05:01.074887",
	"patchsets": [
		1,
		4001
	],
	"modified": "2012-01-30 22:07:56.674866",
	"closed": true,
	"issue": 5599048
}