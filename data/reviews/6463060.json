{
	"description": "all: move defers to after error check to avoid nil indirection\nOnly affects some tests and none seem likely to be problematic, but let's fix them.\nFixes issue 3971.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@google.com"
	],
	"reviewers": [
		"robert.hencke@gmail.com",
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-08-17 18:50:16.813070",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Fri, Aug 17, 2012 at 11:50 AM,  <r@golang.org> wrote:\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> all: move defers to after error check to avoid nil indirection\r\n> Only affects some tests and none seem likely to be problematic, but\r\n> let's fix them.\r\n> Fixes issue 3971.\r\n>\r\n> Please review this at http://codereview.appspot.com/6463060/\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/http/transport_test.go\r\n>   M src/pkg/os/os_test.go\r\n>\r\n>\r\n> Index: src/pkg/net/http/transport_test.go\r\n> ===================================================================\r\n> --- a/src/pkg/net/http/transport_test.go\r\n> +++ b/src/pkg/net/http/transport_test.go\r\n> @@ -161,10 +161,10 @@\r\n>                                 t.Fatalf(\"error in connectionClose=%v, req\r\n> #%d, Do: %v\", connectionClose, n, err)\r\n>                         }\r\n>                         body, err := ioutil.ReadAll(res.Body)\r\n> -                       defer res.Body.Close()\r\n>                         if err != nil {\r\n>                                 t.Fatalf(\"error in connectionClose=%v, req\r\n> #%d, ReadAll: %v\", connectionClose, n, err)\r\n>                         }\r\n> +                       defer res.Body.Close()\r\n>                         return string(body)\r\n>                 }\r\n>\r\n> Index: src/pkg/os/os_test.go\r\n> ===================================================================\r\n> --- a/src/pkg/os/os_test.go\r\n> +++ b/src/pkg/os/os_test.go\r\n> @@ -69,10 +69,10 @@\r\n>\r\n>  func size(name string, t *testing.T) int64 {\r\n>         file, err := Open(name)\r\n> -       defer file.Close()\r\n>         if err != nil {\r\n>                 t.Fatal(\"open failed:\", err)\r\n>         }\r\n> +       defer file.Close()\r\n>         var buf [100]byte\r\n>         len := 0\r\n>         for {\r\n> @@ -134,10 +134,10 @@\r\n>  func TestFstat(t *testing.T) {\r\n>         path := sfdir + \"/\" + sfname\r\n>         file, err1 := Open(path)\r\n> -       defer file.Close()\r\n>         if err1 != nil {\r\n>                 t.Fatal(\"open failed:\", err1)\r\n>         }\r\n> +       defer file.Close()\r\n>         dir, err2 := file.Stat()\r\n>         if err2 != nil {\r\n>                 t.Fatal(\"fstat failed:\", err2)\r\n> @@ -189,10 +189,10 @@\r\n>\r\n>  func testReaddirnames(dir string, contents []string, t *testing.T) {\r\n>         file, err := Open(dir)\r\n> -       defer file.Close()\r\n>         if err != nil {\r\n>                 t.Fatalf(\"open %q failed: %v\", dir, err)\r\n>         }\r\n> +       defer file.Close()\r\n>         s, err2 := file.Readdirnames(-1)\r\n>         if err2 != nil {\r\n>                 t.Fatalf(\"readdirnames %q failed: %v\", dir, err2)\r\n> @@ -218,10 +218,10 @@\r\n>\r\n>  func testReaddir(dir string, contents []string, t *testing.T) {\r\n>         file, err := Open(dir)\r\n> -       defer file.Close()\r\n>         if err != nil {\r\n>                 t.Fatalf(\"open %q failed: %v\", dir, err)\r\n>         }\r\n> +       defer file.Close()\r\n>         s, err2 := file.Readdir(-1)\r\n>         if err2 != nil {\r\n>                 t.Fatalf(\"readdir %q failed: %v\", dir, err2)\r\n> @@ -285,10 +285,10 @@\r\n>                 dir = \"/bin\"\r\n>         }\r\n>         file, err := Open(dir)\r\n> -       defer file.Close()\r\n>         if err != nil {\r\n>                 t.Fatalf(\"open %q failed: %v\", dir, err)\r\n>         }\r\n> +       defer file.Close()\r\n>         all, err1 := file.Readdirnames(-1)\r\n>         if err1 != nil {\r\n>                 t.Fatalf(\"readdirnames %q failed: %v\", dir, err1)\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-08-17 18:51:44.484690",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=8f0c8f604ee0 ***\n\nall: move defers to after error check to avoid nil indirection\nOnly affects some tests and none seem likely to be problematic, but let's fix them.\nFixes issue 3971.\n\nR=golang-dev, iant\nCC=golang-dev\nhttp://codereview.appspot.com/6463060",
			"disapproval": false,
			"date": "2012-08-17 18:55:13.911530",
			"approval": false
		},
		{
			"sender": "robert.hencke@gmail.com",
			"recipients": [
				"r@golang.org",
				"robert.hencke@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6463060/diff/4001/src/pkg/net/http/transport_test.go\nFile src/pkg/net/http/transport_test.go (right):\n\nhttp://codereview.appspot.com/6463060/diff/4001/src/pkg/net/http/transport_test.go#newcode167\nsrc/pkg/net/http/transport_test.go:167: defer res.Body.Close()\nWith this change, res.Body will not be closed if ioutil.ReadAll returns an error.",
			"disapproval": false,
			"date": "2012-08-18 02:07:35.951430",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"r@golang.org",
				"robert.hencke@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> With this change, res.Body will not be closed if ioutil.ReadAll returns an\n> error.\n\nhttp://codereview.appspot.com/6458158",
			"disapproval": false,
			"date": "2012-08-18 10:19:07.674690",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6463060: all: move defers to after error check to avoid nil indi...",
	"created": "2012-08-17 18:50:13.469440",
	"patchsets": [
		1,
		4001
	],
	"modified": "2012-08-18 10:19:07.731240",
	"closed": true,
	"issue": 6463060
}