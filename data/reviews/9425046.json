{
	"description": "compress/flate: faster version of forwardCopy\n\nbenchmark                           old ns/op    new ns/op    delta\nBenchmarkDecodeDigitsSpeed1e4          197767       203490   +2.89%\nBenchmarkDecodeDigitsSpeed1e5         1873969      1912761   +2.07%\nBenchmarkDecodeDigitsSpeed1e6        18922760     19021056   +0.52%\nBenchmarkDecodeDigitsDefault1e4        194975       197054   +1.07%\nBenchmarkDecodeDigitsDefault1e5       1704262      1719988   +0.92%\nBenchmarkDecodeDigitsDefault1e6      16618354     16351957   -1.60%\nBenchmarkDecodeDigitsCompress1e4       195281       194626   -0.34%\nBenchmarkDecodeDigitsCompress1e5      1694364      1702372   +0.47%\nBenchmarkDecodeDigitsCompress1e6     16463347     16492126   +0.17%\nBenchmarkDecodeTwainSpeed1e4           200653       200127   -0.26%\nBenchmarkDecodeTwainSpeed1e5          1861385      1759632   -5.47%\nBenchmarkDecodeTwainSpeed1e6         18255769     17186679   -5.86%\nBenchmarkDecodeTwainDefault1e4         189080       185157   -2.07%\nBenchmarkDecodeTwainDefault1e5        1559222      1461465   -6.27%\nBenchmarkDecodeTwainDefault1e6       14792125     13879051   -6.17%\nBenchmarkDecodeTwainCompress1e4        188881       185151   -1.97%\nBenchmarkDecodeTwainCompress1e5       1537031      1456945   -5.21%\nBenchmarkDecodeTwainCompress1e6      14805972     13405094   -9.46%\nBenchmarkPaeth                          4            4   -0.89%\nBenchmarkDecodeGray                964679       937244   -2.84%\nBenchmarkDecodeNRGBAGradient      3753769      3646416   -2.86%\nBenchmarkDecodeNRGBAOpaque        3165856      2981300   -5.83%\nBenchmarkDecodePaletted            713950       691984   -3.08%\nBenchmarkDecodeRGB                3051718      2924260   -4.18%",
	"cc": [
		"nigeltao@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com",
		"raph@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"khr@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "How does this do now?",
			"disapproval": false,
			"date": "2013-05-17 21:24:33.607860",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It gets about a 5% improvement.  Not much, I think because most of the\r\nforwardCopy calls only involve a few bytes.\r\n\r\nbenchmark                           old ns/op    new ns/op    delta\r\nBenchmarkDecodeDigitsSpeed1e4          203359       199060   -2.11%\r\nBenchmarkDecodeDigitsSpeed1e5         1872826      1879606   +0.36%\r\nBenchmarkDecodeDigitsSpeed1e6        18946346     19013571   +0.35%\r\nBenchmarkDecodeDigitsDefault1e4        194680       196858   +1.12%\r\nBenchmarkDecodeDigitsDefault1e5       1692621      1706054   +0.79%\r\nBenchmarkDecodeDigitsDefault1e6      16444023     16441912   -0.01%\r\nBenchmarkDecodeDigitsCompress1e4       195155       195971   +0.42%\r\nBenchmarkDecodeDigitsCompress1e5      1705810      1703752   -0.12%\r\nBenchmarkDecodeDigitsCompress1e6     16637167     16416675   -1.33%\r\nBenchmarkDecodeTwainSpeed1e4           201587       199568   -1.00%\r\nBenchmarkDecodeTwainSpeed1e5          1865879      1762376   -5.55%\r\nBenchmarkDecodeTwainSpeed1e6         18276961     17345306   -5.10%\r\nBenchmarkDecodeTwainDefault1e4         190789       186029   -2.49%\r\nBenchmarkDecodeTwainDefault1e5        1560150      1466027   -6.03%\r\nBenchmarkDecodeTwainDefault1e6       15167339     13905947   -8.32%\r\nBenchmarkDecodeTwainCompress1e4        193672       185504   -4.22%\r\nBenchmarkDecodeTwainCompress1e5       1543680      1479615   -4.15%\r\nBenchmarkDecodeTwainCompress1e6      14796402     13854737   -6.36%\r\n\r\n\r\n\r\nOn Fri, May 17, 2013 at 2:24 PM, <bradfitz@golang.org> wrote:\r\n\r\n> How does this do now?\r\n>\r\n>\r\n> https://codereview.appspot.**com/9425046/<https://codereview.appspot.com/9425046/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-17 22:00:38.384090",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Seems worth it.\r\n\r\n\r\n\r\nOn Fri, May 17, 2013 at 3:00 PM, Keith Randall <khr@google.com> wrote:\r\n\r\n> It gets about a 5% improvement.  Not much, I think because most of the\r\n> forwardCopy calls only involve a few bytes.\r\n>\r\n> benchmark                           old ns/op    new ns/op    delta\r\n> BenchmarkDecodeDigitsSpeed1e4          203359       199060   -2.11%\r\n> BenchmarkDecodeDigitsSpeed1e5         1872826      1879606   +0.36%\r\n> BenchmarkDecodeDigitsSpeed1e6        18946346     19013571   +0.35%\r\n> BenchmarkDecodeDigitsDefault1e4        194680       196858   +1.12%\r\n> BenchmarkDecodeDigitsDefault1e5       1692621      1706054   +0.79%\r\n> BenchmarkDecodeDigitsDefault1e6      16444023     16441912   -0.01%\r\n> BenchmarkDecodeDigitsCompress1e4       195155       195971   +0.42%\r\n> BenchmarkDecodeDigitsCompress1e5      1705810      1703752   -0.12%\r\n> BenchmarkDecodeDigitsCompress1e6     16637167     16416675   -1.33%\r\n> BenchmarkDecodeTwainSpeed1e4           201587       199568   -1.00%\r\n> BenchmarkDecodeTwainSpeed1e5          1865879      1762376   -5.55%\r\n> BenchmarkDecodeTwainSpeed1e6         18276961     17345306   -5.10%\r\n> BenchmarkDecodeTwainDefault1e4         190789       186029   -2.49%\r\n> BenchmarkDecodeTwainDefault1e5        1560150      1466027   -6.03%\r\n> BenchmarkDecodeTwainDefault1e6       15167339     13905947   -8.32%\r\n> BenchmarkDecodeTwainCompress1e4        193672       185504   -4.22%\r\n> BenchmarkDecodeTwainCompress1e5       1543680      1479615   -4.15%\r\n> BenchmarkDecodeTwainCompress1e6      14796402     13854737   -6.36%\r\n>\r\n>\r\n>\r\n> On Fri, May 17, 2013 at 2:24 PM, <bradfitz@golang.org> wrote:\r\n>\r\n>> How does this do now?\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/9425046/<https://codereview.appspot.com/9425046/>\r\n>>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-17 22:05:57.291360",
			"approval": false
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"bradfitz@golang.org",
				"khr@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org, khr@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://khr%40golang.org@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-05-17 22:16:44.614690",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I defer to others on this.\r\n\r\n\r\n\r\nOn Fri, May 17, 2013 at 3:16 PM, <khr@golang.org> wrote:\r\n\r\n> Reviewers: bradfitz, khr1,\r\n>\r\n> Message:\r\n> Hello bradfitz@golang.org, khr@google.com (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://khr%40golang.org@code.**google.com/p/go/<http://40golang.org@code.google.com/p/go/>\r\n>\r\n>\r\n> Description:\r\n> compress/flate: faster version of forwardCopy\r\n>\r\n> benchmark                           old ns/op    new ns/op    delta\r\n> BenchmarkDecodeDigitsSpeed1e4          197767       203490   +2.89%\r\n> BenchmarkDecodeDigitsSpeed1e5         1873969      1912761   +2.07%\r\n> BenchmarkDecodeDigitsSpeed1e6        18922760     19021056   +0.52%\r\n> BenchmarkDecodeDigitsDefault1e**4        194975       197054   +1.07%\r\n> BenchmarkDecodeDigitsDefault1e**5       1704262      1719988   +0.92%\r\n> BenchmarkDecodeDigitsDefault1e**6      16618354     16351957   -1.60%\r\n> BenchmarkDecodeDigitsCompress1**e4       195281       194626   -0.34%\r\n> BenchmarkDecodeDigitsCompress1**e5      1694364      1702372   +0.47%\r\n> BenchmarkDecodeDigitsCompress1**e6     16463347     16492126   +0.17%\r\n> BenchmarkDecodeTwainSpeed1e4           200653       200127   -0.26%\r\n> BenchmarkDecodeTwainSpeed1e5          1861385      1759632   -5.47%\r\n> BenchmarkDecodeTwainSpeed1e6         18255769     17186679   -5.86%\r\n> BenchmarkDecodeTwainDefault1e4         189080       185157   -2.07%\r\n> BenchmarkDecodeTwainDefault1e5        1559222      1461465   -6.27%\r\n> BenchmarkDecodeTwainDefault1e6       14792125     13879051   -6.17%\r\n> BenchmarkDecodeTwainCompress1e**4        188881       185151   -1.97%\r\n> BenchmarkDecodeTwainCompress1e**5       1537031      1456945   -5.21%\r\n> BenchmarkDecodeTwainCompress1e**6      14805972     13405094   -9.46%\r\n>\r\n> Please review this at https://codereview.appspot.**com/9425046/<https://codereview.appspot.com/9425046/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/compress/flate/copy.go\r\n>   M src/pkg/compress/flate/copy_**test.go\r\n>   M src/pkg/compress/flate/**inflate.go\r\n>\r\n>\r\n> Index: src/pkg/compress/flate/copy.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/compress/flate/copy.**go\r\n> +++ b/src/pkg/compress/flate/copy.**go\r\n> @@ -6,12 +6,27 @@\r\n>\r\n>  // forwardCopy is like the built-in copy function except that it always\r\n> goes\r\n>  // forward from the start, even if the dst and src overlap.\r\n> -func forwardCopy(dst, src []byte) int {\r\n> -       if len(src) > len(dst) {\r\n> -               src = src[:len(dst)]\r\n> +// equivalent to:\r\n> +//   for i := 0; i < n; i++ {\r\n> +//     mem[dst+i] = mem[src+i]\r\n> +//   }\r\n> +func forwardCopy(mem []byte, dst, src, n int) {\r\n> +       if dst <= src {\r\n> +               copy(mem[dst:dst+n], mem[src:src+n])\r\n> +               return\r\n>         }\r\n> -       for i, x := range src {\r\n> -               dst[i] = x\r\n> +       for {\r\n> +               if dst >= src+n {\r\n> +                       copy(mem[dst:dst+n], mem[src:src+n])\r\n> +                       return\r\n> +               }\r\n> +               // There is some forward overlap.  The destination\r\n> +               // will be filled with a repeated pattern of\r\n> mem[src:src+k].\r\n> +               // We copy one instance of the pattern here, then repeat.\r\n> +               // Each time around this loop k will double.\r\n> +               k := dst - src\r\n> +               copy(mem[dst:dst+k], mem[src:src+k])\r\n> +               n -= k\r\n> +               dst += k\r\n>         }\r\n> -       return len(src)\r\n>  }\r\n> Index: src/pkg/compress/flate/copy_**test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/compress/flate/copy_**test.go\r\n> +++ b/src/pkg/compress/flate/copy_**test.go\r\n> @@ -30,10 +30,12 @@\r\n>         }\r\n>         for _, tc := range testCases {\r\n>                 b := []byte(\"0123456789\")\r\n> -               dst := b[tc.dst0:tc.dst1]\r\n> -               src := b[tc.src0:tc.src1]\r\n> -               n := forwardCopy(dst, src)\r\n> -               got := string(dst[:n])\r\n> +               n := tc.dst1 - tc.dst0\r\n> +               if tc.src1-tc.src0 < n {\r\n> +                       n = tc.src1 - tc.src0\r\n> +               }\r\n> +               forwardCopy(b, tc.dst0, tc.src0, n)\r\n> +               got := string(b[tc.dst0 : tc.dst0+n])\r\n>                 if got != tc.want {\r\n>                         t.Errorf(\"dst=b[%d:%d], src=b[%d:%d]: got %q, want\r\n> %q\",\r\n>                                 tc.dst0, tc.dst1, tc.src0, tc.src1, got,\r\n> tc.want)\r\n> Index: src/pkg/compress/flate/**inflate.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/compress/flate/**inflate.go\r\n> +++ b/src/pkg/compress/flate/**inflate.go\r\n> @@ -511,7 +511,7 @@\r\n>                 if x := len(f.hist) - p; n > x {\r\n>                         n = x\r\n>                 }\r\n> -               forwardCopy(f.hist[f.hp:f.hp+**n], f.hist[p:p+n])\r\n> +               forwardCopy(f.hist[:], f.hp, p, n)\r\n>                 p += n\r\n>                 f.hp += n\r\n>                 f.copyLen -= n\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-17 22:19:47.843040",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"khr@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"raph@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nCC'ing Raph Levien, since we were just talking yesterday about optimizing flate.\n\nhttps://codereview.appspot.com/9425046/diff/6002/src/pkg/compress/flate/copy.go\nFile src/pkg/compress/flate/copy.go (right):\n\nhttps://codereview.appspot.com/9425046/diff/6002/src/pkg/compress/flate/copy.go#newcode9\nsrc/pkg/compress/flate/copy.go:9: // equivalent to:\nMake this a complete sentence:\n\n// It is equivalent to:",
			"disapproval": false,
			"date": "2013-05-18 17:32:38.126140",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Out of curiousity, can we also get a benchcmp for image/png?\r\n",
			"disapproval": false,
			"date": "2013-05-18 17:52:27.434240",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, May 18, 2013 at 10:52 AM, Nigel Tao <nigeltao@golang.org> wrote:\r\n\r\n> Out of curiousity, can we also get a benchcmp for image/png?\r\n>\r\n\r\nbenchmark                       old ns/op    new ns/op    delta\r\nBenchmarkPaeth                          5            5   +2.69%\r\nBenchmarkDecodeGray               1292058      1207025   -6.58%\r\nBenchmarkDecodeNRGBAGradient      5471073      4603122  -15.86%\r\nBenchmarkDecodeNRGBAOpaque        4765816      4036000  -15.31%\r\nBenchmarkDecodePaletted           1037492       853686  -17.72%\r\nBenchmarkDecodeRGB                5302434      4470217  -15.69%\r\nBenchmarkEncodeGray               7289243      6146824  -15.67%\r\nBenchmarkEncodeNRGBOpaque        21253587     18765274  -11.71%\r\nBenchmarkEncodeNRGBA             22622053     22235804   -1.71%\r\nBenchmarkEncodePaletted           6098935      6292153   +3.17%\r\nBenchmarkEncodeRGBOpaque         18819536     19607316   +4.19%\r\nBenchmarkEncodeRGBA              50199860     50570850   +0.74%\r\n\r\nbenchmark                        old MB/s     new MB/s  speedup\r\nBenchmarkDecodeGray                 50.72        54.30    1.07x\r\nBenchmarkDecodeNRGBAGradient        47.91        56.95    1.19x\r\nBenchmarkDecodeNRGBAOpaque          55.01        64.95    1.18x\r\nBenchmarkDecodePaletted             63.17        76.77    1.22x\r\nBenchmarkDecodeRGB                  49.44        58.64    1.19x\r\nBenchmarkEncodeGray                 42.14        49.98    1.19x\r\nBenchmarkEncodeNRGBOpaque           57.82        65.48    1.13x\r\nBenchmarkEncodeNRGBA                54.32        55.26    1.02x\r\nBenchmarkEncodePaletted             50.37        48.82    0.97x\r\nBenchmarkEncodeRGBOpaque            65.29        62.67    0.96x\r\nBenchmarkEncodeRGBA                 24.48        24.30    0.99x\r\n",
			"disapproval": false,
			"date": "2013-05-18 20:32:07.915700",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "processor : 7\r\nvendor_id : GenuineIntel\r\ncpu family : 6\r\nmodel : 30\r\nmodel name : Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz\r\nstepping : 5\r\nmicrocode : 0x3\r\ncpu MHz : 1200.000\r\ncache size : 8192 KB\r\n\r\n\r\n\r\n\r\n2013/5/18 Brad Fitzpatrick <bradfitz@golang.org>\r\n\r\n>\r\n>\r\n>\r\n> On Sat, May 18, 2013 at 10:52 AM, Nigel Tao <nigeltao@golang.org> wrote:\r\n>\r\n>> Out of curiousity, can we also get a benchcmp for image/png?\r\n>>\r\n>\r\n> benchmark                       old ns/op    new ns/op    delta\r\n> BenchmarkPaeth                          5            5   +2.69%\r\n> BenchmarkDecodeGray               1292058      1207025   -6.58%\r\n> BenchmarkDecodeNRGBAGradient      5471073      4603122  -15.86%\r\n> BenchmarkDecodeNRGBAOpaque        4765816      4036000  -15.31%\r\n> BenchmarkDecodePaletted           1037492       853686  -17.72%\r\n> BenchmarkDecodeRGB                5302434      4470217  -15.69%\r\n> BenchmarkEncodeGray               7289243      6146824  -15.67%\r\n> BenchmarkEncodeNRGBOpaque        21253587     18765274  -11.71%\r\n> BenchmarkEncodeNRGBA             22622053     22235804   -1.71%\r\n> BenchmarkEncodePaletted           6098935      6292153   +3.17%\r\n> BenchmarkEncodeRGBOpaque         18819536     19607316   +4.19%\r\n> BenchmarkEncodeRGBA              50199860     50570850   +0.74%\r\n>\r\n> benchmark                        old MB/s     new MB/s  speedup\r\n> BenchmarkDecodeGray                 50.72        54.30    1.07x\r\n> BenchmarkDecodeNRGBAGradient        47.91        56.95    1.19x\r\n> BenchmarkDecodeNRGBAOpaque          55.01        64.95    1.18x\r\n> BenchmarkDecodePaletted             63.17        76.77    1.22x\r\n> BenchmarkDecodeRGB                  49.44        58.64    1.19x\r\n> BenchmarkEncodeGray                 42.14        49.98    1.19x\r\n> BenchmarkEncodeNRGBOpaque           57.82        65.48    1.13x\r\n> BenchmarkEncodeNRGBA                54.32        55.26    1.02x\r\n> BenchmarkEncodePaletted             50.37        48.82    0.97x\r\n> BenchmarkEncodeRGBOpaque            65.29        62.67    0.96x\r\n> BenchmarkEncodeRGBA                 24.48        24.30    0.99x\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-18 20:32:55.203440",
			"approval": false
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"raph@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=bd653e485f1d ***\n\ncompress/flate: faster version of forwardCopy\n\nbenchmark                           old ns/op    new ns/op    delta\nBenchmarkDecodeDigitsSpeed1e4          197767       203490   +2.89%\nBenchmarkDecodeDigitsSpeed1e5         1873969      1912761   +2.07%\nBenchmarkDecodeDigitsSpeed1e6        18922760     19021056   +0.52%\nBenchmarkDecodeDigitsDefault1e4        194975       197054   +1.07%\nBenchmarkDecodeDigitsDefault1e5       1704262      1719988   +0.92%\nBenchmarkDecodeDigitsDefault1e6      16618354     16351957   -1.60%\nBenchmarkDecodeDigitsCompress1e4       195281       194626   -0.34%\nBenchmarkDecodeDigitsCompress1e5      1694364      1702372   +0.47%\nBenchmarkDecodeDigitsCompress1e6     16463347     16492126   +0.17%\nBenchmarkDecodeTwainSpeed1e4           200653       200127   -0.26%\nBenchmarkDecodeTwainSpeed1e5          1861385      1759632   -5.47%\nBenchmarkDecodeTwainSpeed1e6         18255769     17186679   -5.86%\nBenchmarkDecodeTwainDefault1e4         189080       185157   -2.07%\nBenchmarkDecodeTwainDefault1e5        1559222      1461465   -6.27%\nBenchmarkDecodeTwainDefault1e6       14792125     13879051   -6.17%\nBenchmarkDecodeTwainCompress1e4        188881       185151   -1.97%\nBenchmarkDecodeTwainCompress1e5       1537031      1456945   -5.21%\nBenchmarkDecodeTwainCompress1e6      14805972     13405094   -9.46%\nBenchmarkPaeth                          4            4   -0.89%\nBenchmarkDecodeGray                964679       937244   -2.84%\nBenchmarkDecodeNRGBAGradient      3753769      3646416   -2.86%\nBenchmarkDecodeNRGBAOpaque        3165856      2981300   -5.83%\nBenchmarkDecodePaletted            713950       691984   -3.08%\nBenchmarkDecodeRGB                3051718      2924260   -4.18%\n\nR=nigeltao, bradfitz\nCC=golang-dev, raph\nhttps://codereview.appspot.com/9425046",
			"disapproval": false,
			"date": "2013-05-18 22:28:31.287660",
			"approval": false
		}
	],
	"owner_email": "khr@golang.org",
	"private": false,
	"base_url": "",
	"owner": "khr",
	"subject": "code review 9425046: compress/flate: faster version of forwardCopy",
	"created": "2013-05-16 03:29:48.407310",
	"patchsets": [
		1,
		2001,
		7001,
		11001,
		6002,
		23001
	],
	"modified": "2013-05-18 22:28:31.287660",
	"closed": true,
	"issue": 9425046
}