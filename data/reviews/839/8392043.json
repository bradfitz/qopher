{
	"description": "runtime: use a distinct pattern to mark free blocks in need of zeroing",
	"cc": [
		"golang-dev@googlegroups.com",
		"dvyukov@google.com",
		"khr@golang.org",
		"cshapiro@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "cshapiro@google.com",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"khr@golang.org",
				"cshapiro@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/8392043/diff/5001/src/pkg/runtime/mgc0.c\nFile src/pkg/runtime/mgc0.c (right):\n\nhttps://codereview.appspot.com/8392043/diff/5001/src/pkg/runtime/mgc0.c#newcode1610\nsrc/pkg/runtime/mgc0.c:1610: *(uintptr*)p = (uintptr)0xdeaddeaddeaddeadll;\t// needs zeroing\nI have tested with GOARCH=386 so I believe the answer is yes.\n\nhttps://codereview.appspot.com/8392043/diff/5001/src/pkg/runtime/mgc0.c#newcode1610\nsrc/pkg/runtime/mgc0.c:1610: *(uintptr*)p = (uintptr)0xdeaddeaddeaddeadll;\t// needs zeroing\nThanks.  My re-upload changes the value in both places.\n\nhttps://codereview.appspot.com/8392043/diff/5001/src/pkg/runtime/mgc0.c#newcode1625\nsrc/pkg/runtime/mgc0.c:1625: ((uintptr*)p)[1] = 1;\t// mark as \"needs to be zeroed\"\nDone.",
			"disapproval": false,
			"date": "2013-04-04 20:57:23.275660",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8392043/diff/5001/src/pkg/runtime/mgc0.c\nFile src/pkg/runtime/mgc0.c (right):\n\nhttps://codereview.appspot.com/8392043/diff/5001/src/pkg/runtime/mgc0.c#newcode1610\nsrc/pkg/runtime/mgc0.c:1610: *(uintptr*)p = (uintptr)0xdeaddeaddeaddeadll;\t// needs zeroing\nthis is large blocks\nI think you want to change the else branch\nThe first word of blocks is used for freelist links, and the second is overwritten with 1 to mark \"needs zeroing\"",
			"disapproval": false,
			"date": "2013-04-04 20:52:36.858760",
			"approval": false
		},
		{
			"sender": "cshapiro@golang.org",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-04-04 20:49:48.143780",
			"approval": false
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"khr@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8392043/diff/5001/src/pkg/runtime/mgc0.c\nFile src/pkg/runtime/mgc0.c (right):\n\nhttps://codereview.appspot.com/8392043/diff/5001/src/pkg/runtime/mgc0.c#newcode1610\nsrc/pkg/runtime/mgc0.c:1610: *(uintptr*)p = (uintptr)0xdeaddeaddeaddeadll;\t// needs zeroing\nDoes this give an error on 32 bit?\n\nhttps://codereview.appspot.com/8392043/diff/5001/src/pkg/runtime/mgc0.c#newcode1625\nsrc/pkg/runtime/mgc0.c:1625: ((uintptr*)p)[1] = 1;\t// mark as \"needs to be zeroed\"\nDo here as well.",
			"disapproval": false,
			"date": "2013-04-04 20:54:52.586750",
			"approval": false
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"khr@golang.org",
				"cshapiro@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-04-04 21:04:54.457690",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"khr@golang.org",
				"cshapiro@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but please also update runtime\u00b7free() with a different pattern. Hashmaps and some other stuff in runtime uses explicit free().",
			"disapproval": false,
			"date": "2013-04-04 21:06:44.223050",
			"approval": true
		},
		{
			"sender": "cshapiro@golang.org",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"khr@golang.org",
				"cshapiro@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b7bed0313474 ***\n\nruntime: use a distinct pattern to mark free blocks in need of zeroing\n\nR=golang-dev, dvyukov, khr, cshapiro\nCC=golang-dev\nhttps://codereview.appspot.com/8392043",
			"disapproval": false,
			"date": "2013-04-04 21:18:55.870280",
			"approval": false
		}
	],
	"owner_email": "cshapiro@golang.org",
	"private": false,
	"base_url": "",
	"owner": "cshapiro",
	"subject": "code review 8392043: runtime: use a distinct pattern to mark free blocks in ...",
	"created": "2013-04-04 20:49:11.055000",
	"patchsets": [
		1,
		2001,
		5001,
		5002,
		15001,
		17001,
		20001
	],
	"modified": "2013-04-04 21:18:57.066120",
	"closed": true,
	"issue": 8392043
}