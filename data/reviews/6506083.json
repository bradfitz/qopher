{
	"description": "spec: ignore BOMS outside of string and rune literals.\nHappy Birthday UTF-8.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"0xjnml@gmail.com"
	],
	"reviewers": [
		"dsymonds@golang.org"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-09-06 16:25:48.874010",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Note added for reference:\n\nThis is a spec change. The current implementations reject source code containing the (aptly named) BOM. However, that behavior violates the Unicode spec, which requires us to accept, harmlessly, a BOM at the beginning of a file, thank you Notepad.\n\nWe could permit (and ignore) an initial BOM only and that would satisfy Unicode. However, the issue will probably come up again if two BOM-marked files are concatenated with a Unicode-unaware tool, or if some nonconformant program writes it out.  The RFC for syslog encourages putting a BOM on every message, which is not only wrong it's crazy, but that tells us there are people out there who think BOMs provide seasoning to the data and we'll probably see a Go source file with extra flavor one day.\n\nTherefore, in the hope that we will never have to bother with these aBOMinations again, we have decided to ignore them wherever they appear, with the curious but important exception of string and rune literals, where they could conceivably be placed on purpose.",
			"disapproval": false,
			"date": "2012-09-06 16:48:23.328070",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-09-06 17:20:51.389340",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"0xjnml@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4d451585dd02 ***\n\nspec: ignore BOMS outside of string and rune literals.\nHappy Birthday UTF-8.\n\nR=golang-dev, rsc, 0xjnml\nCC=golang-dev\nhttp://codereview.appspot.com/6506083",
			"disapproval": false,
			"date": "2012-09-06 17:37:20.677930",
			"approval": false
		},
		{
			"sender": "0xjnml@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sad pragmatism.\r\n\r\n-j\r\n",
			"disapproval": false,
			"date": "2012-09-06 17:34:37.358920",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-09-06 22:26:48.832670",
			"approval": true
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6506083: spec: ignore BOMS outside of string and rune literals.",
	"created": "2012-09-06 16:25:44.932350",
	"patchsets": [
		1,
		3002
	],
	"modified": "2012-09-06 22:26:48.968370",
	"closed": true,
	"issue": 6506083
}