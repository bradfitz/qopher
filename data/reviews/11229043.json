{
	"description": "go.tools/go/types: more test cases for types.Eval",
	"cc": [
		"adonovan@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-12 20:38:15.567360",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/12 20:38:15, gri wrote:\n> Hello adonovan (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go.tools\n\nLGTM",
			"disapproval": false,
			"date": "2013-07-12 20:43:27.918830",
			"approval": true
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11229043/diff/1/go/types/eval.go\nFile go/types/eval.go (right):\n\nhttps://codereview.appspot.com/11229043/diff/1/go/types/eval.go#newcode44\ngo/types/eval.go:44: // If the expression is a function literal, the function body\ns/is a/contains any/   etc\n\nhttps://codereview.appspot.com/11229043/diff/1/go/types/eval_test.go\nFile go/types/eval_test.go (right):\n\nhttps://codereview.appspot.com/11229043/diff/1/go/types/eval_test.go#newcode83\ngo/types/eval_test.go:83: package p\nCan you add: \n  import \"fmt\"\nand:\n  `fmt.Println => , func(format string, args...interface{})`\n?",
			"disapproval": false,
			"date": "2013-07-12 20:43:33.742650",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=58a04dbe54c1&repo=tools ***\n\ngo.tools/go/types: more test cases for types.Eval\n\nR=adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/11229043",
			"disapproval": false,
			"date": "2013-07-12 20:51:27.113780",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11229043/diff/1/go/types/eval.go\nFile go/types/eval.go (right):\n\nhttps://codereview.appspot.com/11229043/diff/1/go/types/eval.go#newcode44\ngo/types/eval.go:44: // If the expression is a function literal, the function body\nOn 2013/07/12 20:43:34, adonovan wrote:\n> s/is a/contains any/   etc\n\nDone.\n\nhttps://codereview.appspot.com/11229043/diff/1/go/types/eval_test.go\nFile go/types/eval_test.go (right):\n\nhttps://codereview.appspot.com/11229043/diff/1/go/types/eval_test.go#newcode83\ngo/types/eval_test.go:83: package p\nOn 2013/07/12 20:43:34, adonovan wrote:\n> Can you add: \n>   import \"fmt\"\n> and:\n>   `fmt.Println => , func(format string, args...interface{})`\n> ?\n\nDone.\n\nand fixed split (needs to split at first \",\")",
			"disapproval": false,
			"date": "2013-07-12 20:51:23.637600",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 11229043: go.tools/go/types: more test cases for types.Eval",
	"created": "2013-07-12 20:38:12.182150",
	"patchsets": [
		1,
		8001
	],
	"modified": "2013-07-12 20:51:28.913580",
	"closed": true,
	"issue": 11229043
}