{
	"description": "go.net/publicsuffix: new package.\n\nThe tables were generated by:\n\ngo run gen.go -subset -version \"subset of publicsuffix.org's effective_tld_names.dat, hg revision 05b11a8d1ace (2012-11-09)\"       >table.go\n\ngo run gen.go -subset -version \"subset of publicsuffix.org's effective_tld_names.dat, hg revision 05b11a8d1ace (2012-11-09)\" -test >table_test.go\n\nThe input data is subsetted so that code review is easier while still\ncovering the interesting * and ! rules. A follow-up changelist will\ncheck in the unfiltered public suffix list.\n\nUpdate issue 1960.",
	"cc": [
		"rsc@golang.org",
		"dr.volker.dobler@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, dr.volker.dobler@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.net",
			"disapproval": false,
			"date": "2012-12-07 07:18:03.546900",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-12-10 06:01:00.652580",
			"approval": true
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks for correcting my mistake in the kobe.jp case.\n\nhttps://codereview.appspot.com/6912045/diff/4002/publicsuffix/gen.go\nFile publicsuffix/gen.go (right):\n\nhttps://codereview.appspot.com/6912045/diff/4002/publicsuffix/gen.go#newcode40\npublicsuffix/gen.go:40: nodeTypeParentOnly = 1\nAny special reason to have them on 0-2-1 order?\n\nhttps://codereview.appspot.com/6912045/diff/4002/publicsuffix/gen.go#newcode228\npublicsuffix/gen.go:228: fmt.Fprintf(w, \"const text = \")\n// text contains all labels occurring in the rule set in crushed form\nor that like as a comment to text.\n\nhttps://codereview.appspot.com/6912045/diff/4002/publicsuffix/gen.go#newcode259\npublicsuffix/gen.go:259: // envelope calculation suggests that at 6000 rows (of which 90%% are leaves),\ns /90%%/94%/\nIt wouldn't work if only 90% are leaves, or?\nUsing only 32 bits works if there are less than 512\nnon leaves: 2 bit node type, 1 bit wildcard, 15 bit\nlabel offset, 5 bit label length and 9 bit index into\nparent-child table.",
			"disapproval": false,
			"date": "2012-12-09 00:13:02.177680",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6912045/diff/4002/publicsuffix/gen.go\nFile publicsuffix/gen.go (right):\n\nhttps://codereview.appspot.com/6912045/diff/4002/publicsuffix/gen.go#newcode40\npublicsuffix/gen.go:40: nodeTypeParentOnly = 1\nOn 2012/12/09 00:13:02, volker.dobler wrote:\n> Any special reason to have them on 0-2-1 order?\n\nOops, fixed.\n\nhttps://codereview.appspot.com/6912045/diff/4002/publicsuffix/gen.go#newcode228\npublicsuffix/gen.go:228: fmt.Fprintf(w, \"const text = \")\nOn 2012/12/09 00:13:02, volker.dobler wrote:\n> // text contains all labels occurring in the rule set in crushed form\n> or that like as a comment to text. \n\nDone.\n\nhttps://codereview.appspot.com/6912045/diff/4002/publicsuffix/gen.go#newcode259\npublicsuffix/gen.go:259: // envelope calculation suggests that at 6000 rows (of which 90%% are leaves),\nOn 2012/12/09 00:13:02, volker.dobler wrote:\n> s /90%%/94%/\n> It wouldn't work if only 90% are leaves, or?\n> Using only 32 bits works if there are less than 512\n> non leaves: 2 bit node type, 1 bit wildcard, 15 bit\n> label offset, 5 bit label length and 9 bit index into\n> parent-child table.\n\nWell, 90% is approximate. This is all just a rough estimate.\n\nI count 351 non-leaf nodes, which needs 9 bits. The text is 18018 bytes (15 bits), the longest label is 28 bytes (5 bits). That leaves us 3 bits for normal/exception/parent-only node type and the wildcard bit, which is a perfect fit. I'd actually move the wildcard and/or parent-only bits to the parent-child table, to give us a bit more wiggle room for any future expansion to effective_tld_names.dat (such as the new gTLDs).\n\nThese calculations are all done after discarding non-ASCII labels, but I'm waiting for the go.net/punycode package to land before I redo the calculations and actually try to squeeze it all into 32 bits.",
			"disapproval": false,
			"date": "2012-12-09 23:49:02.102680",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI didn't read the implementation very carefully. If you and Volker agree, I'm happy.\n\nhttps://codereview.appspot.com/6912045/diff/6003/publicsuffix/list.go\nFile publicsuffix/list.go (right):\n\nhttps://codereview.appspot.com/6912045/diff/6003/publicsuffix/list.go#newcode18\npublicsuffix/list.go:18: // List implements cookiejar.PublicSuffixList.\n// List implements cookiejar.PublicSuffixList using a copy of the publicsuffix.org\n// database compiled into the library.",
			"disapproval": false,
			"date": "2012-12-12 04:02:35.231260",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=73ed64aa79d2&repo=net ***\n\ngo.net/publicsuffix: new package.\n\nThe tables were generated by:\n\ngo run gen.go -subset -version \"subset of publicsuffix.org's effective_tld_names.dat, hg revision 05b11a8d1ace (2012-11-09)\"       >table.go\n\ngo run gen.go -subset -version \"subset of publicsuffix.org's effective_tld_names.dat, hg revision 05b11a8d1ace (2012-11-09)\" -test >table_test.go\n\nThe input data is subsetted so that code review is easier while still\ncovering the interesting * and ! rules. A follow-up changelist will\ncheck in the unfiltered public suffix list.\n\nUpdate issue 1960.\n\nR=rsc, dr.volker.dobler\nCC=golang-dev\nhttps://codereview.appspot.com/6912045",
			"disapproval": false,
			"date": "2012-12-12 04:59:05.170240",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6912045: go.net/publicsuffix: new package.",
	"created": "2012-12-07 07:10:25.125350",
	"patchsets": [
		1,
		1002,
		2006,
		4002,
		6003,
		15001
	],
	"modified": "2012-12-12 04:59:07.561750",
	"closed": true,
	"issue": 6912045
}