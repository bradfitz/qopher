{
	"description": "encoding/json: properly unmarshal empty arrays.\n\nThe JSON unmarshaller failed to allocate an array when there\nare no values for the input causing the `[]` unmarshalled\nto []interface{} to generate []interface{}(nil) rather than\n[]interface{}{}. This wasn't caught in the tests because Decode()\nworks correctly and because jsonBig never generated zero-sized\narrays. The modification to scanner_test.go quickly triggers\nthe error:\n\nwithout the change to decoder.go, but with the change to scanner_test.go:\n\n$ go test\n--- FAIL: TestUnmarshalMarshal (0.10 seconds)\ndecode_test.go:446:\t\tMarshal jsonBig\nscanner_test.go:206:\tdiverge at 70: \u00ab03c1OL6$\":null},{\"[=\u00bb vs \u00ab03c1OL6$\":[]},{\"[=^\\\u00bb\nFAIL\nexit status 1\nFAIL\tencoding/json\t0.266s\n\nAlso added a simple regression to decode_test.go.",
	"cc": [
		"adg@golang.org",
		"dave@cheney.net",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mirtchovski@gmail.com",
			"recipients": [
				"mirtchovski@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-01-24 19:33:32.651900",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mirtchovski@gmail.com",
				"adg@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/24 23:45:54, adg wrote:\n> LGTM\n> \n> But I'd like a second opinion.\n\nI'd feel more comfortable if this was fixing an existing issue.",
			"disapproval": false,
			"date": "2013-01-25 00:09:22.087320",
			"approval": false
		},
		{
			"sender": "mirtchovski@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "the issue appeared on IRC. in its shortest form it's a difference\r\nbetween an original JSON and one that was unmarshalled, then\r\nmarshalled again:\r\n\r\nhttp://play.golang.org/p/_QCrIIT0nN\r\n\r\nthe issue was always there, the tests just didn't cover that\r\nparticular case (zero-length json arrays).\r\n\r\nOn Thu, Jan 24, 2013 at 5:13 PM,  <mirtchovski@gmail.com> wrote:\r\n> Hello adg@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\r\n>\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> https://codereview.appspot.com/7196050/\r\n",
			"disapproval": false,
			"date": "2013-01-25 00:15:39.077300",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"mirtchovski@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nBut I'd like a second opinion.",
			"disapproval": false,
			"date": "2013-01-24 23:45:54.529790",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"mirtchovski@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "What happens if you unmarshal null into an []interface{} value? Can you add a test for that? I would expect a nil []interface{}.",
			"disapproval": false,
			"date": "2013-01-24 23:23:18.904600",
			"approval": false
		},
		{
			"sender": "mirtchovski@gmail.com",
			"recipients": [
				"mirtchovski@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-24 23:41:24.584440",
			"approval": false
		},
		{
			"sender": "mirtchovski@gmail.com",
			"recipients": [
				"mirtchovski@gmail.com",
				"adg@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-25 00:13:10.452390",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mirtchovski@gmail.com",
				"adg@golang.org",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nSure.",
			"disapproval": false,
			"date": "2013-01-30 17:06:43.822920",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mirtchovski@gmail.com",
				"adg@golang.org",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=49d533bb7cd3 ***\n\nencoding/json: properly unmarshal empty arrays.\n\nThe JSON unmarshaller failed to allocate an array when there\nare no values for the input causing the `[]` unmarshalled\nto []interface{} to generate []interface{}(nil) rather than\n[]interface{}{}. This wasn't caught in the tests because Decode()\nworks correctly and because jsonBig never generated zero-sized\narrays. The modification to scanner_test.go quickly triggers\nthe error:\n\nwithout the change to decoder.go, but with the change to scanner_test.go:\n\n$ go test\n--- FAIL: TestUnmarshalMarshal (0.10 seconds)\ndecode_test.go:446:\t\tMarshal jsonBig\nscanner_test.go:206:\tdiverge at 70: \u00ab03c1OL6$\":null},{\"[=\u00bb vs \u00ab03c1OL6$\":[]},{\"[=^\\\u00bb\nFAIL\nexit status 1\nFAIL\tencoding/json\t0.266s\n\nAlso added a simple regression to decode_test.go.\n\nR=adg, dave, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7196050\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-30 17:10:35.469540",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"mirtchovski@gmail.com",
				"adg@golang.org",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=close",
			"disapproval": false,
			"date": "2013-07-20 21:24:49.679520",
			"approval": false
		}
	],
	"owner_email": "mirtchovski@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "aam",
	"subject": "code review 7196050: encoding/json: properly unmarshal empty arrays.",
	"created": "2013-01-24 19:32:55.926180",
	"patchsets": [
		1,
		2001,
		4001,
		4002,
		11001
	],
	"modified": "2013-07-20 21:24:49.947990",
	"closed": false,
	"issue": 7196050
}