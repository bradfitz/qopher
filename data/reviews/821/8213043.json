{
	"description": "cmd/gc: be more tolerant with recursive types when checking map types.\n\nA nested TFORW type would push algtype1 into an impossible case.\n\nFixes issue 5125.",
	"cc": [
		"golang-dev@googlegroups.com",
		"daniel.morsing@gmail.com"
	],
	"reviewers": [
		"costinc@gmail.com"
	],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-31 10:26:22.994680",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?",
			"disapproval": false,
			"date": "2013-04-02 20:57:14.986750",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/8213043/diff/5001/src/cmd/gc/subr.c\nFile src/cmd/gc/subr.c (right):\n\nhttps://codereview.appspot.com/8213043/diff/5001/src/cmd/gc/subr.c#newcode679\nsrc/cmd/gc/subr.c:679: switch(bad == nil ? key->etype : bad->etype) {\nUse T here.",
			"disapproval": false,
			"date": "2013-04-02 21:19:05.353010",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e8d3578a3f34 ***\n\ncmd/gc: be more tolerant with recursive types when checking map types.\n\nA nested TFORW type would push algtype1 into an impossible case.\n\nFixes issue 5125.\n\nR=golang-dev, daniel.morsing\nCC=golang-dev\nhttps://codereview.appspot.com/8213043\n\nhttps://codereview.appspot.com/8213043/diff/5001/src/cmd/gc/subr.c\nFile src/cmd/gc/subr.c (right):\n\nhttps://codereview.appspot.com/8213043/diff/5001/src/cmd/gc/subr.c#newcode679\nsrc/cmd/gc/subr.c:679: switch(bad == nil ? key->etype : bad->etype) {\nOn 2013/04/02 21:19:05, DMorsing wrote:\n> Use T here.\n\nDone.",
			"disapproval": false,
			"date": "2013-04-03 06:18:52.316710",
			"approval": false
		},
		{
			"sender": "costinc@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"costinc@gmail.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Why is bad tested for null at subr.c:547 but not at subr.c:554?",
			"disapproval": false,
			"date": "2013-04-03 11:12:28.294950",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 8213043: cmd/gc: be more tolerant with recursive types when chec...",
	"created": "2013-03-31 10:24:32.867270",
	"patchsets": [
		1,
		2001,
		5001,
		12001,
		16001,
		19001
	],
	"modified": "2013-04-03 11:12:28.295230",
	"closed": true,
	"issue": 8213043
}