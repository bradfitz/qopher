{
	"description": "go.tools/cmd/vet: check for missing printf verb\nA trailing % resulted in a bad error message.\nAlso clean up a couple of dregs left over from the\nrefactoring to add indexed formats.",
	"cc": [
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dsymonds (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-06-17 18:17:21.806180",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"r@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10336044/diff/1/cmd/vet/testdata/print.go\nFile cmd/vet/testdata/print.go (right):\n\nhttps://codereview.appspot.com/10336044/diff/1/cmd/vet/testdata/print.go#newcode128\ncmd/vet/testdata/print.go:128: fmt.Sprintf(\"%[3]d\", 2)       // ERROR \"wrong number of args for format in Sprintf call\"\nthis one looks wrong. there's a single format specifier, and a single argument, so the number of args is correct. It is that the argument number is out of range. I guess you could claim that the \"3\" is correct and so there's the wrong number of arguments to support it, but I think that's backwards from what most people would expect.",
			"disapproval": false,
			"date": "2013-06-17 23:46:27.378080",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10336044/diff/1/cmd/vet/testdata/print.go\nFile cmd/vet/testdata/print.go (right):\n\nhttps://codereview.appspot.com/10336044/diff/1/cmd/vet/testdata/print.go#newcode128\ncmd/vet/testdata/print.go:128: fmt.Sprintf(\"%[3]d\", 2)       // ERROR \"wrong number of args for format in Sprintf call\"\nyou're right, it's bad wording.",
			"disapproval": false,
			"date": "2013-06-18 00:38:44.960390",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dsymonds@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-18 00:38:48.839050",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"r@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "sorry, I realise this is a bit like nailing jelly to a wall.\n\nhttps://codereview.appspot.com/10336044/diff/5001/cmd/vet/testdata/print.go\nFile cmd/vet/testdata/print.go (right):\n\nhttps://codereview.appspot.com/10336044/diff/5001/cmd/vet/testdata/print.go#newcode121\ncmd/vet/testdata/print.go:121: Printf(format, \"hi\") // ERROR \"Printf accesses argument number 2 after format for verb %s; 1 present\"\nI think this is a regression; shouldn't this still be \"wrong number of args\"? I think this \"... accesses argument number ...\" error should only occur for %[2]d-style printf argument indexes.",
			"disapproval": false,
			"date": "2013-06-18 02:23:45.462020",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Printf(\"%s %s\", 2)\r\n\r\nit could be \"wrong number of args\". i was trying to be helpful. it\r\n*is* trying to access an extra argument.\r\n",
			"disapproval": false,
			"date": "2013-06-18 03:57:41.301830",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dsymonds@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-18 06:05:05.774400",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 18 June 2013 13:57, Rob Pike <r@golang.org> wrote:\r\n\r\n> Printf(\"%s %s\", 2)\r\n>\r\n> it could be \"wrong number of args\". i was trying to be helpful. it\r\n> *is* trying to access an extra argument.\r\n\r\nYeah, but I think the most common way someone is going to trip over\r\nthat is that they forget to write an argument. The \"accessing an extra\r\nargument\" terminology is also a bit obscure.\r\n",
			"disapproval": false,
			"date": "2013-06-18 03:59:40.100710",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"r@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-06-18 06:22:44.487030",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e3e3e4be74ef&repo=tools ***\n\ngo.tools/cmd/vet: check for missing printf verb\nA trailing % resulted in a bad error message.\nAlso clean up a couple of dregs left over from the\nrefactoring to add indexed formats.\n\nR=dsymonds\nCC=golang-dev\nhttps://codereview.appspot.com/10336044",
			"disapproval": false,
			"date": "2013-06-18 15:21:11.056830",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This latest code is still producing extra output. For a line of code such as\r\n  t.Errorf(\"Foo(%v) = %s, want bar\")\r\nI get these three vet errors:\r\n  argument number 1 for verb %v out of range\r\n  argument number 2 for verb %s out of range\r\n  wrong number of args for format in Errorf call: 2 needed but 0 args\r\n\r\nOnly the last one should be printed.\r\n",
			"disapproval": false,
			"date": "2013-06-20 04:09:30.326090",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I can't reproduce this. At tip, I see only one message:\r\n\r\ntestdata/print.go:160: missing argument for Errorf verb %v: need 1, only have 0\r\n\r\nThe 'only' is silly and I'll delete that word on the next refresh.\r\n",
			"disapproval": false,
			"date": "2013-06-20 17:30:41.544800",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 10336044: go.tools/cmd/vet: check for missing printf verb",
	"created": "2013-06-17 18:17:18.669160",
	"patchsets": [
		1,
		5001,
		16001,
		22001
	],
	"modified": "2013-06-20 17:30:41.645570",
	"closed": true,
	"issue": 10336044
}