{
	"description": "cmd/ld: handle duplicate static symbols in COFF and Mach-O files.\nFixes issue 5740.",
	"cc": [
		"golang-dev@googlegroups.com",
		"gobot@golang.org"
	],
	"reviewers": [
		"iant@golang.org",
		"rsc@golang.org",
		"luisbebop@gmail.com"
	],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-20 16:26:14.577390",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nDarwin also suffers from the same bug.",
			"disapproval": false,
			"date": "2013-06-20 19:59:39.915310",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=iant (assigned by minux)",
			"disapproval": false,
			"date": "2013-06-20 20:00:28.850160",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This doesn't seem right. Setting dupok=1 means that when the linker sees two copies of the symbol it will just throw one away. There should be two copies, just treated distinctly.\n\nThe static-ness should cause \"version\" to be used in the lookup, so that the two lookups use different versions and get different Sym* symbols.",
			"disapproval": false,
			"date": "2013-07-12 04:33:04.428950",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/12 04:33:04, rsc wrote:\n> This doesn't seem right. Setting dupok=1 means that when the linker sees two\n> copies of the symbol it will just throw one away. There should be two copies,\n> just treated distinctly.\ni reused the dupok as the symbol in question will only appear as external symbols,\nthus our linker won't touch its content.\n\nthe version is only incremented for different object files, however, in the current\ncgo build procedure, all external object files are linked together by \"gcc -Wl,-r\"\ninto one _all.o before sending to the linker, so statics with the same name actually\nend up in the same _all.o, so version won't help here.\n\nas you can see in my test, i specifically tested that the linker doesn't drop one of\nthe definitions.\n> The static-ness should cause \"version\" to be used in the lookup, so that the two\n> lookups use different versions and get different Sym* symbols.",
			"disapproval": false,
			"date": "2013-07-12 06:05:28.211530",
			"approval": false
		},
		{
			"sender": "luisbebop@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"rsc@golang.org",
				"luisbebop@gmail.com",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/12 06:05:28, minux wrote:\n> On 2013/07/12 04:33:04, rsc wrote:\n> > This doesn't seem right. Setting dupok=1 means that when the linker sees two\n> > copies of the symbol it will just throw one away. There should be two copies,\n> > just treated distinctly.\n> i reused the dupok as the symbol in question will only appear as external\n> symbols,\n> thus our linker won't touch its content.\n> \n> the version is only incremented for different object files, however, in the\n> current\n> cgo build procedure, all external object files are linked together by \"gcc\n> -Wl,-r\"\n> into one _all.o before sending to the linker, so statics with the same name\n> actually\n> end up in the same _all.o, so version won't help here.\n> \n> as you can see in my test, i specifically tested that the linker doesn't drop\n> one of\n> the definitions.\n> > The static-ness should cause \"version\" to be used in the lookup, so that the\n> two\n> > lookups use different versions and get different Sym* symbols.\n\nAfter applied the patch I stopped to get duplicate symbol problems on the link of a static library of mruby project. Now I'm getting runtime error on Mac OS . This compilation and link is working fine with Ubuntu and Go 1.1.\n\nSIGSEGV: segmentation violation\nPC=0x1363d6\nsignal arrived during cgo execution\n\nruntime.asmcgocall(0xfecc6, 0x6efad0, 0x100000000, 0xffffffffffffffff, 0x0, ...)\n\t/Users/luisbebop/Documents/go/go/src/pkg/runtime/asm_amd64.s:515 +0x2d fp=0x6efa70\nruntime.cgocall(0xfecc6, 0x6efad0)\n\t/Users/luisbebop/Documents/go/go/src/pkg/runtime/cgocall.c:166 +0x15b fp=0x6efab8\n_/Users/luisbebop/Documents/go/packages/src/github.com/luisbebop/gomruby._Cfunc_mrb_open(0x8)\n\t_/Users/luisbebop/Documents/go/packages/src/github.com/luisbebop/gomruby/_obj/_cgo_defun.c:252 +0x31 fp=0x6efad0\n_/Users/luisbebop/Documents/go/packages/src/github.com/luisbebop/gomruby.New(0x6efb90)\n\t_/Users/luisbebop/Documents/go/packages/src/github.com/luisbebop/gomruby/_obj/_cgo_gotypes.go:387 +0x1e fp=0x6efb18\ngithub.com/luisbebop/gomruby_test.(*F).SetUpTest(0xc21000a3a0, 0xc210013320)\n\t/Users/luisbebop/Documents/go/packages/src/github.com/luisbebop/gomruby/gomruby_test.go:23 +0x1e fp=0x6efb40\n----- stack segment boundary -----",
			"disapproval": false,
			"date": "2013-07-16 06:03:56.147870",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"rsc@golang.org",
				"luisbebop@gmail.com",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-13 19:15:33.095640",
			"approval": true
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 10345046: cmd/ld: handle duplicate static symbols in COFF files.",
	"created": "2013-06-20 16:22:01.789400",
	"patchsets": [
		1,
		2001,
		7001,
		11001
	],
	"modified": "2013-08-13 19:15:33.408660",
	"closed": false,
	"issue": 10345046
}