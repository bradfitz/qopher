{
	"description": "net/http: fix sniffing when using ReadFrom.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [
		"bradfitz@golang.org",
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go\nFile src/pkg/net/http/sniff_test.go (right):\n\nhttp://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go#newcode95\nsrc/pkg/net/http/sniff_test.go:95: log.Fatalf(\"io.Copy(w, %q) = %v, %v want %d, nil\", input, n, err, len(input))\nOn 2011/11/09 04:52:13, bradfitz wrote:\n> On 2011/11/09 04:46:47, dsymonds wrote:\n> > On 2011/11/09 04:39:53, bradfitz wrote:\n> > > t.Errorf ?\n> > \n> > Made it t.Fatalf.\n> \n> You can't t.Fatalf from a goroutine different from the one that started the\n> test, I thought?  We just fixed a number of such bugs in the http tests\n> recently.\n\nWell, I changed it to t.Fatalf, and the test behaved as expected.",
			"disapproval": false,
			"date": "2011-11-09 05:03:10.979970",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Nov 9, 2011 at 00:11, Andrew Gerrand <adg@golang.org> wrote:\n> You \u00a0can do it, but it's possible to screw up the tests.\n\nit is not just possible, it is nearly certain.\n\nyou can do anything.\nyou shouldn't do this.\n",
			"disapproval": false,
			"date": "2011-11-09 05:13:02.578013",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go\nFile src/pkg/net/http/sniff_test.go (right):\n\nhttp://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go#newcode95\nsrc/pkg/net/http/sniff_test.go:95: log.Fatalf(\"io.Copy(w, %q) = %v, %v want %d, nil\", input, n, err, len(input))\nt.Errorf ?",
			"disapproval": false,
			"date": "2011-11-09 04:39:53.597812",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "%s and %q work on []byte same as on string.  :-)\n",
			"disapproval": false,
			"date": "2011-11-09 04:41:57.157053",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-09 04:35:08.784336",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go\nFile src/pkg/net/http/sniff_test.go (right):\n\nhttp://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go#newcode95\nsrc/pkg/net/http/sniff_test.go:95: log.Fatalf(\"io.Copy(w, %q) = %v, %v want %d, nil\", input, n, err, len(input))\nOn 2011/11/09 04:39:53, bradfitz wrote:\n> t.Errorf ?\n\nMade it t.Fatalf.\n\nhttp://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go#newcode111\nsrc/pkg/net/http/sniff_test.go:111: t.Errorf(\"data is %q, want %q\", data, input)\nOn 2011/11/09 04:41:13, bradfitz wrote:\n> string(data)\n\nDone.",
			"disapproval": false,
			"date": "2011-11-09 04:46:46.476622",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-11-09 04:38:07.266094",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Also, LGTM.\n\nOn Tue, Nov 8, 2011 at 8:43 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n> On Tue, Nov 8, 2011 at 8:41 PM, Russ Cox <rsc@golang.org> wrote:\n>\n>> %s and %q work on []byte same as on string.  :-)\n>>\n>\n> Ah, good to know.  I guess I was thinking of %v\n>\n>\n",
			"disapproval": false,
			"date": "2011-11-09 04:44:19.931022",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Reverted the string(data) bit to how I had it.",
			"disapproval": false,
			"date": "2011-11-09 04:47:26.375071",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=43424f06ee67 ***\n\nnet/http: fix sniffing when using ReadFrom.\n\nR=golang-dev, rsc, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5362046",
			"disapproval": false,
			"date": "2011-11-09 04:48:10.912462",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 9 November 2011 15:52,  <bradfitz@golang.org> wrote:\n>\n> http://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go\n> File src/pkg/net/http/sniff_test.go (right):\n>\n> http://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go#newcode95\n> src/pkg/net/http/sniff_test.go:95: log.Fatalf(\"io.Copy(w, %q) = %v, %v\n> want %d, nil\", input, n, err, len(input))\n> On 2011/11/09 04:46:47, dsymonds wrote:\n>>\n>> On 2011/11/09 04:39:53, bradfitz wrote:\n>> > t.Errorf ?\n>\n>> Made it t.Fatalf.\n>\n> You can't t.Fatalf from a goroutine different from the one that started\n> the test, I thought? \u00a0We just fixed a number of such bugs in the http\n> tests recently.\n\nYou  can do it, but it's possible to screw up the tests.\n\nThe goroutine that calls t.Fatal will exit, not the goroutine that\nruns the test.\n\nBe careful.\n",
			"disapproval": false,
			"date": "2011-11-09 05:12:01.392931",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go\nFile src/pkg/net/http/sniff_test.go (right):\n\nhttp://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go#newcode111\nsrc/pkg/net/http/sniff_test.go:111: t.Errorf(\"data is %q, want %q\", data, input)\nstring(data)",
			"disapproval": false,
			"date": "2011-11-09 04:41:12.566204",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, Nov 8, 2011 at 8:41 PM, Russ Cox <rsc@golang.org> wrote:\n\n> %s and %q work on []byte same as on string.  :-)\n>\n\nAh, good to know.  I guess I was thinking of %v\n",
			"disapproval": false,
			"date": "2011-11-09 04:43:43.013362",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, Nov 8, 2011 at 9:03 PM, <dsymonds@golang.org> wrote:\n\n>\n> http://codereview.appspot.com/**5362046/diff/4001/src/pkg/net/**\n> http/sniff_test.go<http://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go>\n> File src/pkg/net/http/sniff_test.go (right):\n>\n> http://codereview.appspot.com/**5362046/diff/4001/src/pkg/net/**\n> http/sniff_test.go#newcode95<http://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go#newcode95>\n> src/pkg/net/http/sniff_test.**go:95: log.Fatalf(\"io.Copy(w, %q) = %v, %v\n> want %d, nil\", input, n, err, len(input))\n> On 2011/11/09 04:52:13, bradfitz wrote:\n>\n>> On 2011/11/09 04:46:47, dsymonds wrote:\n>> > On 2011/11/09 04:39:53, bradfitz wrote:\n>> > > t.Errorf ?\n>> >\n>> > Made it t.Fatalf.\n>>\n>\n>  You can't t.Fatalf from a goroutine different from the one that\n>>\n> started the\n>\n>> test, I thought?  We just fixed a number of such bugs in the http\n>>\n> tests\n>\n>> recently.\n>>\n>\n> Well, I changed it to t.Fatalf, and the test behaved as expected.\n>\n\nSure, on success, when t.Fatalf isn't called.\n\nDoes it work if you force it to t.Fatalf in that handler func?\n\nWe had to fix some of this due to weird failures in\nhttp://code.google.com/p/go/source/detail?r=8dc8fff8b11\n",
			"disapproval": false,
			"date": "2011-11-09 05:11:03.721669",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go\nFile src/pkg/net/http/sniff_test.go (right):\n\nhttp://codereview.appspot.com/5362046/diff/4001/src/pkg/net/http/sniff_test.go#newcode95\nsrc/pkg/net/http/sniff_test.go:95: log.Fatalf(\"io.Copy(w, %q) = %v, %v want %d, nil\", input, n, err, len(input))\nOn 2011/11/09 04:46:47, dsymonds wrote:\n> On 2011/11/09 04:39:53, bradfitz wrote:\n> > t.Errorf ?\n> \n> Made it t.Fatalf.\n\nYou can't t.Fatalf from a goroutine different from the one that started the test, I thought?  We just fixed a number of such bugs in the http tests recently.",
			"disapproval": false,
			"date": "2011-11-09 04:52:13.365975",
			"approval": false
		}
	],
	"owner_email": "dsymonds@golang.org",
	"private": false,
	"base_url": "",
	"owner": "dsymonds",
	"subject": "code review 5362046: net/http: fix sniffing when using ReadFrom.",
	"created": "2011-11-08 08:25:52.315730",
	"patchsets": [
		1,
		2001,
		4001,
		5006,
		9001
	],
	"modified": "2011-11-09 05:12:01.444596",
	"closed": true,
	"issue": 5362046
}