{
	"description": "go.crypto/ssh: add workaround for broken port forwarding in\nOpenSSH 5.\n\nTested with OpenSSH_5.9",
	"cc": [
		"agl@golang.org",
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"jonathan.mark.pittman@gmail.com"
	],
	"messages": [
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2013-07-26 14:56:49.369630",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"hanwen@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11921043/diff/7001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/11921043/diff/7001/ssh/tcpip.go#newcode45\nssh/tcpip.go:45: var openSSHVersionRegexp = regexp.MustCompile(\"OpenSSH_([0-9]+)\")\nregexps are great for human interfaces, but not code. This should be a quick few calls in strings.\n\nhttps://codereview.appspot.com/11921043/diff/7001/ssh/tcpip.go#newcode47\nssh/tcpip.go:47: func autoPortListenBroken(versionStr string) bool {\n// isBrokenOpenSSHVersion returns true if the given version string specifies a version of OpenSSH that is known to have a bug in port forwarding.\n\nhttps://codereview.appspot.com/11921043/diff/7001/ssh/tcpip.go#newcode60\nssh/tcpip.go:60: tries := 10\nconst\n\nhttps://codereview.appspot.com/11921043/diff/7001/ssh/tcpip.go#newcode70\nssh/tcpip.go:70: return nil, fmt.Errorf(\"ssh: failed after %d tries: %v\", tries, err)\n\"finding random port\" or something of that nature before \"failed\".",
			"disapproval": false,
			"date": "2013-07-26 15:06:22.110820",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11921043/diff/7001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/11921043/diff/7001/ssh/tcpip.go#newcode45\nssh/tcpip.go:45: var openSSHVersionRegexp = regexp.MustCompile(\"OpenSSH_([0-9]+)\")\nOn 2013/07/26 15:06:22, agl1 wrote:\n> regexps are great for human interfaces, but not code. This should be a quick few\n> calls in strings.\n\nDone.\n\nhttps://codereview.appspot.com/11921043/diff/7001/ssh/tcpip.go#newcode47\nssh/tcpip.go:47: func autoPortListenBroken(versionStr string) bool {\nOn 2013/07/26 15:06:22, agl1 wrote:\n> // isBrokenOpenSSHVersion returns true if the given version string specifies a\n> version of OpenSSH that is known to have a bug in port forwarding.\n\nDone.\n\nhttps://codereview.appspot.com/11921043/diff/7001/ssh/tcpip.go#newcode60\nssh/tcpip.go:60: tries := 10\nOn 2013/07/26 15:06:22, agl1 wrote:\n> const\n\nDone.\n\nhttps://codereview.appspot.com/11921043/diff/7001/ssh/tcpip.go#newcode70\nssh/tcpip.go:70: return nil, fmt.Errorf(\"ssh: failed after %d tries: %v\", tries, err)\nOn 2013/07/26 15:06:22, agl1 wrote:\n> \"finding random port\" or something of that nature before \"failed\".\n\nDone.",
			"disapproval": false,
			"date": "2013-07-26 17:27:17.412370",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"hanwen@google.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=752ba0444fdd&repo=crypto ***\n\ngo.crypto/ssh: add workaround for broken port forwarding in\nOpenSSH 5.\n\nTested with OpenSSH_5.9\n\nR=agl, dave\nCC=golang-dev\nhttps://codereview.appspot.com/11921043\n\nCommitter: Adam Langley <agl@golang.org>\n\nhttps://codereview.appspot.com/11921043/diff/16001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/11921043/diff/16001/ssh/tcpip.go#newcode62\nssh/tcpip.go:62: fmt.Printf(\"V %q\", versionStr[i:j])\nLooks like debugging - will remove before landing.",
			"disapproval": false,
			"date": "2013-07-26 18:38:05.948830",
			"approval": false
		},
		{
			"sender": "jonathan.mark.pittman@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The random port picker in this CL is not really random.\r\n\r\naddr.Port = 1024 + rand.Intn(60000)\r\n\r\nIt will always produce the same set of values each time.  For a loop of 10,\r\nthey would be (in order):\r\n\r\n39105\r\n8911\r\n32871\r\n25083\r\n23105\r\n22342\r\n15449\r\n3564\r\n41480\r\n4324\r\n\r\nIs that acceptable for the purpose of this CL?  You could use crypto/rand,\r\nbut simpler might be to have the seed change using something like:\r\n\r\n1024 + rand.Intn(int(time.Now().Unix()%60000))\r\n\r\nThis is still predictable, but it will generate different sets of values\r\nsince the seed will change every second and only see a repeat every 60000\r\nseconds (16h40m).  I would think this is better than always trying the same\r\nfirst 10 ports each time it gets run.  See\r\nhttp://play.golang.org/p/wXlwVvwcOj for an example, but try running it on a\r\nlocal machine instead of in the playground since time in the playground is\r\nalways the same.\r\n\r\n\r\nOn Fri, Jul 26, 2013 at 2:38 PM, <agl@golang.org> wrote:\r\n\r\n> *** Submitted as\r\n> https://code.google.com/p/go/**source/detail?r=752ba0444fdd&**repo=crypto<https://code.google.com/p/go/source/detail?r=752ba0444fdd&repo=crypto>\r\n> ***\r\n>\r\n>\r\n> go.crypto/ssh: add workaround for broken port forwarding in\r\n> OpenSSH 5.\r\n>\r\n> Tested with OpenSSH_5.9\r\n>\r\n> R=agl, dave\r\n> CC=golang-dev\r\n> https://codereview.appspot.**com/11921043<https://codereview.appspot.com/11921043>\r\n>\r\n> Committer: Adam Langley <agl@golang.org>\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.**com/11921043/diff/16001/ssh/**tcpip.go<https://codereview.appspot.com/11921043/diff/16001/ssh/tcpip.go>\r\n> File ssh/tcpip.go (right):\r\n>\r\n> https://codereview.appspot.**com/11921043/diff/16001/ssh/**\r\n> tcpip.go#newcode62<https://codereview.appspot.com/11921043/diff/16001/ssh/tcpip.go#newcode62>\r\n> ssh/tcpip.go:62: fmt.Printf(\"V %q\", versionStr[i:j])\r\n> Looks like debugging - will remove before landing.\r\n>\r\n>\r\n> https://codereview.appspot.**com/11921043/<https://codereview.appspot.com/11921043/>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-27 16:13:49.725360",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You're completely right. I had forgotten about the deterministic seed.\r\nI think we can init a random generator with time.Now(). I'll prepare a\r\nCL.\r\n\r\nOn Sat, Jul 27, 2013 at 1:13 PM, Jonathan Pittman\r\n<jonathan.mark.pittman@gmail.com> wrote:\r\n> The random port picker in this CL is not really random.\r\n>\r\n> addr.Port = 1024 + rand.Intn(60000)\r\n>\r\n> It will always produce the same set of values each time.  For a loop of 10,\r\n> they would be (in order):\r\n>\r\n> 39105\r\n> 8911\r\n> 32871\r\n> 25083\r\n> 23105\r\n> 22342\r\n> 15449\r\n> 3564\r\n> 41480\r\n> 4324\r\n>\r\n> Is that acceptable for the purpose of this CL?  You could use crypto/rand,\r\n> but simpler might be to have the seed change using something like:\r\n>\r\n> 1024 + rand.Intn(int(time.Now().Unix()%60000))\r\n>\r\n> This is still predictable, but it will generate different sets of values\r\n> since the seed will change every second and only see a repeat every 60000\r\n> seconds (16h40m).  I would think this is better than always trying the same\r\n> first 10 ports each time it gets run.  See\r\n> http://play.golang.org/p/wXlwVvwcOj for an example, but try running it on a\r\n> local machine instead of in the playground since time in the playground is\r\n> always the same.\r\n>\r\n>\r\n> On Fri, Jul 26, 2013 at 2:38 PM, <agl@golang.org> wrote:\r\n>>\r\n>> *** Submitted as\r\n>> https://code.google.com/p/go/source/detail?r=752ba0444fdd&repo=crypto\r\n>> ***\r\n>>\r\n>>\r\n>> go.crypto/ssh: add workaround for broken port forwarding in\r\n>> OpenSSH 5.\r\n>>\r\n>> Tested with OpenSSH_5.9\r\n>>\r\n>> R=agl, dave\r\n>> CC=golang-dev\r\n>> https://codereview.appspot.com/11921043\r\n>>\r\n>> Committer: Adam Langley <agl@golang.org>\r\n>>\r\n>>\r\n>>\r\n>> https://codereview.appspot.com/11921043/diff/16001/ssh/tcpip.go\r\n>> File ssh/tcpip.go (right):\r\n>>\r\n>> https://codereview.appspot.com/11921043/diff/16001/ssh/tcpip.go#newcode62\r\n>> ssh/tcpip.go:62: fmt.Printf(\"V %q\", versionStr[i:j])\r\n>> Looks like debugging - will remove before landing.\r\n>>\r\n>>\r\n>> https://codereview.appspot.com/11921043/\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@googlegroups.com.\r\n>> For more options, visit https://groups.google.com/groups/opt_out.\r\n>>\r\n>>\r\n>\r\n\r\n\r\n\r\n-- \r\nHan-Wen Nienhuys\r\nGoogle Munich\r\nhanwen@google.com\r\n",
			"disapproval": false,
			"date": "2013-07-28 22:33:11.861180",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"jonathan.mark.pittman@gmail.com",
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-07-29 13:00:42.752370",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It produces the same sequence, but the random generator is shared with\r\neverything else, and a second call will not start with the same port\r\nnumber. That said,\r\n\r\nthis change\r\n\r\n https://codereview.appspot.com/12027043\r\n\r\nshould fix things.\r\n\r\n\r\nOn Sat, Jul 27, 2013 at 1:13 PM, Jonathan Pittman\r\n<jonathan.mark.pittman@gmail.com> wrote:\r\n> The random port picker in this CL is not really random.\r\n>\r\n> addr.Port = 1024 + rand.Intn(60000)\r\n>\r\n> It will always produce the same set of values each time.  For a loop of 10,\r\n> they would be (in order):\r\n>\r\n> 39105\r\n> 8911\r\n> 32871\r\n> 25083\r\n> 23105\r\n> 22342\r\n> 15449\r\n> 3564\r\n> 41480\r\n> 4324\r\n>\r\n> Is that acceptable for the purpose of this CL?  You could use crypto/rand,\r\n> but simpler might be to have the seed change using something like:\r\n>\r\n> 1024 + rand.Intn(int(time.Now().Unix()%60000))\r\n>\r\n> This is still predictable, but it will generate different sets of values\r\n> since the seed will change every second and only see a repeat every 60000\r\n> seconds (16h40m).  I would think this is better than always trying the same\r\n> first 10 ports each time it gets run.  See\r\n> http://play.golang.org/p/wXlwVvwcOj for an example, but try running it on a\r\n> local machine instead of in the playground since time in the playground is\r\n> always the same.\r\n>\r\n>\r\n> On Fri, Jul 26, 2013 at 2:38 PM, <agl@golang.org> wrote:\r\n>>\r\n>> *** Submitted as\r\n>> https://code.google.com/p/go/source/detail?r=752ba0444fdd&repo=crypto\r\n>> ***\r\n>>\r\n>>\r\n>> go.crypto/ssh: add workaround for broken port forwarding in\r\n>> OpenSSH 5.\r\n>>\r\n>> Tested with OpenSSH_5.9\r\n>>\r\n>> R=agl, dave\r\n>> CC=golang-dev\r\n>> https://codereview.appspot.com/11921043\r\n>>\r\n>> Committer: Adam Langley <agl@golang.org>\r\n>>\r\n>>\r\n>>\r\n>> https://codereview.appspot.com/11921043/diff/16001/ssh/tcpip.go\r\n>> File ssh/tcpip.go (right):\r\n>>\r\n>> https://codereview.appspot.com/11921043/diff/16001/ssh/tcpip.go#newcode62\r\n>> ssh/tcpip.go:62: fmt.Printf(\"V %q\", versionStr[i:j])\r\n>> Looks like debugging - will remove before landing.\r\n>>\r\n>>\r\n>> https://codereview.appspot.com/11921043/\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@googlegroups.com.\r\n>> For more options, visit https://groups.google.com/groups/opt_out.\r\n>>\r\n>>\r\n>\r\n\r\n\r\n\r\n-- \r\nHan-Wen Nienhuys\r\nGoogle Munich\r\nhanwen@google.com\r\n",
			"disapproval": false,
			"date": "2013-07-29 13:14:17.825180",
			"approval": false
		}
	],
	"owner_email": "hanwen@google.com",
	"private": false,
	"base_url": "",
	"owner": "hanwen",
	"subject": "code review 11921043: go.crypto/ssh: add workaround for broken port forwarding in",
	"created": "2013-07-26 14:54:35.581980",
	"patchsets": [
		1,
		3001,
		7001,
		12001,
		13001,
		16001
	],
	"modified": "2013-07-29 13:14:17.883670",
	"closed": true,
	"issue": 11921043
}