{
	"description": "runtime: Use the MaxMem macro instead of the hard-coded 16LL<<30 to make the value consistent.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "not lgtm\r\n\r\nThanks, but I'd prefer not to do this. MaxMem is for checking\r\nallocations. It's certainly related to the arena size but I don't\r\nbelieve it should be tied so directly.\r\n\r\nRuss\r\n",
			"disapproval": true,
			"date": "2012-09-27 22:15:44.716530",
			"approval": false
		},
		{
			"sender": "diogin@gmail.com",
			"recipients": [
				"diogin@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/27 22:15:44, rsc wrote:\n> not lgtm\n> \n> Thanks, but I'd prefer not to do this. MaxMem is for checking\n> allocations. It's certainly related to the arena size but I don't\n> believe it should be tied so directly.\n> \n> Russ\n\nOK, I'll close this issue.",
			"disapproval": false,
			"date": "2012-09-28 02:19:39.309200",
			"approval": false
		},
		{
			"sender": "diogin@gmail.com",
			"recipients": [
				"diogin@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/27 08:54:04, minux wrote:\n> MaxMem isn't meant for this.\n> \n> MaxMem bounds the maximum size of a single allocation, i think it has\n> nothing to do\n> with the size of the arena.\n\nSo MaxMem is better named MaxMemAllc?\n\n> \n> Additionally, arena_size also depends on value of MHeapMap_Bits, changing\n> it to MaxMem\n> might hide this dependency (although i agree we don't currently document\n> this dependency\n> in malloc.goc).\n\nYes, arena_size, MHeapMap_Bits, and \"MaxMem\", should all derive from a unique number, which is currently a magic number - 16GB. Before the new manage manager is introduced for amd64, making the limits depend on a single macro is more or less better.",
			"disapproval": false,
			"date": "2012-09-27 10:52:30.328120",
			"approval": false
		},
		{
			"sender": "diogin@gmail.com",
			"recipients": [
				"diogin@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-09-27 07:08:20.275020",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Sep 27, 2012 at 3:08 PM, <diogin@gmail.com> wrote:\r\n\r\n> Description:\r\n> runtime: Use the MaxMem macro instead of the hard-coded 16LL<<30 to make\r\n> the value consistent.\r\n>\r\nMaxMem isn't meant for this.\r\n\r\nMaxMem bounds the maximum size of a single allocation, i think it has\r\nnothing to do\r\nwith the size of the arena.\r\n\r\nAdditionally, arena_size also depends on value of MHeapMap_Bits, changing\r\nit to MaxMem\r\nmight hide this dependency (although i agree we don't currently document\r\nthis dependency\r\nin malloc.goc).\r\n",
			"disapproval": false,
			"date": "2012-09-27 08:54:04.391690",
			"approval": false
		},
		{
			"sender": "diogin@gmail.com",
			"recipients": [
				"diogin@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-10-09 06:34:48.384090",
			"approval": false
		}
	],
	"owner_email": "diogin@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "diogin",
	"subject": "code review 6571065: runtime: Use the MaxMem macro instead of the hard-coded...",
	"created": "2012-09-27 07:02:04.169870",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2012-10-09 06:34:50.320530",
	"closed": true,
	"issue": 6571065
}