{
	"description": "doc: use the already defined GOPATH in PATH",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [
		"nightlyone@googlemail.com"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"mail@frou.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e77430da3316 ***\n\ndoc: use the already defined GOPATH in PATH\n\nR=golang-dev, adg\nCC=golang-dev\nhttps://codereview.appspot.com/8248044\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2013-04-04 05:36:19.781130",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-04-04 05:32:55.498770",
			"approval": true
		},
		{
			"sender": "mail@frou.org",
			"recipients": [
				"mail@frou.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-04-04 04:09:58.172840",
			"approval": false
		},
		{
			"sender": "nightlyone@googlemail.com",
			"recipients": [
				"mail@frou.org",
				"nightlyone@googlemail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NLGTM\n\nIt breaks mysteriously later leading to increased support load. Details see below.\n\nhttps://codereview.appspot.com/8248044/diff/5001/doc/code.html\nFile doc/code.html (right):\n\nhttps://codereview.appspot.com/8248044/diff/5001/doc/code.html#newcode128\ndoc/code.html:128: $ <b>export PATH=$PATH:$GOPATH/bin</b>\nThis will only work in the example. But will mysteriously break, if the user starts adding more entries to the GOPATH. \n\nEsp. since go writes only to the FIRST component of it and export PATH=$PATH:$GOPATH/bin will only add the binary location of the LAST component to the path. The user will not see his just compiled binaries.\n\nSo please remove this optimization.",
			"disapproval": false,
			"date": "2013-04-05 07:38:11.002000",
			"approval": true
		},
		{
			"sender": "mail@frou.org",
			"recipients": [
				"mail@frou.org",
				"nightlyone@googlemail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fair enough. I suppose even when GOPATH only has one element, it should still strictly be thought of as a list. I proposed the change because people are liable to reorganise their home directory, and in that case it's nice to only have a single location that needs updating.\n\nOn 2013/04/05 07:38:11, ioe wrote:\n> NLGTM\n> \n> It breaks mysteriously later leading to increased support load. Details see\n> below.\n> \n> https://codereview.appspot.com/8248044/diff/5001/doc/code.html\n> File doc/code.html (right):\n> \n> https://codereview.appspot.com/8248044/diff/5001/doc/code.html#newcode128\n> doc/code.html:128: $ <b>export PATH=$PATH:$GOPATH/bin</b>\n> This will only work in the example. But will mysteriously break, if the user\n> starts adding more entries to the GOPATH. \n> \n> Esp. since go writes only to the FIRST component of it and export\n> PATH=$PATH:$GOPATH/bin will only add the binary location of the LAST component\n> to the path. The user will not see his just compiled binaries.\n> \n> So please remove this optimization.",
			"disapproval": false,
			"date": "2013-04-05 10:08:44.752530",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 5 April 2013 18:38, <nightlyone@googlemail.com> wrote:\r\n\r\n> NLGTM\r\n>\r\n> It breaks mysteriously later leading to increased support load. Details\r\n> see below.\r\n>\r\n>\r\n> https://codereview.appspot.**com/8248044/diff/5001/doc/**code.html<https://codereview.appspot.com/8248044/diff/5001/doc/code.html>\r\n> File doc/code.html (right):\r\n>\r\n> https://codereview.appspot.**com/8248044/diff/5001/doc/**\r\n> code.html#newcode128<https://codereview.appspot.com/8248044/diff/5001/doc/code.html#newcode128>\r\n> doc/code.html:128: $ <b>export PATH=$PATH:$GOPATH/bin</b>\r\n> This will only work in the example. But will mysteriously break, if the\r\n> user starts adding more entries to the GOPATH.\r\n>\r\n> Esp. since go writes only to the FIRST component of it and export\r\n> PATH=$PATH:$GOPATH/bin will only add the binary location of the LAST\r\n> component to the path. The user will not see his just compiled binaries.\r\n>\r\n> So please remove this optimization.\r\n>\r\n> https://codereview.appspot.**com/8248044/<https://codereview.appspot.com/8248044/>\r\n>\r\n\r\n\r\nWe use $GOPATH elsewhere throughout this doc for a similar purpose. I think\r\npeople with multiple $GOPATHs can figure it out (note that we don't even\r\nmention multiple GOPATHs in this doc). We can always change it if the\r\nsupport load becomes a problem.\r\n\r\nAndrew\r\n",
			"disapproval": false,
			"date": "2013-04-08 04:46:27.032110",
			"approval": false
		}
	],
	"owner_email": "mail@frou.org",
	"private": false,
	"base_url": "",
	"owner": "frou",
	"subject": "code review 8248044: doc: use the already defined GOPATH in PATH",
	"created": "2013-04-04 04:06:22.859510",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2013-04-08 04:46:27.032110",
	"closed": false,
	"issue": 8248044
}