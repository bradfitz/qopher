{
	"description": "runtime: make GC stats per-M\nThis is factored out part of:\nhttp://codereview.appspot.com/5279048/\n(Parallel GC)\n\nbenchmark                             old ns/op    new ns/op    delta\ngarbage.BenchmarkParser              3999106750   3975026500   -0.60%\ngarbage.BenchmarkParser-2            3720553750   3719196500   -0.04%\ngarbage.BenchmarkParser-4            3502857000   3474980500   -0.80%\ngarbage.BenchmarkParser-8            3375448000   3341310500   -1.01%\ngarbage.BenchmarkParserLastPause      329401000    324097000   -1.61%\ngarbage.BenchmarkParserLastPause-2    208953000    214222000   +2.52%\ngarbage.BenchmarkParserLastPause-4    110933000    111656000   +0.65%\ngarbage.BenchmarkParserLastPause-8     71969000     78230000   +8.70%\ngarbage.BenchmarkParserPause          230808842    197237400  -14.55%\ngarbage.BenchmarkParserPause-2        123674365    125197595   +1.23%\ngarbage.BenchmarkParserPause-4         80518525     85710333   +6.45%\ngarbage.BenchmarkParserPause-8         58310243     56940512   -2.35%\ngarbage.BenchmarkTree2                 31471700     31289400   -0.58%\ngarbage.BenchmarkTree2-2               21536800     21086300   -2.09%\ngarbage.BenchmarkTree2-4               11074700     10880000   -1.76%\ngarbage.BenchmarkTree2-8                7568600      7351400   -2.87%\ngarbage.BenchmarkTree2LastPause       314664000    312840000   -0.58%\ngarbage.BenchmarkTree2LastPause-2     215319000    210815000   -2.09%\ngarbage.BenchmarkTree2LastPause-4     110698000    108751000   -1.76%\ngarbage.BenchmarkTree2LastPause-8      75635000     73463000   -2.87%\ngarbage.BenchmarkTree2Pause           174280857    173147571   -0.65%\ngarbage.BenchmarkTree2Pause-2         131332714    129665761   -1.27%\ngarbage.BenchmarkTree2Pause-4          93803095     93422904   -0.41%\ngarbage.BenchmarkTree2Pause-8          86242333     85146761   -1.27%",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-05 14:20:50.383899",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=dd0b27040a5a ***\n\nruntime: make GC stats per-M\nThis is factored out part of:\nhttp://codereview.appspot.com/5279048/\n(Parallel GC)\n\nbenchmark                             old ns/op    new ns/op    delta\ngarbage.BenchmarkParser              3999106750   3975026500   -0.60%\ngarbage.BenchmarkParser-2            3720553750   3719196500   -0.04%\ngarbage.BenchmarkParser-4            3502857000   3474980500   -0.80%\ngarbage.BenchmarkParser-8            3375448000   3341310500   -1.01%\ngarbage.BenchmarkParserLastPause      329401000    324097000   -1.61%\ngarbage.BenchmarkParserLastPause-2    208953000    214222000   +2.52%\ngarbage.BenchmarkParserLastPause-4    110933000    111656000   +0.65%\ngarbage.BenchmarkParserLastPause-8     71969000     78230000   +8.70%\ngarbage.BenchmarkParserPause          230808842    197237400  -14.55%\ngarbage.BenchmarkParserPause-2        123674365    125197595   +1.23%\ngarbage.BenchmarkParserPause-4         80518525     85710333   +6.45%\ngarbage.BenchmarkParserPause-8         58310243     56940512   -2.35%\ngarbage.BenchmarkTree2                 31471700     31289400   -0.58%\ngarbage.BenchmarkTree2-2               21536800     21086300   -2.09%\ngarbage.BenchmarkTree2-4               11074700     10880000   -1.76%\ngarbage.BenchmarkTree2-8                7568600      7351400   -2.87%\ngarbage.BenchmarkTree2LastPause       314664000    312840000   -0.58%\ngarbage.BenchmarkTree2LastPause-2     215319000    210815000   -2.09%\ngarbage.BenchmarkTree2LastPause-4     110698000    108751000   -1.76%\ngarbage.BenchmarkTree2LastPause-8      75635000     73463000   -2.87%\ngarbage.BenchmarkTree2Pause           174280857    173147571   -0.65%\ngarbage.BenchmarkTree2Pause-2         131332714    129665761   -1.27%\ngarbage.BenchmarkTree2Pause-4          93803095     93422904   -0.41%\ngarbage.BenchmarkTree2Pause-8          86242333     85146761   -1.27%\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5987045",
			"disapproval": false,
			"date": "2012-04-05 16:48:41.743647",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The code looks fine but this is the first CL making\nchanges to the garbage collector itself.  I'd like to set\na convention that when we make changes like these\nwe include benchmarks measuring the effect in the \nCL description.  \n\nPlease run make bench in go/test/bench/garbage\nwith varying numbers of procs before and after this\nchange and add a summary (like what benchcmp prints,\nmaybe) to the CL description.\n\ngo/test/bench/garbage may not be a good set of tests.\nIf you have any other tests that should be there, let's\nadd them (in a separate CL).\n\nThanks.\nRuss\n\nhttp://codereview.appspot.com/5987045/diff/1002/src/pkg/runtime/mgc0.c\nFile src/pkg/runtime/mgc0.c (right):\n\nhttp://codereview.appspot.com/5987045/diff/1002/src/pkg/runtime/mgc0.c#newcode554\nsrc/pkg/runtime/mgc0.c:554: m->gcstats.nhandoff += 1;\n++\n\nhttp://codereview.appspot.com/5987045/diff/1002/src/pkg/runtime/mgc0.c#newcode940\nsrc/pkg/runtime/mgc0.c:940: cachestats(0);\nPlease use nil instead of 0 when you need a pointer.\n\nhttp://codereview.appspot.com/5987045/diff/1002/src/pkg/runtime/mgc0.c#newcode1038\nsrc/pkg/runtime/mgc0.c:1038: cachestats(0);\nSame.",
			"disapproval": false,
			"date": "2012-04-05 14:30:07.936770",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/05 14:30:07, rsc wrote:\n> The code looks fine but this is the first CL making\n> changes to the garbage collector itself.  I'd like to set\n> a convention that when we make changes like these\n> we include benchmarks measuring the effect in the \n> CL description.  \n> \n> Please run make bench in go/test/bench/garbage\n> with varying numbers of procs before and after this\n> change and add a summary (like what benchcmp prints,\n> maybe) to the CL description.\n> \n> go/test/bench/garbage may not be a good set of tests.\n> If you have any other tests that should be there, let's\n> add them (in a separate CL).\n\nI've added results of test/bench/garbage benchmarks (parser and tree2).\nI think that big differences on parser are caused by the fact that different number of garbage collections was executed during the runs.\n\n\n> http://codereview.appspot.com/5987045/diff/1002/src/pkg/runtime/mgc0.c\n> File src/pkg/runtime/mgc0.c (right):\n> \n> http://codereview.appspot.com/5987045/diff/1002/src/pkg/runtime/mgc0.c#newcode554\n> src/pkg/runtime/mgc0.c:554: m->gcstats.nhandoff += 1;\n> ++\n> \n> http://codereview.appspot.com/5987045/diff/1002/src/pkg/runtime/mgc0.c#newcode940\n> src/pkg/runtime/mgc0.c:940: cachestats(0);\n> Please use nil instead of 0 when you need a pointer.\n> \n> http://codereview.appspot.com/5987045/diff/1002/src/pkg/runtime/mgc0.c#newcode1038\n> src/pkg/runtime/mgc0.c:1038: cachestats(0);\n> Same.\n\nDone. PTAL.",
			"disapproval": false,
			"date": "2012-04-05 16:09:00.196336",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nCan you please sort the lines in the CL description?\n\ngarbage.BenchmarkParser              3999106750   3975026500   -0.60%\ngarbage.BenchmarkParser-2            3720553750   3719196500   -0.04%\ngarbage.BenchmarkParser-4            3502857000   3474980500   -0.80%\ngarbage.BenchmarkParser-8            3375448000   3341310500   -1.01%\ngarbage.BenchmarkParserLastPause      329401000    324097000   -1.61%\ngarbage.BenchmarkParserLastPause-2    208953000    214222000   +2.52%\ngarbage.BenchmarkParserLastPause-4    110933000    111656000   +0.65%\ngarbage.BenchmarkParserLastPause-8     71969000     78230000   +8.70%\ngarbage.BenchmarkParserPause          230808842    197237400  -14.55%\ngarbage.BenchmarkParserPause-2        123674365    125197595   +1.23%\ngarbage.BenchmarkParserPause-4         80518525     85710333   +6.45%\ngarbage.BenchmarkParserPause-8         58310243     56940512   -2.35%\ngarbage.BenchmarkTree2                 31471700     31289400   -0.58%\ngarbage.BenchmarkTree2-2               21536800     21086300   -2.09%\ngarbage.BenchmarkTree2-4               11074700     10880000   -1.76%\ngarbage.BenchmarkTree2-8                7568600      7351400   -2.87%\ngarbage.BenchmarkTree2LastPause       314664000    312840000   -0.58%\ngarbage.BenchmarkTree2LastPause-2     215319000    210815000   -2.09%\ngarbage.BenchmarkTree2LastPause-4     110698000    108751000   -1.76%\ngarbage.BenchmarkTree2LastPause-8      75635000     73463000   -2.87%\ngarbage.BenchmarkTree2Pause           174280857    173147571   -0.65%\ngarbage.BenchmarkTree2Pause-2         131332714    129665761   -1.27%\ngarbage.BenchmarkTree2Pause-4          93803095     93422904   -0.41%\ngarbage.BenchmarkTree2Pause-8          86242333     85146761   -1.27%\n",
			"disapproval": false,
			"date": "2012-04-05 16:35:01.222904",
			"approval": true
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 5987045: runtime: make GC stats per-M",
	"created": "2012-04-05 14:18:12.801629",
	"patchsets": [
		1,
		2001,
		1002,
		7001,
		1004,
		4007
	],
	"modified": "2012-04-05 16:48:43.715131",
	"closed": true,
	"issue": 5987045
}