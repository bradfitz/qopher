{
	"description": "exp/html: add Insert and Replace methods Node",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"nigeltao@golang.org"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 23 August 2012 16:07,  <nigeltao@golang.org> wrote:\r\n> Maybe the time has simply come to change Nodes to have a linked list of\r\n> children, instead of a slice of children.\r\n\r\nI think you're right.\r\n\r\nAnd I think we should probably sit down and design the \"mutation\r\ninterface\" (for lack of a better term) properly. InsertBefore is just\r\none of a few desirable functions, and just because that's how the\r\nJavaScript DOM works doesn't necessarily mean that's how we should do\r\nit.\r\n\r\n>\r\n> http://codereview.appspot.com/6478049/diff/3001/src/pkg/exp/html/node.go\r\n> File src/pkg/exp/html/node.go (right):\r\n>\r\n> http://codereview.appspot.com/6478049/diff/3001/src/pkg/exp/html/node.go#newcode76\r\n> src/pkg/exp/html/node.go:76: // InsertBefore inserts the given nodes as\r\n> siblings before this node.\r\n> Add:\r\n> // It will panic if n has no parent.\r\n>\r\n> http://codereview.appspot.com/6478049/diff/3001/src/pkg/exp/html/node.go#newcode83\r\n> src/pkg/exp/html/node.go:83: for _, n := range nodes {\r\n> I don't like how n shadows the receiver n.\r\n>\r\n> http://codereview.appspot.com/6478049/diff/3001/src/pkg/exp/html/node.go#newcode84\r\n> src/pkg/exp/html/node.go:84: n.Parent.Remove(n)\r\n> What if n.Parent is nil?\r\n>\r\n> What happens if n.Parent == theShadowedN?\r\n>\r\n> http://codereview.appspot.com/6478049/\r\n",
			"disapproval": false,
			"date": "2012-08-23 06:19:37.542880",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-24 00:12:54.129050",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"adg@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Maybe the time has simply come to change Nodes to have a linked list of children, instead of a slice of children.\n\nhttp://codereview.appspot.com/6478049/diff/3001/src/pkg/exp/html/node.go\nFile src/pkg/exp/html/node.go (right):\n\nhttp://codereview.appspot.com/6478049/diff/3001/src/pkg/exp/html/node.go#newcode76\nsrc/pkg/exp/html/node.go:76: // InsertBefore inserts the given nodes as siblings before this node.\nAdd:\n// It will panic if n has no parent.\n\nhttp://codereview.appspot.com/6478049/diff/3001/src/pkg/exp/html/node.go#newcode83\nsrc/pkg/exp/html/node.go:83: for _, n := range nodes {\nI don't like how n shadows the receiver n.\n\nhttp://codereview.appspot.com/6478049/diff/3001/src/pkg/exp/html/node.go#newcode84\nsrc/pkg/exp/html/node.go:84: n.Parent.Remove(n)\nWhat if n.Parent is nil?\n\nWhat happens if n.Parent == theShadowedN?",
			"disapproval": false,
			"date": "2012-08-23 06:07:12.174070",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 23 August 2012 17:50, Nigel Tao <nigeltao@golang.org> wrote:\r\n> On 23 August 2012 16:19, Andrew Gerrand <adg@golang.org> wrote:\r\n>> Happy to think about this for a bit and send a proposal.\r\n>\r\n> WebKit's Node:\r\n> http://trac.webkit.org/browser/trunk/Source/WebCore/dom/Node.h\r\n>\r\n> DOM IDL's Node:\r\n> http://www.w3.org/TR/DOM-Level-3-Core/idl/dom.idl\r\n>\r\n> Mozilla's INode:\r\n> http://mxr.mozilla.org/mozilla-central/source/content/base/public/nsINode.h\r\n\r\nThe DOM provides these four methods for mutating the tree (this is the\r\nwebkit one, but the others provide nearly identical functions):\r\n\r\n183\t    bool insertBefore(PassRefPtr<Node> newChild, Node* refChild,\r\nExceptionCode&, bool shouldLazyAttach = false);\r\n184\t    bool replaceChild(PassRefPtr<Node> newChild, Node* oldChild,\r\nExceptionCode&, bool shouldLazyAttach = false);\r\n185\t    bool removeChild(Node* child, ExceptionCode&);\r\n186\t    bool appendChild(PassRefPtr<Node> newChild, ExceptionCode&,\r\nbool shouldLazyAttach = false);\r\n\r\nWe already have the latter two, in Add and Remove.\r\n\r\nI propose adding Insert and Replace methods as analogues to\r\ninsertBefore and replaceChild:\r\n\r\n// Insert inserts nodes as children before child.\r\n// If child is nil, the nodes are inserted before all children.\r\n// It will panic if n is not child's parent.\r\nfunc (n *Node) Insert(child *Node, nodes ...*Node)\r\n\r\n// Replace replaces child with nodes.\r\n// It will panic if n is not child's parent.\r\nfunc (n *Node) Replace(child *Node, nodes ...*Node)\r\n\r\nI think this is a simple enough step that is worth taking. I think it\r\ngives me all the building blocks I need to build stuff on top.\r\n\r\nAndrew\r\n",
			"disapproval": false,
			"date": "2012-08-24 00:10:25.410580",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-08-23 05:05:23.706270",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 23 August 2012 16:19, Andrew Gerrand <adg@golang.org> wrote:\r\n> Happy to think about this for a bit and send a proposal.\r\n\r\nWebKit's Node:\r\nhttp://trac.webkit.org/browser/trunk/Source/WebCore/dom/Node.h\r\n\r\nDOM IDL's Node:\r\nhttp://www.w3.org/TR/DOM-Level-3-Core/idl/dom.idl\r\n\r\nMozilla's INode:\r\nhttp://mxr.mozilla.org/mozilla-central/source/content/base/public/nsINode.h\r\n",
			"disapproval": false,
			"date": "2012-08-23 07:50:42.852080",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 23 August 2012 16:19, Andrew Gerrand <adg@golang.org> wrote:\r\n> On 23 August 2012 16:07,  <nigeltao@golang.org> wrote:\r\n>> Maybe the time has simply come to change Nodes to have a linked list of\r\n>> children, instead of a slice of children.\r\n>\r\n> I think you're right.\r\n>\r\n> And I think we should probably sit down and design the \"mutation\r\n> interface\" (for lack of a better term) properly.\r\n\r\nHappy to think about this for a bit and send a proposal.\r\n",
			"disapproval": false,
			"date": "2012-08-23 06:20:17.560730",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"adg@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can we hold off on this one for now? For one, the browser's insertBefore takes a single node, not a ...node, and doing multiple insertBefore calls should be cheaper if a node's children are a linked list instead of a slice.\n\nI'll try to write something soon about where I envisage the html.Node type should be.\n\nhttps://codereview.appspot.com/6478049/diff/7001/src/pkg/exp/html/node.go\nFile src/pkg/exp/html/node.go (right):\n\nhttps://codereview.appspot.com/6478049/diff/7001/src/pkg/exp/html/node.go#newcode77\nsrc/pkg/exp/html/node.go:77: // If child is nil, the nodes are inserted before all children.\nShould before be after? What do the browsers do?",
			"disapproval": false,
			"date": "2012-08-24 04:32:41.091780",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-09-11 01:45:18.482330",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 6478049: exp/html: add Insert and Replace methods Node",
	"created": "2012-08-23 05:05:19.049410",
	"patchsets": [
		1,
		3001,
		7001
	],
	"modified": "2012-09-11 01:45:20.561380",
	"closed": true,
	"issue": 6478049
}