{
	"description": "cmd/gc: fix comment typo, assignment spacing",
	"cc": [
		"bradfitz@golang.org",
		"gri@golang.org",
		"lvd@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Thu, Mar 22, 2012 at 10:57 AM,  <iant@golang.org> wrote:\n> Reviewers: bradfitz,\n>\n> Message:\n> Hello bradfitz (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> cmd/gc: fix comment typo, assignment spacing\n>\n> Please review this at http://codereview.appspot.com/5874053/\n>\n> Affected files:\n> \u00a0M src/cmd/gc/walk.c\n>\n>\n> Index: src/cmd/gc/walk.c\n> ===================================================================\n> --- a/src/cmd/gc/walk.c\n> +++ b/src/cmd/gc/walk.c\n> @@ -2358,10 +2358,10 @@\n>\n> \u00a0 \u00a0 \u00a0 \u00a0walkexprlistsafe(n->list, init);\n>\n> - \u00a0 \u00a0 \u00a0 // walkexprlistsafe will leave OINDEX (s[n]) along if both s\n> + \u00a0 \u00a0 \u00a0 // walkexprlistsafe will leave OINDEX (s[n]) alone if both s\n> \u00a0 \u00a0 \u00a0 \u00a0// and n are name or literal, but those may index the slice we're\n> \u00a0 \u00a0 \u00a0 \u00a0// modifying here. \u00a0Fix explicitly.\n> - \u00a0 \u00a0 \u00a0 for(l = n->list; l; l=l->next)\n> + \u00a0 \u00a0 \u00a0 for(l=n->list; l; l=l->next)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0l->n = cheapexpr(l->n, init);\n>\n> \u00a0 \u00a0 \u00a0 \u00a0nsrc = n->list->n;\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-22 18:01:39.438534",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-22 17:57:52.245550",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Thu, Mar 22, 2012 at 10:57 AM, <iant@golang.org> wrote:\n\n> Reviewers: bradfitz,\n>\n> Message:\n> Hello bradfitz (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> cmd/gc: fix comment typo, assignment spacing\n>\n> Please review this at http://codereview.appspot.com/**5874053/<http://codereview.appspot.com/5874053/>\n>\n> Affected files:\n>  M src/cmd/gc/walk.c\n>\n>\n> Index: src/cmd/gc/walk.c\n> ==============================**==============================**=======\n> --- a/src/cmd/gc/walk.c\n> +++ b/src/cmd/gc/walk.c\n> @@ -2358,10 +2358,10 @@\n>\n>        walkexprlistsafe(n->list, init);\n>\n> -       // walkexprlistsafe will leave OINDEX (s[n]) along if both s\n> +       // walkexprlistsafe will leave OINDEX (s[n]) alone if both s\n>        // and n are name or literal, but those may index the slice we're\n>        // modifying here.  Fix explicitly.\n> -       for(l = n->list; l; l=l->next)\n> +       for(l=n->list; l; l=l->next)\n>                l->n = cheapexpr(l->n, init);\n>\n>        nsrc = n->list->n;\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-22 18:03:00.150039",
			"approval": true
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM sorry this was all my fault.\n\nOn Thu, Mar 22, 2012 at 19:02, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n\n> LGTM\n>\n> On Thu, Mar 22, 2012 at 10:57 AM, <iant@golang.org> wrote:\n>\n>> Reviewers: bradfitz,\n>>\n>> Message:\n>> Hello bradfitz (cc: golang-dev@googlegroups.com),\n>>\n>> I'd like you to review this change to\n>> https://go.googlecode.com/hg/\n>>\n>>\n>> Description:\n>> cmd/gc: fix comment typo, assignment spacing\n>>\n>> Please review this at http://codereview.appspot.com/**5874053/<http://codereview.appspot.com/5874053/>\n>>\n>> Affected files:\n>>  M src/cmd/gc/walk.c\n>>\n>>\n>> Index: src/cmd/gc/walk.c\n>> ==============================**==============================**=======\n>> --- a/src/cmd/gc/walk.c\n>> +++ b/src/cmd/gc/walk.c\n>> @@ -2358,10 +2358,10 @@\n>>\n>>        walkexprlistsafe(n->list, init);\n>>\n>> -       // walkexprlistsafe will leave OINDEX (s[n]) along if both s\n>> +       // walkexprlistsafe will leave OINDEX (s[n]) alone if both s\n>>        // and n are name or literal, but those may index the slice we're\n>>        // modifying here.  Fix explicitly.\n>> -       for(l = n->list; l; l=l->next)\n>> +       for(l=n->list; l; l=l->next)\n>>                l->n = cheapexpr(l->n, init);\n>>\n>>        nsrc = n->list->n;\n>>\n>>\n>>\n>\n",
			"disapproval": false,
			"date": "2012-03-22 18:33:50.146891",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"bradfitz@golang.org",
				"gri@golang.org",
				"lvd@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=0d4324e5a047 ***\n\ncmd/gc: fix comment typo, assignment spacing\n\nR=bradfitz, gri, lvd\nCC=golang-dev\nhttp://codereview.appspot.com/5874053",
			"disapproval": false,
			"date": "2012-03-22 18:40:16.902073",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 5874053: cmd/gc: fix comment typo, assignment spacing",
	"created": "2012-03-22 17:57:47.086770",
	"patchsets": [
		1,
		4
	],
	"modified": "2012-03-22 18:40:18.963096",
	"closed": true,
	"issue": 5874053
}