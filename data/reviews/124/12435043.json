{
	"description": "net/http: do not send redundant Connection: close header in HTTP/1.0 responses\n\nHTTP/1.0 connections are closed implicitly, unless otherwise specified.\n\nNote that this change does not test or fix \"request too large\" responses.\nReasoning: (a) it complicates tests and fixes, (b) they should be rare,\nand (c) this is just a minor wire optimization, and thus not really worth worrying\nabout in this context.\n\nFixes issue 5955.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "josharian@gmail.com",
			"recipients": [
				"josharian@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-08-04 16:04:58.375100",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"josharian@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/serve_test.go\nFile src/pkg/net/http/serve_test.go (right):\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/serve_test.go#newcode1777\nsrc/pkg/net/http/serve_test.go:1777: keepalive bool\nkeepAlive bool // want a \"Connection: keep-alive\" response\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/serve_test.go#newcode1780\nsrc/pkg/net/http/serve_test.go:1780: {req: \"GET / HTTP/1.0\\r\\nExpect: 100-Continue\\r\\n\\r\\n\"},\n100-continue isn't valid unless you're using at least HTTP/1.1 anyway, so this test case is nonsensical.\n\nIf you're testing that we ignore 100-continue when HTTP/1.0 is announced, that would be fine, but that feels like it should go in a different test, or should have a big fat comment above this case.\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/serve_test.go#newcode1781\nsrc/pkg/net/http/serve_test.go:1781: {req: \"GET * HTTP/1.0\\r\\n\\r\\n\"},\n\"OPTIONS *\" would be a better example than \"GET *\" if that still tests what you want to test.\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/serve_test.go#newcode1782\nsrc/pkg/net/http/serve_test.go:1782: {req: \"GET / HTTP/1.0\\r\\nExpect: 417-Expectation-Failed\\r\\n\\r\\n\"},\nlikewise\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/serve_test.go#newcode1789\nsrc/pkg/net/http/serve_test.go:1789: for _, test := range tests {\nuse \"tt\" instead of test here.  convention.\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/serve_test.go#newcode1814\nsrc/pkg/net/http/serve_test.go:1814: if test.keepalive && header[0] != \"keep-alive\" {\nmore paranoid would be:\n\nif tt.keepAlive && !reflect.DeepEqual(header, []string{\"keep-alive\"}) {\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/server.go#newcode846\nsrc/pkg/net/http/server.go:846: if w.closeAfterReply && !hasToken(cw.header.get(\"Connection\"), \"close\") && w.req.ProtoAtLeast(1, 1) {\nI think you might want to move the ProtoAtLeast check down into the if body, around just:\n\n   setHeader.connection = \"close\"\n\nI think you always want to delete the \"Connection\" header, no?\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/server.go#newcode1124\nsrc/pkg/net/http/server.go:1124: if w.req.ProtoAtLeast(1, 1) {\ndelete.  instead, expectsContinue should return false if !req.ProtoAtLeast(1, 1)\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/server.go#newcode1169\nsrc/pkg/net/http/server.go:1169: if w.req.ProtoAtLeast(1, 1) {\nsame",
			"disapproval": false,
			"date": "2013-08-04 19:46:48.456240",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"josharian@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The CL description could be more clear too.\n\nThis is only about omitting the redundant \"Connection: close\" response in HTTP/1.0 responses, where it is implicit.  Any other Connection headers are retained.",
			"disapproval": false,
			"date": "2013-08-04 19:49:35.668500",
			"approval": false
		},
		{
			"sender": "josharian@gmail.com",
			"recipients": [
				"josharian@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-06 00:05:02.017520",
			"approval": false
		},
		{
			"sender": "josharian@gmail.com",
			"recipients": [
				"josharian@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/06 00:05:02, josharian wrote:\n> Hello mailto:golang-dev@googlegroups.com, mailto:bradfitz@golang.org (cc:\n> mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nArgh. It didn't pick up my CL description. One moment...",
			"disapproval": false,
			"date": "2013-08-06 00:05:48.134880",
			"approval": false
		},
		{
			"sender": "josharian@gmail.com",
			"recipients": [
				"josharian@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/serve_test.go\nFile src/pkg/net/http/serve_test.go (right):\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/serve_test.go#newcode1780\nsrc/pkg/net/http/serve_test.go:1780: {req: \"GET / HTTP/1.0\\r\\nExpect: 100-Continue\\r\\n\\r\\n\"},\nOn 2013/08/04 19:46:48, bradfitz wrote:\n> 100-continue isn't valid unless you're using at least HTTP/1.1 anyway, so this\n> test case is nonsensical.\n> \n> If you're testing that we ignore 100-continue when HTTP/1.0 is announced, that\n> would be fine, but that feels like it should go in a different test, or should\n> have a big fat comment above this case.\n\n[sheepishly] good point. That is indeed a separate issue; I'll deal with it in its own CL or issue.\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttps://codereview.appspot.com/12435043/diff/5001/src/pkg/net/http/server.go#newcode846\nsrc/pkg/net/http/server.go:846: if w.closeAfterReply && !hasToken(cw.header.get(\"Connection\"), \"close\") && w.req.ProtoAtLeast(1, 1) {\nOn 2013/08/04 19:46:48, bradfitz wrote:\n> I think you might want to move the ProtoAtLeast check down into the if body,\n> around just:\n> \n>    setHeader.connection = \"close\"\n> \n> I think you always want to delete the \"Connection\" header, no?\n\nI had convinced myself that it was functionally equivalent, but that's\nmore obviously correct. Done.",
			"disapproval": false,
			"date": "2013-08-06 00:06:16.849240",
			"approval": false
		},
		{
			"sender": "josharian@gmail.com",
			"recipients": [
				"josharian@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-06 00:10:02.059840",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"josharian@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-07 01:36:42.530660",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"josharian@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=83227ed66d41 ***\n\nnet/http: do not send redundant Connection: close header in HTTP/1.0 responses\n\nHTTP/1.0 connections are closed implicitly, unless otherwise specified.\n\nNote that this change does not test or fix \"request too large\" responses.\nReasoning: (a) it complicates tests and fixes, (b) they should be rare,\nand (c) this is just a minor wire optimization, and thus not really worth worrying\nabout in this context.\n\nFixes issue 5955.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/12435043\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2013-08-07 01:37:34.423050",
			"approval": false
		}
	],
	"owner_email": "josharian@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "josharian",
	"subject": "code review 12435043: net/http: do not send redundant Connection: close heade...",
	"created": "2013-08-04 16:03:46.893100",
	"patchsets": [
		1,
		2001,
		5001,
		12001,
		14001,
		20001
	],
	"modified": "2013-08-07 01:37:34.748220",
	"closed": false,
	"issue": 12435043
}