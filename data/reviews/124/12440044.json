{
	"description": "runtime: tune append crossover on amd64 and 386\n\nFixes issue 4963.\n\nSets the append crossover to 0 on intel platforms.\n\nResults for linux/amd64 Core i5 SNB\n\nbenchmark                     old ns/op    new ns/op    delta\nBenchmarkAppend                     102          104   +1.96%\nBenchmarkAppend1Byte                 10           11   +0.92%\nBenchmarkAppend4Bytes                15           11  -28.10%\nBenchmarkAppend7Bytes                17           12  -32.58%\nBenchmarkAppend8Bytes                18           12  -36.17%\nBenchmarkAppend15Bytes               24           11  -55.02%\nBenchmarkAppend16Bytes               25           11  -56.03%\nBenchmarkAppend32Bytes               11           12   +4.31%\nBenchmarkAppendStr1Byte               8            9  +13.99%\nBenchmarkAppendStr4Bytes             11            9  -17.52%\nBenchmarkAppendStr8Bytes             14            9  -35.70%\nBenchmarkAppendStr16Bytes            21            9  -55.19%\nBenchmarkAppendStr32Bytes            10           10   -5.66%\nBenchmarkAppendSpecialCase           49           52   +7.96%\n\nResults for linux/386 Atom(TM) CPU 330 @ 1.60GHz\n\nbenchmark                     old ns/op    new ns/op    delta\nBenchmarkAppend                     219          218   -0.46%\nBenchmarkAppend1Byte                 75           72   -3.44%\nBenchmarkAppend4Bytes                92           73  -19.87%\nBenchmarkAppend7Bytes               108           74  -31.20%\nBenchmarkAppend8Bytes               116           74  -35.95%\nBenchmarkAppend15Bytes              162           77  -52.22%\nBenchmarkAppend16Bytes              169           77  -54.20%\nBenchmarkAppend32Bytes               88           86   -2.38%\nBenchmarkAppendStr1Byte              57           59   +3.32%\nBenchmarkAppendStr4Bytes             72           59  -17.40%\nBenchmarkAppendStr8Bytes             92           60  -34.70%\nBenchmarkAppendStr16Bytes           141           63  -54.89%\nBenchmarkAppendStr32Bytes            75           73   -2.64%\nBenchmarkAppendSpecialCase          270          270   +0.00%",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/05 10:24:26, dfc wrote:\n> Hello mailto:golang-dev@googlegroups.com,\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go\n\nReducing the arm crossover from 8 to 4 did not significantly improve the benchmarks.",
			"disapproval": false,
			"date": "2013-08-05 10:25:32.638470",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-08-05 10:24:26.773260",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm suspicious. What happened to memmove?\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-08-05 10:34:02.062190",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12440044/diff/10001/src/pkg/runtime/slice.c\nFile src/pkg/runtime/slice.c (right):\n\nhttps://codereview.appspot.com/12440044/diff/10001/src/pkg/runtime/slice.c#newcode98\nsrc/pkg/runtime/slice.c:98: if(appendCrossover && w <= appendCrossover) {\nappendCrossover is not a boolean.",
			"disapproval": false,
			"date": "2013-08-05 10:34:19.553360",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I'm suspicious. What happened to memmove?\r\n\r\nkhr made it better after tip reopened in May,\r\nhttps://code.google.com/p/go/source/detail?r=4cb93e2900d0\r\n",
			"disapproval": false,
			"date": "2013-08-05 10:39:09.489830",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-05 10:49:01.120590",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-05 12:24:59.525970",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e285a7b170aa ***\n\nruntime: tune append crossover on amd64 and 386\n\nFixes issue 4963.\n\nSets the append crossover to 0 on intel platforms.\n\nResults for linux/amd64 Core i5 SNB\n\nbenchmark                     old ns/op    new ns/op    delta\nBenchmarkAppend                     102          104   +1.96%\nBenchmarkAppend1Byte                 10           11   +0.92%\nBenchmarkAppend4Bytes                15           11  -28.10%\nBenchmarkAppend7Bytes                17           12  -32.58%\nBenchmarkAppend8Bytes                18           12  -36.17%\nBenchmarkAppend15Bytes               24           11  -55.02%\nBenchmarkAppend16Bytes               25           11  -56.03%\nBenchmarkAppend32Bytes               11           12   +4.31%\nBenchmarkAppendStr1Byte               8            9  +13.99%\nBenchmarkAppendStr4Bytes             11            9  -17.52%\nBenchmarkAppendStr8Bytes             14            9  -35.70%\nBenchmarkAppendStr16Bytes            21            9  -55.19%\nBenchmarkAppendStr32Bytes            10           10   -5.66%\nBenchmarkAppendSpecialCase           49           52   +7.96%\n\nResults for linux/386 Atom(TM) CPU 330 @ 1.60GHz\n\nbenchmark                     old ns/op    new ns/op    delta\nBenchmarkAppend                     219          218   -0.46%\nBenchmarkAppend1Byte                 75           72   -3.44%\nBenchmarkAppend4Bytes                92           73  -19.87%\nBenchmarkAppend7Bytes               108           74  -31.20%\nBenchmarkAppend8Bytes               116           74  -35.95%\nBenchmarkAppend15Bytes              162           77  -52.22%\nBenchmarkAppend16Bytes              169           77  -54.20%\nBenchmarkAppend32Bytes               88           86   -2.38%\nBenchmarkAppendStr1Byte              57           59   +3.32%\nBenchmarkAppendStr4Bytes             72           59  -17.40%\nBenchmarkAppendStr8Bytes             92           60  -34.70%\nBenchmarkAppendStr16Bytes           141           63  -54.89%\nBenchmarkAppendStr32Bytes            75           73   -2.64%\nBenchmarkAppendSpecialCase          270          270   +0.00%\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/12440044",
			"disapproval": false,
			"date": "2013-08-05 21:51:54.650650",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 12440044: runtime: tune append crossover on amd64 and 386",
	"created": "2013-08-05 06:24:35.356930",
	"patchsets": [
		1,
		2001,
		2002,
		7001,
		10001,
		18001,
		14002,
		23001
	],
	"modified": "2013-08-08 01:58:44.838340",
	"closed": true,
	"issue": 12440044
}