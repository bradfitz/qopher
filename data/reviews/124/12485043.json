{
	"description": "reflect: Get rid of the test for the error message when\nyou do reflect.call with too big an argument list.\nNot worth the hassle.\n\nFixes issue 6023\nFixes issue 6033",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"dave@cheney.net"
	],
	"reviewers": [
		"dvyukov@google.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\n\r\nOn Mon, Aug 5, 2013 at 3:01 PM, <khr@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://khr%40golang.org@code.**google.com/p/go/<http://40golang.org@code.google.com/p/go/>\r\n>\r\n>\r\n> Description:\r\n> reflect: Get rid of the test for the error message when\r\n> you do reflect.call with too big an argument list.\r\n> Not worth the hassle.\r\n>\r\n> Please review this at https://codereview.appspot.**com/12485043/<https://codereview.appspot.com/12485043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/reflect/all_test.go\r\n>\r\n>\r\n> Index: src/pkg/reflect/all_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/reflect/all_test.go\r\n> +++ b/src/pkg/reflect/all_test.go\r\n> @@ -3509,14 +3509,3 @@\r\n>  func (x *exhaustive) Maybe() bool {\r\n>         return x.Choose(2) == 1\r\n>  }\r\n> -\r\n> -func bigArgFunc(v [(1<<30)+64]byte) {\r\n> -}\r\n> -\r\n> -func TestBigArgs(t *testing.T) {\r\n> -       if !testing.Short() && ^uint(0)>>32 != 0 { // test on 64-bit only\r\n> -               v := new([(1<<30)+64]byte)\r\n> -               bigArgFunc(*v) // regular calls are ok\r\n> -               shouldPanic(func() {ValueOf(bigArgFunc).Call([]**Value{ValueOf(*v)})})\r\n> // ... just not reflect calls\r\n> -       }\r\n> -}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-05 22:02:39.658110",
			"approval": true
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://khr%40golang.org@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-05 22:01:46.718790",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Please add the issue linkage from\r\n\r\nhttps://codereview.appspot.com/12484043/\r\n\r\nOn Tue, Aug 6, 2013 at 8:02 AM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> LGTM\r\n>\r\n>\r\n>\r\n> On Mon, Aug 5, 2013 at 3:01 PM, <khr@golang.org> wrote:\r\n>>\r\n>> Reviewers: golang-dev1,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com,\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://khr%40golang.org@code.google.com/p/go/\r\n>>\r\n>>\r\n>> Description:\r\n>> reflect: Get rid of the test for the error message when\r\n>> you do reflect.call with too big an argument list.\r\n>> Not worth the hassle.\r\n>>\r\n>> Please review this at https://codereview.appspot.com/12485043/\r\n>>\r\n>> Affected files:\r\n>>   M src/pkg/reflect/all_test.go\r\n>>\r\n>>\r\n>> Index: src/pkg/reflect/all_test.go\r\n>> ===================================================================\r\n>> --- a/src/pkg/reflect/all_test.go\r\n>> +++ b/src/pkg/reflect/all_test.go\r\n>> @@ -3509,14 +3509,3 @@\r\n>>  func (x *exhaustive) Maybe() bool {\r\n>>         return x.Choose(2) == 1\r\n>>  }\r\n>> -\r\n>> -func bigArgFunc(v [(1<<30)+64]byte) {\r\n>> -}\r\n>> -\r\n>> -func TestBigArgs(t *testing.T) {\r\n>> -       if !testing.Short() && ^uint(0)>>32 != 0 { // test on 64-bit only\r\n>> -               v := new([(1<<30)+64]byte)\r\n>> -               bigArgFunc(*v) // regular calls are ok\r\n>> -               shouldPanic(func()\r\n>> {ValueOf(bigArgFunc).Call([]Value{ValueOf(*v)})}) // ... just not reflect\r\n>> calls\r\n>> -       }\r\n>> -}\r\n>>\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@googlegroups.com.\r\n>> For more options, visit https://groups.google.com/groups/opt_out.\r\n>>\r\n>>\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-05 22:03:18.472180",
			"approval": true
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=58c839988402 ***\n\nreflect: Get rid of the test for the error message when\nyou do reflect.call with too big an argument list.\nNot worth the hassle.\n\nFixes issue 6023\nFixes issue 6033\n\nR=golang-dev, bradfitz, dave\nCC=golang-dev\nhttps://codereview.appspot.com/12485043",
			"disapproval": false,
			"date": "2013-08-05 22:08:40.080250",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"khr@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You can construct a fake 4GB array w/o backing storage using unsafe. Since the call must not happen, it should be good enough.",
			"disapproval": false,
			"date": "2013-08-06 08:11:50.866400",
			"approval": false
		}
	],
	"owner_email": "khr@golang.org",
	"private": false,
	"base_url": "",
	"owner": "khr",
	"subject": "code review 12485043: reflect: Get rid of the test for the error message when",
	"created": "2013-08-05 22:01:25.275150",
	"patchsets": [
		1,
		3001,
		6001,
		11001
	],
	"modified": "2013-08-06 08:11:51.106620",
	"closed": true,
	"issue": 12485043
}