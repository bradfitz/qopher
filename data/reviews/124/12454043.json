{
	"description": "go.tools/cmd/cover: add -func mode to print per-function coverage\n\nfmt/format.go:\tinit\t\t\t100.0%\nfmt/format.go:\tclearflags\t\t100.0%\nfmt/format.go:\tinit\t\t\t100.0%\nfmt/format.go:\tcomputePadding\t\t84.6%\nfmt/format.go:\twritePadding\t\t83.3%\n...\ntotal:\t\t(statements)\t\t91.3%\n\nFixes issue 5985.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net"
	],
	"reviewers": [
		"gri@golang.org"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-08-05 03:35:17.933550",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/05 03:35:17, r wrote:\n> Hello mailto:golang-dev@googlegroups.com,\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go.tools\n\nI've love to try this, can you give a one line primer how to invoke this, or how to hack cmd/go/test.go to pass -func ?",
			"disapproval": false,
			"date": "2013-08-05 05:29:03.591240",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "go test -coverprofile=cover.out pkg\r\ngo tool cover -func=cover.out\r\n",
			"disapproval": false,
			"date": "2013-08-05 05:48:35.155090",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you. That works very well.\r\n\r\nOn Mon, Aug 5, 2013 at 3:48 PM, Rob Pike <r@golang.org> wrote:\r\n> go test -coverprofile=cover.out pkg\r\n> go tool cover -func=cover.out\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-05 05:55:00.397240",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go\nFile cmd/cover/func.go (right):\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode21\ncmd/cover/func.go:21: func funcOutput(profile, output string) error {\nmissing documentation\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode55\ncmd/cover/func.go:55: f, err := findFuncs(file)\ns/f/list/ or perhaps flist? or funcs?\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode75\ncmd/cover/func.go:75: fs := token.NewFileSet()\ns/fs/fset/\n\nmore commonly used name\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode85\ncmd/cover/func.go:85: parsedFile, err := parser.ParseFile(fs, name, bytes.NewReader(data), 0)\nparser.ParseFile accepts a filename and a nil file and then will automatically read from that file - no need for the prior work here\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode99\ncmd/cover/func.go:99: type Function struct {\ns/Function/FuncExtent/ ? \n\nit's not really a function anymore\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode101\ncmd/cover/func.go:101: startLine int\nDo you really need the line and column? Couldn't it just use the actual token.Pos? They are trivially convered to a lines/columns upon demand. Also, sorting is much simpler, can just use < .\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode138\ncmd/cover/func.go:138: // The blocks are sorted, so we can quit as soon as we're done.\nsounds like a good idea to quite when one is done - rephrase?\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go\nFile cmd/cover/profile.go (right):\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode87\ncmd/cover/profile.go:87: return b[i].StartLine < b[j].StartLine || b[i].StartLine == b[j].StartLine && b[i].StartCol < b[j].StartCol\nbi, bj := &b[i], &b[j] and then save some slice index checks?\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode90\ncmd/cover/profile.go:90: var lineRe = regexp.MustCompile(`^(.+):([0-9]+).([0-9]+),([0-9]+).([0-9]+) ([0-9]+) ([0-9]+)$`)\ns/lineRe/lineRx/ ?\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode93\ncmd/cover/profile.go:93: i, err := strconv.ParseInt(s, 10, 64)\nuse Atoi since the result is a int\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode100\ncmd/cover/profile.go:100: // Token represents the position in a source file of an opening or closing\nToken seems like a bad name here.\n\nTagInfo? Tag? TagPos? PosInfo?\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode103\ncmd/cover/profile.go:103: Pos   int\nOffset ? should have a comment\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode106\ncmd/cover/profile.go:106: Norm  float64 // count normalized to 0-1\nto a value in [0..1]\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode111\ncmd/cover/profile.go:111: // Find maximum counts.\ns/counts/count/ ?\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode135\ncmd/cover/profile.go:135: line, col := 1, 2\nwhy is col 2? comment?",
			"disapproval": false,
			"date": "2013-08-07 23:25:29.161740",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-08 01:10:46.035370",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/func.go\nFile cmd/cover/func.go (right):\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/func.go#newcode70\ncmd/cover/func.go:70: _ = profile\ndregg?\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/func.go#newcode99\ncmd/cover/func.go:99: // FuncExtent describes a function's location by file and position.\ns/location/source extent/ ?\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/func.go#newcode135\ncmd/cover/func.go:135: func (f *FuncExtent) coverage(profile *Profile) (num int64, den int64) {\n(num, den int64)\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/func.go#newcode155\ncmd/cover/func.go:155: total = 1\n// avoid 0 denominator\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/profile.go\nFile cmd/cover/profile.go (right):\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/profile.go#newcode94\ncmd/cover/profile.go:94: i, err := strconv.ParseInt(s, 10, 64)\nuse Atoi? then you don't need the conversion below; also it will do the right think if the number is too large\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/profile.go#newcode130\ncmd/cover/profile.go:130: b.Norm = 0.8 // \"set\" mode; use cov8\nI don't understand this comment",
			"disapproval": false,
			"date": "2013-08-08 22:57:37.678000",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "old comments not mailed.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go\nFile cmd/cover/func.go (right):\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode21\ncmd/cover/func.go:21: func funcOutput(profile, output string) error {\nOn 2013/08/07 23:25:29, gri wrote:\n> missing documentation\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode55\ncmd/cover/func.go:55: f, err := findFuncs(file)\nOn 2013/08/07 23:25:29, gri wrote:\n> s/f/list/ or perhaps flist? or funcs?\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode75\ncmd/cover/func.go:75: fs := token.NewFileSet()\nOn 2013/08/07 23:25:29, gri wrote:\n> s/fs/fset/\n> \n> more commonly used name\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode85\ncmd/cover/func.go:85: parsedFile, err := parser.ParseFile(fs, name, bytes.NewReader(data), 0)\nOn 2013/08/07 23:25:29, gri wrote:\n> parser.ParseFile accepts a filename and a nil file and then will automatically\n> read from that file - no need for the prior work here\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode99\ncmd/cover/func.go:99: type Function struct {\nOn 2013/08/07 23:25:29, gri wrote:\n> s/Function/FuncExtent/ ? \n> \n> it's not really a function anymore\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode101\ncmd/cover/func.go:101: startLine int\nOn 2013/08/07 23:25:29, gri wrote:\n> Do you really need the line and column? Couldn't it just use the actual\n> token.Pos? They are trivially convered to a lines/columns upon demand. Also,\n> sorting is much simpler, can just use < .\n\nline and column are what come out of the coverage profile, and we need to compare with them. this is easy enough.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/func.go#newcode138\ncmd/cover/func.go:138: // The blocks are sorted, so we can quit as soon as we're done.\nOn 2013/08/07 23:25:29, gri wrote:\n> sounds like a good idea to quite when one is done - rephrase?\n\nof course we \"quite\" when we're done. but ok, rephrased\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go\nFile cmd/cover/profile.go (right):\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode87\ncmd/cover/profile.go:87: return b[i].StartLine < b[j].StartLine || b[i].StartLine == b[j].StartLine && b[i].StartCol < b[j].StartCol\nOn 2013/08/07 23:25:29, gri wrote:\n> bi, bj := &b[i], &b[j] and then save some slice index checks?\n\ni didn't write any of this, it's just moving into a file separate from the HTML code so it can be shared.\nbut i'm happy to clean it up.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode87\ncmd/cover/profile.go:87: return b[i].StartLine < b[j].StartLine || b[i].StartLine == b[j].StartLine && b[i].StartCol < b[j].StartCol\nOn 2013/08/07 23:25:29, gri wrote:\n> bi, bj := &b[i], &b[j] and then save some slice index checks?\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode90\ncmd/cover/profile.go:90: var lineRe = regexp.MustCompile(`^(.+):([0-9]+).([0-9]+),([0-9]+).([0-9]+) ([0-9]+) ([0-9]+)$`)\nOn 2013/08/07 23:25:29, gri wrote:\n> s/lineRe/lineRx/ ?\n\nRe is the convention i've used in the past.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode93\ncmd/cover/profile.go:93: i, err := strconv.ParseInt(s, 10, 64)\nOn 2013/08/07 23:25:29, gri wrote:\n> use Atoi since the result is a int\n\nit doesn't mean the same thing. Atoi treats 032 as octal, for instance. not that we expect leading zeroes, but i think it's fine as is.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode100\ncmd/cover/profile.go:100: // Token represents the position in a source file of an opening or closing\nOn 2013/08/07 23:25:29, gri wrote:\n> Token seems like a bad name here.\n> \n> TagInfo? Tag? TagPos? PosInfo?\n\ni agree it's slightly odd but your suggestions don't seem particularly better. plus it's not just position, it's also the count information.\n\ni'm going with Boundary, since it's a boundary of a block.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode103\ncmd/cover/profile.go:103: Pos   int\nOn 2013/08/07 23:25:29, gri wrote:\n> Offset ? should have a comment\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode106\ncmd/cover/profile.go:106: Norm  float64 // count normalized to 0-1\nOn 2013/08/07 23:25:29, gri wrote:\n> to a value in [0..1]\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode111\ncmd/cover/profile.go:111: // Find maximum counts.\nOn 2013/08/07 23:25:29, gri wrote:\n> s/counts/count/ ?\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/1/cmd/cover/profile.go#newcode135\ncmd/cover/profile.go:135: line, col := 1, 2\nOn 2013/08/07 23:25:29, gri wrote:\n> why is col 2? comment?\n\nI don't know. Made a TODO and will discuss with adg.",
			"disapproval": false,
			"date": "2013-08-09 02:46:09.814720",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12454043/diff/9001/cmd/cover/func.go\nFile cmd/cover/func.go (right):\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/func.go#newcode70\ncmd/cover/func.go:70: _ = profile\nOn 2013/08/08 22:57:37, gri wrote:\n> dregg?\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/func.go#newcode99\ncmd/cover/func.go:99: // FuncExtent describes a function's location by file and position.\nOn 2013/08/08 22:57:37, gri wrote:\n> s/location/source extent/ ?\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/func.go#newcode135\ncmd/cover/func.go:135: func (f *FuncExtent) coverage(profile *Profile) (num int64, den int64) {\nOn 2013/08/08 22:57:37, gri wrote:\n> (num, den int64)\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/func.go#newcode155\ncmd/cover/func.go:155: total = 1\nOn 2013/08/08 22:57:37, gri wrote:\n> // avoid 0 denominator\n\nDone.\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/profile.go\nFile cmd/cover/profile.go (right):\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/profile.go#newcode94\ncmd/cover/profile.go:94: i, err := strconv.ParseInt(s, 10, 64)\nOn 2013/08/08 22:57:37, gri wrote:\n> use Atoi? then you don't need the conversion below; also it will do the right\n> think if the number is too large\n\ndone another way. Atoi isn't right.\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/profile.go#newcode130\ncmd/cover/profile.go:130: b.Norm = 0.8 // \"set\" mode; use cov8\nOn 2013/08/08 22:57:37, gri wrote:\n> I don't understand this comment\n\nDone.",
			"disapproval": false,
			"date": "2013-08-09 02:54:32.371760",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c07589d25aa3&repo=tools ***\n\ngo.tools/cmd/cover: add -func mode to print per-function coverage\n\nfmt/format.go:\tinit\t\t\t100.0%\nfmt/format.go:\tclearflags\t\t100.0%\nfmt/format.go:\tinit\t\t\t100.0%\nfmt/format.go:\tcomputePadding\t\t84.6%\nfmt/format.go:\twritePadding\t\t83.3%\n...\ntotal:\t\t(statements)\t\t91.3%\n\nFixes issue 5985.\n\nR=golang-dev, dave, gri\nCC=golang-dev\nhttps://codereview.appspot.com/12454043",
			"disapproval": false,
			"date": "2013-08-09 02:55:30.208140",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Excellent. Thanks Rob. \r\n\r\nOn 09/08/2013, at 12:55, r@golang.org wrote:\r\n\r\n> *** Submitted as\r\n> https://code.google.com/p/go/source/detail?r=c07589d25aa3&repo=tools ***\r\n> \r\n> go.tools/cmd/cover: add -func mode to print per-function coverage\r\n> \r\n> fmt/format.go:    init            100.0%\r\n> fmt/format.go:    clearflags        100.0%\r\n> fmt/format.go:    init            100.0%\r\n> fmt/format.go:    computePadding        84.6%\r\n> fmt/format.go:    writePadding        83.3%\r\n> ...\r\n> total:        (statements)        91.3%\r\n> \r\n> Fixes issue 5985.\r\n> \r\n> R=golang-dev, dave, gri\r\n> CC=golang-dev\r\n> https://codereview.appspot.com/12454043\r\n> \r\n> \r\n> https://codereview.appspot.com/12454043/\r\n",
			"disapproval": false,
			"date": "2013-08-09 03:02:27.563130",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12454043/diff/9001/cmd/cover/profile.go\nFile cmd/cover/profile.go (right):\n\nhttps://codereview.appspot.com/12454043/diff/9001/cmd/cover/profile.go#newcode94\ncmd/cover/profile.go:94: i, err := strconv.ParseInt(s, 10, 64)\nOn 2013/08/09 02:54:32, r wrote:\n> On 2013/08/08 22:57:37, gri wrote:\n> > use Atoi? then you don't need the conversion below; also it will do the right\n> > think if the number is too large\n> \n> done another way. Atoi isn't right.\n\nfyi, from the source:\n\nfunc Atoi(s string) (i int, err error) {\n   err := ParseInt(s, 10, 0)\n   return int(i64), err\n}\n\nlooks exactly right to me.",
			"disapproval": false,
			"date": "2013-08-09 03:19:08.176300",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fine.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-08-09 03:37:27.378070",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 12454043: go.tools/cmd/cover: add -func mode to print per-functio...",
	"created": "2013-08-05 03:35:09.078150",
	"patchsets": [
		1,
		9001,
		19001
	],
	"modified": "2013-08-09 03:37:27.509790",
	"closed": true,
	"issue": 12454043
}