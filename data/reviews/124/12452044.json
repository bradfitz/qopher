{
	"description": "go/build: refactor filename and build tag matching.\n\nThis exports a new method on *Context called Match, which other\npackages can use to handle source files in a way compatible with go/build.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org",
		"nightlyone@googlemail.com",
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-08-05 04:03:13.674620",
			"approval": false
		},
		{
			"sender": "nightlyone@googlemail.com",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"nightlyone@googlemail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Match makes quite some assumptions. Sure you would like to support this kind of API in the long term?\n\nhttps://codereview.appspot.com/12452044/diff/7001/src/pkg/go/build/build.go\nFile src/pkg/go/build/build.go (right):\n\nhttps://codereview.appspot.com/12452044/diff/7001/src/pkg/go/build/build.go#newcode771\nsrc/pkg/go/build/build.go:771: func (ctxt *Context) Match(filename string, contents []byte) error {\nThis function makes quite some assumptions on the content of contents.\n\nCould you hide the caching logic in Context?\nMaybe Context.openFile could be extended for that?",
			"disapproval": false,
			"date": "2013-08-05 08:52:28.372520",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It's not just for caching, but for any use where the file is not accessible\r\non the local filesystem. Replacing OpenFile on the context would work, but\r\nis a hassle when you already have the []byte for it.\r\n",
			"disapproval": false,
			"date": "2013-08-05 09:49:35.894490",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"nightlyone@googlemail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "How do you plan to use this?",
			"disapproval": false,
			"date": "2013-08-05 20:12:22.389920",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 6 August 2013 06:12,  <rsc@golang.org> wrote:\r\n\r\n> How do you plan to use this?\r\n\r\n- App Engine tools can use this.\r\n- There's a bunch of tests (e.g. in go.tools) that have incomplete\r\nreimplementations of this.\r\n- Inside Google we have a couple of copies of this code, so I can\r\njettison those copies.\r\n- In general, any program could use this to use the go tool's\r\nsemantics to subselect source code (e.g. godoc).\r\n",
			"disapproval": false,
			"date": "2013-08-06 00:24:38.038270",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "In addition, 3rd party (build) tools would be able to use the same\r\nlogic to filter source files by GOOS/GOARCH/build tags.\r\n\r\nOn Tue, Aug 6, 2013 at 10:24 AM, David Symonds <dsymonds@golang.org> wrote:\r\n> On 6 August 2013 06:12,  <rsc@golang.org> wrote:\r\n>\r\n>> How do you plan to use this?\r\n>\r\n> - App Engine tools can use this.\r\n> - There's a bunch of tests (e.g. in go.tools) that have incomplete\r\n> reimplementations of this.\r\n> - Inside Google we have a couple of copies of this code, so I can\r\n> jettison those copies.\r\n> - In general, any program could use this to use the go tool's\r\n> semantics to subselect source code (e.g. godoc).\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-06 00:26:52.967730",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping. I'd like to know whether we can move forward on something like\r\nthis. I'd really like it to make go 1.2.\r\n",
			"disapproval": false,
			"date": "2013-08-12 02:00:14.278500",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm not thrilled with the API. It seems too swiss-army-knife, but other\r\nways to cut it up seem clunky in other ways. I don't think we'll have time\r\nto settle on the API before I leave, but we can figure it out when I'm back\r\nin early September.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-08-16 05:47:30.217280",
			"approval": false
		}
	],
	"owner_email": "dsymonds@golang.org",
	"private": false,
	"base_url": "",
	"owner": "dsymonds",
	"subject": "code review 12452044: go/build: refactor filename and build tag matching.",
	"created": "2013-08-05 03:56:27.286360",
	"patchsets": [
		1,
		2,
		3001,
		7001,
		14001
	],
	"modified": "2013-08-16 05:47:30.553380",
	"closed": false,
	"issue": 12452044
}