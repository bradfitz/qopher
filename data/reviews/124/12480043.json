{
	"description": "database/sql: doc clarifications on Rows.Close and Err",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"nigeltao@golang.org"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-08-05 20:57:14.016840",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12480043/diff/6001/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttps://codereview.appspot.com/12480043/diff/6001/src/pkg/database/sql/sql.go#newcode1377\nsrc/pkg/database/sql/sql.go:1377: // end is encountered, the Rows are closed automatically. Close\nWhat does \"the end is encountered\" mean exactly? Is it the same as \"I called Next and it returned false\"? Or do I also need to check the return value of Err?\n\nLooking at the source code for Rows.Next, if lasterr is non-nil but also non-EOF then Next will return false but Close will not be implicitly called. Is that intentional? Does the example code that says\n\nfor rows.Next()\n  etc\n}\nerr = rows.Err() // get any error encountered during iteration\n\nneed to add:\n\nif err != nil {\n  rows.Close()\n}",
			"disapproval": false,
			"date": "2013-08-05 23:32:46.882030",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ping.",
			"disapproval": false,
			"date": "2013-08-07 00:41:20.011660",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I didn't know the answer off-hand.\r\n\r\nI don't think it's defined.\r\n\r\nDo you think it should be?  If so, how?\r\n\r\nI don't think I want users to have to call Close if there's an error.\r\n\r\nI think if rows.Next() ever returns false (for EOF or other reason), rows\r\nshould be automatically closed.  I don't know whether that's the case\r\ntoday.  You want to check/fix/document?\r\n\r\n\r\n\r\n\r\nOn Tue, Aug 6, 2013 at 5:41 PM, <nigeltao@golang.org> wrote:\r\n\r\n> Ping.\r\n>\r\n> https://codereview.appspot.**com/12480043/<https://codereview.appspot.com/12480043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-07 00:54:17.794480",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Aug 7, 2013 at 10:54 AM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> I think if rows.Next() ever returns false (for EOF or other reason), rows\r\n> should be automatically closed.  I don't know whether that's the case today.\r\n> You want to check/fix/document?\r\n\r\nThat's what I expected too, but that's not what currently happens.\r\nRows.Next ends with:\r\n\r\nrs.lasterr = rs.rowsi.Next(rs.lastcols)\r\nif rs.lasterr == io.EOF {\r\n  rs.Close()\r\n}\r\nreturn rs.lasterr == nil\r\n\r\nSo rs.Close might not be called even if Rows returns false. The patch\r\nmight be as simple as s/== io.EOF/!= nil/ but I don't know if this\r\nwill break anything. You know the database/sql package better than I\r\ndo, and you already have this CL open. Can I punt this back to you?\r\n",
			"disapproval": false,
			"date": "2013-08-07 01:53:05.452650",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Aug 7, 2013 at 11:53 AM, Nigel Tao <nigeltao@golang.org> wrote:\r\n> rs.lasterr = rs.rowsi.Next(rs.lastcols)\r\n> if rs.lasterr == io.EOF {\r\n>   rs.Close()\r\n> }\r\n> return rs.lasterr == nil\r\n>\r\n> So rs.Close might not be called even if Rows returns false.\r\n\r\nI meant:\r\nSo rs.Close might not be called even if Next returns false\r\n",
			"disapproval": false,
			"date": "2013-08-07 01:54:53.578480",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ping.",
			"disapproval": false,
			"date": "2013-08-12 01:37:56.208330",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Pleas review https://codereview.appspot.com/12677050 instead.",
			"disapproval": false,
			"date": "2013-08-12 07:05:16.986530",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 12480043: database/sql: doc clarifications on Rows.Close and Err",
	"created": "2013-08-05 20:57:02.636170",
	"patchsets": [
		1,
		3001,
		6001
	],
	"modified": "2013-08-12 07:05:17.333670",
	"closed": false,
	"issue": 12480043
}