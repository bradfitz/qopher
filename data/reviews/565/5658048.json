{
	"description": "testing: let runtime catch the panic.\nIt's not as pretty, but it deletes some irrelevant information from the\nprintout and avoids a dependency.\nIt also means the test binary will stop if a test panics. That's a feature,\nnot a bug.\nAny output printed by the test appears before the panic traceback.\n\nbefore:\n\n--- FAIL: TestPanic (0.00 seconds)\n        fmt_test.go:19: HI\n        testing.go:257: runtime error: index out of range\n                /Users/r/go/src/pkg/testing/testing.go:257 (0x23998)\n                        _func_003: t.Logf(\"%s\\n%s\", err, debug.Stack())\n                /Users/r/go/src/pkg/runtime/proc.c:1388 (0x10d2d)\n                        panic: reflect\u00b7call(d->fn, d->args, d->siz);\n                /Users/r/go/src/pkg/runtime/runtime.c:128 (0x119b0)\n                        panicstring: runtime\u00b7panic(err);\n                /Users/r/go/src/pkg/runtime/runtime.c:85 (0x11857)\n                        panicindex: runtime\u00b7panicstring(\"index out of range\");\n                /Users/r/go/src/pkg/fmt/fmt_test.go:21 (0x23d72)\n                        TestPanic: a[10]=1\n                /Users/r/go/src/pkg/testing/testing.go:264 (0x21b75)\n                        tRunner: test.F(t)\n                /Users/r/go/src/pkg/runtime/proc.c:258 (0xee9e)\n                        goexit: runtime\u00b7goexit(void)\nFAIL\n\nafter:\n\n--- FAIL: TestPanic (0.00 seconds)\n        fmt_test.go:19: HI\npanic: runtime error: index out of range [recovered]\n        panic: (*testing.T) (0xec3b0,0xf8400001c0)\n\ngoroutine 2 [running]:\ntesting._func_003(0x21f5fa8, 0x21f5100, 0x21f5fb8, 0x21f5e88)\n        /Users/r/go/src/pkg/testing/testing.go:259 +0x108\n----- stack segment boundary -----\nfmt_test.TestPanic(0xf8400001c0, 0x27603728)\n        /Users/r/go/src/pkg/fmt/fmt_test.go:21 +0x6b\ntesting.tRunner(0xf8400001c0, 0x18edb8, 0x0, 0x0)\n        /Users/r/go/src/pkg/testing/testing.go:264 +0x6f\ncreated by testing.RunTests\n        /Users/r/go/src/pkg/testing/testing.go:343 +0x76e\n\ngoroutine 1 [chan receive]:\ntesting.RunTests(0x2000, 0x18edb8, 0x2400000024, 0x100000001, 0x200000001, ...)\n        /Users/r/go/src/pkg/testing/testing.go:344 +0x791\ntesting.Main(0x2000, 0x18edb8, 0x2400000024, 0x188a58, 0x800000008, ...)\n        /Users/r/go/src/pkg/testing/testing.go:275 +0x62\nmain.main()\n        /var/folders/++/+++Fn+++6+0++4RjPqRgNE++2Qk/-Tmp-/go-build743922747/fmt/_test/_testmain.go:129 +0x91\nexit status 2",
	"cc": [
		"rsc@golang.org",
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ec23d9778026 ***\n\ntesting: let runtime catch the panic.\nIt's not as pretty, but it deletes some irrelevant information from the\nprintout and avoids a dependency.\nIt also means the test binary will stop if a test panics. That's a feature,\nnot a bug.\nAny output printed by the test appears before the panic traceback.\n\nbefore:\n\n--- FAIL: TestPanic (0.00 seconds)\n        fmt_test.go:19: HI\n        testing.go:257: runtime error: index out of range\n                /Users/r/go/src/pkg/testing/testing.go:257 (0x23998)\n                        _func_003: t.Logf(\"%s\\n%s\", err, debug.Stack())\n                /Users/r/go/src/pkg/runtime/proc.c:1388 (0x10d2d)\n                        panic: reflect\u00b7call(d->fn, d->args, d->siz);\n                /Users/r/go/src/pkg/runtime/runtime.c:128 (0x119b0)\n                        panicstring: runtime\u00b7panic(err);\n                /Users/r/go/src/pkg/runtime/runtime.c:85 (0x11857)\n                        panicindex: runtime\u00b7panicstring(\"index out of range\");\n                /Users/r/go/src/pkg/fmt/fmt_test.go:21 (0x23d72)\n                        TestPanic: a[10]=1\n                /Users/r/go/src/pkg/testing/testing.go:264 (0x21b75)\n                        tRunner: test.F(t)\n                /Users/r/go/src/pkg/runtime/proc.c:258 (0xee9e)\n                        goexit: runtime\u00b7goexit(void)\nFAIL\n\nafter:\n\n--- FAIL: TestPanic (0.00 seconds)\n        fmt_test.go:19: HI\npanic: runtime error: index out of range [recovered]\n        panic: (*testing.T) (0xec3b0,0xf8400001c0)\n\ngoroutine 2 [running]:\ntesting._func_003(0x21f5fa8, 0x21f5100, 0x21f5fb8, 0x21f5e88)\n        /Users/r/go/src/pkg/testing/testing.go:259 +0x108\n----- stack segment boundary -----\nfmt_test.TestPanic(0xf8400001c0, 0x27603728)\n        /Users/r/go/src/pkg/fmt/fmt_test.go:21 +0x6b\ntesting.tRunner(0xf8400001c0, 0x18edb8, 0x0, 0x0)\n        /Users/r/go/src/pkg/testing/testing.go:264 +0x6f\ncreated by testing.RunTests\n        /Users/r/go/src/pkg/testing/testing.go:343 +0x76e\n\ngoroutine 1 [chan receive]:\ntesting.RunTests(0x2000, 0x18edb8, 0x2400000024, 0x100000001, 0x200000001, ...)\n        /Users/r/go/src/pkg/testing/testing.go:344 +0x791\ntesting.Main(0x2000, 0x18edb8, 0x2400000024, 0x188a58, 0x800000008, ...)\n        /Users/r/go/src/pkg/testing/testing.go:275 +0x62\nmain.main()\n        /var/folders/++/+++Fn+++6+0++4RjPqRgNE++2Qk/-Tmp-/go-build743922747/fmt/_test/_testmain.go:129 +0x91\nexit status 2\n\nR=rsc, dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/5658048",
			"disapproval": false,
			"date": "2012-02-14 03:53:37.515321",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-14 03:47:12.148843",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nwith rsc's change.\n",
			"disapproval": false,
			"date": "2012-02-14 03:52:29.340397",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5658048/diff/1/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttp://codereview.appspot.com/5658048/diff/1/src/pkg/testing/testing.go#newcode254\nsrc/pkg/testing/testing.go:254: panic(t)\npanic(err)",
			"disapproval": false,
			"date": "2012-02-14 03:51:21.432472",
			"approval": true
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5658048: testing: let runtime catch the panic.",
	"created": "2012-02-14 03:47:05.535784",
	"patchsets": [
		1,
		1006
	],
	"modified": "2012-02-14 03:53:39.948550",
	"closed": true,
	"issue": 5658048
}