{
	"description": "gc: optimize interface ==, !=\n\nIf the values being compared have different concrete types,\nthen they're clearly unequal without needing to invoke the\nactual interface compare routine.  This speeds tests for\nspecific values, like if err == io.EOF, by about 3x.\n\nbenchmark                  old ns/op    new ns/op    delta\nBenchmarkIfaceCmp100             843          287  -65.95%\nBenchmarkIfaceCmpNil100          184          182   -1.09%\n\nFixes issue 2591.",
	"cc": [
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"dave@cheney.net",
		"ken@google.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-11 05:19:22.478455",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1b396c3b8f4a ***\n\ngc: optimize interface ==, !=\n\nIf the values being compared have different concrete types,\nthen they're clearly unequal without needing to invoke the\nactual interface compare routine.  This speeds tests for\nspecific values, like if err == io.EOF, by about 3x.\n\nbenchmark                  old ns/op    new ns/op    delta\nBenchmarkIfaceCmp100             843          287  -65.95%\nBenchmarkIfaceCmpNil100          184          182   -1.09%\n\nFixes issue 2591.\n\nR=ken2\nCC=golang-dev\nhttp://codereview.appspot.com/5651073",
			"disapproval": false,
			"date": "2012-02-11 05:19:28.921135",
			"approval": false
		},
		{
			"sender": "ken@google.com",
			"recipients": [
				"rsc@golang.org",
				"dave@cheney.net",
				"ken@google.com",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "lgtm",
			"disapproval": false,
			"date": "2012-02-11 05:34:14.554084",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Nice catch!\n\nOn Sat, Feb 11, 2012 at 4:19 PM,  <rsc@golang.org> wrote:\n> Reviewers: ken2,\n>\n> Message:\n> Hello ken2 (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> gc: optimize interface ==, !=\n>\n> If the values being compared have different concrete types,\n> then they're clearly unequal without needing to invoke the\n> actual interface compare routine. \u00a0This speeds tests for\n> specific values, like if err == io.EOF, by about 3x.\n>\n> benchmark \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0old ns/op \u00a0 \u00a0new ns/op \u00a0 \u00a0delta\n> BenchmarkIfaceCmp100 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 843 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0287 \u00a0-65.95%\n> BenchmarkIfaceCmpNil100 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0184 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0182 \u00a0 -1.09%\n>\n> Fixes issue 2591.\n>\n> Please review this at http://codereview.appspot.com/5651073/\n>\n> Affected files:\n> \u00a0M src/cmd/5g/cgen.c\n> \u00a0M src/cmd/5g/gsubr.c\n> \u00a0M src/cmd/6g/cgen.c\n> \u00a0M src/cmd/6g/gsubr.c\n> \u00a0M src/cmd/8g/cgen.c\n> \u00a0M src/cmd/8g/gsubr.c\n> \u00a0M src/cmd/gc/go.h\n> \u00a0M src/cmd/gc/typecheck.c\n> \u00a0M src/cmd/gc/walk.c\n> \u00a0A src/pkg/runtime/runtime_test.go\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-11 05:20:42.242673",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5651073: gc: optimize interface ==, !=",
	"created": "2012-02-11 05:02:28.545362",
	"patchsets": [
		1,
		3,
		13
	],
	"modified": "2012-02-11 05:34:14.674936",
	"closed": true,
	"issue": 5651073
}