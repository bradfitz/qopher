{
	"description": "openpgp: eliminate implicit rand.Reader and time.Now\n\nFixes issue 2501.",
	"cc": [
		"rsc@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://agl%40golang.org@code.google.com/p/go.crypto/",
			"disapproval": false,
			"date": "2012-02-11 19:06:44.077964",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "poke.\n",
			"disapproval": false,
			"date": "2012-02-16 17:41:33.274281",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-02-18 19:00:03.889113",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI don't know why Brad isn't replying; maybe he's not seeing the messages.\nCode looks good to me.",
			"disapproval": false,
			"date": "2012-02-18 20:44:30.406299",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI don't know why I missed this either.\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/keys.go\nFile openpgp/keys.go (right):\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/keys.go#newcode383\nopenpgp/keys.go:383: // config may be nil, in which case sensible default values will be used.\nI try to avoid starting sentences with lowercase identifiers if it's easy enough to rephrase.\n\n\"If config is nil, sensible defaults will be used.\"\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/keys.go#newcode446\nopenpgp/keys.go:446: // config may be nil, in which case sensible default values will be used.\nlikewise\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/keys.go#newcode523\nopenpgp/keys.go:523: // config may be nil, in which case sensible default values will be used.\netc\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/packet/encrypted_key.go\nFile openpgp/packet/encrypted_key.go (right):\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/packet/encrypted_key.go#newcode65\nopenpgp/packet/encrypted_key.go:65: func (e *EncryptedKey) Decrypt(priv *PrivateKey, config *Config) error {\nnilness isn't documented here.  I'd mention it everywhere or just on the type docs, not just some places.",
			"disapproval": false,
			"date": "2012-02-18 23:19:36.704622",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as dd1c2b3e6d73 ***\n\nopenpgp: eliminate implicit rand.Reader and time.Now\n\nFixes issue 2501.\n\nR=rsc, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5653067\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/keys.go\nFile openpgp/keys.go (right):\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/keys.go#newcode383\nopenpgp/keys.go:383: // config may be nil, in which case sensible default values will be used.\nOn 2012/02/18 23:19:38, bradfitz wrote:\n> I try to avoid starting sentences with lowercase identifiers if it's easy enough\n> to rephrase.\n> \n> \"If config is nil, sensible defaults will be used.\"\n\nDone.\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/keys.go#newcode446\nopenpgp/keys.go:446: // config may be nil, in which case sensible default values will be used.\nOn 2012/02/18 23:19:38, bradfitz wrote:\n> likewise\n\n(Done everywhere.)\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/packet/encrypted_key.go\nFile openpgp/packet/encrypted_key.go (right):\n\nhttp://codereview.appspot.com/5653067/diff/3001/openpgp/packet/encrypted_key.go#newcode65\nopenpgp/packet/encrypted_key.go:65: func (e *EncryptedKey) Decrypt(priv *PrivateKey, config *Config) error {\nOn 2012/02/18 23:19:38, bradfitz wrote:\n> nilness isn't documented here.  I'd mention it everywhere or just on the type\n> docs, not just some places.\n\nDone.",
			"disapproval": false,
			"date": "2012-02-20 15:48:25.640629",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 5653067: openpgp: eliminate implicit rand.Reader and time.Now",
	"created": "2012-02-11 19:06:20.534056",
	"patchsets": [
		1,
		1001,
		3001,
		10001
	],
	"modified": "2012-02-20 15:48:26.938589",
	"closed": true,
	"issue": 5653067
}