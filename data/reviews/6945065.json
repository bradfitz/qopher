{
	"description": "encoding/json: don't panic marshaling anonymous non-struct field\n\nAdd a check for this case and don't try to follow the anonymous\ntype's non-existent fields.\n\nFixes issue 4474.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"tkappler@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6945065/diff/4001/src/pkg/encoding/json/encode.go\nFile src/pkg/encoding/json/encode.go (right):\n\nhttps://codereview.appspot.com/6945065/diff/4001/src/pkg/encoding/json/encode.go#newcode621\nsrc/pkg/encoding/json/encode.go:621: if name != \"\" || !sf.Anonymous {\nCan you do\n\n|| sf.Type.Kind() != reflect.Struct\n\nhere?",
			"disapproval": false,
			"date": "2012-12-17 00:37:40.512500",
			"approval": false
		},
		{
			"sender": "tkappler@gmail.com",
			"recipients": [
				"tkappler@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-12-16 15:06:00.392280",
			"approval": false
		},
		{
			"sender": "tkappler@gmail.com",
			"recipients": [
				"tkappler@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/12/17 00:37:40, rsc wrote:\n> https://codereview.appspot.com/6945065/diff/4001/src/pkg/encoding/json/encode.go\n> File src/pkg/encoding/json/encode.go (right):\n> \n> https://codereview.appspot.com/6945065/diff/4001/src/pkg/encoding/json/encode.go#newcode621\n> src/pkg/encoding/json/encode.go:621: if name != \"\" || !sf.Anonymous {\n> Can you do\n> \n> || sf.Type.Kind() != reflect.Struct\n> \n> here?\n\nYep, that works. I like it better because it's one less branch. Also, I forgot to handle tags, which comes now for free.\n\nI just had to move up the code that follows pointers (ft = ft.Elem()) for anonymous fields, because in that case we want to check sf.Type.Elem().Kind() != reflect.Struct.",
			"disapproval": false,
			"date": "2012-12-17 20:48:47.856240",
			"approval": false
		},
		{
			"sender": "tkappler@gmail.com",
			"recipients": [
				"tkappler@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-17 20:45:09.347220",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"tkappler@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-12-22 14:49:24.134710",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It looks like you need to complete a CLA as described at\r\nhttp://golang.org/doc/contribute.html#copyright.\r\n\r\nThanks.\r\n",
			"disapproval": false,
			"date": "2012-12-22 14:54:14.324860",
			"approval": false
		},
		{
			"sender": "tkappler@gmail.com",
			"recipients": [
				"tkappler@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/12/22 14:54:14, rsc wrote:\n> It looks like you need to complete a CLA as described at\n> http://golang.org/doc/contribute.html#copyright.\n\nSubmitted my CLA. Thanks!",
			"disapproval": false,
			"date": "2012-12-26 09:14:57.432870",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"tkappler@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=94f706ea3818 ***\n\nencoding/json: don't panic marshaling anonymous non-struct field\n\nAdd a check for this case and don't try to follow the anonymous\ntype's non-existent fields.\n\nFixes issue 4474.\n\nR=rsc\nCC=golang-dev\nhttps://codereview.appspot.com/6945065\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-02 22:39:48.047400",
			"approval": false
		}
	],
	"owner_email": "tkappler@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "tkappler",
	"subject": "code review 6945065: encoding/json: don't panic marshaling anonymous non-str...",
	"created": "2012-12-16 14:51:35.780190",
	"patchsets": [
		1,
		1002,
		4001,
		7001
	],
	"modified": "2013-01-05 12:29:03.534620",
	"closed": true,
	"issue": 6945065
}