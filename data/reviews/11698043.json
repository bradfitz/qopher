{
	"description": "[release-branch.go1.1] cmd/8g: Make clearfat non-interleaved with pointer calculations.\n\n\u00ab\u00ab\u00ab CL 11383043 / dc24634de6c5\ncmd/8g: Make clearfat non-interleaved with pointer calculations.\n\nclearfat (used to zero initialize structures) will use AX for x86 block ops. If we write to AX while calculating the dest pointer, we will fill the structure with incorrect values.\nSince 64-bit arithmetic uses AX to synthesize a 64-bit register, getting an adress by indexing with 64-bit ops can clobber the register.\n\nFixes issue 5820.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/11383043\n\u00bb\u00bb\u00bb\n\nUpdate issue 5928",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-07-22 23:33:03.285620",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\n\r\nOn Mon, Jul 22, 2013 at 4:33 PM, <adg@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> [release-branch.go1.1] cmd/8g: Make clearfat non-interleaved with\r\n> pointer calculations.\r\n>\r\n> \u00ab\u00ab\u00ab CL 11383043 / dc24634de6c5\r\n> cmd/8g: Make clearfat non-interleaved with pointer calculations.\r\n>\r\n> clearfat (used to zero initialize structures) will use AX for x86 block\r\n> ops. If we write to AX while calculating the dest pointer, we will fill\r\n> the structure with incorrect values.\r\n> Since 64-bit arithmetic uses AX to synthesize a 64-bit register, getting\r\n> an adress by indexing with 64-bit ops can clobber the register.\r\n>\r\n> Fixes issue 5820.\r\n>\r\n> R=golang-dev, rsc\r\n> CC=golang-dev\r\n> https://codereview.appspot.**com/11383043<https://codereview.appspot.com/11383043>\r\n> \u00bb\u00bb\u00bb\r\n>\r\n> Update issue 5928\r\n>\r\n> Please review this at https://codereview.appspot.**com/11698043/<https://codereview.appspot.com/11698043/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/8g/ggen.c\r\n>   A test/fixedbugs/issue5820.go\r\n>\r\n>\r\n> Index: src/cmd/8g/ggen.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/8g/ggen.c\r\n> +++ b/src/cmd/8g/ggen.c\r\n> @@ -78,9 +78,9 @@\r\n>         c = w % 4;      // bytes\r\n>         q = w / 4;      // quads\r\n>\r\n> -       gconreg(AMOVL, 0, D_AX);\r\n>         nodreg(&n1, types[tptr], D_DI);\r\n>         agen(nl, &n1);\r\n> +       gconreg(AMOVL, 0, D_AX);\r\n>\r\n>         if(q >= 4) {\r\n>                 gconreg(AMOVL, q, D_CX);\r\n> Index: test/fixedbugs/issue5820.go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/test/fixedbugs/issue5820.go\r\n> @@ -0,0 +1,18 @@\r\n> +// run\r\n> +\r\n> +// Copyright 2013 The Go Authors.  All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +// issue 5820: register clobber when clearfat and 64 bit arithmetic is\r\n> interleaved.\r\n> +\r\n> +package main\r\n> +\r\n> +func main() {\r\n> +       array := make([][]int, 2)\r\n> +       index := uint64(1)\r\n> +       array[index] = nil\r\n> +       if array[1] != nil {\r\n> +               panic(\"array[1] != nil\")\r\n> +       }\r\n> +}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-22 23:36:10.140530",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=384bc9cc2853 ***\n\n[release-branch.go1.1] cmd/8g: Make clearfat non-interleaved with pointer calculations.\n\n\u00ab\u00ab\u00ab CL 11383043 / dc24634de6c5\ncmd/8g: Make clearfat non-interleaved with pointer calculations.\n\nclearfat (used to zero initialize structures) will use AX for x86 block ops. If we write to AX while calculating the dest pointer, we will fill the structure with incorrect values.\nSince 64-bit arithmetic uses AX to synthesize a 64-bit register, getting an adress by indexing with 64-bit ops can clobber the register.\n\nFixes issue 5820.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/11383043\n\u00bb\u00bb\u00bb\n\nUpdate issue 5928\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/11698043",
			"disapproval": false,
			"date": "2013-07-22 23:40:47.280610",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 11698043: [release-branch.go1.1] cmd/8g: Make clearfat non-interl...",
	"created": "2013-07-22 23:31:47.894490",
	"patchsets": [
		1,
		3001,
		7001
	],
	"modified": "2013-07-22 23:40:50.656790",
	"closed": true,
	"issue": 11698043
}