{
	"description": "archive/zip: make zip understand os.FileMode.\nFixes implicit dependency on underlying os file modes.",
	"cc": [
		"rsc@golang.org",
		"r@golang.org",
		"adg@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM modulo one tiny edit\nno need to single out team members for generic reviews such as this. just use the group alias.\n\nhttp://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go\nFile src/pkg/archive/zip/struct.go (right):\n\nhttp://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go#newcode117\nsrc/pkg/archive/zip/struct.go:117: // traditional names for unix constants\ns/unix/Unix/",
			"disapproval": false,
			"date": "2011-12-07 19:12:38.527840",
			"approval": true
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Nice, thanks for taking care of this Roger.\n\nhttp://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go\nFile src/pkg/archive/zip/struct.go (right):\n\nhttp://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go#newcode133\nsrc/pkg/archive/zip/struct.go:133: switch {\nThis switch may be built as:\n\nswitch mode&os.ModeType {\ncase os.ModeDevice:\n...\n}\n\nhttp://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go#newcode135\nsrc/pkg/archive/zip/struct.go:135: m = s_IFBLK\nIt's a bit unfortunate that getting and setting the same mode may corrupt the data.",
			"disapproval": false,
			"date": "2011-12-07 20:09:15.931274",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-07 19:08:36.871216",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go\nFile src/pkg/archive/zip/struct.go (right):\n\nhttp://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go#newcode119\nsrc/pkg/archive/zip/struct.go:119: s_IFMT   = 0xf000\nDoes the ZIP format define these?\nI have no idea where they came from.",
			"disapproval": false,
			"date": "2011-12-07 20:11:05.442825",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> src/pkg/archive/zip/struct.go:119: s_IFMT   = 0xf000\n> Does the ZIP format define these?\n> I have no idea where they came from.\n\nIt's unfortunately a bit vague indeed, and the documentation\ndoesn't mention the actual format despite saying that the\ncompatibility of the file mode attributes is \"UNIX\". These\nconstants seem to be generally accepted for that, though.\nE.g. zipinfo seems to agree.",
			"disapproval": false,
			"date": "2011-12-07 21:19:43.252477",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Why are we bothering with these bits at all?\n\nTrue. The useful bits are directory vs. regular, and all of the\npermission bits (including setuid/setgid).\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2011-12-07 23:14:24.141734",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Dec 7, 2011 at 16:19,  <n13m3y3r@gmail.com> wrote:\n> It's unfortunately a bit vague indeed, and the documentation\n> doesn't mention the actual format despite saying that the\n> compatibility of the file mode attributes is \"UNIX\". These\n> constants seem to be generally accepted for that, though.\n> E.g. zipinfo seems to agree.\n\nSo where did the numbers come from?\nYou say that zipinfo agrees, but not what it agrees with.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-07 21:22:02.640611",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> So where did the numbers come from?\n> You say that zipinfo agrees, but not what it agrees with.\n\nI didn't write the code, so I don't know where Roger got the numbers from. What I know is that the documentation doesn't mention the constants, and that a well known application for printing information about zip files uses the same constants.",
			"disapproval": false,
			"date": "2011-12-07 21:37:07.556891",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go\nFile src/pkg/archive/zip/struct.go (right):\n\nhttp://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go#newcode119\nsrc/pkg/archive/zip/struct.go:119: s_IFMT   = 0xf000\nOn 2011/12/07 20:11:05, rsc wrote:\n> Does the ZIP format define these?\n> I have no idea where they came from.\n\ni got them from syscall/zerrors_darwin_amd64.go\nas it happens, but all the other Unix files\nhave the same definitions. presumably they're standard, to some degree.\n\nhttp://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go#newcode133\nsrc/pkg/archive/zip/struct.go:133: switch {\nOn 2011/12/07 20:09:21, niemeyer wrote:\n> This switch may be built as:\n> \n> switch mode&os.ModeType {\n> case os.ModeDevice:\n> ...\n> }\n\nthis isn't quite equivalent if mode has more than one bit set. i thought about doing it your way, but decided that if a file had more than one type mode set, i'd prefer one case to trigger than none. i'm happy to change it if people prefer it the other way though.\n\nhttp://codereview.appspot.com/5440130/diff/1002/src/pkg/archive/zip/struct.go#newcode135\nsrc/pkg/archive/zip/struct.go:135: m = s_IFBLK\nOn 2011/12/07 20:09:21, niemeyer wrote:\n> It's a bit unfortunate that getting and setting the same mode may corrupt the\n> data.\n\nif you're zipping device files, you're corrupting them anyway...",
			"disapproval": false,
			"date": "2011-12-07 22:42:21.976146",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> this isn't quite equivalent if mode has more than one bit set.\n\nAll of the type bits covered in that switch are mutually exclusive. \n\n> if you're zipping device files, you're corrupting them anyway...\n\nThe usefulness of this information is indeed a dubious, but there's still a difference between having missing information and having incorrect information.",
			"disapproval": false,
			"date": "2011-12-07 22:57:52.993797",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Why are we bothering with these bits at all?\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-07 23:09:06.845878",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 7 December 2011 23:14, Gustavo Niemeyer <gustavo@niemeyer.net>\nwrote:>> Why are we bothering with these bits at all?>> True. The\nuseful bits are directory vs. regular, and all of the> permission bits\n(including setuid/setgid).\n\nfollowing that suggestion, i've significantly changed the mode conversion\nsemantics. modes other than the directory mode are ignored,\nand i've added some behaviour based on actual zip implementations.\n\nlooking into the old zip source code was a hoot.\n\nit would be nice to add more zip files generated on\nother platforms to testdata.\n",
			"disapproval": false,
			"date": "2011-12-08 11:40:24.201487",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@golang.org, n13m3y3r@gmail.com, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-08 11:28:57.100490",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, but since rsc had issues before I'll let him submit.\n\nWHAT A WONDERFUL FILE FORMAT ZIP IS. Jeeze.",
			"disapproval": false,
			"date": "2011-12-09 05:08:06.802977",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "lgtm.  yuck.\n",
			"disapproval": false,
			"date": "2011-12-12 20:22:05.308620",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=264fb4d09991 ***\n\narchive/zip: make zip understand os.FileMode.\nFixes implicit dependency on underlying os file modes.\n\nR=rsc, r, n13m3y3r, gustavo, adg\nCC=golang-dev\nhttp://codereview.appspot.com/5440130\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-12-12 20:22:58.923795",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2011-12-13 21:28:38.113743",
			"approval": false
		}
	],
	"owner_email": "rogpeppe@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rog",
	"subject": "code review 5440130: archive/zip: make zip understand os.FileMode.",
	"created": "2011-12-07 19:07:13.320888",
	"patchsets": [
		1,
		2001,
		1002,
		12001,
		15001,
		15002,
		16001
	],
	"modified": "2011-12-13 21:28:38.113743",
	"closed": false,
	"issue": 5440130
}