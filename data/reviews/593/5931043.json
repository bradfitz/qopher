{
	"description": "exp/norm: exposed runeInfo type in API.\nFor completeness, we also expose the Canonical Combining Class of a rune.\nThis does not increase the data size.",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-03-27 12:09:02.920535",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "s/RuneProperties/Properties/\nThe \"Rune\" is redundant.",
			"disapproval": false,
			"date": "2012-04-02 00:35:09.796080",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-02 11:34:27.755453",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go\nFile src/pkg/exp/norm/forminfo.go (right):\n\nhttp://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go#newcode82\nsrc/pkg/exp/norm/forminfo.go:82: // BoundaryBefore returns true if this rune is starts a new segment and\ns/is //\n\nhttp://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go#newcode116\nsrc/pkg/exp/norm/forminfo.go:116: func (r Properties) isInert() bool {\nthe receiver name is i in some, r in others, and p below. should be p everywhere.\n\nhttp://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go#newcode127\nsrc/pkg/exp/norm/forminfo.go:127: n := decomps[i] & 0x3F\ndoes 0x3F deserve a name?\n\nhttp://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go#newcode132\nsrc/pkg/exp/norm/forminfo.go:132: // Size returns the length of UTF-8 encoding of this rune.\ns/of/of the/",
			"disapproval": false,
			"date": "2012-04-10 05:36:06.797526",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go\nFile src/pkg/exp/norm/forminfo.go (right):\n\nhttp://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go#newcode82\nsrc/pkg/exp/norm/forminfo.go:82: // BoundaryBefore returns true if this rune is starts a new segment and\nOn 2012/04/10 05:36:06, r wrote:\n> s/is //\n\nDone.\n\nhttp://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go#newcode116\nsrc/pkg/exp/norm/forminfo.go:116: func (r Properties) isInert() bool {\nOn 2012/04/10 05:36:06, r wrote:\n> the receiver name is i in some, r in others, and p below. should be p\n> everywhere.\n\nDone.\n\nhttp://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go#newcode127\nsrc/pkg/exp/norm/forminfo.go:127: n := decomps[i] & 0x3F\nAlready had one. Actually used it now.\n\nOn 2012/04/10 05:36:06, r wrote:\n> does 0x3F deserve a name?\n\nhttp://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go#newcode132\nsrc/pkg/exp/norm/forminfo.go:132: // Size returns the length of UTF-8 encoding of this rune.\nOn 2012/04/10 05:36:06, r wrote:\n> s/of/of the/\n\nDone.\n\nhttp://codereview.appspot.com/5931043/diff/8009/src/pkg/exp/norm/forminfo.go#newcode132\nsrc/pkg/exp/norm/forminfo.go:132: // Size returns the length of UTF-8 encoding of this rune.\nOn 2012/04/10 05:36:06, r wrote:\n> s/of/of the/\n\nDone.",
			"disapproval": false,
			"date": "2012-04-11 10:38:38.416070",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f61cdaa5294b ***\n\nexp/norm: exposed runeInfo type in API.\nFor completeness, we also expose the Canonical Combining Class of a rune.\nThis does not increase the data size.\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/5931043",
			"disapproval": false,
			"date": "2012-04-11 14:48:01.385369",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 5931043: exp/norm: exposed runeInfo type in API.",
	"created": "2012-03-27 11:26:17.696970",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		8009,
		16002
	],
	"modified": "2012-04-11 14:48:03.078960",
	"closed": true,
	"issue": 5931043
}