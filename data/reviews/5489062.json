{
	"description": "net, syscall: interface address and mask\n\nThis CL makes both InterfaceAddrs and Addrs method on Interface\nreturn IPNet struct for representing interface address and mask\nlike below:\n\ninterface \"lo0\": flags \"up|loopback|multicast\", ifindex 1, mtu 16384\n        interface address \"fe80::1/64\"\n        interface address \"127.0.0.1/8\"\n        interface address \"::1/128\"\n        joined group address \"ff02::fb\"\n        joined group address \"224.0.0.251\"\n        joined group address \"ff02::2:65d0:d71e\"\n        joined group address \"224.0.0.1\"\n \tjoined group address \"ff01::1\"\n        joined group address \"ff02::1\"\n        joined group address \"ff02::1:ff00:1\"\n\nFixes issue 2571.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping\n\nOn 2011/12/18 11:46:59, mikioh wrote:\n> Hello mailto:golang-dev@googlegroups.com, mailto:rsc@golang.org (cc:\n> mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.",
			"disapproval": false,
			"date": "2011-12-20 01:11:41.821083",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Is there a reason to define InterfaceAddr instead of using IPNet directly?\n",
			"disapproval": false,
			"date": "2011-12-16 15:44:53.571357",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It just seems like an extra type to learn about.\n",
			"disapproval": false,
			"date": "2011-12-16 16:27:16.279876",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I did sleep on it but seems like no good reason exists.\n\nUsers will (assert and) wrap IPNet, use own type for something\nwonderful. Looks like there's nothing useful, should be abstracted\nby net package, informations in kernel, platform-dependent stuff.\n\nOkay, PTAL.\n\nOn Sat, Dec 17, 2011 at 1:27 AM, Russ Cox <rsc@golang.org> wrote:\n> It just seems like an extra type to learn about.\n",
			"disapproval": false,
			"date": "2011-12-17 06:54:41.164577",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-16 07:17:10.114472",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-16 08:29:31.431274",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Dec 17, 2011 at 12:44 AM, Russ Cox <rsc@golang.org> wrote:\n\n> Is there a reason to define InterfaceAddr instead of using IPNet directly?\n\nno, does it matter?\n",
			"disapproval": false,
			"date": "2011-12-16 16:25:43.907727",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-16 16:35:42.361238",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-17 06:55:06.708567",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-18 11:46:59.541999",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-21 12:02:52.130543",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5489062/diff/47/src/pkg/net/interface_bsd.go\nFile src/pkg/net/interface_bsd.go (right):\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/interface_bsd.go#newcode22\nsrc/pkg/net/interface_bsd.go:22: err  error\nOn 2011/12/21 04:21:39, rsc wrote:\n> How about using := throughout and not needing the var block?\n\nDone.\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/interface_bsd.go#newcode112\nsrc/pkg/net/interface_bsd.go:112: err  error\nOn 2011/12/21 04:21:39, rsc wrote:\n> Same.\n\nDone.\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/interface_linux.go\nFile src/pkg/net/interface_linux.go (right):\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/interface_linux.go#newcode21\nsrc/pkg/net/interface_linux.go:21: err  error\nOn 2011/12/21 04:21:39, rsc wrote:\n> Same\n\nDone.\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/ip.go\nFile src/pkg/net/ip.go (right):\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/ip.go#newcode453\nsrc/pkg/net/ip.go:453: // Network returns the address's network name, \"route\".\nOn 2011/12/21 04:21:39, rsc wrote:\n> That's a surprising network name.\n> I'm not sure IPNet should implement Addr.\n> Is there actually anything that takes such an address?\n> If not, we have flexibility in the name and I'd call \n> it \"ip+net\" or something more indicative of the actual type.\n\nyup, \"route\" is not good name,  I picked something \nconventional \"route\" from address family AF_ROUTE. \n\"ip+net\" sounds good to me.\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/ip.go#newcode453\nsrc/pkg/net/ip.go:453: // Network returns the address's network name, \"route\".\nOn 2011/12/21 04:21:39, rsc wrote:\n> That's a surprising network name.\n> I'm not sure IPNet should implement Addr.\n> Is there actually anything that takes such an address?\n> If not, we have flexibility in the name and I'd call \n> it \"ip+net\" or something more indicative of the actual type.\n\nDone.",
			"disapproval": false,
			"date": "2011-12-21 08:59:08.204070",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-12-21 12:36:57.994538",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4c20d297d01d ***\n\nnet, syscall: interface address and mask\n\nThis CL makes both InterfaceAddrs and Addrs method on Interface\nreturn IPNet struct for representing interface address and mask\nlike below:\n\ninterface \"lo0\": flags \"up|loopback|multicast\", ifindex 1, mtu 16384\n        interface address \"fe80::1/64\"\n        interface address \"127.0.0.1/8\"\n        interface address \"::1/128\"\n        joined group address \"ff02::fb\"\n        joined group address \"224.0.0.251\"\n        joined group address \"ff02::2:65d0:d71e\"\n        joined group address \"224.0.0.1\"\n \tjoined group address \"ff01::1\"\n        joined group address \"ff02::1\"\n        joined group address \"ff02::1:ff00:1\"\n\nFixes issue 2571.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5489062",
			"disapproval": false,
			"date": "2011-12-21 12:39:06.167942",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5489062/diff/47/src/pkg/net/interface_bsd.go\nFile src/pkg/net/interface_bsd.go (right):\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/interface_bsd.go#newcode22\nsrc/pkg/net/interface_bsd.go:22: err  error\nHow about using := throughout and not needing the var block?\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/interface_bsd.go#newcode112\nsrc/pkg/net/interface_bsd.go:112: err  error\nSame.\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/interface_linux.go\nFile src/pkg/net/interface_linux.go (right):\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/interface_linux.go#newcode21\nsrc/pkg/net/interface_linux.go:21: err  error\nSame\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/ip.go\nFile src/pkg/net/ip.go (right):\n\nhttp://codereview.appspot.com/5489062/diff/47/src/pkg/net/ip.go#newcode453\nsrc/pkg/net/ip.go:453: // Network returns the address's network name, \"route\".\nThat's a surprising network name.\nI'm not sure IPNet should implement Addr.\nIs there actually anything that takes such an address?\nIf not, we have flexibility in the name and I'd call \nit \"ip+net\" or something more indicative of the actual type.",
			"disapproval": false,
			"date": "2011-12-21 04:21:39.302202",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-21 08:58:35.293094",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 5489062: net, syscall: interface address and mask",
	"created": "2011-12-16 03:43:46.392162",
	"patchsets": [
		6014,
		7012,
		1016,
		6015,
		6033,
		44,
		47,
		11007,
		14001,
		12012
	],
	"modified": "2011-12-21 14:59:52.876446",
	"closed": true,
	"issue": 5489062
}