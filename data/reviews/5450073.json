{
	"description": "gzip: Convert between Latin-1 and Unicode\n\nI realize I didn't send the tests in last time.  Anyway, I added\na test that knows too much about the package's internal structure,\nand I'm not sure whether it's the right thing to do.\n\nVadik.",
	"cc": [
		"bradfitz@golang.org",
		"rsc@golang.org",
		"go.peter.90@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"unixdj@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5450073/diff/2001/src/pkg/compress/gzip/gunzip.go\nFile src/pkg/compress/gzip/gunzip.go (right):\n\nhttp://codereview.appspot.com/5450073/diff/2001/src/pkg/compress/gzip/gunzip.go#newcode111\nsrc/pkg/compress/gzip/gunzip.go:111: s += string(v)\nrepeatedly appending to and replacing a string like this is not cheap",
			"disapproval": false,
			"date": "2011-12-02 21:37:35.682461",
			"approval": false
		},
		{
			"sender": "unixdj@gmail.com",
			"recipients": [
				"unixdj@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2011/12/02 21:45:48, rsc wrote:\n> Thanks for looking into fixing this.\n> \n> A better conversion strategy would be to first check\n> whether there are any non-ASCII characters in the\n> string before bothering to do a conversion.  Then, if\n> there are any, an easy way to do the conversion\n> is to make a []rune of the same length as the string,\n> copy each byte in as a rune, and then convert the []rune\n> back to string using a conversion: string(runes).\n> \n> Also, if we fix the code but don't add a test that it's\n> fixed, it will inevitably get broken again, so please\n> add a test of both new pieces of code.\n> \n> Thanks.\n> Russ\n\nThanks for the explanation, will do.\n\nVadik.",
			"disapproval": false,
			"date": "2011-12-02 23:40:29.426554",
			"approval": false
		},
		{
			"sender": "go.peter.90@gmail.com",
			"recipients": [
				"unixdj@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "For example,\n\nfunc (z *Decompressor) readString() (string, error) {\n\t// GZIP (RFC 1952) specifies that strings are \n\t// NUL-terminated ISO 8859-1 (Latin-1).\n\tfor i := 0; ; {\n\t\tiso, err := z.r.ReadByte()\n\t\tif err != nil {\n\t\t\treturn \"\", err\n\t\t}\n\t\tif iso == 0 {\n\t\t\treturn string(z.buf[0:i]), nil\n\t\t}\n\t\tif i > len(z.buf)-utf8.UTFMax {\n\t\t\treturn \"\", HeaderError\n\t\t}\n\t\tif iso < utf8.RuneSelf {\n\t\t\tz.buf[i] = iso\n\t\t\ti++\n\t\t} else {\n\t\t\ti += utf8.EncodeRune(z.buf[i:], rune(iso))\n\t\t}\n\t}\n\tpanic(\"not reached\")\n}\n\nPeter\n\nOn 2011/12/05 15:37:00, peterGo wrote:\n> I prefer simple, direct, easy-to-read, and reasonably efficient solutions. When\n> I benchmarked your complicated solution, it often took longer, sometimes a lot\n> longer, than both the original code and my solution.\n> \n> Don't do things unnecessarily: loops, allocations, etc. Keep things simple.",
			"disapproval": false,
			"date": "2011-12-05 15:48:52.059527",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for looking into fixing this.\n\nA better conversion strategy would be to first check\nwhether there are any non-ASCII characters in the\nstring before bothering to do a conversion.  Then, if\nthere are any, an easy way to do the conversion\nis to make a []rune of the same length as the string,\ncopy each byte in as a rune, and then convert the []rune\nback to string using a conversion: string(runes).\n\nAlso, if we fix the code but don't add a test that it's\nfixed, it will inevitably get broken again, so please\nadd a test of both new pieces of code.\n\nThanks.\nRuss\n",
			"disapproval": false,
			"date": "2011-12-02 21:45:48.532627",
			"approval": false
		},
		{
			"sender": "unixdj@gmail.com",
			"recipients": [
				"unixdj@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-02 20:36:23.566623",
			"approval": false
		},
		{
			"sender": "unixdj@gmail.com",
			"recipients": [
				"unixdj@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2011/12/03 00:26:52, vadik wrote:\n> Hello mailto:golang-dev@googlegroups.com, mailto:bradfitz@golang.org, mailto:rsc@golang.org (cc:\n> mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nI'm quite new to hg, so forgive me for sending extra mail.\n\nIn the latest patch, I check whether conversion is needed and use []rune.  I changed the test suite to send some Latin-1 characters in the comment field -- should I make more extensive tests (e.g., for failing when we have runes >0xff)?\n\nVadik.",
			"disapproval": false,
			"date": "2011-12-03 00:29:43.721314",
			"approval": false
		},
		{
			"sender": "go.peter.90@gmail.com",
			"recipients": [
				"unixdj@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I prefer simple, direct, easy-to-read, and reasonably efficient solutions. When I benchmarked your complicated solution, it often took longer, sometimes a lot longer, than both the original code and my solution.\n\nDon't do things unnecessarily: loops, allocations, etc. Keep things simple.",
			"disapproval": false,
			"date": "2011-12-05 15:37:00.940806",
			"approval": false
		},
		{
			"sender": "unixdj@gmail.com",
			"recipients": [
				"unixdj@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-03 00:26:52.068235",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"unixdj@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5450073/diff/7001/src/pkg/compress/gzip/gunzip.go\nFile src/pkg/compress/gzip/gunzip.go (right):\n\nhttp://codereview.appspot.com/5450073/diff/7001/src/pkg/compress/gzip/gunzip.go#newcode113\nsrc/pkg/compress/gzip/gunzip.go:113: if needconv {\nThis code is great.  I don't believe you need the whole-hog\nversion that Peter suggested.  However, please do add a test.",
			"disapproval": false,
			"date": "2011-12-07 17:24:11.717698",
			"approval": false
		},
		{
			"sender": "unixdj@gmail.com",
			"recipients": [
				"unixdj@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org, rsc@golang.org, go.peter.90@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-09 11:21:40.500855",
			"approval": false
		},
		{
			"sender": "unixdj@gmail.com",
			"recipients": [
				"unixdj@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org, rsc@golang.org, go.peter.90@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-09 11:25:36.322830",
			"approval": false
		},
		{
			"sender": "unixdj@gmail.com",
			"recipients": [
				"unixdj@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2011/12/09 11:25:36, vadik wrote:\n> Hello mailto:bradfitz@golang.org, mailto:rsc@golang.org, mailto:go.peter.90@gmail.com (cc:\n> mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nI realize I didn't send the tests in last time.  Anyway, I added\na test that knows too much about the package's internal structure,\nand I'm not sure whether it's the right thing to do.\n\nVadik.",
			"disapproval": false,
			"date": "2011-12-09 11:27:41.693192",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-12-14 21:28:43.662469",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"unixdj@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d8bb178f0f19 ***\n\ngzip: Convert between Latin-1 and Unicode\n\nI realize I didn't send the tests in last time.  Anyway, I added\na test that knows too much about the package's internal structure,\nand I'm not sure whether it's the right thing to do.\n\nVadik.\n\nR=bradfitz, rsc, go.peter.90\nCC=golang-dev\nhttp://codereview.appspot.com/5450073\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-12-14 22:17:43.452555",
			"approval": false
		}
	],
	"owner_email": "unixdj@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "vadik",
	"subject": "code review 5450073: gzip: Convert between Latin-1 and Unicode",
	"created": "2011-12-02 20:30:57.040686",
	"patchsets": [
		1,
		2001,
		7001,
		8001,
		8002
	],
	"modified": "2011-12-14 22:17:43.452555",
	"closed": false,
	"issue": 5450073
}