{
	"description": "compress/flate: benchmark some English text, not just the digits of e.\n\nThe testdata/e.txt input is repeated on the longer benchmarks, but the\nlength of that data is less than flate's window size, so the numbers are\nessentially measuring the performance of a trivial compression. A follow-up\nCL will add more data to testdata/e.txt.\n\nSample output on my laptop (linux, amd64):\n\nBenchmarkDecodeDigitsSpeed1e4\t    5000\t    603153 ns/op\t  16.58 MB/s\nBenchmarkDecodeDigitsSpeed1e5\t    1000\t   1465602 ns/op\t  68.23 MB/s\nBenchmarkDecodeDigitsSpeed1e6\t     200\t   8036050 ns/op\t 124.44 MB/s\nBenchmarkDecodeDigitsDefault1e4\t    5000\t    581796 ns/op\t  17.19 MB/s\nBenchmarkDecodeDigitsDefault1e5\t    2000\t    846653 ns/op\t 118.11 MB/s\nBenchmarkDecodeDigitsDefault1e6\t     500\t   3385782 ns/op\t 295.35 MB/s\nBenchmarkDecodeDigitsCompress1e4\t    5000\t    581180 ns/op\t  17.21 MB/s\nBenchmarkDecodeDigitsCompress1e5\t    2000\t    846209 ns/op\t 118.17 MB/s\nBenchmarkDecodeDigitsCompress1e6\t     500\t   3386174 ns/op\t 295.32 MB/s\nBenchmarkDecodeTwainSpeed1e4\t    5000\t    643563 ns/op\t  15.54 MB/s\nBenchmarkDecodeTwainSpeed1e5\t     500\t   5418408 ns/op\t  18.46 MB/s\nBenchmarkDecodeTwainSpeed1e6\t      50\t  52277520 ns/op\t  19.13 MB/s\nBenchmarkDecodeTwainDefault1e4\t    5000\t    583551 ns/op\t  17.14 MB/s\nBenchmarkDecodeTwainDefault1e5\t     500\t   4443428 ns/op\t  22.51 MB/s\nBenchmarkDecodeTwainDefault1e6\t      50\t  41862080 ns/op\t  23.89 MB/s\nBenchmarkDecodeTwainCompress1e4\t    5000\t    583490 ns/op\t  17.14 MB/s\nBenchmarkDecodeTwainCompress1e5\t     500\t   4426356 ns/op\t  22.59 MB/s\nBenchmarkDecodeTwainCompress1e6\t      50\t  41657940 ns/op\t  24.01 MB/s\nBenchmarkEncodeDigitsSpeed1e4\t    2000\t   1230907 ns/op\t   8.12 MB/s\nBenchmarkEncodeDigitsSpeed1e5\t    1000\t   2319129 ns/op\t  43.12 MB/s\nBenchmarkEncodeDigitsSpeed1e6\t     100\t  12378950 ns/op\t  80.78 MB/s\nBenchmarkEncodeDigitsDefault1e4\t    1000\t   1597865 ns/op\t   6.26 MB/s\nBenchmarkEncodeDigitsDefault1e5\t     500\t   3163458 ns/op\t  31.61 MB/s\nBenchmarkEncodeDigitsDefault1e6\t     100\t  18770240 ns/op\t  53.28 MB/s\nBenchmarkEncodeDigitsCompress1e4\t    1000\t   1603461 ns/op\t   6.24 MB/s\nBenchmarkEncodeDigitsCompress1e5\t     500\t   3168766 ns/op\t  31.56 MB/s\nBenchmarkEncodeDigitsCompress1e6\t     100\t  18855830 ns/op\t  53.03 MB/s\nBenchmarkEncodeTwainSpeed1e4\t    1000\t   1338049 ns/op\t   7.47 MB/s\nBenchmarkEncodeTwainSpeed1e5\t     500\t   7341622 ns/op\t  13.62 MB/s\nBenchmarkEncodeTwainSpeed1e6\t      50\t  67484600 ns/op\t  14.82 MB/s\nBenchmarkEncodeTwainDefault1e4\t    1000\t   1778399 ns/op\t   5.62 MB/s\nBenchmarkEncodeTwainDefault1e5\t     100\t  23261810 ns/op\t   4.30 MB/s\nBenchmarkEncodeTwainDefault1e6\t      10\t 243533600 ns/op\t   4.11 MB/s\nBenchmarkEncodeTwainCompress1e4\t    1000\t   1795469 ns/op\t   5.57 MB/s\nBenchmarkEncodeTwainCompress1e5\t      50\t  29447140 ns/op\t   3.40 MB/s\nBenchmarkEncodeTwainCompress1e6\t       5\t 321686800 ns/op\t   3.11 MB/s\nok  \tcompress/flate\t89.246s",
	"cc": [
		"rsc@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6195055/diff/4001/src/pkg/compress/flate/reader_test.go\nFile src/pkg/compress/flate/reader_test.go (right):\n\nhttp://codereview.appspot.com/6195055/diff/4001/src/pkg/compress/flate/reader_test.go#newcode71\nsrc/pkg/compress/flate/reader_test.go:71: speed___ = BestSpeed\nplease drop the ___",
			"disapproval": false,
			"date": "2012-05-08 15:37:14.778675",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-08 00:00:51.857275",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "hey, tom sawyer has a BOM",
			"disapproval": false,
			"date": "2012-05-08 00:03:36.489681",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6195055/diff/4001/src/pkg/compress/flate/reader_test.go\nFile src/pkg/compress/flate/reader_test.go (right):\n\nhttp://codereview.appspot.com/6195055/diff/4001/src/pkg/compress/flate/reader_test.go#newcode71\nsrc/pkg/compress/flate/reader_test.go:71: speed___ = BestSpeed\nOn 2012/05/08 15:37:14, rsc wrote:\n> please drop the ___\n\nDone, although default_ still needs it because default is a keyword.",
			"disapproval": false,
			"date": "2012-05-08 22:43:38.371549",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=081f65ff96a2 ***\n\ncompress/flate: benchmark some English text, not just the digits of e.\n\nThe testdata/e.txt input is repeated on the longer benchmarks, but the\nlength of that data is less than flate's window size, so the numbers are\nessentially measuring the performance of a trivial compression. A follow-up\nCL will add more data to testdata/e.txt.\n\nSample output on my laptop (linux, amd64):\n\nBenchmarkDecodeDigitsSpeed1e4\t    5000\t    603153 ns/op\t  16.58 MB/s\nBenchmarkDecodeDigitsSpeed1e5\t    1000\t   1465602 ns/op\t  68.23 MB/s\nBenchmarkDecodeDigitsSpeed1e6\t     200\t   8036050 ns/op\t 124.44 MB/s\nBenchmarkDecodeDigitsDefault1e4\t    5000\t    581796 ns/op\t  17.19 MB/s\nBenchmarkDecodeDigitsDefault1e5\t    2000\t    846653 ns/op\t 118.11 MB/s\nBenchmarkDecodeDigitsDefault1e6\t     500\t   3385782 ns/op\t 295.35 MB/s\nBenchmarkDecodeDigitsCompress1e4\t    5000\t    581180 ns/op\t  17.21 MB/s\nBenchmarkDecodeDigitsCompress1e5\t    2000\t    846209 ns/op\t 118.17 MB/s\nBenchmarkDecodeDigitsCompress1e6\t     500\t   3386174 ns/op\t 295.32 MB/s\nBenchmarkDecodeTwainSpeed1e4\t    5000\t    643563 ns/op\t  15.54 MB/s\nBenchmarkDecodeTwainSpeed1e5\t     500\t   5418408 ns/op\t  18.46 MB/s\nBenchmarkDecodeTwainSpeed1e6\t      50\t  52277520 ns/op\t  19.13 MB/s\nBenchmarkDecodeTwainDefault1e4\t    5000\t    583551 ns/op\t  17.14 MB/s\nBenchmarkDecodeTwainDefault1e5\t     500\t   4443428 ns/op\t  22.51 MB/s\nBenchmarkDecodeTwainDefault1e6\t      50\t  41862080 ns/op\t  23.89 MB/s\nBenchmarkDecodeTwainCompress1e4\t    5000\t    583490 ns/op\t  17.14 MB/s\nBenchmarkDecodeTwainCompress1e5\t     500\t   4426356 ns/op\t  22.59 MB/s\nBenchmarkDecodeTwainCompress1e6\t      50\t  41657940 ns/op\t  24.01 MB/s\nBenchmarkEncodeDigitsSpeed1e4\t    2000\t   1230907 ns/op\t   8.12 MB/s\nBenchmarkEncodeDigitsSpeed1e5\t    1000\t   2319129 ns/op\t  43.12 MB/s\nBenchmarkEncodeDigitsSpeed1e6\t     100\t  12378950 ns/op\t  80.78 MB/s\nBenchmarkEncodeDigitsDefault1e4\t    1000\t   1597865 ns/op\t   6.26 MB/s\nBenchmarkEncodeDigitsDefault1e5\t     500\t   3163458 ns/op\t  31.61 MB/s\nBenchmarkEncodeDigitsDefault1e6\t     100\t  18770240 ns/op\t  53.28 MB/s\nBenchmarkEncodeDigitsCompress1e4\t    1000\t   1603461 ns/op\t   6.24 MB/s\nBenchmarkEncodeDigitsCompress1e5\t     500\t   3168766 ns/op\t  31.56 MB/s\nBenchmarkEncodeDigitsCompress1e6\t     100\t  18855830 ns/op\t  53.03 MB/s\nBenchmarkEncodeTwainSpeed1e4\t    1000\t   1338049 ns/op\t   7.47 MB/s\nBenchmarkEncodeTwainSpeed1e5\t     500\t   7341622 ns/op\t  13.62 MB/s\nBenchmarkEncodeTwainSpeed1e6\t      50\t  67484600 ns/op\t  14.82 MB/s\nBenchmarkEncodeTwainDefault1e4\t    1000\t   1778399 ns/op\t   5.62 MB/s\nBenchmarkEncodeTwainDefault1e5\t     100\t  23261810 ns/op\t   4.30 MB/s\nBenchmarkEncodeTwainDefault1e6\t      10\t 243533600 ns/op\t   4.11 MB/s\nBenchmarkEncodeTwainCompress1e4\t    1000\t   1795469 ns/op\t   5.57 MB/s\nBenchmarkEncodeTwainCompress1e5\t      50\t  29447140 ns/op\t   3.40 MB/s\nBenchmarkEncodeTwainCompress1e6\t       5\t 321686800 ns/op\t   3.11 MB/s\nok  \tcompress/flate\t89.246s\n\nR=rsc, r\nCC=golang-dev\nhttp://codereview.appspot.com/6195055",
			"disapproval": false,
			"date": "2012-05-08 22:58:21.968463",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6195055: compress/flate: benchmark some English text, not just t...",
	"created": "2012-05-08 00:00:22.053571",
	"patchsets": [
		1,
		1001,
		4001,
		7003
	],
	"modified": "2012-05-08 22:58:25.608708",
	"closed": true,
	"issue": 6195055
}