{
	"description": "cmd/go: fix a couple of bugs in coverage tooling\nMerging a couple of CLs into one, since they collided in my client\nand I'm lazy.\n\n1) Fix up output in \"go test -cover\" case.\nWe need to tell the testing package the name of the package being tested\nand the name of the package being covered. It can then sort out the report.\n\n2) Filter out the _test.go files from coverage processing. We want to measure\nwhat the tests cover, not what's covered in the tests,\nThe coverage for encoding/gob goes from 82.2% to 88.4%.\nThere may be a cleaner way to do this - suggestions welcome - but \u00e7a suffit.\n\nFixes issue 5810.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-08 03:59:25.427360",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10868047/diff/4001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttps://codereview.appspot.com/10868047/diff/4001/src/cmd/go/test.go#newcode915\nsrc/cmd/go/test.go:915: coverWhere := \"\"\nThis computed value needs to be passed through to the testmain.go print statement somehow.\n\ncd $GOROOT/src/pkg/regexp\ngo test -coverpkg strings",
			"disapproval": false,
			"date": "2013-07-08 19:41:37.897340",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-08 22:07:39.861540",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Got it. Now:\r\n\r\n% go test\r\nPASS\r\nok   fmt 0.043s\r\n% go test -cover\r\nPASS\r\ncoverage for fmt: 92.2% of statements\r\nok   fmt 0.044s\r\n% go test -cover fmt\r\nok   fmt 0.043s coverage: 92.2% of statements\r\n% go test -coverpkg strconv fmt\r\nok   fmt 0.043s coverage: 66.4% of statements in strconv\r\n% go test -coverpkg strconv\r\nPASS\r\ncoverage for fmt: 66.4% of statements in strconv\r\nok   fmt 0.044s\r\n%\r\n",
			"disapproval": false,
			"date": "2013-07-08 22:08:25.637970",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-08 22:39:54.674770",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/10868047/diff/12001/src/pkg/testing/cover.go\nFile src/pkg/testing/cover.go (right):\n\nhttps://codereview.appspot.com/10868047/diff/12001/src/pkg/testing/cover.go#newcode92\nsrc/pkg/testing/cover.go:92: fmt.Printf(\"coverage for %s: %.1f%% of statements%s\\n\", testedPackage, 100*float64(active)/float64(total), coveredPackage)\nI wonder if we should s/ for %s//. The test binaries don't otherwise announce the name of the package being tested, and I was confused when I saw it in your transcript next to the \" in xxx\" list. If you just ran fmt.test or 'go test' in src/pkg/fmt, you know what test it is, and similarly the test binary doesn't print \"PASS for fmt\".\n\nIf you do drop the \"for %s\" you'll need to tweak the regexp in cmd/go too.\n\n(go test with a list of packages does add this information in its summary, but that wouldn't change.)",
			"disapproval": false,
			"date": "2013-07-09 23:34:08.110690",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If you do something like\r\n\r\ngo test -coverpkg=strconv fmt\r\n\r\nthe message is\r\n\r\ncoverage for fmt: 66.4% of statements in strconv\r\n\r\nThat's very clear. Dropping the \"for fmt\" would make it\r\n\r\ncoverage: 66.4% of statements in strconv\r\n\r\nwhich is OK in context but a little misleading out of context. I like\r\nthe clarity.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-07-09 23:51:39.070430",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm going to submit as is. It's easy to change this later if we decide to do so.\r\n",
			"disapproval": false,
			"date": "2013-07-09 23:52:24.021650",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=fd0faa19349d ***\n\ncmd/go: fix a couple of bugs in coverage tooling\nMerging a couple of CLs into one, since they collided in my client\nand I'm lazy.\n\n1) Fix up output in \"go test -cover\" case.\nWe need to tell the testing package the name of the package being tested\nand the name of the package being covered. It can then sort out the report.\n\n2) Filter out the _test.go files from coverage processing. We want to measure\nwhat the tests cover, not what's covered in the tests,\nThe coverage for encoding/gob goes from 82.2% to 88.4%.\nThere may be a cleaner way to do this - suggestions welcome - but \u00e7a suffit.\n\nFixes issue 5810.\n\nR=rsc\nCC=golang-dev\nhttps://codereview.appspot.com/10868047",
			"disapproval": false,
			"date": "2013-07-09 23:52:44.575970",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 10868047: cmd/go: fix a couple of bugs in coverage tooling",
	"created": "2013-07-08 03:59:17.321620",
	"patchsets": [
		1,
		4001,
		7001,
		12001,
		20001
	],
	"modified": "2013-07-10 12:29:29.107580",
	"closed": true,
	"issue": 10868047
}