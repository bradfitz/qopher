{
	"description": "Add Error member to yyLexer type (yyError\r\nhas no access to yylex)",
	"cc": [
		"ken@golang.org",
		"ken@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change.",
			"disapproval": false,
			"date": "2010-04-19 16:07:08.016952",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "ping?\n\nOn 19 April 2010 17:07,  <rogpeppe@gmail.com> wrote:\n> Reviewers: ken2,\n>\n> Message:\n> Hello ken2 (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change.\n>\n>\n> Description:\n> Add Error member to yyLexer type (yyError\n> has no access to yylex)\n>\n> Please review this at http://codereview.appspot.com/813047/show\n>\n> Affected files:\n> \u00a0M src/cmd/goyacc/doc.go\n> \u00a0M src/cmd/goyacc/goyacc.go\n> \u00a0M src/cmd/goyacc/units.y\n>\n>\n> Index: src/cmd/goyacc/doc.go\n> ===================================================================\n> --- a/src/cmd/goyacc/doc.go\n> +++ b/src/cmd/goyacc/doc.go\n> @@ -24,10 +24,12 @@\n>\n> \u00a0 \u00a0 \u00a0 \u00a0type yyLexer interface {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Lex(lval *yySymType) int\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Error()\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> \u00a0Lex should return the token identifier, and place other token\n> \u00a0information in lval (which replaces the usual yylval).\n> +Error is equivalent to yyerror in the original yacc.\n>\n> \u00a0Code inside the parser may refer to the variable yylex\n> \u00a0which holds the yyLexer passed to Parse.\n> Index: src/cmd/goyacc/goyacc.go\n> ===================================================================\n> --- a/src/cmd/goyacc/goyacc.go\n> +++ b/src/cmd/goyacc/goyacc.go\n> @@ -3080,6 +3080,7 @@\n>\n> \u00a0type yyLexer interface {\n> \u00a0 \u00a0 \u00a0 \u00a0Lex(lval *yySymType) int\n> + \u00a0 \u00a0 \u00a0 Error(s string)\n> \u00a0}\n>\n> \u00a0const yyFlag = -1000\n> @@ -3162,7 +3163,7 @@\n> \u00a0yystack:\n> \u00a0 \u00a0 \u00a0 \u00a0/* put a state and value onto the stack */\n> \u00a0 \u00a0 \u00a0 \u00a0if yyDebug >= 4 {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Printf(\"char %v in %v\", yyTokname(yychar),\n> yyStatname(yystate))\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Printf(\"char %v in %v\\n\", yyTokname(yychar),\n> yyStatname(yystate))\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> \u00a0 \u00a0 \u00a0 \u00a0yyp++\n> @@ -3228,7 +3229,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0/* error ... attempt to resume parsing */\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0switch Errflag {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0case 0: /* brand new error */\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 yyError(\"syntax error\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 yylex.Error(\"syntax error\")\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0Nerrs++\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if yyDebug >= 1 {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0fmt.Printf(\"%s\", yyStatname(yystate))\n> @@ -3273,7 +3274,7 @@\n>\n> \u00a0 \u00a0 \u00a0 \u00a0/* reduction by production yyn */\n> \u00a0 \u00a0 \u00a0 \u00a0if yyDebug >= 2 {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Printf(\"reduce %v in:\\n\\t%v\", yyn, yyStatname(yystate))\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 fmt.Printf(\"reduce %v in:\\n\\t%v\\n\", yyn,\n> yyStatname(yystate))\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> \u00a0 \u00a0 \u00a0 \u00a0yynt := yyn\n> Index: src/cmd/goyacc/units.y\n> ===================================================================\n> --- a/src/cmd/goyacc/units.y\n> +++ b/src/cmd/goyacc/units.y\n> @@ -215,7 +215,7 @@\n>\n> \u00a0type UnitsLex int\n>\n> -func (l UnitsLex) Lex(yylval *yySymType) int {\n> +func (_ UnitsLex) Lex(yylval *yySymType) int {\n> \u00a0 \u00a0 \u00a0 \u00a0var c, i int\n>\n> \u00a0 \u00a0 \u00a0 \u00a0c = peekrune\n> @@ -280,6 +280,10 @@\n> \u00a0 \u00a0 \u00a0 \u00a0return VAL\n> \u00a0}\n>\n> +func (_ UnitsLex) Error(s string) {\n> + \u00a0 \u00a0 \u00a0 Error(\"syntax error, last name: %v\", sym)\n> +}\n> +\n> \u00a0func main() {\n> \u00a0 \u00a0 \u00a0 \u00a0var file string\n>\n> @@ -384,10 +388,6 @@\n> \u00a0 \u00a0 \u00a0 \u00a0return false\n> \u00a0}\n>\n> -func yyError(s string) {\n> - \u00a0 \u00a0 \u00a0 Error(\"syntax error, last name: %v\", sym)\n> -}\n> -\n> \u00a0func Error(s string, v ...interface{}) {\n> \u00a0 \u00a0 \u00a0 \u00a0fmt.Printf(\"%v: %v\\n\\t\", lineno, line)\n> \u00a0 \u00a0 \u00a0 \u00a0fmt.Printf(s, v)\n>\n>\n>\n",
			"disapproval": false,
			"date": "2010-04-26 21:40:21.209483",
			"approval": false
		},
		{
			"sender": "ken@google.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"ken@golang.org",
				"ken@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nput a string argument in the\ndeclaration of Error method in doc.go.\n\nsorry to hold this up so long",
			"disapproval": false,
			"date": "2010-04-30 01:10:31.339656",
			"approval": true
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 30 April 2010 02:10,  <ken@google.com> wrote:\n> put a string argument in the\n> declaration of Error method in doc.go.\n\ndone.\n\n> sorry to hold this up so long\n\nno problem.\n",
			"disapproval": false,
			"date": "2010-04-30 09:04:29.482634",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"ken@golang.org",
				"ken@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2010-05-15 13:03:32.555999",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"ken@golang.org",
				"ken@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2010/05/15 13:03:32, rog wrote:\n> *** Abandoned ***\n\ni thought this had been submitted, but it hadn't.\nany chance that it could be, please?",
			"disapproval": false,
			"date": "2010-05-17 12:03:16.671472",
			"approval": false
		},
		{
			"sender": "ken@google.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"ken@golang.org",
				"ken@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=9f5547b196a3 ***\n\nAdd Error member to yyLexer type (yyError\nhas no access to yylex)\n\nR=ken2, ken3\nCC=golang-dev\nhttp://codereview.appspot.com/813047\n\nCommitter: Ken Thompson <ken@golang.org>",
			"disapproval": false,
			"date": "2010-05-17 19:23:56.726479",
			"approval": false
		}
	],
	"owner_email": "rogpeppe@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rog",
	"subject": "code review 813047: Add Error member to yyLexer type (yyError",
	"created": "2010-04-18 04:03:26.592232",
	"patchsets": [
		1,
		2001,
		8001
	],
	"modified": "2010-05-17 19:23:56.726479",
	"closed": false,
	"issue": 813047
}