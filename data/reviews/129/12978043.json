{
	"description": "cmd/godoc: bake templates and scripts into godoc binary\n\nAdd godoc/vfs/mapfs package for serving baked files.\n\nFixes issue 6010.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"r@golang.org",
		"arnehormann@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go\nFile cmd/godoc/bake.go (right):\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go#newcode27\ncmd/godoc/bake.go:27: varName = flag.String(\"var\", \"bakedFiles\", \"Map variable name\")\ns/M/m/\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go#newcode42\ncmd/godoc/bake.go:42: os.Stdout.Write(src)\ninstead do\n\nos.Stdout = bufio.NewWriter(os.Stdout)\n\nthen you can use Printf and stream it all nicely. don't forget to flush. \n\n(or create a new variable if you prefer)\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.sh\nFile cmd/godoc/bake.sh (right):\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.sh#newcode9\ncmd/godoc/bake.sh:9: gofmt -w template.go\n\none line is fine\n\ngo run ... | gofmt > template.go",
			"disapproval": false,
			"date": "2013-08-15 06:47:26.920490",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-08-15 06:13:58.878090",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You've seen camlistore's fileembed, right?  It generates embed files that\r\nhave similar line breaks to minimize diff sizes, and uses strings instead\r\nof []byte and gives you an io interface to read it.\r\n\r\n\r\n\r\n\r\nOn Wed, Aug 14, 2013 at 11:13 PM, <adg@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go.**tools <https://code.google.com/p/go.tools>\r\n>\r\n>\r\n> Description:\r\n> cmd/godoc: bake templates and scripts into godoc binary\r\n>\r\n> Add bake utility to cmd/bake.\r\n>\r\n> Fixes issue 6010.\r\n>\r\n> Please review this at https://codereview.appspot.**com/12978043/<https://codereview.appspot.com/12978043/>\r\n>\r\n> Affected files:\r\n>   A cmd/bake/bake.go\r\n>   A cmd/godoc/bake.sh\r\n>   M cmd/godoc/handlers.go\r\n>   A cmd/godoc/template.go\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-15 06:24:07.390950",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "not sure why we need any of this.\n\nhttps://codereview.appspot.com/12978043/diff/1/cmd/bake/bake.go\nFile cmd/bake/bake.go (right):\n\nhttps://codereview.appspot.com/12978043/diff/1/cmd/bake/bake.go#newcode86\ncmd/bake/bake.go:86: // Replace BOM with `+\"\\xEF\\xBB\\xBF\"+`\nthis isn't nearly good enough. you need to worry about lots of other things.\n\ninstead, just make it a byte string and do string(bytestring) if you want a string. avoid the UTF-8 issue altogether.",
			"disapproval": false,
			"date": "2013-08-15 06:26:46.396970",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-15 06:55:33.276450",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 15 August 2013 16:24, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> You've seen camlistore's fileembed, right?  It generates embed files that\r\n> have similar line breaks to minimize diff sizes, and uses strings instead\r\n> of []byte and gives you an io interface to read it.\r\n>\r\n\r\nI'd forgotten about fileembed. But this shouldn't be a go installable tool,\r\nanyway. I've made it simpler still.\r\n",
			"disapproval": false,
			"date": "2013-08-15 06:44:52.355430",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-15 06:42:01.826060",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go\nFile cmd/godoc/bake.go (right):\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go#newcode27\ncmd/godoc/bake.go:27: varName = flag.String(\"var\", \"bakedFiles\", \"Map variable name\")\nOn 2013/08/15 06:47:27, r wrote:\n> s/M/m/\n\nDone.\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.go#newcode42\ncmd/godoc/bake.go:42: os.Stdout.Write(src)\nOn 2013/08/15 06:47:27, r wrote:\n> instead do\n> \n> os.Stdout = bufio.NewWriter(os.Stdout)\n> \n> then you can use Printf and stream it all nicely. don't forget to flush. \n> \n> (or create a new variable if you prefer)\n> \n\nDone.\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.sh\nFile cmd/godoc/bake.sh (right):\n\nhttps://codereview.appspot.com/12978043/diff/7001/cmd/godoc/bake.sh#newcode9\ncmd/godoc/bake.sh:9: gofmt -w template.go\nOn 2013/08/15 06:47:27, r wrote:\n> \n> one line is fine\n> \n> go run ... | gofmt > template.go\n\nDone.",
			"disapproval": false,
			"date": "2013-08-15 06:52:17.198080",
			"approval": false
		},
		{
			"sender": "arnehormann@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"arnehormann@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12978043/diff/14001/cmd/godoc/bake.go\nFile cmd/godoc/bake.go (right):\n\nhttps://codereview.appspot.com/12978043/diff/14001/cmd/godoc/bake.go#newcode13\ncmd/godoc/bake.go:13: // of foo.txt and bar.txt.\ns/foo.txt/foo.html/",
			"disapproval": false,
			"date": "2013-08-15 08:09:10.765440",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i haven't looked at the cl but fwiw\r\n\r\nvar x = `big string`\r\n\r\nwill compile much more efficiently than\r\n\r\nvar x = []byte{lots of hex}\r\n",
			"disapproval": false,
			"date": "2013-08-16 00:45:59.915200",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The engineering level of this makes the work on the garbage collector\r\nseem a mere bagatelle.\r\n\r\nSend a CL if you really care.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-08-16 00:39:26.294270",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "+r\r\n\r\nThe previous version of this tool stored the data as raw strings. Rob asked\r\nme to change it to []byte, and said he wouldn't approve the change\r\notherwise.\r\n\r\nI'm past caring at this point. Please let me know what you two resolve to\r\ndo here.\r\n\r\n\r\nOn 16 August 2013 10:16, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> On Thu, Aug 15, 2013 at 5:11 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n>\r\n>>\r\n>> On 16 August 2013 10:07, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>>\r\n>>> with a string and line breaks in the same place, which makes a small diff\r\n>>\r\n>>\r\n>> I don't understand this.\r\n>>\r\n>\r\n> My diffs look like this:\r\n>\r\n>\r\n> https://camlistore-review.googlesource.com/#/c/360/1/server/camlistored/ui/zembed_search.js.go\r\n>\r\n> Readable.\r\n>\r\n> Yours look like one line of 5 MB of numbers.\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-16 00:19:54.804540",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"arnehormann@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nI forgot about the -templates flag, which is actually pretty handy. So I introduced a mapfs type to serve the embedded data.\n\nhttps://codereview.appspot.com/12978043/diff/14001/cmd/godoc/bake.go\nFile cmd/godoc/bake.go (right):\n\nhttps://codereview.appspot.com/12978043/diff/14001/cmd/godoc/bake.go#newcode13\ncmd/godoc/bake.go:13: // of foo.txt and bar.txt.\nOn 2013/08/15 08:09:11, ahormann wrote:\n> s/foo.txt/foo.html/\n\nDone.",
			"disapproval": false,
			"date": "2013-08-15 23:45:48.184860",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "To address the concerns raised by Brad and Russ I have switched to using\r\nraw strings. bake.go is still much simpler than it was in the first\r\nrevision of this CL.\r\n\r\nAndrew\r\n",
			"disapproval": false,
			"date": "2013-08-16 00:59:15.857540",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"arnehormann@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-16 01:02:01.455940",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 16 August 2013 10:07, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> with a string and line breaks in the same place, which makes a small diff\r\n\r\n\r\nI don't understand this.\r\n",
			"disapproval": false,
			"date": "2013-08-16 00:11:59.809460",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I still don't like the template.go auto-generated file.\r\n\r\nIt will forever produce gigantic diffs too large to email and get angry\r\nwith tools in other ways (hg diff, etc).\r\n\r\nI would really like you to do it Camlistore's fileembed way, with a string\r\nand line breaks in the same place, which makes a small diff.  I don't care\r\nabout fileembed as a tool being goinstallable.  I'm only caring here about\r\nthe look of the auto-generated file.\r\n\r\n\r\n\r\n\r\nOn Wed, Aug 14, 2013 at 11:13 PM, <adg@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go.**tools <https://code.google.com/p/go.tools>\r\n>\r\n>\r\n> Description:\r\n> cmd/godoc: bake templates and scripts into godoc binary\r\n>\r\n> Add bake utility to cmd/bake.\r\n>\r\n> Fixes issue 6010.\r\n>\r\n> Please review this at https://codereview.appspot.**com/12978043/<https://codereview.appspot.com/12978043/>\r\n>\r\n> Affected files:\r\n>   A cmd/bake/bake.go\r\n>   A cmd/godoc/bake.sh\r\n>   M cmd/godoc/handlers.go\r\n>   A cmd/godoc/template.go\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-16 00:07:22.435660",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "That's unfortunate and silly but you play the hand you're dealt.\r\n\r\nAndrew, with apologies I withdraw all my requests to make this the\r\nsimple obvious thing, since that's clearly stupid. Complexity rules.\r\n",
			"disapproval": false,
			"date": "2013-08-16 00:59:39.959980",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "My version doesn't use a raw string and only a subset of ASCII goes through\r\nunescaped.\r\n\r\nI like seeing clean diffs.\r\n\r\nAt least put in newlines in-between your numbers both every so often and\r\nwhenever you see a 0x0a byte, so they're aligned with human-authored html\r\nand css.  That will also produce diffs that fit in emails, even if half the\r\ndiff is gibberish looking.\r\n\r\n\r\n\r\n\r\nOn Thu, Aug 15, 2013 at 5:19 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n\r\n> +r\r\n>\r\n> The previous version of this tool stored the data as raw strings. Rob\r\n> asked me to change it to []byte, and said he wouldn't approve the change\r\n> otherwise.\r\n>\r\n> I'm past caring at this point. Please let me know what you two resolve to\r\n> do here.\r\n>\r\n>\r\n> On 16 August 2013 10:16, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>\r\n>> On Thu, Aug 15, 2013 at 5:11 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n>>\r\n>>>\r\n>>> On 16 August 2013 10:07, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>>>\r\n>>>> with a string and line breaks in the same place, which makes a small\r\n>>>> diff\r\n>>>\r\n>>>\r\n>>> I don't understand this.\r\n>>>\r\n>>\r\n>> My diffs look like this:\r\n>>\r\n>>\r\n>> https://camlistore-review.googlesource.com/#/c/360/1/server/camlistored/ui/zembed_search.js.go\r\n>>\r\n>> Readable.\r\n>>\r\n>> Yours look like one line of 5 MB of numbers.\r\n>>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-16 00:26:07.179160",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"arnehormann@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=2c0ddaee5449&repo=tools ***\n\ncmd/godoc: bake templates and scripts into godoc binary\n\nAdd godoc/vfs/mapfs package for serving baked files.\n\nFixes issue 6010.\n\nR=golang-dev, bradfitz, r, arnehormann, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/12978043",
			"disapproval": false,
			"date": "2013-08-16 01:44:40.192520",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Aug 15, 2013 at 5:11 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n\r\n>\r\n> On 16 August 2013 10:07, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>\r\n>> with a string and line breaks in the same place, which makes a small diff\r\n>\r\n>\r\n> I don't understand this.\r\n>\r\n\r\nMy diffs look like this:\r\n\r\nhttps://camlistore-review.googlesource.com/#/c/360/1/server/camlistored/ui/zembed_search.js.go\r\n\r\nReadable.\r\n\r\nYours look like one line of 5 MB of numbers.\r\n",
			"disapproval": false,
			"date": "2013-08-16 00:17:00.911580",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 12978043: cmd/godoc: bake templates and scripts into godoc binary",
	"created": "2013-08-15 06:13:50.088790",
	"patchsets": [
		1,
		7001,
		14001,
		19001,
		22001,
		24001,
		27001,
		36001,
		39001,
		45001
	],
	"modified": "2013-08-16 01:44:43.751640",
	"closed": true,
	"issue": 12978043
}