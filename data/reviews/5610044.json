{
	"description": "net: fix windows build\n\nIgnore result of setting SO_BROADCAST.\n\nDisable TestSimpleListenMulticastUDP as\nsetIPv4MulticastInterface is not implemented.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"mikioh.mikioh@gmail.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wednesday, 1 February 2012 12:33:49 UTC+11, mikioh wrote:\n>\n> Anyway, IPv6 support on Windows is necessary for Go 1?\n>\n>\n>\nNot my call. Russ?\n\nI do have CL to have ipv6 working on windows. Name lookups do not work yet. \nAnd I do not have time to find environment so I can investigate why.\n\nAlex\n",
			"disapproval": false,
			"date": "2012-02-01 01:40:02.507749",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=6f0cee9fab3a ***\n\nnet: fix windows build\n\nIgnore result of setting SO_BROADCAST.\n\nDisable TestSimpleListenMulticastUDP as\nsetIPv4MulticastInterface is not implemented.\n\nR=golang-dev, bradfitz, mikioh.mikioh\nCC=golang-dev\nhttp://codereview.appspot.com/5610044",
			"disapproval": false,
			"date": "2012-02-01 01:13:53.402808",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for the confirmation.\nI'll try another way (perhaps implement setIPv4MulticastInterface).\n\nAnyway, IPv6 support on Windows is necessary for Go 1?\n\nOn Wed, Feb 1, 2012 at 10:29 AM,  <alex.brainman@gmail.com> wrote:\n> On 2012/02/01 01:17:45, mikioh wrote:\n>\n>> I guess the below patch would work on windows too.\n>\n>\n>\n> No it does not. It still fails as before:\n>\n> $ go test\n> --- FAIL: TestSimpleListenMulticastUDP (0.00 seconds)\n> \u00a0 \u00a0 \u00a0 \u00a0multicast_test.go:115: ListenMulticastUDP failed: not supported\n> by windows\n> FAIL\n> exit status 1\n> FAIL \u00a0 \u00a0net \u00a0 \u00a0 3.578s\n>\n> Alex\n>\n> http://codereview.appspot.com/5610044/\n",
			"disapproval": false,
			"date": "2012-02-01 01:33:50.428914",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 1, 2012 at 10:40 AM, brainman <alex.brainman@gmail.com> wrote:\n>> Anyway, IPv6 support on Windows is necessary for Go 1?\n>\n> Not my call. Russ?\n\nSorry for my laziness.\nI just confirmed the issue 1740 status is someday, okee-dokee.\n\n> I do have CL to have ipv6 working on windows. Name lookups do not work yet.\n> And I do not have time to find environment so I can investigate why.\n",
			"disapproval": false,
			"date": "2012-02-01 03:07:19.444605",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: mikioh.mikioh@gmail.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-01 01:01:48.425056",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but maybe add a TODO referencing a golang.org/issue/NNNNN of the bug\ntracking windows support for that feature\n\nOn Tue, Jan 31, 2012 at 5:01 PM, <alex.brainman@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: mikioh.mikioh@gmail.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> net: fix windows build\n>\n> Ignore result of setting SO_BROADCAST.\n>\n> Disable TestSimpleListenMulticastUDP as\n> setIPv4MulticastInterface is not implemented.\n>\n> Please review this at http://codereview.appspot.com/**5610044/<http://codereview.appspot.com/5610044/>\n>\n> Affected files:\n>  M src/pkg/net/multicast_test.go\n>  M src/pkg/net/sockopt_windows.go\n>\n>\n> Index: src/pkg/net/multicast_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/multicast_test.**go\n> +++ b/src/pkg/net/multicast_test.**go\n> @@ -86,7 +86,7 @@\n>\n>  func TestSimpleListenMulticastUDP(t *testing.T) {\n>        switch runtime.GOOS {\n> -       case \"plan9\":\n> +       case \"plan9\", \"windows\":\n>                return\n>        }\n>\n> Index: src/pkg/net/sockopt_windows.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/sockopt_windows.**go\n> +++ b/src/pkg/net/sockopt_windows.**go\n> @@ -27,11 +27,7 @@\n>        // to be handled by the correct socket.\n>\n>        // Allow broadcast.\n> -       err := syscall.SetsockoptInt(s, syscall.SOL_SOCKET,\n> syscall.SO_BROADCAST, 1)\n> -       if err != nil {\n> -               return os.NewSyscallError(\"**setsockopt\", err)\n> -       }\n> -\n> +       syscall.SetsockoptInt(s, syscall.SOL_SOCKET, syscall.SO_BROADCAST,\n> 1)\n>        return nil\n>  }\n>\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-01 01:07:28.124576",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 1, 2012 at 10:11 AM,  <mikioh.mikioh@gmail.com> wrote:\n\n> I'll try to find the way testing multicast UDP on windows out later,\n> perhaps after Go 1 release.\n\nI guess the below patch would work on windows too.\n\niff -r 6f0cee9fab3a src/pkg/net/multicast_test.go\n--- a/src/pkg/net/multicast_test.go\tWed Feb 01 12:13:46 2012 +1100\n+++ b/src/pkg/net/multicast_test.go\tWed Feb 01 10:17:18 2012 +0900\n@@ -86,7 +86,7 @@\n\n func TestSimpleListenMulticastUDP(t *testing.T) {\n \tswitch runtime.GOOS {\n-\tcase \"plan9\", \"windows\":\n+\tcase \"plan9\":\n \t\treturn\n \t}\n\n@@ -110,7 +110,7 @@\n \t\t\tt.Logf(\"an appropriate multicast interface not found\")\n \t\t\treturn\n \t\t}\n-\t\tc, err := ListenMulticastUDP(tt.net, ifi, tt.gaddr)\n+\t\tc, err := ListenMulticastUDP(tt.net, nil, tt.gaddr)\n \t\tif err != nil {\n \t\t\tt.Fatalf(\"ListenMulticastUDP failed: %v\", err)\n \t\t}\n",
			"disapproval": false,
			"date": "2012-02-01 01:17:45.085909",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/01 01:17:45, mikioh wrote:\n> \n> I guess the below patch would work on windows too.\n> \n\nNo it does not. It still fails as before:\n\n$ go test\n--- FAIL: TestSimpleListenMulticastUDP (0.00 seconds)\n        multicast_test.go:115: ListenMulticastUDP failed: not supported by windows\nFAIL\nexit status 1\nFAIL    net     3.578s\n\nAlex",
			"disapproval": false,
			"date": "2012-02-01 01:29:28.377264",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jan 31, 2012 at 20:40, brainman <alex.brainman@gmail.com> wrote:\n> Not my call. Russ?\n>\n> I do have CL to have ipv6 working on windows. Name lookups do not work yet.\n> And I do not have time to find environment so I can investigate why.\n\nI do not believe that IPv6 on Windows is necessary for Go 1.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-01 06:38:52.042285",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThank you very much.\n\nI'll try to find the way testing multicast UDP on windows out later,\nperhaps after Go 1 release.\n\nhttp://codereview.appspot.com/5610044/diff/3001/src/pkg/net/sockopt_windows.go\nFile src/pkg/net/sockopt_windows.go (right):\n\nhttp://codereview.appspot.com/5610044/diff/3001/src/pkg/net/sockopt_windows.go#newcode30\nsrc/pkg/net/sockopt_windows.go:30: syscall.SetsockoptInt(s, syscall.SOL_SOCKET, syscall.SO_BROADCAST, 1)\nJust for clarification: does windows reject SO_BROADCAST by default?",
			"disapproval": false,
			"date": "2012-02-01 01:11:00.216506",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/01 01:07:28, bradfitz wrote:\n> ... maybe add a TODO referencing a golang.org/issue/NNNNN of the bug\n> tracking windows support for that feature\n> \n\nThere are 10 lines of\n\n// TODO: Implement this\n\nin sockoptip_windows.go. I think it is more than enough.\n\nAs to the essence of these changes, I do not know enough about what mikioh building to even file an issue. :-)\n\nAlex",
			"disapproval": false,
			"date": "2012-02-01 01:12:38.092833",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5610044: net: fix windows build",
	"created": "2012-02-01 01:00:19.369630",
	"patchsets": [
		1,
		2001,
		3001,
		1002
	],
	"modified": "2012-02-01 06:38:52.171485",
	"closed": true,
	"issue": 5610044
}