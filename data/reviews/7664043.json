{
	"description": "cmd/gc: missing type inference for untyped complex() calls.\n\nFixes issue 5014.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"rsc@golang.org",
		"daniel.morsing@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-09 08:48:03.563710",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7664043/diff/5001/src/cmd/gc/const.c\nFile src/cmd/gc/const.c (right):\n\nhttps://codereview.appspot.com/7664043/diff/5001/src/cmd/gc/const.c#newcode123\nsrc/cmd/gc/const.c:123: convlit(&n->left, types[cplxsubtype(t->etype)]);\ni admit ignorance of the semantics, but why not save the result of the expensive-looking calculation in a variable to avoid evaluating it twice?",
			"disapproval": false,
			"date": "2013-03-09 21:25:44.477540",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThe cplxsubtype call is trivial.\n\nHowever, I am worried about whether it is possible to arrive here with t not set to a complex number type. What if t is int, for example? Then cplxsubtype will fatal. Is that possible?",
			"disapproval": false,
			"date": "2013-03-11 15:28:27.683630",
			"approval": true
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/11 15:28:27, rsc wrote:\n> However, I am worried about whether it is possible to arrive here with t not set\n> to a complex number type. What if t is int, for example? Then cplxsubtype will\n> fatal. Is that possible?\n\nThe following program crashes, so I guess so.\n\npackage p\n\nvar s uint\nvar x int = complex(10<<s, 20)",
			"disapproval": false,
			"date": "2013-03-11 15:50:01.917140",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/11 15:50:01, DMorsing wrote:\n> On 2013/03/11 15:28:27, rsc wrote:\n> > However, I am worried about whether it is possible to arrive here with t not\n> set\n> > to a complex number type. What if t is int, for example? Then cplxsubtype will\n> > fatal. Is that possible?\n> \n> The following program crashes, so I guess so.\n> \n> package p\n> \n> var s uint\n> var x int = complex(10<<s, 20)\n\nOk, will take care. Things are in a bad shape, I think https://codereview.appspot.com/7671045 should go in, it's more straightforward.",
			"disapproval": false,
			"date": "2013-03-11 20:53:04.319800",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org, rsc@golang.org, daniel.morsing@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-11 23:32:45.104920",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?",
			"disapproval": false,
			"date": "2013-03-13 07:59:15.664100",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-03-13 21:22:32.604180",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I will submit this at the end of the day.",
			"disapproval": false,
			"date": "2013-03-15 07:41:20.104690",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-03-15 15:31:14.155510",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c825d178769f ***\n\ncmd/gc: missing type inference for untyped complex() calls.\n\nFixes issue 5014.\n\nR=golang-dev, r, rsc, daniel.morsing\nCC=golang-dev\nhttps://codereview.appspot.com/7664043",
			"disapproval": false,
			"date": "2013-03-15 23:37:54.561500",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 7664043: cmd/gc: missing type inference for untyped complex() calls.",
	"created": "2013-03-09 01:33:23.249200",
	"patchsets": [
		1,
		2001,
		5001,
		13001,
		18001,
		20001,
		27001
	],
	"modified": "2013-03-16 08:14:59.558090",
	"closed": true,
	"issue": 7664043
}