{
	"description": "fmt: handle os.Error values\n\nHandling os.Error is no different than handling fmt.Stringer\nhere, so the code is redundant now, but it will be necessary\nonce error goes in.\n\nAdding it now will make gofix fix it.",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I added doc.go to this CL and swapped the order.\n\nThe duplication is less avoidable than it looks.\nAll that stuff before the .String() or .Error()\nhas to happen before the call: it sets up the\ncorrect behavior if the call panics.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-10-28 03:26:06.546005",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-10-28 01:42:56.014678",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\nbut how about a type switch?\n\nhttp://codereview.appspot.com/5331045/diff/9001/src/pkg/fmt/doc.go\nFile src/pkg/fmt/doc.go (right):\n\nhttp://codereview.appspot.com/5331045/diff/9001/src/pkg/fmt/doc.go#newcode92\nsrc/pkg/fmt/doc.go:92: If an operand implements the error interface, the Error method\ns/If/Next, if/\n\nhttp://codereview.appspot.com/5331045/diff/9001/src/pkg/fmt/doc.go#newcode96\nsrc/pkg/fmt/doc.go:96: If an operand implements method String() string that method\ns/If/Finally, if/",
			"disapproval": false,
			"date": "2011-10-28 04:07:24.444315",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5331045/diff/3/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttp://codereview.appspot.com/5331045/diff/3/src/pkg/fmt/print.go#newcode646\nsrc/pkg/fmt/print.go:646: p.printField(err.String(), verb, plus, false, depth)\nthe duplication is avoidable. schematically,\n\nif ... { str = String() }\nelse if ... { str = Error() }\nif ok {\n}\n\nor even a type switch instead of two ifs\n\nanother question is what the right order is. i might put error first. the question is: do we expect errors and strings to print differently if they're both in the same type? if so, error is more specific and so should go first, maybe. but it's arguably moot.\n\nregardless it might be worth documenting the order.",
			"disapproval": false,
			"date": "2011-10-28 03:16:28.589370",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-28 03:24:53.641677",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Oct 27, 2011 at 21:07,  <r@golang.org> wrote:\n> LGTM\n> but how about a type switch?\n\nDone.\n",
			"disapproval": false,
			"date": "2011-10-28 04:13:31.529345",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f960102bc23f ***\n\nfmt: handle os.Error values\n\nHandling os.Error is no different than handling fmt.Stringer\nhere, so the code is redundant now, but it will be necessary\nonce error goes in.\n\nAdding it now will make gofix fix it.\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/5331045",
			"disapproval": false,
			"date": "2011-10-28 04:20:49.095377",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5331045: fmt: handle os.Error values",
	"created": "2011-10-28 01:22:05.409382",
	"patchsets": [
		1,
		2001,
		3,
		9001,
		11001,
		6002,
		10002
	],
	"modified": "2011-10-28 04:20:50.829326",
	"closed": true,
	"issue": 5331045
}