{
	"description": "net: tweak variable declarations",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=bba6f08cf6b8 ***\n\nnet: tweak variable declarations\n\nR=golang-dev, bradfitz, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5617050",
			"disapproval": false,
			"date": "2012-02-02 22:40:09.692738",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-02 07:12:04.410796",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM if you really need to.\n\nBut we're trying to slow down non-essential changes right now.  I'll assume\nthis makes a future important CL prettier.\n\n\nOn Wed, Feb 1, 2012 at 11:12 PM, <mikioh.mikioh@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> net: tweak variable declarations\n>\n> This is just a stylistic change for coding style.\n>\n> Please review this at http://codereview.appspot.com/**5617050/<http://codereview.appspot.com/5617050/>\n>\n> Affected files:\n>  M src/pkg/net/interface_bsd.go\n>\n>\n> Index: src/pkg/net/interface_bsd.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/interface_bsd.go\n> +++ b/src/pkg/net/interface_bsd.go\n> @@ -18,8 +18,6 @@\n>  // network interfaces.  Otherwise it returns a mapping of a specific\n>  // interface.\n>  func interfaceTable(ifindex int) ([]Interface, error) {\n> -       var ift []Interface\n> -\n>        tab, err := syscall.RouteRIB(syscall.NET_**RT_IFLIST, ifindex)\n>        if err != nil {\n>                return nil, os.NewSyscallError(\"route rib\", err)\n> @@ -30,6 +28,7 @@\n>                return nil, os.NewSyscallError(\"route message\", err)\n>        }\n>\n> +       var ift []Interface\n>        for _, m := range msgs {\n>                switch v := m.(type) {\n>                case *syscall.InterfaceMessage:\n> @@ -42,18 +41,16 @@\n>                        }\n>                }\n>        }\n> -\n>        return ift, nil\n>  }\n>\n>  func newLink(m *syscall.InterfaceMessage) ([]Interface, error) {\n> -       var ift []Interface\n> -\n>        sas, err := syscall.ParseRoutingSockaddr(**m)\n>        if err != nil {\n>                return nil, os.NewSyscallError(\"route sockaddr\", err)\n>        }\n>\n> +       var ift []Interface\n>        for _, s := range sas {\n>                switch v := s.(type) {\n>                case *syscall.SockaddrDatalink:\n> @@ -75,7 +72,6 @@\n>                        ift = append(ift, ifi)\n>                }\n>        }\n> -\n>        return ift, nil\n>  }\n>\n> @@ -103,8 +99,6 @@\n>  // for all network interfaces.  Otherwise it returns addresses\n>  // for a specific interface.\n>  func interfaceAddrTable(ifindex int) ([]Addr, error) {\n> -       var ifat []Addr\n> -\n>        tab, err := syscall.RouteRIB(syscall.NET_**RT_IFLIST, ifindex)\n>        if err != nil {\n>                return nil, os.NewSyscallError(\"route rib\", err)\n> @@ -115,6 +109,7 @@\n>                return nil, os.NewSyscallError(\"route message\", err)\n>        }\n>\n> +       var ifat []Addr\n>        for _, m := range msgs {\n>                switch v := m.(type) {\n>                case *syscall.InterfaceAddrMessage:\n> @@ -127,18 +122,16 @@\n>                        }\n>                }\n>        }\n> -\n>        return ifat, nil\n>  }\n>\n>  func newAddr(m *syscall.InterfaceAddrMessage) (Addr, error) {\n> -       ifa := &IPNet{}\n> -\n>        sas, err := syscall.ParseRoutingSockaddr(**m)\n>        if err != nil {\n>                return nil, os.NewSyscallError(\"route sockaddr\", err)\n>        }\n>\n> +       ifa := &IPNet{}\n>        for i, s := range sas {\n>                switch v := s.(type) {\n>                case *syscall.SockaddrInet4:\n> @@ -166,6 +159,5 @@\n>                        }\n>                }\n>        }\n> -\n>        return ifa, nil\n>  }\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-02 07:14:21.370272",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI asked for these a few days ago; they were just missed from that CL.\n",
			"disapproval": false,
			"date": "2012-02-02 18:54:02.134747",
			"approval": true
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 5617050: net: tweak variable declarations",
	"created": "2012-02-02 07:11:41.003430",
	"patchsets": [
		1,
		2001,
		3002,
		8001
	],
	"modified": "2012-02-02 22:40:11.742863",
	"closed": true,
	"issue": 5617050
}