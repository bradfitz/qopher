{
	"description": "net/http: reuse textproto.Readers; remove 2 more allocations\n\nSaves both the textproto.Reader allocation, and its internal\nscratch buffer growing.\n\nbenchmark                                   old ns/op    new ns/op    delta\nBenchmarkServerFakeConnWithKeepAliveLite        10324        10149   -1.70%\n\nbenchmark                                  old allocs   new allocs    delta\nBenchmarkServerFakeConnWithKeepAliveLite           19           17  -10.53%\n\nbenchmark                                   old bytes    new bytes    delta\nBenchmarkServerFakeConnWithKeepAliveLite         1559         1492   -4.30%",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-28 21:42:06.181890",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/8094046/diff/5001/src/pkg/net/http/request.go\nFile src/pkg/net/http/request.go (right):\n\nhttps://codereview.appspot.com/8094046/diff/5001/src/pkg/net/http/request.go#newcode482\nsrc/pkg/net/http/request.go:482: var textprotoReaderCache = make(chan *textproto.Reader, 4)\nhow did you pick 4? odd choice. (ha)",
			"disapproval": false,
			"date": "2013-03-28 21:43:28.918880",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/8094046/diff/5001/src/pkg/net/http/request.go\nFile src/pkg/net/http/request.go (right):\n\nhttps://codereview.appspot.com/8094046/diff/5001/src/pkg/net/http/request.go#newcode481\nsrc/pkg/net/http/request.go:481: // TODO: use a sync.Cache when available\n// TODO(bradfitz)\n\notherwise it is not found by go/doc",
			"disapproval": false,
			"date": "2013-03-28 21:46:08.160900",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8094046/diff/5001/src/pkg/net/http/request.go\nFile src/pkg/net/http/request.go (right):\n\nhttps://codereview.appspot.com/8094046/diff/5001/src/pkg/net/http/request.go#newcode482\nsrc/pkg/net/http/request.go:482: var textprotoReaderCache = make(chan *textproto.Reader, 4)\nOn 2013/03/28 21:43:29, r wrote:\n> how did you pick 4? odd choice. (ha)\n\nQuite arbitrary. It's more than 0 and 1.\n\nIf I picked a big number, that's more memory wasted. Hence the TODO to use a per-M/P sync.Cache.",
			"disapproval": false,
			"date": "2013-03-28 21:47:16.624190",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=402e871d840e ***\n\nnet/http: reuse textproto.Readers; remove 2 more allocations\n\nSaves both the textproto.Reader allocation, and its internal\nscratch buffer growing.\n\nbenchmark                                   old ns/op    new ns/op    delta\nBenchmarkServerFakeConnWithKeepAliveLite        10324        10149   -1.70%\n\nbenchmark                                  old allocs   new allocs    delta\nBenchmarkServerFakeConnWithKeepAliveLite           19           17  -10.53%\n\nbenchmark                                   old bytes    new bytes    delta\nBenchmarkServerFakeConnWithKeepAliveLite         1559         1492   -4.30%\n\nR=golang-dev, r, gri\nCC=golang-dev\nhttps://codereview.appspot.com/8094046",
			"disapproval": false,
			"date": "2013-03-28 21:51:23.922800",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 8094046: net/http: reuse textproto.Readers; remove 2 more allocations",
	"created": "2013-03-28 21:41:00.407390",
	"patchsets": [
		1,
		2001,
		5001,
		6003
	],
	"modified": "2013-03-28 21:51:25.268880",
	"closed": true,
	"issue": 8094046
}