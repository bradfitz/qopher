{
	"description": "spec: terminating statements for functions\n\nThe only functional change is the new section\non terminating statements.\n\nThere is a minor syntax rewrite (not change)\nof function declarations to make it easier to\nrefer to the notion of a function from all places\nwhere it is used (function decls, method decls,\nand function literals).\n\nIncludes some minor fixes/additions of missing links.\n\nBased closely on Russ' proposal.\n\nFixes issue 65.",
	"cc": [
		"rsc@golang.org",
		"r@golang.org",
		"iant@golang.org",
		"ken@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode1472\ndoc/go_spec.html:1472: A <i>block</i> is a (possibly empty) sequence of declarations and statements\nOn 2013/03/04 18:35:54, r wrote:\n> drop the parens.\n\nDone.\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3878\ndoc/go_spec.html:3878: A <a href=\"#Blocks\">block</a> in which the statement list ends in a terminating statement.\nOn 2013/03/04 18:35:54, r wrote:\n> \"ends\" isn't well-defined.\n> A block with a non-empty statement list in which the final statement of the list\n> is a terminating statement.\n\nAdded extra sentence defining what \"ends\" means instead since it's used not just here but below as well.\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3887\ndoc/go_spec.html:3887: <li>both branches are terminating statements.</li>\nOn 2013/03/04 18:35:54, r wrote:\n> it's a bit subtle because of 'if .. else if .. else if .. else if ..', but i\n> believe 'both' is correct.\n\nyes. The if-syntax has two branches.\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3895\ndoc/go_spec.html:3895: <li>there is no explicit loop condition.</li>\nOn 2013/03/04 18:35:54, r wrote:\n> \"no\" isn't quite the same as empty. also there's this:\n> \n> for true { }\n> \n> which the rule does not (and should not) define as a terminating statement.\n> \n> i think you want to say\n> \n> the loop condition is missing or empty\n> \n> which is very clear.\n\nDon't quite agree. \"true\" is an explicit loop condition. \"Missing or empty\" implies that it can be missing, or it can be empty, and I don't know what \"empty\" means if not \"missing\". Rephrased to:\n\n\"the loop condition is absent.\"\n\nThis is the wording used in the spec for \"for\".\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3905\ndoc/go_spec.html:3905: or <a href=\"#Fallthrough_statements\">\"fallthrough\" statement</a>.</li>\nOn 2013/03/04 18:35:54, r wrote:\n> possibly labeled fallthrough statement\n\nDone.",
			"disapproval": false,
			"date": "2013-03-04 19:35:00.632020",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7415050/diff/13002/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7415050/diff/13002/doc/go_spec.html#newcode3859\ndoc/go_spec.html:3859: A terminating statement is one the the following:\nOn 2013/03/04 20:55:26, iant wrote:\n> s/the the/of the/\n\nwow.\n\nfixed.",
			"disapproval": false,
			"date": "2013-03-04 20:58:23.832230",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@golang.org, iant@golang.org, ken@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-03-04 04:41:14.119440",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3887\ndoc/go_spec.html:3887: <li>both branches are terminating statements.</li>\ns/both/all/ ?",
			"disapproval": false,
			"date": "2013-03-04 06:06:32.999390",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode1472\ndoc/go_spec.html:1472: A <i>block</i> is a (possibly empty) sequence of declarations and statements\ndrop the parens.\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3878\ndoc/go_spec.html:3878: A <a href=\"#Blocks\">block</a> in which the statement list ends in a terminating statement.\n\"ends\" isn't well-defined.\nA block with a non-empty statement list in which the final statement of the list is a terminating statement.\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3887\ndoc/go_spec.html:3887: <li>both branches are terminating statements.</li>\nit's a bit subtle because of 'if .. else if .. else if .. else if ..', but i believe 'both' is correct.\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3895\ndoc/go_spec.html:3895: <li>there is no explicit loop condition.</li>\n\"no\" isn't quite the same as empty. also there's this:\n\nfor true { }\n\nwhich the rule does not (and should not) define as a terminating statement.\n\ni think you want to say\n\nthe loop condition is missing or empty\n\nwhich is very clear.\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3905\ndoc/go_spec.html:3905: or <a href=\"#Fallthrough_statements\">\"fallthrough\" statement</a>.</li>\npossibly labeled fallthrough statement",
			"disapproval": false,
			"date": "2013-03-04 18:35:54.435300",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=763763e16eb3 ***\n\nspec: terminating statements for functions\n\nThe only functional change is the new section\non terminating statements.\n\nThere is a minor syntax rewrite (not change)\nof function declarations to make it easier to\nrefer to the notion of a function from all places\nwhere it is used (function decls, method decls,\nand function literals).\n\nIncludes some minor fixes/additions of missing links.\n\nBased closely on Russ' proposal.\n\nFixes issue 65.\n\nR=rsc, r, iant, ken, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7415050",
			"disapproval": false,
			"date": "2013-03-04 21:55:54.635320",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Waiting for comments from more people.\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3887\ndoc/go_spec.html:3887: <li>both branches are terminating statements.</li>\nOn 2013/03/04 06:06:33, bradfitz wrote:\n> s/both/all/ ?\n\nThere are exactly two branches (at the way this rule is formulated), so I wanted to highlight that. But not feeling strongly.",
			"disapproval": false,
			"date": "2013-03-04 17:31:41.827780",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 4, 2013 at 9:31 AM, <gri@golang.org> wrote:\r\n\r\n> Waiting for comments from more people.\r\n>\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.**com/7415050/diff/13001/doc/go_**spec.html<https://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html>\r\n> File doc/go_spec.html (right):\r\n>\r\n> https://codereview.appspot.**com/7415050/diff/13001/doc/go_**\r\n> spec.html#newcode3887<https://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3887>\r\n> doc/go_spec.html:3887: <li>both branches are terminating\r\n> statements.</li>\r\n> On 2013/03/04 06:06:33, bradfitz wrote:\r\n>\r\n>> s/both/all/ ?\r\n>>\r\n>\r\n> There are exactly two branches (at the way this rule is formulated), so\r\n> I wanted to highlight that. But not feeling strongly.\r\n>\r\n\r\nyeah, I realized that after I mailed that.  \"both\" is better.\r\n",
			"disapproval": false,
			"date": "2013-03-04 17:34:22.097830",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Any other takers?\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3929\ndoc/go_spec.html:3929: Flow of control does not continue past a terminating statement.\nOn 2013/03/04 18:06:28, rsc wrote:\n> This is true, but it doesn't seem to be used anywhere. I think it might be too\n> easy to misread as saying the reverse, namely that if flow of control does not\n> continue past a statement, then it is a terminating statement (not true), so I'm\n> inclined to drop this.\n\nDone.",
			"disapproval": false,
			"date": "2013-03-04 18:27:23.733730",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7415050/diff/13001/doc/go_spec.html#newcode3929\ndoc/go_spec.html:3929: Flow of control does not continue past a terminating statement.\nThis is true, but it doesn't seem to be used anywhere. I think it might be too easy to misread as saying the reverse, namely that if flow of control does not continue past a statement, then it is a terminating statement (not true), so I'm inclined to drop this.",
			"disapproval": false,
			"date": "2013-03-04 18:06:28.398750",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-03-04 20:41:05.375650",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nStill looks good to me, but wait for Rob.\n\nhttps://codereview.appspot.com/7415050/diff/23001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7415050/diff/23001/doc/go_spec.html#newcode3931\ndoc/go_spec.html:3931: is not empty and if its final statement is terminating.\ns/if //",
			"disapproval": false,
			"date": "2013-03-04 19:56:12.301680",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/7415050/diff/23001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7415050/diff/23001/doc/go_spec.html#newcode3931\ndoc/go_spec.html:3931: is not empty and if its final statement is terminating.\nOn 2013/03/04 19:56:12, rsc wrote:\n> s/if //\n\nDone.",
			"disapproval": false,
			"date": "2013-03-04 20:26:15.482650",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7415050/diff/13002/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7415050/diff/13002/doc/go_spec.html#newcode3859\ndoc/go_spec.html:3859: A terminating statement is one the the following:\ns/the the/of the/",
			"disapproval": false,
			"date": "2013-03-04 20:55:26.853780",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-03-04 21:17:47.695470",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 7415050: spec: terminating statements for functions",
	"created": "2013-03-02 02:04:28.523560",
	"patchsets": [
		1,
		1002,
		4001,
		7001,
		10001,
		13001,
		20001,
		23001,
		13002,
		2003,
		14003
	],
	"modified": "2013-03-04 21:55:57.113800",
	"closed": true,
	"issue": 7415050
}