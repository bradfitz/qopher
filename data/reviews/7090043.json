{
	"description": "cmd/5c: fix handling of side effects when assigning a struct literal.\n\nAlso undo revision a5b96b602690 used to workaround the bug.\n\nFixes issue 4643.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"minux.ma@gmail.com",
		"lucio.dere@gmail.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nThe bug doesn't exist in cmd/6c and cmd/8c since\ntheir inclusion (although the comment above the\nif is out-of-date, but it's up to you whether to\nfix them).\n\nPS: the bug still exists in Plan 9 upstream.\nRemy, please consider push the patch to upstream.",
			"disapproval": false,
			"date": "2013-01-12 07:24:32.592360",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-11 07:12:10.112830",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Here is the asm afterwards\n\n                        *bitbufpos++ = (BitTarget){obj, ti, bitp, shift};\n   59180:       e59d0020        ldr     r0, [sp, #32]\n   59184:       e2801010        add     r1, r0, #16\n   59188:       e58d1020        str     r1, [sp, #32]\n   5918c:       e58d0014        str     r0, [sp, #20]\n   59190:       e59d1014        ldr     r1, [sp, #20]\n   59194:       e5816000        str     r6, [r1]\n   59198:       e59d1014        ldr     r1, [sp, #20]\n   5919c:       e59d203c        ldr     r2, [sp, #60]   ; 0x3c\n   591a0:       e5812004        str     r2, [r1, #4]\n   591a4:       e59d1014        ldr     r1, [sp, #20]\n   591a8:       e581c008        str     ip, [r1, #8]\n   591ac:       e59d1014        ldr     r1, [sp, #20]\n   591b0:       e581700c        str     r7, [r1, #12]",
			"disapproval": false,
			"date": "2013-01-11 22:19:32.518360",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm going to shoot from the hip here, so don't be shy to correct me.\r\nI assumed that the problem only affected the Go tool because it\r\ninvolved the assignment of a struct literal and these are not (from\r\nmemory) permissible constructs in traditional C.  Of course, I don't\r\nnecessarily remember right.\r\n\r\nAnyway, my recommendation regarding feeding corrections upstream in\r\nthe Plan 9/ARM realm, is to pass them on to Richard Miller who's\r\nporting Plan 9 to the Raspberry Pi.  I've included him in the CC:\r\nlist.\r\n\r\nFor Richard's benefit: the URL for the codereview entry is at the\r\nbottom of this message.\r\n\r\nLucio.\r\n\r\nOn 1/12/13, minux.ma@gmail.com <minux.ma@gmail.com> wrote:\r\n> LGTM.\r\n>\r\n> The bug doesn't exist in cmd/6c and cmd/8c since\r\n> their inclusion (although the comment above the\r\n> if is out-of-date, but it's up to you whether to\r\n> fix them).\r\n>\r\n> PS: the bug still exists in Plan 9 upstream.\r\n> Remy, please consider push the patch to upstream.\r\n>\r\n> https://codereview.appspot.com/7090043/\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-12 07:34:57.928200",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jan 12, 2013 at 3:34 PM, Lucio De Re <lucio.dere@gmail.com> wrote:\r\n\r\n> I'm going to shoot from the hip here, so don't be shy to correct me.\r\n> I assumed that the problem only affected the Go tool because it\r\n> involved the assignment of a struct literal and these are not (from\r\n> memory) permissible constructs in traditional C.  Of course, I don't\r\n> necessarily remember right.\r\n>\r\nIt's a Plan 9 C extension.\r\nQuoting http://doc.cat-v.org/plan_9/4th_edition/papers/comp\r\n\r\nthis assignment may appear anywhere an assignment is legal:\r\n\r\n r = (Rectangle){add(p, q), (Point){x, y+3}};\r\n",
			"disapproval": false,
			"date": "2013-01-12 07:42:39.313290",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Richard, see https://code.google.com/p/go/issues/detail?id=4643\r\n\r\nOn Fri, Jan 11, 2013 at 11:34 PM, Lucio De Re <lucio.dere@gmail.com> wrote:\r\n\r\n> I'm going to shoot from the hip here, so don't be shy to correct me.\r\n> I assumed that the problem only affected the Go tool because it\r\n> involved the assignment of a struct literal and these are not (from\r\n> memory) permissible constructs in traditional C.  Of course, I don't\r\n> necessarily remember right.\r\n>\r\n> Anyway, my recommendation regarding feeding corrections upstream in\r\n> the Plan 9/ARM realm, is to pass them on to Richard Miller who's\r\n> porting Plan 9 to the Raspberry Pi.  I've included him in the CC:\r\n> list.\r\n>\r\n> For Richard's benefit: the URL for the codereview entry is at the\r\n> bottom of this message.\r\n>\r\n> Lucio.\r\n>\r\n> On 1/12/13, minux.ma@gmail.com <minux.ma@gmail.com> wrote:\r\n> > LGTM.\r\n> >\r\n> > The bug doesn't exist in cmd/6c and cmd/8c since\r\n> > their inclusion (although the comment above the\r\n> > if is out-of-date, but it's up to you whether to\r\n> > fix them).\r\n> >\r\n> > PS: the bug still exists in Plan 9 upstream.\r\n> > Remy, please consider push the patch to upstream.\r\n> >\r\n> > https://codereview.appspot.com/7090043/\r\n> >\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-12 07:43:25.374130",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"lucio.dere@gmail.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ecab7a7e7c7e ***\n\ncmd/5c: fix handling of side effects when assigning a struct literal.\n\nAlso undo revision a5b96b602690 used to workaround the bug.\n\nFixes issue 4643.\n\nR=rsc, golang-dev, dave, minux.ma, lucio.dere, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7090043",
			"disapproval": false,
			"date": "2013-01-12 08:17:23.811250",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 7090043: cmd/5c: fix handling of side effects when assigning a s...",
	"created": "2013-01-11 07:06:07.330100",
	"patchsets": [
		1,
		2001,
		5001,
		13001
	],
	"modified": "2013-01-12 23:46:14.031110",
	"closed": true,
	"issue": 7090043
}