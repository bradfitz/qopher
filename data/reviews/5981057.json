{
	"description": "cmd/go: in go get, don't try to perform discovery on non-hosts\n\nBefore, \"go get -v foo/bar\" was assuming \"foo\" was a hostname\nand trying to perform discovery on it. Now, require a dot in\nthe first path component (the hostname).",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2a52a9484c10 ***\n\ncmd/go: in go get, don't try to perform discovery on non-hosts\n\nBefore, \"go get -v foo/bar\" was assuming \"foo\" was a hostname\nand trying to perform discovery on it. Now, require a dot in\nthe first path component (the hostname).\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5981057",
			"disapproval": false,
			"date": "2012-04-04 14:24:19.220408",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThe other import paths mention the path.\nMaybe fmt.Errorf(\"no host name in import %q\", importPath)\nto look like the errors above and below?\n",
			"disapproval": false,
			"date": "2012-04-04 14:16:27.061915",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-04 14:14:31.164224",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Apr 4, 2012 at 7:16 AM, Russ Cox <rsc@golang.org> wrote:\n\n> LGTM\n>\n> The other import paths mention the path.\n> Maybe fmt.Errorf(\"no host name in import %q\", importPath)\n> to look like the errors above and below?\n>\n\nI didn't include it because the only caller adds the importPath in -v mode:\n\n                // repoRootForImportDynamic returns error detail\n\n\n                // that is irrelevant if the user didn't intend to use a\n\n\n                // dynamic import in the first place.\n\n\n                // Squelch it.\n\n\n                if err != nil {\n                        if buildV {\n                                log.Printf(\"import %q: %v\", importPath, err)\n                        }\n                        err = fmt.Errorf(\"unrecognized import path %q\",\nimportPath)\n                }\n\nI'll remove it in the other places.\n",
			"disapproval": false,
			"date": "2012-04-04 14:21:33.625885",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5981057: cmd/go: in go get, don't try to perform discovery on no...",
	"created": "2012-04-04 14:14:01.426405",
	"patchsets": [
		1,
		2001,
		3002,
		6001
	],
	"modified": "2012-04-04 14:24:20.786593",
	"closed": true,
	"issue": 5981057
}