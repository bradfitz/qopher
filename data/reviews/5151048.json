{
	"description": "crypto/tls: add server side SNI support.\n\nWith this in place, a TLS server is capable of selecting the correct\ncertificate based on the client's ServerNameIndication extension.\n\nThe need to call Config.BuildNameToCertificate is unfortunate, but\nadding a sync.Once to the Config structure made it uncopyable and I\nfelt that was too high a price to pay. Parsing the leaf certificates\nin each handshake was too inefficient to consider.",
	"cc": [
		"bradfitz@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-01 19:55:55.426277",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "It seems okay to me to present the SNI in the tls info.\nIf it seems okay to Adam, sure.  I would be against\nexposing SNI in the http API but it sounds like you are\nnot proposing that.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-10-03 15:46:47.189034",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "This works for the common case but doesn't address the actual (non-HTTP) use case that I hit:\n\nMy friend has a Go SSL proxy in front of a non-SSL IRC server.  There's a wildcard DNS entry.  The idea is that the client connects, presents the desired hostname via SNI, a cert is presented, and then after SSL handshake, based on the hostname presented during SNI, a backend IRC server is connected to and some initial IRC commands are synthesized by the proxy to setup things for that organization (each wildcard subdomain).\n\ntl;dr: I'd need some accessor on *tls.Conn to get the name presented.\n\nhttp://codereview.appspot.com/5151048/diff/5001/src/pkg/crypto/tls/common.go\nFile src/pkg/crypto/tls/common.go (right):\n\nhttp://codereview.appspot.com/5151048/diff/5001/src/pkg/crypto/tls/common.go#newcode132\nsrc/pkg/crypto/tls/common.go:132: NameToCertificate map[string]*Certificate\ndocument the nil case",
			"disapproval": false,
			"date": "2011-10-03 15:36:22.650802",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM with documenting what a nil NameToCertificate means, and an SNI name\naccessor.\n\nThanks!\n\n\nOn Sat, Oct 1, 2011 at 12:55 PM, <agl@golang.org> wrote:\n\n> Reviewers: bradfitz,\n>\n> Message:\n> Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> crypto/tls: add server side SNI support.\n>\n> With this in place, a TLS server is capable of selecting the correct\n> certificate based on the client's ServerNameIndication extension.\n>\n> The need to call Config.BuildNameToCertificate is unfortunate, but\n> adding a sync.Once to the Config structure made it uncopyable and I\n> felt that was too high a price to pay. Parsing the leaf certificates\n> in each handshake was too inefficient to consider.\n>\n> Please review this at http://codereview.appspot.com/**5151048/<http://codereview.appspot.com/5151048/>\n>\n> Affected files:\n>  M src/pkg/crypto/tls/common.go\n>  M src/pkg/crypto/tls/conn_test.**go\n>  M src/pkg/crypto/tls/handshake_**server.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-10-05 16:48:39.752945",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b8436b809593 ***\n\ncrypto/tls: add server side SNI support.\n\nWith this in place, a TLS server is capable of selecting the correct\ncertificate based on the client's ServerNameIndication extension.\n\nThe need to call Config.BuildNameToCertificate is unfortunate, but\nadding a sync.Once to the Config structure made it uncopyable and I\nfelt that was too high a price to pay. Parsing the leaf certificates\nin each handshake was too inefficient to consider.\n\nR=bradfitz, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5151048",
			"disapproval": false,
			"date": "2011-10-08 14:07:03.764903",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 5151048: crypto/tls: add server side SNI support.",
	"created": "2011-10-01 19:53:27.621745",
	"patchsets": [
		1,
		2001,
		5001,
		11001
	],
	"modified": "2011-10-08 14:07:04.873327",
	"closed": true,
	"issue": 5151048
}