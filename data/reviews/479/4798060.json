{
	"description": "syscall: openbsd amd64 syscall support\n\nAdd support for syscalls on openbsd amd64. This is based on the\nexisting freebsd amd64 implementation.",
	"cc": [
		"mikioh.mikioh@gmail.com",
		"rsc@golang.org",
		"yourcomputerpal@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-08-01 10:54:24.047855",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "please add the generated files to this CL.\n\nhttp://codereview.appspot.com/4798060/diff/14002/src/pkg/syscall/syscall_openbsd.go\nFile src/pkg/syscall/syscall_openbsd.go (right):\n\nhttp://codereview.appspot.com/4798060/diff/14002/src/pkg/syscall/syscall_openbsd.go#newcode82\nsrc/pkg/syscall/syscall_openbsd.go:82: // int truncate(const char *path, int pad, off_t length)\nCan we tell the Perl script about this padding instead?\nMaking people do it is error-prone.\n\nIt appears that the rule is you pad so that an off_t is an even-numbered argument (starting from 0).",
			"disapproval": false,
			"date": "2011-08-08 13:51:01.834613",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Aug 11, 2011 at 1:22 AM,  <jsing@google.com> wrote:\n\n>> I'd like to see kvm support on freebsd, openbsd in the near future.\n>> Then you can use kvm_read to fetch OpenBSD's RIB.\n>\n> I can look at this down the track. Presumably the downside is that you\n> would need to run setgid kmem,\n\nyeah setresgid, but that's the OpenBSD way.\n\n> rather than being able to retrieve the data via a sysctl.\n\nnot sure sysctl would be sufficient to do what we want.\ni guess that sysctl only does fetch stats, not entire routing\ninformation base.\n",
			"disapproval": false,
			"date": "2011-08-10 16:46:25.590462",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4798060/diff/14002/src/pkg/syscall/types_openbsd.c\nFile src/pkg/syscall/types_openbsd.c (right):\n\nhttp://codereview.appspot.com/4798060/diff/14002/src/pkg/syscall/types_openbsd.c#newcode154\nsrc/pkg/syscall/types_openbsd.c:154: $RTM_NEWMADDR = 0xfe, // not supported\nI'd like to see kvm support on freebsd, openbsd in the near future.\nThen you can use kvm_read to fetch OpenBSD's RIB.",
			"disapproval": false,
			"date": "2011-08-05 03:33:18.770192",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4798060/diff/14002/src/pkg/syscall/syscall_openbsd.go\nFile src/pkg/syscall/syscall_openbsd.go (right):\n\nhttp://codereview.appspot.com/4798060/diff/14002/src/pkg/syscall/syscall_openbsd.go#newcode82\nsrc/pkg/syscall/syscall_openbsd.go:82: // int truncate(const char *path, int pad, off_t length)\nOn 2011/08/08 13:51:01, rsc wrote:\n> Can we tell the Perl script about this padding instead?\n> Making people do it is error-prone.\n> \n> It appears that the rule is you pad so that an off_t is an even-numbered\n> argument (starting from 0).\n\nUnfortunately the rules are a bit more complex than that - there is an amount of history involved, however it basically means that off_t is on a 64-bit boundary for most architectures.\n\nCurrently all usage of off_t (aka int64) are preceded by padding, so we can always insert padding if we see an int64 argument to a syscall. While this is not 100% fool proof it does work for all of the cases currently in question. If need be I can refine the heuristic later.\n\nhttp://codereview.appspot.com/4798060/diff/14002/src/pkg/syscall/types_openbsd.c\nFile src/pkg/syscall/types_openbsd.c (right):\n\nhttp://codereview.appspot.com/4798060/diff/14002/src/pkg/syscall/types_openbsd.c#newcode154\nsrc/pkg/syscall/types_openbsd.c:154: $RTM_NEWMADDR = 0xfe, // not supported\nOn 2011/08/05 03:33:18, mikioh wrote:\n> I'd like to see kvm support on freebsd, openbsd in the near future.\n> Then you can use kvm_read to fetch OpenBSD's RIB.\n\nI can look at this down the track. Presumably the downside is that you would need to run setgid kmem, rather than being able to retrieve the data via a sysctl.",
			"disapproval": false,
			"date": "2011-08-10 16:22:43.983592",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/08/12 16:19:20, jsing wrote:\n\n> src/pkg/syscall/syscall_openbsd.go:27: Data   [24]int8\n> On 2011/08/12 02:45:43, mikioh wrote:\n> > should be 12; pls refer to /usr/include/net/if_dl.h, ztypes_openbsd_amd64.go.\n> \n> This is char sdl_data[24] in net/if_dl.h. Why should it be 12 here?\n\nbecause godefs, actually gcc won't take a look at kernel source \ntree. it looks at /usr/include distfiles. so pls rerun mkall.sh on \nopenbsd/amd64 with /usr/include.",
			"disapproval": false,
			"date": "2011-08-12 20:57:34.365175",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/syscall_openbsd.go\nFile src/pkg/syscall/syscall_openbsd.go (right):\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/syscall_openbsd.go#newcode27\nsrc/pkg/syscall/syscall_openbsd.go:27: Data   [24]int8\nshould be 12; pls refer to /usr/include/net/if_dl.h, ztypes_openbsd_amd64.go.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/types_openbsd.c\nFile src/pkg/syscall/types_openbsd.c (right):\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/types_openbsd.c#newcode157\nsrc/pkg/syscall/types_openbsd.c:157: $SizeofIfmaMsghdr = sizeof(struct ifma_msghdr),\nshould be removed.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/types_openbsd.c#newcode165\nsrc/pkg/syscall/types_openbsd.c:165: typedef struct ifma_msghdr $IfmaMsghdr;\nditto.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/zerrors_openbsd_amd64.go\nFile src/pkg/syscall/zerrors_openbsd_amd64.go (right):\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/zerrors_openbsd_amd64.go#newcode1\nsrc/pkg/syscall/zerrors_openbsd_amd64.go:1: // mkerrors.sh -f -m64\npls rerun mkall.sh on openbsd/amd64.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go\nFile src/pkg/syscall/ztypes_openbsd_amd64.go (right):\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go#newcode1\nsrc/pkg/syscall/ztypes_openbsd_amd64.go:1: // godefs -gsyscall -f-m64 types_openbsd.c\npls rerun mkall.sh on openbsd/amd64.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go#newcode32\nsrc/pkg/syscall/ztypes_openbsd_amd64.go:32: SizeofSockaddrDatalink = 0x20\nSizeofSockaddrDatalink = 0x14\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go#newcode42\nsrc/pkg/syscall/ztypes_openbsd_amd64.go:42: RTM_NEWMADDR           = 0xfe\n?\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go#newcode43\nsrc/pkg/syscall/ztypes_openbsd_amd64.go:43: RTM_DELMADDR           = 0xff\n?\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go#newcode199\nsrc/pkg/syscall/ztypes_openbsd_amd64.go:199: Data   [24]int8\nData   [12]int8",
			"disapproval": false,
			"date": "2011-08-12 02:45:43.611000",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/syscall_openbsd.go\nFile src/pkg/syscall/syscall_openbsd.go (right):\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/syscall_openbsd.go#newcode27\nsrc/pkg/syscall/syscall_openbsd.go:27: Data   [24]int8\nOn 2011/08/12 02:45:43, mikioh wrote:\n> should be 12; pls refer to /usr/include/net/if_dl.h, ztypes_openbsd_amd64.go.\n\nThis is char sdl_data[24] in net/if_dl.h. Why should it be 12 here?\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/types_openbsd.c\nFile src/pkg/syscall/types_openbsd.c (right):\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/types_openbsd.c#newcode157\nsrc/pkg/syscall/types_openbsd.c:157: $SizeofIfmaMsghdr = sizeof(struct ifma_msghdr),\nOn 2011/08/12 02:45:43, mikioh wrote:\n> should be removed.\n\nHrmm... looks like this got pulled in via a hg sync. Removed.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/types_openbsd.c#newcode165\nsrc/pkg/syscall/types_openbsd.c:165: typedef struct ifma_msghdr $IfmaMsghdr;\nOn 2011/08/12 02:45:43, mikioh wrote:\n> ditto.\n\nDone.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/zerrors_openbsd_amd64.go\nFile src/pkg/syscall/zerrors_openbsd_amd64.go (right):\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/zerrors_openbsd_amd64.go#newcode1\nsrc/pkg/syscall/zerrors_openbsd_amd64.go:1: // mkerrors.sh -f -m64\nOn 2011/08/12 02:45:43, mikioh wrote:\n> pls rerun mkall.sh on openbsd/amd64.\n\nDone.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go\nFile src/pkg/syscall/ztypes_openbsd_amd64.go (right):\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go#newcode1\nsrc/pkg/syscall/ztypes_openbsd_amd64.go:1: // godefs -gsyscall -f-m64 types_openbsd.c\nOn 2011/08/12 02:45:43, mikioh wrote:\n> pls rerun mkall.sh on openbsd/amd64.\n\nYup, they got out of sync - done.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go#newcode32\nsrc/pkg/syscall/ztypes_openbsd_amd64.go:32: SizeofSockaddrDatalink = 0x20\nOn 2011/08/12 02:45:43, mikioh wrote:\n> SizeofSockaddrDatalink = 0x14\n\n0x20 is correct.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go#newcode42\nsrc/pkg/syscall/ztypes_openbsd_amd64.go:42: RTM_NEWMADDR           = 0xfe\nOn 2011/08/12 02:45:43, mikioh wrote:\n> ?\n\nThese existed before the multicast changes - removed via regen.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go#newcode43\nsrc/pkg/syscall/ztypes_openbsd_amd64.go:43: RTM_DELMADDR           = 0xff\nOn 2011/08/12 02:45:43, mikioh wrote:\n> ?\n\nDone.\n\nhttp://codereview.appspot.com/4798060/diff/7033/src/pkg/syscall/ztypes_openbsd_amd64.go#newcode199\nsrc/pkg/syscall/ztypes_openbsd_amd64.go:199: Data   [24]int8\nOn 2011/08/12 02:45:43, mikioh wrote:\n> Data   [12]int8\n\nThis is defined as char sdl_data[24] in net/if_dl.h.",
			"disapproval": false,
			"date": "2011-08-12 16:19:20.172359",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/08/12 20:57:34, mikioh wrote:\n> On 2011/08/12 16:19:20, jsing wrote:\n> \n> > src/pkg/syscall/syscall_openbsd.go:27: Data   [24]int8\n> > On 2011/08/12 02:45:43, mikioh wrote:\n> > > should be 12; pls refer to /usr/include/net/if_dl.h,\n> ztypes_openbsd_amd64.go.\n> > \n> > This is char sdl_data[24] in net/if_dl.h. Why should it be 12 here?\n> \n> because godefs, actually gcc won't take a look at kernel source \n> tree. it looks at /usr/include distfiles. so pls rerun mkall.sh on \n> openbsd/amd64 with /usr/include.\n\nmkall.sh was run on the openbsd/amd64 machine that I am developing on:\n\n$ sysctl kern.version\nkern.version=OpenBSD 5.0-beta (GENERIC.MP) #5: Thu Aug  4 02:29:59 EST 2011\n$ grep char.*sdl_data /usr/include/net/if_dl.h\n       char      sdl_data[24]; /* minimum work area, can be larger;\n\nThe sdl_data size was recently increased from 12 to 24, hence the confusion. I'd argue for sticking with the current size since we're going to have to increase it at some point anyway.  Furthermore, you will not want to run Go on anything older than -current due to an rthreads bug that was recently fixed. If you've got a good argument against this please let me know.",
			"disapproval": false,
			"date": "2011-08-15 15:53:53.129910",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, Aug 16, 2011 at 12:53 AM,  <jsing@google.com> wrote:\n\n> $ sysctl kern.version\n> kern.version=OpenBSD 5.0-beta (GENERIC.MP) #5: Thu Aug \u00a04 02:29:59 EST\n> 2011\n\nAh, I see. 5.0 works to me.\n",
			"disapproval": false,
			"date": "2011-08-15 22:37:42.070092",
			"approval": false
		},
		{
			"sender": "yourcomputerpal@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I'm following along as well. I'll test as soon as those syscalls make\nit in tree somewhere. Thanks for the hard work!\nBrandon\n\nOn Mon, Aug 15, 2011 at 6:37 PM, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\n> On Tue, Aug 16, 2011 at 12:53 AM, \u00a0<jsing@google.com> wrote:\n>\n>> $ sysctl kern.version\n>> kern.version=OpenBSD 5.0-beta (GENERIC.MP) #5: Thu Aug \u00a04 02:29:59 EST\n>> 2011\n>\n> Ah, I see. 5.0 works to me.\n>\n",
			"disapproval": false,
			"date": "2011-08-16 02:02:42.745015",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> The sys_pipe() syscall can potentially block on OpenBSD (probably highly\n> unlikely, but it can) - if you want me to change this regardless please\n> let me know.\n\nCan it block indefinitely?\n",
			"disapproval": false,
			"date": "2011-08-17 17:31:06.340310",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"yourcomputerpal@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "lgtm\n\nhttp://codereview.appspot.com/4798060/diff/32001/src/pkg/syscall/syscall_openbsd.go\nFile src/pkg/syscall/syscall_openbsd.go (right):\n\nhttp://codereview.appspot.com/4798060/diff/32001/src/pkg/syscall/syscall_openbsd.go#newcode61\nsrc/pkg/syscall/syscall_openbsd.go:61: //sys pipe(p *[2]_C_int) (errno int)\nmight as well use sysnb like the others",
			"disapproval": false,
			"date": "2011-08-16 21:47:23.227135",
			"approval": true
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"yourcomputerpal@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/08/17 17:31:06, rsc wrote:\n> > The sys_pipe() syscall can potentially block on OpenBSD (probably highly\n> > unlikely, but it can) - if you want me to change this regardless please\n> > let me know.\n> \n> Can it block indefinitely?\n\nData structures are allocated from a pool with the WAITOK flag set. If memory is not available to complete the allocation then it will block until memory is freed. I'm not sure where the \"acceptable\" line is for go - certainly not something you'd call from an interrupt handler :)",
			"disapproval": false,
			"date": "2011-08-17 18:07:12.182566",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"yourcomputerpal@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4798060/diff/32001/src/pkg/syscall/syscall_openbsd.go\nFile src/pkg/syscall/syscall_openbsd.go (right):\n\nhttp://codereview.appspot.com/4798060/diff/32001/src/pkg/syscall/syscall_openbsd.go#newcode61\nsrc/pkg/syscall/syscall_openbsd.go:61: //sys pipe(p *[2]_C_int) (errno int)\nOn 2011/08/16 21:47:23, rsc wrote:\n> might as well use sysnb like the others\n\nThe sys_pipe() syscall can potentially block on OpenBSD (probably highly unlikely, but it can) - if you want me to change this regardless please let me know.",
			"disapproval": false,
			"date": "2011-08-17 17:26:34.706469",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> Data structures are allocated from a pool with the WAITOK flag set. If\n> memory is not available to complete the allocation then it will block\n> until memory is freed. I'm not sure where the \"acceptable\" line is for\n> go - certainly not something you'd call from an interrupt handler :)\n\nIn general we care about whether other goroutines\nmight reasonably make progress.  If the kernel\ndoesn't have memory for a pipe then it doesn't\nseem like other goroutines are going to get much\ndone.  I'm happy either way.  Let me know.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-08-17 18:15:11.714581",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"yourcomputerpal@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/08/17 18:15:11, rsc wrote:\n> > Data structures are allocated from a pool with the WAITOK flag set. If\n> > memory is not available to complete the allocation then it will block\n> > until memory is freed. I'm not sure where the \"acceptable\" line is for\n> > go - certainly not something you'd call from an interrupt handler :)\n> \n> In general we care about whether other goroutines\n> might reasonably make progress.  If the kernel\n> doesn't have memory for a pipe then it doesn't\n> seem like other goroutines are going to get much\n> done.  I'm happy either way.  Let me know.\n\nThanks. Based on your definition I've changed it to sysnb - PTAL.",
			"disapproval": false,
			"date": "2011-08-18 17:36:25.009885",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nWill submit after build is fixed.\n",
			"disapproval": false,
			"date": "2011-08-18 17:56:12.601281",
			"approval": true
		},
		{
			"sender": "yourcomputerpal@gmail.com",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"yourcomputerpal@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/08/18 17:56:12, rsc wrote:\n> LGTM\n> \n> Will submit after build is fixed.\n\nHas the build been fixed yet? I've been itching to test this out. Thanks!",
			"disapproval": false,
			"date": "2011-08-22 13:44:43.013933",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jsing@google.com",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"yourcomputerpal@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=cc0bf291486d ***\n\nsyscall: openbsd amd64 syscall support\n\nAdd support for syscalls on openbsd amd64. This is based on the\nexisting freebsd amd64 implementation.\n\nR=mikioh.mikioh, rsc, yourcomputerpal\nCC=golang-dev\nhttp://codereview.appspot.com/4798060\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-08-23 03:24:37.267207",
			"approval": false
		}
	],
	"owner_email": "jsing@google.com",
	"private": false,
	"base_url": "",
	"owner": "jsing",
	"subject": "code review 4798060: syscall: openbsd amd64 syscall support",
	"created": "2011-07-28 16:18:33.892374",
	"patchsets": [
		14002,
		7033,
		32001,
		44001
	],
	"modified": "2011-09-10 16:32:38.187630",
	"closed": true,
	"issue": 4798060
}