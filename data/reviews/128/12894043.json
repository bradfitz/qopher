{
	"description": "archive/zip: remove an allocation, speed up a test\n\nUpdate Issue 6138\n\nTestOver65kFiles spends all its time garbage collecting.\nRemoving the 1.4 MB of allocations per each of the 65k\nfiles brings this from 34 seconds to 0.23 seconds.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [
		"adg@google.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-08-13 21:29:45.739180",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-08-13 21:47:11.151740",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=2bc5fc177d58 ***\n\narchive/zip: remove an allocation, speed up a test\n\nUpdate Issue 6138\n\nTestOver65kFiles spends all its time garbage collecting.\nRemoving the 1.4 MB of allocations per each of the 65k\nfiles brings this from 34 seconds to 0.23 seconds.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/12894043",
			"disapproval": false,
			"date": "2013-08-13 21:48:11.699130",
			"approval": false
		},
		{
			"sender": "adg@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nI knew this was inefficient but I didn't realise how bad. Thanks.\r\nOn 14 Aug 2013 07:29, <bradfitz@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> archive/zip: remove an allocation, speed up a test\r\n>\r\n> Update Issue 6138\r\n>\r\n> TestOver65kFiles spends all its time garbage collecting.\r\n> Removing the 1.4 MB of allocations per each of the 65k\r\n> files brings this from 34 seconds to 0.23 seconds.\r\n>\r\n> Please review this at https://codereview.appspot.**com/12894043/<https://codereview.appspot.com/12894043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/archive/zip/reader.go\r\n>   M src/pkg/archive/zip/zip_test.**go\r\n>\r\n>\r\n> Index: src/pkg/archive/zip/reader.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/archive/zip/reader.**go\r\n> +++ b/src/pkg/archive/zip/reader.**go\r\n> @@ -179,9 +179,8 @@\r\n>  // findBodyOffset does the minimum work to verify the file has a header\r\n>  // and returns the file body offset.\r\n>  func (f *File) findBodyOffset() (int64, error) {\r\n> -       r := io.NewSectionReader(f.zipr, f.headerOffset,\r\n> f.zipsize-f.headerOffset)\r\n>         var buf [fileHeaderLen]byte\r\n> -       if _, err := io.ReadFull(r, buf[:]); err != nil {\r\n> +       if _, err := f.zipr.ReadAt(buf[:], f.headerOffset); err != nil {\r\n>                 return 0, err\r\n>         }\r\n>         b := readBuf(buf[:])\r\n> Index: src/pkg/archive/zip/zip_test.**go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/archive/zip/zip_**test.go\r\n> +++ b/src/pkg/archive/zip/zip_**test.go\r\n> @@ -17,14 +17,14 @@\r\n>  )\r\n>\r\n>  func TestOver65kFiles(t *testing.T) {\r\n> -       if testing.Short() {\r\n> -               t.Skip(\"slow test; skipping\")\r\n> -       }\r\n>         buf := new(bytes.Buffer)\r\n>         w := NewWriter(buf)\r\n>         const nFiles = (1 << 16) + 42\r\n>         for i := 0; i < nFiles; i++ {\r\n> -               _, err := w.Create(fmt.Sprintf(\"%d.dat\", i))\r\n> +               _, err := w.CreateHeader(&FileHeader{\r\n> +                       Name:   fmt.Sprintf(\"%d.dat\", i),\r\n> +                       Method: Store, // avoid Issue 6136 and Issue 6138\r\n> +               })\r\n>                 if err != nil {\r\n>                         t.Fatalf(\"creating file %d: %v\", i, err)\r\n>                 }\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-14 02:32:34.711610",
			"approval": true
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 12894043: archive/zip: remove an allocation, speed up a test",
	"created": "2013-08-13 21:29:35.233470",
	"patchsets": [
		1,
		3001,
		5001,
		10001
	],
	"modified": "2013-08-14 02:32:34.815290",
	"closed": true,
	"issue": 12894043
}