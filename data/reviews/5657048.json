{
	"description": "go/doc, godoc: regard lone examples as \"whole file\" examples\n\nFixes issue 2930.",
	"cc": [
		"r@golang.org",
		"gri@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r, gri (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-02-14 00:43:35.594678",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/14 01:07:58, rsc wrote:\n> Even so, godoc testing should say this.\n\nDone, and updated go help testfunc too.\n\nhttp://codereview.appspot.com/5657048/diff/1/src/pkg/go/doc/example.go\nFile src/pkg/go/doc/example.go (right):\n\nhttp://codereview.appspot.com/5657048/diff/1/src/pkg/go/doc/example.go#newcode24\nsrc/pkg/go/doc/example.go:24: var ex []*Example\nOn 2012/02/14 00:57:12, gri wrote:\n> s/ex/list/ ?\n\nDone.\n\nhttp://codereview.appspot.com/5657048/diff/1/src/pkg/go/doc/example.go#newcode26\nsrc/pkg/go/doc/example.go:26: onlyEx := true // does this file contain only example code\nOn 2012/02/14 00:57:12, gri wrote:\n> var hasTests bool // true if the file contains tests and benchmarks, too\n\nDone.\n\nhttp://codereview.appspot.com/5657048/diff/1/src/pkg/go/doc/example.go#newcode27\nsrc/pkg/go/doc/example.go:27: var fileEx []*Example\nOn 2012/02/14 00:57:12, gri wrote:\n> s/fileEx/flist/ ?\n\nDone.\n\nhttp://codereview.appspot.com/5657048/diff/1/src/pkg/go/doc/example.go#newcode35\nsrc/pkg/go/doc/example.go:35: onlyEx = false\nOn 2012/02/14 00:57:12, gri wrote:\n> hasTests = true\n\nDone.",
			"disapproval": false,
			"date": "2012-02-14 01:51:31.290228",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I can't tell what this is doing.  Documentation?\n",
			"disapproval": false,
			"date": "2012-02-14 00:46:57.811688",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nSome suggestions for variable renaming.\n\nhttp://codereview.appspot.com/5657048/diff/1/src/pkg/go/doc/example.go\nFile src/pkg/go/doc/example.go (right):\n\nhttp://codereview.appspot.com/5657048/diff/1/src/pkg/go/doc/example.go#newcode24\nsrc/pkg/go/doc/example.go:24: var ex []*Example\ns/ex/list/ ?\n\nhttp://codereview.appspot.com/5657048/diff/1/src/pkg/go/doc/example.go#newcode26\nsrc/pkg/go/doc/example.go:26: onlyEx := true // does this file contain only example code\nvar hasTests bool // true if the file contains tests and benchmarks, too\n\nhttp://codereview.appspot.com/5657048/diff/1/src/pkg/go/doc/example.go#newcode27\nsrc/pkg/go/doc/example.go:27: var fileEx []*Example\ns/fileEx/flist/ ?\n\nhttp://codereview.appspot.com/5657048/diff/1/src/pkg/go/doc/example.go#newcode35\nsrc/pkg/go/doc/example.go:35: onlyEx = false\nhasTests = true",
			"disapproval": false,
			"date": "2012-02-14 00:57:11.784947",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Even so, godoc testing should say this.\n",
			"disapproval": false,
			"date": "2012-02-14 01:07:58.675985",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 13, 2012 at 4:46 PM, Russ Cox <rsc@golang.org> wrote:\n> I can't tell what this is doing. \u00a0Documentation?\n\nMakes it possible to have an entire package files as example, rather\nthen only a single function. Motivated by the heap example, I guess.\n- gri\n",
			"disapproval": false,
			"date": "2012-02-14 00:58:45.513188",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM from a commentary perspective.",
			"disapproval": false,
			"date": "2012-02-14 05:20:52.790168",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=561bc290532c ***\n\ngo/doc, godoc: regard lone examples as \"whole file\" examples\n\nFixes issue 2930.\n\nR=r, gri, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5657048",
			"disapproval": false,
			"date": "2012-02-14 06:20:06.622476",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5657048: go/doc, godoc: regard lone examples as \"whole file\" examples",
	"created": "2012-02-14 00:43:31.226429",
	"patchsets": [
		1,
		3002,
		5001
	],
	"modified": "2012-02-14 06:20:08.419607",
	"closed": true,
	"issue": 5657048
}