{
	"description": "runtime: fix deadlock detector false negative\nThe issue was that scvg is assigned *after* the scavenger goroutine is started,\nso when the scavenger calls entersyscall() the g==scvg check can fail.\nFixes issue 5025.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-11 17:45:25.125910",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/proc.c\nFile src/pkg/runtime/proc.c (right):\n\nhttps://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/proc.c#newcode178\nsrc/pkg/runtime/proc.c:178: scvg->issystem = true;\nthe scavenger function should probably do g->issystem = true; at startup instead of having it done here too, right?\n\nhttps://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/proc.c#newcode1426\nsrc/pkg/runtime/proc.c:1426: runtime\u00b7newproc1(G** gp, FuncVal *fn, byte *argp, int32 narg, int32 nret, void *callerpc)\nG **gp\nspace before stars\n\nhttps://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/proc.c#newcode1466\nsrc/pkg/runtime/proc.c:1466: *gp = newg;\nif(gp != nil)\n   *gp = newg;\n\nand then you can drop the dummy variables from the various places.\n\nhttps://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/time.goc\nFile src/pkg/runtime/time.goc (right):\n\nhttps://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/time.goc#newcode122\nsrc/pkg/runtime/time.goc:122: timers.timerproc->issystem = true;\nanother line that should move",
			"disapproval": false,
			"date": "2013-03-11 20:30:36.707760",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/11 20:30:36, rsc wrote:\n> https://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/proc.c\n> File src/pkg/runtime/proc.c (right):\n> \n> https://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/proc.c#newcode178\n> src/pkg/runtime/proc.c:178: scvg->issystem = true;\n> the scavenger function should probably do g->issystem = true; at startup instead\n> of having it done here too, right?\n> \n> https://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/proc.c#newcode1426\n> src/pkg/runtime/proc.c:1426: runtime\u00b7newproc1(G** gp, FuncVal *fn, byte *argp,\n> int32 narg, int32 nret, void *callerpc)\n> G **gp\n> space before stars\n> \n> https://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/proc.c#newcode1466\n> src/pkg/runtime/proc.c:1466: *gp = newg;\n> if(gp != nil)\n>    *gp = newg;\n> \n> and then you can drop the dummy variables from the various places.\n> \n> https://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/time.goc\n> File src/pkg/runtime/time.goc (right):\n> \n> https://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/time.goc#newcode122\n> src/pkg/runtime/time.goc:122: timers.timerproc->issystem = true;\n> another line that should move\n\nPlease take a look at:\nhttps://codereview.appspot.com/7629045\nI think that is a simpler and better fix.",
			"disapproval": false,
			"date": "2013-03-12 08:21:50.963300",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/proc.c\nFile src/pkg/runtime/proc.c (right):\n\nhttps://codereview.appspot.com/7711043/diff/5001/src/pkg/runtime/proc.c#newcode178\nsrc/pkg/runtime/proc.c:178: scvg->issystem = true;\nOn 2013/03/11 20:30:36, rsc wrote:\n> the scavenger function should probably do g->issystem = true; at startup instead\n> of having it done here too, right?\n\nBoth places are incorrect, because another goroutine can dump stack in between. The correct place would be after g creation but before g submission (i.e. in newproc1). But I don't want to modify newproc1. Otherwise here or in scavenger is equally incorrect.",
			"disapproval": false,
			"date": "2013-03-12 08:26:13.619910",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-03-12 13:22:33.814240",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 7711043: runtime: fix deadlock detector false negative",
	"created": "2013-03-11 17:43:37.838730",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2013-03-12 13:22:35.070700",
	"closed": true,
	"issue": 7711043
}