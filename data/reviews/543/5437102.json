{
	"description": "json: fix a decode crash into array of wrong size\n\nFixes issue 2513",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"r@google.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-01 20:05:41.656306",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Changed the test.\n\nThe string panic is from:\n\nfunc MakeSlice(typ Type, len, cap int) Value {\n        if typ.Kind() != Slice {\n        panic(\"reflect.MakeSlice of non-slice type\")\n        }\n\n\nThat's a terrible error message to return to users, but it's better than\ncrashing.\n\nYou want me to fix the error message in this CL too?\n\n\nOn Thu, Dec 1, 2011 at 12:00 PM, Russ Cox <rsc@golang.org> wrote:\n\n> Can you make the test do\n>\n> if size == 1 {\n>    ...\n> } else {\n>   ...\n> }\n> ?\n>\n> There's already size==1 twice and that will avoid the\n> nested compare.\n>\n",
			"disapproval": false,
			"date": "2011-12-01 20:06:36.803550",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Dec 1, 2011, at 12:30 PM, Russ Cox wrote:\n\n> Okay, but why is json calling reflect.MakeSlice\n> with an array type?  It seems like that is the real bug.\n> \n> Russ\n\nyeah, that's what i thought too, and i why i thought this had been fixed. (reflect had a conflation)\n\n",
			"disapproval": false,
			"date": "2011-12-01 20:48:22.791368",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-12-01 19:56:10.783965",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "where is the panic(\"string\")?\nare there many?\n",
			"disapproval": false,
			"date": "2011-12-01 19:58:58.090881",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can you make the test do\n\nif size == 1 {\n    ...\n} else {\n   ...\n}\n?\n\nThere's already size==1 twice and that will avoid the\nnested compare.\n",
			"disapproval": false,
			"date": "2011-12-01 20:00:26.801325",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Okay, but why is json calling reflect.MakeSlice\nwith an array type?  It seems like that is the real bug.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-01 20:30:55.289596",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5437102: json: fix a decode crash into array of wrong size",
	"created": "2011-12-01 19:56:00.762125",
	"patchsets": [
		1,
		3,
		1002,
		6001
	],
	"modified": "2012-01-19 00:14:57.599627",
	"closed": true,
	"issue": 5437102
}