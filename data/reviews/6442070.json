{
	"description": "exp/inotify: Replace the eventBits struct with map type\n\nSee http://codereview.appspot.com/6427057/",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"minux.ma@gmail.com",
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"atomaths@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Note that you can update your code and run hg mail 6442070. You don't need to create a separate CL.",
			"disapproval": false,
			"date": "2012-08-03 19:11:49.072560",
			"approval": false
		},
		{
			"sender": "atomaths@gmail.com",
			"recipients": [
				"atomaths@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-08-01 11:08:47.626630",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This will be nondeterministic. Please keep using the slice. Add masks to\r\nthe struct.\r\n",
			"disapproval": false,
			"date": "2012-08-01 15:47:32.672980",
			"approval": false
		},
		{
			"sender": "atomaths@gmail.com",
			"recipients": [
				"atomaths@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the tip.\n\nI understood what the problem is, but I do not know the exact solution.\nBecause e.Mask can be combined value. (0x40000020 == IN_OPEN|IN_ISDIR)\n\nAnyway It seems that I do not have a good understanding of a bit mask.\nI understand when all the values are single bits, the table can be correct.\nHowever, I do not know How to mask e.Mask to single bit. I'm sorry.",
			"disapproval": false,
			"date": "2012-08-06 05:29:08.136070",
			"approval": false
		},
		{
			"sender": "atomaths@gmail.com",
			"recipients": [
				"atomaths@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-09 14:11:54.666470",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"atomaths@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "can't find the diff in the rietveld, could you please 'hg upload 6442070' again?",
			"disapproval": false,
			"date": "2012-08-09 09:18:20.225150",
			"approval": false
		},
		{
			"sender": "atomaths@gmail.com",
			"recipients": [
				"atomaths@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://www.kernel.org/pub/linux/kernel/people/rml/inotify/headers/inotify.h\n\nAccording to the header file, IN_CLOSE and IN_MOVE are helper events.\nTherefore, we can use it for AddWatch but the e.Mask, in Event's String method, \nseemed unlikely to be passed as IN_CLOSE or IN_MOVE.\nI think that IN_CLOSE and IN_MOVE in eventBits struct do not need to print purpose only.\nAll other events except IN_CLOSE and IN_MOVE are single bits.\nI hope I got the right solution at this time. I have tested it. Thanks.",
			"disapproval": false,
			"date": "2012-08-09 07:00:07.444400",
			"approval": false
		},
		{
			"sender": "atomaths@gmail.com",
			"recipients": [
				"atomaths@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://www.kernel.org/pub/linux/kernel/people/rml/inotify/headers/inotify.h\n\nAccording to the header file, IN_CLOSE and IN_MOVE are helper events.\nTherefore, we can use it for AddWatch but the e.Mask, in Event's String method, \nseemed unlikely to be passed as IN_CLOSE or IN_MOVE.\nI think that IN_CLOSE and IN_MOVE in eventBits struct do not need to print\npurpose only.\nAll other events except IN_CLOSE and IN_MOVE are single bits.\nI hope I got the right solution at this time. I have tested it. Thanks.",
			"disapproval": false,
			"date": "2012-08-09 08:33:26.791730",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"atomaths@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=close\n\nObsolete. Code has moved to https://code.google.com/p/go/source/browse/fsnotify/fsnotify_linux.go?repo=exp in different form by now.",
			"disapproval": false,
			"date": "2013-06-17 21:22:48.906130",
			"approval": false
		}
	],
	"owner_email": "atomaths@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Jongmin Kim",
	"subject": "code review 6442070: exp/inotify: Replace the eventBits struct with map type",
	"created": "2012-08-01 11:08:10.605570",
	"patchsets": [
		1,
		2001,
		4002,
		8001,
		3,
		12001,
		3002,
		3003,
		6005
	],
	"modified": "2013-06-17 21:22:48.990360",
	"closed": false,
	"issue": 6442070
}