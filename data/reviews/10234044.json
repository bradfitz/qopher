{
	"description": "testing: add -outputdir flag so \"go test\" controls where the files are written\nObscure misfeature now fixed: When run from \"go test\", profiles were always\nwritten in the package's source directory. This change puts them in the directory\nwhere \"go test\" is run.\nAlso fix a couple of problems causing errors in testing.after to go unreported\nunless -v was set.",
	"cc": [
		"rsc@golang.org",
		"minux.ma@gmail.com",
		"iant@golang.org",
		"alex.brainman@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-06-13 00:02:26.271300",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-12 19:01:34.815070",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10234044/diff/1/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttps://codereview.appspot.com/10234044/diff/1/src/pkg/testing/testing.go#newcode525\nsrc/pkg/testing/testing.go:525: // Simple implementation to avoid pulling in path/filepath.\nI hate to say this but I think you have to pull in path/filepath. This code is wrong on Windows, and you don't want to try to maintain a second copy of the logic here.",
			"disapproval": false,
			"date": "2013-06-12 19:12:07.358120",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10234044/diff/1/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttps://codereview.appspot.com/10234044/diff/1/src/pkg/testing/testing.go#newcode525\nsrc/pkg/testing/testing.go:525: // Simple implementation to avoid pulling in path/filepath.\ni think all i need of any complexity is a version of IsAbs, which is small and easy to parameterize using runtime.GOOS. how does that sound?\n\nthe join is ok as is, i believe.",
			"disapproval": false,
			"date": "2013-06-12 21:31:53.619940",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "cmd/go docs for the new flag -outputdir?",
			"disapproval": false,
			"date": "2013-06-12 19:24:00.708080",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Apologies for my Windows ignorance, but now I don't even see how to do this using path/filepath, let alone custom code. Can someone capable please advise?",
			"disapproval": false,
			"date": "2013-06-12 21:45:40.555890",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jun 13, 2013 at 5:45 AM, <r@golang.org> wrote:\r\n\r\n> Apologies for my Windows ignorance, but now I don't even see how to do\r\n> this using path/filepath, let alone custom code. Can someone capable\r\n> please advise?\r\n>\r\ni must have missed something obvious, but what's wrong with this direct\r\ntranslation of your absolute function into one that uses path/filepath?\r\n\r\n// absolute returns the file name as an absolute path if outputDir is set\r\n// (assuming *outputDir is itself absolute).\r\n// Simple implementation that uses path/filepath.\r\nfunc absolute(path string) string {\r\nif *outputDir == \"\" || path == \"\" || filepath.IsAbs(path) {\r\n return path\r\n}\r\nreturn filepath.Join(*outputDir, path)\r\n}\r\n\r\nthe only problem i can think of is when *outputDir itself is relative, but\r\ni guess\r\ncmd/go should rewrite any relative directory into absolute path (or one that\r\nrelative to the package source directory).\r\n",
			"disapproval": false,
			"date": "2013-06-12 22:04:21.564610",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "OK, i have a plan. Sheesh.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-12 22:00:05.241900",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10234044/diff/8001/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttps://codereview.appspot.com/10234044/diff/8001/src/pkg/testing/testing.go#newcode545\nsrc/pkg/testing/testing.go:545: } else if path[0] == os.PathSeparator {\nBetter to call os.IsPathSeparator(path[0]) here; it will handle both `/` and `\\` on Windows.",
			"disapproval": false,
			"date": "2013-06-12 22:49:19.723330",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-12 22:26:09.380000",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't want to import filepath into testing.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-12 22:26:59.444790",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10234044/diff/8001/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttps://codereview.appspot.com/10234044/diff/8001/src/pkg/testing/testing.go#newcode545\nsrc/pkg/testing/testing.go:545: } else if path[0] == os.PathSeparator {\nOn 2013/06/12 22:49:20, iant wrote:\n> Better to call os.IsPathSeparator(path[0]) here; it will handle both `/` and `\\`\n> on Windows.\n\nThis condition isn't used on Windows.",
			"disapproval": false,
			"date": "2013-06-12 23:03:19.770590",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10234044/diff/18001/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttps://codereview.appspot.com/10234044/diff/18001/src/pkg/testing/testing.go#newcode524\nsrc/pkg/testing/testing.go:524: // (assuming outputDir is itself absolute).\nI don't see why outputDir should be absolute path. But, if it should be, this (assumption) should be documented in help flags. I also think you should verify that outputDir is in fact absolute path.\n\nhttps://codereview.appspot.com/10234044/diff/18001/src/pkg/testing/testing.go#newcode526\nsrc/pkg/testing/testing.go:526: func absolute(path string) string {\nThis function looks good to me.",
			"disapproval": false,
			"date": "2013-06-13 00:05:19.452570",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Also that test is wrong on Windows. (But nothing is right, either.)\r\nSee the comments in the updated CL.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-12 22:27:40.077340",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The solution to that is to change the function name. PTAL.\r\n",
			"disapproval": false,
			"date": "2013-06-13 00:12:53.309250",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On windows, is \\a\\b\\c an absolute path (relative to the current volume)?\n\ncould we instead try to solve a simpler problem?\nwe can say that when outputdir is set, we will always treat other file paths\nfrom arguments as relative to outputdir.\n(we can even undocument outputdir and treat it as an internal option just\nfor the go tool)\n\nthen the burden moves to cmd/go to correctly handle outputdir and other\nuser provided filepaths (because it does import path/filepath, that should\nbe easy to do)",
			"disapproval": false,
			"date": "2013-06-12 22:45:50.536210",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FWIW, making testing depend on path/filepath will bring in only\r\npath/filepath: all the dependencies of path/filepath are already used by\r\ntesting.\r\n\r\n(go list -f '{{.ImportPath}}: {{.Deps}}' path/filepath testing)\r\n",
			"disapproval": false,
			"date": "2013-06-12 22:58:47.504560",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3018dd1d3e6f ***\n\ntesting: add -outputdir flag so \"go test\" controls where the files are written\nObscure misfeature now fixed: When run from \"go test\", profiles were always\nwritten in the package's source directory. This change puts them in the directory\nwhere \"go test\" is run.\nAlso fix a couple of problems causing errors in testing.after to go unreported\nunless -v was set.\n\nR=rsc, minux.ma, iant, alex.brainman\nCC=golang-dev\nhttps://codereview.appspot.com/10234044",
			"disapproval": false,
			"date": "2013-06-13 01:13:37.685560",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd rather not expand testing's dependencies at all, plus it also\r\nrequires updating the package tests for path/fliepath.\r\n",
			"disapproval": false,
			"date": "2013-06-12 23:02:41.964270",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "(It should be.)\n\nhttps://codereview.appspot.com/10234044/diff/8001/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttps://codereview.appspot.com/10234044/diff/8001/src/pkg/testing/testing.go#newcode534\nsrc/pkg/testing/testing.go:534: // Problem: if path == \"C:A\" and outputdir == \"D:B\" it's unclear\ns/\"D:B\"/\"C:\\Go\"/\n\nThe real problem only occurs when the two are on the same drive (each drive has its own \"current directory\").\n\nhttps://codereview.appspot.com/10234044/diff/8001/src/pkg/testing/testing.go#newcode545\nsrc/pkg/testing/testing.go:545: } else if path[0] == os.PathSeparator {\nOn 2013/06/12 22:49:20, iant wrote:\n> Better to call os.IsPathSeparator(path[0]) here; it will handle both `/` and `\\`\n> on Windows.\n\nYes, and s/else/\\n/, so that on Windows, -cpuprofile=\\foo is treated as an absolute path.",
			"disapproval": false,
			"date": "2013-06-12 23:05:25.642990",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nNo need for docs on this flag. It's only for use by the go command.",
			"disapproval": false,
			"date": "2013-06-13 01:11:57.537610",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, minux.ma@gmail.com, iant@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-12 23:34:57.364980",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, minux.ma@gmail.com, iant@golang.org, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-13 00:12:23.661020",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. For what it worth :-)\n\nAlex",
			"disapproval": false,
			"date": "2013-06-13 00:14:01.444920",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2013-06-13 00:14:12.450780",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jun 13, 2013 at 8:14 AM, <minux.ma@gmail.com> wrote:\r\n\r\n> LGTM.\r\n\r\nIf you don't plan to update \"go help testflag\".\r\n",
			"disapproval": false,
			"date": "2013-06-13 00:15:48.546130",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You got them anyway.\r\n",
			"disapproval": false,
			"date": "2013-06-13 01:14:22.764590",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 10234044: testing: add -outputdir flag so \"go test\" controls wher...",
	"created": "2013-06-12 19:01:31.231720",
	"patchsets": [
		1,
		8001,
		18001,
		13002,
		2002
	],
	"modified": "2013-06-13 01:14:23.152080",
	"closed": true,
	"issue": 10234044
}