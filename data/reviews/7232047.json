{
	"description": "cmd/godoc: use go/build.(*Context).Import instead of ImportDir\nImportDir now returns error if the directory is not found.\nFixes issue 4696.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This may fix it but I don't understand why. It sounds like ImportDir is broken. I will roll back adg's change for now.\n\nhttps://codereview.appspot.com/7232047/diff/4001/src/cmd/godoc/godoc.go\nFile src/cmd/godoc/godoc.go (right):\n\nhttps://codereview.appspot.com/7232047/diff/4001/src/cmd/godoc/godoc.go#newcode1019\nsrc/cmd/godoc/godoc.go:1019: if dir, err := ctxt.Import(\".\", abspath, 0); err == nil {\nI'm confused. If ImportDir is returning an error because the directory does not exist, why would it have GoFiles and CgoFiles set in dir?",
			"disapproval": false,
			"date": "2013-01-28 17:35:07.131140",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-27 11:25:21.883640",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jan 29, 2013 at 1:35 AM, <rsc@golang.org> wrote:\r\n\r\n> This may fix it but I don't understand why. It sounds like ImportDir is\r\n> broken. I will roll back adg's change for now.\r\n>\r\nAs I said on the issue tracker, we should discuss whether that change is an\r\nAPI\r\nchange.\r\n\r\n>\r\n> https://codereview.appspot.**com/7232047/diff/4001/src/cmd/**\r\n> godoc/godoc.go<https://codereview.appspot.com/7232047/diff/4001/src/cmd/godoc/godoc.go>\r\n> File src/cmd/godoc/godoc.go (right):\r\n>\r\n> https://codereview.appspot.**com/7232047/diff/4001/src/cmd/**\r\n> godoc/godoc.go#newcode1019<https://codereview.appspot.com/7232047/diff/4001/src/cmd/godoc/godoc.go#newcode1019>\r\n> src/cmd/godoc/godoc.go:1019: if dir, err := ctxt.Import(\".\", abspath,\r\n> 0); err == nil {\r\n> I'm confused. If ImportDir is returning an error because the directory\r\n> does not exist, why would it have GoFiles and CgoFiles set in dir?\r\n>\r\nthe new ImportDir implementation first call Import like this and then check\r\nwhether\r\nthe directory exists, if it's not, it just return the pacakge and a non-nil\r\nerror, so\r\nGoFiles and CgoFiles are not affected.\r\n",
			"disapproval": false,
			"date": "2013-01-28 17:39:33.896720",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes, I am not sure whether the fix should be kept at all. For now I have\r\ndisabled it in CL 7235052 so that godoc will start working again.\r\n",
			"disapproval": false,
			"date": "2013-01-28 17:50:50.069570",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 7232047: cmd/godoc: use go/build.(*Context).Import instead of Im...",
	"created": "2013-01-27 11:24:40.671950",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2013-02-02 16:57:23.932250",
	"closed": true,
	"issue": 7232047
}