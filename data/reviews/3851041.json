{
	"description": "\t\tnet/dnsclient.go: Add LookupReverse(addr string) []string, os.Error\n\n\t  I have added a function to perform reverse lookups by retrieving the appropriate PTR records.\n\t  There is also an accompanying function/test to compute the in-addr.arpa. and ip6.arpa.\n\n    I also added a reverse static lookup for /etc/hosts.",
	"cc": [
		"adg@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "etherealflaim@gmail.com",
			"recipients": [
				"etherealflaim@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change.",
			"disapproval": false,
			"date": "2010-12-30 11:36:37.277747",
			"approval": false
		},
		{
			"sender": "etherealflaim@gmail.com",
			"recipients": [
				"etherealflaim@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2010-12-30 20:42:40.849476",
			"approval": false
		},
		{
			"sender": "kyle@kylelemons.net",
			"recipients": [
				"etherealflaim@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"kyle@kylelemons.net",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL.\n\nComments and questions inline.\n\nOn 2011/01/04 05:29:20, adg wrote:\n> http://codereview.appspot.com/3851041/diff/20001/src/pkg/net/dnsclient.go\n> File src/pkg/net/dnsclient.go (right):\n> \n> http://codereview.appspot.com/3851041/diff/20001/src/pkg/net/dnsclient.go#newcode369\n> src/pkg/net/dnsclient.go:369: type PTR struct {\n> This isn't used anywhere as far as I can see.\n> \n> http://codereview.appspot.com/3851041/diff/20001/src/pkg/net/dnsclient.go#newcode376\n\nRemoved.\n\n> src/pkg/net/dnsclient.go:376: if strings.Count(addr, \".\") == 3 {\n> First handle the error case, and return.\n> Then handle this case, and return.\n> Finally, handle the ipv6 case.\n> \n> http://codereview.appspot.com/3851041/diff/20001/src/pkg/net/dnsclient.go#newcode378\n\nRewritten.\n\n> src/pkg/net/dnsclient.go:378: arpa = octets[3] + \".\" + octets[2] + \".\" +\n> octets[1] + \".\" + octets[0] + \".in-addr.arpa.\"\n> This doesn't validate the input at all. Is that desirable?\n> \n> http://codereview.appspot.com/3851041/diff/20001/src/pkg/net/dnsclient.go#newcode379\n> src/pkg/net/dnsclient.go:379: } else if strings.Count(addr, \":\") >= 2 {\n> This section on decoding the ipv6 address is much more complex than it need be,\n> largely because it tries to manipulate text instead of the actual semantic data.\n> \n> First parse the IP address using the ParseIP function, then transform it to the\n> desired output format with something like:\n> \n>         s := fmt.Sprintf(\"%x\", ip)\n>         var buf bytes.Buffer\n>         for i := len(s)-1; i >= 0; i-- {\n>                 if buf.Len() > 0 {\n>                         buf.WriteByte('.')\n>                 }\n>                 buf.WriteByte(s[i])\n>         }\n>         return buf.String() + \".ip6.arpa.\"\n> \n> http://codereview.appspot.com/3851041/diff/20001/src/pkg/net/hosts.go\n> File src/pkg/net/hosts.go (right):\n> \n> http://codereview.appspot.com/3851041/diff/20001/src/pkg/net/hosts.go#newcode50\n\nDone.\n\n> src/pkg/net/hosts.go:50: is[f[0]] = append(is[f[0]], h)\n> Forward mapping is not the same as reverse mapping. This cache would prevent\n> doing an RDNS lookup of an IP that is in the hosts file.\n\nIs that not desireable?  The primary reason I added this was because local IPs in the hosts file won't resolve and (for whatever reason) ::1 doesn't resolve to localhost when you look up the PTR record for 1.*.ip6.arpa. even though 1.0.0.127.in-addr.arpa. looks up to localhost.  It is in my hosts file however, so with this added I get the proper reverse lookup for ::1.  My machine also has fe80::1 mapped to localhost, which is in the hosts file, which probably wouldn't rDNS properly either.  Should I do the RDNS and only look in the hosts file if the RDNS doesn't come back?\n\n~Kyle",
			"disapproval": false,
			"date": "2011-01-05 00:48:54.319356",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"etherealflaim@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/3851041/diff/20001/src/pkg/net/dnsclient.go\nFile src/pkg/net/dnsclient.go (right):\n\nhttp://codereview.appspot.com/3851041/diff/20001/src/pkg/net/dnsclient.go#newcode369\nsrc/pkg/net/dnsclient.go:369: type PTR struct {\nThis isn't used anywhere as far as I can see.\n\nhttp://codereview.appspot.com/3851041/diff/20001/src/pkg/net/dnsclient.go#newcode376\nsrc/pkg/net/dnsclient.go:376: if strings.Count(addr, \".\") == 3 {\nFirst handle the error case, and return.\nThen handle this case, and return.\nFinally, handle the ipv6 case.\n\nhttp://codereview.appspot.com/3851041/diff/20001/src/pkg/net/dnsclient.go#newcode378\nsrc/pkg/net/dnsclient.go:378: arpa = octets[3] + \".\" + octets[2] + \".\" + octets[1] + \".\" + octets[0] + \".in-addr.arpa.\"\nThis doesn't validate the input at all. Is that desirable?\n\nhttp://codereview.appspot.com/3851041/diff/20001/src/pkg/net/dnsclient.go#newcode379\nsrc/pkg/net/dnsclient.go:379: } else if strings.Count(addr, \":\") >= 2 {\nThis section on decoding the ipv6 address is much more complex than it need be, largely because it tries to manipulate text instead of the actual semantic data.\n\nFirst parse the IP address using the ParseIP function, then transform it to the desired output format with something like:\n\n        s := fmt.Sprintf(\"%x\", ip)\n        var buf bytes.Buffer\n        for i := len(s)-1; i >= 0; i-- {\n                if buf.Len() > 0 {\n                        buf.WriteByte('.')\n                }\n                buf.WriteByte(s[i])\n        }\n        return buf.String() + \".ip6.arpa.\"\n\nhttp://codereview.appspot.com/3851041/diff/20001/src/pkg/net/hosts.go\nFile src/pkg/net/hosts.go (right):\n\nhttp://codereview.appspot.com/3851041/diff/20001/src/pkg/net/hosts.go#newcode50\nsrc/pkg/net/hosts.go:50: is[f[0]] = append(is[f[0]], h)\nForward mapping is not the same as reverse mapping. This cache would prevent doing an RDNS lookup of an IP that is in the hosts file.",
			"disapproval": false,
			"date": "2011-01-04 05:29:20.754727",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"etherealflaim@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"kyle@kylelemons.net",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go\nFile src/pkg/net/dnsclient.go (right):\n\nhttp://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode369\nsrc/pkg/net/dnsclient.go:369: // Get the in-addr.arpa. or ip6.arpa. for the address\n// reverseaddr returns the..\n\nSee the other top-level comments on functions/types.\n\nhttp://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode371\nsrc/pkg/net/dnsclient.go:371: // Parse the IP\nThese comments are obvious. You can remove all the comments, except as noted.\n\nhttp://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode381\nsrc/pkg/net/dnsclient.go:381: // Otherwise, assume it's an IPv6 IP\n// must be ipv6\n\nhttp://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode395\nsrc/pkg/net/dnsclient.go:395: // This function looks up the PTR records for the given address and returns\nSee the comment for LookupHost to get an idea as to how to re-write this comment.\n\nhttp://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode400\nsrc/pkg/net/dnsclient.go:400: if entries != nil && len(entries) > 0 {\nif len(entries) > 0 {\n\nhttp://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode413\nsrc/pkg/net/dnsclient.go:413: for i := 0; i < len(records); i++ {\nfor i := range records {\n\nhttp://codereview.appspot.com/3851041/diff/26001/src/pkg/net/net_test.go\nFile src/pkg/net/net_test.go (right):\n\nhttp://codereview.appspot.com/3851041/diff/26001/src/pkg/net/net_test.go#newcode86\nsrc/pkg/net/net_test.go:86: var revAddrTests = []RevAddrTest{\nYou can (and should) put the struct definition here in-line:\n\nvar revAddrTests = []struct{\n         Addr      string\n         Reverse   string\n         ErrPrefix string\n}{\n\nhttp://codereview.appspot.com/3851041/diff/26001/src/pkg/net/net_test.go#newcode104\nsrc/pkg/net/net_test.go:104: t.Errorf(\"#%d: nil error, expected '%s'\", i, tt.ErrPrefix)\nerror messages should be of the form\n\"expected x, got y\"\nin this case\n\"expected %q, got <nil>\"\n\nsame for the other errors",
			"disapproval": false,
			"date": "2011-01-05 02:39:39.516705",
			"approval": false
		},
		{
			"sender": "kyle@kylelemons.net",
			"recipients": [
				"etherealflaim@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"kyle@kylelemons.net",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL.\n\nI still left the local hosts file lookup before the PTR lookup.  Let me know if you think it should be the other way around or separated into two functions or the hosts lookup left out completely.\n\nOn 2011/01/05 02:39:39, adg wrote:\n> http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go\n> File src/pkg/net/dnsclient.go (right):\n> \n> http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode369\n> src/pkg/net/dnsclient.go:369: // Get the in-addr.arpa. or ip6.arpa. for the\n> address\n> // reverseaddr returns the..\n> \n> See the other top-level comments on functions/types.\n> \n> http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode371\n> src/pkg/net/dnsclient.go:371: // Parse the IP\n> These comments are obvious. You can remove all the comments, except as noted.\n> \n> http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode381\n> src/pkg/net/dnsclient.go:381: // Otherwise, assume it's an IPv6 IP\n> // must be ipv6\n> \n> http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode395\n> src/pkg/net/dnsclient.go:395: // This function looks up the PTR records for the\n> given address and returns\n> See the comment for LookupHost to get an idea as to how to re-write this\n> comment.\n> \n> http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode400\n> src/pkg/net/dnsclient.go:400: if entries != nil && len(entries) > 0 {\n> if len(entries) > 0 {\n> \n> http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/dnsclient.go#newcode413\n> src/pkg/net/dnsclient.go:413: for i := 0; i < len(records); i++ {\n> for i := range records {\n> \n> http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/net_test.go\n> File src/pkg/net/net_test.go (right):\n> \n> http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/net_test.go#newcode86\n> src/pkg/net/net_test.go:86: var revAddrTests = []RevAddrTest{\n> You can (and should) put the struct definition here in-line:\n> \n> var revAddrTests = []struct{\n>          Addr      string\n>          Reverse   string\n>          ErrPrefix string\n> }{\n> \n> http://codereview.appspot.com/3851041/diff/26001/src/pkg/net/net_test.go#newcode104\n> src/pkg/net/net_test.go:104: t.Errorf(\"#%d: nil error, expected '%s'\", i,\n> tt.ErrPrefix)\n> error messages should be of the form\n> \"expected x, got y\"\n> in this case\n> \"expected %q, got <nil>\"\n> \n> same for the other errors",
			"disapproval": false,
			"date": "2011-01-05 03:40:13.427296",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"etherealflaim@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Looking pretty good. Adding Russ to reviewers.\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go\nFile src/pkg/net/dnsclient.go (right):\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode395\nsrc/pkg/net/dnsclient.go:395: // It returns the an array of qualified hostnames found in the PTR records\ns/It/and/\nand put a period at the line.\n\n(This is public documentation.)\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/hosts.go\nFile src/pkg/net/hosts.go (right):\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/hosts.go#newcode76\nsrc/pkg/net/hosts.go:76: func rlookupStaticHost(host string) []string {\ns/host/addr/\n\nand throughout the rest of the function",
			"disapproval": false,
			"date": "2011-01-09 23:20:58.762379",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"etherealflaim@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go\nFile src/pkg/net/dnsclient.go (right):\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode19\nsrc/pkg/net/dnsclient.go:19: \"fmt\"\nI'm not happy about importing fmt and bytes\ninto such a low-level package, but package net\nis up for a rewrite anyway, so these can stay.\n\nPlease sort the import list.\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode375\nsrc/pkg/net/dnsclient.go:375: return \"\", os.NewError(\"Improperly formatted IPv4 or IPv6 address: \" + addr)\nerrors begin with lowercase.\nalso should be like the other errors in this file.\n\nreturn \"\", &DNSError{Error: \"unrecognized address\", Name: addr}\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode394\nsrc/pkg/net/dnsclient.go:394: // LookupReverse looks for addr using the local hosts file and rDNS\n// LookupAddr performs a reverse lookup for the given address,\n// returning a list of names mapping to that address.\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode396\nsrc/pkg/net/dnsclient.go:396: func LookupReverse(addr string) (entries []string, err os.Error) {\ns/entries/name/\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode396\nsrc/pkg/net/dnsclient.go:396: func LookupReverse(addr string) (entries []string, err os.Error) {\ns/LookupReverse/LookupAddr/\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/hosts.go\nFile src/pkg/net/hosts.go (right):\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/hosts.go#newcode22\nsrc/pkg/net/hosts.go:22: hostips map[string][]string\nbyName\n\nhttp://codereview.appspot.com/3851041/diff/31001/src/pkg/net/hosts.go#newcode23\nsrc/pkg/net/hosts.go:23: iphosts map[string][]string\nbyAddr",
			"disapproval": false,
			"date": "2011-01-11 16:51:29.600785",
			"approval": false
		},
		{
			"sender": "etherealflaim@gmail.com",
			"recipients": [
				"etherealflaim@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL.\n\nThanks for the reviews, guys.\n\nOn 2011/01/11 16:51:29, rsc wrote:\n> http://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go\n> File src/pkg/net/dnsclient.go (right):\n> \n> http://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode19\n> src/pkg/net/dnsclient.go:19: \"fmt\"\n> I'm not happy about importing fmt and bytes\n> into such a low-level package, but package net\n> is up for a rewrite anyway, so these can stay.\n> \n> Please sort the import list.\n> \n> http://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode375\n> src/pkg/net/dnsclient.go:375: return \"\", os.NewError(\"Improperly formatted IPv4\n> or IPv6 address: \" + addr)\n> errors begin with lowercase.\n> also should be like the other errors in this file.\n> \n> return \"\", &DNSError{Error: \"unrecognized address\", Name: addr}\n> \n> http://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode394\n> src/pkg/net/dnsclient.go:394: // LookupReverse looks for addr using the local\n> hosts file and rDNS\n> // LookupAddr performs a reverse lookup for the given address,\n> // returning a list of names mapping to that address.\n> \n> http://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode396\n> src/pkg/net/dnsclient.go:396: func LookupReverse(addr string) (entries []string,\n> err os.Error) {\n> s/entries/name/\n> \n> http://codereview.appspot.com/3851041/diff/31001/src/pkg/net/dnsclient.go#newcode396\n> src/pkg/net/dnsclient.go:396: func LookupReverse(addr string) (entries []string,\n> err os.Error) {\n> s/LookupReverse/LookupAddr/\n> \n> http://codereview.appspot.com/3851041/diff/31001/src/pkg/net/hosts.go\n> File src/pkg/net/hosts.go (right):\n> \n> http://codereview.appspot.com/3851041/diff/31001/src/pkg/net/hosts.go#newcode22\n> src/pkg/net/hosts.go:22: hostips map[string][]string\n> byName\n> \n> http://codereview.appspot.com/3851041/diff/31001/src/pkg/net/hosts.go#newcode23\n> src/pkg/net/hosts.go:23: iphosts map[string][]string\n> byAddr",
			"disapproval": false,
			"date": "2011-01-11 18:41:48.531391",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"etherealflaim@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-01-19 19:52:07.898893",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"etherealflaim@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as 944ddec476c5 ***\n\nnet: add LookupAddr\n\nR=adg, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/3851041\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-01-19 20:11:05.227459",
			"approval": false
		}
	],
	"owner_email": "etherealflaim@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Kyle Lemons",
	"subject": "code review 3851041: \tnet/dnsclient.go: Add LookupReverse(addr string) []str...",
	"created": "2010-12-30 11:34:01.305903",
	"patchsets": [
		1,
		2001,
		8001,
		12001,
		16001,
		20001,
		26001,
		31001,
		39001
	],
	"modified": "2011-01-19 20:11:05.227459",
	"closed": false,
	"issue": 3851041
}