{
	"description": "net/http: implement CloseNotifier\n\nFixes issue 2510",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-12-03 21:59:24.073750",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6867050/diff/4001/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttps://codereview.appspot.com/6867050/diff/4001/src/pkg/net/http/server.go#newcode102\nsrc/pkg/net/http/server.go:102: // Closed returns a channel which is closed when the client\nOn 2012/12/04 15:30:31, rsc wrote:\n> Can we make it a chan bool that gets a single true sent instead?\n\nI have no preference either way.  I think the broadcast close is fun, but maybe too surprising?  And people could do that on their own if they want that.\n\n> I'm just having trouble with the multiple meanings of close here.\n> Should probably also be CloseNotify to match the type name:\n> \n> // CloseNotify returns a channel that will receive true when the\n> // client connection has been lost or closed.\n> CloseNotify() chan bool\n\nI used the name you suggested in http://code.google.com/p/go/issues/detail?id=2510#c18\n\nI also assume a receive-only chan still?",
			"disapproval": false,
			"date": "2012-12-04 15:57:12.873510",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6867050/diff/4001/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttps://codereview.appspot.com/6867050/diff/4001/src/pkg/net/http/server.go#newcode102\nsrc/pkg/net/http/server.go:102: // Closed returns a channel which is closed when the client\nCan we make it a chan bool that gets a single true sent instead?\nI'm just having trouble with the multiple meanings of close here.\nShould probably also be CloseNotify to match the type name:\n\n// CloseNotify returns a channel that will receive true when the\n// client connection has been lost or closed.\nCloseNotify() chan bool",
			"disapproval": false,
			"date": "2012-12-04 15:30:31.680850",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-04 21:25:30.583980",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6867050/diff/4/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttps://codereview.appspot.com/6867050/diff/4/src/pkg/net/http/server.go#newcode151\nsrc/pkg/net/http/server.go:151: c.closeNotifyc = make(chan bool)\nmake(chan bool, 1) to avoid hanging the sender if no one is receiving.",
			"disapproval": false,
			"date": "2012-12-06 03:14:45.751780",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6867050/diff/4/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttps://codereview.appspot.com/6867050/diff/4/src/pkg/net/http/server.go#newcode151\nsrc/pkg/net/http/server.go:151: c.closeNotifyc = make(chan bool)\nOn 2012/12/06 03:14:45, rsc wrote:\n> make(chan bool, 1) to avoid hanging the sender if no one is receiving.\n\ngood catch.  missed that when changing it from chan struct{}.",
			"disapproval": false,
			"date": "2012-12-06 03:16:38.236630",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3292433291b2 ***\n\nnet/http: implement CloseNotifier\n\nFixes issue 2510\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/6867050",
			"disapproval": false,
			"date": "2012-12-06 03:25:44.614030",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6867050: net/http: implement CloseNotifier",
	"created": "2012-12-03 21:59:08.771340",
	"patchsets": [
		1,
		1001,
		4001,
		10001,
		4,
		14001
	],
	"modified": "2012-12-12 23:51:26.483040",
	"closed": true,
	"issue": 6867050
}