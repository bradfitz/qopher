{
	"description": "os: avoid panic when testing errors on Plan 9",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"akumar@mail.nanosouffle.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-04-12 13:33:24.647626",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nsearching English for a substring seems fragile, but that was there before.\n this is an improvement.\n\nOn Thu, Apr 12, 2012 at 6:33 AM, <ality@pbrane.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go/\n>\n>\n> Description:\n> os: avoid panic when testing errors on Plan 9\n>\n> Please review this at http://codereview.appspot.com/**6017043/<http://codereview.appspot.com/6017043/>\n>\n> Affected files:\n>  M src/pkg/os/error_plan9.go\n>\n>\n> Index: src/pkg/os/error_plan9.go\n> ==============================**==============================**=======\n> --- a/src/pkg/os/error_plan9.go\n> +++ b/src/pkg/os/error_plan9.go\n> @@ -5,6 +5,9 @@\n>  package os\n>\n>  func isExist(err error) bool {\n> +       if err == nil {\n> +               return false\n> +       }\n>        if pe, ok := err.(*PathError); ok {\n>                err = pe.Err\n>        }\n> @@ -12,6 +15,9 @@\n>  }\n>\n>  func isNotExist(err error) bool {\n> +       if err == nil {\n> +               return false\n> +       }\n>        if pe, ok := err.(*PathError); ok {\n>                err = pe.Err\n>        }\n> @@ -19,6 +25,9 @@\n>  }\n>\n>  func isPermission(err error) bool {\n> +       if err == nil {\n> +               return false\n> +       }\n>        if pe, ok := err.(*PathError); ok {\n>                err = pe.Err\n>        }\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-04-12 14:13:42.041439",
			"approval": true
		},
		{
			"sender": "akumar@mail.nanosouffle.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nOn 12 April 2012 07:13, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> LGTM\n>\n> searching English for a substring seems fragile, but that was there before.\n> \u00a0this is an improvement.\n>\n> On Thu, Apr 12, 2012 at 6:33 AM, <ality@pbrane.org> wrote:\n>>\n>> Reviewers: golang-dev_googlegroups.com,\n>>\n>> Message:\n>> Hello golang-dev@googlegroups.com,\n>>\n>> I'd like you to review this change to\n>> https://code.google.com/p/go/\n>>\n>>\n>> Description:\n>> os: avoid panic when testing errors on Plan 9\n>>\n>> Please review this at http://codereview.appspot.com/6017043/\n>>\n>> Affected files:\n>> \u00a0M src/pkg/os/error_plan9.go\n>>\n>>\n>> Index: src/pkg/os/error_plan9.go\n>> ===================================================================\n>> --- a/src/pkg/os/error_plan9.go\n>> +++ b/src/pkg/os/error_plan9.go\n>> @@ -5,6 +5,9 @@\n>> \u00a0package os\n>>\n>> \u00a0func isExist(err error) bool {\n>> + \u00a0 \u00a0 \u00a0 if err == nil {\n>> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return false\n>> + \u00a0 \u00a0 \u00a0 }\n>> \u00a0 \u00a0 \u00a0 \u00a0if pe, ok := err.(*PathError); ok {\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0err = pe.Err\n>> \u00a0 \u00a0 \u00a0 \u00a0}\n>> @@ -12,6 +15,9 @@\n>> \u00a0}\n>>\n>> \u00a0func isNotExist(err error) bool {\n>> + \u00a0 \u00a0 \u00a0 if err == nil {\n>> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return false\n>> + \u00a0 \u00a0 \u00a0 }\n>> \u00a0 \u00a0 \u00a0 \u00a0if pe, ok := err.(*PathError); ok {\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0err = pe.Err\n>> \u00a0 \u00a0 \u00a0 \u00a0}\n>> @@ -19,6 +25,9 @@\n>> \u00a0}\n>>\n>> \u00a0func isPermission(err error) bool {\n>> + \u00a0 \u00a0 \u00a0 if err == nil {\n>> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return false\n>> + \u00a0 \u00a0 \u00a0 }\n>> \u00a0 \u00a0 \u00a0 \u00a0if pe, ok := err.(*PathError); ok {\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0err = pe.Err\n>> \u00a0 \u00a0 \u00a0 \u00a0}\n>>\n>>\n>\n",
			"disapproval": false,
			"date": "2012-04-12 20:22:08.695171",
			"approval": true
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"akumar@mail.nanosouffle.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=99b8351bfb9e ***\n\nos: avoid panic when testing errors on Plan 9\n\nR=golang-dev, bradfitz, akumar\nCC=golang-dev\nhttp://codereview.appspot.com/6017043",
			"disapproval": false,
			"date": "2012-04-17 00:36:11.279030",
			"approval": false
		}
	],
	"owner_email": "ality@pbrane.org",
	"private": false,
	"base_url": "",
	"owner": "ality",
	"subject": "code review 6017043: os: avoid panic when testing errors on Plan 9",
	"created": "2012-04-12 11:54:35.417935",
	"patchsets": [
		1,
		1001,
		3001,
		9001
	],
	"modified": "2012-04-17 00:36:13.038949",
	"closed": true,
	"issue": 6017043
}