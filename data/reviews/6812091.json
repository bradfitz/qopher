{
	"description": "runtime: mark race instrumentation callbacks as nosplitstack\nIt speedups the race detector somewhat, but also prevents\ngetcallerpc() from obtaining lessstack().",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-11-06 16:35:20.377610",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Tue, Nov 6, 2012 at 8:35 AM,  <dvyukov@google.com> wrote:\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://dvyukov%40google.com@code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> runtime: mark race instrumentation callbacks as nosplitstack\r\n> It speedups the race detector somewhat, but also prevents\r\n> getcallerpc() from obtaining lessstack().\r\n>\r\n> Please review this at http://codereview.appspot.com/6812091/\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/race.c\r\n>\r\n>\r\n> Index: src/pkg/runtime/race.c\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/race.c\r\n> +++ b/src/pkg/runtime/race.c\r\n> @@ -47,6 +47,8 @@\r\n>  }\r\n>\r\n>  // Called from instrumented code.\r\n> +// If we split stack, getcallerpc() can return runtime\u00b7lessstack().\r\n> +#pragma textflag 7\r\n>  void\r\n>  runtime\u00b7racewrite(uintptr addr)\r\n>  {\r\n> @@ -58,6 +60,8 @@\r\n>  }\r\n>\r\n>  // Called from instrumented code.\r\n> +// If we split stack, getcallerpc() can return runtime\u00b7lessstack().\r\n> +#pragma textflag 7\r\n>  void\r\n>  runtime\u00b7raceread(uintptr addr)\r\n>  {\r\n> @@ -69,6 +73,7 @@\r\n>  }\r\n>\r\n>  // Called from instrumented code.\r\n> +#pragma textflag 7\r\n>  void\r\n>  runtime\u00b7racefuncenter(uintptr pc)\r\n>  {\r\n> @@ -83,6 +88,7 @@\r\n>  }\r\n>\r\n>  // Called from instrumented code.\r\n> +#pragma textflag 7\r\n>  void\r\n>  runtime\u00b7racefuncexit(void)\r\n>  {\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-06 16:52:54.588950",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=9fd632db8de2 ***\n\nruntime: mark race instrumentation callbacks as nosplitstack\nIt speedups the race detector somewhat, but also prevents\ngetcallerpc() from obtaining lessstack().\n\nR=golang-dev, iant\nCC=golang-dev\nhttp://codereview.appspot.com/6812091",
			"disapproval": false,
			"date": "2012-11-06 16:55:09.550160",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6812091: runtime: mark race instrumentation callbacks as nosplitstack",
	"created": "2012-11-06 16:31:32.650290",
	"patchsets": [
		1,
		1002,
		4001,
		7002
	],
	"modified": "2012-11-06 16:55:10.835020",
	"closed": true,
	"issue": 6812091
}