{
	"description": "encoding/json: cleanup leftover variables in array decoding.\n\nAn old update for API changes in reflect package left several\nhelper variables that do not have a meaning anymore, and\nthe type checking of arrays vs slices was broken.\nFixes issue 2513.",
	"cc": [
		"ultrotter@google.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com",
		"remy@archlinux.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-14 21:13:28.691175",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"ultrotter@google.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I agree, however the previous code and comments suggested this was the intended behaviour, so I did not want to touch that and leave the decision to another patch.\n\nR\u00e9my.",
			"disapproval": false,
			"date": "2011-12-15 07:39:28.455530",
			"approval": false
		},
		{
			"sender": "ultrotter@google.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"ultrotter@google.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5488094/diff/4/src/pkg/encoding/json/decode_test.go\nFile src/pkg/encoding/json/decode_test.go (right):\n\nhttp://codereview.appspot.com/5488094/diff/4/src/pkg/encoding/json/decode_test.go#newcode81\nsrc/pkg/encoding/json/decode_test.go:81: {`[1, 2, 3]`, new([5]int), [5]int{1, 2, 3, 0, 0}, nil},\nI'm not sure I'd expect these two to behave this way. In particular if I pass [1]int and the json has 3 of them probably I should get an error message not just \"lose\" the other two. Same if I pass [5]int and the array has only three elements. There's no way to distinguish between \"the two last elements were not present\" and \"the two last elements were 0\".",
			"disapproval": false,
			"date": "2011-12-15 07:01:38.423257",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"ultrotter@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5488094/diff/4/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttp://codereview.appspot.com/5488094/diff/4/src/pkg/encoding/json/decode.go#newcode231\nsrc/pkg/encoding/json/decode.go:231: // rewind.\nOn 2011/12/19 20:06:53, remyoudompheng wrote:\n> On 2011/12/19 20:04:15, rsc wrote:\n> > Can the panic that this replaces actually happen?\n> \n> It panics on all array test cases without this patch. Does it look wrong?\n\nIt looks surprising at least.  Setting redo = false means that\nthe redoCode is being discarded.  For that to be correct this\nhas to be some specific character that you are expecting to\ndiscard.  Maybe check for that?",
			"disapproval": false,
			"date": "2011-12-19 20:09:38.204248",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"ultrotter@google.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2011/12/15 07:39:28, remyoudompheng wrote:\n> I agree, however the previous code and comments suggested this was the intended\n> behaviour, so I did not want to touch that and leave the decision to another\n> patch.\n> \n> R\u00e9my.\n\nAny comments?\n\nR\u00e9my.",
			"disapproval": false,
			"date": "2011-12-16 23:31:51.181250",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"ultrotter@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=0668a67bb64f ***\n\nencoding/json: cleanup leftover variables in array decoding.\n\nAn old update for API changes in reflect package left several\nhelper variables that do not have a meaning anymore, and\nthe type checking of arrays vs slices was broken.\nFixes issue 2513.\n\nR=ultrotter, rsc\nCC=golang-dev, remy\nhttp://codereview.appspot.com/5488094\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-12-19 20:32:08.838795",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"ultrotter@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5488094/diff/4/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttp://codereview.appspot.com/5488094/diff/4/src/pkg/encoding/json/decode.go#newcode231\nsrc/pkg/encoding/json/decode.go:231: // rewind.\nCan the panic that this replaces actually happen?",
			"disapproval": false,
			"date": "2011-12-19 20:04:15.791527",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"ultrotter@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5488094/diff/4/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttp://codereview.appspot.com/5488094/diff/4/src/pkg/encoding/json/decode.go#newcode231\nsrc/pkg/encoding/json/decode.go:231: // rewind.\nOn 2011/12/19 20:04:15, rsc wrote:\n> Can the panic that this replaces actually happen?\n\nIt panics on all array test cases without this patch. Does it look wrong?\n\nR\u00e9my.",
			"disapproval": false,
			"date": "2011-12-19 20:06:53.063191",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"ultrotter@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5488094/diff/4/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttp://codereview.appspot.com/5488094/diff/4/src/pkg/encoding/json/decode.go#newcode231\nsrc/pkg/encoding/json/decode.go:231: // rewind.\nMy understanding here is that if redo=true, the redo code is necessarily the beginning of a value, otherwise the call to nextValue() would have generated an error.\n\nSince we are feeding the scanner with a \"\" anyway, I don't manage to find a case where this gets wrong. Did I get confused somewhere?\n\nR\u00e9my.",
			"disapproval": false,
			"date": "2011-12-19 20:17:46.948557",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"ultrotter@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nAh, it's because all the callers set off correctly.\nDidn't read enough of the context.\n\nThanks.",
			"disapproval": false,
			"date": "2011-12-19 20:31:31.203303",
			"approval": true
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 5488094: encoding/json: cleanup leftover variables in array decoding.",
	"created": "2011-12-14 21:12:41.732257",
	"patchsets": [
		1,
		1001,
		4
	],
	"modified": "2011-12-19 20:49:59.675782",
	"closed": true,
	"issue": 5488094
}