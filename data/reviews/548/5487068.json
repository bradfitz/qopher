{
	"description": "runtime: Make gc_test test extra allocated space, not total space.\n\nTesting total space fails for gccgo when not using split\nstacks, because then each goroutine has a large stack, and so\nthe total memory usage is large.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [
		"cw@f00f.org",
		"iant@google.com",
		"go.peter.90@gmail.com",
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "go.peter.90@gmail.com",
			"recipients": [
				"iant@golang.org",
				"cw@f00f.org",
				"iant@google.com",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "GOMAXPROCS=5 (quad core CPU)\n\nsrc/make.bash:MAKEFLAGS=${MAKEFLAGS:-\"-j4\"}\nsrc/make.bash:export MAKEFLAGS\n\nPeter\n\nOn 2011/12/14 02:04:41, peterGo wrote:\n> LBTM!\n> \n> linux/amd64, Ubuntu 10.04, hg id 24ea3943510a\n> \n> ./all.bash\n> \n> ./goc2c \"`pwd`/time.goc\" > time.c.tmp\n> mv -f time.c.tmp time.c\n> 6c -Ilinux -Iamd64 -Ilinux/amd64 -FVw   -o \"time.6\" time.c\n> 6c -Ilinux -Iamd64 -Ilinux/amd64 -FVw   amd64/traceback.c\n> 6c -Ilinux -Iamd64 -Ilinux/amd64 -FVw   -o \"lock_futex.6\" lock_futex.c\n> rm -f _test/runtime.a\n> gopack grc _test/runtime.a _gotest_.6 alg.6 asm.6 atomic.6 cgocall.6 chan.6\n> closure.6 complex.6 cpuprof.6 float.6 hashmap.6 iface.6 malloc.6 mcache.6\n> mcentral.6 mem.6 memmove.6 mfinal.6 mfixalloc.6 mgc0.6 mheap.6 mprof.6 msize.6\n> print.6 proc.6 rt0.6 rune.6 runtime.6 runtime1.6 sema.6 signal.6 sigqueue.6\n> slice.6 string.6 symtab.6 sys.6 thread.6 time.6 traceback.6  lock_futex.6  \n> rm string.c sema.c sigqueue.c runtime1.c malloc.c time.c mprof.c\n> --- FAIL: runtime_test.TestGcSys-5 (1.12 seconds)\n> \tgc_test.go:24: used 2554104 extra bytes\n> \tgc_test.go:26: using too much memory: 2554104 bytes\n> FAIL\n> gotest: \"./6.out -test.short=true -test.timeout=120\" failed: exit status 1\n> make[1]: *** [testshort] Error 2\n> make[1]: Leaving directory `/home/peter/go/src/pkg/runtime'\n> make: *** [runtime.testshort] Error 1\n> \n> Peter\n> \n> On 2011/12/13 23:12:58, iant wrote:\n> > *** Submitted as http://code.google.com/p/go/source/detail?r=24ea3943510a ***\n> > \n> > runtime: Make gc_test test extra allocated space, not total space.\n> > \n> > Testing total space fails for gccgo when not using split\n> > stacks, because then each goroutine has a large stack, and so\n> > the total memory usage is large.\n> > \n> > R=golang-dev, rsc\n> > CC=golang-dev\n> > http://codereview.appspot.com/5487068",
			"disapproval": false,
			"date": "2011-12-14 02:11:22.464262",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-13 22:41:22.914805",
			"approval": false
		},
		{
			"sender": "go.peter.90@gmail.com",
			"recipients": [
				"iant@golang.org",
				"cw@f00f.org",
				"iant@google.com",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LBTM!\n\nlinux/amd64, Ubuntu 10.04, hg id 24ea3943510a\n\n./all.bash\n\n./goc2c \"`pwd`/time.goc\" > time.c.tmp\nmv -f time.c.tmp time.c\n6c -Ilinux -Iamd64 -Ilinux/amd64 -FVw   -o \"time.6\" time.c\n6c -Ilinux -Iamd64 -Ilinux/amd64 -FVw   amd64/traceback.c\n6c -Ilinux -Iamd64 -Ilinux/amd64 -FVw   -o \"lock_futex.6\" lock_futex.c\nrm -f _test/runtime.a\ngopack grc _test/runtime.a _gotest_.6 alg.6 asm.6 atomic.6 cgocall.6 chan.6 closure.6 complex.6 cpuprof.6 float.6 hashmap.6 iface.6 malloc.6 mcache.6 mcentral.6 mem.6 memmove.6 mfinal.6 mfixalloc.6 mgc0.6 mheap.6 mprof.6 msize.6 print.6 proc.6 rt0.6 rune.6 runtime.6 runtime1.6 sema.6 signal.6 sigqueue.6 slice.6 string.6 symtab.6 sys.6 thread.6 time.6 traceback.6  lock_futex.6  \nrm string.c sema.c sigqueue.c runtime1.c malloc.c time.c mprof.c\n--- FAIL: runtime_test.TestGcSys-5 (1.12 seconds)\n\tgc_test.go:24: used 2554104 extra bytes\n\tgc_test.go:26: using too much memory: 2554104 bytes\nFAIL\ngotest: \"./6.out -test.short=true -test.timeout=120\" failed: exit status 1\nmake[1]: *** [testshort] Error 2\nmake[1]: Leaving directory `/home/peter/go/src/pkg/runtime'\nmake: *** [runtime.testshort] Error 1\n\nPeter\n\nOn 2011/12/13 23:12:58, iant wrote:\n> *** Submitted as http://code.google.com/p/go/source/detail?r=24ea3943510a ***\n> \n> runtime: Make gc_test test extra allocated space, not total space.\n> \n> Testing total space fails for gccgo when not using split\n> stacks, because then each goroutine has a large stack, and so\n> the total memory usage is large.\n> \n> R=golang-dev, rsc\n> CC=golang-dev\n> http://codereview.appspot.com/5487068",
			"disapproval": false,
			"date": "2011-12-14 02:04:41.577069",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-12-13 23:08:47.335741",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=24ea3943510a ***\n\nruntime: Make gc_test test extra allocated space, not total space.\n\nTesting total space fails for gccgo when not using split\nstacks, because then each goroutine has a large stack, and so\nthe total memory usage is large.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5487068",
			"disapproval": false,
			"date": "2011-12-13 23:12:58.050743",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Chris Wedgwood <cw@f00f.org> writes:\n\n> this breaks parallel builds, i'm not sure why\n>\n> [...]\n> gopack grc _test/runtime.a _gotest_.6 alg.6 asm.6 atomic.6 cgocall.6 chan.6 closure.6 complex.6 cpuprof.6 float.6 hashmap.6 iface.6 malloc.6 mcache.6 mcentral.6 mem.6 memmove.6 mfinal.6 mfixalloc.6 mgc0.6 mheap.6 mprof.6 msize.6 print.6 proc.6 rt0.6 rune.6 runtime.6 runtime1.6 sema.6 signal.6 sigqueue.6 slice.6 string.6 symtab.6 sys.6 thread.6 time.6 traceback.6  lock_futex.6  \n> rm string.c sema.c sigqueue.c runtime1.c malloc.c time.c mprof.c\n> --- FAIL: runtime_test.TestGcSys-16 (0.64 seconds)\n>         gc_test.go:24: used 3668216 extra bytes\n>         gc_test.go:26: using too much memory: 3668216 bytes\n> FAIL\n> gotest: \"./6.out -test.short=true -test.timeout=120\" failed: exit status 1\n> make[1]: *** [testshort] Error 2\n> make[1]: Leaving directory `/home/cw/wk/go/go.hg/src/pkg/runtime'\n> make: *** [runtime.testshort] Error 1\n\nSorry about that.\n\nThe easy approach is going to be to bump up the acceptable limit.\n\nHow are you doing your parallel build?  I'm not seeing a problem running\nall.bash on my Ubuntu system.\n\nIan\n\n> On Tue, Dec 13, 2011 at 11:12:58PM +0000, iant@golang.org wrote:\n>> *** Submitted as\n>> http://code.google.com/p/go/source/detail?r=24ea3943510a ***\n>> \n>> runtime: Make gc_test test extra allocated space, not total space.\n>> \n>> Testing total space fails for gccgo when not using split\n>> stacks, because then each goroutine has a large stack, and so\n>> the total memory usage is large.\n>> \n>> R=golang-dev, rsc\n>> CC=golang-dev\n>> http://codereview.appspot.com/5487068\n>> \n>> \n>> http://codereview.appspot.com/5487068/\n>> \n",
			"disapproval": false,
			"date": "2011-12-14 00:18:55.204894",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "go.peter.90@gmail.com writes:\n\n> LBTM!\n>\n> linux/amd64, Ubuntu 10.04, hg id 24ea3943510a\n>\n> ./all.bash\n>\n> ./goc2c \"`pwd`/time.goc\" > time.c.tmp\n> mv -f time.c.tmp time.c\n> 6c -Ilinux -Iamd64 -Ilinux/amd64 -FVw   -o \"time.6\" time.c\n> 6c -Ilinux -Iamd64 -Ilinux/amd64 -FVw   amd64/traceback.c\n> 6c -Ilinux -Iamd64 -Ilinux/amd64 -FVw   -o \"lock_futex.6\" lock_futex.c\n> rm -f _test/runtime.a\n> gopack grc _test/runtime.a _gotest_.6 alg.6 asm.6 atomic.6 cgocall.6\n> chan.6 closure.6 complex.6 cpuprof.6 float.6 hashmap.6 iface.6 malloc.6\n> mcache.6 mcentral.6 mem.6 memmove.6 mfinal.6 mfixalloc.6 mgc0.6 mheap.6\n> mprof.6 msize.6 print.6 proc.6 rt0.6 rune.6 runtime.6 runtime1.6 sema.6\n> signal.6 sigqueue.6 slice.6 string.6 symtab.6 sys.6 thread.6 time.6\n> traceback.6  lock_futex.6\n> rm string.c sema.c sigqueue.c runtime1.c malloc.c time.c mprof.c\n> --- FAIL: runtime_test.TestGcSys-5 (1.12 seconds)\n> \tgc_test.go:24: used 2554104 extra bytes\n> \tgc_test.go:26: using too much memory: 2554104 bytes\n> FAIL\n\nNow fixed.\n\nSorry about that.\n\nIan\n",
			"disapproval": false,
			"date": "2011-12-14 05:29:06.010353",
			"approval": false
		},
		{
			"sender": "cw@f00f.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "this breaks parallel builds, i'm not sure why\n\n[...]\ngopack grc _test/runtime.a _gotest_.6 alg.6 asm.6 atomic.6 cgocall.6 chan.6 closure.6 complex.6 cpuprof.6 float.6 hashmap.6 iface.6 malloc.6 mcache.6 mcentral.6 mem.6 memmove.6 mfinal.6 mfixalloc.6 mgc0.6 mheap.6 mprof.6 msize.6 print.6 proc.6 rt0.6 rune.6 runtime.6 runtime1.6 sema.6 signal.6 sigqueue.6 slice.6 string.6 symtab.6 sys.6 thread.6 time.6 traceback.6  lock_futex.6  \nrm string.c sema.c sigqueue.c runtime1.c malloc.c time.c mprof.c\n--- FAIL: runtime_test.TestGcSys-16 (0.64 seconds)\n        gc_test.go:24: used 3668216 extra bytes\n        gc_test.go:26: using too much memory: 3668216 bytes\nFAIL\ngotest: \"./6.out -test.short=true -test.timeout=120\" failed: exit status 1\nmake[1]: *** [testshort] Error 2\nmake[1]: Leaving directory `/home/cw/wk/go/go.hg/src/pkg/runtime'\nmake: *** [runtime.testshort] Error 1\n\n\ngotest by itself in src/pkg/runtime seems ok\n\n\n\nOn Tue, Dec 13, 2011 at 11:12:58PM +0000, iant@golang.org wrote:\n> *** Submitted as\n> http://code.google.com/p/go/source/detail?r=24ea3943510a ***\n> \n> runtime: Make gc_test test extra allocated space, not total space.\n> \n> Testing total space fails for gccgo when not using split\n> stacks, because then each goroutine has a large stack, and so\n> the total memory usage is large.\n> \n> R=golang-dev, rsc\n> CC=golang-dev\n> http://codereview.appspot.com/5487068\n> \n> \n> http://codereview.appspot.com/5487068/\n> \n",
			"disapproval": false,
			"date": "2011-12-13 23:45:33.505132",
			"approval": false
		},
		{
			"sender": "cw@f00f.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Dec 13, 2011 at 04:18:51PM -0800, Ian Lance Taylor wrote:\n\n> How are you doing your parallel build?  I'm not seeing a problem running\n> all.bash on my Ubuntu system.\n\nMAKEFLAGS=-j25 ...\n\nWhy does it differ greatly in this case vs a non-parallel build?\n\n\n\n(I'll tweak it later when I get home and send a CL for review)\n\n",
			"disapproval": false,
			"date": "2011-12-14 00:28:48.140503",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Chris Wedgwood <cw@f00f.org> writes:\n\n> On Tue, Dec 13, 2011 at 04:18:51PM -0800, Ian Lance Taylor wrote:\n>\n>> How are you doing your parallel build?  I'm not seeing a problem running\n>> all.bash on my Ubuntu system.\n>\n> MAKEFLAGS=-j25 ...\n>\n> Why does it differ greatly in this case vs a non-parallel build?\n\nFor what it's worth, still doesn't happen for me when I set MAKEFLAGS.\n\nDo you have GOMAXPROCS set?\n\nIan\n",
			"disapproval": false,
			"date": "2011-12-14 01:06:37.099474",
			"approval": false
		},
		{
			"sender": "cw@f00f.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> For what it's worth, still doesn't happen for me when I set MAKEFLAGS.\n>\n> Do you have GOMAXPROCS set?\n\nyes, both are set on 16x and 24x systems\n",
			"disapproval": false,
			"date": "2011-12-14 03:22:15.389788",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This test is flaky on 386. Do we need to modify it? Or quieten it on\r\n386? (We know about the gc issues on 386 systems.)  This may be\r\nobscuring real bugs. It's certainly triggering a lot of build failure\r\nreports.\r\n",
			"disapproval": false,
			"date": "2012-05-17 01:14:30.023521",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "feel free to disable on non-amd64\r\n",
			"disapproval": false,
			"date": "2012-05-17 01:16:37.070294",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 5487068: runtime: Make gc_test test extra allocated space, not t...",
	"created": "2011-12-13 22:41:19.485749",
	"patchsets": [
		1,
		3001
	],
	"modified": "2012-05-17 01:14:30.369813",
	"closed": true,
	"issue": 5487068
}