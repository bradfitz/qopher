{
	"description": "math: add sqrt_arm.s and sqrtGoC.go as fallback to soft fp emulation\n5a: add SQRTF and SQRTD\n5l: add ASQRTF and ASQRTD\n\nUse ARMv7 VFP VSQRT instruction to speed up math.Sqrt",
	"cc": [
		"rsc@golang.org",
		"dave@cheney.net",
		"m@capitanio.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/06/03 06:30:44, Fango wrote:\n> Hello mailto:rsc@golang.org (cc: mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nSo sorry. hg change 4551082 did not add all files I changed. Have to manually track and add them. \n\nI don't have a ARM5 board, so just GOARM=5 to output arm5, and measured a big diff in timing. \n\ntime ./5.out\nPASS\n\nreal    0m0.047s\nuser    0m0.023s\nsys     0m0.016s\n\n\ntime ./arm5\nPASS\n\nreal    0m0.395s\nuser    0m0.391s\nsys     0m0.000s",
			"disapproval": false,
			"date": "2011-06-03 06:36:10.083868",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Looks good on arm5",
			"disapproval": false,
			"date": "2011-06-06 06:28:09.172930",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, dave@cheney.net, m@capitanio.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-08 01:06:15.959989",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "will submit tomorrow once i sort some other arm stuff\n",
			"disapproval": false,
			"date": "2011-06-08 04:45:20.418317",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-06-03 06:22:49.322101",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "> All the fine gradations in the middle I am happy to ignore.\n\nIf I guessed right, Russ would like Go to support only ARM5 and ARMv7+Neon, not anything in between. Those quirk ARMv7 (Tegra 2 etc.,) would hopefully fade out quickly, like 286.",
			"disapproval": false,
			"date": "2011-06-03 08:51:36.584517",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Resent since CL not appeared on golang-dev",
			"disapproval": false,
			"date": "2011-06-01 14:02:01.551609",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> This is new. Supporting both ARM5,ARM6, ARMv7, ARMv7_neon are going to\n> be messy. Soft fp only applicable to GOARM=5 anyway. So I would like\n> to add one more env, GOARCH_VER to pkg/math/Makefile:\n\nI don't want to add a new variable.  Right now you can compile\neverything with GOARCH=arm and you only need the GOARM\nvalue during the call to 5l.  The libraries are all the same and\ndon't need to be built separately for different ARMs.  I don't mind\nif the software floating point generates calls to the math library\nthough.\n\nThere are really only two ARMs we are supporting:\nold, using software floating point (we call it GOARM=5)\nand new, using VFP floating point (we call it not setting GOARM).\nAll the fine gradations in the middle I am happy to ignore.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-06-03 01:52:58.686644",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, dave@cheney.net, m@capitanio.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-08 01:14:40.919592",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Looks fine to me but will break ARM5.  You'll need to have\nthe software floating point simulator in $GOROOT/src/pkg/runtime/arm/softfloat.c call math\u00b7sqrtGoC to implement that instruction, where sqrtGoC is defined\n\npackage math\nfunc sqrtGoC(f float64, r *float64) {\n    *r = sqrtGo(f)\n}\n\nand has C prototype\n\nvoid math\u00b7sqrtGoC(float64, *float64);\n\nand then you'll have to change 5l to \nautomatically load math.a the same way\nthat it does runtime.a.\n\nhttp://codereview.appspot.com/4551082/diff/2001/src/cmd/5l/asm.c\nFile src/cmd/5l/asm.c (right):\n\nhttp://codereview.appspot.com/4551082/diff/2001/src/cmd/5l/asm.c#newcode1690\nsrc/cmd/5l/asm.c:1690: (0xc<<4);\nmerge with previous line\n\nhttp://codereview.appspot.com/4551082/diff/2001/src/cmd/5l/asm.c#newcode1691\nsrc/cmd/5l/asm.c:1691: \nwhy the blank line?",
			"disapproval": false,
			"date": "2011-06-02 14:38:27.082969",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> and then you'll have to change 5l to\n> automatically load math.a the same way\n> that it does runtime.a.\n\nThis is new. Supporting both ARM5,ARM6, ARMv7, ARMv7_neon are going to\nbe messy. Soft fp only applicable to GOARM=5 anyway. So I would like\nto add one more env, GOARCH_VER to pkg/math/Makefile:\n\nOFILES=\\\n        $(OFILES_$(GOARCH)$(GOARCH_VER))\n\nSo we can have below rule only build when GOARCH_VER=v7\nOFILES_armv7=\\\n        fabs_arm.$O\\\n        sqrt_arm.$O\\\n\nThe neon support for math sin/cos etc., then can use GOARCH_VER=v7_neon.\n\n\n> http://codereview.appspot.com/4551082/\n\nPlease ignore this. I'm new to CL, not aware the 'hg mail' at the\nfirst time. Please take another look at\nhttp://codereview.appspot.com/4548085/, Sorry for the confusion.\n\nfango\n",
			"disapproval": false,
			"date": "2011-06-03 01:42:10.751245",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Hi Howard,\n\nYou can use\n\nhg file 4551082 file1 file2 file3\n\nto add files to an exist CL\n\nCheers\n\nDave\n\nOn Fri, Jun 3, 2011 at 4:36 PM,  <fan.howard@gmail.com> wrote:\n> On 2011/06/03 06:30:44, Fango wrote:\n>>\n>> Hello mailto:rsc@golang.org (cc: mailto:golang-dev@googlegroups.com),\n>\n>> Please take another look.\n>\n> So sorry. hg change 4551082 did not add all files I changed. Have to\n> manually track and add them.\n>\n> I don't have a ARM5 board, so just GOARM=5 to output arm5, and measured\n> a big diff in timing.\n>\n> time ./5.out\n> PASS\n>\n> real \u00a0 \u00a00m0.047s\n> user \u00a0 \u00a00m0.023s\n> sys \u00a0 \u00a0 0m0.016s\n>\n>\n> time ./arm5\n> PASS\n>\n> real \u00a0 \u00a00m0.395s\n> user \u00a0 \u00a00m0.391s\n> sys \u00a0 \u00a0 0m0.000s\n>\n>\n> http://codereview.appspot.com/4551082/\n>\n",
			"disapproval": false,
			"date": "2011-06-03 06:46:15.232593",
			"approval": false
		},
		{
			"sender": "m@capitanio.org",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/06/03 01:52:58, rsc wrote:\n> > This is new. Supporting both ARM5,ARM6, ARMv7, ARMv7_neon are going to\n> > be messy. Soft fp only applicable to GOARM=5 anyway. So I would like\n> > to add one more env, GOARCH_VER to pkg/math/Makefile:\n> \n> I don't want to add a new variable.  Right now you can compile\n> everything with GOARCH=arm and you only need the GOARM\n> value during the call to 5l.  The libraries are all the same and\n> don't need to be built separately for different ARMs.  I don't mind\n> if the software floating point generates calls to the math library\n> though.\n> \n> There are really only two ARMs we are supporting:\n> old, using software floating point (we call it GOARM=5)\n> and new, using VFP floating point (we call it not setting GOARM).\n> All the fine gradations in the middle I am happy to ignore.\n\nYes, but it's not only old/new. Sometimes is the FPU powered down\nto save the battery or the SoC manufacturer doesn't even bother\nto put the FPU core on the chip.\n\nThe android NDK similarly targets the user-space for\n\"soft\" FP (armv5te) and \"hard\" FP (armv7-a).\nSo without the FPU there would be in Go always an opt-in for\nGOARM=5 and that's fine (at least for me).\n\nFor some reason I can't get run even a GOARM=5 binary on an ARMv6\nwithout a FPU. This should be supported, no?\n\nMartin",
			"disapproval": false,
			"date": "2011-06-03 08:20:28.878745",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hi Russ,\n\nI did a `hg update default",
			"disapproval": false,
			"date": "2011-06-08 01:15:33.503761",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-03 06:30:44.661872",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> For some reason I can't get run even a GOARM=5 binary on an ARMv6\n> without a FPU. This should be supported, no?\n\nRunning a GOARM=5 binary on an ARMv6 should work.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-06-03 15:19:45.052651",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "The new code looks fine but if you view the diffs,\nyou've undone a bunch of other changes that I made.\nCould you please read through the diffs and revert\nthe ones that are not part of your sqrt change?\n\nThanks.\nRuss\n",
			"disapproval": false,
			"date": "2011-06-07 19:10:54.114711",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, dave@cheney.net, m@capitanio.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-08 00:18:58.012232",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "looks great; just the file nit below.\nthanks!\n\nhttp://codereview.appspot.com/4551082/diff/27001/src/pkg/math/Makefile\nFile src/pkg/math/Makefile (right):\n\nhttp://codereview.appspot.com/4551082/diff/27001/src/pkg/math/Makefile#newcode91\nsrc/pkg/math/Makefile:91: sqrtGoC.go\\\nplease drop this code in sqrt_port.go instead.\nit's too small to be worth another file.",
			"disapproval": false,
			"date": "2011-06-08 02:47:08.866548",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nThanks!\n",
			"disapproval": false,
			"date": "2011-06-08 03:05:46.981110",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=002945af78cc ***\n\nmath: add sqrt_arm.s and sqrtGoC.go as fallback to soft fp emulation\n5a: add SQRTF and SQRTD\n5l: add ASQRTF and ASQRTD\n\nUse ARMv7 VFP VSQRT instruction to speed up math.Sqrt\n\nR=rsc, dave, m\nCC=golang-dev\nhttp://codereview.appspot.com/4551082\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-06-09 21:19:11.004351",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Sorry, switching from vim did byte me. Anyway, I did a hg update default and manual patched the changes I made on SQRTF/D. Please take another look. Thanks.",
			"disapproval": false,
			"date": "2011-06-08 01:18:17.127942",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Sorry I don't quite get what you mean. So I did a  'hg sync' and merge, then `hg mail 4551082` to confirm that is your intention. But that causes a comping error:\n\n/home/go/go/src/cmd/5l/asm.c:381:4: error: implicit declaration of function 'asmelfsym32'",
			"disapproval": false,
			"date": "2011-06-08 00:25:13.613712",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, dave@cheney.net, m@capitanio.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-08 02:54:13.266233",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, dave@cheney.net, m@capitanio.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-08 04:40:09.747000",
			"approval": false
		},
		{
			"sender": "fan.howard@gmail.com",
			"recipients": [
				"fan.howard@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"m@capitanio.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Patch 9 fixed a typo in Makefile, and gofmt -w sqrt_port.go.",
			"disapproval": false,
			"date": "2011-06-08 04:42:27.842057",
			"approval": false
		}
	],
	"owner_email": "fan.howard@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "fango",
	"subject": "code review 4551082: math: add sqrt_arm.s and sqrtGoC.go as fallback to soft...",
	"created": "2011-06-01 10:18:08.896851",
	"patchsets": [
		1,
		2001,
		3,
		13002,
		21001,
		22002,
		27001,
		5,
		22016
	],
	"modified": "2011-06-08 04:42:27.842057",
	"closed": false,
	"issue": 4551082
}