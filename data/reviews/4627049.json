{
	"description": "mime: text charset defaults\n\nEnforce + document the UTF-8 default.",
	"cc": [
		"rsc@golang.org",
		"bradfitz@golang.org",
		"adg@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Monday 27 June 2011 20:00:54 you wrote:\n> http://codereview.appspot.com/4627049/diff/8001/src/pkg/mime/type.go\n> File src/pkg/mime/type.go (right):\n> \n> http://codereview.appspot.com/4627049/diff/8001/src/pkg/mime/type.go#newcod\n> e85 src/pkg/mime/type.go:85: // All text types available by default will\n> have the charset parameter set\n> I don't understand the 'by default' stuff.\n> \n> // Any returned text type will have a 'charset=utf-8' parameter.\n\nThat would be a change in the behaviour. For consistency it would make sense \ntough. Shall I make the patch?\n",
			"disapproval": false,
			"date": "2011-06-27 20:10:31.887934",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"pascal@quies.net",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-06-20 22:04:38.674878",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "No.\n\nGo is for processing UTF-8 text.\nIf it's text, it's UTF-8.\n",
			"disapproval": false,
			"date": "2011-06-20 22:15:35.311636",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"pascal@quies.net",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-26 22:50:22.448726",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Monday 27 June 2011 04:59:56 you wrote:\n> http://codereview.appspot.com/4627049/diff/8001/src/pkg/mime/type.go\n> File src/pkg/mime/type.go (right):\n> \n> http://codereview.appspot.com/4627049/diff/8001/src/pkg/mime/type.go#newcod\n> e85 src/pkg/mime/type.go:85: // All text types available by default will\n> have the charset parameter set\n> // Text types have the charset parameter set to utf-8 by default.\n\nThe ones set with mime.AddExtensionType don't apply to this rule. Apearantly \nmy English is not making this verry clear. ;-)\n\nWould the following be better?\n// Text types from the build-in table plus the entries loaded from the system\n// files have the charset parameter set to UTF-8 by default.\n",
			"disapproval": false,
			"date": "2011-06-27 20:09:00.583722",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Monday 27 June 2011 22:10:28 Russ Cox wrote:\n> Why not fix AddExtensionType?\n\nHehehe, the same tought at almost the same second.\n\nTo realy fix this we'd need to parse the media type too in order to prevent \nduplicate charset parameters. I could use this routine for HTTP content \nnegotiation as well. How about the following?\n\n// Serializes the media type.\nmime.String(mediaType string, map[string]string parameters) string\n",
			"disapproval": false,
			"date": "2011-06-27 20:25:36.538682",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"pascal@quies.net",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4627049/diff/8001/src/pkg/mime/type.go\nFile src/pkg/mime/type.go (right):\n\nhttp://codereview.appspot.com/4627049/diff/8001/src/pkg/mime/type.go#newcode85\nsrc/pkg/mime/type.go:85: // All text types available by default will have the charset parameter set\n// Text types have the charset parameter set to utf-8 by default.",
			"disapproval": false,
			"date": "2011-06-27 02:59:56.590584",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pascal@quies.net",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4627049/diff/8001/src/pkg/mime/type.go\nFile src/pkg/mime/type.go (right):\n\nhttp://codereview.appspot.com/4627049/diff/8001/src/pkg/mime/type.go#newcode85\nsrc/pkg/mime/type.go:85: // All text types available by default will have the charset parameter set\nI don't understand the 'by default' stuff.\n\n// Any returned text type will have a 'charset=utf-8' parameter.",
			"disapproval": false,
			"date": "2011-06-27 18:00:54.460286",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Why not fix AddExtensionType?\n",
			"disapproval": false,
			"date": "2011-06-27 20:10:31.937809",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"pascal@quies.net",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-28 22:15:55.913961",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wednesday 29 June 2011 00:15:55 pascal@quies.net wrote:\n> Hello rsc@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n> \n> Please take another look.\n> \n> \n> http://codereview.appspot.com/4627049/\n\nping\n",
			"disapproval": false,
			"date": "2011-07-06 16:22:07.603738",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pascal@quies.net",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4627049/diff/2003/src/pkg/mime/type.go\nFile src/pkg/mime/type.go (left):\n\nhttp://codereview.appspot.com/4627049/diff/2003/src/pkg/mime/type.go#oldcode21\nsrc/pkg/mime/type.go:21: var mimeTypes = map[string]string{\nI don't like losing the literal here.\nWhy is this necessary?",
			"disapproval": false,
			"date": "2011-07-13 22:54:40.692320",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> http://codereview.appspot.com/4627049/diff/2003/src/pkg/mime/type.go#oldcode21\n> src/pkg/mime/type.go:21: var mimeTypes = map[string]string{\n> I don't like losing the literal here.\n> Why is this necessary?\n\nIt's not necessary. With this construction all media types apply to the same rules, no matter where they came from.\n",
			"disapproval": false,
			"date": "2011-07-14 06:54:03.668361",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> It's not necessary. With this construction all media types apply to the same rules, no matter where they came from.\n\nOkay, let's keep the literal then.\nI am not happy about making Go code look like Java code.\nWe have the literals for a reason.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-07-19 14:21:05.062180",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> > It's not necessary. With this construction all media types apply to\n> > the same rules, no matter where they came from.\n> \n> Okay, let's keep the literal then.\n> I am not happy about making Go code look like Java code.\n> We have the literals for a reason.\n\nYes those Java habbits die hard once you're used to it. On the other hand these good practices are there for a reason too but since you aleady fixed the CSS literal in the mean time we should be fine.\n\nI'll improve the error reporting too.\n\nCheers.\n",
			"disapproval": false,
			"date": "2011-07-19 15:47:48.211078",
			"approval": false
		},
		{
			"sender": "pascal@quies.net",
			"recipients": [
				"pascal@quies.net",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, bradfitz@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-07-19 18:10:12.259931",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pascal@quies.net",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nSorry for the long delay.",
			"disapproval": false,
			"date": "2011-08-26 20:50:55.536694",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pascal@quies.net",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b982a9b23f2b ***\n\nmime: text charset defaults\n\nEnforce + document the UTF-8 default.\n\nR=rsc, bradfitz, adg\nCC=golang-dev\nhttp://codereview.appspot.com/4627049\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-08-26 20:55:27.290825",
			"approval": false
		}
	],
	"owner_email": "pascal@quies.net",
	"private": false,
	"base_url": "",
	"owner": "pascal",
	"subject": "code review 4627049: mime: text charset defaults",
	"created": "2011-06-20 22:02:47.282947",
	"patchsets": [
		1,
		2001,
		8001,
		2003,
		26001,
		27003
	],
	"modified": "2011-11-22 00:09:08.314840",
	"closed": true,
	"issue": 4627049
}