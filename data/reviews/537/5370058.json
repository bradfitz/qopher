{
	"description": "tutorial: describe unidirectional channels",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-10 21:20:44.367372",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-11-11 02:50:35.361401",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"gri@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=bf9901c10e5e ***\n\ntutorial: describe unidirectional channels\n\nR=golang-dev, adg, gri\nCC=golang-dev\nhttp://codereview.appspot.com/5370058",
			"disapproval": false,
			"date": "2011-11-10 22:02:20.662694",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.tmpl\nFile doc/go_tutorial.tmpl (right):\n\nhttp://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.tmpl#newcode977\ndoc/go_tutorial.tmpl:977: The arrow points in a mnemonic direction to indicate whether data flows into or out of\nthe direction is mnemonic? seems plausible, but made me a double-take\n\nhttp://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.tmpl#newcode994\ndoc/go_tutorial.tmpl:994: them, such as in function signatures, you will be less likely to use the\nless likely? You just can't.\n\nhttp://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.tmpl#newcode996\ndoc/go_tutorial.tmpl:996: Note that it's pointless to <code>make</code> single-direction channels, since you can't\nNot sure if this is worth mentioning. Guess it doesn't cost anything.",
			"disapproval": false,
			"date": "2011-11-10 21:26:45.787618",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nOn Nov 10, 2011, at 1:26 PM, adg@golang.org wrote:\n\n> \n> http://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.tmpl\n> File doc/go_tutorial.tmpl (right):\n> \n> http://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.tmpl#newcode977\n> doc/go_tutorial.tmpl:977: The arrow points in a mnemonic direction to\n> indicate whether data flows into or out of\n> the direction is mnemonic? seems plausible, but made me a double-take\n\nyes, it's a memory aid.\n\n> http://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.tmpl#newcode994\n> doc/go_tutorial.tmpl:994: them, such as in function signatures, you will\n> be less likely to use the\n> less likely? You just can't.\n\nyou might screw up elsewhere.\n\n> http://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.tmpl#newcode996\n> doc/go_tutorial.tmpl:996: Note that it's pointless to <code>make</code>\n> single-direction channels, since you can't\n> Not sure if this is worth mentioning. Guess it doesn't cost anything.\n\ntrying to forestall the obvious question.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-11-10 21:29:46.370626",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-10 21:29:46.975165",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-10 21:58:06.888220",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.html\nFile doc/go_tutorial.html (right):\n\nhttp://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.html#newcode1392\ndoc/go_tutorial.html:1392: indicate that the channel can be used only one way: <code>&lt;-chan</code> means \"receive only\",\n... that the channel can only be used for receiving (<-chan) or sending data (chan<-). The arrow points ...\n\n(perhaps simpler)\n\nhttp://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.html#newcode1415\ndoc/go_tutorial.html:1415: Bidirectional channels can be assigned to single-direction channels but not the\ns/single-directional/unidirectional/ ?\n\nhttp://codereview.appspot.com/5370058/diff/1/doc/go_tutorial.html#newcode1419\ndoc/go_tutorial.html:1419: Note that it's pointless to <code>make</code> single-direction channels, since you can't\ns/single-directional/unidirectional/ ?",
			"disapproval": false,
			"date": "2011-11-10 21:29:51.774221",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-11-10 22:00:33.919685",
			"approval": true
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5370058: tutorial: describe unidirectional channels",
	"created": "2011-11-10 21:20:39.549230",
	"patchsets": [
		1,
		3002,
		6001,
		2006,
		3004,
		3005,
		6006
	],
	"modified": "2011-11-10 22:02:22.193754",
	"closed": true,
	"issue": 5370058
}