{
	"description": "runtime: faster single-threaded channels\n\nLinux, Intel Xeon X5500\nBenchmarkChanProdCons100: old=85ns new=55ns\n\nMacBook, Intel Core2\nBefore:\nruntime_test.BenchmarkSelectUncontended\t 5000000\t       503 ns/op\nruntime_test.BenchmarkSelectUncontended-2\t10000000\t       286 ns/op\nruntime_test.BenchmarkSelectUncontended-4\t10000000\t       285 ns/op\nruntime_test.BenchmarkSelectContended\t 5000000\t       508 ns/op\nruntime_test.BenchmarkSelectContended-2\t 5000000\t       473 ns/op\nruntime_test.BenchmarkSelectContended-4\t 5000000\t       488 ns/op\nruntime_test.BenchmarkSelectNonblock\t10000000\t       278 ns/op\nruntime_test.BenchmarkSelectNonblock-2\t10000000\t       139 ns/op\nruntime_test.BenchmarkSelectNonblock-4\t10000000\t       156 ns/op\nruntime_test.BenchmarkChanProdCons10\t10000000\t       240 ns/op\nruntime_test.BenchmarkChanProdCons10-2\t 5000000\t       351 ns/op\nruntime_test.BenchmarkChanProdCons10-4\t 5000000\t       413 ns/op\nruntime_test.BenchmarkChanProdCons100\t10000000\t       175 ns/op\nruntime_test.BenchmarkChanProdCons100-2\t10000000\t       263 ns/op\nruntime_test.BenchmarkChanProdCons100-4\t10000000\t       263 ns/op\n\nAfter:\nruntime_test.BenchmarkSelectUncontended\t 5000000\t       319 ns/op\nruntime_test.BenchmarkSelectUncontended-2\t10000000\t       281 ns/op\nruntime_test.BenchmarkSelectUncontended-4\t10000000\t       282 ns/op\nruntime_test.BenchmarkSelectContended\t 5000000\t       321 ns/op\nruntime_test.BenchmarkSelectContended-2\t 5000000\t       471 ns/op\nruntime_test.BenchmarkSelectContended-4\t 5000000\t       485 ns/op\nruntime_test.BenchmarkSelectNonblock\t20000000\t        83.9 ns/op\nruntime_test.BenchmarkSelectNonblock-2\t10000000\t       149 ns/op\nruntime_test.BenchmarkSelectNonblock-4\t10000000\t       149 ns/op\nruntime_test.BenchmarkChanProdCons10\t20000000\t       120 ns/op\nruntime_test.BenchmarkChanProdCons10-2\t 5000000\t       356 ns/op\nruntime_test.BenchmarkChanProdCons10-4\t 5000000\t       477 ns/op\nruntime_test.BenchmarkChanProdCons100\t50000000\t        74.4 ns/op\nruntime_test.BenchmarkChanProdCons100-2\t10000000\t       234 ns/op\nruntime_test.BenchmarkChanProdCons100-4\t10000000\t       240 ns/op\n",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Russ, what do you think in general about this?",
			"disapproval": false,
			"date": "2011-11-09 19:13:08.924811",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2011-11-09 19:43:33.632933",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Comparing old and new:\n\nbenchmark                                    old ns/op    new ns/op    delta\nruntime_test.BenchmarkSelectUncontended        503          319  -36.58%\nruntime_test.BenchmarkSelectUncontended-2      286          281   -1.75%\nruntime_test.BenchmarkSelectUncontended-4      285          282   -1.05%\nruntime_test.BenchmarkSelectContended          508          321  -36.81%\nruntime_test.BenchmarkSelectContended-2        473          471   -0.42%\nruntime_test.BenchmarkSelectContended-4        488          485   -0.61%\nruntime_test.BenchmarkSelectNonblock           278           83  -69.82%\nruntime_test.BenchmarkSelectNonblock-2         139          149   +7.19%\nruntime_test.BenchmarkSelectNonblock-4         156          149   -4.49%\nruntime_test.BenchmarkChanProdCons10           240          120  -50.00%\nruntime_test.BenchmarkChanProdCons10-2         351          356   +1.42%\nruntime_test.BenchmarkChanProdCons10-4         413          477  +15.50%\nruntime_test.BenchmarkChanProdCons100          175           74  -57.49%\nruntime_test.BenchmarkChanProdCons100-2        263          234  -11.03%\nruntime_test.BenchmarkChanProdCons100-4        263          240   -8.75%\n\nI am not comfortable with this CL.  Tests on runtime.singleproc\nare just solidifying our dependence on $GOMAXPROCS, which we still\nwant to be able to remove some day.  This kind of change also makes\nit hurt more to turn on actual parallelism, but we want people to\nwant to do that.  This CL gives people more reasons to run \nsingle-threaded.\n\nIf a program is bottlenecked by channel sends it's hard to escape\nthe feeling that the program is written incorrectly.  That's \nobviously not true in all cases, but it is true in many.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-09 19:24:35.933082",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-09 19:12:32.405243",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 5372045: runtime: faster single-threaded channels",
	"created": "2011-11-09 17:27:32.548508",
	"patchsets": [
		1,
		2001,
		4001,
		4
	],
	"modified": "2011-11-09 19:43:35.507165",
	"closed": true,
	"issue": 5372045
}