{
	"description": "gc: better error for non-calling use of unsafe builtins.\n\nFixes issue 1951",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-09 11:00:31.899147",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5372041/diff/5001/src/cmd/gc/typecheck.c\nFile src/cmd/gc/typecheck.c (right):\n\nhttp://codereview.appspot.com/5372041/diff/5001/src/cmd/gc/typecheck.c#newcode214\nsrc/cmd/gc/typecheck.c:214: yyerror(\"builtin %N is not an expression, must be called\", n);\ns/builtin //\njust one less jargon word to understand.  \nit will say 'unsafe.Sizeof' or whatever,\nso that should be clear enough.\n\nhttp://codereview.appspot.com/5372041/diff/5001/src/cmd/gc/unsafe.c\nFile src/cmd/gc/unsafe.c (right):\n\nhttp://codereview.appspot.com/5372041/diff/5001/src/cmd/gc/unsafe.c#newcode106\nsrc/cmd/gc/unsafe.c:106: if(n ==N || n->op != ONAME || n->sym == S || n->sym->pkg != unsafepkg)\ns/N/ N/",
			"disapproval": false,
			"date": "2011-11-09 17:23:56.501404",
			"approval": true
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d4b32a24a1d7 ***\n\ngc: better error for non-calling use of unsafe builtins.\n\nFixes issue 1951\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5372041\n\nhttp://codereview.appspot.com/5372041/diff/5001/src/cmd/gc/typecheck.c\nFile src/cmd/gc/typecheck.c (right):\n\nhttp://codereview.appspot.com/5372041/diff/5001/src/cmd/gc/typecheck.c#newcode214\nsrc/cmd/gc/typecheck.c:214: yyerror(\"builtin %N is not an expression, must be called\", n);\nOn 2011/11/09 17:23:56, rsc wrote:\n> s/builtin //\n> just one less jargon word to understand.  \n> it will say 'unsafe.Sizeof' or whatever,\n> so that should be clear enough.\n\nDone.\n\nhttp://codereview.appspot.com/5372041/diff/5001/src/cmd/gc/unsafe.c\nFile src/cmd/gc/unsafe.c (right):\n\nhttp://codereview.appspot.com/5372041/diff/5001/src/cmd/gc/unsafe.c#newcode106\nsrc/cmd/gc/unsafe.c:106: if(n ==N || n->op != ONAME || n->sym == S || n->sym->pkg != unsafepkg)\nOn 2011/11/09 17:23:56, rsc wrote:\n> s/N/ N/\n\nDone.",
			"disapproval": false,
			"date": "2011-11-09 17:31:00.017800",
			"approval": false
		}
	],
	"owner_email": "lvd@google.com",
	"private": false,
	"base_url": "",
	"owner": "lvd",
	"subject": "code review 5372041: gc: better error for non-calling use of unsafe builtins.",
	"created": "2011-11-09 10:44:59.815302",
	"patchsets": [
		1,
		2001,
		5001,
		6002,
		3010
	],
	"modified": "2011-11-09 17:31:01.005185",
	"closed": true,
	"issue": 5372041
}