{
	"description": "include/{fmt,utf}.h: Port to Plan 9 emulation\n\ninclude/fmt.h include/utf.h: #if defined => #ifdef;\ninclude/fmt.h:\n. dropped argument names in declarations;\n. added #pragmas;\ninclude/utf.h:\n. migrated from src/lib9/utf/utf.h, it ought to be a first\n  class citizen.\n\nI'm hoping that these changes can be effected without negative\nimpact, they will be followed by more pervasive corrections.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [
		"golang-dev@googlegroups.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "The whole point of lib9 (and plan9port) is to provide the Plan 9\ninterface in ANSI environments.  There, it is fine to assume an\nANSI C compiler and necessarily appropriate (and certainly\nnot effectual) to put in things like #pragma varargck.  This patch\nwould not be appropriate in plan9port, and it is not appropriate here.\n\nI learned in the early days of plan9port (nearly a decade ago)\nthat you get a lot more leverage from working well *with* the\nsurrounding environment instead of trying to build a bubble inside\nof which everything looked exactly like Plan 9.  If you are in a bubble,\nit's too hard to connect to the outside, host system.  Since we're not\nbuilding a Plan 9 bubble, it's fine to use #if where that is idiomatic\nin the surrounding system.\n\nPorting a Unix port of the Plan 9 C library back to Plan 9 is not far\nfrom chasing your tail.  I don't ever expect to try to use 8c to build\na non-Plan 9 copy of 8g: part of working well with the surrounding\nenvironment is using their compilers and linkers, not ours.  We are\nbeing forced to do this even for Go when using cgo.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-15 05:39:50.262970",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Nov 14, 2011 at 16:04, Lucio De Re <lucio.dere@gmail.com> wrote:\n> I do, and it works perfectly well, but there are features in \"libfmt\"\n> (for want of a better name) that aren't matched by the Plan 9\n> offering. \u00a0I must confess it's a bit vague and I'll need to look a\n> little more carefully. \u00a0In the long run, though, I'm convinced these\n> changes are valuable, give me a couple of days to demonstrate it :-)\n\nThese libraries are a port of the routines in the Plan 9 C library.\nIf you port them back to Plan 9 you will have a Plan 9 port\nof a Unix port of the Plan 9 C library.  That makes no sense.\nIt is possible that there are bug fixes in this copy that need\nto be moved back into Plan 9.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-14 21:05:50.711906",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"lucio.dere@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-14 20:47:44.667508",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I do, and it works perfectly well, but there are features in \"libfmt\"\n(for want of a better name) that aren't matched by the Plan 9\noffering.  I must confess it's a bit vague and I'll need to look a\nlittle more carefully.  In the long run, though, I'm convinced these\nchanges are valuable, give me a couple of days to demonstrate it :-)\n\nLucio.\n\nOn 11/14/11, Russ Cox <rsc@golang.org> wrote:\n> Why not use the standard Plan 9 C library?\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-11-14 21:04:13.118634",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I'm sorry to be so insistent, I do appreciate the pressures that drive\nthe Go Authors in a particular direction, but I do think that there is\na conflict between practical or pragmatic decisions and their\ndescriptions as theoretically \"correct\".\n\nIs there a better forum than this to continue this discussion?  Here,\nit is too easy to cause or take offence.\n\nLucio.\n",
			"disapproval": false,
			"date": "2011-11-15 05:49:26.808724",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Why not use the standard Plan 9 C library?\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-14 20:48:38.739049",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I don't mean to be disrespectful, but isn't this a rationalisation?\nCompatibility with Plan 9 is a superset of compatibility with ANSI C;\nsure, there are times when #if goes beyond #ifdef, but does it need to\nbe encouraged?  And #pragma varargck is harmless.  On the other hand,\nit means that eventually the C tools included in the Go distribution\ncan compile lib9, which makes bootstrapping possible.  And the\nvarargcks will then help further development.\n\nMaybe this is the right question: is there sufficient gain in\nintroducing non-portable constructs in what is essentially a Plan 9\nproduct (lib9)?\n\nAgain, there are slightly deeper reasons for me heading that way, I\nthink they will come out in the wash even though they are not fresh in\nmy memory.  I really think the above is well worth taking into\nconsideration.  It may not be sufficient reason for change, though;\nI'm perfectly OK with you having the final say in this respect, I\nguess I need to make my case strong enough :-)\n\nLucio.\n\nOn 11/15/11, Russ Cox <rsc@golang.org> wrote:\n> For the two specific things you mentioned in the CL description:\n>\n> - every ANSI C compiler has #if\n> - the #pragma varargck are useless off of Plan 9.\n>\n> It is all well and good to keep the code honest, but in this\n> case honest means compatible with an ANSI C compiler,\n> not compatible with 8c.\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-11-15 04:27:52.682497",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, Nov 15, 2011 at 00:49, Lucio De Re <lucio.dere@gmail.com> wrote:\n> I'm sorry to be so insistent, I do appreciate the pressures that drive\n> the Go Authors in a particular direction, but I do think that there is\n> a conflict between practical or pragmatic decisions and their\n> descriptions as theoretically \"correct\".\n>\n> Is there a better forum than this to continue this discussion? \u00a0Here,\n> it is too easy to cause or take offence.\n\nFeel free to mail me off-list.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-15 05:58:35.632935",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Not exactly, it makes sense to be able to compile the lib9 and fmt\nmodules with the Plan 9 compilers, at minimum \"they keep them honest\".\n I can see other advantages, not least the fact that there have been\nenhancements, not just bug fixes, and these ought to be submitted to\nthe Plan 9 developers, which is hardly applicable if we use GCC-isms\nin them.\n\nStill, I didn't keep notes when I made the changes and I guess it is\nmy responsibility to justify what may seem like gratuitous changes.\nI'll go through the procedure again and report back.\n\nLucio.\n\nOn 11/14/11, Russ Cox <rsc@golang.org> wrote:\n> On Mon, Nov 14, 2011 at 16:04, Lucio De Re <lucio.dere@gmail.com> wrote:\n>> I do, and it works perfectly well, but there are features in \"libfmt\"\n>> (for want of a better name) that aren't matched by the Plan 9\n>> offering. \u00a0I must confess it's a bit vague and I'll need to look a\n>> little more carefully. \u00a0In the long run, though, I'm convinced these\n>> changes are valuable, give me a couple of days to demonstrate it :-)\n>\n> These libraries are a port of the routines in the Plan 9 C library.\n> If you port them back to Plan 9 you will have a Plan 9 port\n> of a Unix port of the Plan 9 C library.  That makes no sense.\n> It is possible that there are bug fixes in this copy that need\n> to be moved back into Plan 9.\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-11-15 03:56:11.797438",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "For the two specific things you mentioned in the CL description:\n\n- every ANSI C compiler has #if\n- the #pragma varargck are useless off of Plan 9.\n\nIt is all well and good to keep the code honest, but in this\ncase honest means compatible with an ANSI C compiler,\nnot compatible with 8c.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-15 04:04:22.055857",
			"approval": false
		}
	],
	"owner_email": "lucio.dere@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "lucio",
	"subject": "code review 5370095: include/{fmt,utf}.h: Port to Plan 9 emulation",
	"created": "2011-11-14 20:46:40.301629",
	"patchsets": [
		1,
		1002,
		1005
	],
	"modified": "2011-11-15 04:04:22.055857",
	"closed": false,
	"issue": 5370095
}