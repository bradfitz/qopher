{
	"description": "cc: generate argument pointer maps for C functions.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [
		"dave@cheney.net",
		"khr@google.com",
		"seb.binet@gmail.com",
		"daniel.morsing@gmail.com"
	],
	"messages": [
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://khr%40golang.org@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-23 22:13:36.171040",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/11683043/diff/17001/src/cmd/cc/pgen.c\nFile src/cmd/cc/pgen.c (right):\n\nhttps://codereview.appspot.com/11683043/diff/17001/src/cmd/cc/pgen.c#newcode645\nsrc/cmd/cc/pgen.c:645: static int32 pointermap_type(Type *t, int32 offset, int32 baseidx)\nline break after int32, sorry\n\nhttps://codereview.appspot.com/11683043/diff/17001/src/cmd/cc/pgen.c#newcode694\nsrc/cmd/cc/pgen.c:694: // Compute a bit vector to describe the pointer containing locations\nblank line above, sorry\n\nhttps://codereview.appspot.com/11683043/diff/17001/src/cmd/cc/pgen.c#newcode729\nsrc/cmd/cc/pgen.c:729: if(t->etype == TVOID) continue;\nbreak line",
			"disapproval": false,
			"date": "2013-07-24 04:45:59.146810",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FWIW, I would have just allocated the bitmap instead of the multipass. The\r\nbitmap is smaller than the instructions being generated, and it would give\r\nan opportunity to trim nptrs if the function ends with lots of\r\nnon-pointers. However, these aren't going to matter much in the C we have\r\nin the runtime. (I guess packages can have C too, though.) Anyway, it's\r\nfine as is too.\r\n",
			"disapproval": false,
			"date": "2013-07-24 04:47:25.568010",
			"approval": false
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=bb75d03e6ccb ***\n\ncc: generate argument pointer maps for C functions.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/11683043",
			"disapproval": false,
			"date": "2013-07-24 16:41:11.696460",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"khr@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/24 16:41:11, khr wrote:\n> *** Submitted as https://code.google.com/p/go/source/detail?r=bb75d03e6ccb ***\n> \n> cc: generate argument pointer maps for C functions.\n> \n> R=golang-dev, rsc\n> CC=golang-dev\n> https://codereview.appspot.com/11683043\n\nThis change has broken all the arm builders. Would you please revert it temporarily.",
			"disapproval": false,
			"date": "2013-07-24 21:53:08.301240",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sure, sorry.\r\n\r\n\r\nOn Wed, Jul 24, 2013 at 2:53 PM, <dave@cheney.net> wrote:\r\n\r\n> On 2013/07/24 16:41:11, khr wrote:\r\n>\r\n>> *** Submitted as\r\n>>\r\n> https://code.google.com/p/go/**source/detail?r=bb75d03e6ccb<https://code.google.com/p/go/source/detail?r=bb75d03e6ccb>***\r\n>\r\n>  cc: generate argument pointer maps for C functions.\r\n>>\r\n>\r\n>  R=golang-dev, rsc\r\n>> CC=golang-dev\r\n>> https://codereview.appspot.**com/11683043<https://codereview.appspot.com/11683043>\r\n>>\r\n>\r\n> This change has broken all the arm builders. Would you please revert it\r\n> temporarily.\r\n>\r\n> https://codereview.appspot.**com/11683043/<https://codereview.appspot.com/11683043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-24 21:54:02.639080",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks Keith.\r\n\r\nOn Thu, Jul 25, 2013 at 7:54 AM, Keith Randall <khr@google.com> wrote:\r\n> Sure, sorry.\r\n>\r\n>\r\n> On Wed, Jul 24, 2013 at 2:53 PM, <dave@cheney.net> wrote:\r\n>>\r\n>> On 2013/07/24 16:41:11, khr wrote:\r\n>>>\r\n>>> *** Submitted as\r\n>>\r\n>> https://code.google.com/p/go/source/detail?r=bb75d03e6ccb ***\r\n>>\r\n>>> cc: generate argument pointer maps for C functions.\r\n>>\r\n>>\r\n>>> R=golang-dev, rsc\r\n>>> CC=golang-dev\r\n>>> https://codereview.appspot.com/11683043\r\n>>\r\n>>\r\n>> This change has broken all the arm builders. Would you please revert it\r\n>> temporarily.\r\n>>\r\n>> https://codereview.appspot.com/11683043/\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-24 21:56:56.998360",
			"approval": false
		},
		{
			"sender": "seb.binet@gmail.com",
			"recipients": [
				"khr@golang.org",
				"dave@cheney.net",
				"khr@google.com",
				"seb.binet@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "just a small typo\n\nhttps://codereview.appspot.com/11683043/diff/23001/src/cmd/cc/pgen.c\nFile src/cmd/cc/pgen.c (right):\n\nhttps://codereview.appspot.com/11683043/diff/23001/src/cmd/cc/pgen.c#newcode642\nsrc/cmd/cc/pgen.c:642: // Makes a bitmap marking the the pointers in t.  t starts at the given byte\n- Makes a bitmap marking the the pointers\n+ Makes a bitmap marking the pointers",
			"disapproval": false,
			"date": "2013-07-25 09:25:34.722720",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Aha, I knew there was a reason I put the FUNCDATA at the bottom of the\r\nfunction. It was that if you put it at the top you get inscrutable errors\r\nfrom 5l.\r\n\r\nWhat was the reason you moved it to the top?\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-07-25 13:40:22.464320",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "At the bottom it often gets lost somehow.  I'm not sure why, maybe without\r\ncontrol flow to it is gets elided?  I'll investigate some more...\r\n\r\n\r\nOn Thu, Jul 25, 2013 at 6:40 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> Aha, I knew there was a reason I put the FUNCDATA at the bottom of the\r\n> function. It was that if you put it at the top you get inscrutable errors\r\n> from 5l.\r\n>\r\n> What was the reason you moved it to the top?\r\n>\r\n> Russ\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-25 19:28:35.512810",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Tricky. I agree that it _should_ be at the top, fwiw.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-07-25 20:07:20.092690",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jul 25, 2013 at 9:28 PM, Keith Randall <khr@google.com> wrote:\r\n> At the bottom it often gets lost somehow.  I'm not sure why, maybe without\r\n> control flow to it is gets elided?  I'll investigate some more...\r\n>\r\n\r\nCould very well be. The register optimizer doesn't know about metadata\r\ninstructions and will remove dead branches. Only reason it worked\r\npreviously was because we inserted metadata instructions at the entry\r\npoint.\r\n\r\nSome things got were missed when the new symbol table instructions\r\nwere added. We skip the TYPE instruction in the peephole optimizer and\r\nregopt, but not FUNCDATA and PCDATA.\r\n",
			"disapproval": false,
			"date": "2013-07-25 22:09:15.105990",
			"approval": false
		}
	],
	"owner_email": "khr@golang.org",
	"private": false,
	"base_url": "",
	"owner": "khr",
	"subject": "code review 11683043: cc: generate argument pointer maps for C functions.",
	"created": "2013-07-22 17:48:56.609300",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		11001,
		11002,
		14001,
		17001,
		23001
	],
	"modified": "2013-07-25 22:09:16.143610",
	"closed": true,
	"issue": 11683043
}