{
	"description": "exp/ssh: move common code to common.go",
	"cc": [
		"agl@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello agl@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-24 08:21:51.537686",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I suspect that decode can be cleaned up, otherwise looks good.\n\nhttp://codereview.appspot.com/5132041/diff/13001/src/pkg/exp/ssh/messages.go\nFile src/pkg/exp/ssh/messages.go (right):\n\nhttp://codereview.appspot.com/5132041/diff/13001/src/pkg/exp/ssh/messages.go#newcode576\nsrc/pkg/exp/ssh/messages.go:576: case msgDisconnect:\ncan we not just say\n\nvar msg interface{}\n\nat the toplevel of the function, followed by:\n\nswitch packet[0] {\ncase msgDisconnect:\n  msg = new(disconnectMsg)\ncase foo:\n...\n}\n\nand then\n\nif err := unmarshal(msg, packet, packet[0]); err != nil {\n  ...\n}\n\nhttp://codereview.appspot.com/5132041/diff/13001/src/pkg/exp/ssh/server.go\nFile src/pkg/exp/ssh/server.go (left):\n\nhttp://codereview.appspot.com/5132041/diff/13001/src/pkg/exp/ssh/server.go#oldcode654\nsrc/pkg/exp/ssh/server.go:654: case msgChannelData:\nI had deliberately processed this without using unmarshal on the basis that it's probably about ~50% of messages and just worth special casing. On the other hand, we can always special case it later.",
			"disapproval": false,
			"date": "2011-09-24 18:11:58.232023",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Thank you for your comments. PTAL\n\nhttp://codereview.appspot.com/5132041/diff/13001/src/pkg/exp/ssh/messages.go\nFile src/pkg/exp/ssh/messages.go (right):\n\nhttp://codereview.appspot.com/5132041/diff/13001/src/pkg/exp/ssh/messages.go#newcode576\nsrc/pkg/exp/ssh/messages.go:576: case msgDisconnect:\nYes, of course, that is much cleaner. Thank you\n\nOn 2011/09/24 18:11:58, agl1 wrote:\n> can we not just say\n> \n> var msg interface{}\n> \n> at the toplevel of the function, followed by:\n> \n> switch packet[0] {\n> case msgDisconnect:\n>   msg = new(disconnectMsg)\n> case foo:\n> ...\n> }\n> \n> and then\n> \n> if err := unmarshal(msg, packet, packet[0]); err != nil {\n>   ...\n> }\n\nhttp://codereview.appspot.com/5132041/diff/13001/src/pkg/exp/ssh/server.go\nFile src/pkg/exp/ssh/server.go (left):\n\nhttp://codereview.appspot.com/5132041/diff/13001/src/pkg/exp/ssh/server.go#oldcode654\nsrc/pkg/exp/ssh/server.go:654: case msgChannelData:\nI think there is still value in allocating a msgChannelData struct for it, even if that doesn't go though unmarshall. \n\nOn 2011/09/24 18:11:58, agl1 wrote:\n> I had deliberately processed this without using unmarshal on the basis that it's\n> probably about ~50% of messages and just worth special casing. On the other\n> hand, we can always special case it later.",
			"disapproval": false,
			"date": "2011-09-25 03:13:42.067071",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3299d0ca626a ***\n\nexp/ssh: move common code to common.go\n\nR=agl\nCC=golang-dev\nhttp://codereview.appspot.com/5132041\n\nCommitter: Adam Langley <agl@golang.org>\n\nhttp://codereview.appspot.com/5132041/diff/18001/src/pkg/exp/ssh/server.go\nFile src/pkg/exp/ssh/server.go (right):\n\nhttp://codereview.appspot.com/5132041/diff/18001/src/pkg/exp/ssh/server.go#newcode641\nsrc/pkg/exp/ssh/server.go:641: panic(fmt.Sprintf(\"unknown message: %#v\", msg))\nI'm going to revert this line before landing rather than add another round trip to the whole code review. I think this makes it far too easy to panic the server.\n\nFor debugging it's certainly useful to print something, but that can be done locally when developing and I think println(\"unknown message:\\n\" + hex.Dump(msg)) is clearer in any case.\n\nYou're welcome to bring it up in future reviews if you differ on this point.\n\n\nCheers",
			"disapproval": false,
			"date": "2011-09-26 14:25:33.969485",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Good call, arguably the panic was a left over debugging feature. I'll add a unit test to verify that all message types are digestible. \n\nSent from my iPhone\n\nOn 27/09/2011, at 0:25, agl@golang.org wrote:\n\n> *** Submitted as\n> http://code.google.com/p/go/source/detail?r=3299d0ca626a ***\n> \n> exp/ssh: move common code to common.go\n> \n> R=agl\n> CC=golang-dev\n> http://codereview.appspot.com/5132041\n> \n> Committer: Adam Langley <agl@golang.org>\n> \n> \n> \n> http://codereview.appspot.com/5132041/diff/18001/src/pkg/exp/ssh/server.go\n> File src/pkg/exp/ssh/server.go (right):\n> \n> http://codereview.appspot.com/5132041/diff/18001/src/pkg/exp/ssh/server.go#newcode641\n> src/pkg/exp/ssh/server.go:641: panic(fmt.Sprintf(\"unknown message: %#v\",\n> msg))\n> I'm going to revert this line before landing rather than add another\n> round trip to the whole code review. I think this makes it far too easy\n> to panic the server.\n> \n> For debugging it's certainly useful to print something, but that can be\n> done locally when developing and I think println(\"unknown message:\\n\" +\n> hex.Dump(msg)) is clearer in any case.\n> \n> You're welcome to bring it up in future reviews if you differ on this\n> point.\n> \n> \n> Cheers\n> \n> http://codereview.appspot.com/5132041/\n",
			"disapproval": false,
			"date": "2011-09-26 22:13:12.472366",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 5132041: exp/ssh: move common code to common.go",
	"created": "2011-09-24 07:31:17.977984",
	"patchsets": [
		1,
		2001,
		4001,
		6001,
		8001,
		10001,
		13001,
		15001,
		8,
		18001
	],
	"modified": "2011-10-07 10:43:29.300623",
	"closed": true,
	"issue": 5132041
}