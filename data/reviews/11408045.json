{
	"description": "go.tools/ssa: some refactorings\n\nssa:\n- Prog.CreatePackages inlined into all callers.\n- Prog.CreatePackage is now exposed; idempotent; and checks for errors.\n- '*address' not 'address' now implements lvalue (since it's 6 words).\n- removed types.Method case from createMemberFromObject.\n\nimporter:\n- added importer.PackageInfo.String method.\n- simplifed importer.PackageInfo by putting types.Info in it.\n- removed obsolete precondition from IsType.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"gri@golang.org"
	],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-18 20:30:51.377680",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11408045/diff/8001/importer/importer.go\nFile importer/importer.go (right):\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/importer.go#newcode164\nimporter/importer.go:164: // TODO(adonovan): consider dropping err result since it's redundant.\nOn 2013/07/18 20:56:57, adonovan wrote:\n> On 2013/07/18 20:37:58, gri wrote:\n> > yes, drop it\n> \n> Done... but I'm a little nervous that the new signature doesn't invite callers\n> to check for errors.  We'll see.\n\nyou could return nil in case of an error, if you don't care about partial information",
			"disapproval": false,
			"date": "2013-07-18 21:00:19.851980",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/importer.go\nFile importer/importer.go (right):\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/importer.go#newcode154\nimporter/importer.go:154: info: types.Info{\ninstead of info here I would embed types.Info in PackageInfo\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/importer.go#newcode164\nimporter/importer.go:164: // TODO(adonovan): consider dropping err result since it's redundant.\nyes, drop it\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/pkginfo.go\nFile importer/pkginfo.go (right):\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/pkginfo.go#newcode24\nimporter/pkginfo.go:24: info  types.Info  // type-checker deductions.\njust embed types.Info\n\nthere's no harm in exporting the fields\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/pkginfo.go#newcode62\nimporter/pkginfo.go:62: if t, ok := info.info.Types[e]; ok {\nthis will become info.Types[e]\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/pkginfo.go#newcode78\nimporter/pkginfo.go:78: return info.info.Values[e]\netc.",
			"disapproval": false,
			"date": "2013-07-18 20:37:58.586610",
			"approval": true
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11408045/diff/8001/importer/importer.go\nFile importer/importer.go (right):\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/importer.go#newcode154\nimporter/importer.go:154: info: types.Info{\nOn 2013/07/18 20:37:58, gri wrote:\n> instead of info here I would embed types.Info in PackageInfo\n\nDone.\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/importer.go#newcode164\nimporter/importer.go:164: // TODO(adonovan): consider dropping err result since it's redundant.\nOn 2013/07/18 20:37:58, gri wrote:\n> yes, drop it\n\nDone... but I'm a little nervous that the new signature doesn't invite callers to check for errors.  We'll see.\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/pkginfo.go\nFile importer/pkginfo.go (right):\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/pkginfo.go#newcode24\nimporter/pkginfo.go:24: info  types.Info  // type-checker deductions.\nOn 2013/07/18 20:37:58, gri wrote:\n> just embed types.Info\n> \n> there's no harm in exporting the fields\n\nDone.\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/pkginfo.go#newcode62\nimporter/pkginfo.go:62: if t, ok := info.info.Types[e]; ok {\nOn 2013/07/18 20:37:58, gri wrote:\n> this will become info.Types[e]\n\nDone.\n\nhttps://codereview.appspot.com/11408045/diff/8001/importer/pkginfo.go#newcode78\nimporter/pkginfo.go:78: return info.info.Values[e]\nOn 2013/07/18 20:37:58, gri wrote:\n> etc.\n\nDone.",
			"disapproval": false,
			"date": "2013-07-18 20:56:56.837560",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=7d2962d2ab8c&repo=tools ***\n\ngo.tools/ssa: some refactorings\n\nssa:\n- Prog.CreatePackages inlined into all callers.\n- Prog.CreatePackage is now exposed; idempotent; and checks for errors.\n- '*address' not 'address' now implements lvalue (since it's 6 words).\n- removed types.Method case from createMemberFromObject.\n\nimporter:\n- added importer.PackageInfo.String method.\n- simplifed importer.PackageInfo by putting types.Info in it.\n- removed obsolete precondition from IsType.\n\nR=gri\nCC=golang-dev\nhttps://codereview.appspot.com/11408045",
			"disapproval": false,
			"date": "2013-07-18 20:59:07.884310",
			"approval": false
		}
	],
	"owner_email": "adonovan@google.com",
	"private": false,
	"base_url": "",
	"owner": "adonovan",
	"subject": "code review 11408045: go.tools/ssa: some refactorings",
	"created": "2013-07-18 20:18:45.218380",
	"patchsets": [
		1,
		2002,
		5001,
		8001,
		13001
	],
	"modified": "2013-07-18 21:00:20.137050",
	"closed": true,
	"issue": 11408045
}