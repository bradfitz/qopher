{
	"description": "runtime: if span was scavenged, mark it as needing to be zeroed\n\nUpdate issue 4979.",
	"cc": [
		"dvyukov@google.com",
		"r@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"iant@golang.org",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/8697045/diff/2001/src/pkg/runtime/mheap.c\nFile src/pkg/runtime/mheap.c (right):\n\nhttps://codereview.appspot.com/8697045/diff/2001/src/pkg/runtime/mheap.c#newcode124\nsrc/pkg/runtime/mheap.c:124: if(s->npreleased > 0) {\ndrop excessive {}\n\nhttps://codereview.appspot.com/8697045/diff/2001/src/pkg/runtime/mheap.c#newcode126\nsrc/pkg/runtime/mheap.c:126: // a call to madvise, so mark this page as needing zeroing.\nadd that the issue is when kernel zeroize only the first page but not the rest.\n\nhttps://codereview.appspot.com/8697045/diff/2001/src/pkg/runtime/mheap.c#newcode127\nsrc/pkg/runtime/mheap.c:127: *(uintptr*)(s->start<<PageShift) = 0xbeadbeadbeadbeadULL;\nprobably add a cast to (uintptr), that's what we do in mgc0.c when write magic constants.",
			"disapproval": false,
			"date": "2013-04-16 05:44:25.420420",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"dvyukov@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dvyukov@google.com, r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-04-16 05:54:32.769590",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I agree that this CL seems to make the problem go away, but that comment\r\ncould use some work.\r\n\r\nWhy does that mark it as needing zeroing?\r\n\r\nbeadbeadbeadbead doesn't occur anywhere else in the tree.\r\n\r\nAnd: which \"kernels\"? (Not Linux, for instance)\r\n\r\nConsidering the amount of time spent on this bug, a relatively meaty\r\ncomment is warranted. At least with a reference to the bug number.\r\n\r\nAlso: the CL should \"Update Issue NNNN\".\r\n\r\n\r\n\r\n\r\nOn Mon, Apr 15, 2013 at 10:54 PM, <iant@golang.org> wrote:\r\n\r\n> Reviewers: dvyukov, r,\r\n>\r\n> Message:\r\n> Hello dvyukov@google.com, r (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> runtime: if span was scavenged, mark it as needing to be zeroed\r\n>\r\n> Please review this at https://codereview.appspot.**com/8697045/<https://codereview.appspot.com/8697045/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/mheap.c\r\n>\r\n>\r\n> Index: src/pkg/runtime/mheap.c\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/mheap.c\r\n> +++ b/src/pkg/runtime/mheap.c\r\n> @@ -121,6 +121,11 @@\r\n>         s->state = MSpanInUse;\r\n>         mstats.heap_idle -= s->npages<<PageShift;\r\n>         mstats.heap_released -= s->npreleased<<PageShift;\r\n> +       if(s->npreleased > 0) {\r\n> +               // Kernels do not reliably return a zeroed page after\r\n> +               // a call to madvise, so mark this span as needing zeroing.\r\n> +               *(uintptr*)(s->start<<**PageShift) =\r\n> 0xbeadbeadbeadbeadULL;\r\n> +       }\r\n>         s->npreleased = 0;\r\n>\r\n>         if(s->npages > npage) {\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-16 05:57:49.529930",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"dvyukov@google.com",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8697045/diff/2001/src/pkg/runtime/mheap.c\nFile src/pkg/runtime/mheap.c (right):\n\nhttps://codereview.appspot.com/8697045/diff/2001/src/pkg/runtime/mheap.c#newcode124\nsrc/pkg/runtime/mheap.c:124: if(s->npreleased > 0) {\nOn 2013/04/16 05:44:31, dvyukov wrote:\n> drop excessive {}\n\nI don't think they are excessive here because of the comment--the comment obscures the fact that there is only a single line, and though the braces are unnecessary I think they make the code more clear.  (But if this is the runtime *.c standard I will change it.)\n\nhttps://codereview.appspot.com/8697045/diff/2001/src/pkg/runtime/mheap.c#newcode126\nsrc/pkg/runtime/mheap.c:126: // a call to madvise, so mark this page as needing zeroing.\nOn 2013/04/16 05:44:31, dvyukov wrote:\n> add that the issue is when kernel zeroize only the first page but not the rest.\n\nDone.\n\nhttps://codereview.appspot.com/8697045/diff/2001/src/pkg/runtime/mheap.c#newcode127\nsrc/pkg/runtime/mheap.c:127: *(uintptr*)(s->start<<PageShift) = 0xbeadbeadbeadbeadULL;\nOn 2013/04/16 05:44:31, dvyukov wrote:\n> probably add a cast to (uintptr), that's what we do in mgc0.c when write magic\n> constants.\n\nDone.",
			"disapproval": false,
			"date": "2013-04-16 06:00:35.485440",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"dvyukov@google.com",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Updated comment per bradfitz.  PTAL.",
			"disapproval": false,
			"date": "2013-04-16 06:11:25.061800",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"iant@golang.org",
				"dvyukov@google.com",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but wait for bradfitz",
			"disapproval": false,
			"date": "2013-04-16 14:40:14.722060",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\n\r\nOn Tue, Apr 16, 2013 at 7:40 AM, <r@golang.org> wrote:\r\n\r\n> LGTM but wait for bradfitz\r\n>\r\n> https://codereview.appspot.**com/8697045/<https://codereview.appspot.com/8697045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-16 14:49:21.676730",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"dvyukov@google.com",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=0704ea89235b ***\n\nruntime: if span was scavenged, mark it as needing to be zeroed\n\nUpdate issue 4979.\n\nR=dvyukov, r, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/8697045",
			"disapproval": false,
			"date": "2013-04-16 16:08:14.909890",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 8697045: runtime: if span was scavenged, mark it as needing to b...",
	"created": "2013-04-15 06:16:30.406690",
	"patchsets": [
		1,
		2001,
		7001,
		10001,
		14001,
		20001
	],
	"modified": "2013-04-16 16:08:17.802340",
	"closed": true,
	"issue": 8697045
}