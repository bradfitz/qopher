{
	"description": "net: add missing File method document",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-04-23 22:25:51.021950",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-04-23 11:30:17.225050",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\n\r\nOn Tue, Apr 23, 2013 at 4:30 AM, <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> net: add missing File method document\r\n>\r\n> Please review this at https://codereview.appspot.**com/8698049/<https://codereview.appspot.com/8698049/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/tcpsock_plan9.go\r\n>   M src/pkg/net/tcpsock_posix.go\r\n>   M src/pkg/net/unixsock_plan9.go\r\n>   M src/pkg/net/unixsock_posix.go\r\n>\r\n>\r\n> Index: src/pkg/net/tcpsock_plan9.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/tcpsock_plan9.go\r\n> +++ b/src/pkg/net/tcpsock_plan9.go\r\n> @@ -159,6 +159,10 @@\r\n>  // File returns a copy of the underlying os.File, set to blocking\r\n>  // mode.  It is the caller's responsibility to close f when finished.\r\n>  // Closing l does not affect f, and closing f does not affect l.\r\n> +//\r\n> +// The returned os.File's file descriptor is different from the\r\n> +// connection's.  Attempting to change properties of the original\r\n> +// using this duplicate may or may not have the desired effect.\r\n>  func (l *TCPListener) File() (f *os.File, err error) { return l.dup() }\r\n>\r\n>  // ListenTCP announces on the TCP address laddr and returns a TCP\r\n> Index: src/pkg/net/tcpsock_posix.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/tcpsock_posix.go\r\n> +++ b/src/pkg/net/tcpsock_posix.go\r\n> @@ -267,6 +267,10 @@\r\n>  // File returns a copy of the underlying os.File, set to blocking\r\n>  // mode.  It is the caller's responsibility to close f when finished.\r\n>  // Closing l does not affect f, and closing f does not affect l.\r\n> +//\r\n> +// The returned os.File's file descriptor is different from the\r\n> +// connection's.  Attempting to change properties of the original\r\n> +// using this duplicate may or may not have the desired effect.\r\n>  func (l *TCPListener) File() (f *os.File, err error) { return l.fd.dup() }\r\n>\r\n>  // ListenTCP announces on the TCP address laddr and returns a TCP\r\n> Index: src/pkg/net/unixsock_plan9.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/unixsock_plan9.**go\r\n> +++ b/src/pkg/net/unixsock_plan9.**go\r\n> @@ -126,6 +126,10 @@\r\n>  // File returns a copy of the underlying os.File, set to blocking\r\n>  // mode.  It is the caller's responsibility to close f when finished.\r\n>  // Closing l does not affect f, and closing f does not affect l.\r\n> +//\r\n> +// The returned os.File's file descriptor is different from the\r\n> +// connection's.  Attempting to change properties of the original\r\n> +// using this duplicate may or may not have the desired effect.\r\n>  func (l *UnixListener) File() (*os.File, error) {\r\n>         return nil, syscall.EPLAN9\r\n>  }\r\n> Index: src/pkg/net/unixsock_posix.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/unixsock_posix.**go\r\n> +++ b/src/pkg/net/unixsock_posix.**go\r\n> @@ -339,6 +339,10 @@\r\n>  // File returns a copy of the underlying os.File, set to blocking\r\n>  // mode.  It is the caller's responsibility to close f when finished.\r\n>  // Closing l does not affect f, and closing f does not affect l.\r\n> +//\r\n> +// The returned os.File's file descriptor is different from the\r\n> +// connection's.  Attempting to change properties of the original\r\n> +// using this duplicate may or may not have the desired effect.\r\n>  func (l *UnixListener) File() (f *os.File, err error) { return l.fd.dup()\r\n> }\r\n>\r\n>  // ListenUnixgram listens for incoming Unix datagram packets addressed\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-23 20:16:54.204020",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e729bb70416a ***\n\nnet: add missing File method document\n\nR=golang-dev, bradfitz, r\nCC=golang-dev\nhttps://codereview.appspot.com/8698049",
			"disapproval": false,
			"date": "2013-04-23 23:32:23.970180",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 8698049: net: add missing File method document",
	"created": "2013-04-23 11:28:59.982810",
	"patchsets": [
		1,
		2001,
		4001,
		8001
	],
	"modified": "2013-04-23 23:32:26.728010",
	"closed": true,
	"issue": 8698049
}