{
	"description": "build: keep environment variable changes local during Windows build",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"alex.brainman@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 13, 2012 at 23:58,  <alex.brainman@gmail.com> wrote:\n> It builds, but testing fails:\n>\n> runtime/cgo\n> testing\n> testing/iotest\n> testing/quick\n> .\n> # Testing packages.\n> 'go' is not recognized as an internal or external command,\n> operable program or batch file.\n>\n> go is, probably, not in the PATH anymore.\n\nIndeed.  The --no-local argument in all.bat\nis supposed to tell make.bat not to use\nsetlocal/endlocal, so that the vars will still\nbe there for run.bat to see, but maybe I got\nthat check wrong.\n",
			"disapproval": false,
			"date": "2012-02-14 05:06:35.682975",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "And I still do not understand how is it possible for amd64 to work now, but 386 builder still fails with\n\n# runtime/cgo\nC:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\2\\go-build197556978\\runtime\\cgo\\_obj\\_cgo_gotypes.go:7: import C:\\go\\pkg\\windows_386/syscall.a: object is [windows 386 weekly.2012-02-07 +9d7addec2635 X:none] expected [windows 386 weekly.2012-02-07 +1cd9ea014a9e X:none]\n\nAlex",
			"disapproval": false,
			"date": "2012-02-14 05:11:00.335278",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-14 04:37:37.708676",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 14, 2012 at 00:08,  <alex.brainman@gmail.com> wrote:\n> I am more and more confused :-).\n>\n> You have\n>\n> eval $(go tool dist env)\n>\n> in run.bash, but how does builder knows where to find go executable.\n\nall.bash runs make.bash using . ./make.bash\nmeaning that it runs as part of all.bash's shell.\nSo the environment variables set in make.bash\npropagate up to all.bash and then back down\ninto run.bash.\n\nI'm trying to do the same thing on Windows.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-14 05:11:46.267998",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 14, 2012 at 00:24,  <alex.brainman@gmail.com> wrote:\n> \"... When the end of a batch script is reached, an implied ENDLOCAL is\n> executed for any outstanding SETLOCAL commands issued by that batch\n> script. ...\"\n\nThat should be okay, since I am not issuing setlocal in make.bat\n(at least I am trying to goto around it).  But it's nice to know I don't\nhave to call endlocal explicitly.\n",
			"disapproval": false,
			"date": "2012-02-14 05:36:03.885719",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Completely untested.  Am I misreading the docs?\n",
			"disapproval": false,
			"date": "2012-02-14 04:38:03.213555",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/14 04:38:03, rsc wrote:\n> Completely untested.  Am I misreading the docs?\n\nI will play with it here. I never use batch files, so it is all new for me, but it sounds like what we need. Feel free to submit.\n\nAlex",
			"disapproval": false,
			"date": "2012-02-14 04:42:42.874247",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 14, 2012 at 00:11,  <alex.brainman@gmail.com> wrote:\n> And I still do not understand how is it possible for amd64 to work now,\n> but 386 builder still fails with\n>\n> # runtime/cgo\n> C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\2\\go-build197556978\\runtime\\cgo\\_obj\\_cgo_gotypes.go:7:\n> import C:\\go\\pkg\\windows_386/syscall.a: object is [windows 386\n> weekly.2012-02-07 +9d7addec2635 X:none] expected [windows 386\n> weekly.2012-02-07 +1cd9ea014a9e X:none]\n\nI'm pretty sure this is the 386 builder being run with stale\nenvironment variables left over from the build of the builder.\nI tried clearing a few but it obviously didn't help.\nIt did help on amd64 though.  I just restarted the 386 builder\nin a brand new cmd.exe window.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-14 05:14:22.692154",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 13, 2012 at 23:42,  <alex.brainman@gmail.com> wrote:\n> I will play with it here. I never use batch files, so it is all new for\n\nCan you hg clpatch it in and play with it?  If it looks good, submit it.\nI've restarted both builders with cleaner environments; maybe that\nwill help.\n\nI am a little skeptical, because it looks like the builder sets up\na pretty clean environment to begin with.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-14 04:44:00.091784",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Mind you, setlocal did work, my caller cmd.exe environment didn't change.\n\nAlex",
			"disapproval": false,
			"date": "2012-02-14 04:59:48.839480",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am more and more confused :-).\n\nYou have\n\neval $(go tool dist env)\n\nin run.bash, but how does builder knows where to find go executable.\n\nAlex",
			"disapproval": false,
			"date": "2012-02-14 05:08:11.634632",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5661054/diff/2004/src/make.bat\nFile src/make.bat (right):\n\nhttp://codereview.appspot.com/5661054/diff/2004/src/make.bat#newcode15\nsrc/make.bat:15: if x%1==--no-local goto nolocal\ns/==-/==x-/\nthis is your problem.\n\nBut I made more small changes and simplifications:\nhttp://codereview.appspot.com/5673048/\n\nI propose you drop your CL and we use mine.",
			"disapproval": false,
			"date": "2012-02-15 01:59:29.647506",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It builds, but testing fails:\n\nruntime/cgo\ntesting\ntesting/iotest\ntesting/quick\n.\n# Testing packages.\n'go' is not recognized as an internal or external command,\noperable program or batch file.\n\ngo is, probably, not in the PATH anymore.\n\nAlex",
			"disapproval": false,
			"date": "2012-02-14 04:58:31.270723",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/14 05:11:46, rsc wrote:\n> \n> I'm trying to do the same thing on Windows.\n> \n\nIt looks like you won't be able to use setlocal to achive that. From http://www.computerhope.com/setlocal.htm:\n\n\"... When the end of a batch script is reached, an implied ENDLOCAL is executed for any outstanding SETLOCAL commands issued by that batch script. ...\"\n\nAlex",
			"disapproval": false,
			"date": "2012-02-14 05:24:29.062293",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Oh. That should do it. I think you are pretty close. Maybe leave it for another day. We have one builder going. I will have a go too.\n\nAlex",
			"disapproval": false,
			"date": "2012-02-14 05:16:29.947027",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5661054: build: keep environment variable changes local during W...",
	"created": "2012-02-14 04:37:29.196407",
	"patchsets": [
		1,
		2001,
		2004
	],
	"modified": "2012-02-14 05:16:29.947027",
	"closed": false,
	"issue": 5661054
}