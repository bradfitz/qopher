{
	"description": "net: Implement FileListener, FileConn, and File methods for Plan 9\n\nFunctions for representing network connections as files\nand vice versa, on Plan 9.\n\nRepresenting network connections as files is not so\nstraight-forward, because a network connection on Plan 9\nis represented by a host of files rather than a single\nfile descriptor (as is the case on UNIX). We use the\ntype system to distinguish between listeners and\nconnections, returning the control file in the former\ncase and the data file in the latter case.\n",
	"cc": [
		"rsc@golang.org",
		"rminnich@gmail.com",
		"ality@pbrane.org",
		"akumar@mail.nanosouffle.net",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7235068/diff/4001/src/pkg/net/fd_plan9.go\nFile src/pkg/net/fd_plan9.go (right):\n\nhttps://codereview.appspot.com/7235068/diff/4001/src/pkg/net/fd_plan9.go#newcode43\nsrc/pkg/net/fd_plan9.go:43: fd.data, err = os.OpenFile(fd.dir+\"/data\", os.O_RDWR, 0)\nI have no memory of this code. Why does this open data on the first Read instead of when the fd is created? What is going on here?",
			"disapproval": false,
			"date": "2013-01-30 17:57:56.166230",
			"approval": false
		},
		{
			"sender": "akumar@mail.nanosouffle.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Just for reference, that's CL 7228068. I have updates for this\r\nCL, which I'll push once that's dealt with.\r\n",
			"disapproval": false,
			"date": "2013-01-31 23:20:51.812470",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, rminnich@gmail.com, ality@pbrane.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-30 14:19:57.382340",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm not sure why it's written that way - I agree that this\r\nwould be better done inside dial/accept. Would you like\r\nme to include the change along with this CL?\r\n\r\nOn 30 January 2013 17:57,  <rsc@golang.org> wrote:\r\n>\r\n> https://codereview.appspot.com/7235068/diff/4001/src/pkg/net/fd_plan9.go\r\n> File src/pkg/net/fd_plan9.go (right):\r\n>\r\n> https://codereview.appspot.com/7235068/diff/4001/src/pkg/net/fd_plan9.go#newcode43\r\n> src/pkg/net/fd_plan9.go:43: fd.data, err = os.OpenFile(fd.dir+\"/data\",\r\n> os.O_RDWR, 0)\r\n> I have no memory of this code. Why does this open data on the first Read\r\n> instead of when the fd is created? What is going on here?\r\n>\r\n> https://codereview.appspot.com/7235068/\r\n",
			"disapproval": false,
			"date": "2013-01-30 18:56:06.454960",
			"approval": false
		},
		{
			"sender": "rminnich@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 30, 2013 at 1:55 PM, Akshat Kumar <seed@mail.nanosouffle.net> wrote:\r\n> I'm not sure why it's written that way - I agree that this\r\n> would be better done inside dial/accept. Would you like\r\n> me to include the change along with this CL?\r\n\r\ndoesn't seem appropriate for this CL, but as something to do\r\nseparately. It's been there for a while IIRC.\r\nron\r\n",
			"disapproval": false,
			"date": "2013-01-30 18:57:35.286840",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "please try to clean that up and then come back to this CL. that should make\r\nthis CL simpler.\r\n",
			"disapproval": false,
			"date": "2013-01-30 19:02:18.992080",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Akshat Kumar <akumar@mail.nanosouffle.net> once said:\r\n> Just for reference, that's CL 7228068. I have updates for this\r\n> CL, which I'll push once that's dealt with.\r\n\r\nI submitted 7228068. Please update this CL.\r\n\r\nThanks,\r\n  Anthony\r\n",
			"disapproval": false,
			"date": "2013-02-20 01:49:05.589280",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"ality@pbrane.org",
				"akumar@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nAlso updated the description.",
			"disapproval": false,
			"date": "2013-02-23 01:10:05.420880",
			"approval": false
		},
		{
			"sender": "rminnich@gmail.com",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"ality@pbrane.org",
				"akumar@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Unless I hear more today I'm going to submit this one. Our goal is to get a build&test machine going but we need to get these last bits finished up.",
			"disapproval": false,
			"date": "2013-02-23 17:28:10.014650",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"ality@pbrane.org",
				"akumar@mail.nanosouffle.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "drive-by.\n\nhttps://codereview.appspot.com/7235068/diff/20001/src/pkg/net/file_plan9.go\nFile src/pkg/net/file_plan9.go (right):\n\nhttps://codereview.appspot.com/7235068/diff/20001/src/pkg/net/file_plan9.go#newcode23\nsrc/pkg/net/file_plan9.go:23: n, err := status.Read(buf[:])\nio.ReadFull?\n\nmight be worth documenting len's meaning on this function. I might use a different variable name, too.",
			"disapproval": false,
			"date": "2013-02-23 19:45:12.388850",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"ality@pbrane.org",
				"akumar@mail.nanosouffle.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nAlso made sure to close the status file\nin case of returning from error.\n\nhttps://codereview.appspot.com/7235068/diff/20001/src/pkg/net/file_plan9.go\nFile src/pkg/net/file_plan9.go (right):\n\nhttps://codereview.appspot.com/7235068/diff/20001/src/pkg/net/file_plan9.go#newcode23\nsrc/pkg/net/file_plan9.go:23: n, err := status.Read(buf[:])\nOn 2013/02/23 19:45:12, bradfitz wrote:\n> io.ReadFull?\n> \n> might be worth documenting len's meaning on this function. I might use a\n> different variable name, too.\n\nDone.",
			"disapproval": false,
			"date": "2013-02-25 08:09:34.197580",
			"approval": false
		},
		{
			"sender": "rminnich@gmail.com",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"ality@pbrane.org",
				"akumar@mail.nanosouffle.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ebc229da2df9 ***\n\nnet: Implement FileListener, FileConn, and File methods for Plan 9\n\nFunctions for representing network connections as files\nand vice versa, on Plan 9.\n\nRepresenting network connections as files is not so\nstraight-forward, because a network connection on Plan 9\nis represented by a host of files rather than a single\nfile descriptor (as is the case on UNIX). We use the\ntype system to distinguish between listeners and\nconnections, returning the control file in the former\ncase and the data file in the latter case.\n\nR=rsc, rminnich, ality, akumar, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7235068\n\nCommitter: Ron Minnich <rminnich@gmail.com>",
			"disapproval": false,
			"date": "2013-02-26 00:26:45.024150",
			"approval": false
		}
	],
	"owner_email": "seed@mail.nanosouffle.net",
	"private": false,
	"base_url": "",
	"owner": "akumar",
	"subject": "code review 7235068: net: Implement FileListener, FileConn, and File methods...",
	"created": "2013-01-30 14:17:16.735350",
	"patchsets": [
		1,
		2001,
		4001,
		20001,
		18002
	],
	"modified": "2013-02-26 00:38:14.095220",
	"closed": true,
	"issue": 7235068
}