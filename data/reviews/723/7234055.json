{
	"description": "crypto/rc4: add simple amd64 asm implementation.\n\n(Although it's still half the speed of OpenSSL.)\n\nbenchmark           old ns/op    new ns/op    delta\nBenchmarkRC4_128         1409          398  -71.75%\nBenchmarkRC4_1K         10920         2898  -73.46%\nBenchmarkRC4_8K        131323        23083  -82.42%\n\nbenchmark            old MB/s     new MB/s  speedup\nBenchmarkRC4_128        90.83       321.43    3.54x\nBenchmarkRC4_1K         93.77       353.28    3.77x\nBenchmarkRC4_8K         61.65       350.73    5.69x",
	"cc": [
		"rsc@golang.org",
		"remyoudompheng@gmail.com",
		"golang-dev@googlegroups.com",
		"jgrahamc@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jan 29, 2013 at 5:19 PM,  <remyoudompheng@gmail.com> wrote:\r\n> Can you benchmark against the following simple improvement?\r\n> It gives a large boost here, and we have a performance regression from\r\n> Go 1 in the compiler due to the disappearance of \"sudoaddable\".\r\n>\r\n> func (c *Cipher) XORKeyStream(dst, src []byte) {\r\n>       i, j := c.i, c.j\r\n>       for k, v := range src {\r\n>             i += 1\r\n>             j += c.s[i]\r\n>             c.s[i], c.s[j] = c.s[j], c.s[i]\r\n>             dst[k] = v ^ c.s[c.s[i]+c.s[j]]\r\n>       }\r\n>       c.i, c.j = i, j\r\n> }\r\n\r\nThanks! I'd like to include that in this change too, but the asm\r\nversion is still worthwhile it appears.\r\n\r\nHere's the Go code benchmarked on the same machine as I've run everything else:\r\n\r\nBenchmarkRC4_128         2000000              1012 ns/op         126.43 MB/s\r\nBenchmarkRC4_1K   500000              8007 ns/op         127.88 MB/s\r\nBenchmarkRC4_8K    50000             67860 ns/op         119.30 MB/s\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2013-01-29 22:22:32.933220",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"jgrahamc@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, jgrahamc@gmail.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-29 21:52:45.813890",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"jgrahamc@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7234055/diff/5006/src/pkg/crypto/rc4/rc4_amd64.go\nFile src/pkg/crypto/rc4/rc4_amd64.go (right):\n\nhttps://codereview.appspot.com/7234055/diff/5006/src/pkg/crypto/rc4/rc4_amd64.go#newcode1\nsrc/pkg/crypto/rc4/rc4_amd64.go:1: // Copyright 2013 The Go Authors. All rights reserved.\nOn 2013/01/29 22:05:31, rsc wrote:\n> maybe call this file rc4_asm.go and add a // +build amd64, so that if we write\n> 386 asm we don't need a second file here?\n\nDone.\n\nhttps://codereview.appspot.com/7234055/diff/5006/src/pkg/crypto/rc4/rc4_amd64.s\nFile src/pkg/crypto/rc4/rc4_amd64.s (right):\n\nhttps://codereview.appspot.com/7234055/diff/5006/src/pkg/crypto/rc4/rc4_amd64.s#newcode18\nsrc/pkg/crypto/rc4/rc4_amd64.s:18: CMPQ CX, $0\nOn 2013/01/29 22:05:31, rsc wrote:\n> You can move this before the loop: tag, since the DECQ CX before the JMP will\n> set the ZF flag already. Whether it matters is another thing.\n\nI don't know why, but this slows it down.\n\nhttps://codereview.appspot.com/7234055/diff/5006/src/pkg/crypto/rc4/rc4_amd64.s#newcode34\nsrc/pkg/crypto/rc4/rc4_amd64.s:34: MOVQ R10, R11\nOn 2013/01/29 22:05:31, rsc wrote:\n> delete and s/R11/R10/ everywhere below?\n\nThis also slows it down so I've left it for now.",
			"disapproval": false,
			"date": "2013-01-29 22:23:31.892440",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"jgrahamc@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7234055/diff/5006/src/pkg/crypto/rc4/rc4_amd64.go\nFile src/pkg/crypto/rc4/rc4_amd64.go (right):\n\nhttps://codereview.appspot.com/7234055/diff/5006/src/pkg/crypto/rc4/rc4_amd64.go#newcode1\nsrc/pkg/crypto/rc4/rc4_amd64.go:1: // Copyright 2013 The Go Authors. All rights reserved.\nmaybe call this file rc4_asm.go and add a // +build amd64, so that if we write 386 asm we don't need a second file here?\n\nhttps://codereview.appspot.com/7234055/diff/5006/src/pkg/crypto/rc4/rc4_amd64.s\nFile src/pkg/crypto/rc4/rc4_amd64.s (right):\n\nhttps://codereview.appspot.com/7234055/diff/5006/src/pkg/crypto/rc4/rc4_amd64.s#newcode18\nsrc/pkg/crypto/rc4/rc4_amd64.s:18: CMPQ CX, $0\nYou can move this before the loop: tag, since the DECQ CX before the JMP will set the ZF flag already. Whether it matters is another thing.\n\nhttps://codereview.appspot.com/7234055/diff/5006/src/pkg/crypto/rc4/rc4_amd64.s#newcode34\nsrc/pkg/crypto/rc4/rc4_amd64.s:34: MOVQ R10, R11\ndelete and s/R11/R10/ everywhere below?",
			"disapproval": false,
			"date": "2013-01-29 22:05:31.000330",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"jgrahamc@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can you benchmark against the following simple improvement?\nIt gives a large boost here, and we have a performance regression from Go 1 in the compiler due to the disappearance of \"sudoaddable\".\n\nfunc (c *Cipher) XORKeyStream(dst, src []byte) {\n      i, j := c.i, c.j\n      for k, v := range src {\n            i += 1\n            j += c.s[i]\n            c.s[i], c.s[j] = c.s[j], c.s[i]\n            dst[k] = v ^ c.s[c.s[i]+c.s[j]]\n      }\n      c.i, c.j = i, j\n}",
			"disapproval": false,
			"date": "2013-01-29 22:19:01.200210",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"jgrahamc@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3bd3cbecadd8 ***\n\ncrypto/rc4: add simple amd64 asm implementation.\n\n(Although it's still half the speed of OpenSSL.)\n\nbenchmark           old ns/op    new ns/op    delta\nBenchmarkRC4_128         1409          398  -71.75%\nBenchmarkRC4_1K         10920         2898  -73.46%\nBenchmarkRC4_8K        131323        23083  -82.42%\n\nbenchmark            old MB/s     new MB/s  speedup\nBenchmarkRC4_128        90.83       321.43    3.54x\nBenchmarkRC4_1K         93.77       353.28    3.77x\nBenchmarkRC4_8K         61.65       350.73    5.69x\n\nR=rsc, remyoudompheng\nCC=golang-dev, jgrahamc\nhttps://codereview.appspot.com/7234055",
			"disapproval": false,
			"date": "2013-01-30 16:01:28.332490",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 7234055: crypto/rc4: add simple amd64 asm implementation.",
	"created": "2013-01-29 21:47:17.111750",
	"patchsets": [
		1,
		2001,
		4001,
		5006,
		3008,
		5007
	],
	"modified": "2013-01-30 16:01:29.646940",
	"closed": true,
	"issue": 7234055
}