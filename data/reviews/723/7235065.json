{
	"description": "exp/cookiejar: remove external storage\n\nThis CL removes the external storage of a cookie jar\nand minimized the exported API as discussed in [1].\n\n[1] https://groups.google.com/d/topic/golang-dev/ygDB3nbir00/discussion\n\nUpdate issue 1960.",
	"cc": [
		"nigeltao@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=f301f988aeba ***\n\nexp/cookiejar: remove external storage\n\nThis CL removes the external storage of a cookie jar\nand minimized the exported API as discussed in [1].\n\n[1] https://groups.google.com/d/topic/golang-dev/ygDB3nbir00/discussion\n\nUpdate issue 1960.\n\nR=nigeltao\nCC=golang-dev\nhttps://codereview.appspot.com/7235065\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2013-01-31 23:57:15.309460",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode42\nsrc/pkg/exp/cookiejar/jar.go:42: type NoPublicSuffixList struct{}\nOn 2013/01/31 01:22:16, nigeltao wrote:\n> I don't see the need for this type. Users of this package won't want to\n> explicitly use it, and Jar can just check if j.psList == nil.\n\nDone.\n\nThis type was Brad's whish, but I agree that \"a nil PSL\nmeans something safe\" is impossible\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode51\nsrc/pkg/exp/cookiejar/jar.go:51: // A nil value is valid in which case the Jar will use the TLD of a\nOn 2013/01/31 01:22:16, nigeltao wrote:\n> This should note that it is also not secure. Also, the meaning of a nil value\n> here should probably be the same as the one described in lines 23-25: \"An\n> implementation that always etc.\". I think that `return TLD` instead of `return\n> \"\"` would provide a false sense of security.\n\nDone.\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode55\nsrc/pkg/exp/cookiejar/jar.go:55: // Other options may be added in Go 1.2 and beyond.\nOn 2013/01/31 01:22:16, nigeltao wrote:\n> I know that this was in the mail I sent, but I'd drop this line.\n\nDone.\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode63\nsrc/pkg/exp/cookiejar/jar.go:63: mu sync.Mutex\nOn 2013/01/31 01:22:16, nigeltao wrote:\n> This (and the entries field, and type entry) belong in a follow-up change, not\n> in this change.\n\nDone.\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode78\nsrc/pkg/exp/cookiejar/jar.go:78: type entry struct {\nOn 2013/01/31 01:22:16, nigeltao wrote:\n> This belongs in a follow-up change, but FWIW, I would prefer entry to embed an\n> http.Cookie.\n\nRemoved.\n\nWhy embeding a http.Cookie? The methods of http.Cookie are\npretty useless here and the entry type here has 144 bytes (6g)\nwhich can be reduced to 104 bytes, whereas embedding a\nhttp.Cookie requires 216 bytes.\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode94\nsrc/pkg/exp/cookiejar/jar.go:94: // It returns nil if the URL's scheme is not HTTP or HTTPS.\nOn 2013/01/31 01:22:16, nigeltao wrote:\n> I would prefer to revert this change.\n\nDone.\n\nWhy? The empty slice must be allocated while returning nil\nsaves one allocation.",
			"disapproval": false,
			"date": "2013-01-31 08:54:31.867100",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I'm not too worried about the bytes. If it turns out to be a problem, we\r\n> can change it. On the other hand, it's easier to write \"entry.cookie =\r\n> *cookie\" than it is to copy out the fields by hand. The latter is also\r\n> trickier if we ever add fields to the http.Cookie type.\r\n>\r\n\r\nIt turns out that not that many fields are just copied: Domain and Path\r\ne.g. need heavy processing, MaxAge and Expires are combined into\r\nExpires and the Raw/Unparsed stuff has to be cleared. The only direct\r\ncopies are Name, Value, HttpOnly and Secure\r\n\r\n\r\n>\r\n> Out of curiosity, how do you reduce 144 bytes to 104 bytes?\r\n\r\nCombine the three bools to a single uint, replace absolute\r\nLastAccess and Expires by time.Duration relative to Creation\r\nand make Domain a *string.\r\n",
			"disapproval": false,
			"date": "2013-02-01 10:21:33.881160",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-30 13:00:16.759370",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode42\nsrc/pkg/exp/cookiejar/jar.go:42: type NoPublicSuffixList struct{}\nI don't see the need for this type. Users of this package won't want to explicitly use it, and Jar can just check if j.psList == nil.\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode51\nsrc/pkg/exp/cookiejar/jar.go:51: // A nil value is valid in which case the Jar will use the TLD of a\nThis should note that it is also not secure. Also, the meaning of a nil value here should probably be the same as the one described in lines 23-25: \"An implementation that always etc.\". I think that `return TLD` instead of `return \"\"` would provide a false sense of security.\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode55\nsrc/pkg/exp/cookiejar/jar.go:55: // Other options may be added in Go 1.2 and beyond.\nI know that this was in the mail I sent, but I'd drop this line.\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode63\nsrc/pkg/exp/cookiejar/jar.go:63: mu sync.Mutex\nThis (and the entries field, and type entry) belong in a follow-up change, not in this change.\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode78\nsrc/pkg/exp/cookiejar/jar.go:78: type entry struct {\nThis belongs in a follow-up change, but FWIW, I would prefer entry to embed an http.Cookie.\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode94\nsrc/pkg/exp/cookiejar/jar.go:94: // It returns nil if the URL's scheme is not HTTP or HTTPS.\nI would prefer to revert this change.",
			"disapproval": false,
			"date": "2013-01-31 01:22:16.083330",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Submitting...\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode78\nsrc/pkg/exp/cookiejar/jar.go:78: type entry struct {\nOn 2013/01/31 08:54:32, volker.dobler wrote:\n> On 2013/01/31 01:22:16, nigeltao wrote:\n> > This belongs in a follow-up change, but FWIW, I would prefer entry to embed an\n> > http.Cookie.\n> \n> Removed.\n> \n> Why embeding a http.Cookie? The methods of http.Cookie are\n> pretty useless here and the entry type here has 144 bytes (6g)\n> which can be reduced to 104 bytes, whereas embedding a\n> http.Cookie requires 216 bytes.\n\nI'm not too worried about the bytes. If it turns out to be a problem, we can change it. On the other hand, it's easier to write \"entry.cookie = *cookie\" than it is to copy out the fields by hand. The latter is also trickier if we ever add fields to the http.Cookie type.\n\nOut of curiosity, how do you reduce 144 bytes to 104 bytes?\n\nhttps://codereview.appspot.com/7235065/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode94\nsrc/pkg/exp/cookiejar/jar.go:94: // It returns nil if the URL's scheme is not HTTP or HTTPS.\nOn 2013/01/31 08:54:32, volker.dobler wrote:\n> On 2013/01/31 01:22:16, nigeltao wrote:\n> > I would prefer to revert this change.\n> \n> Done.\n> \n> Why? The empty slice must be allocated while returning nil\n> saves one allocation.\n\nNil is an empty slice; len(nil) == 0. I'd rather the callee be free to return either nil or an allocated empty slice, than the caller to assume it is nil.\n\nhttps://codereview.appspot.com/7235065/diff/2008/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7235065/diff/2008/src/pkg/exp/cookiejar/jar.go#newcode41\nsrc/pkg/exp/cookiejar/jar.go:41: // an HTTP server can set a cookie for a domain.\nI'd add a blank line to break the paragraphs.",
			"disapproval": false,
			"date": "2013-01-31 23:53:18.250200",
			"approval": false
		}
	],
	"owner_email": "dr.volker.dobler@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "volker.dobler",
	"subject": "code review 7235065: exp/cookiejar: remove external storage",
	"created": "2013-01-30 12:58:42.754440",
	"patchsets": [
		1,
		2001,
		4001,
		5007,
		2008
	],
	"modified": "2013-02-01 10:04:49.110830",
	"closed": true,
	"issue": 7235065
}