{
	"description": "go/scanner: replace comment with example",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-02-17 17:26:39.126832",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-02-17 01:20:41.554736",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 78472fa77f2f ***\n\ngo/scanner: replace comment with example\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/5676074\n\nhttp://codereview.appspot.com/5676074/diff/3002/src/pkg/go/scanner/example_test.go\nFile src/pkg/go/scanner/example_test.go (right):\n\nhttp://codereview.appspot.com/5676074/diff/3002/src/pkg/go/scanner/example_test.go#newcode21\nsrc/pkg/go/scanner/example_test.go:21: s.Init(file, src, nil, /* no error handler */ scanner.ScanComments)\nOn 2012/02/17 01:51:52, r wrote:\n> maybe\n> \n> nil /* no error handler*/,\n\nunfortunately, this is a gofmt issue - it places the comment after the comma because there is no position information for the comma in the AST. I placed the comment before the nil:\n\n..., /* no error handler: */ nil, ...\n\nwill file an issue against gofmt; maybe I can fix this there.\n\nhttp://codereview.appspot.com/5676074/diff/3002/src/pkg/go/scanner/example_test.go#newcode23\nsrc/pkg/go/scanner/example_test.go:23: // repeated calls to Scan yield the token sequence found in the input\nOn 2012/02/17 01:51:52, r wrote:\n> s/r/R/\n> s/$/./\n\nDone.",
			"disapproval": false,
			"date": "2012-02-17 17:26:37.937346",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5676074/diff/3002/src/pkg/go/scanner/example_test.go\nFile src/pkg/go/scanner/example_test.go (right):\n\nhttp://codereview.appspot.com/5676074/diff/3002/src/pkg/go/scanner/example_test.go#newcode21\nsrc/pkg/go/scanner/example_test.go:21: s.Init(file, src, nil, /* no error handler */ scanner.ScanComments)\nmaybe\n\nnil /* no error handler*/,\n\nhttp://codereview.appspot.com/5676074/diff/3002/src/pkg/go/scanner/example_test.go#newcode23\nsrc/pkg/go/scanner/example_test.go:23: // repeated calls to Scan yield the token sequence found in the input\ns/r/R/\ns/$/./\n\nhttp://codereview.appspot.com/5676074/diff/3002/src/pkg/go/scanner/scanner.go\nFile src/pkg/go/scanner/scanner.go (right):\n\nhttp://codereview.appspot.com/5676074/diff/3002/src/pkg/go/scanner/scanner.go#newcode6\nsrc/pkg/go/scanner/scanner.go:6: // It takes a []byte as source which can then be tokenized\nIt takes a []byte value as source text that is tokenized by repeated calls to the Scan method.",
			"disapproval": false,
			"date": "2012-02-17 01:51:52.794885",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5676074: go/scanner: replace comment with example",
	"created": "2012-02-17 01:20:39.186087",
	"patchsets": [
		1,
		3001,
		3002,
		2002
	],
	"modified": "2012-02-17 17:26:39.429624",
	"closed": true,
	"issue": 5676074
}