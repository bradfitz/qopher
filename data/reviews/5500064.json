{
	"description": "crypto/x509: don't crash with nil receiver in accessor method\n\nFixes issue 2600",
	"cc": [
		"golang-dev@googlegroups.com",
		"agl@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, agl@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-21 18:43:57.898192",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes, with cgo disabled on Mac.\n\nOn Wed, Dec 21, 2011 at 10:46 AM, <agl@golang.org> wrote:\n\n> LGTM, I guess some function to fetch the roots is failing for you.\n>\n> http://codereview.appspot.com/**5500064/<http://codereview.appspot.com/5500064/>\n>\n",
			"disapproval": false,
			"date": "2011-12-21 18:48:58.091739",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes, the issue is that on OS X with cgo disabled\nwe have no way to fetch roots, so we end up with\na nil here.\n",
			"disapproval": false,
			"date": "2011-12-21 18:49:06.902960",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Dec 21, 2011 at 1:37 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> I wasn't thinking that far. \u00a0I just wanted to make the build succeed, which\n> it does now.\n\nGenerally I don't think a nil CertPool is valid, so you may be fixing\nthe wrong thing. Can you point me at the code that's failing?\n\n\nCheers\n\nAGL\n",
			"disapproval": false,
			"date": "2011-12-21 18:40:33.754778",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Dec 21, 2011 at 10:40 AM, Adam Langley <agl@golang.org> wrote:\n\n> On Wed, Dec 21, 2011 at 1:37 PM, Brad Fitzpatrick <bradfitz@golang.org>\n> wrote:\n> > I wasn't thinking that far.  I just wanted to make the build succeed,\n> which\n> > it does now.\n>\n> Generally I don't think a nil CertPool is valid, so you may be fixing\n> the wrong thing. Can you point me at the code that's failing?\n>\n\nhttp://code.google.com/p/go/issues/detail?id=2600\n\nWhether a nil CertPool is valid or not, I'd think returning an error is\nbetter than a panic.\n",
			"disapproval": false,
			"date": "2011-12-21 18:45:26.918269",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-21 18:30:31.579238",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I wasn't thinking that far.  I just wanted to make the build succeed, which\nit does now.\n\nThe caller just wants to range over these verified parents.  I figured\nreturning an empty slice here was cleaner than ifs at all call sites.\n\nAnyway, all the current tests pass.  I'll look into adding another just for\na nil cert pool.\n\nOn Wed, Dec 21, 2011 at 10:32 AM, <agl@golang.org> wrote:\n\n> LGTM. I assume that the thinking here is that you want to be able to\n> pass a nil CertPool and fails all verifications? If so, probably best to\n> add a test to that effect so that it doesn't regress.\n>\n> http://codereview.appspot.com/**5500064/<http://codereview.appspot.com/5500064/>\n>\n",
			"disapproval": false,
			"date": "2011-12-21 18:37:34.774247",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b2fa298d3000 ***\n\ncrypto/x509: don't crash with nil receiver in accessor method\n\nFixes issue 2600\n\nR=golang-dev, agl, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5500064",
			"disapproval": false,
			"date": "2011-12-21 18:49:42.238631",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. I assume that the thinking here is that you want to be able to pass a nil CertPool and fails all verifications? If so, probably best to add a test to that effect so that it doesn't regress.",
			"disapproval": false,
			"date": "2011-12-21 18:32:49.688328",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, I guess some function to fetch the roots is failing for you.",
			"disapproval": false,
			"date": "2011-12-21 18:46:29.837492",
			"approval": true
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5500064: crypto/x509: don't crash with nil receiver in accessor ...",
	"created": "2011-12-21 18:29:59.370723",
	"patchsets": [
		1,
		2001,
		3002,
		6002,
		7001
	],
	"modified": "2011-12-21 18:49:44.001233",
	"closed": true,
	"issue": 5500064
}