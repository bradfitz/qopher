{
	"description": "misc/cgo/test: add test for issue 3871: cgo setgid hang on GNU/Linux",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@google.com"
	],
	"reviewers": [
		"iant@google.com",
		"minux.ma@gmail.com"
	],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-07-27 05:49:34.770330",
			"approval": false
		},
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but I'd do more than 2 seconds.\r\n\r\nARM builders always surprise me with their slowness.\r\n On Jul 26, 2012 10:49 PM, <iant@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> misc/cgo/test: add test for issue 3871: cgo setgid hang on GNU/Linux\r\n>\r\n> Please review this at http://codereview.appspot.com/**6445049/<http://codereview.appspot.com/6445049/>\r\n>\r\n> Affected files:\r\n>   M misc/cgo/test/basic.go\r\n>   M misc/cgo/test/cgo_test.go\r\n>\r\n>\r\n> Index: misc/cgo/test/basic.go\r\n> ==============================**==============================**=======\r\n> --- a/misc/cgo/test/basic.go\r\n> +++ b/misc/cgo/test/basic.go\r\n> @@ -11,6 +11,7 @@\r\n>  #include <stdlib.h>\r\n>  #include <sys/stat.h>\r\n>  #include <errno.h>\r\n> +#include <unistd.h>\r\n>\r\n>  #define SHIFT(x, y)  ((x)<<(y))\r\n>  #define KILO SHIFT(1, 10)\r\n> @@ -57,6 +58,7 @@\r\n>  import (\r\n>         \"syscall\"\r\n>         \"testing\"\r\n> +       \"time\"\r\n>         \"unsafe\"\r\n>  )\r\n>\r\n> @@ -124,6 +126,20 @@\r\n>         C.free(unsafe.Pointer(p))\r\n>  }\r\n>\r\n> +func testSetgid(t *testing.T) {\r\n> +       // Issue 3871.\r\n> +       c := make(chan bool)\r\n> +       go func() {\r\n> +               C.setgid(0)\r\n> +               c <- true\r\n> +       }()\r\n> +       select {\r\n> +       case <-c:\r\n> +       case <-time.After(2 * time.Second):\r\n> +               t.Error(\"setgid hung\")\r\n> +       }\r\n> +}\r\n> +\r\n>  var (\r\n>         cuint  = (C.uint)(0)\r\n>         culong C.ulong\r\n> Index: misc/cgo/test/cgo_test.go\r\n> ==============================**==============================**=======\r\n> --- a/misc/cgo/test/cgo_test.go\r\n> +++ b/misc/cgo/test/cgo_test.go\r\n> @@ -27,5 +27,6 @@\r\n>  func TestParallelSleep(t *testing.T)       { testParallelSleep(t) }\r\n>  func TestSetEnv(t *testing.T)              { testSetEnv(t) }\r\n>  func TestHelpers(t *testing.T)             { testHelpers(t) }\r\n> +func TestSetgid(t *testing.T)              { testSetgid(t) }\r\n>\r\n>  func BenchmarkCgoCall(b *testing.B) { benchCgoCall(b) }\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-27 06:11:54.801350",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f0b8f8a81cab ***\n\nmisc/cgo/test: add test for issue 3871: cgo setgid hang on GNU/Linux\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6445049",
			"disapproval": false,
			"date": "2012-07-27 06:21:45.452190",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jul 26, 2012 at 11:11 PM, Brad Fitzpatrick <bradfitz@google.com> wrote:\r\n> LGTM but I'd do more than 2 seconds.\r\n>\r\n> ARM builders always surprise me with their slowness.\r\n\r\nChanged to 5 seconds and submitted.\r\n\r\nAlthough I don't see how calling setgid could take even 1 second, even\r\non a terribly slow machine.  But, who knows.\r\n\r\nIan\r\n\r\n\r\n> On Jul 26, 2012 10:49 PM, <iant@golang.org> wrote:\r\n>>\r\n>> Reviewers: golang-dev_googlegroups.com,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com,\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://go.googlecode.com/hg/\r\n>>\r\n>>\r\n>> Description:\r\n>> misc/cgo/test: add test for issue 3871: cgo setgid hang on GNU/Linux\r\n>>\r\n>> Please review this at http://codereview.appspot.com/6445049/\r\n>>\r\n>> Affected files:\r\n>>   M misc/cgo/test/basic.go\r\n>>   M misc/cgo/test/cgo_test.go\r\n>>\r\n>>\r\n>> Index: misc/cgo/test/basic.go\r\n>> ===================================================================\r\n>> --- a/misc/cgo/test/basic.go\r\n>> +++ b/misc/cgo/test/basic.go\r\n>> @@ -11,6 +11,7 @@\r\n>>  #include <stdlib.h>\r\n>>  #include <sys/stat.h>\r\n>>  #include <errno.h>\r\n>> +#include <unistd.h>\r\n>>\r\n>>  #define SHIFT(x, y)  ((x)<<(y))\r\n>>  #define KILO SHIFT(1, 10)\r\n>> @@ -57,6 +58,7 @@\r\n>>  import (\r\n>>         \"syscall\"\r\n>>         \"testing\"\r\n>> +       \"time\"\r\n>>         \"unsafe\"\r\n>>  )\r\n>>\r\n>> @@ -124,6 +126,20 @@\r\n>>         C.free(unsafe.Pointer(p))\r\n>>  }\r\n>>\r\n>> +func testSetgid(t *testing.T) {\r\n>> +       // Issue 3871.\r\n>> +       c := make(chan bool)\r\n>> +       go func() {\r\n>> +               C.setgid(0)\r\n>> +               c <- true\r\n>> +       }()\r\n>> +       select {\r\n>> +       case <-c:\r\n>> +       case <-time.After(2 * time.Second):\r\n>> +               t.Error(\"setgid hung\")\r\n>> +       }\r\n>> +}\r\n>> +\r\n>>  var (\r\n>>         cuint  = (C.uint)(0)\r\n>>         culong C.ulong\r\n>> Index: misc/cgo/test/cgo_test.go\r\n>> ===================================================================\r\n>> --- a/misc/cgo/test/cgo_test.go\r\n>> +++ b/misc/cgo/test/cgo_test.go\r\n>> @@ -27,5 +27,6 @@\r\n>>  func TestParallelSleep(t *testing.T)       { testParallelSleep(t) }\r\n>>  func TestSetEnv(t *testing.T)              { testSetEnv(t) }\r\n>>  func TestHelpers(t *testing.T)             { testHelpers(t) }\r\n>> +func TestSetgid(t *testing.T)              { testSetgid(t) }\r\n>>\r\n>>  func BenchmarkCgoCall(b *testing.B) { benchCgoCall(b) }\r\n>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-27 06:21:52.337560",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"iant@golang.org",
				"iant@google.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i think this test will fail on windows (although we currently don't enable\ncgo tests on windows, but we would in the future, right?)",
			"disapproval": false,
			"date": "2012-07-28 04:02:58.137330",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jul 27, 2012 at 9:02 PM,  <minux.ma@gmail.com> wrote:\r\n> i think this test will fail on windows (although we currently don't\r\n> enable\r\n> cgo tests on windows, but we would in the future, right?)\r\n\r\nGood point.  Does this look right?\r\n\r\nhttp://codereview.appspot.com/6446060\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2012-07-28 06:44:55.965070",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 6445049: misc/cgo/test: add test for issue 3871: cgo setgid hang...",
	"created": "2012-07-27 05:49:30.258350",
	"patchsets": [
		1,
		3001
	],
	"modified": "2012-07-28 04:02:58.225810",
	"closed": true,
	"issue": 6445049
}