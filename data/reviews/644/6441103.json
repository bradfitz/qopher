{
	"description": "exp/types: expand embedded interfaces, define the error type.",
	"cc": [
		"golang-dev@googlegroups.com",
		"remy@archlinux.org"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"gri@golang.org"
	],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-08-03 22:17:45.228050",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-03 22:31:12.504290",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6441103/diff/5004/src/pkg/exp/types/gcimporter.go\nFile src/pkg/exp/types/gcimporter.go (right):\n\nhttp://codereview.appspot.com/6441103/diff/5004/src/pkg/exp/types/gcimporter.go#newcode520\nsrc/pkg/exp/types/gcimporter.go:520: embedded := p.imports[p.id].Data.(*ast.Scope).Lookup(\"name\")\nI don't think this is correct:\n\n1) p.id is the id of the currently imported package, not the id of the package of the embedded interface (this would be wrong for your added testcase in export.go).\n\nThat package name is parsed but not returned at the moment by parseName.\n\n2) The lookup should say Lookup(name), not Lookup(\"name\") ...\n\n3) The reason why your tests work is because this code is never executed. The compiler happens \"inline\" embedded methods.\n\nIt's not clear that this code is needed at all - I need to consult with rsc who is maintaining the gc compilers.\n\nhttp://codereview.appspot.com/6441103/diff/5004/src/pkg/exp/types/gcimporter_test.go\nFile src/pkg/exp/types/gcimporter_test.go (right):\n\nhttp://codereview.appspot.com/6441103/diff/5004/src/pkg/exp/types/gcimporter_test.go#newcode117\nsrc/pkg/exp/types/gcimporter_test.go:117: type gcImportTest struct{ ImportPath, Ident, Type string }\nthese don't have to be exported\nalso, the struct is not needed as a sperate type\n\ns/ImportPath/importPath/\ns/Ident/name/\ns/Type/typ/\n\nhttp://codereview.appspot.com/6441103/diff/5004/src/pkg/exp/types/gcimporter_test.go#newcode134\nsrc/pkg/exp/types/gcimporter_test.go:134: t.Fatal(err)\nno need to die just because one test fails\n\nhttp://codereview.appspot.com/6441103/diff/5004/src/pkg/exp/types/universe.go\nFile src/pkg/exp/types/universe.go (right):\n\nhttp://codereview.appspot.com/6441103/diff/5004/src/pkg/exp/types/universe.go#newcode77\nsrc/pkg/exp/types/universe.go:77: errMethodType := &Func{Results: ObjList{ast.NewObj(ast.Var, \"_\")}}\nThis should be done w/ helper functions - there are more intrinsic signatures to define than just this one.",
			"disapproval": false,
			"date": "2012-08-03 23:23:37.223460",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-08-03 23:23:38.452280",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please abandon this CL. I'll send out an alternative. Thanks.\n- gri",
			"disapproval": false,
			"date": "2012-08-04 00:00:50.937340",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-08-04 06:43:11.440500",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6441103: exp/types: expand embedded interfaces, define the error...",
	"created": "2012-08-03 22:17:35.166120",
	"patchsets": [
		1,
		2001,
		4001,
		5004
	],
	"modified": "2012-08-04 06:43:12.606310",
	"closed": true,
	"issue": 6441103
}