{
	"description": "net/http: add parallel client/server benchmark\nR=bradfitz@golang.org",
	"cc": [
		"bradfitz@golang.org",
		"dave@cheney.net",
		"dsymonds@golang.org",
		"gobot@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/6441134/diff/9001/src/pkg/net/http/serve_test.go\nFile src/pkg/net/http/serve_test.go (right):\n\nhttp://codereview.appspot.com/6441134/diff/9001/src/pkg/net/http/serve_test.go#newcode1303\nsrc/pkg/net/http/serve_test.go:1303: P := runtime.GOMAXPROCS(-1) * conc\nOn 2012/08/20 05:51:29, bradfitz wrote:\n> capital P? how about just numProcs? it's not used often.\n\nDone.\n\nhttp://codereview.appspot.com/6441134/diff/9001/src/pkg/net/http/serve_test.go#newcode1312\nsrc/pkg/net/http/serve_test.go:1312: b.Logf(\"Get: %v\", err)\nOn 2012/08/20 05:51:29, bradfitz wrote:\n> Logf or Errorf? Seems like you want Errorf.\n\nI am not sure. First, Errorf() in a child goroutine does not abort benchmark. Second, I am not sure that I want to abort it here, because occasionally I see some transient errors on Linux/Mac. Sometimes I just can't get a clean run with -cpu=1,2,4,8,12,16 -benchtime=10, it's better if you may decide that few errors are OK for such benchmark.\nNote that there is a panic if response body is incorrect.",
			"disapproval": false,
			"date": "2012-08-20 09:13:19.796580",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Is it a representative benchmark?\n\nI see strange results on it:\nBenchmarkClientServerParallel\t   50000\t    123094 ns/op\nBenchmarkClientServerParallel-2\t  100000\t     81216 ns/op\nBenchmarkClientServerParallel-4\t  100000\t     55722 ns/op\nBenchmarkClientServerParallel-8\t   10000\t    302047 ns/op  <<-- here\nBenchmarkClientServerParallel-16\t   10000\t    324270 ns/op  <<-- and here\n\nHowever if I change\n-P := runtime.GOMAXPROCS(-1) * 32\n+P := 100\nthen it looks reasonable:\nBenchmarkClientServerParallel\t   50000\t    136820 ns/op\nBenchmarkClientServerParallel-2\t  100000\t     73536 ns/op\nBenchmarkClientServerParallel-4\t  100000\t     43542 ns/op\nBenchmarkClientServerParallel-8\t  200000\t     33484 ns/op\nBenchmarkClientServerParallel-16\t  100000\t     37460 ns/op\n\nI see absolutely the same thing on TCP net benchmarks. Something with high number of goroutines...",
			"disapproval": false,
			"date": "2012-08-14 21:56:38.127000",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6441134/diff/9001/src/pkg/net/http/serve_test.go\nFile src/pkg/net/http/serve_test.go (right):\n\nhttp://codereview.appspot.com/6441134/diff/9001/src/pkg/net/http/serve_test.go#newcode1303\nsrc/pkg/net/http/serve_test.go:1303: P := runtime.GOMAXPROCS(-1) * conc\ncapital P? how about just numProcs? it's not used often.\n\nhttp://codereview.appspot.com/6441134/diff/9001/src/pkg/net/http/serve_test.go#newcode1312\nsrc/pkg/net/http/serve_test.go:1312: b.Logf(\"Get: %v\", err)\nLogf or Errorf? Seems like you want Errorf.\n\nhttp://codereview.appspot.com/6441134/diff/9001/src/pkg/net/http/serve_test.go#newcode1317\nsrc/pkg/net/http/serve_test.go:1317: b.Logf(\"ReadAll: %v\", err)\nErrorf?",
			"disapproval": false,
			"date": "2012-08-20 05:51:29.207470",
			"approval": true
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=bradfitz (assigned by bradfitz)",
			"disapproval": false,
			"date": "2012-08-20 06:20:57.700740",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-08-14 21:47:07.785480",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks reasonable to me. I think you should add a P=100 case as well if you think it shows something interesting.",
			"disapproval": false,
			"date": "2012-08-16 11:23:48.615040",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=dsymonds (assigned by bradfitz)",
			"disapproval": false,
			"date": "2012-08-20 06:16:50.784160",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/16 11:23:48, dfc wrote:\n> Looks reasonable to me. I think you should add a P=100 case as well if you think\n> it shows something interesting.\n\nPTAL\nI've added cases with GOMAXPROCS*4 and GOMAXPROCS*64. There is indeed something interesting. I have no explanation for now. When supplied with high number of descriptors epoll sometimes returns in 4mks and sometimes in 30000mks. Does somebody see the same picture?\n\nBenchmarkClientServerParallel4\t\t  50000\t\t\t175669 ns/op\nBenchmarkClientServerParallel4-2\t  100000\t     82637 ns/op\nBenchmarkClientServerParallel4-4\t  100000\t     52903 ns/op\nBenchmarkClientServerParallel4-8\t  100000\t    294324 ns/op\nBenchmarkClientServerParallel4-16\t  100000\t    454013 ns/op\n\nBenchmarkClientServerParallel64\t       10000\t    153067 ns/op\nBenchmarkClientServerParallel64-2\t   20000\t     87302 ns/op\nBenchmarkClientServerParallel64-4\t   10000\t    302023 ns/op\nBenchmarkClientServerParallel64-8\t   10000\t    325881 ns/op\nBenchmarkClientServerParallel64-16\t   10000\t    904687 ns/op",
			"disapproval": false,
			"date": "2012-08-17 17:30:25.491440",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"dsymonds@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=219989b731b8 ***\n\nnet/http: add parallel client/server benchmark\nR=bradfitz@golang.org\n\nR=bradfitz\nCC=bradfitz, dave, dsymonds, gobot, golang-dev\nhttp://codereview.appspot.com/6441134",
			"disapproval": false,
			"date": "2012-08-24 10:20:01.613020",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6441134: net/http: add parallel client/server benchmark",
	"created": "2012-08-13 10:59:45.094090",
	"patchsets": [
		1,
		1002,
		2002,
		4,
		1004,
		9001,
		9005,
		11001,
		15001,
		18001
	],
	"modified": "2012-09-04 11:46:57.603960",
	"closed": true,
	"issue": 6441134
}