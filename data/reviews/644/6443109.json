{
	"description": "cmd/gc: string conversion for surrogates\nThis is required by the spec to produce the replacement char.\nThe fix lies in lib9's rune code.",
	"cc": [
		"golang-dev@googlegroups.com",
		"nigeltao@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-08-09 23:20:14.606310",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-08-09 23:36:39.575960",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Oh well indeed. We might lock this down better in a post-Go-1 Go. That\r\nsaid, I do believe there is room in the current spec to forbid\r\n\"\\U00110000\".\r\n\r\nI'll beef up the test file.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-08-10 00:53:25.474340",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am surprised that string(-1) and string(0x110000) are not\r\ncompile-time errors, but the spec is definitely clear. It is strange\r\nthat string(0x110000) is okay but \"\\U00110000\" is not. Oh well.\r\n\r\nThis test file has, to date, only tested runtime conversions, hence\r\nthe otherwise unnecessary variable r. I think it's fine to add some\r\ncompile-time tests here, but please do it in a way that the same\r\ninputs are being tested in both situations.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-08-10 00:34:49.384280",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, nigeltao@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-10 18:10:40.705020",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-08-30 17:34:33.305020",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=38b71d522589 ***\n\ncmd/gc: string conversion for surrogates\nThis is required by the spec to produce the replacement char.\nThe fix lies in lib9's rune code.\n\nR=golang-dev, nigeltao, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6443109",
			"disapproval": false,
			"date": "2012-08-30 18:16:58.681540",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6443109: cmd/gc: string conversion for surrogates",
	"created": "2012-08-09 23:20:11.621730",
	"patchsets": [
		1,
		3001,
		3002,
		10001
	],
	"modified": "2012-08-30 18:16:59.977050",
	"closed": true,
	"issue": 6443109
}