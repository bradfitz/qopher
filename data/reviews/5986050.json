{
	"description": "runtime: add a test for runtime.fastrand1()\nIt's important because selects and hashing relies on it.\nTested with:\n$GOARCH=amd64 go test -run=Fastrand -cpu=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\n$GOARCH=386   go test -run=Fastrand -cpu=1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\nA hyphotetical failure of such test would look like:\n=== RUN TestFastrand\ngot 63396 hits while expected 62500-62500\n--- FAIL: TestFastrand (0.01 seconds)\n        runtime_test.go:58: runtime error: bad fastrand\n                at /go/src/pkg/runtime/runtime.c:465",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Apr 5, 2012 10:50 PM, \"Russ Cox\" <rsc@golang.org> wrote:\n>\n> On Thu, Apr 5, 2012 at 14:49, Dmitry Vyukov <dvyukov@google.com> wrote:\n> > Damn. I just wanted to review this part separately of parallel for...\n>\n> I think this is a great test case for how we're going to write tests.\n\nGot it :)\n\n>\n> Russ\n",
			"disapproval": false,
			"date": "2012-04-05 19:10:05.323785",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-05 18:34:09.663769",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Does the test really need to be written in C?\nI think you can instead put this in runtime:\n\nvoid\nruntime\u00b7gofastrand(int32 ret)\n{\n    ret = runtime\u00b7fastrand1();\n    FLUSH(&ret);\n}\n\nand then this in export_test.go:\n\nfunc gofastrand() int32\nvar Fastrand = gofastrand\n\nand then write your test in Go.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-04-05 18:45:40.640713",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-04-05 18:49:52.843757",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 5, 2012 at 10:45 PM, Russ Cox <rsc@golang.org> wrote:\n\n> Does the test really need to be written in C?\n> I think you can instead put this in runtime:\n>\n> void\n> runtime\u00b7gofastrand(int32 ret)\n> {\n>    ret = runtime\u00b7fastrand1();\n>    FLUSH(&ret);\n> }\n>\n> and then this in export_test.go:\n>\n> func gofastrand() int32\n> var Fastrand = gofastrand\n>\n> and then write your test in Go.\n>\n>\nDamn. I just wanted to review this part separately of parallel for...\n",
			"disapproval": false,
			"date": "2012-04-05 18:49:32.344287",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 5, 2012 at 14:49, Dmitry Vyukov <dvyukov@google.com> wrote:\n> Damn. I just wanted to review this part separately of parallel for...\n\nI think this is a great test case for how we're going to write tests.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-04-05 18:50:05.450323",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 5986050: runtime: add a test for runtime.fastrand1()",
	"created": "2012-04-05 18:04:22.987194",
	"patchsets": [
		1,
		2001,
		4001,
		3007,
		6001
	],
	"modified": "2012-04-05 18:49:54.704728",
	"closed": true,
	"issue": 5986050
}