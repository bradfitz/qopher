{
	"description": "cmd/cgo: use explicit flag to emit dynamic linker path\n\nUsing -import_runtime_cgo would have worked great except\nthat it doesn't get passed to the second invocation of cgo,\nand that's the one that writes the relevant file.\n\nFixes ARM build on systems with a different dynamic linker\nthan the one 5l assumes (like Gentoo).",
	"cc": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-03-01 19:53:59.416080",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "please see my comment in https://codereview.appspot.com/7433043/#msg7.\r\n\r\nif we want to distribute cgo-enabled arm binary distributions, we should\r\ndiagnose\r\nmismatches in dynlinker pragma.\r\n\r\nperhaps we should always determine that at final link time.\r\n",
			"disapproval": false,
			"date": "2013-03-01 19:58:10.258980",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL (nothing changed)\r\n\r\nI believe that this CL is fine as is. I understand the situation you bring\r\nup, but:\r\n\r\n1) If the only cgo packages involved are the ones in the standard library\r\n(net and os/user, and then by implication runtime/cgo) then the dynlinker\r\npragmas will match, and there will be no detection of the invalid value.\r\nRecording it in net and os/user would not change this outcome.\r\n\r\n2) If other cgo packages are involved, the default behavior will be to tell\r\n6l to invoke gcc to put the binary together, in which case the dynlinker\r\npragma is ignored and gcc will (presumably) use an appropriate value.\r\nRecording it in non-standard packages would not change this outcome.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-03-04 14:58:40.168300",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\r\n\r\nOn Mon, Mar 4, 2013 at 10:58 PM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> 1) If the only cgo packages involved are the ones in the standard library\r\n> (net and os/user, and then by implication runtime/cgo) then the dynlinker\r\n> pragmas will match, and there will be no detection of the invalid value.\r\n> Recording it in net and os/user would not change this outcome.\r\n>\r\nyeah, i was proposing we determine dynlinker until final link time to fix\r\nthis problem however,\r\ni still can't find a way to get that info without using gcc.\r\n",
			"disapproval": false,
			"date": "2013-03-04 16:13:48.764010",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=f545866390ab ***\n\ncmd/cgo: use explicit flag to emit dynamic linker path\n\nUsing -import_runtime_cgo would have worked great except\nthat it doesn't get passed to the second invocation of cgo,\nand that's the one that writes the relevant file.\n\nFixes ARM build on systems with a different dynamic linker\nthan the one 5l assumes (like Gentoo).\n\nR=golang-dev, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/7432048",
			"disapproval": false,
			"date": "2013-03-04 16:23:21.096820",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7432048: cmd/cgo: use explicit flag to emit dynamic linker path",
	"created": "2013-03-01 19:53:35.071840",
	"patchsets": [
		1,
		2001,
		5001,
		12001
	],
	"modified": "2013-03-05 20:14:41.847280",
	"closed": true,
	"issue": 7432048
}