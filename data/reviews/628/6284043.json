{
	"description": "cmd/5a, cmd/5l, math: add CLZ instruction for ARM\n        Supported in ARMv5 and above.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "In general we don't add a new grammar rule for each instruction. CLZ\r\nlooks like a TYPE2.\r\n",
			"disapproval": false,
			"date": "2012-06-02 18:02:19.170068",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\r\n\r\nOn Sun, Jun 3, 2012 at 2:01 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> In general we don't add a new grammar rule for each instruction. CLZ\r\n> looks like a TYPE2.\r\n>\r\nso we don't mind if the parser is too permissive?\r\nthe two operands to CLZ could only be registers.\r\n",
			"disapproval": false,
			"date": "2012-06-02 18:21:40.455712",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jun 2, 2012 at 2:21 PM, minux <minux.ma@gmail.com> wrote:\r\n> so we don't mind if the parser is too permissive?\r\n> the two operands to CLZ could only be registers.\r\n\r\nNo, that's fine.\r\n",
			"disapproval": false,
			"date": "2012-06-02 18:47:01.528358",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6284043/diff/3027/src/cmd/5l/asm.c\nFile src/cmd/5l/asm.c (right):\n\nhttp://codereview.appspot.com/6284043/diff/3027/src/cmd/5l/asm.c#newcode1805\nsrc/cmd/5l/asm.c:1805: o1 = ((p->scond&C_SCOND) << 28) | (0x16f << 16) | (p->to.reg << 12) |\nI know the tail end of the table doesn't always follow this, but please let oprrr take care of the condition and instruction logic. Add a case there and make this code:\n\n\no1 = oprrr(ACLZ, p->scond);\no1 |= p->to.reg<<12;\no1 |= p->from.reg;\nbreak;\n\nThanks.",
			"disapproval": false,
			"date": "2012-06-02 18:46:23.986239",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6284043/diff/11004/src/cmd/5l/asm.c\nFile src/cmd/5l/asm.c (right):\n\nhttp://codereview.appspot.com/6284043/diff/11004/src/cmd/5l/asm.c#newcode1805\nsrc/cmd/5l/asm.c:1805: o1 = oprrr(ACLZ, p->scond);\neven better please s/ACLZ/p->as/\nthen if another similar instruction comes along this case can be reused.",
			"disapproval": false,
			"date": "2012-06-02 19:06:14.302248",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-06-02 17:18:11.104497",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=984570b3bea9 ***\n\ncmd/5a, cmd/5l, math: add CLZ instruction for ARM\n        Supported in ARMv5 and above.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6284043",
			"disapproval": false,
			"date": "2012-06-02 19:09:08.712348",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nOn 2012/06/02 18:46:23, rsc wrote:\nhttp://codereview.appspot.com/6284043/diff/3027/src/cmd/5l/asm.c#newcode1805\n> src/cmd/5l/asm.c:1805: o1 = ((p->scond&C_SCOND) << 28) | (0x16f << 16) |\n> (p->to.reg << 12) |\n> I know the tail end of the table doesn't always follow this, but please let\n> oprrr take care of the condition and instruction logic. Add a case there and\n> make this code:\n> \n> \n> o1 = oprrr(ACLZ, p->scond);\n> o1 |= p->to.reg<<12;\n> o1 |= p->from.reg;\n> break;\nDone.",
			"disapproval": false,
			"date": "2012-06-02 18:59:23.840953",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6284043: cmd/5a, cmd/5l, math: add CLZ instruction for ARM",
	"created": "2012-06-02 17:02:10.004973",
	"patchsets": [
		1,
		2001,
		5001,
		12001,
		14001,
		3027,
		11004,
		21002
	],
	"modified": "2012-06-02 19:09:13.838107",
	"closed": true,
	"issue": 6284043
}