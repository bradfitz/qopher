{
	"description": "doc/debugging_with_gdb: mention how to disable gc optimization",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-07-02 03:02:21.792876",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6353055/diff/1002/doc/debugging_with_gdb.html\nFile doc/debugging_with_gdb.html (right):\n\nhttp://codereview.appspot.com/6353055/diff/1002/doc/debugging_with_gdb.html#newcode31\ndoc/debugging_with_gdb.html:31: </p>\nThe tone is wrong and the prose is a little misleading. How about\n\nThe code generated by the <code>gc</code> compiler includes inlining of function invocation and registerization of variables.  These optimizations can sometimes make debugging with <code>gdb</code> harder. To disable them when debugging, pass the flags <code>-gcflags \"-l -N\"</code> to <code>go build</code>.",
			"disapproval": false,
			"date": "2012-07-02 22:09:44.782829",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=be7e338a8960 ***\n\ndoc/debugging_with_gdb: mention how to disable gc optimization\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/6353055",
			"disapproval": false,
			"date": "2012-07-03 16:50:05.604927",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "in my text, s/invocation/invocations/",
			"disapproval": false,
			"date": "2012-07-02 22:10:22.074969",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM after fixing the one grammar glitch.\n\nhttp://codereview.appspot.com/6353055/diff/12002/doc/debugging_with_gdb.html\nFile doc/debugging_with_gdb.html (right):\n\nhttp://codereview.appspot.com/6353055/diff/12002/doc/debugging_with_gdb.html#newcode28\ndoc/debugging_with_gdb.html:28: functions invocations and registerization of variables. These optimizations\ns/functions/function/",
			"disapproval": false,
			"date": "2012-07-03 16:48:49.683715",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\nOn 2012/07/02 22:09:44, r wrote:\nhttp://codereview.appspot.com/6353055/diff/1002/doc/debugging_with_gdb.html#newcode31\n> doc/debugging_with_gdb.html:31: </p>\n> The tone is wrong and the prose is a little misleading. How about\n> \n> The code generated by the <code>gc</code> compiler includes inlining of function\n> invocation and registerization of variables.  These optimizations can sometimes\n> make debugging with <code>gdb</code> harder. To disable them when debugging,\n> pass the flags <code>-gcflags \"-l -N\"</code> to <code>go build</code>.\nI elaborated a little here, because these flags can also be applied to 'go test'\nand 'go install'.\n\nbut then i realized a complication: if the user wants to debug the already compiled\nlibrary, he must use 'go install -a -gcflags ...'; and after debugging, switch\noff the gcflags and recompile the packages. maybe the go tool should remember\nthe flags used to compile the library, and automatically recompile when the flags\nchanged (but to what extent does the recompilation occur? this is still a problem),\nthe right solution should still be fixing the dwarf debugging info or perhaps a go\nspecific debugger?).",
			"disapproval": false,
			"date": "2012-07-03 16:34:17.881116",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-07-03 16:45:50.184987",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6353055/diff/1004/doc/debugging_with_gdb.html\nFile doc/debugging_with_gdb.html (right):\n\nhttp://codereview.appspot.com/6353055/diff/1004/doc/debugging_with_gdb.html#newcode32\ndoc/debugging_with_gdb.html:32: <code>go test</code>, <code>go install</code> etc.).\ns/.$/ used to build the code being debugged./\n\nthat should cover it. anyone competent enough to be comfortable using gdb and special compiler flags shouldn't need more help than that.",
			"disapproval": false,
			"date": "2012-07-03 16:38:36.705724",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6353055: doc/debugging_with_gdb: mention how to disable gc optim...",
	"created": "2012-07-02 02:58:00.255622",
	"patchsets": [
		1,
		2001,
		5001,
		3002,
		1002,
		1004,
		11001,
		12002,
		11002
	],
	"modified": "2012-07-03 16:50:06.398821",
	"closed": true,
	"issue": 6353055
}