{
	"description": "runtime: do no lose CPU profiling signals\nCurrently we lose lots of profiling signals.\nMost notably, GC is not accounted at all.\nBut stack splits, scheduler, syscalls, etc are lost as well.\nThis creates seriously misleading profile.\nWith this change all profiling signals are accounted.\nNow I see these additional entries that were previously absent:\n161  29.7%  29.7%      164  30.3% syscall.Syscall\n 12   2.2%  50.9%       12   2.2% scanblock\n 11   2.0%  55.0%       11   2.0% markonly\n 10   1.8%  58.9%       10   1.8% sweepspan\n  2   0.4%  85.8%        2   0.4% runtime.newstack\nIt is still impossible to understand what causes stack splits,\nbut at least it's clear how many time is spent on them.\nUpdate issue 2197.\nUpdate issue 5659.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-31 17:01:26.264290",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Why disable traceback on g0?\r\n",
			"disapproval": false,
			"date": "2013-08-02 15:56:24.061390",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Aug 2, 2013 at 7:56 PM, Russ Cox <rsc@golang.org> wrote:\r\n> Why disable traceback on g0?\r\n\r\nI am not disabling it, currently it's not done as well.\r\nI suspect that it can be unstable. We never traceback g0 during GC,\r\nand do not traceback g0 during sigprof.\r\nI do not want to bundle enabling g0 traceback with this change,\r\nbecause then they will be reverted together. The huge improvement is\r\nthat we do not lose signals, so the percents are meaningful. Later we\r\ncan work on enabling traceback on g0, providing better info for stack\r\nsplits (where it is triggered in user code), providing better info for\r\nGC (all GC-related functions are rooted at \"GC\" to show total GC %),\r\netc.\r\n",
			"disapproval": false,
			"date": "2013-08-04 11:10:36.587330",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/04 11:10:36, dvyukov wrote:\n> On Fri, Aug 2, 2013 at 7:56 PM, Russ Cox <mailto:rsc@golang.org> wrote:\n> > Why disable traceback on g0?\n> \n> I am not disabling it, currently it's not done as well.\n> I suspect that it can be unstable. We never traceback g0 during GC,\n> and do not traceback g0 during sigprof.\n> I do not want to bundle enabling g0 traceback with this change,\n> because then they will be reverted together. The huge improvement is\n> that we do not lose signals, so the percents are meaningful. Later we\n> can work on enabling traceback on g0, providing better info for stack\n> splits (where it is triggered in user code), providing better info for\n> GC (all GC-related functions are rooted at \"GC\" to show total GC %),\n> etc.\n\nping",
			"disapproval": false,
			"date": "2013-08-12 08:45:19.118950",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nWe should look into allowing profiling of the g0 stack but I agree that this is not a regression.",
			"disapproval": false,
			"date": "2013-08-13 17:58:38.109280",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b4dd887a516c ***\n\nruntime: do no lose CPU profiling signals\nCurrently we lose lots of profiling signals.\nMost notably, GC is not accounted at all.\nBut stack splits, scheduler, syscalls, etc are lost as well.\nThis creates seriously misleading profile.\nWith this change all profiling signals are accounted.\nNow I see these additional entries that were previously absent:\n161  29.7%  29.7%      164  30.3% syscall.Syscall\n 12   2.2%  50.9%       12   2.2% scanblock\n 11   2.0%  55.0%       11   2.0% markonly\n 10   1.8%  58.9%       10   1.8% sweepspan\n  2   0.4%  85.8%        2   0.4% runtime.newstack\nIt is still impossible to understand what causes stack splits,\nbut at least it's clear how many time is spent on them.\nUpdate issue 2197.\nUpdate issue 5659.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/12179043",
			"disapproval": false,
			"date": "2013-08-13 18:12:10.678530",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 12179043: runtime: do no lose CPU profiling signals",
	"created": "2013-07-31 16:48:52.219960",
	"patchsets": [
		1,
		3001,
		2,
		8001,
		19001
	],
	"modified": "2013-08-13 18:12:12.707130",
	"closed": true,
	"issue": 12179043
}