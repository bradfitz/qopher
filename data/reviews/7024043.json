{
	"description": "go/types: remove most remaining uses of ast.Object from exported API\n\nAlso: Return first error whether an error handler is set in the\n      context or not (bug fix).",
	"cc": [
		"adonovan@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-12-28 23:13:15.050620",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/expr.go\nFile src/pkg/go/types/expr.go (right):\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/expr.go#newcode62\nsrc/pkg/go/types/expr.go:62: // keep the params list unchanged (this is the externally visible type).\nYou already know my opinion that it would be easier for clients if we changed the externally visible type too. :)\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/gcimporter.go\nFile src/pkg/go/types/gcimporter.go (right):\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/gcimporter.go#newcode488\nsrc/pkg/go/types/gcimporter.go:488: results = []*Var{{\"\", p.parseType()}}\nSo you're standardising on \"\" not \"_\" for anon receivers?\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/types.go\nFile src/pkg/go/types/types.go (right):\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/types.go#newcode214\nsrc/pkg/go/types/types.go:214: Obj        *ast.Object // corresponding declared object; Obj.Data.(*ast.Scope) contains methods, if any\nWanna add a TODO here to replace this with a canonical *Var?",
			"disapproval": false,
			"date": "2013-01-02 14:58:16.439940",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/expr.go\nFile src/pkg/go/types/expr.go (right):\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/expr.go#newcode62\nsrc/pkg/go/types/expr.go:62: // keep the params list unchanged (this is the externally visible type).\nOn 2013/01/02 14:58:16, adonovan wrote:\n> You already know my opinion that it would be easier for clients if we changed\n> the externally visible type too. :)\n We can revisit this later.\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/gcimporter.go\nFile src/pkg/go/types/gcimporter.go (right):\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/gcimporter.go#newcode488\nsrc/pkg/go/types/gcimporter.go:488: results = []*Var{{\"\", p.parseType()}}\nOn 2013/01/02 14:58:16, adonovan wrote:\n> So you're standardising on \"\" not \"_\" for anon receivers?\n\nit doesn't really matter - but i'll add a todo globally\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/types.go\nFile src/pkg/go/types/types.go (right):\n\nhttps://codereview.appspot.com/7024043/diff/7001/src/pkg/go/types/types.go#newcode214\nsrc/pkg/go/types/types.go:214: Obj        *ast.Object // corresponding declared object; Obj.Data.(*ast.Scope) contains methods, if any\nOn 2013/01/02 14:58:16, adonovan wrote:\n> Wanna add a TODO here to replace this with a canonical *Var?\n\nno need - there's a new CL in the works which does away with all ast.Objects and uses types.Objects instead (and *Var).",
			"disapproval": false,
			"date": "2013-01-02 17:18:40.017470",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=92bc35448c34 ***\n\ngo/types: remove most remaining uses of ast.Object from exported API\n\nAlso: Return first error whether an error handler is set in the\n      context or not (bug fix).\n\nR=adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/7024043",
			"disapproval": false,
			"date": "2013-01-02 17:29:17.530910",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 7024043: go/types: remove most remaining uses of ast.Object from...",
	"created": "2012-12-28 23:10:05.459490",
	"patchsets": [
		1,
		1002,
		4001,
		7001,
		14001
	],
	"modified": "2013-01-08 18:42:05.829400",
	"closed": true,
	"issue": 7024043
}