{
	"description": "godoc: quiet log spam\n\nFixes issue 3191.\nSorry.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-05 18:02:37.923885",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Mon, Mar 5, 2012 at 10:02 AM, <rsc@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> godoc: quiet log spam\n>\n> Fixes issue 3191.\n> Sorry.\n>\n> Please review this at http://codereview.appspot.com/**5726059/<http://codereview.appspot.com/5726059/>\n>\n> Affected files:\n>  M src/cmd/godoc/dirtrees.go\n>  M src/cmd/godoc/filesystem.go\n>  M src/cmd/godoc/godoc.go\n>\n>\n> Index: src/cmd/godoc/dirtrees.go\n> ==============================**==============================**=======\n> --- a/src/cmd/godoc/dirtrees.go\n> +++ b/src/cmd/godoc/dirtrees.go\n> @@ -69,13 +69,7 @@\n>                }\n>        }\n>\n> -       list, err := fs.ReadDir(path)\n> -       if err != nil {\n> -               // newDirTree is called with a path that should be a\n> package\n> -               // directory; errors here should not happen, but if they\n> do,\n> -               // we want to know about them\n> -               log.Printf(\"ReadDir(%s): %s\", path, err)\n> -       }\n> +       list, _ := fs.ReadDir(path)\n>\n>        // determine number of subdirectories and if there are package files\n>        ndirs := 0\n> Index: src/cmd/godoc/filesystem.go\n> ==============================**==============================**=======\n> --- a/src/cmd/godoc/filesystem.go\n> +++ b/src/cmd/godoc/filesystem.go\n> @@ -400,6 +400,7 @@\n>                haveName = map[string]bool{}\n>                all      []os.FileInfo\n>                err      error\n> +               first   []os.FileInfo\n>        )\n>\n>        for _, m := range ns.resolve(path) {\n> @@ -410,6 +411,14 @@\n>                        }\n>                        continue\n>                }\n> +\n> +               if dir == nil {\n> +                       dir = []os.FileInfo{}\n> +               }\n> +\n> +               if first == nil {\n> +                       first = dir\n> +               }\n>\n>                // If we don't yet have Go files in 'all' and this directory\n>                // has some, add all the files from this directory.\n> @@ -434,6 +443,15 @@\n>                }\n>        }\n>\n> +       // We didn't find any directories containing Go files.\n> +       // If some directory returned successfully, use that.\n> +       if len(all) == 0 && first != nil {\n> +               for _, d := range first {\n> +                       haveName[d.Name()] = true\n> +                       all = append(all, d)\n> +               }\n> +       }\n> +\n>        // Built union.  Add any missing directories needed to reach mount\n> points.\n>        for old := range ns {\n>                if hasPathPrefix(old, path) && old != path {\n> Index: src/cmd/godoc/godoc.go\n> ==============================**==============================**=======\n> --- a/src/cmd/godoc/godoc.go\n> +++ b/src/cmd/godoc/godoc.go\n> @@ -658,7 +658,6 @@\n>\n>        list, err := fs.ReadDir(abspath)\n>        if err != nil {\n> -               log.Printf(\"ReadDir: %s\", err)\n>                serveError(w, r, relpath, err)\n>                return\n>        }\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-05 18:05:56.594073",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d98d387d10e3 ***\n\ngodoc: quiet log spam\n\nFixes issue 3191.\nSorry.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5726059",
			"disapproval": false,
			"date": "2012-03-05 18:29:16.427994",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5726059: godoc: quiet log spam",
	"created": "2012-03-05 18:02:10.951444",
	"patchsets": [
		1,
		2001,
		1002,
		1003
	],
	"modified": "2012-03-05 18:29:17.604533",
	"closed": true,
	"issue": 5726059
}