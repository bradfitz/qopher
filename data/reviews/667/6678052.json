{
	"description": "play: add a -play flag to control whether to run play\nFor safety; disable to avoid code execution.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.talks",
			"disapproval": false,
			"date": "2012-10-15 05:10:14.533240",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The issue with this, and with my earlier CL that I have now abandoned,\r\nis that they don't disable the /socket handler. Anyone may still come\r\nalong and connect to /socket and run arbitrary code.\r\n\r\nOn 15 October 2012 16:10,  <r@golang.org> wrote:\r\n> Reviewers: adg,\r\n>\r\n> Message:\r\n> Hello adg (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go.talks\r\n>\r\n>\r\n> Description:\r\n> play: add a -play flag to control whether to run play\r\n> For safety; disable to avoid code execution.\r\n>\r\n> Please review this at http://codereview.appspot.com/6678052/\r\n>\r\n> Affected files:\r\n>   M present/code.go\r\n>   M present/main.go\r\n>\r\n>\r\n> Index: present/code.go\r\n> ===================================================================\r\n> --- a/present/code.go\r\n> +++ b/present/code.go\r\n> @@ -71,7 +71,7 @@\r\n>                 typ = typ[1:]\r\n>         }\r\n>         return Code{\r\n> -               Play:       command == \"play\" && playEnabled,\r\n> +               Play:       command == \"play\" && playEnabled && *playFlag,\r\n>                 File:       file,\r\n>                 Cmd:        text,\r\n>                 Addr:       addr,\r\n> Index: present/main.go\r\n> ===================================================================\r\n> --- a/present/main.go\r\n> +++ b/present/main.go\r\n> @@ -18,8 +18,12 @@\r\n>\r\n>  const basePkg = \"code.google.com/p/go.talks/present\"\r\n>\r\n> +var (\r\n> +       httpListen = flag.String(\"http\", \"127.0.0.1:3999\", \"host:port to\r\n> listen on\")\r\n> +       playFlag   = flag.Bool(\"play\", true, \"allow play (code execution)\")\r\n> +)\r\n> +\r\n>  func main() {\r\n> -       httpListen := flag.String(\"http\", \"127.0.0.1:3999\", \"host:port to\r\n> listen on\")\r\n>         flag.StringVar(&basePath, \"base\", \"\", \"base path for slide template\r\n> and static resources\")\r\n>         flag.Parse()\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-15 05:15:52.989870",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "since i don't really comprehend that sentence, perhaps you should do this.\r\n",
			"disapproval": false,
			"date": "2012-10-15 05:20:42.595620",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-10-15 05:21:08.412070",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6678052: play: add a -play flag to control whether to run play",
	"created": "2012-10-15 05:10:10.484590",
	"patchsets": [
		1
	],
	"modified": "2012-10-15 05:21:10.787370",
	"closed": true,
	"issue": 6678052
}