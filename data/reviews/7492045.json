{
	"description": "go/types: more internal cleanups",
	"cc": [
		"adonovan@google.com",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-03-07 18:16:35.050130",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7492045/diff/5001/src/pkg/go/types/stdlib_test.go\nFile src/pkg/go/types/stdlib_test.go (right):\n\nhttps://codereview.appspot.com/7492045/diff/5001/src/pkg/go/types/stdlib_test.go#newcode46\nsrc/pkg/go/types/stdlib_test.go:46: \"code.google.com\": true,\nthese shouldn't be in $GOROOT/src anyway these days.  If a builder has these, it should fail so we could clean it.\n\nIf you did want to keep this, I'd ask why not github.com and mydomain.com too.  Or anything with a dot in it.",
			"disapproval": false,
			"date": "2013-03-07 18:22:23.861460",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n- gri\n\nhttps://codereview.appspot.com/7492045/diff/5001/src/pkg/go/types/stdlib_test.go\nFile src/pkg/go/types/stdlib_test.go (right):\n\nhttps://codereview.appspot.com/7492045/diff/5001/src/pkg/go/types/stdlib_test.go#newcode46\nsrc/pkg/go/types/stdlib_test.go:46: \"code.google.com\": true,\nOn 2013/03/07 18:22:23, bradfitz wrote:\n> these shouldn't be in $GOROOT/src anyway these days.  If a builder has these, it\n> should fail so we could clean it.\n> \n> If you did want to keep this, I'd ask why not http://github.com and http://mydomain.com too. \n> Or anything with a dot in it.\n\nFair enough. Just tried to be resistent against my own misconfiguration... :-)\n\nReverted.",
			"disapproval": false,
			"date": "2013-03-07 18:45:32.970630",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7492045/diff/9001/src/pkg/go/types/stmt.go\nFile src/pkg/go/types/stmt.go (right):\n\nhttps://codereview.appspot.com/7492045/diff/9001/src/pkg/go/types/stmt.go#newcode92\nsrc/pkg/go/types/stmt.go:92: switch obj := obj.(type) {\nWhat happened to the defer-based scheme in your other CL?\nDid you abandon it or is it still pending?\n\nhttps://codereview.appspot.com/7492045/diff/9001/src/pkg/go/types/stmt.go#newcode219\nsrc/pkg/go/types/stmt.go:219: check.errorf(e.Pos(), \"cannot declare %s\", e)\ne is an ast.Expr; do these print nicely?  I don't think so.",
			"disapproval": false,
			"date": "2013-03-07 18:53:58.141550",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7492045/diff/9001/src/pkg/go/types/stmt.go\nFile src/pkg/go/types/stmt.go (right):\n\nhttps://codereview.appspot.com/7492045/diff/9001/src/pkg/go/types/stmt.go#newcode92\nsrc/pkg/go/types/stmt.go:92: switch obj := obj.(type) {\nOn 2013/03/07 18:53:58, adonovan wrote:\n> What happened to the defer-based scheme in your other CL?\n> Did you abandon it or is it still pending?\n\nSee code just above. The defer wasn't necessary after all and the code got much simpler.\n\nhttps://codereview.appspot.com/7492045/diff/9001/src/pkg/go/types/stmt.go#newcode219\nsrc/pkg/go/types/stmt.go:219: check.errorf(e.Pos(), \"cannot declare %s\", e)\nOn 2013/03/07 18:53:58, adonovan wrote:\n> e is an ast.Expr; do these print nicely?  I don't think so.\n\nyep they do. used all over the place.",
			"disapproval": false,
			"date": "2013-03-07 19:04:28.199480",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/07 19:04:28, gri wrote:\n> https://codereview.appspot.com/7492045/diff/9001/src/pkg/go/types/stmt.go\n> File src/pkg/go/types/stmt.go (right):\n> \n> https://codereview.appspot.com/7492045/diff/9001/src/pkg/go/types/stmt.go#newcode92\n> src/pkg/go/types/stmt.go:92: switch obj := obj.(type) {\n> On 2013/03/07 18:53:58, adonovan wrote:\n> > What happened to the defer-based scheme in your other CL?\n> > Did you abandon it or is it still pending?\n> \n> See code just above. The defer wasn't necessary after all and the code got much\n> simpler.\n> \n> https://codereview.appspot.com/7492045/diff/9001/src/pkg/go/types/stmt.go#newcode219\n> src/pkg/go/types/stmt.go:219: check.errorf(e.Pos(), \"cannot declare %s\", e)\n> On 2013/03/07 18:53:58, adonovan wrote:\n> > e is an ast.Expr; do these print nicely?  I don't think so.\n> \n> yep they do. used all over the place.\n\nLGTM",
			"disapproval": false,
			"date": "2013-03-07 19:16:12.553350",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3a15792a6542 ***\n\ngo/types: more internal cleanups\n\nR=adonovan, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7492045",
			"disapproval": false,
			"date": "2013-03-07 19:17:33.329270",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 7492045: go/types: more internal cleanups",
	"created": "2013-03-07 18:15:23.403650",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		18001
	],
	"modified": "2013-03-07 19:17:34.454000",
	"closed": true,
	"issue": 7492045
}