{
	"description": "doc/code: update newmath.Sqrt test case to make sure test succeed\n        Fixes issue 3445.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"mtj@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-04-04 18:36:02.371886",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI'm not even entirely sure this will always work, but ok.\n",
			"disapproval": false,
			"date": "2012-04-05 15:59:59.059392",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 5, 2012 at 11:59 PM, Russ Cox <rsc@golang.org> wrote:\n\n> LGTM\n>\n> I'm not even entirely sure this will always work, but ok.\n>\nit took 92 iterations to get to 2, and as z=2 is a fixpoint, and we use a\ndeterministic IEEE 754 FP\nimplementation, I think test newmath.Sqrt(4) against 2 will surely succeed.\n",
			"disapproval": false,
			"date": "2012-04-05 20:34:32.033867",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Is it true that 9 fails on all systems?\nI thought it only failed on some systems.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-04-05 20:40:22.299652",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This code supports an existing tutorial, which uses square root as an exercise.\nI do not want to rewrite the tutorial today.\n",
			"disapproval": false,
			"date": "2012-04-09 16:11:47.332126",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"mtj@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-04-09 16:12:27.857303",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/05 20:40:22, rsc wrote:\n> Is it true that 9 fails on all systems?\n> I thought it only failed on some systems.\nI've tested Mac OS X/amd64 and 386, Linux/amd64 and 386.\nAll fail with the same result.",
			"disapproval": false,
			"date": "2012-04-05 20:46:12.264673",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"mtj@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=aa9954952235 ***\n\ndoc/code: update newmath.Sqrt test case to make sure test succeed\n        Fixes issue 3445.\n\nR=golang-dev, rsc, mtj\nCC=golang-dev\nhttp://codereview.appspot.com/5975061",
			"disapproval": false,
			"date": "2012-04-09 17:56:01.888542",
			"approval": false
		},
		{
			"sender": "mtj@google.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"mtj@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/05 20:46:12, minux wrote:\n> On 2012/04/05 20:40:22, rsc wrote:\n> > Is it true that 9 fails on all systems?\n> > I thought it only failed on some systems.\n> I've tested Mac OS X/amd64 and 386, Linux/amd64 and 386.\n> All fail with the same result.\n\nWhy not use a simple \"integer\" function on reals? Abs() or Sqr() or if you want something more interesting, the inverse W function: x**x\n\nfunc W(x float) float {\n    return math.Pow(x, x)\n}\n\nThen in your test, you'd have cases like:\n{1, 1},\n{2, 4},\n{3, 27},\n{4, 256},",
			"disapproval": false,
			"date": "2012-04-09 15:59:07.390092",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5975061: doc/code: update newmath.Sqrt test case to make sure te...",
	"created": "2012-04-02 18:31:44.826201",
	"patchsets": [
		1,
		2001,
		4001,
		10002
	],
	"modified": "2012-04-09 17:56:05.875285",
	"closed": true,
	"issue": 5975061
}