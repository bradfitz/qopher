{
	"description": "exp/locale/collate: implementation of trie that is used for detecting contractions.\n(See http://www.unicode.org/reports/tr10/#Contractions.)  Each rune that is at the\nstart of any contraction is associated a trie. This trie, in turn, may be shared\nby other runes that have the same set of suffixes.",
	"cc": [
		"r@google.com",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go\nFile src/pkg/exp/locale/collate/contract.go (right):\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode1\nsrc/pkg/exp/locale/collate/contract.go:1: // Copyright 2011 The Go Authors. All rights reserved.\nOn 2012/04/10 06:37:08, r wrote:\n> 2012\n\nDone.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode5\nsrc/pkg/exp/locale/collate/contract.go:5: package collate\nIn collate.go. See CL 5999053.\n\nOn 2012/04/10 06:41:07, r wrote:\n> where is the package comment?\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode34\nsrc/pkg/exp/locale/collate/contract.go:34: // each suffix in the set.  This index can be used to lookup a\nOn 2012/04/10 06:37:08, r wrote:\n> s/lookup/look up/\n\nDone.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode35\nsrc/pkg/exp/locale/collate/contract.go:35: // collation element associated with the starter rune/ suffix pair.\nOn 2012/04/10 06:37:08, r wrote:\n> the slash is strangely placed. maybe\n> (starter rune, suffix) pair\n\nDone.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode39\nsrc/pkg/exp/locale/collate/contract.go:39: // is represented as a sub sequence of ctEntries, where each entry corresponds to\nOn 2012/04/10 06:37:08, r wrote:\n> s/sub /sub/\n\nDone.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode52\nsrc/pkg/exp/locale/collate/contract.go:52: // compTrieHandle identifies a try in the contractTrieSet.\nOn 2012/04/10 06:37:08, r wrote:\n> s/try/trie/?\n\nDone.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode56\nsrc/pkg/exp/locale/collate/contract.go:56: // The maximum block size within one trie may be (1 << nbits) -1 entries.\nOn 2012/04/10 06:37:08, r wrote:\n> funny space before -1.\n\nDone.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode57\nsrc/pkg/exp/locale/collate/contract.go:57: // A smaller value of nbits, reduces the maximum value of the handle, which\nOn 2012/04/10 06:37:08, r wrote:\n> s/nbits,//\n\nDone.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode70\nsrc/pkg/exp/locale/collate/contract.go:70: // entry might still resemble a completed suffix.\nOn 2012/04/10 06:37:08, r wrote:\n> this is good info but it's hard to understand. some examples maybe?\n\nDone. Added examples.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode96\nsrc/pkg/exp/locale/collate/contract.go:96: index, n := int(h)>>t.nbits, int(h)&t.nmask\nOn 2012/04/10 06:37:08, r wrote:\n> is the first int() necessary?\n\nDone.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode113\nsrc/pkg/exp/locale/collate/contract.go:113: // TODO: a significant number of contractions are of a form that they\nOn 2012/04/10 06:37:08, r wrote:\n> s/ they//\n\nDone.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode208\nsrc/pkg/exp/locale/collate/contract.go:208: panic(\"offset cannot have been set before this point\")\nRemoved. See next reply.\n\nOn 2012/04/10 06:37:08, r wrote:\n> two panics with same string: poor planning.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode235\nsrc/pkg/exp/locale/collate/contract.go:235: return 0, fmt.Errorf(\"genStates: relative block offset too large: %d > 255\", ln)\nThe panics are basically checking invariants, and should never occur.  The errors are cases where the input data is of a dimension that it cannot be fit in a table.\nI've removed the panics.\n\nOn 2012/04/10 06:37:08, r wrote:\n> why are there errors and panics? this is being used only to generate tables;\n> what's the point of the distinction?\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode314\nsrc/pkg/exp/locale/collate/contract.go:314: func (t *contractTrieSet) write(w io.Writer, name string) (n, size int, err error) {\nprint sgtm. Renamed.\n\nOn 2012/04/10 06:37:08, r wrote:\n> write is a poor name for this function. formatted i/o is write only in fortran.\n> print would be better, but there might be better yet.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode344\nsrc/pkg/exp/locale/collate/contract.go:344: write(\"{0x%X, 0x%X, %d, %d},\\n\", fe.l, fe.h, fe.n, fe.i)\nOn 2012/04/10 06:37:08, r wrote:\n> s/\"/\"\\t/\n\nDone.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode352\nsrc/pkg/exp/locale/collate/contract.go:352: size = int(unsafe.Sizeof(contractTrieSet{}))\nDone. There will be a bunch of these structs, so I figured it is nicer to include this in the overall size computation.  Don't feel strongly about this, though.\n\n\nOn 2012/04/10 06:37:08, r wrote:\n> use reflect.Type.Size and you can avoid package unsafe.\n> however, is there any need for the size result at all?",
			"disapproval": false,
			"date": "2012-04-11 18:31:56.929900",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-04-02 14:43:45.811269",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i have only the faintest glimmering of what's going on here.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go\nFile src/pkg/exp/locale/collate/contract.go (right):\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode1\nsrc/pkg/exp/locale/collate/contract.go:1: // Copyright 2011 The Go Authors. All rights reserved.\n2012\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode34\nsrc/pkg/exp/locale/collate/contract.go:34: // each suffix in the set.  This index can be used to lookup a\ns/lookup/look up/\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode35\nsrc/pkg/exp/locale/collate/contract.go:35: // collation element associated with the starter rune/ suffix pair.\nthe slash is strangely placed. maybe\n(starter rune, suffix) pair\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode39\nsrc/pkg/exp/locale/collate/contract.go:39: // is represented as a sub sequence of ctEntries, where each entry corresponds to\ns/sub /sub/\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode52\nsrc/pkg/exp/locale/collate/contract.go:52: // compTrieHandle identifies a try in the contractTrieSet.\ns/try/trie/?\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode56\nsrc/pkg/exp/locale/collate/contract.go:56: // The maximum block size within one trie may be (1 << nbits) -1 entries.\nfunny space before -1.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode57\nsrc/pkg/exp/locale/collate/contract.go:57: // A smaller value of nbits, reduces the maximum value of the handle, which\ns/nbits,//\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode70\nsrc/pkg/exp/locale/collate/contract.go:70: // entry might still resemble a completed suffix.\nthis is good info but it's hard to understand. some examples maybe?\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode96\nsrc/pkg/exp/locale/collate/contract.go:96: index, n := int(h)>>t.nbits, int(h)&t.nmask\nis the first int() necessary?\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode113\nsrc/pkg/exp/locale/collate/contract.go:113: // TODO: a significant number of contractions are of a form that they\ns/ they//\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode208\nsrc/pkg/exp/locale/collate/contract.go:208: panic(\"offset cannot have been set before this point\")\ntwo panics with same string: poor planning.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode235\nsrc/pkg/exp/locale/collate/contract.go:235: return 0, fmt.Errorf(\"genStates: relative block offset too large: %d > 255\", ln)\nwhy are there errors and panics? this is being used only to generate tables; what's the point of the distinction?\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode314\nsrc/pkg/exp/locale/collate/contract.go:314: func (t *contractTrieSet) write(w io.Writer, name string) (n, size int, err error) {\nwrite is a poor name for this function. formatted i/o is write only in fortran. print would be better, but there might be better yet.\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode344\nsrc/pkg/exp/locale/collate/contract.go:344: write(\"{0x%X, 0x%X, %d, %d},\\n\", fe.l, fe.h, fe.n, fe.i)\ns/\"/\"\\t/\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode352\nsrc/pkg/exp/locale/collate/contract.go:352: size = int(unsafe.Sizeof(contractTrieSet{}))\nuse reflect.Type.Size and you can avoid package unsafe.\nhowever, is there any need for the size result at all?\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract_test.go\nFile src/pkg/exp/locale/collate/contract_test.go (right):\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract_test.go#newcode1\nsrc/pkg/exp/locale/collate/contract_test.go:1: // Copyright 2011 The Go Authors. All rights reserved.\n2012\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract_test.go#newcode250\nsrc/pkg/exp/locale/collate/contract_test.go:250: println(string(buf.Bytes()))\nprintln??",
			"disapproval": false,
			"date": "2012-04-10 06:37:08.792262",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go\nFile src/pkg/exp/locale/collate/contract.go (right):\n\nhttp://codereview.appspot.com/5970066/diff/3/src/pkg/exp/locale/collate/contract.go#newcode5\nsrc/pkg/exp/locale/collate/contract.go:5: package collate\nwhere is the package comment?",
			"disapproval": false,
			"date": "2012-04-10 06:41:07.676347",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@google.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-17 07:45:18.547383",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM as a checkpoint\n\nhttp://codereview.appspot.com/5970066/diff/21001/src/pkg/exp/locale/collate/contract.go\nFile src/pkg/exp/locale/collate/contract.go (right):\n\nhttp://codereview.appspot.com/5970066/diff/21001/src/pkg/exp/locale/collate/contract.go#newcode14\nsrc/pkg/exp/locale/collate/contract.go:14: // A contraction may match a non-continuous sequence of bytes in an input string.\ni think you mean non-contiguous.\n\nhttp://codereview.appspot.com/5970066/diff/21001/src/pkg/exp/locale/collate/contract.go#newcode50\nsrc/pkg/exp/locale/collate/contract.go:50: // cannot match discontinuous UTF-8 in a normalized string. We could let\ndiscontiguous",
			"disapproval": false,
			"date": "2012-04-25 00:42:11.112962",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=788ef464ef53 ***\n\nexp/locale/collate: implementation of trie that is used for detecting contractions.\n(See http://www.unicode.org/reports/tr10/#Contractions.)  Each rune that is at the\nstart of any contraction is associated a trie. This trie, in turn, may be shared\nby other runes that have the same set of suffixes.\n\nR=r, r\nCC=golang-dev\nhttp://codereview.appspot.com/5970066",
			"disapproval": false,
			"date": "2012-04-25 11:15:57.502654",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 5970066: exp/locale/collate: implementation of trie that is used...",
	"created": "2012-04-02 14:41:41.687861",
	"patchsets": [
		1,
		3,
		6001,
		8001,
		14001,
		18001,
		21001,
		28001
	],
	"modified": "2012-04-25 11:15:59.064080",
	"closed": true,
	"issue": 5970066
}