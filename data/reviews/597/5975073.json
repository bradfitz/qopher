{
	"description": "syscall, net: use native endianness for Linux netlink messages\n\nTested using 6g and gccgo on x86_64 GNU/Linux and using gccgo\non PowerPC GNU/Linux (which is big-endian).",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"mikioh.mikioh@gmail.com",
		"iant@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go\nFile src/pkg/syscall/netlink_linux.go (right):\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go#newcode34\nsrc/pkg/syscall/netlink_linux.go:34: *(*uint16)(unsafe.Pointer(&b[4:5][0])) = rr.Header.Type\nI know the ending index is purely for documentation here, but 4:6, right?\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go#newcode35\nsrc/pkg/syscall/netlink_linux.go:35: *(*uint16)(unsafe.Pointer(&b[6:7][0])) = rr.Header.Flags\n6:8\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go#newcode36\nsrc/pkg/syscall/netlink_linux.go:36: *(*uint32)(unsafe.Pointer(&b[8:11][0])) = rr.Header.Seq\n8:12\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go#newcode36\nsrc/pkg/syscall/netlink_linux.go:36: *(*uint32)(unsafe.Pointer(&b[8:11][0])) = rr.Header.Seq\n8:12\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go#newcode37\nsrc/pkg/syscall/netlink_linux.go:37: *(*uint32)(unsafe.Pointer(&b[12:15][0])) = rr.Header.Pid\n12:16",
			"disapproval": false,
			"date": "2012-04-04 20:06:38.095500",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "thank you for the fix. my bad.\nbtw no need to update testdata/igmp for big  endian system?\n\n-- Mikio\n\n\nOn Apr 5, 2012, at 8:47 AM, iant@golang.org wrote:\n\n> Really uploaded this time.\n> \n> http://codereview.appspot.com/5975073/\n",
			"disapproval": false,
			"date": "2012-04-05 00:00:24.657384",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-04 19:25:49.135307",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Wed, Apr 4, 2012 at 4:47 PM, <iant@golang.org> wrote:\n\n> Really uploaded this time.\n>\n> http://codereview.appspot.com/**5975073/<http://codereview.appspot.com/5975073/>\n>\n",
			"disapproval": false,
			"date": "2012-04-05 00:02:15.348677",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Really uploaded this time.",
			"disapproval": false,
			"date": "2012-04-04 23:47:07.498402",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go\nFile src/pkg/syscall/netlink_linux.go (right):\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go#newcode34\nsrc/pkg/syscall/netlink_linux.go:34: *(*uint16)(unsafe.Pointer(&b[4:5][0])) = rr.Header.Type\nOn 2012/04/04 20:06:38, bradfitz wrote:\n> I know the ending index is purely for documentation here, but 4:6, right?\n\nGood point.  Done.\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go#newcode35\nsrc/pkg/syscall/netlink_linux.go:35: *(*uint16)(unsafe.Pointer(&b[6:7][0])) = rr.Header.Flags\nOn 2012/04/04 20:06:38, bradfitz wrote:\n> 6:8\n\nDone.\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go#newcode36\nsrc/pkg/syscall/netlink_linux.go:36: *(*uint32)(unsafe.Pointer(&b[8:11][0])) = rr.Header.Seq\nOn 2012/04/04 20:06:38, bradfitz wrote:\n> 8:12\n\nDone.\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go#newcode36\nsrc/pkg/syscall/netlink_linux.go:36: *(*uint32)(unsafe.Pointer(&b[8:11][0])) = rr.Header.Seq\nOn 2012/04/04 20:06:38, bradfitz wrote:\n> 8:12\n\nDone.\n\nhttp://codereview.appspot.com/5975073/diff/1/src/pkg/syscall/netlink_linux.go#newcode37\nsrc/pkg/syscall/netlink_linux.go:37: *(*uint32)(unsafe.Pointer(&b[12:15][0])) = rr.Header.Pid\nOn 2012/04/04 20:06:38, bradfitz wrote:\n> 12:16\n\nDone.",
			"disapproval": false,
			"date": "2012-04-04 20:37:24.855448",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM if fixed, but I don't see a new upload.",
			"disapproval": false,
			"date": "2012-04-04 20:40:01.492561",
			"approval": true
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Mikio Hara <mikioh.mikioh@gmail.com> writes:\n\n> btw no need to update testdata/igmp for big  endian system?\n\nFortunately the test doesn't seem to do anything with the IP addresses\nin the testdata file.\n\nIan\n",
			"disapproval": false,
			"date": "2012-04-05 00:41:12.529861",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"mikioh.mikioh@gmail.com",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2df358bf7445 ***\n\nsyscall, net: use native endianness for Linux netlink messages\n\nTested using 6g and gccgo on x86_64 GNU/Linux and using gccgo\non PowerPC GNU/Linux (which is big-endian).\n\nR=golang-dev, bradfitz, mikioh.mikioh, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5975073",
			"disapproval": false,
			"date": "2012-04-05 00:41:43.485772",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 5975073: syscall, net: use native endianness for Linux netlink m...",
	"created": "2012-04-04 19:25:43.586178",
	"patchsets": [
		1,
		4001,
		6,
		3002,
		7002
	],
	"modified": "2012-04-05 00:41:45.265056",
	"closed": true,
	"issue": 5975073
}