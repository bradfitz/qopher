{
	"description": "cmd/8l: fix data corruption for MULB SI,\n\nThe 8l linker automatically inserts XCHG instructions\nto support otherwise impossible byte registers\n(only available on AX, BX, CX, DX).\n\nSometimes AX or DX is needed (for MUL and DIV) so\nwe need to avoid clobbering them.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"iant@golang.org",
		"iant@google.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?",
			"disapproval": false,
			"date": "2012-11-16 20:50:13.188520",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-11-15 07:22:52.671670",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/17 Dave Cheney <dave@cheney.net> wrote:\r\n> This fixed the bug that your walkdiv CL exposed. If this CL mirrors a similar provision on 6l then LGTM. A\r\n\r\nIn 64-bit mode all registers have a byte variant so the same logic is\r\nnot necessary. However, 6l has a 32-bit mode, which I think we don't\r\nuse, and the fix could make sense there too.\r\n\r\nR\u00e9my.\r\n",
			"disapproval": false,
			"date": "2012-11-17 00:10:47.454940",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This fixed the bug that your walkdiv CL exposed. If this CL mirrors a similar provision on 6l then LGTM. A\r\n\r\nOn 17/11/2012, at 7:50, remyoudompheng@gmail.com wrote:\r\n\r\n> ping?\r\n> \r\n> http://codereview.appspot.com/6846057/\r\n",
			"disapproval": false,
			"date": "2012-11-16 23:49:50.814720",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping, iant ?",
			"disapproval": false,
			"date": "2012-11-19 23:45:11.419480",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"iant@golang.org",
				"iant@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1470920a2804 ***\n\ncmd/8l: fix data corruption for MULB SI,\n\nThe 8l linker automatically inserts XCHG instructions\nto support otherwise impossible byte registers\n(only available on AX, BX, CX, DX).\n\nSometimes AX or DX is needed (for MUL and DIV) so\nwe need to avoid clobbering them.\n\nR=golang-dev, dave, iant, iant, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6846057",
			"disapproval": false,
			"date": "2012-11-26 20:31:52.357960",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is for rsc, I don't know this code.\r\n\r\nhttp://codereview.appspot.com/6846057/\r\n",
			"disapproval": false,
			"date": "2012-11-26 01:47:26.192790",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-17 00:30:42.471920",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?",
			"disapproval": false,
			"date": "2012-11-25 21:27:09.294290",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"iant@golang.org",
				"iant@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm catching up, really I am! :-)",
			"disapproval": false,
			"date": "2012-11-26 02:38:14.827110",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6846057: cmd/8l: fix data corruption for MULB SI,",
	"created": "2012-11-15 07:22:32.308720",
	"patchsets": [
		1,
		3,
		2002,
		8001,
		12005
	],
	"modified": "2012-12-02 09:41:09.485510",
	"closed": true,
	"issue": 6846057
}