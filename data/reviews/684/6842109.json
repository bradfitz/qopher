{
	"description": "net/http: fix broken TestIssue4191_InfiniteGetToPutTimeout\n\nTest creates 2 tcp connections for put and get. Make sure\nthese are closed properly after test is over, otherwise\nserver hangs waiting for connection to be closed.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes please.\r\n\r\nOn Wed, Nov 28, 2012 at 4:56 PM,  <alex.brainman@gmail.com> wrote:\r\n> So, am I submitting as is?\r\n>\r\n> Alex\r\n>\r\n> https://codereview.appspot.com/6842109/\r\n",
			"disapproval": false,
			"date": "2012-11-28 05:59:51.369920",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks.",
			"disapproval": false,
			"date": "2012-11-28 05:37:48.010790",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6842109/diff/3003/src/pkg/net/http/transport_test.go\nFile src/pkg/net/http/transport_test.go (right):\n\nhttps://codereview.appspot.com/6842109/diff/3003/src/pkg/net/http/transport_test.go#newcode989\nsrc/pkg/net/http/transport_test.go:989: println(\"run\", i+1, \"of\", nRuns)\nOn 2012/11/28 05:48:28, dfc wrote:\n> Please make this t.Logf(), and remove the debug condition\n\nPlease not yet.  I want to make t.Logf unbuffered first when only one test is running not in parallel, in the testing package.\n\nWithout println I can't actually see real-time output and it's super annoying.\n\nhttps://codereview.appspot.com/6842109/diff/3003/src/pkg/net/http/transport_test.go#newcode993\nsrc/pkg/net/http/transport_test.go:993: t.Errorf(\"Error issuing GET: %v\", err)\nOn 2012/11/28 05:48:28, dfc wrote:\n> Do you need sres.Body.Close() here as well ?\n\nBOOM. sres is nil.",
			"disapproval": false,
			"date": "2012-11-28 05:49:53.107640",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=e76e1b1e9d4d ***\n\nnet/http: fix broken TestIssue4191_InfiniteGetToPutTimeout\n\nTest creates 2 tcp connections for put and get. Make sure\nthese are closed properly after test is over, otherwise\nserver hangs waiting for connection to be closed.\n\nR=golang-dev, bradfitz, dave\nCC=golang-dev\nhttp://codereview.appspot.com/6842109",
			"disapproval": false,
			"date": "2012-11-28 06:01:00.821930",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-11-28 04:19:06.177420",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "So, am I submitting as is?\n\nAlex",
			"disapproval": false,
			"date": "2012-11-28 05:56:30.745550",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6842109/diff/3002/src/pkg/net/http/transport_test.go\nFile src/pkg/net/http/transport_test.go (right):\n\nhttps://codereview.appspot.com/6842109/diff/3002/src/pkg/net/http/transport_test.go#newcode988\nsrc/pkg/net/http/transport_test.go:988: defer sres.Body.Close()\nI thought the problem was Issue 4434, but I guess I could see this being a problem too.\n\nThis one should time out anyway, since the net.Conn came from the the same dialer which times things out.  But maybe the PUT write fails first, and then this is just never read enough to see timeout error (which would also close things).\n\nSo yeah, this is fine, but:\n\nhttps://codereview.appspot.com/6842109/diff/3002/src/pkg/net/http/transport_test.go#newcode994\nsrc/pkg/net/http/transport_test.go:994: defer req.Body.Close()\nthis line isn't necessary.  you don't need to close the bodies of requests, and besides: you already closed the same ReadCloser on line 988.  NewRequest creates req from sres.Body.",
			"disapproval": false,
			"date": "2012-11-28 04:30:23.742820",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6842109/diff/3002/src/pkg/net/http/transport_test.go\nFile src/pkg/net/http/transport_test.go (right):\n\nhttps://codereview.appspot.com/6842109/diff/3002/src/pkg/net/http/transport_test.go#newcode988\nsrc/pkg/net/http/transport_test.go:988: defer sres.Body.Close()\nOn 2012/11/28 04:30:23, bradfitz wrote:\n> ...  But maybe the PUT write fails first, and then\n> this is just never read enough to see timeout error ...\n\nYes, that is what I see here.\n\nhttps://codereview.appspot.com/6842109/diff/3002/src/pkg/net/http/transport_test.go#newcode994\nsrc/pkg/net/http/transport_test.go:994: defer req.Body.Close()\nOn 2012/11/28 04:30:23, bradfitz wrote:\n> this line isn't necessary. ...\n\nI take your word for it. Removed.",
			"disapproval": false,
			"date": "2012-11-28 04:52:51.771150",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-28 04:52:49.987500",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Passed 200 cycles.\n\nhttps://codereview.appspot.com/6842109/diff/3003/src/pkg/net/http/transport_test.go\nFile src/pkg/net/http/transport_test.go (right):\n\nhttps://codereview.appspot.com/6842109/diff/3003/src/pkg/net/http/transport_test.go#newcode989\nsrc/pkg/net/http/transport_test.go:989: println(\"run\", i+1, \"of\", nRuns)\nPlease make this t.Logf(), and remove the debug condition\n\nhttps://codereview.appspot.com/6842109/diff/3003/src/pkg/net/http/transport_test.go#newcode993\nsrc/pkg/net/http/transport_test.go:993: t.Errorf(\"Error issuing GET: %v\", err)\nDo you need sres.Body.Close() here as well ?",
			"disapproval": false,
			"date": "2012-11-28 05:48:28.149940",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6842109/diff/3003/src/pkg/net/http/transport_test.go\nFile src/pkg/net/http/transport_test.go (right):\n\nhttps://codereview.appspot.com/6842109/diff/3003/src/pkg/net/http/transport_test.go#newcode989\nsrc/pkg/net/http/transport_test.go:989: println(\"run\", i+1, \"of\", nRuns)\nOn 2012/11/28 05:49:53, bradfitz wrote:\n> On 2012/11/28 05:48:28, dfc wrote:\n> > Please make this t.Logf(), and remove the debug condition\n> \n> Please not yet.  I want to make t.Logf unbuffered first when only one test is\n> running not in parallel, in the testing package.\n> \n> Without println I can't actually see real-time output and it's super annoying.\n\nOk, makes sense.\n\nhttps://codereview.appspot.com/6842109/diff/3003/src/pkg/net/http/transport_test.go#newcode993\nsrc/pkg/net/http/transport_test.go:993: t.Errorf(\"Error issuing GET: %v\", err)\nOn 2012/11/28 05:49:53, bradfitz wrote:\n> On 2012/11/28 05:48:28, dfc wrote:\n> > Do you need sres.Body.Close() here as well ?\n> \n> BOOM. sres is nil.\n\nSorry, you are correct, I was overreacting.",
			"disapproval": false,
			"date": "2012-11-28 05:52:08.780430",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 6842109: net/http: fix broken TestIssue4191_InfiniteGetToPutTimeout",
	"created": "2012-11-28 04:16:58.263400",
	"patchsets": [
		1,
		2001,
		3002,
		3003,
		11001
	],
	"modified": "2012-11-28 06:01:02.948390",
	"closed": true,
	"issue": 6842109
}