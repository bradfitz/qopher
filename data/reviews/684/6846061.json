{
	"description": "make.bash: raise ulimit -d to its hard limit to fix NetBSD/amd64 build",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"iant@google.com"
	],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6846061/diff/7001/src/make.bash\nFile src/make.bash (right):\n\nhttps://codereview.appspot.com/6846061/diff/7001/src/make.bash#newcode119\nsrc/make.bash:119: # On OS X ulimit -S -n rejects 'unlimited'.\ns/-n/-d/ I assume",
			"disapproval": false,
			"date": "2012-11-15 19:11:56.981360",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-11-15 19:02:06.080250",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Nov 16, 2012 at 4:06 AM, Ian Lance Taylor <iant@google.com> wrote:\r\n\r\n> On Thu, Nov 15, 2012 at 11:29 AM, minux <minux.ma@gmail.com> wrote:\r\n> >\r\n> > all netbsd/amd64 go user need to raise -d ulimit\r\n> > for *all* go programs, and this makes me a little\r\n> > uncomfortable.\r\n>\r\n> Ah, I didn't understand that.\r\n>\r\nthe relevant problem description:\r\nhttps://groups.google.com/group/golang-dev/browse_thread/thread/48598af2cc4d599e/189563b6166b7c9b\r\n\r\nalso, the problem is affecting windows/amd64 builder as well,\r\nsee https://code.google.com/p/go/issues/detail?id=4379.\r\n\r\n>\r\n> > btw, i do have an alternative solution, that is, dynamically\r\n> > allocate (entire or part of) the mheap structure after we\r\n> > raise the ulimit. this will have much larger impact so i'm\r\n> > open to opinions about this.\r\n>\r\n> Can we raise the ulimit in runtime\u00b7osinit in runtime/thread_netbsd.c?\r\n>\r\nthe problem is that with a data segment slight larger than 256MiB (the\r\ndefault\r\nsoft limit on netbsd/amd64 is 256MiB), exec(2) simply rejects our binary, so\r\nthere is no easy workaround like this.\r\n",
			"disapproval": false,
			"date": "2012-11-17 19:57:24.873970",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i'm still not sure this is the solution for the problem\r\nas this change only fixes the builder. however, i\r\ncannot think of any better ways (limiting the arena to\r\n64GiB doesn't look good to me).\r\n\r\nall netbsd/amd64 go user need to raise -d ulimit\r\nfor *all* go programs, and this makes me a little\r\nuncomfortable.\r\n\r\nshould i file an issue for this and also cite that issue\r\nin the comment so that we can come back to it later?\r\n\r\nbtw, i do have an alternative solution, that is, dynamically\r\nallocate (entire or part of) the mheap structure after we\r\nraise the ulimit. this will have much larger impact so i'm\r\nopen to opinions about this.\r\n",
			"disapproval": false,
			"date": "2012-11-15 19:29:30.490880",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Nov 15, 2012 at 11:29 AM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n> all netbsd/amd64 go user need to raise -d ulimit\r\n> for *all* go programs, and this makes me a little\r\n> uncomfortable.\r\n\r\nAh, I didn't understand that.\r\n\r\n> btw, i do have an alternative solution, that is, dynamically\r\n> allocate (entire or part of) the mheap structure after we\r\n> raise the ulimit. this will have much larger impact so i'm\r\n> open to opinions about this.\r\n\r\nCan we raise the ulimit in runtime\u00b7osinit in runtime/thread_netbsd.c?\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2012-11-15 20:06:27.382750",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Nov 17, 2012 at 11:57 AM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n>\r\n> On Fri, Nov 16, 2012 at 4:06 AM, Ian Lance Taylor <iant@google.com> wrote:\r\n>>\r\n>> On Thu, Nov 15, 2012 at 11:29 AM, minux <minux.ma@gmail.com> wrote:\r\n>> >\r\n>> > all netbsd/amd64 go user need to raise -d ulimit\r\n>> > for *all* go programs, and this makes me a little\r\n>> > uncomfortable.\r\n>>\r\n>> Ah, I didn't understand that.\r\n>\r\n> the relevant problem description:\r\n> https://groups.google.com/group/golang-dev/browse_thread/thread/48598af2cc4d599e/189563b6166b7c9b\r\n>\r\n> also, the problem is affecting windows/amd64 builder as well,\r\n> see https://code.google.com/p/go/issues/detail?id=4379.\r\n>>\r\n>>\r\n>> > btw, i do have an alternative solution, that is, dynamically\r\n>> > allocate (entire or part of) the mheap structure after we\r\n>> > raise the ulimit. this will have much larger impact so i'm\r\n>> > open to opinions about this.\r\n>>\r\n>> Can we raise the ulimit in runtime\u00b7osinit in runtime/thread_netbsd.c?\r\n>\r\n> the problem is that with a data segment slight larger than 256MiB (the\r\n> default\r\n> soft limit on netbsd/amd64 is 256MiB), exec(2) simply rejects our binary, so\r\n> there is no easy workaround like this.\r\n\r\nOh yeah.  Sorry for being slow.\r\n\r\nPerhaps dynamically allocating the map field of mheap, if that\r\nsuffices, is the best approach.  It sounds like any other approach\r\nwill be quite painful for NetBSD users.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2012-11-18 07:55:41.139860",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6846061: make.bash: raise ulimit -d to its hard limit to fix Net...",
	"created": "2012-11-15 19:00:33.448830",
	"patchsets": [
		1,
		2001,
		1002,
		7001
	],
	"modified": "2013-03-20 19:40:00.233020",
	"closed": true,
	"issue": 6846061
}