{
	"description": "net/http/httptest: fix possible race on historyListener.history",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Wed, Nov 21, 2012 at 10:16 PM, <dave@cheney.net> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> net/http/httptest: fix possible race on historyListener.history\r\n>\r\n> Please review this at http://codereview.appspot.com/**6845077/<http://codereview.appspot.com/6845077/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/http/httptest/**server.go\r\n>\r\n>\r\n> Index: src/pkg/net/http/httptest/**server.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/http/httptest/**server.go\r\n> +++ b/src/pkg/net/http/httptest/**server.go\r\n> @@ -36,13 +36,16 @@\r\n>  // accepted.\r\n>  type historyListener struct {\r\n>         net.Listener\r\n> -       history []net.Conn\r\n> +       sync.Mutex // protects history\r\n> +       history    []net.Conn\r\n>  }\r\n>\r\n>  func (hs *historyListener) Accept() (c net.Conn, err error) {\r\n>         c, err = hs.Listener.Accept()\r\n>         if err == nil {\r\n> +               hs.Lock()\r\n>                 hs.history = append(hs.history, c)\r\n> +               hs.Unlock()\r\n>         }\r\n>         return\r\n>  }\r\n> @@ -96,7 +99,7 @@\r\n>         if s.URL != \"\" {\r\n>                 panic(\"Server already started\")\r\n>         }\r\n> -       s.Listener = &historyListener{s.Listener, make([]net.Conn, 0)}\r\n> +       s.Listener = &historyListener{Listener: s.Listener}\r\n>         s.URL = \"http://\" + s.Listener.Addr().String()\r\n>         s.wrapHandler()\r\n>         go s.Config.Serve(s.Listener)\r\n> @@ -122,7 +125,7 @@\r\n>         }\r\n>         tlsListener := tls.NewListener(s.Listener, s.TLS)\r\n>\r\n> -       s.Listener = &historyListener{tlsListener, make([]net.Conn, 0)}\r\n> +       s.Listener = &historyListener{Listener: tlsListener}\r\n>         s.URL = \"https://\" + s.Listener.Addr().String()\r\n>         s.wrapHandler()\r\n>         go s.Config.Serve(s.Listener)\r\n> @@ -161,9 +164,11 @@\r\n>         if !ok {\r\n>                 return\r\n>         }\r\n> +       hl.Lock()\r\n>         for _, conn := range hl.history {\r\n>                 conn.Close()\r\n>         }\r\n> +       hl.Unlock()\r\n>  }\r\n>\r\n>  // waitGroupHandler wraps a handler, incrementing and decrementing a\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-22 13:20:00.982030",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-11-22 06:16:09.282130",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ce46d1978338 ***\n\nnet/http/httptest: fix possible race on historyListener.history\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6845077",
			"disapproval": false,
			"date": "2012-11-24 04:50:49.448510",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6845077: net/http/httptest: fix possible race on historyListener...",
	"created": "2012-11-22 06:13:28.371940",
	"patchsets": [
		1,
		2001,
		2002,
		4002
	],
	"modified": "2012-11-24 04:50:51.386450",
	"closed": true,
	"issue": 6845077
}