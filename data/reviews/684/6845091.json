{
	"description": "net: add deadline prolongation test\nCurrently the test exposes data races on deadline vars.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"bradfitz@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thanks, we've been making a lot of changes to net over the long weekend, please wait for others to review our work before submitting.",
			"disapproval": false,
			"date": "2012-11-25 11:26:07.489820",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Good question. Fails on my machine.\r\n\r\nOn Mon, Nov 26, 2012 at 10:48 PM, Dave Cheney <dave@cheney.net> wrote:\r\n> Wasn't this test expected to fail ?\r\n>\r\n> On 27 Nov 2012 05:30, <dvyukov@google.com> wrote:\r\n>>\r\n>> *** Submitted as\r\n>> http://code.google.com/p/go/source/detail?r=d2b512689ae1 ***\r\n>>\r\n>> net: add deadline prolongation test\r\n>> Currently the test exposes data races on deadline vars.\r\n>>\r\n>> R=golang-dev, dave, bradfitz, rsc\r\n>> CC=golang-dev\r\n>> http://codereview.appspot.com/6845091\r\n>>\r\n>>\r\n>> http://codereview.appspot.com/6845091/\r\n",
			"disapproval": false,
			"date": "2012-11-26 18:56:41.307950",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "OK, great, fails now:\r\nhttp://build.golang.org/log/aac207a4038012b0244c57d7bffc01591c4b6900\r\n\r\nOn Mon, Nov 26, 2012 at 11:07 PM, Dmitry Vyukov <dvyukov@google.com> wrote:\r\n> OK, I better not send out nor commit any change lists today...\r\n>\r\n> On Mon, Nov 26, 2012 at 11:04 PM, Dave Cheney <dave@cheney.net> wrote:\r\n>> Did you mean -e ?\r\n>>\r\n>> On 27 Nov 2012 06:02, \"Dmitry Vyukov\" <dvyukov@google.com> wrote:\r\n>>>\r\n>>> booa-ga-ga\r\n>>>\r\n>>> My buildbot script is:\r\n>>>\r\n>>> $ cat test.sh\r\n>>> #!/bin/sh\r\n>>> export GOROOT=\"$(cd .. && pwd)\"\r\n>>> export PATH=$GOROOT/bin:$PATH\r\n>>> ./make.bash\r\n>>> go install -race std\r\n>>> go test -race -short std\r\n>>> go test -race -run=nothingplease -bench=.* -benchtime=.1s -cpu=4 std\r\n>>>\r\n>>> I guess I need to add set -x ...\r\n>>>\r\n>>>\r\n>>>\r\n>>> On Mon, Nov 26, 2012 at 10:56 PM, Dmitry Vyukov <dvyukov@google.com>\r\n>>> wrote:\r\n>>> > Good question. Fails on my machine.\r\n>>> >\r\n>>> > On Mon, Nov 26, 2012 at 10:48 PM, Dave Cheney <dave@cheney.net> wrote:\r\n>>> >> Wasn't this test expected to fail ?\r\n>>> >>\r\n>>> >> On 27 Nov 2012 05:30, <dvyukov@google.com> wrote:\r\n>>> >>>\r\n>>> >>> *** Submitted as\r\n>>> >>> http://code.google.com/p/go/source/detail?r=d2b512689ae1 ***\r\n>>> >>>\r\n>>> >>> net: add deadline prolongation test\r\n>>> >>> Currently the test exposes data races on deadline vars.\r\n>>> >>>\r\n>>> >>> R=golang-dev, dave, bradfitz, rsc\r\n>>> >>> CC=golang-dev\r\n>>> >>> http://codereview.appspot.com/6845091\r\n>>> >>>\r\n>>> >>>\r\n>>> >>> http://codereview.appspot.com/6845091/\r\n",
			"disapproval": false,
			"date": "2012-11-26 19:09:36.299180",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d2b512689ae1 ***\n\nnet: add deadline prolongation test\nCurrently the test exposes data races on deadline vars.\n\nR=golang-dev, dave, bradfitz, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6845091",
			"disapproval": false,
			"date": "2012-11-26 18:30:55.896250",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: bradfitz@golang.org, dave@cheney.net),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-11-25 10:59:44.561330",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No major comments.\n\nhttps://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go#newcode589\nsrc/pkg/net/timeout_test.go:589: c, err := Dial(\"tcp\", ln.Addr().String())\nyou're assuming that this doesn't block (that the kernel buffers at least one accept until your Accept on line 594 below), which is probably safe on all current platforms, but not something that the Go API guarantees.\n\nhttps://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go#newcode601\nsrc/pkg/net/timeout_test.go:601: buf := [4096]byte{}\nvar buf [4096]byte\n\nseems more natural\n\nhttps://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go#newcode607\nsrc/pkg/net/timeout_test.go:607: s.SetDeadline(time.Now().Add(time.Hour))\ndo you mean to set both deadlines, or just SetWriteDeadline?\n\nhttps://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go#newcode617\nsrc/pkg/net/timeout_test.go:617: s.SetDeadline(time.Now().Add(time.Hour))\ndo you mean to set both deadlines, or just SetReadDeadline?\n\nhttps://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go#newcode621\nsrc/pkg/net/timeout_test.go:621: buf := [1]byte{}\nvar buf [1]byte",
			"disapproval": false,
			"date": "2012-11-26 00:46:40.771840",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Wasn't this test expected to fail ?\r\nOn 27 Nov 2012 05:30, <dvyukov@google.com> wrote:\r\n\r\n> *** Submitted as\r\n> http://code.google.com/p/go/**source/detail?r=d2b512689ae1<http://code.google.com/p/go/source/detail?r=d2b512689ae1>***\r\n>\r\n> net: add deadline prolongation test\r\n> Currently the test exposes data races on deadline vars.\r\n>\r\n> R=golang-dev, dave, bradfitz, rsc\r\n> CC=golang-dev\r\n> http://codereview.appspot.com/**6845091<http://codereview.appspot.com/6845091>\r\n>\r\n>\r\n> http://codereview.appspot.com/**6845091/<http://codereview.appspot.com/6845091/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-26 18:48:13.863400",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you, I am sure this will set off the race detector.\n\nhttps://codereview.appspot.com/6845091/diff/3/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/6845091/diff/3/src/pkg/net/timeout_test.go#newcode589\nsrc/pkg/net/timeout_test.go:589: c, err := DialTCP(\"tcp\", nil, ln.Addr().(*TCPAddr))\nDoes this need to be DialTCP, all net.Conn implementations implement Set{Read,Write,}Deadline.\n\nhttps://codereview.appspot.com/6845091/diff/3/src/pkg/net/timeout_test.go#newcode607\nsrc/pkg/net/timeout_test.go:607: s.SetDeadline(time.Now().Add(time.Hour))\nDid you mean SetReadDeadline ?",
			"disapproval": false,
			"date": "2012-11-25 11:09:10.087780",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Did you mean -e ?\r\nOn 27 Nov 2012 06:02, \"Dmitry Vyukov\" <dvyukov@google.com> wrote:\r\n\r\n> booa-ga-ga\r\n>\r\n> My buildbot script is:\r\n>\r\n> $ cat test.sh\r\n> #!/bin/sh\r\n> export GOROOT=\"$(cd .. && pwd)\"\r\n> export PATH=$GOROOT/bin:$PATH\r\n> ./make.bash\r\n> go install -race std\r\n> go test -race -short std\r\n> go test -race -run=nothingplease -bench=.* -benchtime=.1s -cpu=4 std\r\n>\r\n> I guess I need to add set -x ...\r\n>\r\n>\r\n>\r\n> On Mon, Nov 26, 2012 at 10:56 PM, Dmitry Vyukov <dvyukov@google.com>\r\n> wrote:\r\n> > Good question. Fails on my machine.\r\n> >\r\n> > On Mon, Nov 26, 2012 at 10:48 PM, Dave Cheney <dave@cheney.net> wrote:\r\n> >> Wasn't this test expected to fail ?\r\n> >>\r\n> >> On 27 Nov 2012 05:30, <dvyukov@google.com> wrote:\r\n> >>>\r\n> >>> *** Submitted as\r\n> >>> http://code.google.com/p/go/source/detail?r=d2b512689ae1 ***\r\n> >>>\r\n> >>> net: add deadline prolongation test\r\n> >>> Currently the test exposes data races on deadline vars.\r\n> >>>\r\n> >>> R=golang-dev, dave, bradfitz, rsc\r\n> >>> CC=golang-dev\r\n> >>> http://codereview.appspot.com/6845091\r\n> >>>\r\n> >>>\r\n> >>> http://codereview.appspot.com/6845091/\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-26 19:04:43.363160",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOkay I guess. It seems like broken code but I agree it shouldn't trigger races in package net.",
			"disapproval": false,
			"date": "2012-11-26 17:13:50.944770",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes, it is:\n\n==================\nWARNING: DATA RACE\nWrite by goroutine 4:\n  net.setReadDeadline()\n      src/pkg/net/sockopt_posix.go:126 +0xdf\n  net.setDeadline()\n      src/pkg/net/sockopt_posix.go:141 +0x4e\n  net.(*conn).SetDeadline()\n      src/pkg/net/net.go:161 +0xe3\n  net.func\u00b7058()\n      src/pkg/net/timeout_test.go:607 +0x1ca\n\nPrevious read by goroutine 5:\n  net.(*netFD).Read()\n      src/pkg/net/fd_unix.go:426 +0xfb\n  net.(*conn).Read()\n      src/pkg/net/net.go:121 +0x101\n  net.func\u00b7059()\n      src/pkg/net/timeout_test.go:613 +0xbf\n\nGoroutine 4 (running) created at:\n  net.TestProlongTimeout()\n      src/pkg/net/timeout_test.go:609 +0x517\n  testing.tRunner()\n      src/pkg/testing/testing.go:301 +0xe8\n\nGoroutine 5 (running) created at:\n  net.TestProlongTimeout()\n      src/pkg/net/timeout_test.go:619 +0x531\n  testing.tRunner()\n      src/pkg/testing/testing.go:301 +0xe8\n\n==================\n==================\nWARNING: DATA RACE\nRead by goroutine 4:\n  net.(*netFD).Write()\n      src/pkg/net/fd_unix.go:533 +0x12e\n  net.(*conn).Write()\n      src/pkg/net/net.go:129 +0x101\n  net.func\u00b7058()\n      src/pkg/net/timeout_test.go:603 +0x106\n\nPrevious write by goroutine 5:\n  net.setWriteDeadline()\n      src/pkg/net/sockopt_posix.go:135 +0xdf\n  net.setDeadline()\n      src/pkg/net/sockopt_posix.go:144 +0x9c\n  net.(*conn).SetDeadline()\n      src/pkg/net/net.go:161 +0xe3\n  net.func\u00b7059()\n      src/pkg/net/timeout_test.go:617 +0x168\n\nGoroutine 4 (running) created at:\n  net.TestProlongTimeout()\n      src/pkg/net/timeout_test.go:609 +0x517\n  testing.tRunner()\n      src/pkg/testing/testing.go:301 +0xe8\n\nGoroutine 5 (running) created at:\n  net.TestProlongTimeout()\n      src/pkg/net/timeout_test.go:619 +0x531\n  testing.tRunner()\n      src/pkg/testing/testing.go:301 +0xe8\n\n==================\n\nhttps://codereview.appspot.com/6845091/diff/3/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/6845091/diff/3/src/pkg/net/timeout_test.go#newcode589\nsrc/pkg/net/timeout_test.go:589: c, err := DialTCP(\"tcp\", nil, ln.Addr().(*TCPAddr))\nOn 2012/11/25 11:09:10, dfc wrote:\n> Does this need to be DialTCP, all net.Conn implementations implement\n> Set{Read,Write,}Deadline.\n\nDone.\n\nhttps://codereview.appspot.com/6845091/diff/3/src/pkg/net/timeout_test.go#newcode607\nsrc/pkg/net/timeout_test.go:607: s.SetDeadline(time.Now().Add(time.Hour))\nOn 2012/11/25 11:09:10, dfc wrote:\n> Did you mean SetReadDeadline ? \n\nNo, I don't.\nThis is pretty synthetic anyway. Currently it exposes races on both read and write deadline vars.",
			"disapproval": false,
			"date": "2012-11-25 11:22:10.177320",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "booa-ga-ga\r\n\r\nMy buildbot script is:\r\n\r\n$ cat test.sh\r\n#!/bin/sh\r\nexport GOROOT=\"$(cd .. && pwd)\"\r\nexport PATH=$GOROOT/bin:$PATH\r\n./make.bash\r\ngo install -race std\r\ngo test -race -short std\r\ngo test -race -run=nothingplease -bench=.* -benchtime=.1s -cpu=4 std\r\n\r\nI guess I need to add set -x ...\r\n\r\n\r\n\r\nOn Mon, Nov 26, 2012 at 10:56 PM, Dmitry Vyukov <dvyukov@google.com> wrote:\r\n> Good question. Fails on my machine.\r\n>\r\n> On Mon, Nov 26, 2012 at 10:48 PM, Dave Cheney <dave@cheney.net> wrote:\r\n>> Wasn't this test expected to fail ?\r\n>>\r\n>> On 27 Nov 2012 05:30, <dvyukov@google.com> wrote:\r\n>>>\r\n>>> *** Submitted as\r\n>>> http://code.google.com/p/go/source/detail?r=d2b512689ae1 ***\r\n>>>\r\n>>> net: add deadline prolongation test\r\n>>> Currently the test exposes data races on deadline vars.\r\n>>>\r\n>>> R=golang-dev, dave, bradfitz, rsc\r\n>>> CC=golang-dev\r\n>>> http://codereview.appspot.com/6845091\r\n>>>\r\n>>>\r\n>>> http://codereview.appspot.com/6845091/\r\n",
			"disapproval": false,
			"date": "2012-11-26 19:02:35.739380",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go\nFile src/pkg/net/timeout_test.go (right):\n\nhttps://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go#newcode589\nsrc/pkg/net/timeout_test.go:589: c, err := Dial(\"tcp\", ln.Addr().String())\nOn 2012/11/26 00:46:41, bradfitz wrote:\n> you're assuming that this doesn't block (that the kernel buffers at least one\n> accept until your Accept on line 594 below), which is probably safe on all\n> current platforms, but not something that the Go API guarantees.\n\nDone.\n\nhttps://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go#newcode601\nsrc/pkg/net/timeout_test.go:601: buf := [4096]byte{}\nOn 2012/11/26 00:46:41, bradfitz wrote:\n> var buf [4096]byte\n> \n> seems more natural\n\nDone.\n\nhttps://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go#newcode607\nsrc/pkg/net/timeout_test.go:607: s.SetDeadline(time.Now().Add(time.Hour))\nOn 2012/11/26 00:46:41, bradfitz wrote:\n> do you mean to set both deadlines, or just SetWriteDeadline?\n\n\nI mean to set both. It stresses setup of the same type of deadline from several goroutines. I can imagine it happens if e.g. you process each incoming command in a separate goroutine; if you receive several keepalive commands in short succession, you can end up calling SetDeadline() concurrently.\n\nhttps://codereview.appspot.com/6845091/diff/11001/src/pkg/net/timeout_test.go#newcode621\nsrc/pkg/net/timeout_test.go:621: buf := [1]byte{}\nOn 2012/11/26 00:46:41, bradfitz wrote:\n> var buf [1]byte\n\nDone.",
			"disapproval": false,
			"date": "2012-11-26 07:35:32.733830",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "OK, I better not send out nor commit any change lists today...\r\n\r\nOn Mon, Nov 26, 2012 at 11:04 PM, Dave Cheney <dave@cheney.net> wrote:\r\n> Did you mean -e ?\r\n>\r\n> On 27 Nov 2012 06:02, \"Dmitry Vyukov\" <dvyukov@google.com> wrote:\r\n>>\r\n>> booa-ga-ga\r\n>>\r\n>> My buildbot script is:\r\n>>\r\n>> $ cat test.sh\r\n>> #!/bin/sh\r\n>> export GOROOT=\"$(cd .. && pwd)\"\r\n>> export PATH=$GOROOT/bin:$PATH\r\n>> ./make.bash\r\n>> go install -race std\r\n>> go test -race -short std\r\n>> go test -race -run=nothingplease -bench=.* -benchtime=.1s -cpu=4 std\r\n>>\r\n>> I guess I need to add set -x ...\r\n>>\r\n>>\r\n>>\r\n>> On Mon, Nov 26, 2012 at 10:56 PM, Dmitry Vyukov <dvyukov@google.com>\r\n>> wrote:\r\n>> > Good question. Fails on my machine.\r\n>> >\r\n>> > On Mon, Nov 26, 2012 at 10:48 PM, Dave Cheney <dave@cheney.net> wrote:\r\n>> >> Wasn't this test expected to fail ?\r\n>> >>\r\n>> >> On 27 Nov 2012 05:30, <dvyukov@google.com> wrote:\r\n>> >>>\r\n>> >>> *** Submitted as\r\n>> >>> http://code.google.com/p/go/source/detail?r=d2b512689ae1 ***\r\n>> >>>\r\n>> >>> net: add deadline prolongation test\r\n>> >>> Currently the test exposes data races on deadline vars.\r\n>> >>>\r\n>> >>> R=golang-dev, dave, bradfitz, rsc\r\n>> >>> CC=golang-dev\r\n>> >>> http://codereview.appspot.com/6845091\r\n>> >>>\r\n>> >>>\r\n>> >>> http://codereview.appspot.com/6845091/\r\n",
			"disapproval": false,
			"date": "2012-11-26 19:07:57.369910",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6845091: net: add deadline prolongation test",
	"created": "2012-11-25 10:57:33.743970",
	"patchsets": [
		1,
		2001,
		5001,
		3,
		11001,
		4002,
		5003,
		13001,
		6004,
		7004
	],
	"modified": "2012-11-26 18:30:58.717460",
	"closed": true,
	"issue": 6845091
}