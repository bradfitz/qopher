{
	"description": "runtime/cgo: include <string.h> as needed so that strerror is declared",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"jsing@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-11-15 01:20:31.137570",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Could you please include a comment, similar to the gcc_linux_*\r\nversions explaining what the include is for.\r\n\r\nI was also wonder, could some sort of // #cgo CFLAGS be added to\r\nenable warnings/errors on this code ? Maybe it could help avoid these\r\nweird errors in the future ?\r\n\r\nOn Thu, Nov 15, 2012 at 12:20 PM,  <iant@golang.org> wrote:\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> runtime/cgo: include <string.h> as needed so that strerror is declared\r\n>\r\n> Please review this at http://codereview.appspot.com/6847051/\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/cgo/gcc_freebsd_386.c\r\n>   M src/pkg/runtime/cgo/gcc_freebsd_amd64.c\r\n>   M src/pkg/runtime/cgo/gcc_netbsd_386.c\r\n>   M src/pkg/runtime/cgo/gcc_netbsd_amd64.c\r\n>\r\n>\r\n> Index: src/pkg/runtime/cgo/gcc_freebsd_386.c\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/cgo/gcc_freebsd_386.c\r\n> +++ b/src/pkg/runtime/cgo/gcc_freebsd_386.c\r\n> @@ -2,6 +2,7 @@\r\n>  // Use of this source code is governed by a BSD-style\r\n>  // license that can be found in the LICENSE file.\r\n>\r\n> +#include <string.h>\r\n>  #include <sys/types.h>\r\n>  #include <sys/signalvar.h>\r\n>  #include <pthread.h>\r\n> Index: src/pkg/runtime/cgo/gcc_freebsd_amd64.c\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/cgo/gcc_freebsd_amd64.c\r\n> +++ b/src/pkg/runtime/cgo/gcc_freebsd_amd64.c\r\n> @@ -2,6 +2,7 @@\r\n>  // Use of this source code is governed by a BSD-style\r\n>  // license that can be found in the LICENSE file.\r\n>\r\n> +#include <string.h>\r\n>  #include <sys/types.h>\r\n>  #include <sys/signalvar.h>\r\n>  #include <pthread.h>\r\n> Index: src/pkg/runtime/cgo/gcc_netbsd_386.c\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/cgo/gcc_netbsd_386.c\r\n> +++ b/src/pkg/runtime/cgo/gcc_netbsd_386.c\r\n> @@ -2,6 +2,7 @@\r\n>  // Use of this source code is governed by a BSD-style\r\n>  // license that can be found in the LICENSE file.\r\n>\r\n> +#include <string.h>\r\n>  #include <sys/types.h>\r\n>  #include <pthread.h>\r\n>  #include <signal.h>\r\n> Index: src/pkg/runtime/cgo/gcc_netbsd_amd64.c\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/cgo/gcc_netbsd_amd64.c\r\n> +++ b/src/pkg/runtime/cgo/gcc_netbsd_amd64.c\r\n> @@ -2,6 +2,7 @@\r\n>  // Use of this source code is governed by a BSD-style\r\n>  // license that can be found in the LICENSE file.\r\n>\r\n> +#include <string.h>\r\n>  #include <sys/types.h>\r\n>  #include <pthread.h>\r\n>  #include <signal.h>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-15 01:26:25.579870",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"jsing@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6847051/diff/1/src/pkg/runtime/cgo/gcc_freebsd_386.c\nFile src/pkg/runtime/cgo/gcc_freebsd_386.c (right):\n\nhttps://codereview.appspot.com/6847051/diff/1/src/pkg/runtime/cgo/gcc_freebsd_386.c#newcode5\nsrc/pkg/runtime/cgo/gcc_freebsd_386.c:5: #include <string.h>\nStyle-wise, I would personally leave the sys includes first and place this after signal.h.",
			"disapproval": false,
			"date": "2012-11-15 04:27:52.055580",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/15 01:26:25, dfc wrote:\n> Could you please include a comment, similar to the gcc_linux_*\n> versions explaining what the include is for.\n\nSure, I can, but let me question whether that is really needed.  We don't explain why the other header files are #include'd.  I don't know why the GNU/Linux versions feel a need for the comment either.\n\n> I was also wonder, could some sort of // #cgo CFLAGS be added to\n> enable warnings/errors on this code ? Maybe it could help avoid these\n> weird errors in the future ?\n\nYes, it probably makes sense to add the warning options that we use in cmd/dist/build.c to these files.  Using // #cgo might work, I'm not sure.\n\nIan",
			"disapproval": false,
			"date": "2012-11-15 01:49:47.859250",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"jsing@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6847051/diff/1/src/pkg/runtime/cgo/gcc_freebsd_386.c\nFile src/pkg/runtime/cgo/gcc_freebsd_386.c (right):\n\nhttps://codereview.appspot.com/6847051/diff/1/src/pkg/runtime/cgo/gcc_freebsd_386.c#newcode5\nsrc/pkg/runtime/cgo/gcc_freebsd_386.c:5: #include <string.h>\nOn 2012/11/15 04:27:52, jsing wrote:\n> Style-wise, I would personally leave the sys includes first and place this after\n> signal.h.\n\nDone.",
			"disapproval": false,
			"date": "2012-11-15 06:03:44.367800",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\r\n\r\nOn 15/11/2012, at 12:49, iant@golang.org wrote:\r\n\r\n> On 2012/11/15 01:26:25, dfc wrote:\r\n>> Could you please include a comment, similar to the gcc_linux_*\r\n>> versions explaining what the include is for.\r\n> \r\n> Sure, I can, but let me question whether that is really needed.  We\r\n> don't explain why the other header files are #include'd.  I don't know\r\n> why the GNU/Linux versions feel a need for the comment either.\r\n\r\nGood point, if you can get compiler warnings going, maybe we don't need the comment as a backup. \r\n\r\n> \r\n>> I was also wonder, could some sort of // #cgo CFLAGS be added to\r\n>> enable warnings/errors on this code ? Maybe it could help avoid these\r\n>> weird errors in the future ?\r\n> \r\n> Yes, it probably makes sense to add the warning options that we use in\r\n> cmd/dist/build.c to these files.  Using // #cgo might work, I'm not\r\n> sure.\r\n> \r\n> Ian\r\n> \r\n> https://codereview.appspot.com/6847051/\r\n",
			"disapproval": false,
			"date": "2012-11-15 01:53:11.450990",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"jsing@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=591fc8a0131a ***\n\nruntime/cgo: include <string.h> as needed so that strerror is declared\n\nR=golang-dev, dave, jsing\nCC=golang-dev\nhttp://codereview.appspot.com/6847051",
			"disapproval": false,
			"date": "2012-11-15 06:04:11.246340",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 6847051: runtime/cgo: include <string.h> as needed so that strer...",
	"created": "2012-11-15 01:20:16.369200",
	"patchsets": [
		1,
		1005
	],
	"modified": "2012-11-15 06:04:12.851890",
	"closed": true,
	"issue": 6847051
}