{
	"description": "misc/git: add gofmt git pre-commit hook",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"ftrvxmtrx@gmail.com",
		"franciscossouza@gmail.com",
		"r@golang.org",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm going to point to this from a blog post, so picky comments about my\r\nbash skills are welcome. Particularly anything that will make the script\r\nmore portable.\r\n\r\n\r\nOn 13 November 2012 15:58, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> LGTM\r\n>\r\n>\r\n> On Tue, Nov 13, 2012 at 5:38 AM, <adg@golang.org> wrote:\r\n>\r\n>> Reviewers: golang-dev_googlegroups.com,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com,\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://code.google.com/p/go\r\n>>\r\n>>\r\n>> Description:\r\n>> misc/git: add gofmt git pre-commit hook\r\n>>\r\n>> Please review this at http://codereview.appspot.com/**6843044/<http://codereview.appspot.com/6843044/>\r\n>>\r\n>> Affected files:\r\n>>   A misc/git/pre-commit\r\n>>\r\n>>\r\n>> Index: misc/git/pre-commit\r\n>> ==============================**==============================**=======\r\n>> new file mode 100755\r\n>> --- /dev/null\r\n>> +++ b/misc/git/pre-commit\r\n>> @@ -0,0 +1,28 @@\r\n>> +#!/usr/bin/env bash\r\n>> +# Copyright 2012 The Go Authors. All rights reserved.\r\n>> +# Use of this source code is governed by a BSD-style\r\n>> +# license that can be found in the LICENSE file.\r\n>> +\r\n>> +# git gofmt pre-commit hook\r\n>> +#\r\n>> +# To use, store as .git/hooks/pre-commit inside you repository and make\r\n>> sure\r\n>> +# it has execute permissions (chmod +x pre-commit).\r\n>> +\r\n>> +gofiles=\"$(git diff --cached --name-only --diff-filter=ACM | grep\r\n>> '.go$')\"\r\n>> +[ \"$gofiles\" == \"\" ] && exit 0\r\n>> +\r\n>> +unformatted=\"$(gofmt -l $gofiles)\"\r\n>> +[ \"$unformatted\" == \"\" ] && exit 0\r\n>> +\r\n>> +# Some files are not gofmt'd. Print message and fail.\r\n>> +\r\n>> +echo \"Go files must be formatted with gofmt. Please run:\" >&2\r\n>> +echo -n \"  gofmt -w\" >&2\r\n>> +dir=\"$(pwd)\"\r\n>> +for fn in $unformatted; do\r\n>> +       echo \" \\\\\" >&2\r\n>> +       echo -n \"   \" ${dir}/${fn} >&2\r\n>> +done\r\n>> +echo >&2\r\n>> +\r\n>> +exit 1\r\n>>\r\n>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-13 15:11:50.483700",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn 2012/11/14 10:39:53, adg wrote:\n> https://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit\n> File misc/git/pre-commit (right):\n> \n> https://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode9\n> misc/git/pre-commit:9: # it has execute permissions.\n> On 2012/11/14 10:34:09, minux wrote:\n> > do you want to document that it doesn't handle spaces in\n> > filenames?\n> \n> Documented.\n> \n> > also, it can only handle the case where files staged to\n> > be committed (in the index) is the same as the corresponding\n> > file in the working copy.\n> \n> I'm ok with that.\n> \n> https://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode14\n> misc/git/pre-commit:14: unformatted=$(gofmt -l $gofiles)\n> On 2012/11/14 10:34:09, minux wrote:\n> > do you want to ignore messages on stderr?\n> > gofmt will display some confusing messages when some\n> > file is not found (due to spaces in the filename)\n> \n> I'd prefer not to hide the messages. At least then the user has a hope of\n> figuring out what went wrong.\n> \n> https://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode19\n> misc/git/pre-commit:19: echo >&2 \"Go files must be formatted with gofmt. Please\n> run:\\n\"\n> On 2012/11/14 10:34:09, minux wrote:\n> > echo with \\n?\n> \n> Done.\n> \n> https://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode23\n> misc/git/pre-commit:23: printf >&2 \"    %s/%s\" \"${PWD}\" \"${fn}\"\n> On 2012/11/14 10:34:09, minux wrote:\n> > why {}? \"$PWD\" \"$fn\" is ok.\n> \n> Done.",
			"disapproval": false,
			"date": "2012-11-14 10:52:28.669550",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-11-14 10:54:16.550980",
			"approval": true
		},
		{
			"sender": "ftrvxmtrx@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6843044/diff/11001/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttp://codereview.appspot.com/6843044/diff/11001/misc/git/pre-commit#newcode20\nmisc/git/pre-commit:20: printf >&2 \"  gofmt -w\" >&2\ntwo times >&2?",
			"disapproval": false,
			"date": "2012-11-14 09:56:49.756070",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-11-13 13:38:39.142060",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, ftrvxmtrx@gmail.com, franciscossouza@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-13 15:45:23.166680",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Tue, Nov 13, 2012 at 5:38 AM, <adg@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> misc/git: add gofmt git pre-commit hook\r\n>\r\n> Please review this at http://codereview.appspot.com/**6843044/<http://codereview.appspot.com/6843044/>\r\n>\r\n> Affected files:\r\n>   A misc/git/pre-commit\r\n>\r\n>\r\n> Index: misc/git/pre-commit\r\n> ==============================**==============================**=======\r\n> new file mode 100755\r\n> --- /dev/null\r\n> +++ b/misc/git/pre-commit\r\n> @@ -0,0 +1,28 @@\r\n> +#!/usr/bin/env bash\r\n> +# Copyright 2012 The Go Authors. All rights reserved.\r\n> +# Use of this source code is governed by a BSD-style\r\n> +# license that can be found in the LICENSE file.\r\n> +\r\n> +# git gofmt pre-commit hook\r\n> +#\r\n> +# To use, store as .git/hooks/pre-commit inside you repository and make\r\n> sure\r\n> +# it has execute permissions (chmod +x pre-commit).\r\n> +\r\n> +gofiles=\"$(git diff --cached --name-only --diff-filter=ACM | grep '.go$')\"\r\n> +[ \"$gofiles\" == \"\" ] && exit 0\r\n> +\r\n> +unformatted=\"$(gofmt -l $gofiles)\"\r\n> +[ \"$unformatted\" == \"\" ] && exit 0\r\n> +\r\n> +# Some files are not gofmt'd. Print message and fail.\r\n> +\r\n> +echo \"Go files must be formatted with gofmt. Please run:\" >&2\r\n> +echo -n \"  gofmt -w\" >&2\r\n> +dir=\"$(pwd)\"\r\n> +for fn in $unformatted; do\r\n> +       echo \" \\\\\" >&2\r\n> +       echo -n \"   \" ${dir}/${fn} >&2\r\n> +done\r\n> +echo >&2\r\n> +\r\n> +exit 1\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-13 14:58:37.962000",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=68613f8e57b8 ***\n\nmisc/git: add gofmt git pre-commit hook\n\nR=golang-dev, bradfitz, ftrvxmtrx, franciscossouza, r, minux.ma\nCC=golang-dev\nhttp://codereview.appspot.com/6843044",
			"disapproval": false,
			"date": "2012-11-15 18:58:57.844360",
			"approval": false
		},
		{
			"sender": "ftrvxmtrx@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "echo -n is not portable, printf is better.\nAlso, I think \"/usr/bin/env bash\" could be replaced with just \"/bin/sh\", as there seem to be no bashisms anyway.\n\nOn 2012/11/13 15:11:50, adg wrote:\n> I'm going to point to this from a blog post, so picky comments about my\n> bash skills are welcome. Particularly anything that will make the script\n> more portable.\n> \n> \n> On 13 November 2012 15:58, Brad Fitzpatrick <mailto:bradfitz@golang.org> wrote:\n> \n> > LGTM\n> >\n> >\n> > On Tue, Nov 13, 2012 at 5:38 AM, <mailto:adg@golang.org> wrote:\n> >\n> >> Reviewers: http://golang-dev_googlegroups.com,\n> >>\n> >> Message:\n> >> Hello mailto:golang-dev@googlegroups.com,\n> >>\n> >> I'd like you to review this change to\n> >> https://code.google.com/p/go\n> >>\n> >>\n> >> Description:\n> >> misc/git: add gofmt git pre-commit hook\n> >>\n> >> Please review this at\n> http://codereview.appspot.com/**6843044/%3Chttp://codereview.appspot.com/6843044/>\n> >>\n> >> Affected files:\n> >>   A misc/git/pre-commit\n> >>\n> >>\n> >> Index: misc/git/pre-commit\n> >> ==============================**==============================**=======\n> >> new file mode 100755\n> >> --- /dev/null\n> >> +++ b/misc/git/pre-commit\n> >> @@ -0,0 +1,28 @@\n> >> +#!/usr/bin/env bash\n> >> +# Copyright 2012 The Go Authors. All rights reserved.\n> >> +# Use of this source code is governed by a BSD-style\n> >> +# license that can be found in the LICENSE file.\n> >> +\n> >> +# git gofmt pre-commit hook\n> >> +#\n> >> +# To use, store as .git/hooks/pre-commit inside you repository and make\n> >> sure\n> >> +# it has execute permissions (chmod +x pre-commit).\n> >> +\n> >> +gofiles=\"$(git diff --cached --name-only --diff-filter=ACM | grep\n> >> '.go$')\"\n> >> +[ \"$gofiles\" == \"\" ] && exit 0\n> >> +\n> >> +unformatted=\"$(gofmt -l $gofiles)\"\n> >> +[ \"$unformatted\" == \"\" ] && exit 0\n> >> +\n> >> +# Some files are not gofmt'd. Print message and fail.\n> >> +\n> >> +echo \"Go files must be formatted with gofmt. Please run:\" >&2\n> >> +echo -n \"  gofmt -w\" >&2\n> >> +dir=\"$(pwd)\"\n> >> +for fn in $unformatted; do\n> >> +       echo \" \\\\\" >&2\n> >> +       echo -n \"   \" ${dir}/${fn} >&2\n> >> +done\n> >> +echo >&2\n> >> +\n> >> +exit 1\n> >>\n> >>\n> >>\n> >",
			"disapproval": false,
			"date": "2012-11-13 15:21:09.231420",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I propose this version to solve the space in filename problem:\r\n\r\nif [ \"x$1\" == \"x--files\" ]; then\r\n        files=\"\"\r\n        while shift; do\r\n                [ -z \"$1\" ] && continue\r\n                r=\"`gofmt -l \"$1\"`\"\r\n                if [ ! -z \"$r\" ]; then\r\n                        files=\"$files \\\\\r\n        '${PWD}/$1'\"\r\n                fi;\r\n        done\r\n        if [ -z \"$files\" ]; then\r\n                exit 0\r\n        else\r\n                echo \"please ... $files\"\r\n                exit 1;\r\n        fi\r\nelse\r\n  git diff --cached --name-only -z --diff-filter=ACM | xargs -0 \"$0\" --files\r\n  exit $?\r\nfi\r\n",
			"disapproval": false,
			"date": "2012-11-13 17:35:52.351970",
			"approval": false
		},
		{
			"sender": "ftrvxmtrx@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/13 17:42:22, fss wrote:\n> On Tue, Nov 13, 2012 at 3:35 PM, minux <mailto:minux.ma@gmail.com> wrote:\n> > I propose this version to solve the space in filename problem:\n> \n> I'd propose to not solve this problem.\n> \n> \n> --\n> Francisco Souza\n\nAgree, especially considering both complexity of a fix and chance to have spaces in path.",
			"disapproval": false,
			"date": "2012-11-13 17:48:12.123250",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttps://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode9\nmisc/git/pre-commit:9: # it has execute permissions.\nOn 2012/11/14 10:34:09, minux wrote:\n> do you want to document that it doesn't handle spaces in\n> filenames?\n\nDocumented.\n\n> also, it can only handle the case where files staged to\n> be committed (in the index) is the same as the corresponding\n> file in the working copy.\n\nI'm ok with that.\n\nhttps://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode14\nmisc/git/pre-commit:14: unformatted=$(gofmt -l $gofiles)\nOn 2012/11/14 10:34:09, minux wrote:\n> do you want to ignore messages on stderr?\n> gofmt will display some confusing messages when some\n> file is not found (due to spaces in the filename)\n\nI'd prefer not to hide the messages. At least then the user has a hope of figuring out what went wrong.\n\nhttps://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode19\nmisc/git/pre-commit:19: echo >&2 \"Go files must be formatted with gofmt. Please run:\\n\"\nOn 2012/11/14 10:34:09, minux wrote:\n> echo with \\n?\n\nDone.\n\nhttps://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode23\nmisc/git/pre-commit:23: printf >&2 \"    %s/%s\" \"${PWD}\" \"${fn}\"\nOn 2012/11/14 10:34:09, minux wrote:\n> why {}? \"$PWD\" \"$fn\" is ok.\n\nDone.",
			"disapproval": false,
			"date": "2012-11-14 10:39:53.987040",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6843044/diff/1/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttp://codereview.appspot.com/6843044/diff/1/misc/git/pre-commit#newcode21\nmisc/git/pre-commit:21: dir=\"$(pwd)\"\nYou can drop this variable and use the ${PWD} environment variable instead.",
			"disapproval": false,
			"date": "2012-11-13 15:32:14.796460",
			"approval": false
		},
		{
			"sender": "ftrvxmtrx@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6843044/diff/2002/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttp://codereview.appspot.com/6843044/diff/2002/misc/git/pre-commit#newcode12\nmisc/git/pre-commit:12: [ \"$gofiles\" == \"\" ] && exit 0\nEither s/==/=/ or [ -z \"$gofiles\" ]\n\nhttp://codereview.appspot.com/6843044/diff/2002/misc/git/pre-commit#newcode15\nmisc/git/pre-commit:15: [ \"$unformatted\" == \"\" ] && exit 0\nSee above.",
			"disapproval": false,
			"date": "2012-11-13 15:39:10.072990",
			"approval": false
		},
		{
			"sender": "ftrvxmtrx@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttp://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit#newcode21\nmisc/git/pre-commit:21: for fn in $unformatted; do\necho \"$unformatted\" | while read fn; do\n\nOr else it'll break on paths with spaces.",
			"disapproval": false,
			"date": "2012-11-13 15:55:02.810850",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Nov 14, 2012 at 1:42 AM, Francisco Souza\r\n<franciscossouza@gmail.com>wrote:\r\n\r\n> On Tue, Nov 13, 2012 at 3:35 PM, minux <minux.ma@gmail.com> wrote:\r\n> > I propose this version to solve the space in filename problem:\r\n> I'd propose to not solve this problem.\r\n>\r\nI think the easiest hook is just something like this:\r\n\r\nr=`git diff --cached --name-only -z --diff-filter=ACM | xargs -0 gofmt -l\r\n-w`\r\nif [ -z \"$r\" ]; then\r\n        exit 0\r\nelse\r\n        echo \"Gofmt'ed, please inspect and re-add these files: $r\"\r\n        exit 1\r\nfi\r\n\r\none remaining problem is that this file changes the working tree directly.\r\na deeper problem is that, we can't assume that files in the working tree\r\nis the same as files in the index. I'd rather choose not to handle that\r\ncase.\r\n",
			"disapproval": false,
			"date": "2012-11-13 18:20:45.423120",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6843044/diff/11001/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttps://codereview.appspot.com/6843044/diff/11001/misc/git/pre-commit#newcode20\nmisc/git/pre-commit:20: printf >&2 \"  gofmt -w\" >&2\nOn 2012/11/14 09:56:50, ftrvxmtrx wrote:\n> two times >&2?\n\nFixed.",
			"disapproval": false,
			"date": "2012-11-14 09:58:38.326240",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, ftrvxmtrx@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-13 15:29:28.534090",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttps://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode9\nmisc/git/pre-commit:9: # it has execute permissions.\ndo you want to document that it doesn't handle spaces in\nfilenames?\nalso, it can only handle the case where files staged to\nbe committed (in the index) is the same as the corresponding\nfile in the working copy.\n\nhttps://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode14\nmisc/git/pre-commit:14: unformatted=$(gofmt -l $gofiles)\ndo you want to ignore messages on stderr?\ngofmt will display some confusing messages when some\nfile is not found (due to spaces in the filename)\n\nhttps://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode19\nmisc/git/pre-commit:19: echo >&2 \"Go files must be formatted with gofmt. Please run:\\n\"\necho with \\n?\n\nhttps://codereview.appspot.com/6843044/diff/1005/misc/git/pre-commit#newcode23\nmisc/git/pre-commit:23: printf >&2 \"    %s/%s\" \"${PWD}\" \"${fn}\"\nwhy {}? \"$PWD\" \"$fn\" is ok.",
			"disapproval": false,
			"date": "2012-11-14 10:34:09.267490",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttps://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit#newcode8\nmisc/git/pre-commit:8: # To use, store as .git/hooks/pre-commit inside you repository and make sure\ns/you/your/\n\nhttps://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit#newcode9\nmisc/git/pre-commit:9: # it has execute permissions (chmod +x pre-commit).\ndelete the parenthetical clause. if you don't know how to do this you shouldn't be playing with these tools\n\nhttps://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit#newcode11\nmisc/git/pre-commit:11: gofiles=\"$(git diff --cached --name-only --diff-filter=ACM | grep '.go$')\"\nquotes unnecessary on $() (several instances)\n\nhttps://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit#newcode19\nmisc/git/pre-commit:19: printf \"Go files must be formatted with gofmt. Please run:\\n\" >&2\nprintf? this isn't C.\nuse echo >&2\n(and put the >&2 next to the echo, not at the end of the line, so it's easier to see)",
			"disapproval": false,
			"date": "2012-11-13 17:14:48.858760",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Nov 13, 2012 at 3:35 PM, minux <minux.ma@gmail.com> wrote:\r\n> I propose this version to solve the space in filename problem:\r\n\r\nI'd propose to not solve this problem.\r\n\r\n\r\n--\r\nFrancisco Souza\r\n",
			"disapproval": false,
			"date": "2012-11-13 17:42:22.989160",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am surprised to learn (again) that 'sh' today means the PWB shell\r\nand its sequelae. I keep hoping we'd left that behind long ago.\r\n\r\nShocking to think that Unix 7th edition is too modern for today's computers.\r\n\r\nI give up.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-11-14 15:04:32.578730",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6843044/diff/12002/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttp://codereview.appspot.com/6843044/diff/12002/misc/git/pre-commit#newcode27\nmisc/git/pre-commit:27: echo >&2\nby the time you've put the backslash in, it's multiline anyway. and the backslashes are scary.\n\n why not just\nfor fn in $unformatted; do\n  echo \"gofmt -w $PWD/$fn\"\ndone\n\nyou're overthinking it",
			"disapproval": false,
			"date": "2012-11-14 15:08:49.870790",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd prefer not totally rewrite this.\n\nI like that it:\na) provides a command line to fix the problem\nb) doesn't modify your files automatically\n\nhttps://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttps://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit#newcode8\nmisc/git/pre-commit:8: # To use, store as .git/hooks/pre-commit inside you repository and make sure\nOn 2012/11/13 17:14:49, r wrote:\n> s/you/your/\n\nDone.\n\nhttps://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit#newcode9\nmisc/git/pre-commit:9: # it has execute permissions (chmod +x pre-commit).\nOn 2012/11/13 17:14:49, r wrote:\n> delete the parenthetical clause. if you don't know how to do this you shouldn't\n> be playing with these tools\n\nDone.\n\nhttps://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit#newcode11\nmisc/git/pre-commit:11: gofiles=\"$(git diff --cached --name-only --diff-filter=ACM | grep '.go$')\"\nOn 2012/11/13 17:14:49, r wrote:\n> quotes unnecessary on $() (several instances)\n\nDone.\n\nhttps://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit#newcode19\nmisc/git/pre-commit:19: printf \"Go files must be formatted with gofmt. Please run:\\n\" >&2\nOn 2012/11/13 17:14:49, r wrote:\n> printf? this isn't C.\n\nI'm using printf because 'echo -n' isn't portable.\n\n> use echo >&2\n> (and put the >&2 next to the echo, not at the end of the line, so it's easier to\n> see)\n\nDone.\n\nhttps://codereview.appspot.com/6843044/diff/2004/misc/git/pre-commit#newcode21\nmisc/git/pre-commit:21: for fn in $unformatted; do\nOn 2012/11/13 15:55:03, ftrvxmtrx wrote:\n> echo \"$unformatted\" | while read fn; do\n> \n> Or else it'll break on paths with spaces.\n\nI think it's already broken for paths with spaces.\nI'm happy to ignore that problem.",
			"disapproval": false,
			"date": "2012-11-14 09:51:20.068760",
			"approval": false
		},
		{
			"sender": "ftrvxmtrx@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn 2012/11/14 09:58:38, adg wrote:\n> https://codereview.appspot.com/6843044/diff/11001/misc/git/pre-commit\n> File misc/git/pre-commit (right):\n> \n> https://codereview.appspot.com/6843044/diff/11001/misc/git/pre-commit#newcode20\n> misc/git/pre-commit:20: printf >&2 \"  gofmt -w\" >&2\n> On 2012/11/14 09:56:50, ftrvxmtrx wrote:\n> > two times >&2?\n> \n> Fixed.",
			"disapproval": false,
			"date": "2012-11-14 10:02:19.348200",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Tell me more about echo -n not being portable for this purpose. I'd\r\nlike to understand why a day one Unix command isn't allowed to print a\r\nsimple string, but a Johnny-come-lately I've never used is the one\r\neveryone knows is better.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-11-14 14:35:43.810180",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6843044/diff/12002/misc/git/pre-commit\nFile misc/git/pre-commit (right):\n\nhttps://codereview.appspot.com/6843044/diff/12002/misc/git/pre-commit#newcode27\nmisc/git/pre-commit:27: echo >&2\nOn 2012/11/14 15:08:50, r wrote:\n> by the time you've put the backslash in, it's multiline anyway. and the\n> backslashes are scary.\n> \n>  why not just\n> for fn in $unformatted; do\n>   echo \"gofmt -w $PWD/$fn\"\n> done\n> \n> you're overthinking it\n\nDone.",
			"disapproval": false,
			"date": "2012-11-15 16:48:15.422200",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, ftrvxmtrx@gmail.com, franciscossouza@gmail.com, r@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-14 09:51:33.022250",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"ftrvxmtrx@gmail.com",
				"franciscossouza@gmail.com",
				"r@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-11-15 18:24:30.888440",
			"approval": true
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Nov 14, 2012 at 12:35 PM, Rob Pike <r@golang.org> wrote:\r\n> Tell me more about echo -n not being portable for this purpose. I'd\r\n> like to understand why a day one Unix command isn't allowed to print a\r\n> simple string, but a Johnny-come-lately I've never used is the one\r\n> everyone knows is better.\r\n\r\n% sh\r\nsh-3.2$ echo -n abc\r\n-n abc\r\nsh-3.2$ /bin/echo -n abc\r\nabcsh-3.2$\r\n",
			"disapproval": false,
			"date": "2012-11-14 14:47:38.735290",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 6843044: misc/git: add gofmt git pre-commit hook",
	"created": "2012-11-13 13:38:34.343490",
	"patchsets": [
		1,
		2002,
		2004,
		11001,
		1005,
		12002,
		2006,
		7
	],
	"modified": "2012-11-15 18:58:59.987880",
	"closed": true,
	"issue": 6843044
}