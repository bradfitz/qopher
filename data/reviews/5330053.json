{
	"description": "exp/ssh: fix length header leaking into channel data streams.\n\nThe payload of a data message is defined as an SSH string type,\nwhich uses the first four bytes to encode its length. When channelData\nand channelExtendedData were added I defined Payload as []byte to\nbe able to use it directly without a string to []byte conversion. This\nresulted in the length data leaking into the payload data.\n\nThis CL fixes the bug, and restores agl's original fast path code.\n\nAdditionally, a bug whereby s.lock was not released if a packet arrived\nfor an invalid channel has been fixed.\n\nFinally, as they were no longer used, I have removed\nthe channelData and channelExtedendData structs.",
	"cc": [
		"agl@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello agl@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-29 00:48:00.948971",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM, landing.",
			"disapproval": false,
			"date": "2011-10-29 18:22:01.738271",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=9fac03822c60 ***\n\nexp/ssh: fix length header leaking into channel data streams.\n\nThe payload of a data message is defined as an SSH string type,\nwhich uses the first four bytes to encode its length. When channelData\nand channelExtendedData were added I defined Payload as []byte to\nbe able to use it directly without a string to []byte conversion. This\nresulted in the length data leaking into the payload data.\n\nThis CL fixes the bug, and restores agl's original fast path code.\n\nAdditionally, a bug whereby s.lock was not released if a packet arrived\nfor an invalid channel has been fixed.\n\nFinally, as they were no longer used, I have removed\nthe channelData and channelExtedendData structs.\n\nR=agl, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5330053\n\nCommitter: Adam Langley <agl@golang.org>",
			"disapproval": false,
			"date": "2011-10-29 18:22:38.914042",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 5330053: exp/ssh: fix length header leaking into channel data st...",
	"created": "2011-10-29 00:28:07.054906",
	"patchsets": [
		1,
		1001,
		1002,
		5002,
		3007
	],
	"modified": "2011-10-30 01:43:29.375469",
	"closed": true,
	"issue": 5330053
}