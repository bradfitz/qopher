{
	"description": "cmd/gc: fix escape analysis\n\nIf the analysis reached a node twice, then the analysis was cut off.\nHowever, if the second arrival is at a lower depth (closer to escaping)\nthen it is important to repeat the traversal.\n\nThe repeating must be cut off at some point to avoid the occasional\ninfinite recursion. This CL cuts it off as soon as possible while still\npassing all tests.\n\nFixes issue 4751.",
	"cc": [
		"ken@golang.org",
		"golang-dev@googlegroups.com",
		"lvd@golang.org"
	],
	"reviewers": [
		"ken@google.com",
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"lvd@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1f343d81deab ***\n\ncmd/gc: fix escape analysis\n\nIf the analysis reached a node twice, then the analysis was cut off.\nHowever, if the second arrival is at a lower depth (closer to escaping)\nthen it is important to repeat the traversal.\n\nThe repeating must be cut off at some point to avoid the occasional\ninfinite recursion. This CL cuts it off as soon as possible while still\npassing all tests.\n\nFixes issue 4751.\n\nR=ken2\nCC=golang-dev, lvd\nhttps://codereview.appspot.com/7303043",
			"disapproval": false,
			"date": "2013-02-05 03:48:35.997660",
			"approval": false
		},
		{
			"sender": "ken@google.com",
			"recipients": [
				"rsc@golang.org",
				"ken@google.com",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"lvd@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "lgtm",
			"disapproval": false,
			"date": "2013-02-05 03:57:07.835110",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"lvd@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com, lvd@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-05 03:48:29.796890",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for your quick action Russ. I can confirm this has fixed the\r\nbreakage in our code.\r\n\r\nOn Tue, Feb 5, 2013 at 2:48 PM,  <rsc@golang.org> wrote:\r\n> *** Submitted as\r\n> https://code.google.com/p/go/source/detail?r=1f343d81deab ***\r\n>\r\n>\r\n> cmd/gc: fix escape analysis\r\n>\r\n> If the analysis reached a node twice, then the analysis was cut off.\r\n> However, if the second arrival is at a lower depth (closer to escaping)\r\n> then it is important to repeat the traversal.\r\n>\r\n> The repeating must be cut off at some point to avoid the occasional\r\n> infinite recursion. This CL cuts it off as soon as possible while still\r\n> passing all tests.\r\n>\r\n> Fixes issue 4751.\r\n>\r\n> R=ken2\r\n> CC=golang-dev, lvd\r\n> https://codereview.appspot.com/7303043\r\n>\r\n>\r\n> https://codereview.appspot.com/7303043/\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-05 03:57:39.449710",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7303043: cmd/gc: fix escape analysis",
	"created": "2013-02-05 03:40:07.653010",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2013-02-05 03:57:39.561130",
	"closed": true,
	"issue": 7303043
}