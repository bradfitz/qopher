{
	"description": "google-api-go-client: not apply pre go1.1 patch on Opaque if we're on App Engine",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"bradfitz@golang.org",
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hey Brad,\r\n\r\nI'm not sure that probing for the behavior that we have is worse than using\r\nbuild tags here.\r\n\r\nI can create a new CL adding some comments with references to the bugs\r\nrelated to this piece of code if you think that'd help.\r\n\r\n\r\nOn Wed, Jun 19, 2013 at 3:20 PM, <campoy@golang.org> wrote:\r\n\r\n> *** Abandoned ***\r\n>\r\n> https://codereview.appspot.**com/10384048/<https://codereview.appspot.com/10384048/>\r\n>\r\n\r\n\r\n\r\n-- \r\n--\r\nFrancesc\r\n",
			"disapproval": false,
			"date": "2013-06-19 22:25:29.633640",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/google-api-go-client",
			"disapproval": false,
			"date": "2013-06-19 18:06:46.338870",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"campoy@golang.org",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10384048/diff/5001/googleapi/googleapi.go\nFile googleapi/googleapi.go (right):\n\nhttps://codereview.appspot.com/10384048/diff/5001/googleapi/googleapi.go#newcode244\ngoogleapi/googleapi.go:244: var isGo11OrGAE bool\nI'd prefer to see two variables:\n\n// same comment as before\nvar isGo11 bool\n\n// isAppEngine is true when we're on App Engine.\nvar isAppEngine bool\n\nActually---- I'd rather see zero variables.\n\nThis is bad in the same way user agent sniffing is bad.  Just like how you're supposed to instead test DOM capabilities in JavaScript, I'd prefer you instead don't check for the Go version or the App Engine version and instead have an init() function here which does a little test to see how the current environment behaves, and then sets a bool on which strategy to take.\n\nIs that possible?\n\nIf not, at least have a separate isAppEngine flag with a big comment about what the issue is and why.  Private emails to us won't help us debug this in the future.  Put it in the code.",
			"disapproval": false,
			"date": "2013-06-19 19:08:50.302810",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-06-19 22:20:30.781070",
			"approval": false
		}
	],
	"owner_email": "campoy@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gocampoy",
	"subject": "code review 10384048: google-api-go-client: not apply pre go1.1 patch on Opaq...",
	"created": "2013-06-19 18:04:22.101670",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2013-06-19 22:25:29.683210",
	"closed": true,
	"issue": 10384048
}