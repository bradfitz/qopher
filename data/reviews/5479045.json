{
	"description": "exp/types: fix linux build\n\nI don't understand why it was only broken on Linux",
	"cc": [
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2ba8f282a9e2 ***\n\nexp/types: fix linux build\n\nI don't understand why it was only broken on Linux\n\nTBR=gri\nCC=golang-dev\nhttp://codereview.appspot.com/5479045",
			"disapproval": false,
			"date": "2011-12-09 04:20:23.407877",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-09 04:20:19.940450",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nbizarre\n\nOn Thu, Dec 8, 2011 at 8:20 PM,  <rsc@golang.org> wrote:\n> Reviewers: gri,\n>\n> Message:\n> Hello gri (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n>\n> exp/types: fix linux build\n>\n> I don't understand why it was only broken on Linux\n>\n> Please review this at http://codereview.appspot.com/5479045/\n>\n> Affected files:\n> \u00a0M src/pkg/exp/types/gcimporter.go\n>\n>\n> Index: src/pkg/exp/types/gcimporter.go\n> ===================================================================\n> --- a/src/pkg/exp/types/gcimporter.go\n> +++ b/src/pkg/exp/types/gcimporter.go\n> @@ -199,7 +199,8 @@\n> \u00a0func (p *gcParser) expect(tok rune) string {\n> \u00a0 \u00a0 \u00a0 \u00a0lit := p.lit\n> \u00a0 \u00a0 \u00a0 \u00a0if p.tok != tok {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p.errorf(\"expected %q, got %q (%q)\",\n> scanner.TokenString(tok), scanner.TokenString(p.tok), lit)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 panic(1)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p.errorf(\"expected %s, got %s (%s)\",\n> scanner.TokenString(tok), scanner.TokenString(p.tok), lit)\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0p.next()\n> \u00a0 \u00a0 \u00a0 \u00a0return lit\n> @@ -681,6 +682,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p.next()\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p.expect('+')\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0p.parseNumber()\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p.expect(')')\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// TODO: x = ...\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n>\n>\n",
			"disapproval": false,
			"date": "2011-12-09 17:25:16.720945",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5479045: exp/types: fix linux build",
	"created": "2011-12-09 04:16:11.670344",
	"patchsets": [
		1,
		2001
	],
	"modified": "2011-12-09 04:20:24.222914",
	"closed": true,
	"issue": 5479045
}