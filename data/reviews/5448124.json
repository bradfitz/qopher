{
	"description": "goinstall: honour -install=false flag when -make=true",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-12-06 22:08:45.137887",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "maybe honor *clean and *nuke while you're there?\n",
			"disapproval": false,
			"date": "2011-12-06 22:10:38.563557",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 7 December 2011 09:10, Russ Cox <rsc@golang.org> wrote:\n> maybe honor *clean and *nuke while you're there?\n\nIt already does, in make.go.\n\nfunc domake(dir, pkg string, tree *build.Tree, isCmd bool) (err error) {\n        makefile, err := makeMakefile(dir, pkg, tree, isCmd)\n        if err != nil {\n                return err\n        }\n        cmd := []string{\"bash\", \"gomake\", \"-f-\"}\n        if *nuke {\n                cmd = append(cmd, \"nuke\")\n        } else if *clean {\n                cmd = append(cmd, \"clean\")\n        }\n        cmd = append(cmd, \"install\")\n        return run(dir, makefile, cmd...)\n}\n",
			"disapproval": false,
			"date": "2011-12-06 22:13:07.593685",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Dec 6, 2011 at 17:12, Andrew Gerrand <adg@golang.org> wrote:\n> On 7 December 2011 09:10, Russ Cox <rsc@golang.org> wrote:\n>> maybe honor *clean and *nuke while you're there?\n>\n> It already does, in make.go.\n>\n> func domake(dir, pkg string, tree *build.Tree, isCmd bool) (err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0makefile, err := makeMakefile(dir, pkg, tree, isCmd)\n> \u00a0 \u00a0 \u00a0 \u00a0if err != nil {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return err\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0cmd := []string{\"bash\", \"gomake\", \"-f-\"}\n> \u00a0 \u00a0 \u00a0 \u00a0if *nuke {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0cmd = append(cmd, \"nuke\")\n> \u00a0 \u00a0 \u00a0 \u00a0} else if *clean {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0cmd = append(cmd, \"clean\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0cmd = append(cmd, \"install\")\n> \u00a0 \u00a0 \u00a0 \u00a0return run(dir, makefile, cmd...)\n> }\n\nThen that code is where this bug fix should go.\n",
			"disapproval": false,
			"date": "2011-12-06 22:18:27.776702",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-06 22:30:16.964603",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 7 December 2011 09:18, Russ Cox <rsc@golang.org> wrote:\n> Then that code is where this bug fix should go.\n\nGood call.\n",
			"disapproval": false,
			"date": "2011-12-06 22:31:09.533198",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=6afdfb8de40f ***\n\ngoinstall: honour -install=false flag when -make=true\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5448124",
			"disapproval": false,
			"date": "2011-12-06 22:41:28.332408",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-12-06 22:34:15.966581",
			"approval": true
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5448124: goinstall: honour -install=false flag when -make=true",
	"created": "2011-12-06 22:08:38.749327",
	"patchsets": [
		1,
		2003,
		2004
	],
	"modified": "2011-12-06 22:41:30.088081",
	"closed": true,
	"issue": 5448124
}