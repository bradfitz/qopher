{
	"description": "spec: skip carriage returns in raw literals\n\nThis change guarantees that whether the line ending convention\nwhen the source is created includes carriage returns is irrelevant\nto the value of the string. See issue 680.\n\nThe compilers do not yet implement this.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"r@google.com",
		"gri@golang.org",
		"rsc@golang.org",
		"iant@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-15 00:16:16.619642",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 15 December 2011 11:16,  <r@golang.org> wrote:\n> will address issue six hundred and eighty.\n\nIf you write this as \"issue 680\" then it will be a clickable link in\nthe code.google.com interface.\n",
			"disapproval": false,
			"date": "2011-12-15 00:20:50.550310",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Dec 14, 2011, at 4:20 PM, Andrew Gerrand wrote:\n\n> On 15 December 2011 11:16,  <r@golang.org> wrote:\n>> will address issue six hundred and eighty.\n> \n> If you write this as \"issue 680\" then it will be a clickable link in\n> the code.google.com interface.\n\ni deliberately avoided writing it because i don't know the rules for it being marked as resolved.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-12-15 00:23:14.705326",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@google.com",
				"gri@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-12-15 05:50:27.794991",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@google.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI\n\nhttp://codereview.appspot.com/5491043/diff/1/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5491043/diff/1/doc/go_spec.html#newcode458\ndoc/go_spec.html:458: are skipped, that is, not included in the raw string value.\nmaybe: s/skipped/discarded/ (stronger)",
			"disapproval": false,
			"date": "2011-12-15 00:29:00.859478",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@google.com",
				"gri@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2d9ac660f013 ***\n\nspec: skip carriage returns in raw literals\n\nThis change guarantees that whether the line ending convention\nwhen the source is created includes carriage returns is irrelevant\nto the value of the string. See issue 680.\n\nThe compilers do not yet implement this.\n\nR=golang-dev, adg, r, gri, rsc, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5491043",
			"disapproval": false,
			"date": "2011-12-15 05:51:37.117153",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-12-15 00:43:22.323376",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, r@google.com, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-15 00:39:57.334824",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 15 December 2011 11:23, Rob 'Commander' Pike <r@google.com> wrote:\n>\n> On Dec 14, 2011, at 4:20 PM, Andrew Gerrand wrote:\n>\n>> On 15 December 2011 11:16, \u00a0<r@golang.org> wrote:\n>>> will address issue six hundred and eighty.\n>>\n>> If you write this as \"issue 680\" then it will be a clickable link in\n>> the code.google.com interface.\n>\n> i deliberately avoided writing it because i don't know the rules for it being marked as resolved.\n\nhttp://code.google.com/p/support/wiki/IssueTracker#Integration_with_version_control\n\nThe issue tracker handles an easy-to-use \"short form\" syntax to set an\nissue's status to Fixed. This would be used when the source code\nchange you are committing completely fixes a defect or implements a\nrequested enhancement. The syntax is any one of the following:\n\n(Fixes issue NNN)\t Enclose command in parentheses\nFixes issue NNN.\t Full sentence in your log message description\nFixes issue NNN\t On a line by itself\n\nThe word Fixes can replaced with Closes or Resolves. The issue number\ncan have a leading pound-sign (#) or not.\n",
			"disapproval": false,
			"date": "2011-12-15 00:53:29.891635",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@google.com",
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, r@google.com, gri@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-15 04:12:23.438298",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I reworded it. PTAL\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-12-15 04:12:54.069528",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-12-15 02:52:02.030766",
			"approval": true
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5491043: spec: skip carriage returns in raw literals",
	"created": "2011-12-15 00:16:12.676723",
	"patchsets": [
		1,
		4001,
		8,
		9
	],
	"modified": "2011-12-15 18:37:53.175872",
	"closed": true,
	"issue": 5491043
}