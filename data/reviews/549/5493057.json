{
	"description": "go/printer, gofmt: fine tuning of line spacing\n\n- no empty lines inside empty structs and interfaces\n- top-level declarations are separated by a blank line if\n  a) they are of different kind (e.g. const vs type); or\n  b) there are documentation comments associated with a\n     declaration (this is new)\n- applied gofmt -w misc src\n\nThe actual changes are in go/printer/nodes.go:397-400 (empty structs/interfaces),\nand go/printer/printer.go:307-309 (extra line break). The remaining\nchanges are cleanups w/o changing the existing functionality.\n\nFixes issue  2570.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM++",
			"disapproval": false,
			"date": "2011-12-16 23:41:10.967755",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=0d0dc291de62 ***\n\ngo/printer, gofmt: fine tuning of line spacing\n\n- no empty lines inside empty structs and interfaces\n- top-level declarations are separated by a blank line if\n  a) they are of different kind (e.g. const vs type); or\n  b) there are documentation comments associated with a\n     declaration (this is new)\n- applied gofmt -w misc src\n\nThe actual changes are in go/printer/nodes.go:397-400 (empty structs/interfaces),\nand go/printer/printer.go:307-309 (extra line break). The remaining\nchanges are cleanups w/o changing the existing functionality.\n\nFixes issue  2570.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5493057",
			"disapproval": false,
			"date": "2011-12-16 23:43:10.349695",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Dec 16, 2011 at 16:53, Robert Griesemer <gri@golang.org> wrote:\n> everything is possible...\n> not sure it's desirable for structs and interfaces, though (since in\n> general we print empty interfaces as \"interface{}\")\n\nWe do when they are on one line.  Right now we print\n\ntype T interface {\n}\n\nas\n\ntype T interface {\n\n}\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-16 22:01:48.576139",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-16 21:34:12.146886",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n- gri\n\nOn Fri, Dec 16, 2011 at 2:01 PM, Russ Cox <rsc@golang.org> wrote:\n> On Fri, Dec 16, 2011 at 16:53, Robert Griesemer <gri@golang.org> wrote:\n>> everything is possible...\n>> not sure it's desirable for structs and interfaces, though (since in\n>> general we print empty interfaces as \"interface{}\")\n>\n> We do when they are on one line. \u00a0Right now we print\n>\n> type T interface {\n> }\n>\n> as\n>\n> type T interface {\n>\n> }\n>\n> Russ\n",
			"disapproval": false,
			"date": "2011-12-16 22:34:04.277540",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-16 23:37:09.867671",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The blank line before comments looks good.\nI am less sure about forcing empty structs to be one line.\nWe used to force small functions to one line and decided\nto change it to respect whether it was one line in the original.\nI would expect similar behavior here.\n\nThe bug I reported was that\n\ntype T struct {\n}\n\nturns into\n\ntype T struct {\n\n}\n\nthat is, it turns 2 lines into 3 lines.  This CL turns 2 lines into 1 line.\nI was hoping for 2 lines staying 2 lines.  Is that possible?\n\nAlso, maybe add some tests for empty interfaces too.\nRight now I am seeing the same 2->3 behavior if I s/struct/interface/\nabove.\n\nThanks.\nRuss\n",
			"disapproval": false,
			"date": "2011-12-16 21:38:19.718161",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Dec 16, 2011 at 1:38 PM, Russ Cox <rsc@golang.org> wrote:\n> The blank line before comments looks good.\n> I am less sure about forcing empty structs to be one line.\n> We used to force small functions to one line and decided\n> to change it to respect whether it was one line in the original.\n> I would expect similar behavior here.\n>\n> The bug I reported was that\n>\n> type T struct {\n> }\n>\n> turns into\n>\n> type T struct {\n>\n> }\n>\n> that is, it turns 2 lines into 3 lines. \u00a0This CL turns 2 lines into 1 line.\n> I was hoping for 2 lines staying 2 lines. \u00a0Is that possible?\n\neverything is possible...\nnot sure it's desirable for structs and interfaces, though (since in\ngeneral we print empty interfaces as \"interface{}\")\n\nI'll have a look\n>\n> Also, maybe add some tests for empty interfaces too.\n> Right now I am seeing the same 2->3 behavior if I s/struct/interface/\n> above.\n\ndone\n\n>\n> Thanks.\n> Russ\n",
			"disapproval": false,
			"date": "2011-12-16 21:53:12.607026",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5493057: go/printer, gofmt: fine tuning of line spacing",
	"created": "2011-12-16 01:36:00.239647",
	"patchsets": [
		1,
		2001,
		3001,
		11,
		4006,
		6001,
		4024,
		1007,
		28,
		7019,
		29,
		4057
	],
	"modified": "2011-12-16 23:43:11.352169",
	"closed": true,
	"issue": 5493057
}