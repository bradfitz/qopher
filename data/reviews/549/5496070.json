{
	"description": "encoding/binary: add more benchmarks\nAlso add a byte count to the varint benchmarks - this\nisn't accurate, of course, but it allows a rough comparison to\nthe other benchmarks.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5496070/diff/5001/src/pkg/encoding/binary/binary_test.go\nFile src/pkg/encoding/binary/binary_test.go (right):\n\nhttp://codereview.appspot.com/5496070/diff/5001/src/pkg/encoding/binary/binary_test.go#newcode174\nsrc/pkg/encoding/binary/binary_test.go:174: func BenchmarkReadArray(b *testing.B) {\nReadSlice?\nalso it's nice in the benchmark output to explain the test better, so I suggest\nBenchmarkReadSlice1000 or even BenchmarkReadSlice1000int32s.\n(i realize the other examples in this file don't self-identify as well)\n\nhttp://codereview.appspot.com/5496070/diff/5001/src/pkg/encoding/binary/binary_test.go#newcode203\nsrc/pkg/encoding/binary/binary_test.go:203: func BenchmarkReadInt(b *testing.B) {\ns/Int/Ints/ (at least) \nthe number it will print is not the time to read an int\n\nhttp://codereview.appspot.com/5496070/diff/5001/src/pkg/encoding/binary/binary_test.go#newcode234\nsrc/pkg/encoding/binary/binary_test.go:234: func BenchmarkWrite(b *testing.B) {\nthis is an odd test. not your fault, but it's even odder than read.\ndo we expect the overhead of an indirection to matter? if so, split it out. if not, make it the same complexity as Read. also call this WriteInts or whatever; align it with Read.",
			"disapproval": false,
			"date": "2011-12-19 19:13:40.705563",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-19 08:33:13.467055",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5496070/diff/5001/src/pkg/encoding/binary/binary_test.go\nFile src/pkg/encoding/binary/binary_test.go (right):\n\nhttp://codereview.appspot.com/5496070/diff/5001/src/pkg/encoding/binary/binary_test.go#newcode174\nsrc/pkg/encoding/binary/binary_test.go:174: func BenchmarkReadArray(b *testing.B) {\nOn 2011/12/19 19:13:40, r wrote:\n> ReadSlice?\n> also it's nice in the benchmark output to explain the test better, so I suggest\n> BenchmarkReadSlice1000 or even BenchmarkReadSlice1000int32s.\n> (i realize the other examples in this file don't self-identify as well)\n\nDone.\n\nhttp://codereview.appspot.com/5496070/diff/5001/src/pkg/encoding/binary/binary_test.go#newcode203\nsrc/pkg/encoding/binary/binary_test.go:203: func BenchmarkReadInt(b *testing.B) {\nOn 2011/12/19 19:13:40, r wrote:\n> s/Int/Ints/ (at least) \n> the number it will print is not the time to read an int\n\nDone.\n\nhttp://codereview.appspot.com/5496070/diff/5001/src/pkg/encoding/binary/binary_test.go#newcode234\nsrc/pkg/encoding/binary/binary_test.go:234: func BenchmarkWrite(b *testing.B) {\nOn 2011/12/19 19:13:40, r wrote:\n> this is an odd test. not your fault, but it's even odder than read.\n> do we expect the overhead of an indirection to matter? if so, split it out. if\n> not, make it the same complexity as Read. also call this WriteInts or whatever;\n> align it with Read.\n\nDone.",
			"disapproval": false,
			"date": "2011-12-20 10:50:44.309333",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as c5b714cc9df6 ***\n\nencoding/binary: add more benchmarks\nAlso add a byte count to the varint benchmarks - this\nisn't accurate, of course, but it allows a rough comparison to\nthe other benchmarks.\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5496070\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2011-12-20 17:25:51.309824",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5496070/diff/3004/src/pkg/encoding/binary/binary_test.go\nFile src/pkg/encoding/binary/binary_test.go (right):\n\nhttp://codereview.appspot.com/5496070/diff/3004/src/pkg/encoding/binary/binary_test.go#newcode198\nsrc/pkg/encoding/binary/binary_test.go:198: if !reflect.DeepEqual(s, t) {\ndo you want to stop the timer before this? or test it once beforehand?\n\nhttp://codereview.appspot.com/5496070/diff/3004/src/pkg/encoding/binary/binary_test.go#newcode229\nsrc/pkg/encoding/binary/binary_test.go:229: if !reflect.DeepEqual(ls, want) {\nditto.\n\nhttp://codereview.appspot.com/5496070/diff/3004/src/pkg/encoding/binary/binary_test.go#newcode251\nsrc/pkg/encoding/binary/binary_test.go:251: if !bytes.Equal(buf.Bytes(), big[:30]) {\nditto",
			"disapproval": false,
			"date": "2011-12-20 16:49:37.200933",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5496070/diff/3004/src/pkg/encoding/binary/binary_test.go\nFile src/pkg/encoding/binary/binary_test.go (right):\n\nhttp://codereview.appspot.com/5496070/diff/3004/src/pkg/encoding/binary/binary_test.go#newcode198\nsrc/pkg/encoding/binary/binary_test.go:198: if !reflect.DeepEqual(s, t) {\nOn 2011/12/20 16:49:37, r wrote:\n> do you want to stop the timer before this? or test it once beforehand?\n\nDone.\n\nhttp://codereview.appspot.com/5496070/diff/3004/src/pkg/encoding/binary/binary_test.go#newcode229\nsrc/pkg/encoding/binary/binary_test.go:229: if !reflect.DeepEqual(ls, want) {\nOn 2011/12/20 16:49:37, r wrote:\n> ditto.\n\nDone.\n\nhttp://codereview.appspot.com/5496070/diff/3004/src/pkg/encoding/binary/binary_test.go#newcode251\nsrc/pkg/encoding/binary/binary_test.go:251: if !bytes.Equal(buf.Bytes(), big[:30]) {\nOn 2011/12/20 16:49:37, r wrote:\n> ditto\n\nDone.",
			"disapproval": false,
			"date": "2011-12-20 17:13:47.520841",
			"approval": false
		}
	],
	"owner_email": "rogpeppe@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rog",
	"subject": "code review 5496070: encoding/binary: add more benchmarks",
	"created": "2011-12-19 08:19:25.543397",
	"patchsets": [
		1,
		2001,
		1004,
		5001,
		3004,
		8005
	],
	"modified": "2011-12-20 17:13:47.520841",
	"closed": false,
	"issue": 5496070
}