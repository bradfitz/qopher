{
	"description": "go.crypto/ssh: close channel feeding tcpListener.\n\nClose both on closing the listener, and on closing the\nconnection. Test the former case.",
	"cc": [
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11349043/diff/2001/ssh/test/forward_unix_test.go\nFile ssh/test/forward_unix_test.go (right):\n\nhttps://codereview.appspot.com/11349043/diff/2001/ssh/test/forward_unix_test.go#newcode153\nssh/test/forward_unix_test.go:153: // TODO(hanwen): test that closing the connection also\nthis is hard to test, since killing the server doesn't make the client read exit. \n\nHow about substituting a unix socket for the client connection instead? That would let us throw out all the code to simulate a net.Conn by using a real one instead.",
			"disapproval": false,
			"date": "2013-07-16 14:03:56.133340",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/16 14:03:56, hanwen wrote:\n> https://codereview.appspot.com/11349043/diff/2001/ssh/test/forward_unix_test.go\n> File ssh/test/forward_unix_test.go (right):\n> \n> https://codereview.appspot.com/11349043/diff/2001/ssh/test/forward_unix_test.go#newcode153\n> ssh/test/forward_unix_test.go:153: // TODO(hanwen): test that closing the\n> connection also\n> this is hard to test, since killing the server doesn't make the client read\n> exit. \n> \n> How about substituting a unix socket for the client connection instead? That\n> would let us throw out all the code to simulate a net.Conn by using a real one\n> instead.\n\nI think I decided not to do that. I don't remember the reason now, but I wouldn't be surprised if it turned out that sshd won't listen on a unix socket.",
			"disapproval": false,
			"date": "2013-07-16 14:06:49.360590",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You don't have to make sshd listen to the socket? You could use the\r\nsocket to create the 2 sides of a net.Conn, and then pass the fd of\r\nthe net.Conn as stdout/stdin to sshd\r\n\r\nOn Tue, Jul 16, 2013 at 4:06 PM,  <dave@cheney.net> wrote:\r\n> On 2013/07/16 14:03:56, hanwen wrote:\r\n>\r\n> https://codereview.appspot.com/11349043/diff/2001/ssh/test/forward_unix_test.go\r\n>>\r\n>> File ssh/test/forward_unix_test.go (right):\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.com/11349043/diff/2001/ssh/test/forward_unix_test.go#newcode153\r\n>>\r\n>> ssh/test/forward_unix_test.go:153: // TODO(hanwen): test that closing\r\n>\r\n> the\r\n>>\r\n>> connection also\r\n>> this is hard to test, since killing the server doesn't make the client\r\n>\r\n> read\r\n>>\r\n>> exit.\r\n>\r\n>\r\n>> How about substituting a unix socket for the client connection\r\n>\r\n> instead? That\r\n>>\r\n>> would let us throw out all the code to simulate a net.Conn by using a\r\n>\r\n> real one\r\n>>\r\n>> instead.\r\n>\r\n>\r\n> I think I decided not to do that. I don't remember the reason now, but I\r\n> wouldn't be surprised if it turned out that sshd won't listen on a unix\r\n> socket.\r\n>\r\n> https://codereview.appspot.com/11349043/\r\n\r\n\r\n\r\n-- \r\nHan-Wen Nienhuys\r\nGoogle Munich\r\nhanwen@google.com\r\n",
			"disapproval": false,
			"date": "2013-07-16 14:14:01.554480",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I mistakenly deleted the repo that held this change. If it LGTMs, I would be grateful if you could apply it directly. If not, let me know, and I'll try to resurrect it.\n\nhttps://codereview.appspot.com/11349043/diff/2001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/11349043/diff/2001/ssh/tcpip.go#newcode112\nssh/tcpip.go:112: close(f.c)\noops; the removal of return here is unintended.",
			"disapproval": false,
			"date": "2013-07-19 08:41:00.312540",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You can fix it by checking out again, setting up the code review extension then running hg clpatch.\r\n\r\nSorry I haven't had a chance to review it yet.\r\n\r\n\r\n\r\nOn 19/07/2013, at 18:41, hanwen@google.com wrote:\r\n\r\n> I mistakenly deleted the repo that held this change. If it LGTMs, I\r\n> would be grateful if you could apply it directly. If not, let me know,\r\n> and I'll try to resurrect it.\r\n> \r\n> \r\n> https://codereview.appspot.com/11349043/diff/2001/ssh/tcpip.go\r\n> File ssh/tcpip.go (right):\r\n> \r\n> https://codereview.appspot.com/11349043/diff/2001/ssh/tcpip.go#newcode112\r\n> ssh/tcpip.go:112: close(f.c)\r\n> oops; the removal of return here is unintended.\r\n> \r\n> https://codereview.appspot.com/11349043/\r\n",
			"disapproval": false,
			"date": "2013-07-19 08:48:05.835660",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11349043/diff/2001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/11349043/diff/2001/ssh/tcpip.go#newcode112\nssh/tcpip.go:112: close(f.c)\nOn 2013/07/19 08:41:00, hanwen wrote:\n> oops; the removal of return here is unintended.\n\nDone.",
			"disapproval": false,
			"date": "2013-07-20 11:27:34.609800",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thank you. Sorry for the delay.",
			"disapproval": false,
			"date": "2013-07-22 11:49:39.939270",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=6ad91f44b054&repo=crypto ***\n\ngo.crypto/ssh: close channel feeding tcpListener.\n\nClose both on closing the listener, and on closing the\nconnection. Test the former case.\n\nR=dave\nCC=golang-dev\nhttps://codereview.appspot.com/11349043\n\nCommitter: Dave Cheney <dave@cheney.net>\n\nhttps://codereview.appspot.com/11349043/diff/12001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/11349043/diff/12001/ssh/client.go#newcode214\nssh/client.go:214: c.forwardList.closeAll()\n// TODO, all these closes should probably be merged into one case.",
			"disapproval": false,
			"date": "2013-07-22 11:50:21.968270",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-07-24 20:20:09.214120",
			"approval": false
		}
	],
	"owner_email": "hanwen@google.com",
	"private": false,
	"base_url": "",
	"owner": "hanwen",
	"subject": "go.crypto/ssh: close channel feeding tcpListener.",
	"created": "2013-07-16 14:00:45.059020",
	"patchsets": [
		1,
		2001,
		12001
	],
	"modified": "2013-07-24 20:20:12.063180",
	"closed": true,
	"issue": 11349043
}