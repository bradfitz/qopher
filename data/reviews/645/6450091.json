{
	"description": "cmd/8g: spill more temporaries when running out of registers.\n\nFixes issue 3835.",
	"cc": [
		"golang-dev@googlegroups.com",
		"remy@archlinux.org"
	],
	"reviewers": [
		"rsc@golang.org",
		"nigeltao@golang.org"
	],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "2012/8/6  <nigeltao@golang.org>:\r\n/8g/cgen.c#newcode396\r\n> src/cmd/8g/cgen.c:396: if(nl->ullman >= regfreecount()) {\r\n> Do 5g/6g also have this problem (but with far more registers than 8g)?\r\n>\r\n\r\nYes, 6g is affected, I have opened issue 3907 to remember:\r\nhttp://code.google.com/p/go/issues/detail?id=3907\r\n",
			"disapproval": false,
			"date": "2012-08-06 08:37:57.788990",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6450091/diff/6002/src/cmd/8g/cgen.c\nFile src/cmd/8g/cgen.c (right):\n\nhttp://codereview.appspot.com/6450091/diff/6002/src/cmd/8g/cgen.c#newcode396\nsrc/cmd/8g/cgen.c:396: if(nl->ullman >= regfreecount()) {\nDo 5g/6g also have this problem (but with far more registers than 8g)?\n\nhttp://www.vitanuova.com/inferno/papers/compiler.html says that \"[Sethi-Ullman complexity] is roughly the number of registers required to compile the tree on an ideal machine.\" First: should the \">=\" be a \">\"? Second: that quote says \"roughly\". Do you know if it's possible for the ullman number to be low but still run out of registers?\n\nhttp://codereview.appspot.com/6450091/diff/6002/src/cmd/8g/gg.h\nFile src/cmd/8g/gg.h (right):\n\nhttp://codereview.appspot.com/6450091/diff/6002/src/cmd/8g/gg.h#newcode138\nsrc/cmd/8g/gg.h:138: int   regfreecount(void);\nIndentation is off.\n\nhttp://codereview.appspot.com/6450091/diff/6002/src/cmd/8g/gsubr.c\nFile src/cmd/8g/gsubr.c (right):\n\nhttp://codereview.appspot.com/6450091/diff/6002/src/cmd/8g/gsubr.c#newcode812\nsrc/cmd/8g/gsubr.c:812: count = 0;\nIndentation.\n\nhttp://codereview.appspot.com/6450091/diff/6002/test/fixedbugs/bug447.go\nFile test/fixedbugs/bug447.go (right):\n\nhttp://codereview.appspot.com/6450091/diff/6002/test/fixedbugs/bug447.go#newcode8\ntest/fixedbugs/bug447.go:8: // none is available.\ns/is/are/",
			"disapproval": false,
			"date": "2012-08-06 04:47:11.666990",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-08-04 21:56:08.889650",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-04 22:01:29.426510",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Nice.\n\nhttp://codereview.appspot.com/6450091/diff/6002/src/cmd/8g/cgen.c\nFile src/cmd/8g/cgen.c (right):\n\nhttp://codereview.appspot.com/6450091/diff/6002/src/cmd/8g/cgen.c#newcode396\nsrc/cmd/8g/cgen.c:396: if(nl->ullman >= regfreecount()) {\nThe other tests are ullman < regfreecount(). Can you make all three use the same comparison operator?\n\nhttp://codereview.appspot.com/6450091/diff/6002/src/cmd/8g/cgen.c#newcode396\nsrc/cmd/8g/cgen.c:396: if(nl->ullman >= regfreecount()) {\nI am a little worried about this. The emphasis is on \"roughly\". It may be off by a few as long as a comparison of two ullman numbers is supposed to give the right result. In practice the number of free registers on a 386 is so small that I expect the possible off-by-ones to be significant here.\n\nThis is probably okay since I think if anything the ullman numbers overestimate rather than underestimate. And it does fix a bug so I'm willing to go along with it. Do you have any sense of how often this happens? Maybe put a warn(\"spilling registers\") in the tempname cases and build the tree and just see how many warnings get printed. I just want to make sure it's not happening way more than we think it should.",
			"disapproval": false,
			"date": "2012-09-11 02:56:24.495040",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-10-21 18:49:59.812090",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6450091: cmd/8g: spill more temporaries when running out of regi...",
	"created": "2012-08-04 21:55:48.078520",
	"patchsets": [
		1,
		1002,
		4001,
		6002
	],
	"modified": "2012-10-21 18:50:04.260120",
	"closed": true,
	"issue": 6450091
}