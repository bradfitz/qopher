{
	"description": "exp/html: tokenize attributes of end tags\n\nIf an end tag has an attribute that is a quoted string containing '>',\nthe tokenizer would end the tag prematurely. Now it reads the attributes\non end tags just as it does on start tags, but the high-level interface\nstill doesn't return them, because their presence is a parse error.\n\nPass 1 additional test.",
	"cc": [
		"nigeltao@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6457060/diff/5001/src/pkg/exp/html/parse.go\nFile src/pkg/exp/html/parse.go (right):\n\nhttp://codereview.appspot.com/6457060/diff/5001/src/pkg/exp/html/parse.go#newcode1031\nsrc/pkg/exp/html/parse.go:1031: p.tok.Attr = nil\nI don't see the br end tag receiving special treatment in either the spec or html5lib. I think that passing the `</br foo=\"bar\">` test is the responsibility of the tokenizer, not the parser.\n\nhttp://codereview.appspot.com/6457060/diff/5001/src/pkg/exp/html/token.go\nFile src/pkg/exp/html/token.go (right):\n\nhttp://codereview.appspot.com/6457060/diff/5001/src/pkg/exp/html/token.go#newcode857\nsrc/pkg/exp/html/token.go:857: var attr []Attribute\nWhile you're here, you can delete this variable, and say\nt.Attr = append(t.Attr, etc)\na few lines below.\n\nhttp://codereview.appspot.com/6457060/diff/5001/src/pkg/exp/html/token.go#newcode859\nsrc/pkg/exp/html/token.go:859: for moreAttr {\nIf you need to pass the </br foo=\"bar\"> test, then here might be the right place to do it. Can you surround this for loop with an `if z.tt != EndTagToken` and add a comment that end tags have no attributes even if the HTML looks like `</br foo=\"bar\">`?",
			"disapproval": false,
			"date": "2012-07-31 04:48:24.964750",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=7acb0623efe8 ***\n\nexp/html: tokenize attributes of end tags\n\nIf an end tag has an attribute that is a quoted string containing '>',\nthe tokenizer would end the tag prematurely. Now it reads the attributes\non end tags just as it does on start tags, but the high-level interface\nstill doesn't return them, because their presence is a parse error.\n\nPass 1 additional test.\n\nR=nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/6457060\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2012-07-31 23:35:08.103830",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nhttp://codereview.appspot.com/6457060/diff/5001/src/pkg/exp/html/parse.go\nFile src/pkg/exp/html/parse.go (right):\n\nhttp://codereview.appspot.com/6457060/diff/5001/src/pkg/exp/html/parse.go#newcode1031\nsrc/pkg/exp/html/parse.go:1031: p.tok.Attr = nil\nIt's not that </br> gets special treatment, but that here we're converting the end tag into a start tag. We could use parseImpliedToken and then ignore the end tag instead, but this is simpler.\n\nHowever, this won't be necessary if we don't let the tokenizer return attributes on end tags.\n\nhttp://codereview.appspot.com/6457060/diff/5001/src/pkg/exp/html/token.go\nFile src/pkg/exp/html/token.go (right):\n\nhttp://codereview.appspot.com/6457060/diff/5001/src/pkg/exp/html/token.go#newcode857\nsrc/pkg/exp/html/token.go:857: var attr []Attribute\nOn 2012/07/31 04:48:25, nigeltao wrote:\n> While you're here, you can delete this variable, and say\n> t.Attr = append(t.Attr, etc)\n> a few lines below.\n\nDone.\n\nhttp://codereview.appspot.com/6457060/diff/5001/src/pkg/exp/html/token.go#newcode859\nsrc/pkg/exp/html/token.go:859: for moreAttr {\nOn 2012/07/31 04:48:25, nigeltao wrote:\n> If you need to pass the </br foo=\"bar\"> test, then here might be the right place\n> to do it. Can you surround this for loop with an `if z.tt != EndTagToken` and\n> add a comment that end tags have no attributes even if the HTML looks like `</br\n> foo=\"bar\">`?\n\nDone.",
			"disapproval": false,
			"date": "2012-07-31 16:07:18.131870",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 31 July 2012 14:48,  <nigeltao@golang.org> wrote:\r\n> If you need to pass the </br foo=\"bar\"> test, then here might be the\r\n> right place to do it. Can you surround this for loop with an `if z.tt !=\r\n> EndTagToken` and add a comment that end tags have no attributes even if\r\n> the HTML looks like `</br foo=\"bar\">`?\r\n\r\nOn second thoughts, it's incorrect that the high-level and low-level\r\ntokenizer behave differently. http://codereview.appspot.com/6453071\r\nmakes them consistent. WDYT?\r\n",
			"disapproval": false,
			"date": "2012-08-01 05:06:06.897250",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-07-31 02:51:40.870780",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-07-31 23:31:46.814160",
			"approval": true
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Jul 31, 2012, at 10:06 PM, Nigel Tao wrote:\r\n> On second thoughts, it's incorrect that the high-level and low-level\r\n> tokenizer behave differently. http://codereview.appspot.com/6453071\r\n> makes them consistent. WDYT?\r\n\r\nI wondered about that. Let's keep them consistent; otherwise we'll need to document the difference.",
			"disapproval": false,
			"date": "2012-08-01 14:29:30.997500",
			"approval": false
		}
	],
	"owner_email": "andybalholm@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "andybalholm",
	"subject": "code review 6457060: exp/html: tokenize attributes of end tags",
	"created": "2012-07-31 02:51:17.239700",
	"patchsets": [
		1,
		2001,
		5001,
		7002,
		10001
	],
	"modified": "2012-07-31 23:36:40.408830",
	"closed": true,
	"issue": 6457060
}