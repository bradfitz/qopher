{
	"description": "misc/dashboard/codereview: add LastUpdate field to CL\n\nTo be filled in by a later CL. I deployed a test version to\nApp Engine to work on setting the values, so there are\na few records that have this field set already.\n\nThat field is breaking the live version, so I have pushed\na new copy with this 1-line change to the live version\n\nI assumed that appengine/datastore was like every other\nmarshaling and unmarshaling package we have in Go\n(for example, encoding/gob, encoding/json, encoding/xml,\nand protobuf) and that if it loaded an unknown field it would\njust ignore it. Apparently not. Sorry.",
	"cc": [
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dsymonds, dsymonds@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-07-30 14:13:49.380200",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=441d5f62e9ff ***\n\nmisc/dashboard/codereview: add LastUpdate field to CL\n\nTo be filled in by a later CL. I deployed a test version to\nApp Engine to work on setting the values, so there are\na few records that have this field set already.\n\nThat field is breaking the live version, so I have pushed\na new copy with this 1-line change to the live version\n\nI assumed that appengine/datastore was like every other\nmarshaling and unmarshaling package we have in Go\n(for example, encoding/gob, encoding/json, encoding/xml,\nand protobuf) and that if it loaded an unknown field it would\njust ignore it. Apparently not. Sorry.\n\nR=dsymonds\nTBR=dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/6454064",
			"disapproval": false,
			"date": "2012-07-30 14:14:01.308600",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nI wish I had seen this before you deployed, as \"LastUpdate\" sounds\r\nlike a timestamp, not the LastReviewMessage or something that it is\r\nactually used as. It's not worth changing now, but please add a\r\nclarifying comment to it. (I'll mention this on the other CL.)\r\n\r\nC'est la vie.\r\n",
			"disapproval": false,
			"date": "2012-07-30 22:51:25.086380",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I wish I had seen this before you deployed, as \"LastUpdate\" sounds\r\n> like a timestamp, not the LastReviewMessage or something that it is\r\n> actually used as. It's not worth changing now, but please add a\r\n> clarifying comment to it. (I'll mention this on the other CL.)\r\n\r\nIf appengine/data behaved like all the other Go serialization\r\npackages, we could just rename the field and ignore the few records\r\nwith a LastUpdate. Why doesn't it behave like that?\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-07-30 22:54:27.486950",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jul 31, 2012 at 9:01 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> But when you rewrite it, you wouldn't rewrite that field (since you\r\n> don't know about it) so what's the harm?\r\n\r\nThe unit of datastore storage is the entity, not the field, so that\r\ndata would be lost.\r\n",
			"disapproval": false,
			"date": "2012-07-30 23:10:39.705630",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jul 31, 2012 at 8:54 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> If appengine/data behaved like all the other Go serialization\r\n> packages, we could just rename the field and ignore the few records\r\n> with a LastUpdate. Why doesn't it behave like that?\r\n\r\nThat was a design decision made ages ago, but I still think it's the\r\nright one. The main difference is that datastore entities are commonly\r\nread, modified and rewritten. If you got an unknown field and just\r\naccepted it by default, you would risk losing data. Protocol buffers\r\nhave XXX_unrecognized for this reason. json/xml/whatever don't, which\r\nconsequently makes them unsafe for read-modify-write, but that's not\r\nhow they are commonly used.\r\n\r\n\r\nDave.\r\n",
			"disapproval": false,
			"date": "2012-07-30 22:59:19.714690",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> That was a design decision made ages ago, but I still think it's the\r\n> right one. The main difference is that datastore entities are commonly\r\n> read, modified and rewritten. If you got an unknown field and just\r\n> accepted it by default, you would risk losing data. Protocol buffers\r\n> have XXX_unrecognized for this reason. json/xml/whatever don't, which\r\n> consequently makes them unsafe for read-modify-write, but that's not\r\n> how they are commonly used.\r\n\r\nBut when you rewrite it, you wouldn't rewrite that field (since you\r\ndon't know about it) so what's the harm?\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-07-30 23:01:54.410200",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6454064: misc/dashboard/codereview: add LastUpdate field to CL",
	"created": "2012-07-30 14:12:48.829150",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2012-07-30 14:14:02.987430",
	"closed": true,
	"issue": 6454064
}