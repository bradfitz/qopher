{
	"description": "cmd/go: skipping relative paths on go test -i ./...\n\nFixes issue 3896.",
	"cc": [
		"rsc@golang.org",
		"rogpeppe@gmail.com",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nAbout path/filepath having a IsRelativePath, I don't think this function would solve the problem. `launchpad.net/gocheck`, for example, is a relative path in the file system, but an absolute import path in Go.\n\nhttp://codereview.appspot.com/6457075/diff/11001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttp://codereview.appspot.com/6457075/diff/11001/src/cmd/go/test.go#newcode280\nsrc/cmd/go/test.go:280: if path == \".\" || path == \"..\" || strings.HasPrefix(path, \"./\") || strings.HasPrefix(path, \"../\") {\nOn 2012/08/03 04:11:35, r wrote:\n> make this test a function. it's ugly like this. i'd call it isRelativeImport.\n> i'm a little surprised path/filepath doesn't already have something to do this\n> and maybe it should, but not now. making it a separate function here will make\n> it easier to catch later.\n> \n> if isRelativeImport(path) {\n>   all = append(all, path)\n> }\n\nDone.",
			"disapproval": false,
			"date": "2012-08-03 12:26:01.409300",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/6457075/diff/3002/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttp://codereview.appspot.com/6457075/diff/3002/src/cmd/go/test.go#newcode206\nsrc/cmd/go/test.go:206: func isRelativeImport(path string) bool {\nOn 2012/08/03 19:47:22, rsc wrote:\n> Can delete this and use build.IsLocalImport.\n\nDone.",
			"disapproval": false,
			"date": "2012-08-04 02:31:21.021170",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6457075/diff/3002/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttp://codereview.appspot.com/6457075/diff/3002/src/cmd/go/test.go#newcode206\nsrc/cmd/go/test.go:206: func isRelativeImport(path string) bool {\nCan delete this and use build.IsLocalImport.",
			"disapproval": false,
			"date": "2012-08-03 19:47:22.086470",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6457075/diff/11001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttp://codereview.appspot.com/6457075/diff/11001/src/cmd/go/test.go#newcode280\nsrc/cmd/go/test.go:280: if path == \".\" || path == \"..\" || strings.HasPrefix(path, \"./\") || strings.HasPrefix(path, \"../\") {\nmake this test a function. it's ugly like this. i'd call it isRelativeImport.\ni'm a little surprised path/filepath doesn't already have something to do this and maybe it should, but not now. making it a separate function here will make it easier to catch later.\n\nif isRelativeImport(path) {\n  all = append(all, path)\n}",
			"disapproval": false,
			"date": "2012-08-03 04:11:34.916690",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, rogpeppe@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-08-02 23:59:41.636630",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6457075/diff/7001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttp://codereview.appspot.com/6457075/diff/7001/src/cmd/go/test.go#newcode280\nsrc/cmd/go/test.go:280: if !strings.HasPrefix(path, \".\") {\nIt's a small point but a path like \".something/foo\" shouldn't be rejected here.",
			"disapproval": false,
			"date": "2012-08-03 00:01:41.362930",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/03 00:01:41, r wrote:\n> http://codereview.appspot.com/6457075/diff/7001/src/cmd/go/test.go\n> File src/cmd/go/test.go (right):\n> \n> http://codereview.appspot.com/6457075/diff/7001/src/cmd/go/test.go#newcode280\n> src/cmd/go/test.go:280: if !strings.HasPrefix(path, \".\") {\n> It's a small point but a path like \".something/foo\" shouldn't be rejected here.\n\nHmm, I see. May I check these cases below?\n\n\".\" and \"..\" (exact values)\n\"./\" and \"../\" (prefixes)\n\nDo you see any other restriction?",
			"disapproval": false,
			"date": "2012-08-03 00:11:52.635180",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please take another look.\n\nI was not sure if I should break that condition in multiple lines.\n\nhttp://codereview.appspot.com/6457075/diff/7001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttp://codereview.appspot.com/6457075/diff/7001/src/cmd/go/test.go#newcode280\nsrc/cmd/go/test.go:280: if !strings.HasPrefix(path, \".\") {\nOn 2012/08/03 00:01:41, r wrote:\n> It's a small point but a path like \".something/foo\" shouldn't be rejected here.\n\nDone.",
			"disapproval": false,
			"date": "2012-08-03 00:24:16.714290",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?\r\n",
			"disapproval": false,
			"date": "2012-08-14 16:36:27.867740",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "By \"yes\" I mean, that's all you need to check.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-08-03 00:13:12.246530",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "To do what the CL claims it's doing, yes.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-08-03 00:12:55.748290",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2012-08-06 21:05:22.438370",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-08-15 14:25:56.663560",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"franciscossouza@gmail.com",
				"rsc@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=88b5e30d3bd5 ***\n\ncmd/go: skipping relative paths on go test -i ./...\n\nFixes issue 3896.\n\nR=rsc, rogpeppe, r\nCC=golang-dev\nhttp://codereview.appspot.com/6457075\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2012-08-15 14:33:04.367650",
			"approval": false
		}
	],
	"owner_email": "franciscossouza@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "fss",
	"subject": "code review 6457075: cmd/go: skipping relative paths on go test -i ./...",
	"created": "2012-08-02 23:52:03.072280",
	"patchsets": [
		1,
		2001,
		5001,
		7001,
		6004,
		11001,
		3002,
		8005
	],
	"modified": "2012-08-15 14:37:45.002640",
	"closed": true,
	"issue": 6457075
}