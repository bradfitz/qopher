{
	"description": "runtime: add vdso support for linux/amd64. Fixes issue 1933.",
	"cc": [
		"iant@golang.org",
		"krasin@google.com",
		"iant@google.com",
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"nigeltao@golang.org",
		"r@golang.org",
		"fullung@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"imkrasin@gmail.com"
	],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c#newcode131\nsrc/pkg/runtime/vdso_linux_amd64.c:131: static struct vdso_info\nI don't think this struct needs a name.\n\nIt would be nice if we didn't have to make this static, but perhaps there is not enough stack space to do otherwise.\n\nhttp://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c#newcode168\nsrc/pkg/runtime/vdso_linux_amd64.c:168: static symbol_key* cur_sym;\nAs long as we have the vdso_info static struct, it seems to me we may as well put all the static variables in there.  But I'm not sure we need cur_sym at all.\n\nhttp://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c#newcode347\nsrc/pkg/runtime/vdso_linux_amd64.c:347: cur_sym = &sym_keys[VDSO_TIME_IND];\nThis isn't quite what I was expecting.  What I was thinking is: walk through the symbol table once.  For each symbol, check if we care about it.  If we do, store the value.\n\nIf you do that, I think you can drop the found_ver_ind static array.  Just cache the current version, and update if the version index changes (which will never happen with the current VDSO).",
			"disapproval": false,
			"date": "2012-07-30 17:32:49.123950",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "(Then the handler doesn't have to be textflag 7.)",
			"disapproval": false,
			"date": "2012-08-03 19:44:45.614050",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please, take another look.\n\nhttp://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c#newcode347\nsrc/pkg/runtime/vdso_linux_amd64.c:347: cur_sym = &sym_keys[VDSO_TIME_IND];\nOn 2012/07/30 19:49:21, iant wrote:\n> On 2012/07/30 18:28:37, krasin wrote:\n> > On 2012/07/30 17:32:49, iant wrote:\n> > > This isn't quite what I was expecting.  What I was thinking is: walk through\n> > the\n> > > symbol table once.  For each symbol, check if we care about it.  If we do,\n> > store\n> > > the value.\n> > > \n> > > If you do that, I think you can drop the found_ver_ind static array.  Just\n> > cache\n> > > the current version, and update if the version index changes (which will\n> never\n> > > happen with the current VDSO).\n> > we do not have enough stack for that. I have introduced this complexity with\n> > found_ver_ind to save the stack. Currently, I literally use all the available\n> > stack.\n> > \n> > I am all for killing this ugliness, but based on our previous discussion, we\n> > don't have a way to get more stack.\n> \n> \n> Well, forget about found_ver_ind.\n> \n> Still, you should be able to walk the symbol table once.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/5013/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/5013/src/pkg/runtime/vdso_linux_amd64.c#newcode111\nsrc/pkg/runtime/vdso_linux_amd64.c:111: Elf64_Xword d_val;  /* Integer value */\nOn 2012/08/06 01:09:00, nigeltao wrote:\n> Indent?\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/5013/src/pkg/runtime/vdso_linux_amd64.c#newcode199\nsrc/pkg/runtime/vdso_linux_amd64.c:199: {\nOn 2012/08/06 01:09:00, nigeltao wrote:\n> Move the { to the end of the previous line.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/5013/src/pkg/runtime/vdso_linux_amd64.c#newcode325\nsrc/pkg/runtime/vdso_linux_amd64.c:325: {\nOn 2012/08/06 01:09:00, nigeltao wrote:\n> Ditto.\n\nDone.",
			"disapproval": false,
			"date": "2012-08-08 21:46:13.096650",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for working on this.  Some more comments.\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c#newcode165\nsrc/pkg/runtime/vdso_linux_amd64.c:165: { (byte*)\"__vdso_time\", 0xa33c485 },\nThese are the only symbols we care about.  I don't see why we need the hash code.  I just replace that with a pointer to the variable we want to set.  Then just fill in that value when we find the symbol.\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c#newcode313\nsrc/pkg/runtime/vdso_linux_amd64.c:313: uint32 name_hash = elf_hash(vdso_info.symstrings + sym->st_name);\nYou are computing the hash of the symbol in order to see if we should compare the name.  Don't bother.  Just compare the name.  Comparing the names is probably faster than computing the hash anyhow.\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c#newcode319\nsrc/pkg/runtime/vdso_linux_amd64.c:319: if (runtime\u00b7strcmp(sym_key->name, vdso_info.symstrings + sym->st_name))\nThis is clearer if you use an explicit != 0.\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c#newcode329\nsrc/pkg/runtime/vdso_linux_amd64.c:329: hash_sym_ptr[name_hash & HASH_SYM_MASK] = (void *)(vdso_info.load_offset + sym->st_value);\nIf you store the address of the variable in sym_keys, and then set that variable here, you can remove hash_sym_ptr.\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c#newcode386\nsrc/pkg/runtime/vdso_linux_amd64.c:386: vdso_info.cur_ver = &linux26;\nThis indirection seems unnecessary.",
			"disapproval": false,
			"date": "2012-08-08 22:10:50.578930",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c#newcode165\nsrc/pkg/runtime/vdso_linux_amd64.c:165: { (byte*)\"__vdso_time\", 0xa33c485 },\nOn 2012/08/08 22:10:50, iant wrote:\n> These are the only symbols we care about.  I don't see why we need the hash\n> code.  I just replace that with a pointer to the variable we want to set.  Then\n> just fill in that value when we find the symbol.\n\nThis hash code is used in hash_sym and is useful to locate a symbol while iterating through vdso symbol table.\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c#newcode313\nsrc/pkg/runtime/vdso_linux_amd64.c:313: uint32 name_hash = elf_hash(vdso_info.symstrings + sym->st_name);\nOn 2012/08/08 22:10:50, iant wrote:\n> You are computing the hash of the symbol in order to see if we should compare\n> the name.  Don't bother.  Just compare the name.  Comparing the names is\n> probably faster than computing the hash anyhow.\n\nI need to compute the hash to locate sym_key which is used in runtime.strcmp(sym_key->name, ...).\n\nOnce the hash is computed, it's faster to check it than to perform strcmp.\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c#newcode319\nsrc/pkg/runtime/vdso_linux_amd64.c:319: if (runtime\u00b7strcmp(sym_key->name, vdso_info.symstrings + sym->st_name))\nOn 2012/08/08 22:10:50, iant wrote:\n> This is clearer if you use an explicit != 0.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c#newcode329\nsrc/pkg/runtime/vdso_linux_amd64.c:329: hash_sym_ptr[name_hash & HASH_SYM_MASK] = (void *)(vdso_info.load_offset + sym->st_value);\nOn 2012/08/08 22:10:50, iant wrote:\n> If you store the address of the variable in sym_keys, and then set that variable\n> here, you can remove hash_sym_ptr.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/12003/src/pkg/runtime/vdso_linux_amd64.c#newcode386\nsrc/pkg/runtime/vdso_linux_amd64.c:386: vdso_info.cur_ver = &linux26;\nOn 2012/08/08 22:10:50, iant wrote:\n> This indirection seems unnecessary.\nDone.\n\nThere's a good chance that multiple symbol versions will be provided by VDSO at some point (in a year or two). In this case, someone will have to reintroduce this indirection and don't forget about the stack limit.",
			"disapproval": false,
			"date": "2012-08-09 00:43:27.886140",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looking very close.\n\nHave you signed the copyright license agreement mentioned at the bottom of http://golang.org/doc/contribute.html ?\n\nhttp://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c#newcode316\nsrc/pkg/runtime/vdso_linux_amd64.c:316: vdso_init_from_sysinfo_ehdr((Elf64_Ehdr*)elf_auxv[i].a_un.a_val);\nWill it work to make vdso_info a local variable of this function, and pass the address go vdso_init_from_sysinfo_ehdr and vdso_parse_symbols?\n\nhttp://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c#newcode325\nsrc/pkg/runtime/vdso_linux_amd64.c:325: static void linux_sysargs(int32 argc, uint8** argv) {\nWhat is this intermediate function for?",
			"disapproval": false,
			"date": "2012-08-10 23:05:06.081820",
			"approval": false
		},
		{
			"sender": "krasin@google.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/03 19:44:45, rsc wrote:\n> (Then the handler doesn't have to be textflag 7.)\n\nThanks, Russ. I will try to do so.",
			"disapproval": false,
			"date": "2012-08-03 19:48:01.611120",
			"approval": false
		},
		{
			"sender": "krasin@google.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/10 23:05:06, iant wrote:\n> Looking very close.\n> \n> Have you signed the copyright license agreement mentioned at the bottom of\n> http://golang.org/doc/contribute.html ?\nIan,\n\nI am sorry for some sort of confusion, because I post comments from different emails: krasin@google.com / krasin@golang.org / imkrasin@gmail.com\n\nAt the same time, since my code is based on https://github.com/torvalds/linux/blob/v3.5/Documentation/vDSO/parse_vdso.c#L2 written by Andrew Lutomirski, we might want to ask him to sign the agreement or (alternatively) I can remove the rest of the code from parse_vdso, because it was almost completely rewritten.\n\n> \n> http://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c\n> File src/pkg/runtime/vdso_linux_amd64.c (right):\n> \n> http://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c#newcode316\n> src/pkg/runtime/vdso_linux_amd64.c:316:\n> vdso_init_from_sysinfo_ehdr((Elf64_Ehdr*)elf_auxv[i].a_un.a_val);\n> Will it work to make vdso_info a local variable of this function, and pass the\n> address go vdso_init_from_sysinfo_ehdr and vdso_parse_symbols?\n> \n> http://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c#newcode325\n> src/pkg/runtime/vdso_linux_amd64.c:325: static void linux_sysargs(int32 argc,\n> uint8** argv) {\n> What is this intermediate function for?",
			"disapproval": false,
			"date": "2012-08-11 00:01:16.329970",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/07/26 18:09:46, krasin wrote:\n> I do set #pragma texflag 7, and I see the following compiler error (on slightly\n> updated version of the code):\n> \n> rt0_amd64_linux: nosplit stack overflow\n> \t120\tassumed on entry to _rt0_amd64_linux\nthis is checked by 6l, which makes sure non-split stack don't use more memory\nthan reserved for (we reserve some stack in each stack segment for these\nnosplit stack functions).\n\nmaybe the limit is too low for 64-bit architectures, but from former experience,\nwe tend not to increase the limit (but to workaround that).\n\nI think a better way would be, in the rt0 code, only backup the corresponding\nauxv for latter use, and then after we have initialized the split stack mechanism,\ndo the actual initialization (perhaps when we first need to look up a symbol).\n\nps: one easy way to fool the linker is to invoke function via function pointers.",
			"disapproval": false,
			"date": "2012-07-27 00:34:39.664550",
			"approval": false
		},
		{
			"sender": "krasin@google.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c#newcode131\nsrc/pkg/runtime/vdso_linux_amd64.c:131: static struct vdso_info\nOn 2012/07/30 17:32:49, iant wrote:\n> I don't think this struct needs a name.\n> \n> It would be nice if we didn't have to make this static, but perhaps there is not\n> enough stack space to do otherwise.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c#newcode168\nsrc/pkg/runtime/vdso_linux_amd64.c:168: static symbol_key* cur_sym;\nOn 2012/07/30 17:32:49, iant wrote:\n> As long as we have the vdso_info static struct, it seems to me we may as well\n> put all the static variables in there.  But I'm not sure we need cur_sym at all.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c#newcode347\nsrc/pkg/runtime/vdso_linux_amd64.c:347: cur_sym = &sym_keys[VDSO_TIME_IND];\nOn 2012/07/30 17:32:49, iant wrote:\n> This isn't quite what I was expecting.  What I was thinking is: walk through the\n> symbol table once.  For each symbol, check if we care about it.  If we do, store\n> the value.\n> \n> If you do that, I think you can drop the found_ver_ind static array.  Just cache\n> the current version, and update if the version index changes (which will never\n> happen with the current VDSO).\nwe do not have enough stack for that. I have introduced this complexity with found_ver_ind to save the stack. Currently, I literally use all the available stack.\n\nI am all for killing this ugliness, but based on our previous discussion, we don't have a way to get more stack.",
			"disapproval": false,
			"date": "2012-07-30 18:28:37.093250",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c#newcode5\nsrc/pkg/runtime/vdso_linux_amd64.c:5: * This code is meant to be linked in to various programs that run on Linux.\nIf you want to submit this to the Go repository, it needs to have the same three-line license that all the other files have.  If this is somebody else's code, then they need to sign the copyright disclaimer, or it needs to be rewritten.\n\nhttp://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c#newcode245\nsrc/pkg/runtime/vdso_linux_amd64.c:245: vdso_info.symstrings = 0;\nThese values will all be zero anyhow.\n\nhttp://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c#newcode290\nsrc/pkg/runtime/vdso_linux_amd64.c:290: /* That's all we need. */\nWe don't need or want to support arbitrary symbol lookups.  It would be perfectly reasonable to look up all the symbols we expect to get from the VDSO right here.  That may only be gettimeofday.",
			"disapproval": false,
			"date": "2012-07-26 16:48:32.887550",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c#newcode290\nsrc/pkg/runtime/vdso_linux_amd64.c:290: /* That's all we need. */\n> Do I understand correctly that there's no way to increase the stack size at this\n> early stage?\n\nAt this early stage--before the program has really started--there is plenty of stack space, provided by the kernel.  The limits on stack space only arise when we start making goroutines.  Use #pragma textflag 7 to tell the function not to worry about stack space.",
			"disapproval": false,
			"date": "2012-07-26 17:32:49.511920",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Aug 10, 2012 at 5:01 PM,  <krasin@google.com> wrote:\r\n> On 2012/08/10 23:05:06, iant wrote:\r\n>>\r\n>> Looking very close.\r\n>\r\n>\r\n>> Have you signed the copyright license agreement mentioned at the\r\n>\r\n> bottom of\r\n>>\r\n>> http://golang.org/doc/contribute.html ?\r\n>\r\n> Ian,\r\n>\r\n> I am sorry for some sort of confusion, because I post comments from\r\n> different emails: krasin@google.com / krasin@golang.org /\r\n> imkrasin@gmail.com\r\n\r\nWhoops, sorry about that, fooled by the 'm'.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2012-08-11 00:11:26.023530",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks for the patience and hard work.\n\nI would like rsc to sign off on this when he has time.",
			"disapproval": false,
			"date": "2012-08-15 23:14:50.581740",
			"approval": true
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c#newcode290\nsrc/pkg/runtime/vdso_linux_amd64.c:290: /* That's all we need. */\nOn 2012/07/26 16:48:33, iant wrote:\n> We don't need or want to support arbitrary symbol lookups.  It would be\n> perfectly reasonable to look up all the symbols we expect to get from the VDSO\n> right here.  That may only be gettimeofday.\nIt's not actually too different in terms of a stack deficit.\nDo I understand correctly that there's no way to increase the stack size at this early stage?",
			"disapproval": false,
			"date": "2012-07-26 17:22:50.298870",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454046/diff/12005/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/12005/src/pkg/runtime/vdso_linux_amd64.c#newcode329\nsrc/pkg/runtime/vdso_linux_amd64.c:329: if (ver > MAX_VER_IND || found_ver_ind[ver] != ver_ind_marker)\nWe only care about one version.  I think you can drop the found_ver_ind array and just remember the one version we care about.",
			"disapproval": false,
			"date": "2012-08-09 00:56:59.982400",
			"approval": false
		},
		{
			"sender": "krasin@google.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/07/26 17:32:49, iant wrote:\n> http://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c\n> File src/pkg/runtime/vdso_linux_amd64.c (right):\n> \n> http://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c#newcode290\n> src/pkg/runtime/vdso_linux_amd64.c:290: /* That's all we need. */\n> > Do I understand correctly that there's no way to increase the stack size at\n> this\n> > early stage?\n> \n> At this early stage--before the program has really started--there is plenty of\n> stack space, provided by the kernel.  The limits on stack space only arise when\n> we start making goroutines.  Use #pragma textflag 7 to tell the function not to\n> worry about stack space.\nI do set #pragma texflag 7, and I see the following compiler error (on slightly updated version of the code):\n\nrt0_amd64_linux: nosplit stack overflow\n\t120\tassumed on entry to _rt0_amd64_linux\n\t112\ton entry to runtime.linux_setup_vdso\n\t88\tafter runtime.linux_setup_vdso uses 24\n\t80\ton entry to init_vdso_info\n\t40\tafter init_vdso_info uses 40\n\t32\ton entry to vdso_init_from_sysinfo_ehdr\n\t-24\tafter vdso_init_from_sysinfo_ehdr uses 56\nvdso_sym: nosplit stack overflow\n\t120\tassumed on entry to vdso_sym\n\t64\tafter vdso_sym uses 56\n\t56\ton entry to vdso_match_version\n\t8\tafter vdso_match_version uses 48\n\t0\ton entry to runtime.strcmp\n\t-16\tafter runtime.strcmp uses 16\nruntime.linux_setup_vdso: nosplit stack overflow\n\t120\tassumed on entry to runtime.linux_setup_vdso\n\t96\tafter runtime.linux_setup_vdso uses 24\n\t88\ton entry to init_vdso_info\n\t48\tafter init_vdso_info uses 40\n\t40\ton entry to vdso_init_from_sysinfo_ehdr\n\t-16\tafter vdso_init_from_sysinfo_ehdr uses 56",
			"disapproval": false,
			"date": "2012-07-26 18:09:46.731220",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ian,\n\nplease, take another look.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/rt0_linux_amd64.s\nFile src/pkg/runtime/rt0_linux_amd64.s (right):\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/rt0_linux_amd64.s#newcode9\nsrc/pkg/runtime/rt0_linux_amd64.s:9: CALL\truntime\u00b7linux_find_vdso_symbols(SB)\nOn 2012/07/27 17:24:23, iant wrote:\n> Might as well make setup_vdso call find_vdso_symbols.\nNo, we can't. The stack will overflow. Remember, I only have 200 bytes here.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c#newcode1\nsrc/pkg/runtime/vdso_linux_amd64.c:1: #include \"runtime.h\"\nOn 2012/07/27 17:24:23, iant wrote:\n> Needs copyright notice.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c#newcode5\nsrc/pkg/runtime/vdso_linux_amd64.c:5: #define\tPT_NULL\t\t0\t\t/* Program header table entry unused */\nOn 2012/07/27 17:24:23, iant wrote:\n> Formatting looks wrong--change tab to space?\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c#newcode15\nsrc/pkg/runtime/vdso_linux_amd64.c:15: #define\tDT_VERDEF\t0x6ffffffc\nOn 2012/07/27 17:24:23, iant wrote:\n> Formatting looks wrong.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c#newcode70\nsrc/pkg/runtime/vdso_linux_amd64.c:70: entry */\nOn 2012/07/27 17:24:23, iant wrote:\n> Put comment on one line.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c#newcode359\nsrc/pkg/runtime/vdso_linux_amd64.c:359: void runtime\u00b7linux_find_vdso_symbols(void) {\nOn 2012/07/27 17:24:23, iant wrote:\n> I would suggest a different approach.  There are only going to be a few symbols\n> defined in the VDSO.  Suppose you just walk through the dynamic symbol table and\n> look for the ones we want.  That saves dealing with the hash table entirely.\ndone. I have got rid of parsing hash table.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/syscall/asm_linux_amd64.s\nFile src/pkg/syscall/asm_linux_amd64.s (right):\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/syscall/asm_linux_amd64.s#newcode125\nsrc/pkg/syscall/asm_linux_amd64.s:125: MOVQ\truntime\u00b7__vdso_time_sym(SB), AX\nOn 2012/07/27 17:24:23, iant wrote:\n> We also want to fix gettimeofday.\nDone.\n\nFor some reason, VDSO version of gettimeofday works only 2x faster than the real syscall. This is reproduced on different kernels (3.2 and 3.5) and matches C version:\n\n#include <stdio.h>\n#include <sys/time.h>\n\nint main(void) {\n  struct timeval tv;\n  for (int i = 0; i < 1000000; i++) {\n    gettimeofday(&tv, NULL);\n  }\n}",
			"disapproval": false,
			"date": "2012-07-27 23:36:50.497550",
			"approval": false
		},
		{
			"sender": "krasin@google.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "also, I have actually seen the buffer underflow that caused a segfault.",
			"disapproval": false,
			"date": "2012-07-26 18:12:10.407290",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry, this is not something I know about.\r\n",
			"disapproval": false,
			"date": "2012-07-26 18:18:33.738890",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/07/26 18:18:33, iant2 wrote:\n> Sorry, this is not something I know about.\n\nnp, I will try to figure out it myself.",
			"disapproval": false,
			"date": "2012-07-26 18:19:51.463280",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't know if you're still having trouble with the textflag 7 overflows, but if you are, an easy way around that would be to delay the code until later. It seems like you could put\n\nvoid (*sysargs)(int32, void*);\n\nin runtime.h, and then in runtime.c's runtime.args function do\n\nif(sysargs != nil)\n    sysargs(argc, argv);\n\nand then in the Linux file write a handler and also\n\nvoid (*sysargs)(int32, void*) = linux_sysargs;",
			"disapproval": false,
			"date": "2012-08-03 19:44:30.073760",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/07/27 00:34:39, minux wrote:\n> On 2012/07/26 18:09:46, krasin wrote:\n> > I do set #pragma texflag 7, and I see the following compiler error (on\n> slightly\n> > updated version of the code):\n> > \n> > rt0_amd64_linux: nosplit stack overflow\n> > \t120\tassumed on entry to _rt0_amd64_linux\n> this is checked by 6l, which makes sure non-split stack don't use more memory\n> than reserved for (we reserve some stack in each stack segment for these\n> nosplit stack functions).\n> \n> maybe the limit is too low for 64-bit architectures, but from former experience,\n> we tend not to increase the limit (but to workaround that).\n> \n> I think a better way would be, in the rt0 code, only backup the corresponding\n> auxv for latter use, and then after we have initialized the split stack\n> mechanism,\n> do the actual initialization (perhaps when we first need to look up a symbol).\n> \n> ps: one easy way to fool the linker is to invoke function via function pointers.\n\nActually, I have managed to produce the code that working within the current limit. I will upload once I have replaced spaces with tabs.",
			"disapproval": false,
			"date": "2012-07-27 00:39:15.488000",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454046/diff/5013/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/5013/src/pkg/runtime/vdso_linux_amd64.c#newcode111\nsrc/pkg/runtime/vdso_linux_amd64.c:111: Elf64_Xword d_val;  /* Integer value */\nIndent?\n\nhttp://codereview.appspot.com/6454046/diff/5013/src/pkg/runtime/vdso_linux_amd64.c#newcode199\nsrc/pkg/runtime/vdso_linux_amd64.c:199: {\nMove the { to the end of the previous line.\n\nhttp://codereview.appspot.com/6454046/diff/5013/src/pkg/runtime/vdso_linux_amd64.c#newcode325\nsrc/pkg/runtime/vdso_linux_amd64.c:325: {\nDitto.",
			"disapproval": false,
			"date": "2012-08-06 01:08:59.837870",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can you please update the CL description and also the C code to note the Linux kernel version in which the vdso appeared? Maybe where I've requested the fallbacks you can put something like \n\n// Initialize to vsyscall function pointers, for use when vdso is unavailable\n// (kernel version < 2.999).\n\nThanks.\n\nhttp://codereview.appspot.com/6454046/diff/3026/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/3026/src/pkg/runtime/vdso_linux_amd64.c#newcode163\nsrc/pkg/runtime/vdso_linux_amd64.c:163: void* runtime\u00b7__vdso_time_sym;\nCan you initialize these to the fallback values and then not need the comparisons in the assembly code?",
			"disapproval": false,
			"date": "2012-08-09 20:59:17.836760",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/09 00:54:26, iant wrote:\n> On 2012/08/09 00:43:27, imkrasin wrote:\n> \n> > src/pkg/runtime/vdso_linux_amd64.c:165: { (byte*)\"__vdso_time\", 0xa33c485 },\n> > On 2012/08/08 22:10:50, iant wrote:\n> > > These are the only symbols we care about.  I don't see why we need the hash\n> > > code.  I just replace that with a pointer to the variable we want to set. \n> > Then\n> > > just fill in that value when we find the symbol.\n> > \n> > This hash code is used in hash_sym and is useful to locate a symbol while\n> > iterating through vdso symbol table.\n> \n> But why do you need hash_sym at all?  How does it help you?  There are only four\n> symbols here.  Once you've got the symbol name from the symbol table, you can\n> just check against each of the four symbols.  And really we don't need all four\n> symbols--there is no reason to look for a symbol that we won't call, and\n> currently I think we only call two: gettimeofday and time.\nDone.\n> \n> \n> \n> > There's a good chance that multiple symbol versions will be provided by VDSO\n> at\n> > some point (in a year or two). In this case, someone will have to reintroduce\n> > this indirection and don't forget about the stack limit.\n> \n> As far as I can see we will always look for a specific version of the symbol. \n> The symbol version should only change if the function changes in some\n> incompatible way.\nI mean that there will be added new vdso symbols (not time related) which will likely have linux3x version (just because they will be introduced in linux 3.x kernel)\n\nAlthough, keeping the code simple is fine.",
			"disapproval": false,
			"date": "2012-08-09 01:53:40.199610",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454046/diff/12005/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/12005/src/pkg/runtime/vdso_linux_amd64.c#newcode329\nsrc/pkg/runtime/vdso_linux_amd64.c:329: if (ver > MAX_VER_IND || found_ver_ind[ver] != ver_ind_marker)\nOn 2012/08/09 00:57:00, iant wrote:\n> We only care about one version.  I think you can drop the found_ver_ind array\n> and just remember the one version we care about.\n\nDone.",
			"disapproval": false,
			"date": "2012-08-09 01:53:50.701530",
			"approval": false
		},
		{
			"sender": "krasin@google.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c#newcode316\nsrc/pkg/runtime/vdso_linux_amd64.c:316: vdso_init_from_sysinfo_ehdr((Elf64_Ehdr*)elf_auxv[i].a_un.a_val);\nOn 2012/08/10 23:05:06, iant wrote:\n> Will it work to make vdso_info a local variable of this function, and pass the\n> address go vdso_init_from_sysinfo_ehdr and vdso_parse_symbols?\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c#newcode325\nsrc/pkg/runtime/vdso_linux_amd64.c:325: static void linux_sysargs(int32 argc, uint8** argv) {\nOn 2012/08/10 23:05:06, iant wrote:\n> What is this intermediate function for?\n\nI just was not fully sure that runtime\u00b7linux_setup_sysargs_handler and linux_sysargs belong to this file, because they are not vdso-related and might be used in other contexts as well. runtime_linux_amd64.c might be a better option.\n\nAnyway, I have removed linux_sysargs from the patch.",
			"disapproval": false,
			"date": "2012-08-11 00:01:38.419210",
			"approval": false
		},
		{
			"sender": "krasin@google.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/11 00:01:16, krasin wrote:\n> On 2012/08/10 23:05:06, iant wrote:\n> > Looking very close.\n> > \n> > Have you signed the copyright license agreement mentioned at the bottom of\n> > http://golang.org/doc/contribute.html ?\n> Ian,\n> \n> I am sorry for some sort of confusion, because I post comments from different\n> emails: mailto:krasin@google.com / mailto:krasin@golang.org / mailto:imkrasin@gmail.com\n> \n> At the same time, since my code is based on\n> https://github.com/torvalds/linux/blob/v3.5/Documentation/vDSO/parse_vdso.c#L2\n> written by Andrew Lutomirski, we might want to ask him to sign the agreement\nIn case, if it was not spotted, the Go issue was opened by Andrew: https://code.google.com/p/go/issues/detail?id=1933 so he is aware of our effort.\n\n> (alternatively) I can remove the rest of the code from parse_vdso, because it\n> was almost completely rewritten.\n> \n> > \n> >\n> http://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c\n> > File src/pkg/runtime/vdso_linux_amd64.c (right):\n> > \n> >\n> http://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c#newcode316\n> > src/pkg/runtime/vdso_linux_amd64.c:316:\n> > vdso_init_from_sysinfo_ehdr((Elf64_Ehdr*)elf_auxv[i].a_un.a_val);\n> > Will it work to make vdso_info a local variable of this function, and pass the\n> > address go vdso_init_from_sysinfo_ehdr and vdso_parse_symbols?\n> > \n> >\n> http://codereview.appspot.com/6454046/diff/23/src/pkg/runtime/vdso_linux_amd64.c#newcode325\n> > src/pkg/runtime/vdso_linux_amd64.c:325: static void linux_sysargs(int32 argc,\n> > uint8** argv) {\n> > What is this intermediate function for?",
			"disapproval": false,
			"date": "2012-08-11 00:05:59.814630",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Ian,\n\nplease, take a first high-level look. Currently, this CL enables vdso-aware syscall.Time with an easy upgrade option for gettimeofday, getcpu, clock_gettime.\n\nquestion: I have used some definitions from /usr/include/elf.h. Most of them are also available in cmd/ld/elf.h. Should I just include cmd/ld/elf.h and simplify vdso_linux_amd64.c?\n\nkrasin\n\nhttp://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/2001/src/pkg/runtime/vdso_linux_amd64.c#newcode245\nsrc/pkg/runtime/vdso_linux_amd64.c:245: vdso_info.symstrings = 0;\nOn 2012/07/26 16:48:33, iant wrote:\n> These values will all be zero anyhow.\n\nDone.",
			"disapproval": false,
			"date": "2012-07-27 06:33:19.806700",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Some comments.\n\nI wouldn't have code in runtime #include code in cmd/ld.  They are compiled by different compilers--runtime by 6c, cmd/ld by gcc.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/rt0_linux_amd64.s\nFile src/pkg/runtime/rt0_linux_amd64.s (right):\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/rt0_linux_amd64.s#newcode9\nsrc/pkg/runtime/rt0_linux_amd64.s:9: CALL\truntime\u00b7linux_find_vdso_symbols(SB)\nMight as well make setup_vdso call find_vdso_symbols.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c#newcode1\nsrc/pkg/runtime/vdso_linux_amd64.c:1: #include \"runtime.h\"\nNeeds copyright notice.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c#newcode5\nsrc/pkg/runtime/vdso_linux_amd64.c:5: #define\tPT_NULL\t\t0\t\t/* Program header table entry unused */\nFormatting looks wrong--change tab to space?\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c#newcode15\nsrc/pkg/runtime/vdso_linux_amd64.c:15: #define\tDT_VERDEF\t0x6ffffffc\nFormatting looks wrong.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c#newcode70\nsrc/pkg/runtime/vdso_linux_amd64.c:70: entry */\nPut comment on one line.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/runtime/vdso_linux_amd64.c#newcode359\nsrc/pkg/runtime/vdso_linux_amd64.c:359: void runtime\u00b7linux_find_vdso_symbols(void) {\nI would suggest a different approach.  There are only going to be a few symbols defined in the VDSO.  Suppose you just walk through the dynamic symbol table and look for the ones we want.  That saves dealing with the hash table entirely.\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/syscall/asm_linux_amd64.s\nFile src/pkg/syscall/asm_linux_amd64.s (right):\n\nhttp://codereview.appspot.com/6454046/diff/14001/src/pkg/syscall/asm_linux_amd64.s#newcode125\nsrc/pkg/syscall/asm_linux_amd64.s:125: MOVQ\truntime\u00b7__vdso_time_sym(SB), AX\nWe also want to fix gettimeofday.",
			"disapproval": false,
			"date": "2012-07-27 17:24:23.217670",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/09 00:43:27, imkrasin wrote:\n\n> src/pkg/runtime/vdso_linux_amd64.c:165: { (byte*)\"__vdso_time\", 0xa33c485 },\n> On 2012/08/08 22:10:50, iant wrote:\n> > These are the only symbols we care about.  I don't see why we need the hash\n> > code.  I just replace that with a pointer to the variable we want to set. \n> Then\n> > just fill in that value when we find the symbol.\n> \n> This hash code is used in hash_sym and is useful to locate a symbol while\n> iterating through vdso symbol table.\n\nBut why do you need hash_sym at all?  How does it help you?  There are only four symbols here.  Once you've got the symbol name from the symbol table, you can just check against each of the four symbols.  And really we don't need all four symbols--there is no reason to look for a symbol that we won't call, and currently I think we only call two: gettimeofday and time.\n\n\n\n> There's a good chance that multiple symbol versions will be provided by VDSO at\n> some point (in a year or two). In this case, someone will have to reintroduce\n> this indirection and don't forget about the stack limit.\n\nAs far as I can see we will always look for a specific version of the symbol.  The symbol version should only change if the function changes in some incompatible way.",
			"disapproval": false,
			"date": "2012-08-09 00:54:26.950270",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/14008/src/pkg/runtime/vdso_linux_amd64.c#newcode347\nsrc/pkg/runtime/vdso_linux_amd64.c:347: cur_sym = &sym_keys[VDSO_TIME_IND];\nOn 2012/07/30 18:28:37, krasin wrote:\n> On 2012/07/30 17:32:49, iant wrote:\n> > This isn't quite what I was expecting.  What I was thinking is: walk through\n> the\n> > symbol table once.  For each symbol, check if we care about it.  If we do,\n> store\n> > the value.\n> > \n> > If you do that, I think you can drop the found_ver_ind static array.  Just\n> cache\n> > the current version, and update if the version index changes (which will never\n> > happen with the current VDSO).\n> we do not have enough stack for that. I have introduced this complexity with\n> found_ver_ind to save the stack. Currently, I literally use all the available\n> stack.\n> \n> I am all for killing this ugliness, but based on our previous discussion, we\n> don't have a way to get more stack.\n\n\nWell, forget about found_ver_ind.\n\nStill, you should be able to walk the symbol table once.",
			"disapproval": false,
			"date": "2012-07-30 19:49:21.454460",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "OK, this is looking good.  Thanks for your patience.\n\nHave you considered rsc's suggestion of delaying this code until later, to avoid the stack overflow problem?  As far as I know nothing in the runtime calls these functions before setting up the stack, though it's certainly worth checking.\n\nNow, sorry about this, but there are a bunch of formatting nits.  This stuff is trivial but it's useful to keep all the runtime code in the same style.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode188\nsrc/pkg/runtime/vdso_linux_amd64.c:188: for (i = 0; i < hdr->e_shnum; i++) {\nWrite this as:\n    for(i=0; i<hdr->e_shnum; i++) {\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode189\nsrc/pkg/runtime/vdso_linux_amd64.c:189: if (sh[i].sh_type == SHT_DYNSYM) {\ns/if (/if(/\n\nDo this here and elsewhere throughout the file.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode195\nsrc/pkg/runtime/vdso_linux_amd64.c:195: * We need two things from the segment table: the load offset\nComments within functions are normally written with //, here and elsewhere.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode198\nsrc/pkg/runtime/vdso_linux_amd64.c:198: for (i = 0; i < hdr->e_phnum; i++) {\nfor(i=0; i < hdr->e_phnum; i++) {\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode209\nsrc/pkg/runtime/vdso_linux_amd64.c:209: if (!found_vaddr || !dyn)\ns/!dyn/dyn == nil/\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode215\nsrc/pkg/runtime/vdso_linux_amd64.c:215: for (i = 0; dyn[i].d_tag != DT_NULL; i++) {\nfor(i = 0; dyn[i].d_tag!=D_NULL; i++) {\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode216\nsrc/pkg/runtime/vdso_linux_amd64.c:216: switch (dyn[i].d_tag) {\ns/switch (/switch(/\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode239\nsrc/pkg/runtime/vdso_linux_amd64.c:239: if (!vdso_info.symstrings || !vdso_info.symtab)\nuse == nil, not !\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode242\nsrc/pkg/runtime/vdso_linux_amd64.c:242: if (!vdso_info.verdef)\nuse == nil\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode256\nsrc/pkg/runtime/vdso_linux_amd64.c:256: !runtime\u00b7strcmp(linux26.version, vdso_info.symstrings + aux->vda_name)) {\nuse == 0, not !\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode277\nsrc/pkg/runtime/vdso_linux_amd64.c:277: for (int32 i = 0; i < vdso_info.num_sym; i++) {\nDeclare i at the top of the function, then\n    for(i = 0; i<vdso_info.num_sym; i++) {",
			"disapproval": false,
			"date": "2012-08-09 18:21:54.566210",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/09 20:40:57, krasin wrote:\n> >Have you considered rsc's suggestion of delaying this code until later, to\n> avoid the stack overflow problem?  As far as I know nothing in the runtime calls\n> these functions before setting up the stack, though it's certainly worth\n> checking.\n> \n> I am within stack budget with this code, and it's checked by the compiler. So,\n> there's no need to complicate the vdso setup.\n\nOne advantage of delaying would be that many of the variables could move from being static variables to the stack.",
			"disapproval": false,
			"date": "2012-08-09 21:50:18.177710",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please, take another look.\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/runtime.c\nFile src/pkg/runtime/runtime.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/runtime.c#newcode69\nsrc/pkg/runtime/runtime.c:69: if(sysargs != nil)\nOn 2012/08/15 20:51:02, iant wrote:\n> This should be named runtime\u00b7sysargs.  Also it should be actually defined\n> somewhere--that is, add\n> \n> void (*runtime\u00b7sysargs)(int32, uint8**);\n> \n> above this function.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/runtime.h\nFile src/pkg/runtime/runtime.h (right):\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/runtime.h#newcode808\nsrc/pkg/runtime/runtime.h:808: void (*sysargs)(int32, uint8**);\nOn 2012/08/15 20:51:02, iant wrote:\n> This should be declared extern, and it should be moved to the section under the\n> comment \"external data\".  Also,\n> s/sysargs/runtime\u00b7sysargs/\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/vdso_linux_amd64.c#newcode264\nsrc/pkg/runtime/vdso_linux_amd64.c:264: if(vdso_info->valid == false)\nOn 2012/08/15 20:51:02, iant wrote:\n> Blank line after variable declarations.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/vdso_linux_amd64.c#newcode326\nsrc/pkg/runtime/vdso_linux_amd64.c:326: sysargs = runtime\u00b7linux_setup_vdso;\nOn 2012/08/15 20:51:02, iant wrote:\n> s/sysargs/runtime\u00b7sysargs/\n\nDone.",
			"disapproval": false,
			"date": "2012-08-15 22:55:29.443270",
			"approval": false
		},
		{
			"sender": "krasin@google.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": ">Have you considered rsc's suggestion of delaying this code until later, to avoid the stack overflow problem?  As far as I know nothing in the runtime calls these functions before setting up the stack, though it's certainly worth checking.\n\nI am within stack budget with this code, and it's checked by the compiler. So, there's no need to complicate the vdso setup.\n\nIf, at some point, this code will be hard to modify and keep it within the stack budget, delaying the setup might be an answer.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode188\nsrc/pkg/runtime/vdso_linux_amd64.c:188: for (i = 0; i < hdr->e_shnum; i++) {\nOn 2012/08/09 18:21:54, iant wrote:\n> Write this as:\n>     for(i=0; i<hdr->e_shnum; i++) {\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode189\nsrc/pkg/runtime/vdso_linux_amd64.c:189: if (sh[i].sh_type == SHT_DYNSYM) {\nOn 2012/08/09 18:21:54, iant wrote:\n> s/if (/if(/\n> \n> Do this here and elsewhere throughout the file.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode195\nsrc/pkg/runtime/vdso_linux_amd64.c:195: * We need two things from the segment table: the load offset\nOn 2012/08/09 18:21:54, iant wrote:\n> Comments within functions are normally written with //, here and elsewhere.\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode198\nsrc/pkg/runtime/vdso_linux_amd64.c:198: for (i = 0; i < hdr->e_phnum; i++) {\nOn 2012/08/09 18:21:54, iant wrote:\n> for(i=0; i < hdr->e_phnum; i++) {\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode209\nsrc/pkg/runtime/vdso_linux_amd64.c:209: if (!found_vaddr || !dyn)\nOn 2012/08/09 18:21:54, iant wrote:\n> s/!dyn/dyn == nil/\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode215\nsrc/pkg/runtime/vdso_linux_amd64.c:215: for (i = 0; dyn[i].d_tag != DT_NULL; i++) {\nOn 2012/08/09 18:21:54, iant wrote:\n> for(i = 0; dyn[i].d_tag!=D_NULL; i++) {\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode216\nsrc/pkg/runtime/vdso_linux_amd64.c:216: switch (dyn[i].d_tag) {\nOn 2012/08/09 18:21:54, iant wrote:\n> s/switch (/switch(/\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode239\nsrc/pkg/runtime/vdso_linux_amd64.c:239: if (!vdso_info.symstrings || !vdso_info.symtab)\nOn 2012/08/09 18:21:54, iant wrote:\n> use == nil, not !\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode242\nsrc/pkg/runtime/vdso_linux_amd64.c:242: if (!vdso_info.verdef)\nOn 2012/08/09 18:21:54, iant wrote:\n> use == nil\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode256\nsrc/pkg/runtime/vdso_linux_amd64.c:256: !runtime\u00b7strcmp(linux26.version, vdso_info.symstrings + aux->vda_name)) {\nOn 2012/08/09 18:21:54, iant wrote:\n> use == 0, not !\n\nDone.\n\nhttp://codereview.appspot.com/6454046/diff/1016/src/pkg/runtime/vdso_linux_amd64.c#newcode277\nsrc/pkg/runtime/vdso_linux_amd64.c:277: for (int32 i = 0; i < vdso_info.num_sym; i++) {\nOn 2012/08/09 18:21:54, iant wrote:\n> Declare i at the top of the function, then\n>     for(i = 0; i<vdso_info.num_sym; i++) {\n\nDone.",
			"disapproval": false,
			"date": "2012-08-09 20:40:57.289500",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "What's the status of this CL? Is any action expected from me?",
			"disapproval": false,
			"date": "2012-08-13 18:01:55.814250",
			"approval": false
		},
		{
			"sender": "krasin@google.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for the review, Ian.",
			"disapproval": false,
			"date": "2012-08-15 23:16:35.251930",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I have removed checks from the syscalls, and initialized runtime\u00b7__vdso_time_sym and runtime\u00b7__vdso_gettimeofday_sym vars with the fallback values.\n\nvdso setup postponed and all but one pragmas are removed.\n\nAlmost all global variables were eliminated.\n\nPlease, take another look.\n\nhttp://codereview.appspot.com/6454046/diff/3026/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/3026/src/pkg/runtime/vdso_linux_amd64.c#newcode163\nsrc/pkg/runtime/vdso_linux_amd64.c:163: void* runtime\u00b7__vdso_time_sym;\nOn 2012/08/09 20:59:18, rsc wrote:\n> Can you initialize these to the fallback values and then not need the\n> comparisons in the assembly code?\n\nDone.",
			"disapproval": false,
			"date": "2012-08-10 22:36:57.499150",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/13 18:01:55, imkrasin wrote:\n> What's the status of this CL? Is any action expected from me?\n\nfriendly ping",
			"disapproval": false,
			"date": "2012-08-15 20:25:01.948990",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/15 23:16:35, krasin wrote:\n> Thank you for the review, Ian.\n\nRuss,\n\nany update on this?",
			"disapproval": false,
			"date": "2012-08-21 22:33:07.378430",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry for letting this slide.\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/runtime.c\nFile src/pkg/runtime/runtime.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/runtime.c#newcode69\nsrc/pkg/runtime/runtime.c:69: if(sysargs != nil)\nThis should be named runtime\u00b7sysargs.  Also it should be actually defined somewhere--that is, add\n\nvoid (*runtime\u00b7sysargs)(int32, uint8**);\n\nabove this function.\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/runtime.h\nFile src/pkg/runtime/runtime.h (right):\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/runtime.h#newcode808\nsrc/pkg/runtime/runtime.h:808: void (*sysargs)(int32, uint8**);\nThis should be declared extern, and it should be moved to the section under the comment \"external data\".  Also,\ns/sysargs/runtime\u00b7sysargs/\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/vdso_linux_amd64.c#newcode264\nsrc/pkg/runtime/vdso_linux_amd64.c:264: if(vdso_info->valid == false)\nBlank line after variable declarations.\n\nhttp://codereview.appspot.com/6454046/diff/19007/src/pkg/runtime/vdso_linux_amd64.c#newcode326\nsrc/pkg/runtime/vdso_linux_amd64.c:326: sysargs = runtime\u00b7linux_setup_vdso;\ns/sysargs/runtime\u00b7sysargs/",
			"disapproval": false,
			"date": "2012-08-15 20:51:02.665820",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "daily ping",
			"disapproval": false,
			"date": "2012-08-22 23:42:58.580780",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/22 23:42:58, imkrasin wrote:\n> daily ping\n\nhonestly, I am going to abandon this CL in a week.",
			"disapproval": false,
			"date": "2012-08-29 04:27:13.882760",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"imkrasin@gmail.com",
				"iant@golang.org",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/31 22:07:49, imkrasin wrote:\n> On 2012/08/31 22:06:37, rsc wrote:\n> > LGTM\n> \n> There's a not-so-small change that this CL will break some non-x86-64 buildbot,\n> but I expect that it would be something trivial.\n\ns/change/chance",
			"disapproval": false,
			"date": "2012-08-31 22:08:07.552470",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "We are waiting for rsc to sign off. He has been away but is back and\r\nhas a huge backlog. Please be patient.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-08-29 05:29:25.182090",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/29 05:29:25, r wrote:\n> We are waiting for rsc to sign off. He has been away but is back and\n> has a huge backlog. Please be patient.\n> \n> -rob\n\nThanks, I will wait.",
			"disapproval": false,
			"date": "2012-08-29 05:30:48.163710",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This turned out nicely self-contained. Thanks very much. One small thing below to avoid touching the startup code.\n\nhttp://codereview.appspot.com/6454046/diff/22001/src/pkg/runtime/rt0_linux_amd64.s\nFile src/pkg/runtime/rt0_linux_amd64.s (right):\n\nhttp://codereview.appspot.com/6454046/diff/22001/src/pkg/runtime/rt0_linux_amd64.s#newcode8\nsrc/pkg/runtime/rt0_linux_amd64.s:8: CALL\truntime\u00b7linux_setup_sysargs_handler(SB)\nDelete.\n\nhttp://codereview.appspot.com/6454046/diff/22001/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttp://codereview.appspot.com/6454046/diff/22001/src/pkg/runtime/vdso_linux_amd64.c#newcode323\nsrc/pkg/runtime/vdso_linux_amd64.c:323: #pragma textflag 7\nReplace this function wth\n\nvoid (*runtime\u00b7sysargs)(int32, uint8**) = runtime.linux_setup_vdso;\n\nthen the linker will do it for you.",
			"disapproval": false,
			"date": "2012-08-31 17:28:55.673140",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"imkrasin@gmail.com",
				"iant@golang.org",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/31 22:06:37, rsc wrote:\n> LGTM\n\nThere's a not-so-small change that this CL will break some non-x86-64 buildbot, but I expect that it would be something trivial.",
			"disapproval": false,
			"date": "2012-08-31 22:07:49.184520",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fixes issue 1933.\n\nin the description?",
			"disapproval": false,
			"date": "2012-08-31 21:37:46.096250",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6454046/diff/22001/src/pkg/runtime/rt0_linux_amd64.s\nFile src/pkg/runtime/rt0_linux_amd64.s (right):\n\nhttps://codereview.appspot.com/6454046/diff/22001/src/pkg/runtime/rt0_linux_amd64.s#newcode8\nsrc/pkg/runtime/rt0_linux_amd64.s:8: CALL\truntime\u00b7linux_setup_sysargs_handler(SB)\nOn 2012/08/31 17:28:55, rsc wrote:\n> Delete.\n\nDone.\n\nhttps://codereview.appspot.com/6454046/diff/22001/src/pkg/runtime/vdso_linux_amd64.c\nFile src/pkg/runtime/vdso_linux_amd64.c (right):\n\nhttps://codereview.appspot.com/6454046/diff/22001/src/pkg/runtime/vdso_linux_amd64.c#newcode323\nsrc/pkg/runtime/vdso_linux_amd64.c:323: #pragma textflag 7\nOn 2012/08/31 17:28:55, rsc wrote:\n> Replace this function wth\n> \n> void (*runtime\u00b7sysargs)(int32, uint8**) = runtime.linux_setup_vdso;\n> \n> then the linker will do it for you.\n\nDone.",
			"disapproval": false,
			"date": "2012-08-31 21:31:07.714880",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/31 21:37:46, albert.strasheim wrote:\n> Fixes issue 1933.\n> \n> in the description?\n\nDone.",
			"disapproval": false,
			"date": "2012-08-31 21:39:44.832900",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-08-31 22:06:37.023450",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"krasin@golang.org",
				"iant@golang.org",
				"imkrasin@gmail.com",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=56ea40aac72b ***\n\nruntime: add vdso support for linux/amd64. Fixes issue 1933.\n\nR=iant, imkrasin, krasin, iant, minux.ma, rsc, nigeltao, r, fullung\nCC=golang-dev\nhttp://codereview.appspot.com/6454046\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-08-31 22:07:16.201900",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"imkrasin@gmail.com",
				"iant@golang.org",
				"krasin@google.com",
				"iant@google.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"nigeltao@golang.org",
				"r@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=close",
			"disapproval": false,
			"date": "2013-07-20 21:22:43.220490",
			"approval": false
		}
	],
	"owner_email": "krasin@golang.org",
	"private": false,
	"base_url": "",
	"owner": "Ivan Krasin",
	"subject": "runtime: add vdso support for linux/amd64.",
	"created": "2012-07-26 06:59:23.834100",
	"patchsets": [
		1,
		2001,
		2003,
		7002,
		12002,
		10003,
		9004,
		7006,
		5008,
		14001,
		5009,
		2011,
		4003,
		6011,
		10007,
		11009,
		13010,
		11010,
		14008,
		5013,
		13011,
		18004,
		13015,
		12003,
		18005,
		12005,
		3022,
		16006,
		1016,
		15,
		15003,
		15004,
		1020,
		3026,
		3027,
		16011,
		19001,
		10026,
		13020,
		23,
		19007,
		10032,
		22001,
		28002,
		25002
	],
	"modified": "2013-07-20 21:22:45.086770",
	"closed": false,
	"issue": 6454046
}