{
	"description": "crypto/elliptic: explicitly handle P+P, \u221e+P and P+\u221e\n\nThese aren't needed for scalar multiplication, but since we export a\ngeneric Add function we should handle it.\n\nThis change also corrects two bugs in p224Contract that it turned up.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6458076/diff/7002/src/pkg/crypto/elliptic/elliptic.go\nFile src/pkg/crypto/elliptic/elliptic.go (right):\n\nhttp://codereview.appspot.com/6458076/diff/7002/src/pkg/crypto/elliptic/elliptic.go#newcode34\nsrc/pkg/crypto/elliptic/elliptic.go:34: ScalarMult(x1, y1 *big.Int, scalar []byte) (x, y *big.Int)\ns/scalar/k/ to match comment?\n\nhttp://codereview.appspot.com/6458076/diff/7002/src/pkg/crypto/elliptic/elliptic.go#newcode37\nsrc/pkg/crypto/elliptic/elliptic.go:37: ScalarBaseMult(scalar []byte) (x, y *big.Int)\ns/scalar/k/?",
			"disapproval": false,
			"date": "2012-08-03 19:26:22.310810",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=158a6c2f8bb8 ***\n\ncrypto/elliptic: explicitly handle P+P, \u221e+P and P+\u221e\n\nThese aren't needed for scalar multiplication, but since we export a\ngeneric Add function we should handle it.\n\nThis change also corrects two bugs in p224Contract that it turned up.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6458076\n\nhttp://codereview.appspot.com/6458076/diff/7002/src/pkg/crypto/elliptic/elliptic.go\nFile src/pkg/crypto/elliptic/elliptic.go (right):\n\nhttp://codereview.appspot.com/6458076/diff/7002/src/pkg/crypto/elliptic/elliptic.go#newcode34\nsrc/pkg/crypto/elliptic/elliptic.go:34: ScalarMult(x1, y1 *big.Int, scalar []byte) (x, y *big.Int)\nOn 2012/08/03 19:26:22, rsc wrote:\n> s/scalar/k/ to match comment?\n\nDone.\n\nhttp://codereview.appspot.com/6458076/diff/7002/src/pkg/crypto/elliptic/elliptic.go#newcode37\nsrc/pkg/crypto/elliptic/elliptic.go:37: ScalarBaseMult(scalar []byte) (x, y *big.Int)\nOn 2012/08/03 19:26:22, rsc wrote:\n> s/scalar/k/?\n\nDone.",
			"disapproval": false,
			"date": "2012-08-03 19:42:39.388900",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-08-03 18:02:18.538550",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 6458076: crypto/elliptic: explicitly handle P+P, \u221e+P and P+\u221e",
	"created": "2012-08-03 17:34:37.582920",
	"patchsets": [
		1,
		2001,
		4005,
		7001,
		7002,
		8005
	],
	"modified": "2012-08-03 19:42:40.300770",
	"closed": true,
	"issue": 6458076
}