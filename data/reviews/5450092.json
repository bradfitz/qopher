{
	"description": "gobuilder: use new dashboard protocol\ngobuilder: -commit mode for packages\ngobuilder: cripple -package mode temporarily",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/http.go\nFile misc/dashboard/builder/http.go (right):\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/http.go#newcode31\nmisc/dashboard/builder/http.go:31: if args != nil {\nif len(args) > 0 {\n  cmd += \"?\" + args.Encode()\n}\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/http.go#newcode39\nmisc/dashboard/builder/http.go:39: panic(\"req provided for GET request\")\nInclude meth and cmd in these panics to make it easier to track down if it does happen. Maybe log.Panicf would be helpful here.\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/http.go#newcode70\nmisc/dashboard/builder/http.go:70: }{Response: resp}\nI don't understand why you set Response, or even why it's in this struct. Can you show the form of the body you are unmarshaling here?\n\nOh, I now see that resp is, say, *string. This needs a good comment.\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/main.go\nFile misc/dashboard/builder/main.go (right):\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/main.go#newcode496\nmisc/dashboard/builder/main.go:496: pkgroot := goroot\npkgRoot\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/main.go#newcode504\nmisc/dashboard/builder/main.go:504: }\nclean up on failure? If hgClone fails, then hgRepoExists(pkgroot) might be true next time around.\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/main.go#newcode649\nmisc/dashboard/builder/main.go:649: var repoRe = regexp.MustCompile(`^code\\.google\\.com/p/([a-z0-9\\-]+(\\.[a-z0-9\\-]+)?)(/[a-z0-9A-Z_.\\-/]+)?$`)\nyou could stick ?: at the start of that first capturing group to make it a non-capturing group. That'll clarify that you don't care about the first group at all.",
			"disapproval": false,
			"date": "2011-12-05 04:58:23.915386",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=adff3701bfc7 ***\n\ngobuilder: use new dashboard protocol\ngobuilder: -commit mode for packages\ngobuilder: cripple -package mode temporarily\n\nR=golang-dev, dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/5450092",
			"disapproval": false,
			"date": "2011-12-05 05:44:18.165058",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/http.go\nFile misc/dashboard/builder/http.go (right):\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/http.go#newcode31\nmisc/dashboard/builder/http.go:31: if args != nil {\nOn 2011/12/05 04:58:24, dsymonds wrote:\n> if len(args) > 0 {\n>   cmd += \"?\" + args.Encode()\n> }\n\nDone.\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/http.go#newcode39\nmisc/dashboard/builder/http.go:39: panic(\"req provided for GET request\")\nOn 2011/12/05 04:58:24, dsymonds wrote:\n> Include meth and cmd in these panics to make it easier to track down if it does\n> happen. Maybe log.Panicf would be helpful here.\n\nDone.\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/http.go#newcode70\nmisc/dashboard/builder/http.go:70: }{Response: resp}\nOn 2011/12/05 04:58:24, dsymonds wrote:\n> I don't understand why you set Response, or even why it's in this struct. Can\n> you show the form of the body you are unmarshaling here?\n> \n> Oh, I now see that resp is, say, *string. This needs a good comment.\n\nDone.\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/main.go\nFile misc/dashboard/builder/main.go (right):\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/main.go#newcode496\nmisc/dashboard/builder/main.go:496: pkgroot := goroot\nOn 2011/12/05 04:58:24, dsymonds wrote:\n> pkgRoot\n\nDone.\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/main.go#newcode504\nmisc/dashboard/builder/main.go:504: }\nOn 2011/12/05 04:58:24, dsymonds wrote:\n> clean up on failure? If hgClone fails, then hgRepoExists(pkgroot) might be true\n> next time around.\n\nDone.\n\nhttp://codereview.appspot.com/5450092/diff/4001/misc/dashboard/builder/main.go#newcode649\nmisc/dashboard/builder/main.go:649: var repoRe = regexp.MustCompile(`^code\\.google\\.com/p/([a-z0-9\\-]+(\\.[a-z0-9\\-]+)?)(/[a-z0-9A-Z_.\\-/]+)?$`)\nOn 2011/12/05 04:58:24, dsymonds wrote:\n> you could stick ?: at the start of that first capturing group to make it a\n> non-capturing group. That'll clarify that you don't care about the first group\n> at all.\n\nCan't do that in r60's regexp.",
			"disapproval": false,
			"date": "2011-12-05 05:21:25.333191",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-12-05 04:36:31.229212",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-12-05 05:33:17.899629",
			"approval": true
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5450092: gobuilder: use new dashboard protocol",
	"created": "2011-12-05 04:30:58.347105",
	"patchsets": [
		1,
		2001,
		4001,
		4002,
		5007
	],
	"modified": "2011-12-05 05:44:20.373253",
	"closed": true,
	"issue": 5450092
}