{
	"description": "encoding/csv: always allow trailing commas\n\nOriginal CL by rsc (11916045):\n\nThe motivation for disallowing them was RFC 4180 saying\n\"The last field in the record must not be followed by a comma.\"\nI believe this is an admonition to CSV generators, not readers.\nWhen reading, anything followed by a comma is not the last field.\n\nFixes issue 5892.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-08-01 23:39:53.709870",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12294043/diff/6001/src/pkg/encoding/csv/reader.go\nFile src/pkg/encoding/csv/reader.go (right):\n\nhttps://codereview.appspot.com/12294043/diff/6001/src/pkg/encoding/csv/reader.go#newcode257\nsrc/pkg/encoding/csv/reader.go:257: r1, err := r.readRune()\nThanks for finding the bug here. The fix you've made duplicates an existing code path. This structure should make the code clearer and more obviously correct:\n\nr1, err := r.readRune()\nfor err == nil && r.TrimLeadingSpace && r1 != '\\n' && unicode.IsSpace(r1) {\n    r1, err = r.readRune()\n}\n\nif err == io.EOF && r.column != 0 {\n    return true, 0, err\n}\nif err != nil {\n    return false, 0, err\n}\n\nswitch r1 { \n..\n\nhttps://codereview.appspot.com/12294043/diff/6001/src/pkg/encoding/csv/reader.go#newcode273\nsrc/pkg/encoding/csv/reader.go:273: } else {\nno else after if body ending in return\nbut this is moot",
			"disapproval": false,
			"date": "2013-08-02 16:58:21.891950",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "CL updated.\n\nhttps://codereview.appspot.com/12294043/diff/6001/src/pkg/encoding/csv/reader.go\nFile src/pkg/encoding/csv/reader.go (right):\n\nhttps://codereview.appspot.com/12294043/diff/6001/src/pkg/encoding/csv/reader.go#newcode257\nsrc/pkg/encoding/csv/reader.go:257: r1, err := r.readRune()\nOn 2013/08/02 16:58:22, rsc wrote:\n> Thanks for finding the bug here. The fix you've made duplicates an existing code\n> path. This structure should make the code clearer and more obviously correct:\n> \n> r1, err := r.readRune()\n> for err == nil && r.TrimLeadingSpace && r1 != '\\n' && unicode.IsSpace(r1) {\n>     r1, err = r.readRune()\n> }\n> \n> if err == io.EOF && r.column != 0 {\n>     return true, 0, err\n> }\n> if err != nil {\n>     return false, 0, err\n> }\n> \n> switch r1 { \n> ..\n\nDone.\n\nhttps://codereview.appspot.com/12294043/diff/6001/src/pkg/encoding/csv/reader.go#newcode273\nsrc/pkg/encoding/csv/reader.go:273: } else {\nOn 2013/08/02 16:58:22, rsc wrote:\n> no else after if body ending in return\n> but this is moot\n\nDone.",
			"disapproval": false,
			"date": "2013-08-02 18:58:48.698830",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-02 18:59:42.277050",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/02 18:59:42, peted wrote:\n> Hello mailto:golang-dev@googlegroups.com, mailto:rsc@golang.org (cc:\n> mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nIs this still a desired change?",
			"disapproval": false,
			"date": "2013-08-08 09:35:34.547730",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-09 05:45:27.873370",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=9657ca9fe9c7 ***\n\nencoding/csv: always allow trailing commas\n\nOriginal CL by rsc (11916045):\n\nThe motivation for disallowing them was RFC 4180 saying\n\"The last field in the record must not be followed by a comma.\"\nI believe this is an admonition to CSV generators, not readers.\nWhen reading, anything followed by a comma is not the last field.\n\nFixes issue 5892.\n\nR=golang-dev, rsc, r\nCC=golang-dev\nhttps://codereview.appspot.com/12294043\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2013-08-09 05:46:08.727950",
			"approval": false
		}
	],
	"owner_email": "pieter@binky.org.uk",
	"private": false,
	"base_url": "",
	"owner": "peted",
	"subject": "code review 12294043: encoding/csv: always allow trailing commas",
	"created": "2013-08-01 23:39:14.204330",
	"patchsets": [
		1,
		3001,
		6001,
		10001,
		12001
	],
	"modified": "2013-08-09 09:33:36.376460",
	"closed": true,
	"issue": 12294043
}