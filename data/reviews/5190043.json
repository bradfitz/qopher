{
	"description": "5g, 6g, 8g: fix loop finding bug, squash jmps\n\nThe loop recognizer uses the standard dominance\nfrontiers but gets confused by dead code, which\nhas a (not explicitly set) rpo number of 0, meaning it\nlooks like the head of the function, so it dominates\neverything.  If the loop recognizer encounters dead\ncode while tracking backward through the graph\nit fails to recognize where it started as a loop, and\nthen the optimizer does not registerize values loaded\ninside that loop.  Fix by checking rpo against rpo2r.\n\nSeparately, run a quick pass over the generated\ncode to squash JMPs to JMP instructions, which\nare convenient to emit during code generation but\ndifficult to read when debugging the -S output.\nA side effect of this pass is to eliminate dead code,\nso the output files may be slightly smaller and the\noptimizer may have less work to do.\nThere is no semantic effect, because the linkers\nflatten JMP chains and delete dead instructions\nwhen laying out the final code.  Doing it here too\njust makes the -S output easier to read and more\nlike what the final binary will contain.\n\nThe \"dead code breaks loop finding\" bug is thus\nfixed twice over.  It seemed prudent to fix loopit\nseparately just in case dead code ever sneaks back\nin for one reason or another.",
	"cc": [
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"ken@google.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-04 19:06:17.495110",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=de5179577ab4 ***\n\n5g, 6g, 8g: fix loop finding bug, squash jmps\n\nThe loop recognizer uses the standard dominance\nfrontiers but gets confused by dead code, which\nhas a (not explicitly set) rpo number of 0, meaning it\nlooks like the head of the function, so it dominates\neverything.  If the loop recognizer encounters dead\ncode while tracking backward through the graph\nit fails to recognize where it started as a loop, and\nthen the optimizer does not registerize values loaded\ninside that loop.  Fix by checking rpo against rpo2r.\n\nSeparately, run a quick pass over the generated\ncode to squash JMPs to JMP instructions, which\nare convenient to emit during code generation but\ndifficult to read when debugging the -S output.\nA side effect of this pass is to eliminate dead code,\nso the output files may be slightly smaller and the\noptimizer may have less work to do.\nThere is no semantic effect, because the linkers\nflatten JMP chains and delete dead instructions\nwhen laying out the final code.  Doing it here too\njust makes the -S output easier to read and more\nlike what the final binary will contain.\n\nThe \"dead code breaks loop finding\" bug is thus\nfixed twice over.  It seemed prudent to fix loopit\nseparately just in case dead code ever sneaks back\nin for one reason or another.\n\nR=ken2\nCC=golang-dev\nhttp://codereview.appspot.com/5190043",
			"disapproval": false,
			"date": "2011-10-04 19:06:24.013665",
			"approval": false
		},
		{
			"sender": "ken@google.com",
			"recipients": [
				"rsc@golang.org",
				"ken@google.com",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "lgtm",
			"disapproval": false,
			"date": "2011-10-18 23:34:23.557155",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5190043: 5g, 6g, 8g: fix loop finding bug, squash jmps",
	"created": "2011-10-04 19:02:43.445598",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2011-10-18 23:34:23.625738",
	"closed": true,
	"issue": 5190043
}