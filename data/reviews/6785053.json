{
	"description": "cmd/api: new goapi_test for http://codereview.appspot.com/6742050",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You should put these in the same CL.\r\n\r\n\r\nOn Thu, Nov 15, 2012 at 5:56 PM, <VisualFC@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: bradfitz@golang.org),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> cmd/api: new goapi_test for http://codereview.appspot.com/**6742050<http://codereview.appspot.com/6742050>\r\n>\r\n> Please review this at http://codereview.appspot.com/**6785053/<http://codereview.appspot.com/6785053/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/api/goapi_test.go\r\n>\r\n>\r\n> Index: src/cmd/api/goapi_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/api/goapi_test.go\r\n> +++ b/src/cmd/api/goapi_test.go\r\n> @@ -8,6 +8,7 @@\r\n>         \"bytes\"\r\n>         \"flag\"\r\n>         \"fmt\"\r\n> +       \"go/build\"\r\n>         \"io/ioutil\"\r\n>         \"os\"\r\n>         \"path/filepath\"\r\n> @@ -22,6 +23,7 @@\r\n>\r\n>  func TestGolden(t *testing.T) {\r\n>         td, err := os.Open(\"testdata/src/pkg\")\r\n> +\r\n>         if err != nil {\r\n>                 t.Fatal(err)\r\n>         }\r\n> @@ -29,15 +31,19 @@\r\n>         if err != nil {\r\n>                 t.Fatal(err)\r\n>         }\r\n> +       context := &build.Default\r\n> +       context.GOROOT = \"testdata\"\r\n> +\r\n>         for _, fi := range fis {\r\n>                 if !fi.IsDir() {\r\n>                         continue\r\n>                 }\r\n>                 w := NewWalker()\r\n>                 w.wantedPkg[fi.Name()] = true\r\n> +               w.context = context\r\n>\r\n> -               w.root = \"testdata/src/pkg\"\r\n>                 goldenFile := filepath.Join(\"testdata\", \"src\", \"pkg\",\r\n> fi.Name(), \"golden.txt\")\r\n> +\r\n>                 w.WalkPackage(fi.Name())\r\n>\r\n>                 if *updateGolden {\r\n> @@ -46,7 +52,7 @@\r\n>                         if err != nil {\r\n>                                 t.Fatal(err)\r\n>                         }\r\n> -                       for _, feat := range w.Features() {\r\n> +                       for _, feat := range w.Features(\"\") {\r\n>                                 fmt.Fprintf(f, \"%s\\n\", feat)\r\n>                         }\r\n>                         f.Close()\r\n> @@ -58,18 +64,23 @@\r\n>                 }\r\n>                 wanted := strings.Split(string(bs), \"\\n\")\r\n>                 sort.Strings(wanted)\r\n> +\r\n> +               features := make(map[string]bool)\r\n> +               for _, p := range w.Features(\"\") {\r\n> +                       features[p] = true\r\n> +               }\r\n> +\r\n>                 for _, feature := range wanted {\r\n>                         if feature == \"\" {\r\n>                                 continue\r\n>                         }\r\n> -                       _, ok := w.features[feature]\r\n> +                       _, ok := features[feature]\r\n>                         if !ok {\r\n>                                 t.Errorf(\"package %s: missing feature %q\",\r\n> fi.Name(), feature)\r\n>                         }\r\n> -                       delete(w.features, feature)\r\n> +                       delete(features, feature)\r\n>                 }\r\n> -\r\n> -               for _, feature := range w.Features() {\r\n> +               for _, feature := range features {\r\n>                         t.Errorf(\"package %s: extra feature not in golden\r\n> file: %q\", fi.Name(), feature)\r\n>                 }\r\n>         }\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-18 04:00:09.820750",
			"approval": false
		},
		{
			"sender": "VisualFC@gmail.com",
			"recipients": [
				"VisualFC@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: bradfitz@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-11-16 01:56:17.258790",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"VisualFC@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=close\n\nThis was merged into another CL that was subsequently rejected as too invasive.  This should all be forked out-of-tree.",
			"disapproval": false,
			"date": "2013-06-05 20:57:03.091350",
			"approval": false
		}
	],
	"owner_email": "VisualFC@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "visualfc",
	"subject": "code review 6785053: cmd/api: new goapi_test for http://codereview.appspot.c...",
	"created": "2012-10-26 03:32:32.971230",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2013-06-05 20:57:03.697490",
	"closed": false,
	"issue": 6785053
}