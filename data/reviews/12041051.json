{
	"description": "cmd/go: send timed out test SIGQUIT before SIGKILL\n\nThere is a chance that the SIGQUIT will make the test process\ndump its stacks as part of exiting, which would be nice for\nfinding out what it is doing.\n\nRight now the builders are occasionally timing out running\nthe runtime test. I hope this will give us some information\nabout the state of the runtime.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-31 02:43:20.629730",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Sounds like a great idea.\r\n\r\nOn Wed, Jul 31, 2013 at 12:43 PM,  <rsc@golang.org> wrote:\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> cmd/go: send timed out test SIGQUIT before SIGKILL\r\n>\r\n> There is a chance that the SIGQUIT will make the test process\r\n> dump its stacks as part of exiting, which would be nice for\r\n> finding out what it is doing.\r\n>\r\n> Right now the builders are occasionally timing out running\r\n> the runtime test. I hope this will give us some information\r\n> about the state of the runtime.\r\n>\r\n> Please review this at https://codereview.appspot.com/12041051/\r\n>\r\n> Affected files:\r\n>   M src/cmd/go/signal_notunix.go\r\n>   M src/cmd/go/signal_unix.go\r\n>   M src/cmd/go/test.go\r\n>\r\n>\r\n> Index: src/cmd/go/signal_notunix.go\r\n> ===================================================================\r\n> --- a/src/cmd/go/signal_notunix.go\r\n> +++ b/src/cmd/go/signal_notunix.go\r\n> @@ -11,3 +11,7 @@\r\n>  )\r\n>\r\n>  var signalsToIgnore = []os.Signal{os.Interrupt}\r\n> +\r\n> +// signalTrace is the signal to send to make a Go program\r\n> +// crash with a stack trace.\r\n> +var signalTrace os.Signal = nil\r\n> Index: src/cmd/go/signal_unix.go\r\n> ===================================================================\r\n> --- a/src/cmd/go/signal_unix.go\r\n> +++ b/src/cmd/go/signal_unix.go\r\n> @@ -12,3 +12,7 @@\r\n>  )\r\n>\r\n>  var signalsToIgnore = []os.Signal{os.Interrupt, syscall.SIGQUIT}\r\n> +\r\n> +// signalTrace is the signal to send to make a Go program\r\n> +// crash with a stack trace.\r\n> +var signalTrace os.Signal = syscall.SIGQUIT\r\n> Index: src/cmd/go/test.go\r\n> ===================================================================\r\n> --- a/src/cmd/go/test.go\r\n> +++ b/src/cmd/go/test.go\r\n> @@ -896,10 +896,22 @@\r\n>                 go func() {\r\n>                         done <- cmd.Wait()\r\n>                 }()\r\n> +       Outer:\r\n>                 select {\r\n>                 case err = <-done:\r\n>                         // ok\r\n>                 case <-tick.C:\r\n> +                       if signalTrace != nil {\r\n> +                               // Send a quit signal in the hope that the\r\n> program will print\r\n> +                               // a stack trace and exit. Give it five\r\n> seconds before resorting\r\n> +                               // to Kill.\r\n> +                               cmd.Process.Signal(signalTrace)\r\n> +                               select {\r\n> +                               case err = <-done:\r\n> +                                       break Outer\r\n> +                               case <-time.After(5 * time.Second):\r\n> +                               }\r\n> +                       }\r\n>                         cmd.Process.Kill()\r\n>                         err = <-done\r\n>                         fmt.Fprintf(&buf, \"*** Test killed: ran too long\r\n> (%v).\\n\", testKillTimeout)\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-31 02:46:59.454060",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=a48e1de2518d ***\n\ncmd/go: send timed out test SIGQUIT before SIGKILL\n\nThere is a chance that the SIGQUIT will make the test process\ndump its stacks as part of exiting, which would be nice for\nfinding out what it is doing.\n\nRight now the builders are occasionally timing out running\nthe runtime test. I hope this will give us some information\nabout the state of the runtime.\n\nR=golang-dev, dave\nCC=golang-dev\nhttps://codereview.appspot.com/12041051",
			"disapproval": false,
			"date": "2013-07-31 02:52:13.793440",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 12041051: cmd/go: send timed out test SIGQUIT before SIGKILL",
	"created": "2013-07-31 02:42:23.167310",
	"patchsets": [
		1,
		3001,
		5001,
		2002,
		12001
	],
	"modified": "2013-07-31 02:52:15.311300",
	"closed": true,
	"issue": 12041051
}