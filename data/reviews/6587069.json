{
	"description": "benchcmp: show memory statistics, when available",
	"cc": [
		"minux.ma@gmail.com",
		"dave@cheney.net",
		"extraterrestrial.neighbour@gmail.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/03 15:10:41, minux wrote:\n> does \"MB/s\" always there when there is \"allocs/op\"?\n\nSorry, don't understand the question. Both MB/s and allocs/op appear if and only if both the old and new benchmark results have that measurement in them.",
			"disapproval": false,
			"date": "2012-10-03 15:26:28.070030",
			"approval": false
		},
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-10-03 12:24:54.597160",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wednesday, October 3, 2012, wrote:\r\n\r\n> On 2012/10/03 15:10:41, minux wrote:\r\n>\r\n>> does \"MB/s\" always there when there is \"allocs/op\"?\r\n>\r\n> Sorry, don't understand the question. Both MB/s and allocs/op appear if\r\n> and only if both the old and new benchmark results have that measurement\r\n>\r\nsorry i didn't make myself clear.\r\nwhat if a benchmark shows allocs/op but not MB/s?\r\n",
			"disapproval": false,
			"date": "2012-10-03 15:30:17.697610",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "does \"MB/s\" always there when there is \"allocs/op\"?\r\n",
			"disapproval": false,
			"date": "2012-10-03 15:10:41.271460",
			"approval": false
		},
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "With this change, benchcmp compares that which is available to compare. If there are allocs/op but not MB/s, it compares only allocs/op.",
			"disapproval": false,
			"date": "2012-10-16 20:39:01.921900",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6587069/diff/4001/misc/benchcmp\nFile misc/benchcmp (right):\n\nhttps://codereview.appspot.com/6587069/diff/4001/misc/benchcmp#newcode30\nmisc/benchcmp:30: if($8 == \"allocs/op\")\nthe problem is:\nyou hardcode column number for \"allocs/op\" here, which might\nnot be correct.\n\nin fact, go test -benchmem -bench=. crypto/aes gives this\n(slightly edited the spaces):\nBenchmarkEncrypt 50000000 37.7 ns/op  424.75 MB/s  0 B/op  0 allocs/op\nBenchmarkDecrypt 50000000 38.4 ns/op  416.28 MB/s  0 B/op  0 allocs/op\nBenchmarkExpand  50000000 66.9 ns/op   0 B/op  0 allocs/op\nok  \tcrypto/aes\t7.360s\n\nOn the first two lines, allocs/op is at the 10th column, but\non the third line it is at the 8th column.",
			"disapproval": false,
			"date": "2012-10-22 16:06:32.812810",
			"approval": false
		},
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "OK, good catch. Fixed it by trying both positions, hacky but seems reasonable for this little testing tool. I also fixed an old typo in benchcmp (= versus ==). Finally, corrected divide by zero to not crash.\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-23 10:16:08.873300",
			"approval": false
		},
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"extraterrestrial.neighbour@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, dave@cheney.net, extraterrestrial.neighbour@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-02 15:58:51.992070",
			"approval": false
		},
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fixed formatting of allocations (no longer displayed as floats).\n\nPTAL",
			"disapproval": false,
			"date": "2012-10-30 16:03:37.943830",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Is it possible to have the delta displayed in the same format as the ns/op section for function duration ?",
			"disapproval": false,
			"date": "2012-10-30 16:09:41.046170",
			"approval": false
		},
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done. Example of the current format (ignore the data, it's false):\n\n\nbenchmark                old ns/op    new ns/op    delta\nBenchmarkClientServer       321861       354859  +10.25%\n\nbenchmark               old allocs   new allocs    delta\nBenchmarkClientServer          121          116   -4.13%",
			"disapproval": false,
			"date": "2012-10-31 14:09:14.848840",
			"approval": false
		},
		{
			"sender": "extraterrestrial.neighbour@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"extraterrestrial.neighbour@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/31 14:09:14, jeff.allen wrote:\n> Done. Example of the current format (ignore the data, it's false):\n> \n> \n> benchmark                old ns/op    new ns/op    delta\n> BenchmarkClientServer       321861       354859  +10.25%\n> \n> benchmark               old allocs   new allocs    delta\n> BenchmarkClientServer          121          116   -4.13%\n\nUpdate the usage?\n\nbenchcmp -h\nusage: benchcmp old.txt new.txt\n\nEach input file should be go test -test.run=NONE -test.bench=. > [old,new].txt\nBenchcmp compares the first and last for each benchmark.",
			"disapproval": false,
			"date": "2012-10-31 18:30:14.736970",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"extraterrestrial.neighbour@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thanks.",
			"disapproval": false,
			"date": "2012-11-02 16:34:46.719480",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"extraterrestrial.neighbour@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=799fb89cf9b8 ***\n\nmisc/benchcmp: show memory statistics, when available\n\nR=minux.ma, dave, extraterrestrial.neighbour, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6587069\n\nCommitter: Shenghou Ma <minux.ma@gmail.com>",
			"disapproval": false,
			"date": "2012-11-02 18:14:04.740240",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you, it's good to be consistent.\r\n\r\n\r\nOn Thu, Nov 1, 2012 at 1:09 AM,  <jeff.allen@gmail.com> wrote:\r\n> Done. Example of the current format (ignore the data, it's false):\r\n>\r\n>\r\n> benchmark                old ns/op    new ns/op    delta\r\n> BenchmarkClientServer       321861       354859  +10.25%\r\n>\r\n> benchmark               old allocs   new allocs    delta\r\n> BenchmarkClientServer          121          116   -4.13%\r\n>\r\n>\r\n> https://codereview.appspot.com/6587069/\r\n",
			"disapproval": false,
			"date": "2012-10-31 14:11:17.464750",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jeff.allen@gmail.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"extraterrestrial.neighbour@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "looks fine; leaving for minux to do the final lgtm and submit\nthanks!\n\nhttps://codereview.appspot.com/6587069/diff/20002/misc/benchcmp\nFile misc/benchcmp (right):\n\nhttps://codereview.appspot.com/6587069/diff/20002/misc/benchcmp#newcode34\nmisc/benchcmp:34: newall[$1] = $7\nall sounds all and not a shortening of alloc. please use newalloc and oldalloc.\n\nhttps://codereview.appspot.com/6587069/diff/20002/misc/benchcmp#newcode78\nmisc/benchcmp:78: anyall = 0\nanyalloc",
			"disapproval": false,
			"date": "2012-11-01 16:35:20.968200",
			"approval": true
		}
	],
	"owner_email": "jeff.allen@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "jeff.allen",
	"subject": "code review 6587069: benchcmp: show memory statistics, when available",
	"created": "2012-10-03 12:24:03.516190",
	"patchsets": [
		1,
		2001,
		4001,
		12001,
		15001,
		18002,
		20002,
		18003,
		16002
	],
	"modified": "2012-11-07 15:21:24.930750",
	"closed": true,
	"issue": 6587069
}