{
	"description": "effective_go: redeclaration\n\nFixes issue 2455.\nFixes issue 2013.",
	"cc": [
		"rsc@golang.org",
		"r@google.com",
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@google.com, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-20 21:57:03.734899",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Dec 20, 2011, at 1:48 PM, rsc@golang.org wrote:\n\n> \n> http://codereview.appspot.com/5498053/diff/7001/doc/effective_go.html\n> File doc/effective_go.html (right):\n> \n> http://codereview.appspot.com/5498053/diff/7001/doc/effective_go.html#newcode572\n> doc/effective_go.html:572: In a <code>:=</code> declaration it is legal\n> to redeclare a variable as long as it is\n> I think the main thing that bothers me is the \"it is legal\",\n> because there are other legal uses of := that do not\n> redeclare the variable (in this sense).  Maybe something\n> that describes the effect instead of describing legality?\n> \n> In a <code>:=</code> declaration, a variable on the left hand side is\n> treated\n> as redeclared if it has already been declared in the current scope.\n> A <code>:=</code> declaration must include at least one new variable\n> on its left hand side.\n> \n> http://codereview.appspot.com/5498053/\n\n\"treated as redeclared\" seems to me to be far more confusing than what i had.\n\nPTAL.\n\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-12-20 21:57:06.855472",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5498053/diff/4008/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttp://codereview.appspot.com/5498053/diff/4008/doc/effective_go.html#newcode578\ndoc/effective_go.html:578: (if <code>v</code> is declared in an outer scope, a new declaration will create a new variable),</li>\ns/a new/the/\n\nhttp://codereview.appspot.com/5498053/diff/4008/doc/effective_go.html#newcode580\ndoc/effective_go.html:580: <li>there is at least one variable in the declaration that is being declared anew.</li>\ns/one/& other/",
			"disapproval": false,
			"date": "2011-12-20 22:08:37.253138",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2011-12-20 21:37:37.045106",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 6bd78dcec1cd ***\n\neffective_go: redeclaration\n\nFixes issue 2455.\nFixes issue 2013.\n\nR=rsc, r, gri\nCC=golang-dev\nhttp://codereview.appspot.com/5498053\n\nhttp://codereview.appspot.com/5498053/diff/1/doc/effective_go.html\nFile doc/effective_go.html (left):\n\nhttp://codereview.appspot.com/5498053/diff/1/doc/effective_go.html#oldcode503\ndoc/effective_go.html:503: <p id=\"else\">\nit seemed wrong to me, but i see now.\nDone.",
			"disapproval": false,
			"date": "2011-12-20 22:15:38.318881",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-20 21:40:52.077698",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@google.com, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-20 22:00:21.168849",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5498053/diff/7001/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttp://codereview.appspot.com/5498053/diff/7001/doc/effective_go.html#newcode572\ndoc/effective_go.html:572: In a <code>:=</code> declaration it is legal to redeclare a variable as long as it is\nI think the main thing that bothers me is the \"it is legal\",\nbecause there are other legal uses of := that do not \nredeclare the variable (in this sense).  Maybe something\nthat describes the effect instead of describing legality?\n\nIn a <code>:=</code> declaration, a variable on the left hand side is treated\nas redeclared if it has already been declared in the current scope.\nA <code>:=</code> declaration must include at least one new variable\non its left hand side.",
			"disapproval": false,
			"date": "2011-12-20 21:48:24.886596",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I feel like many people will think that\n\nx := 1\n{\n    x := 2\n}\n\nis an example of redeclaration.  It would be very nice\nto use a different word for the not-declaration of x in\n\nx := 1\nx, y := 2, 3\n\nbut I don't have a better word handy.\n\nhttp://codereview.appspot.com/5498053/diff/1/doc/effective_go.html\nFile doc/effective_go.html (left):\n\nhttp://codereview.appspot.com/5498053/diff/1/doc/effective_go.html#oldcode503\ndoc/effective_go.html:503: <p id=\"else\">\nPlease restore id tag so that links to\nhttp://golang.org/doc/effective_go.html#else\ncontinue to work.",
			"disapproval": false,
			"date": "2011-12-20 21:41:41.208902",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-20 21:44:40.238212",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5498053/diff/3005/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttp://codereview.appspot.com/5498053/diff/3005/doc/effective_go.html#newcode572\ndoc/effective_go.html:572: In a <code>:=</code> declaration a variable <code>v</code> may appear even\nmay appear on the left-hand side (?)",
			"disapproval": false,
			"date": "2011-12-20 21:59:57.144597",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Dec 20, 2011, at 1:41 PM, rsc@golang.org wrote:\n\n> I feel like many people will think that\n> \n> x := 1\n> {\n>    x := 2\n> }\n> \n> is an example of redeclaration.  It would be very nice\n> to use a different word for the not-declaration of x in\n> \n> x := 1\n> x, y := 2, 3\n> \n> but I don't have a better word handy.\n\nthat's why it says 'in the same scope'.\n\nprogrammers don't understand scope but i don't know how to address that here.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-12-20 21:44:34.598308",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Dec 20, 2011 at 1:48 PM,  <rsc@golang.org> wrote:\n> In a <code>:=</code> declaration, a variable on the left hand side is\n> treated\n> as redeclared if it has already been declared in the current scope.\n> A <code>:=</code> declaration must include at least one new variable\n> on its left hand side.\n\nOr perhaps (since it's not a redeclaration):\n\nIn a <code>:=</code> declaration, a variable on the left hand side may\nbe referred to (mentioned?)\nwithout redeclaration error if it has already been declared in the\ncurrent scope.\nA <code>:=</code> declaration must include at least one new variable\non its left hand side.\n\nOtherwise, LGTM.\n- gri\n",
			"disapproval": false,
			"date": "2011-12-20 21:54:33.586434",
			"approval": true
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5498053: effective_go: redeclaration",
	"created": "2011-12-20 21:37:33.512609",
	"patchsets": [
		1,
		1003,
		3004,
		7001,
		3005,
		2004,
		7005,
		4008,
		2010
	],
	"modified": "2011-12-20 22:15:39.375060",
	"closed": true,
	"issue": 5498053
}