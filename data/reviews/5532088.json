{
	"description": "time: add Since, which returns the time elapsed since some past time t.",
	"cc": [
		"rsc@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"sameer@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-18 15:54:30.809995",
			"approval": false
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"sameer@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/18 19:15:35, r wrote:\n> LGTM although I don't encourage a new method/function for every arithmetic\n> operation.\n\nAs much as I like symmetry, I'll resist adding time.Until(t).",
			"disapproval": false,
			"date": "2012-01-18 19:52:04.182920",
			"approval": false
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"sameer@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/18 18:52:46, rsc wrote:\n> Looks fine.  Was there anything else we had discussed?\n> I can't find the email thread.\n\nRuss, you proposed:\n\nI am thinking about adding\n\n// Elapsed returns the time elapsed since t.\n// It is shorthand for time.Now().Sub(t).\nfunc (t Time) Elapsed() Duration\n\n// UnixMilli returns the Unix time, the number of milliseconds elapsed\n// since January 1, 1970 UTC.\nfunc (t Time) UnixMilli() int64\n\n// UnixMicro returns the Unix time, the number of microseconds elapsed\n// since January 1, 1970 UTC.\nfunc (t Time) UnixMicro() int64",
			"disapproval": false,
			"date": "2012-01-18 19:51:28.636032",
			"approval": false
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"sameer@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a56668df61e3 ***\n\ntime: add Since, which returns the time elapsed since some past time t.\n\nR=rsc, r\nCC=golang-dev\nhttp://codereview.appspot.com/5532088",
			"disapproval": false,
			"date": "2012-01-18 20:25:32.803691",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"sameer@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks fine.  Was there anything else we had discussed?\nI can't find the email thread.",
			"disapproval": false,
			"date": "2012-01-18 18:52:46.100481",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"sameer@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM although I don't encourage a new method/function for every arithmetic operation.",
			"disapproval": false,
			"date": "2012-01-18 19:15:35.467491",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nSince makes Elapsed not interesting.\nUnixMilli and UnixMicro don't seem so\nrelevant here, so let's leave them out too.\nSo just Since.\n",
			"disapproval": false,
			"date": "2012-01-18 20:02:35.820508",
			"approval": true
		}
	],
	"owner_email": "sameer@golang.org",
	"private": false,
	"base_url": "",
	"owner": "Sameer Ajmani",
	"subject": "code review 5532088: time: add Since, which returns the time elapsed since s...",
	"created": "2012-01-18 15:54:08.608333",
	"patchsets": [
		1,
		3,
		4001,
		4002
	],
	"modified": "2012-01-18 20:25:33.479161",
	"closed": true,
	"issue": 5532088
}