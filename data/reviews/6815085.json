{
	"description": "cmd/gc: check for array bounds overflow in slice expression\n\nThe test for this is test/index.go, which is not run by\ndefault.  That test does not currently pass even after this is\napplied, due to issue 4348.\n\nFixes issue 4344.",
	"cc": [
		"golang-dev@googlegroups.com",
		"daniel.morsing@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sigh.  Thanks.\n\nhttps://codereview.appspot.com/6815085/diff/4002/src/cmd/gc/typecheck.c\nFile src/cmd/gc/typecheck.c (right):\n\nhttps://codereview.appspot.com/6815085/diff/4002/src/cmd/gc/typecheck.c#newcode949\nsrc/cmd/gc/typecheck.c:949: yyerror(\"invalid array index %N (out of bounds for %d-element array)\", n->right->left, t->bound);\nOn 2012/11/06 06:02:52, DMorsing wrote:\n> s/t->/tp->/\n\nDone.\n\nhttps://codereview.appspot.com/6815085/diff/4002/src/cmd/gc/typecheck.c#newcode963\nsrc/cmd/gc/typecheck.c:963: yyerror(\"invalid array index %N (out of bounds for %d-element array)\", n->right->right, t->bound);\nOn 2012/11/06 06:02:52, DMorsing wrote:\n> Ditto.\n\nDone.",
			"disapproval": false,
			"date": "2012-11-06 14:02:56.691790",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-11-05 19:34:32.114200",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks good so far.\n\nhttps://codereview.appspot.com/6815085/diff/1/src/cmd/gc/typecheck.c\nFile src/cmd/gc/typecheck.c (right):\n\nhttps://codereview.appspot.com/6815085/diff/1/src/cmd/gc/typecheck.c#newcode917\nsrc/cmd/gc/typecheck.c:917: tp = nil;\nIf the typechecking of n->left was moved up a bit, you could avoid checking for the same conditional twice in the same sequence.\n\nIMHO it would also make the function \"read\" better by not having the index typecheck sandwiched between 2 parts of array/slice typecheck.\n\nhttps://codereview.appspot.com/6815085/diff/1/src/cmd/gc/typecheck.c#newcode930\nsrc/cmd/gc/typecheck.c:930: yyerror(\"invalid %s index %N (index must be non-negative)\", why, n->right->left);\nThe old error message was probably a reference to the slicing operation rather than the slice type. Does it make sense to change the error message from being about the operation to the type used?",
			"disapproval": false,
			"date": "2012-11-05 20:58:13.962440",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6815085/diff/1/src/cmd/gc/typecheck.c\nFile src/cmd/gc/typecheck.c (right):\n\nhttps://codereview.appspot.com/6815085/diff/1/src/cmd/gc/typecheck.c#newcode917\nsrc/cmd/gc/typecheck.c:917: tp = nil;\nOn 2012/11/05 20:58:14, DMorsing wrote:\n> If the typechecking of n->left was moved up a bit, you could avoid checking for\n> the same conditional twice in the same sequence.\n> \n> IMHO it would also make the function \"read\" better by not having the index\n> typecheck sandwiched between 2 parts of array/slice typecheck.\n\nDone.\n\nhttps://codereview.appspot.com/6815085/diff/1/src/cmd/gc/typecheck.c#newcode930\nsrc/cmd/gc/typecheck.c:930: yyerror(\"invalid %s index %N (index must be non-negative)\", why, n->right->left);\nOn 2012/11/05 20:58:14, DMorsing wrote:\n> The old error message was probably a reference to the slicing operation rather\n> than the slice type. Does it make sense to change the error message from being\n> about the operation to the type used?\n\nDone.",
			"disapproval": false,
			"date": "2012-11-05 22:38:44.048070",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-11-06 19:09:41.503800",
			"approval": true
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6815085/diff/4002/src/cmd/gc/typecheck.c\nFile src/cmd/gc/typecheck.c (right):\n\nhttps://codereview.appspot.com/6815085/diff/4002/src/cmd/gc/typecheck.c#newcode949\nsrc/cmd/gc/typecheck.c:949: yyerror(\"invalid array index %N (out of bounds for %d-element array)\", n->right->left, t->bound);\ns/t->/tp->/\n\nhttps://codereview.appspot.com/6815085/diff/4002/src/cmd/gc/typecheck.c#newcode963\nsrc/cmd/gc/typecheck.c:963: yyerror(\"invalid array index %N (out of bounds for %d-element array)\", n->right->right, t->bound);\nDitto.",
			"disapproval": false,
			"date": "2012-11-06 06:02:52.677920",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=45cd940d4b21 ***\n\ncmd/gc: check for array bounds overflow in slice expression\n\nThe test for this is test/index.go, which is not run by\ndefault.  That test does not currently pass even after this is\napplied, due to issue 4348.\n\nFixes issue 4344.\n\nR=golang-dev, daniel.morsing, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6815085",
			"disapproval": false,
			"date": "2012-11-06 19:36:04.850200",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 6815085: cmd/gc: check for array bounds overflow in slice expression",
	"created": "2012-11-05 19:34:26.948760",
	"patchsets": [
		1,
		4002,
		5002,
		9001,
		9002
	],
	"modified": "2012-11-06 19:36:08.464550",
	"closed": true,
	"issue": 6815085
}