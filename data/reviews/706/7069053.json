{
	"description": "cmd/dist: update for new flag parsing on Plan 9",
	"cc": [
		"golang-dev@googlegroups.com",
		"seed@mail.nanosouffle.net",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"seed@mail.nanosouffle.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/7069053/diff/3001/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttps://codereview.appspot.com/7069053/diff/3001/src/cmd/dist/build.c#newcode1043\nsrc/cmd/dist/build.c:1043: \"lib9/goos.c\",\nOn 2013/01/08 01:48:05, akumar wrote:\n> just use file names here (\"goos.c\", etc.), since it's clear that they must\n> reside in lib9; for comparison, you can then use lastelem()\n\nDone.\n\nhttps://codereview.appspot.com/7069053/diff/3001/src/cmd/dist/build.c#newcode1059\nsrc/cmd/dist/build.c:1059: int i, j, ret, skip;\nOn 2013/01/08 01:48:05, akumar wrote:\n> I feel like label/goto might be cleaner than this.\n\nAgreed.\n\nhttps://codereview.appspot.com/7069053/diff/3001/src/cmd/dist/build.c#newcode1070\nsrc/cmd/dist/build.c:1070: if(hassuffix(file, lib9files[i]))\nOn 2013/01/08 01:48:05, akumar wrote:\n> with regard to using simple file names in lib9files:\n> \n> if(streq(lastelem(file), lib9files[i]))\n\nDone.",
			"disapproval": false,
			"date": "2013-01-08 02:29:30.791610",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"seed@mail.nanosouffle.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM,\n\nbut no need to introduce a new variable.\n\nhttps://codereview.appspot.com/7069053/diff/9001/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttps://codereview.appspot.com/7069053/diff/9001/src/cmd/dist/build.c#newcode1058\nsrc/cmd/dist/build.c:1058: char *name, *p, *f;\nit seems fine to just use `name'.",
			"disapproval": false,
			"date": "2013-01-08 02:46:55.342250",
			"approval": true
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yeah, we're building these things unconditionally so that's fine\r\nfor now.\r\n\r\nHowever, I'd make it:\r\n\r\nif(streq(name, \"goos.c\") || streq(name, \"flag.c))\r\n  return 1;\r\n\r\nOn 9 January 2013 15:49, Anthony Martin <ality@pbrane.org> wrote:\r\n> Now that argv0.c is going away, I'm tempted to\r\n> just make this:\r\n>\r\n> if(streq(dir, \"lib9\")) {\r\n>         name = lastelem(file);\r\n>         if(streq(name, \"goos.c\"))\r\n>                 return 1;\r\n>         if(streq(name, \"flag.c\"))\r\n>                 return 1;\r\n>         return 0;\r\n> }\r\n>\r\n> And not even bother using an array of filenames\r\n> or checking for \"// +build\" lines.\r\n>\r\n> If other files are added in the future, we'll\r\n> have to change this file anyway.\r\n>\r\n> Any objections?\r\n>\r\n>   Anthony\r\n",
			"disapproval": false,
			"date": "2013-01-10 00:11:26.418070",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-08 00:34:07.325800",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "[cc +lucio +minux]\r\n",
			"disapproval": false,
			"date": "2013-01-08 00:41:00.723170",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"seed@mail.nanosouffle.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7069053/diff/3001/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttps://codereview.appspot.com/7069053/diff/3001/src/cmd/dist/build.c#newcode1043\nsrc/cmd/dist/build.c:1043: \"lib9/goos.c\",\njust use file names here (\"goos.c\", etc.), since it's clear that they must reside in lib9; for comparison, you can then use lastelem()\n\nhttps://codereview.appspot.com/7069053/diff/3001/src/cmd/dist/build.c#newcode1059\nsrc/cmd/dist/build.c:1059: int i, j, ret, skip;\nI feel like label/goto might be cleaner than this.\n\nhttps://codereview.appspot.com/7069053/diff/3001/src/cmd/dist/build.c#newcode1070\nsrc/cmd/dist/build.c:1070: if(hassuffix(file, lib9files[i]))\nwith regard to using simple file names in lib9files:\n\nif(streq(lastelem(file), lib9files[i]))\n\nhttps://codereview.appspot.com/7069053/diff/3001/src/cmd/dist/build.c#newcode1071\nsrc/cmd/dist/build.c:1071: skip = 0;\nno need to continue iterating: once skip is set to 0 here, it will not be set to anything else, so just break out.\n\nfor(i=0; i<nelem(lib9files); i++) {\n  if(...) {\n    skip = 0;\n    break;\n  }\n}",
			"disapproval": false,
			"date": "2013-01-08 01:48:04.908330",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Now that argv0.c is going away, I'm tempted to\r\njust make this:\r\n\r\nif(streq(dir, \"lib9\")) {\r\n\tname = lastelem(file);\r\n\tif(streq(name, \"goos.c\"))\r\n\t\treturn 1;\r\n\tif(streq(name, \"flag.c\"))\r\n\t\treturn 1;\r\n\treturn 0;\r\n}\r\n\r\nAnd not even bother using an array of filenames\r\nor checking for \"// +build\" lines.\r\n\r\nIf other files are added in the future, we'll\r\nhave to change this file anyway.\r\n\r\nAny objections?\r\n\r\n  Anthony\r\n",
			"disapproval": false,
			"date": "2013-01-09 23:49:07.930890",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"seed@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, seed@mail.nanosouffle.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-12 01:03:06.403320",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"seed@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGMT.",
			"disapproval": false,
			"date": "2013-01-12 02:21:29.434050",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-18 20:19:17.060240",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1b57fb106d8d ***\n\ncmd/dist: update for new flag parsing on Plan 9\n\nR=golang-dev, seed, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7069053\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-18 20:19:55.946090",
			"approval": false
		}
	],
	"owner_email": "ality@pbrane.org",
	"private": false,
	"base_url": "",
	"owner": "ality",
	"subject": "code review 7069053: cmd/dist: update for new flag parsing on Plan 9",
	"created": "2013-01-08 00:32:00.405940",
	"patchsets": [
		1,
		1002,
		3001,
		9001,
		13001
	],
	"modified": "2013-01-19 02:38:17.073560",
	"closed": true,
	"issue": 7069053
}