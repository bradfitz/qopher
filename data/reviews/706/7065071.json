{
	"description": "go.talks/pkg/present: add Tags feature\n\nBy tagging articles and slide decks, we can point readers toward\nrelated content.",
	"cc": [
		"campoy@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.talks",
			"disapproval": false,
			"date": "2013-01-11 00:16:42.372680",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2013-01-24 00:53:33.975330",
			"approval": false
		},
		{
			"sender": "campoy@google.com",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7065071/diff/1/pkg/present/doc.go\nFile pkg/present/doc.go (right):\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/doc.go#newcode22\npkg/present/doc.go:22: The subtitle, date, and tags lines are optional.\nExplain what tags are used for.\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/parse.go\nFile pkg/present/parse.go (right):\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/parse.go#newcode379\npkg/present/parse.go:379: tags[i] = strings.TrimSpace(tags[i])\nWhy not:\n\nfor _, tag := range tags {\n  doc.Tags = append(doc.Tags, strings.TrimSpace(tag)\n}\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/parse.go#newcode383\npkg/present/parse.go:383: doc.Time = t\nWe are changing the behavior dropping the \"break\"\nIs this intended?",
			"disapproval": false,
			"date": "2013-01-24 01:26:37.041080",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7065071/diff/1/pkg/present/doc.go\nFile pkg/present/doc.go (right):\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/doc.go#newcode22\npkg/present/doc.go:22: The subtitle, date, and tags lines are optional.\nOn 2013/01/24 01:26:37, campoy wrote:\n> Explain what tags are used for.\n\nThey can be used for anything. As far as the present package is concerned, they're just values that end up in the Doc struct's Tags field (which isn't discussed here).\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/parse.go\nFile pkg/present/parse.go (right):\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/parse.go#newcode379\npkg/present/parse.go:379: tags[i] = strings.TrimSpace(tags[i])\nOn 2013/01/24 01:26:37, campoy wrote:\n> Why not:\n> \n> for _, tag := range tags {\n>   doc.Tags = append(doc.Tags, strings.TrimSpace(tag)\n> }\n\nThis mutates the tags in place and then will do a single allocation (if necessary) to add the tags to doc.Tags.\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/parse.go#newcode383\npkg/present/parse.go:383: doc.Time = t\nOn 2013/01/24 01:26:37, campoy wrote:\n> We are changing the behavior dropping the \"break\"\n> Is this intended?\n\nYes, the behavior is changed because we now allow tags to appear after a time line.",
			"disapproval": false,
			"date": "2013-01-24 01:40:34.053730",
			"approval": false
		},
		{
			"sender": "campoy@google.com",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7065071/diff/1/pkg/present/doc.go\nFile pkg/present/doc.go (right):\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/doc.go#newcode22\npkg/present/doc.go:22: The subtitle, date, and tags lines are optional.\nWell, just explain something like that:\n\nThe Tags line contains a comma separated list of tags qualifying some aspect of the current document.\n\nOn 2013/01/24 01:40:34, adg wrote:\n> On 2013/01/24 01:26:37, campoy wrote:\n> > Explain what tags are used for.\n> \n> They can be used for anything. As far as the present package is concerned,\n> they're just values that end up in the Doc struct's Tags field (which isn't\n> discussed here).\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/parse.go\nFile pkg/present/parse.go (right):\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/parse.go#newcode379\npkg/present/parse.go:379: tags[i] = strings.TrimSpace(tags[i])\nI think the code I propose is slightly more readable, but I'll accept your code too.\n\nOn 2013/01/24 01:40:34, adg wrote:\n> On 2013/01/24 01:26:37, campoy wrote:\n> > Why not:\n> > \n> > for _, tag := range tags {\n> >   doc.Tags = append(doc.Tags, strings.TrimSpace(tag)\n> > }\n> \n> This mutates the tags in place and then will do a single allocation (if\n> necessary) to add the tags to doc.Tags.\n\nhttps://codereview.appspot.com/7065071/diff/1/pkg/present/parse.go#newcode383\npkg/present/parse.go:383: doc.Time = t\nOk\nOn 2013/01/24 01:40:34, adg wrote:\n> On 2013/01/24 01:26:37, campoy wrote:\n> > We are changing the behavior dropping the \"break\"\n> > Is this intended?\n> \n> Yes, the behavior is changed because we now allow tags to appear after a time\n> line.\n>",
			"disapproval": false,
			"date": "2013-01-24 01:46:14.394170",
			"approval": false
		},
		{
			"sender": "campoy@google.com",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn 2013/01/24 02:16:24, adg wrote:\n> On 24 January 2013 12:46, <mailto:campoy@google.com> wrote:\n> \n> > The Tags line contains a comma separated list of tags qualifying some\n> > aspect of the current document.\n> >\n> \n> Done.",
			"disapproval": false,
			"date": "2013-01-24 02:26:19.872370",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 24 January 2013 12:46, <campoy@google.com> wrote:\r\n\r\n> The Tags line contains a comma separated list of tags qualifying some\r\n> aspect of the current document.\r\n>\r\n\r\nDone.\r\n",
			"disapproval": false,
			"date": "2013-01-24 02:16:24.339320",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ae5e3e269e40&repo=talks ***\n\ngo.talks/pkg/present: add Tags feature\n\nBy tagging articles and slide decks, we can point readers toward\nrelated content.\n\nR=campoy\nCC=golang-dev\nhttps://codereview.appspot.com/7065071",
			"disapproval": false,
			"date": "2013-01-24 02:31:59.693040",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 7065071: go.talks/pkg/present: add Tags feature",
	"created": "2013-01-11 00:16:34.471900",
	"patchsets": [
		1,
		8001,
		11001
	],
	"modified": "2013-01-24 02:32:02.234720",
	"closed": true,
	"issue": 7065071
}