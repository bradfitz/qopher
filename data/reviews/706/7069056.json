{
	"description": "cmd/6c: Optimize rotate expressions to use rotate instructions.\n\nFor simplicity, only recognizes expressions of the exact form\n\"(x << a) | (x >> b)\" where x is a variable and a and b are\ninteger constant expressions that add to x's bit width.\n\nFixes issue 4629.\n\n$ cat rotate.c\nunsigned int\nrotate(unsigned int x)\n{\n        x = (x << 3) | (x >> (sizeof(x) * 8 - 3));\n        return x;\n}\n\n## BEFORE\n$ go tool 6c -S rotate.c\n(rotate.c:2)\tTEXT\trotate+0(SB),$0-8\n(rotate.c:2)\tMOVL\tx+0(FP),!!DX\n(rotate.c:4)\tMOVL\tDX,!!AX\n(rotate.c:4)\tSALL\t$3,!!AX\n(rotate.c:4)\tMOVL\tDX,!!CX\n(rotate.c:4)\tSHRL\t$29,!!CX\n(rotate.c:4)\tORL\tCX,!!AX\n(rotate.c:5)\tRET\t,!!\n(rotate.c:5)\tRET\t,!!\n(rotate.c:5)\tEND\t,!!\n\n## AFTER\n$ go tool 6c -S rotate.c\n(rotate.c:2)\tTEXT\trotate+0(SB),$0-8\n(rotate.c:4)\tMOVL\tx+0(FP),!!AX\n(rotate.c:4)\tROLL\t$3,!!AX\n(rotate.c:5)\tRET\t,!!\n(rotate.c:5)\tRET\t,!!\n(rotate.c:5)\tEND\t,!!",
	"cc": [
		"rsc@golang.org",
		"minux.ma@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mdempsky@google.com",
			"recipients": [
				"mdempsky@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-10 01:58:47.438840",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mdempsky@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please add 8c too. It should be mostly copy and paste.",
			"disapproval": false,
			"date": "2013-01-18 21:46:49.507680",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jan 18, 2013 at 5:27 PM,  <minux.ma@gmail.com> wrote:\r\n> I guess I will need to port these changes to cmd/5c.\r\n\r\nThat'd be great, thanks. While you're there please check that I did a\r\ngood enough job in 5g.\r\nIt looks like I couldn't find an actual rotate instruction, which\r\nseems a little surprising.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-18 22:28:19.092450",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mdempsky@google.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3a0b341a95de ***\n\ncmd/6c: Optimize rotate expressions to use rotate instructions.\n\nFor simplicity, only recognizes expressions of the exact form\n\"(x << a) | (x >> b)\" where x is a variable and a and b are\ninteger constant expressions that add to x's bit width.\n\nFixes issue 4629.\n\n$ cat rotate.c\nunsigned int\nrotate(unsigned int x)\n{\n        x = (x << 3) | (x >> (sizeof(x) * 8 - 3));\n        return x;\n}\n\n## BEFORE\n$ go tool 6c -S rotate.c\n(rotate.c:2)\tTEXT\trotate+0(SB),$0-8\n(rotate.c:2)\tMOVL\tx+0(FP),!!DX\n(rotate.c:4)\tMOVL\tDX,!!AX\n(rotate.c:4)\tSALL\t$3,!!AX\n(rotate.c:4)\tMOVL\tDX,!!CX\n(rotate.c:4)\tSHRL\t$29,!!CX\n(rotate.c:4)\tORL\tCX,!!AX\n(rotate.c:5)\tRET\t,!!\n(rotate.c:5)\tRET\t,!!\n(rotate.c:5)\tEND\t,!!\n\n## AFTER\n$ go tool 6c -S rotate.c\n(rotate.c:2)\tTEXT\trotate+0(SB),$0-8\n(rotate.c:4)\tMOVL\tx+0(FP),!!AX\n(rotate.c:4)\tROLL\t$3,!!AX\n(rotate.c:5)\tRET\t,!!\n(rotate.c:5)\tRET\t,!!\n(rotate.c:5)\tEND\t,!!\n\nR=rsc, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/7069056\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-18 22:29:58.218640",
			"approval": false
		},
		{
			"sender": "mdempsky@google.com",
			"recipients": [
				"mdempsky@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/18 21:46:49, rsc wrote:\n> Please add 8c too. It should be mostly copy and paste.\n\nDone.  Also verified that 8c similarly optimizes rotations for uint32 expressions but doesn't modify uint64 expressions.\n\nAs an aside, I notice now that neither 6c nor 8c optimizes rotations of uint8 or uint16 expressions.  I think this is actually correct though, since otherwise\n\n  uint16 x = 0x1000;\n  uint32 y = (x << 8) | (x >> 8);\n\nmight set y to 0x10 (wrong) instead of 0x100010 (correct).",
			"disapproval": false,
			"date": "2013-01-18 22:18:00.372910",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"mdempsky@google.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I guess I will need to port these changes to cmd/5c.\n\nhttps://codereview.appspot.com/7069056/diff/18001/src/cmd/6c/cgen.c\nFile src/cmd/6c/cgen.c (right):\n\nhttps://codereview.appspot.com/7069056/diff/18001/src/cmd/6c/cgen.c#newcode268\nsrc/cmd/6c/cgen.c:268: if(n->op == OOR && l->op == OASHL && r->op == OLSHR\nalso check for ^?\nbecause (x << 3) ^ (x >> (sizeof(x)*8-3)) is also a rotate.",
			"disapproval": false,
			"date": "2013-01-18 22:27:38.537670",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FWIW, I am not too worried about XOR, nor am I worried about >> | <<.\r\n6g etc handle these cases, since they are used by all our Go users. In\r\ncomparison, 6c is a much more specialized thing - basically only we\r\nuse it.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-18 22:29:11.304360",
			"approval": false
		}
	],
	"owner_email": "mdempsky@google.com",
	"private": false,
	"base_url": "",
	"owner": "mdempsky",
	"subject": "code review 7069056: cmd/6c: Optimize rotate expressions to use rotate instr...",
	"created": "2013-01-08 18:09:18.839520",
	"patchsets": [
		1,
		2001,
		5001,
		5002,
		2002,
		7002,
		11001,
		11002,
		14001,
		18001
	],
	"modified": "2013-01-18 22:47:38.052590",
	"closed": true,
	"issue": 7069056
}