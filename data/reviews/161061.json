{
	"description": "Handle \\r as a whitespace when parsing JSON string.\nFixes issue 272.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "thanks.\n\ncould you please fill out the CLA as described at\nhttp://golang.org/doc/contribute.html#copyright and\nlet me know once you have?\n\nthere is no need to send a separate AUTHORS/CONTRIBUTORS\nCL - we'll take care of that - just let me know when you've\ncompleted the appropriate contributor agreement.\n\nthanks.\nruss\n\n\nOn Thu, Nov 26, 2009 at 10:26,  <skibaa@gmail.com> wrote:\n> Reviewers: rsc,\n>\n> Message:\n> Hello rsc,\n>\n> I'd like you to review the following change.\n>\n>\n> Description:\n> Handle \\r as a whitespace when parsing JSON string.\n> Fixes issue 272.\n>\n> Please review this at http://codereview.appspot.com/161061\n>\n> Affected files:\n> \u00a0M src/pkg/json/parse.go\n> \u00a0M src/pkg/json/struct_test.go\n>\n>\n> Index: src/pkg/json/parse.go\n> ===================================================================\n> --- a/src/pkg/json/parse.go\n> +++ b/src/pkg/json/parse.go\n> @@ -198,7 +198,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0return c == '\"' || c == '[' || c == ']' || c == ':' || c == '{' || c\n> == '}' || c == ','\n> \u00a0}\n>\n> -func white(c byte) bool \u00a0 \u00a0 \u00a0 \u00a0{ return c == ' ' || c == '\\t' || c == '\\n'\n> || c == '\\v' }\n> +func white(c byte) bool \u00a0 \u00a0 \u00a0 \u00a0{ return c == ' ' || c == '\\t' || c == '\\r'\n> || c == '\\n' || c == '\\v' }\n>\n> \u00a0func skipwhite(p string, i int) int {\n> \u00a0 \u00a0 \u00a0 \u00a0for i < len(p) && white(p[i]) {\n> Index: src/pkg/json/struct_test.go\n> ===================================================================\n> --- a/src/pkg/json/struct_test.go\n> +++ b/src/pkg/json/struct_test.go\n> @@ -66,6 +66,17 @@\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0}\n>\n> +const whiteSpaceEncoded = \" \\t{\\n\\\"s\\\"\\r:\\\"string\\\"\\v}\"\n> +\n> +func TestUnmarshalWhitespace(t *testing.T) {\n> + \u00a0 \u00a0 \u00a0 var m myStruct;\n> + \u00a0 \u00a0 \u00a0 ok, errtok := Unmarshal(whiteSpaceEncoded, &m);\n> + \u00a0 \u00a0 \u00a0 if !ok {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 t.Fatalf(\"Unmarshal failed near %s\", errtok)\n> + \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 check(t, m.S == \"string\", \"string\", m.S);\n> +}\n> +\n> \u00a0func TestUnmarshal(t *testing.T) {\n> \u00a0 \u00a0 \u00a0 \u00a0var m myStruct;\n> \u00a0 \u00a0 \u00a0 \u00a0m.F = true;\n>\n>\n>\n",
			"disapproval": false,
			"date": "2009-11-29 23:27:14.785838",
			"approval": false
		},
		{
			"sender": "skibaa@gmail.com",
			"recipients": [
				"skibaa@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc,\n\nI'd like you to review the following change.",
			"disapproval": false,
			"date": "2009-11-26 18:26:46.964095",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"skibaa@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f7ba88b06ce9 ***\n\nHandle \\r as a whitespace when parsing JSON string.\nFixes issue 272.\n\nR=rsc\nhttp://codereview.appspot.com/161061\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2009-11-30 20:03:30.130079",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"skibaa@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2009-12-02 09:53:05.324435",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"skibaa@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2009-12-02 09:06:31.247815",
			"approval": false
		}
	],
	"owner_email": "skibaa@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "skibaa",
	"subject": "code review 161061: Handle \\r as a whitespace when parsing JSON string.",
	"created": "2009-11-26 18:14:18.622784",
	"patchsets": [
		1,
		1003
	],
	"modified": "2009-12-02 09:53:05.324678",
	"closed": false,
	"issue": 161061
}