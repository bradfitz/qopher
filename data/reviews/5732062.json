{
	"description": "go/build: add dependency test\n\nThis exercises the Import function but more importantly\ngives us a place to write down the policy for dependencies\nwithin the Go tree.  It also forces us to look at the dependencies,\nwhich may lead to adjustments.\n\nSurprises:\n - go/doc imports text/template, for HTMLEscape (could fix)\n - it is impossible to use math/big without fmt (unfixable)\n - it is impossible to use crypto/rand without math/big (unfixable)",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"gri@golang.org",
		"r@golang.org"
	],
	"reviewers": [
		"rogpeppe@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-05 19:01:48.037538",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 5, 2012 at 14:49,  <gri@golang.org> wrote:\n> this is only needed for non-macros, no?\n\nin theory yes, but it also keeps circular macro definitions\nfrom causing infinite recursion.\n",
			"disapproval": false,
			"date": "2012-03-05 20:13:52.215841",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Mon, Mar 5, 2012 at 11:01 AM, <rsc@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> go/build: add dependency test\n>\n> This exercises the Import function but more importantly\n> gives us a place to write down the policy for dependencies\n> within the Go tree.  It also forces us to look at the dependencies,\n> which may lead to adjustments.\n>\n> Surprises:\n>  - go/doc imports text/template, for HTMLEscape (could fix)\n>  - it is impossible to use math/big without fmt (unfixable)\n>  - it is impossible to use crypto/rand without math/big (unfixable)\n>\n> Please review this at http://codereview.appspot.com/**5732062/<http://codereview.appspot.com/5732062/>\n>\n> Affected files:\n>  A src/pkg/go/build/deps_test.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-05 19:43:32.381996",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\n(code, not a judgement of the dep. hierarchy)\n\nhttp://codereview.appspot.com/5732062/diff/1002/src/pkg/go/build/deps_test.go\nFile src/pkg/go/build/deps_test.go (right):\n\nhttp://codereview.appspot.com/5732062/diff/1002/src/pkg/go/build/deps_test.go#newcode328\nsrc/pkg/go/build/deps_test.go:328: m[p] = true\nthis is only needed for non-macros, no?",
			"disapproval": false,
			"date": "2012-03-05 19:49:30.377195",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping r\n",
			"disapproval": false,
			"date": "2012-03-05 22:08:00.738054",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gri@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5732062/diff/11002/src/pkg/go/build/deps_test.go\nFile src/pkg/go/build/deps_test.go (right):\n\nhttp://codereview.appspot.com/5732062/diff/11002/src/pkg/go/build/deps_test.go#newcode345\nsrc/pkg/go/build/deps_test.go:345: var gooses = []string{\"darwin\", \"freebsd\", \"linux\", \"netbsd\", \"openbsd\", \"plan9\", \"windows\"}\nsurely geese",
			"disapproval": false,
			"date": "2012-03-06 03:57:28.985349",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gri@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as e219970cdf9f ***\n\ngo/build: add dependency test\n\nThis exercises the Import function but more importantly\ngives us a place to write down the policy for dependencies\nwithin the Go tree.  It also forces us to look at the dependencies,\nwhich may lead to adjustments.\n\nSurprises:\n - go/doc imports text/template, for HTMLEscape (could fix)\n - it is impossible to use math/big without fmt (unfixable)\n - it is impossible to use crypto/rand without math/big (unfixable)\n\nR=golang-dev, bradfitz, gri, r\nCC=golang-dev\nhttp://codereview.appspot.com/5732062",
			"disapproval": false,
			"date": "2012-03-06 04:13:04.154853",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gri@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5732062/diff/1002/src/pkg/go/build/deps_test.go\nFile src/pkg/go/build/deps_test.go (right):\n\nhttp://codereview.appspot.com/5732062/diff/1002/src/pkg/go/build/deps_test.go#newcode20\nsrc/pkg/go/build/deps_test.go:20: // The map contains two kinds of entries: lower-case keys are\ninconsistent formatting, also hard to parse. fix:\n\nentries:\n\n1) Lower-case ...\n2) Upper-case ...\n\nhttp://codereview.appspot.com/5732062/diff/1002/src/pkg/go/build/deps_test.go#newcode25\nsrc/pkg/go/build/deps_test.go:25: // DO NOT CHANGE THIS DATA TO FIX BUILDS.\nhow will we know to update this table if things are deleted? maybe nothing but discipline\n\nperhaps codereview or some such could print a message whenever a CL changes the dependencies of a package.\n\nhttp://codereview.appspot.com/5732062/diff/1002/src/pkg/go/build/deps_test.go#newcode57\nsrc/pkg/go/build/deps_test.go:57: \"unicode/utf16\": {\"unicode\"},\nCL sent; can delete.\n\nhttp://codereview.appspot.com/5732062/diff/1002/src/pkg/go/build/deps_test.go#newcode58\nsrc/pkg/go/build/deps_test.go:58: \"unicode/utf8\":  {\"unicode\"},\nnot any more!\n\nhttp://codereview.appspot.com/5732062/diff/1002/src/pkg/go/build/deps_test.go#newcode224\nsrc/pkg/go/build/deps_test.go:224: // TODO: Trim dependencies for package net down to L0.\nsurely syscall will always be a dependency.",
			"disapproval": false,
			"date": "2012-03-06 03:22:23.742542",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nbut maybe spell out net's dependencies rather than just \"L2\", so we can\nwatch them shrink bit at a time?\n\nOn Mon, Mar 5, 2012 at 7:54 PM, Russ Cox <rsc@golang.org> wrote:\n\n> PTAL\n>\n> Updated table for unicode/* but more importantly\n> extended test to try all goos/goarch/cgo combinations,\n> so that go test behaves consistently on all systems\n> (go test -short will not; it only tests the local configuration).\n>\n",
			"disapproval": false,
			"date": "2012-03-06 04:00:10.188445",
			"approval": true
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 5 March 2012 19:01,  <rsc@golang.org> wrote:\n> Surprises:\n> \u00a0- it is impossible to use math/big without fmt (unfixable)\n\nwhile the type dependency is unfixable, i wonder if it\nmight be worth avoiding the calls to fmt.Fprintf.\n\nthen one could use math/big without linking in\nall of fmt and reflect.\n",
			"disapproval": false,
			"date": "2012-03-06 11:18:52.241990",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nUpdated table for unicode/* but more importantly\nextended test to try all goos/goarch/cgo combinations,\nso that go test behaves consistently on all systems\n(go test -short will not; it only tests the local configuration).\n",
			"disapproval": false,
			"date": "2012-03-06 03:54:54.237316",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gri@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5732062/diff/11002/src/pkg/go/build/deps_test.go\nFile src/pkg/go/build/deps_test.go (right):\n\nhttp://codereview.appspot.com/5732062/diff/11002/src/pkg/go/build/deps_test.go#newcode23\nsrc/pkg/go/build/deps_test.go:23: // 2) Upper-case keys define aliases for package sets, which can then\nunless it's \"C\" ?",
			"disapproval": false,
			"date": "2012-03-06 04:01:31.279576",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 6, 2012 at 06:18, roger peppe <rogpeppe@gmail.com> wrote:\n> while the type dependency is unfixable, i wonder if it\n> might be worth avoiding the calls to fmt.Fprintf.\n>\n> then one could use math/big without linking in\n> all of fmt and reflect.\n\nI'm not worried about it.\n",
			"disapproval": false,
			"date": "2012-03-06 14:25:33.837253",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5732062: go/build: add dependency test",
	"created": "2012-03-05 18:55:05.957128",
	"patchsets": [
		2001,
		1002,
		10001,
		11002,
		13002
	],
	"modified": "2012-03-06 11:18:52.327671",
	"closed": true,
	"issue": 5732062
}