{
	"description": "bufio: remove special error type, update docs\nUpdates issue 2836.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-07 03:55:34.102762",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=39b1d123ae64 ***\n\nbufio: remove special error type, update docs\nUpdates issue 2836.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5639045",
			"disapproval": false,
			"date": "2012-02-07 05:15:12.041283",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nOn Feb 6, 2012 7:55 PM, <r@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> bufio: remove special error type, update docs\n> Updates issue 2836.\n>\n> Please review this at http://codereview.appspot.com/**5639045/<http://codereview.appspot.com/5639045/>\n>\n> Affected files:\n>  M src/pkg/bufio/bufio.go\n>\n>\n> Index: src/pkg/bufio/bufio.go\n> ==============================**==============================**=======\n> --- a/src/pkg/bufio/bufio.go\n> +++ b/src/pkg/bufio/bufio.go\n> @@ -9,6 +9,7 @@\n>\n>  import (\n>        \"bytes\"\n> +       \"errors\"\n>        \"io\"\n>        \"strconv\"\n>        \"unicode/utf8\"\n> @@ -18,19 +19,12 @@\n>        defaultBufSize = 4096\n>  )\n>\n> -// Errors introduced by this package.\n> -type Error struct {\n> -       ErrorString string\n> -}\n> -\n> -func (err *Error) Error() string { return err.ErrorString }\n> -\n>  var (\n> -       ErrInvalidUnreadByte error = &Error{\"bufio: invalid use of\n> UnreadByte\"}\n> -       ErrInvalidUnreadRune error = &Error{\"bufio: invalid use of\n> UnreadRune\"}\n> -       ErrBufferFull        error = &Error{\"bufio: buffer full\"}\n> -       ErrNegativeCount     error = &Error{\"bufio: negative count\"}\n> -       errInternal          error = &Error{\"bufio: internal error\"}\n> +       ErrInvalidUnreadByte = errors.New(\"bufio: invalid use of\n> UnreadByte\")\n> +       ErrInvalidUnreadRune = errors.New(\"bufio: invalid use of\n> UnreadRune\")\n> +       ErrBufferFull        = errors.New(\"bufio: buffer full\")\n> +       ErrNegativeCount     = errors.New(\"bufio: negative count\")\n> +       errInternal          = errors.New(\"bufio: internal error\")\n>  )\n>\n>  // BufSizeError is the error representing an invalid buffer size.\n> @@ -208,7 +202,8 @@\n>  }\n>\n>  // ReadRune reads a single UTF-8 encoded Unicode character and returns the\n> -// rune and its size in bytes.\n> +// rune and its size in bytes. If the encoded rune is invalid, it\n> consumes one byte\n> +// and returns unicode.ReplacementChar (U+FFFD) with a size of 1.\n>  func (b *Reader) ReadRune() (r rune, size int, err error) {\n>        for b.r+utf8.UTFMax > b.w && !utf8.FullRune(b.buf[b.r:b.w]) &&\n> b.err == nil {\n>                b.fill()\n> @@ -392,6 +387,8 @@\n>  // buffered output\n>\n>  // Writer implements buffering for an io.Writer object.\n> +// If an error occurs writing to a Writer, no more data will be\n> +// accepted and all subsequent writes will return the error.\n>  type Writer struct {\n>        err error\n>        buf []byte\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-07 04:05:05.525013",
			"approval": true
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5639045: bufio: remove special error type, update docs",
	"created": "2012-02-07 03:55:26.894230",
	"patchsets": [
		1,
		1003
	],
	"modified": "2012-02-07 05:15:14.220770",
	"closed": true,
	"issue": 5639045
}