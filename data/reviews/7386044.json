{
	"description": "runtime: introduce entersyscallblock()\nIn preparation for the new scheduler.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-20 16:03:36.099980",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-02-20 16:05:13.517660",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM, sorry\r\n",
			"disapproval": true,
			"date": "2013-02-20 16:05:36.663770",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "entersyscall will soon be recording in g->sched the pc of its caller, for\r\nuse tracing the stack during garbage collection. For that reason it is\r\nimportant that the caller of entersyscall not return without also calling\r\nexitsyscall. Here, entersyscallblock is calling entersyscall and then\r\nreturning, which is not okay.\r\n\r\nPlease make entersyscallblock an assembly function that does a JMP / B to\r\nthe real entersyscall, or else make entersyscallblock a complete copy of\r\nentersyscall.\r\n",
			"disapproval": false,
			"date": "2013-02-20 16:08:54.012150",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/20 16:08:54, rsc wrote:\n> entersyscall will soon be recording in g->sched the pc of its caller, for\n> use tracing the stack during garbage collection. For that reason it is\n> important that the caller of entersyscall not return without also calling\n> exitsyscall. Here, entersyscallblock is calling entersyscall and then\n> returning, which is not okay.\n> \n> Please make entersyscallblock an assembly function that does a JMP / B to\n> the real entersyscall, or else make entersyscallblock a complete copy of\n> entersyscall.\n\nI see, I hoped to get away with just #pragma textflag 7 :)\n\nI've made it a complete copy of entersyscall. In the new scheduler their bodies are mostly different (except the pc/sp saving code), so it will be fine.",
			"disapproval": false,
			"date": "2013-02-20 16:17:13.438380",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/20 16:17:13, dvyukov wrote:\n> On 2013/02/20 16:08:54, rsc wrote:\n> > entersyscall will soon be recording in g->sched the pc of its caller, for\n> > use tracing the stack during garbage collection. For that reason it is\n> > important that the caller of entersyscall not return without also calling\n> > exitsyscall. Here, entersyscallblock is calling entersyscall and then\n> > returning, which is not okay.\n> > \n> > Please make entersyscallblock an assembly function that does a JMP / B to\n> > the real entersyscall, or else make entersyscallblock a complete copy of\n> > entersyscall.\n> \n> I see, I hoped to get away with just #pragma textflag 7 :)\n> \n> I've made it a complete copy of entersyscall. In the new scheduler their bodies\n> are mostly different (except the pc/sp saving code), so it will be fine.\n\nPTAL",
			"disapproval": false,
			"date": "2013-02-20 16:17:33.093670",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nthanks",
			"disapproval": false,
			"date": "2013-02-20 16:18:21.083870",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=d2f4fe93c8d6 ***\n\nruntime: introduce entersyscallblock()\nIn preparation for the new scheduler.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7386044",
			"disapproval": false,
			"date": "2013-02-20 16:23:50.349790",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 7386044: runtime: introduce entersyscallblock()",
	"created": "2013-02-20 16:02:50.430620",
	"patchsets": [
		1,
		2001,
		4001,
		11001,
		23001
	],
	"modified": "2013-02-20 16:23:51.442260",
	"closed": true,
	"issue": 7386044
}