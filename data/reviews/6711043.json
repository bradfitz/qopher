{
	"description": "present: fix another race condition\nSeveral bad things are posible.\n1. Since c.run() is executed in a separate goroutine,\nc.kill() can find c.cmd==nil. If so, it won't kill the process,\nbut will wait for it's completion. Deadlock.\n2. c.kill() can \"kill\" already completed \"go build\" process,\nbut then wait for completion of the compiled binary. Deadlock once again.\n\nWith this change it's impossible to kill \"go build\" process,\nbut it must not hang, right?",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go.talks/",
			"disapproval": false,
			"date": "2012-10-16 06:54:37.404250",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the fix, but I don't really like threading the inited channel through those functions. I've restructured the code a little here:\n\nhttps://codereview.appspot.com/6719050\n\nI'd love it if you would run your manual race detector over it ;)",
			"disapproval": false,
			"date": "2012-10-16 22:10:54.581800",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6711043: present: fix another race condition",
	"created": "2012-10-16 06:36:11.185530",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		7002,
		12001
	],
	"modified": "2012-11-17 13:16:06.957050",
	"closed": true,
	"issue": 6711043
}