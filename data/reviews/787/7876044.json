{
	"description": "cmd/cc, cmd/ld: do not overflow strings in symbol lookup.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7876044/diff/4001/src/cmd/cc/lexbody\nFile src/cmd/cc/lexbody (right):\n\nhttps://codereview.appspot.com/7876044/diff/4001/src/cmd/cc/lexbody#newcode266\nsrc/cmd/cc/lexbody:266: if(strlen(s->name) == l-1 && memcmp(s->name, symb, l) == 0)\nas symb is also nul-terminated C string, why not use\nstrncmp?\nif(strncmp(s->name, symb, l-1) == 0 && s->name[l] == '\\0')",
			"disapproval": false,
			"date": "2013-03-24 12:13:38.708300",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for fixing this.\n\nhttps://codereview.appspot.com/7876044/diff/4001/src/cmd/cc/lexbody\nFile src/cmd/cc/lexbody (right):\n\nhttps://codereview.appspot.com/7876044/diff/4001/src/cmd/cc/lexbody#newcode266\nsrc/cmd/cc/lexbody:266: if(strlen(s->name) == l-1 && memcmp(s->name, symb, l) == 0)\nis there a way to do this without ranging over the memory from s->name twice ? WIll strncmp help ?\n\nhttps://codereview.appspot.com/7876044/diff/4001/src/cmd/ld/lib.c\nFile src/cmd/ld/lib.c (right):\n\nhttps://codereview.appspot.com/7876044/diff/4001/src/cmd/ld/lib.c#newcode859\nsrc/cmd/ld/lib.c:859: if(strlen(s->name) == l-1 && memcmp(s->name, symb, l) == 0)\nsame",
			"disapproval": false,
			"date": "2013-03-24 12:00:52.223290",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-24 08:42:58.830300",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-24 12:33:43.595380",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7876044/diff/4001/src/cmd/cc/lexbody\nFile src/cmd/cc/lexbody (right):\n\nhttps://codereview.appspot.com/7876044/diff/4001/src/cmd/cc/lexbody#newcode266\nsrc/cmd/cc/lexbody:266: if(strlen(s->name) == l-1 && memcmp(s->name, symb, l) == 0)\nOn 2013/03/24 12:13:38, minux wrote:\n> as symb is also nul-terminated C string, why not use\n> strncmp?\n> if(strncmp(s->name, symb, l-1) == 0 && s->name[l] == '\\0')\n\nA simple strcmp seems easier and it's not less safe.",
			"disapproval": false,
			"date": "2013-03-24 12:35:41.229250",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2013-03-24 12:46:11.325790",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=d448734315d3 ***\n\ncmd/cc, cmd/ld: do not overflow strings in symbol lookup.\n\nR=golang-dev, dave, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/7876044",
			"disapproval": false,
			"date": "2013-03-25 07:20:27.257150",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 7876044: cmd/cc, cmd/ld: do not overflow strings in symbol lookup.",
	"created": "2013-03-24 08:42:45.023530",
	"patchsets": [
		1,
		2001,
		4001,
		10001,
		16001
	],
	"modified": "2013-03-25 07:20:28.401340",
	"closed": true,
	"issue": 7876044
}