{
	"description": "go.tools/cmd/vet: use types.Eval to simplify some checking.\nDepends on CL 10748044",
	"cc": [
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-12 04:43:22.417440",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/11206043/diff/1/cmd/vet/types.go\nFile cmd/vet/types.go (right):\n\nhttps://codereview.appspot.com/11206043/diff/1/cmd/vet/types.go#newcode71\ncmd/vet/types.go:71: func getType(definition string) types.Type {\nuse types.New now",
			"disapproval": false,
			"date": "2013-07-12 05:23:50.831520",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-12 05:26:26.672660",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/11206043/diff/6001/cmd/vet/types.go\nFile cmd/vet/types.go (right):\n\nhttps://codereview.appspot.com/11206043/diff/6001/cmd/vet/types.go#newcode66\ncmd/vet/types.go:66: var stringerMethodType = types.New(\"func() string\")\nuse var () ?\n\nhttps://codereview.appspot.com/11206043/diff/6001/cmd/vet/types.go#newcode67\ncmd/vet/types.go:67: var errorType = types.New(\"interface{ Error() string }\")\nalternative (faster) would be for this case only\n\ntypes.Universe.Lookup(nil, \"error\").Type()\n\nnot sure it's worth the symmetry break",
			"disapproval": false,
			"date": "2013-07-12 05:30:46.689840",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=f6a8a6b35389&repo=tools ***\n\ngo.tools/cmd/vet: use types.Eval to simplify some checking.\nDepends on CL 10748044\n\nR=gri\nCC=golang-dev\nhttps://codereview.appspot.com/11206043",
			"disapproval": false,
			"date": "2013-07-12 21:52:18.755300",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-07-15 00:59:09.495660",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 11206043: go.tools/cmd/vet: use types.Eval to simplify some checking.",
	"created": "2013-07-12 04:43:16.472790",
	"patchsets": [
		1,
		6001,
		11001,
		14001
	],
	"modified": "2013-07-15 00:59:11.913430",
	"closed": true,
	"issue": 11206043
}