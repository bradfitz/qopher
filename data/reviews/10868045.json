{
	"description": "go.talks: refactor Playground JavaScript API\n\nThese changes will be propagated to the go-tour, go-playground, and go core.",
	"cc": [
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nas long as you've tested this in all those contexts.\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/js/playground.js\nFile present/js/playground.js (right):\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/js/playground.js#newcode28\npresent/js/playground.js:28: Body: 'string', // content of write or end status message\ndelete trailing comma\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/js/playground.js#newcode35\npresent/js/playground.js:35: // Body string (\"killed\", for example).\nmention if the 'end' kind with a body signals a failure.\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/play.go\nFile present/play.go (right):\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/play.go#newcode20\npresent/play.go:20: func playScript(root string, transport string) {\n(root, transport string)\n\nextend the func comment to say what some valid transports are.\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/play.go#newcode30\npresent/play.go:30: fmt.Fprintf(&buf, \"\\ninitPlayground(new %v());\\n\", transport)\nparanoid me says you should JS-escape transport here, because one day it might come from user input.",
			"disapproval": false,
			"date": "2013-07-04 03:20:42.321490",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b3cad5151b4a&repo=talks ***\n\ngo.talks: refactor Playground JavaScript API\n\nThese changes will be propagated to the go-tour, go-playground, and go core.\n\nR=dsymonds\nCC=golang-dev\nhttps://codereview.appspot.com/10868045\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/js/playground.js\nFile present/js/playground.js (right):\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/js/playground.js#newcode28\npresent/js/playground.js:28: Body: 'string', // content of write or end status message\nOn 2013/07/04 03:20:42, dsymonds wrote:\n> delete trailing comma\n\nDone.\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/js/playground.js#newcode35\npresent/js/playground.js:35: // Body string (\"killed\", for example).\nOn 2013/07/04 03:20:42, dsymonds wrote:\n> mention if the 'end' kind with a body signals a failure.\n\nDone.\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/play.go\nFile present/play.go (right):\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/play.go#newcode20\npresent/play.go:20: func playScript(root string, transport string) {\nOn 2013/07/04 03:20:42, dsymonds wrote:\n> (root, transport string)\n> \n> extend the func comment to say what some valid transports are.\n\nDone.\n\nhttps://codereview.appspot.com/10868045/diff/12001/present/play.go#newcode30\npresent/play.go:30: fmt.Fprintf(&buf, \"\\ninitPlayground(new %v());\\n\", transport)\nOn 2013/07/04 03:20:42, dsymonds wrote:\n> paranoid me says you should JS-escape transport here, because one day it might\n> come from user input.\n\nIt really won't. Ever. I promise.",
			"disapproval": false,
			"date": "2013-07-04 03:28:06.563450",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dsymonds (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.talks",
			"disapproval": false,
			"date": "2013-07-04 03:06:54.368980",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 10868045: go.talks: refactor Playground JavaScript API",
	"created": "2013-07-04 01:34:49.665810",
	"patchsets": [
		1,
		3001,
		6001,
		9001,
		12001,
		9002
	],
	"modified": "2013-07-04 03:28:09.333000",
	"closed": true,
	"issue": 10868045
}