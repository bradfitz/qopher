{
	"description": "go.tools/go/types: record lhs identifier in switch lhs := rhs.(type)\n\nAdded testcase.",
	"cc": [
		"adonovan@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-23 22:38:04.500770",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11742043/diff/1/go/types/stmt.go\nFile go/types/stmt.go (right):\n\nhttps://codereview.appspot.com/11742043/diff/1/go/types/stmt.go#newcode359\ngo/types/stmt.go:359: check.recordObject(lhs, nil) // lhs is implicitly declared in each cause clause\nNot sure why this is needed: a nil entry in the Ident->Object mapping means \"no information\", doesn't it?\nDid you mean recordImplicit for this case?\n\nAn API test would be good.",
			"disapproval": false,
			"date": "2013-07-24 01:40:54.283190",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11742043/diff/1/go/types/stmt.go\nFile go/types/stmt.go (right):\n\nhttps://codereview.appspot.com/11742043/diff/1/go/types/stmt.go#newcode359\ngo/types/stmt.go:359: check.recordObject(lhs, nil) // lhs is implicitly declared in each cause clause\nOn 2013/07/24 01:40:54, adonovan wrote:\n> Not sure why this is needed: a nil entry in the Ident->Object mapping means \"no\n> information\", doesn't it?\n> Did you mean recordImplicit for this case?\n> \n> An API test would be good.\n\nAll identifiers are reported via the Objects map. Since there's no object declared at this place, it's nil. There's an API test but I missed the file. Will add.",
			"disapproval": false,
			"date": "2013-07-24 02:13:41.407020",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-24 02:31:56.312270",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-24 19:34:49.353670",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=fee886138b95&repo=tools ***\n\ngo.tools/go/types: record lhs identifier in switch lhs := rhs.(type)\n\nAdded testcase.\n\nR=adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/11742043",
			"disapproval": false,
			"date": "2013-07-24 19:38:54.101340",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 11742043: go.tools/go/types: record lhs identifier in switch lhs ...",
	"created": "2013-07-23 22:38:00.721260",
	"patchsets": [
		1,
		7001,
		9001,
		13001
	],
	"modified": "2013-07-24 19:38:55.741760",
	"closed": true,
	"issue": 11742043
}