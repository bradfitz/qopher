{
	"description": "math/rand: mention Seed in overview, add another top-level example\n\nFixes issue 5937.",
	"cc": [
		"golang-dev@googlegroups.com",
		"mirtchovski@gmail.com",
		"r@golang.org"
	],
	"reviewers": [
		"remyoudompheng@gmail.com"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-07-23 03:51:07.683890",
			"approval": false
		},
		{
			"sender": "mirtchovski@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11705043/diff/1/src/pkg/math/rand/example_test.go\nFile src/pkg/math/rand/example_test.go (right):\n\nhttps://codereview.appspot.com/11705043/diff/1/src/pkg/math/rand/example_test.go#newcode14\nsrc/pkg/math/rand/example_test.go:14: // These tests serve as an example but also makes sure we don't change\nsingular make.",
			"disapproval": false,
			"date": "2013-07-23 04:15:01.175810",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks\n\nhttps://codereview.appspot.com/11705043/diff/1/src/pkg/math/rand/example_test.go\nFile src/pkg/math/rand/example_test.go (right):\n\nhttps://codereview.appspot.com/11705043/diff/1/src/pkg/math/rand/example_test.go#newcode14\nsrc/pkg/math/rand/example_test.go:14: // These tests serve as an example but also makes sure we don't change\nOn 2013/07/23 04:15:01, aam wrote:\n> singular make.\n\nDone.",
			"disapproval": false,
			"date": "2013-07-23 04:16:58.741920",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11705043/diff/7001/src/pkg/math/rand/rand.go\nFile src/pkg/math/rand/rand.go (right):\n\nhttps://codereview.appspot.com/11705043/diff/7001/src/pkg/math/rand/rand.go#newcode8\nsrc/pkg/math/rand/rand.go:8: // source that may be seeded with the Seed function.\nRandom numbers are generated by a Source. Top-level functions, such as Float64 and Int, use a default shared Source  that produces a deterministic sequence of values each time a program is run. Use the Seed function to initialize the global Source if different behavior is required for each run.\n\nand then on the global Int function etc. say\n\n... from the default Source.",
			"disapproval": false,
			"date": "2013-07-23 05:01:05.823210",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, mirtchovski@gmail.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-07-23 05:07:51.235340",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-23 06:06:37.783590",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mirtchovski@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=f6a20261d881 ***\n\nmath/rand: mention Seed in overview, add another top-level example\n\nFixes issue 5937.\n\nR=golang-dev, mirtchovski, r\nCC=golang-dev\nhttps://codereview.appspot.com/11705043",
			"disapproval": false,
			"date": "2013-07-23 06:07:36.042100",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "2013/7/23  <r@golang.org>:\r\n>\r\n> https://codereview.appspot.com/11705043/diff/7001/src/pkg/math/rand/rand.go\r\n> File src/pkg/math/rand/rand.go (right):\r\n>\r\n> https://codereview.appspot.com/11705043/diff/7001/src/pkg/math/rand/rand.go#newcode8\r\n> src/pkg/math/rand/rand.go:8: // source that may be seeded with the Seed\r\n> function.\r\n> Random numbers are generated by a Source. Top-level functions, such as\r\n> Float64 and Int, use a default shared Source  that produces a\r\n> deterministic sequence of values each time a program is run. Use the\r\n> Seed function to initialize the global Source if different behavior is\r\n> required for each run.\r\n>\r\n> and then on the global Int function etc. say\r\n>\r\n> ... from the default Source.\r\n>\r\n\r\nShould it be mentioned that the \"default source\" is goroutine-safe?\r\nThe only Source factory function is NewSource returning a\r\nnon-goroutine safe version.\r\n\r\nR\u00e9my.\r\n",
			"disapproval": false,
			"date": "2013-07-23 06:12:13.309830",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It is probably worth mentioning. The assumption throughout the standard\r\nlibrary is \"not thread safe unless otherwise specified\".\r\n\r\n\r\nOn 23 July 2013 16:12, R\u00e9my Oudompheng <remyoudompheng@gmail.com> wrote:\r\n\r\n> 2013/7/23  <r@golang.org>:\r\n> >\r\n> >\r\n> https://codereview.appspot.com/11705043/diff/7001/src/pkg/math/rand/rand.go\r\n> > File src/pkg/math/rand/rand.go (right):\r\n> >\r\n> >\r\n> https://codereview.appspot.com/11705043/diff/7001/src/pkg/math/rand/rand.go#newcode8\r\n> > src/pkg/math/rand/rand.go:8: // source that may be seeded with the Seed\r\n> > function.\r\n> > Random numbers are generated by a Source. Top-level functions, such as\r\n> > Float64 and Int, use a default shared Source  that produces a\r\n> > deterministic sequence of values each time a program is run. Use the\r\n> > Seed function to initialize the global Source if different behavior is\r\n> > required for each run.\r\n> >\r\n> > and then on the global Int function etc. say\r\n> >\r\n> > ... from the default Source.\r\n> >\r\n>\r\n> Should it be mentioned that the \"default source\" is goroutine-safe?\r\n> The only Source factory function is NewSource returning a\r\n> non-goroutine safe version.\r\n>\r\n> R\u00e9my.\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-23 06:14:21.819890",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 11705043: math/rand: mention Seed in overview, add another top-le...",
	"created": "2013-07-23 03:50:58.882950",
	"patchsets": [
		1,
		7001,
		12001,
		15001
	],
	"modified": "2013-07-23 06:14:22.050920",
	"closed": true,
	"issue": 11705043
}