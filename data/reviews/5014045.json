{
	"description": "exp/norm: reverting to using strings.Repeat, as it doesn't look like exp/regexp\nis going to support returning multiple matches for a single repeated group.",
	"cc": [
		"r@golang.org",
		"rsc@golang.org",
		"mpvl@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I guess it works as advertised, it is just that I only get the value for the\nlast hit, whereas I want all 5 values. Is there a way to get all 5 values\nand the text for the other group with a single expression?\n\nThanks,\nMarcel\nOn Wed, Sep 14, 2011 at 5:06 PM, Russ Cox <rsc@golang.org> wrote:\n\n> exp/regexp supports {5}.\n> Please send me a test case if it's not working.\n>\n> Thanks.\n> Russ\n>\n\n\n\n-- \nTrying this for a while: http://go/OnlyCheckEmailTwiceADay.\nMarcel van Lohuizen -- Google Switzerland GmbH -- Identifikationsnummer:\nCH-020.4.028.116-1\n",
			"disapproval": false,
			"date": "2011-09-14 18:06:17.456449",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-09-14 13:28:23.526887",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "exp/regexp supports {5}.\nPlease send me a test case if it's not working.\n\nThanks.\nRuss\n",
			"disapproval": false,
			"date": "2011-09-14 15:06:03.551506",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Sep 14, 2011 at 14:06, Marcel van Lohuizen <mpvl@google.com> wrote:\n> I guess it works as advertised, it is just that I only get the value for the\n> last hit, whereas I want all 5 values. Is there a way to get all 5 values\n> and the text for the other group with a single expression?\n\nOh, I see what you want.  No, you can only get the overall string\n(by putting the parens around the x{5}).\n\nRuss\n",
			"disapproval": false,
			"date": "2011-09-14 18:23:04.905126",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"mpvl@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-09-14 18:41:07.290313",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"mpvl@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=50108c24a957 ***\n\nexp/norm: reverting to using strings.Repeat, as it doesn't look like exp/regexp\nis going to support returning multiple matches for a single repeated group.\n\nR=r, rsc, mpvl\nCC=golang-dev\nhttp://codereview.appspot.com/5014045",
			"disapproval": false,
			"date": "2011-09-16 09:28:58.117514",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 5014045: exp/norm: reverting to using strings.Repeat, as it does...",
	"created": "2011-09-14 13:27:16.918042",
	"patchsets": [
		1,
		2001,
		9001
	],
	"modified": "2011-09-16 09:29:00.058803",
	"closed": true,
	"issue": 5014045
}