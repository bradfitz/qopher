{
	"description": "runtime: use persistentalloc instead of mallocgc in symtab\nReduces heap size.",
	"cc": [
		"golang-dev@googlegroups.com",
		"khr@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-06-09 17:24:47.580240",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\r\n\r\n\r\nOn Sun, Jun 9, 2013 at 10:24 AM, <dvyukov@google.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://dvyukov%40google.com@**code.google.com/p/go/<http://40google.com@code.google.com/p/go/>\r\n>\r\n>\r\n> Description:\r\n> runtime: use persistentalloc instead of mallocgc in symtab\r\n> Reduces heap size.\r\n>\r\n> Please review this at https://codereview.appspot.**com/10140043/<https://codereview.appspot.com/10140043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/symtab.c\r\n>\r\n>\r\n> Index: src/pkg/runtime/symtab.c\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/symtab.c\r\n> +++ b/src/pkg/runtime/symtab.c\r\n> @@ -228,13 +228,12 @@\r\n>                 else if(runtime\u00b7strcmp(sym->name, (byte*)\".args\") == 0)\r\n>                         func[nfunc-1].args = sym->value;\r\n>                 else if(runtime\u00b7strcmp(sym->name, (byte*)\".nptrs\") == 0) {\r\n> -                       // TODO(cshapiro): use a dense representation for\r\n> gc information\r\n>                         if(sym->value != func[nfunc-1].args/sizeof(**uintptr))\r\n> {\r\n>                                 runtime\u00b7printf(\"runtime: pointer map size\r\n> and argument size disagree\\n\");\r\n>                                 runtime\u00b7throw(\"mangled symbol table\");\r\n>                         }\r\n>                         cap = ROUND(sym->value, 32) / 32;\r\n> -                       func[nfunc-1].ptrs.array =\r\n> runtime\u00b7mallocgc(cap*sizeof(**uint32), FlagNoPointers|FlagNoGC, 0, 1);\r\n> +                       func[nfunc-1].ptrs.array =\r\n> runtime\u00b7persistentalloc(cap***sizeof(uint32), sizeof(uint32));\r\n>                         func[nfunc-1].ptrs.len = 0;\r\n>                         func[nfunc-1].ptrs.cap = cap;\r\n>                 } else if(runtime\u00b7strcmp(sym->name, (byte*)\".ptrs\") == 0) {\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-10 03:53:09.512010",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=9f83389f6ff6 ***\n\nruntime: use persistentalloc instead of mallocgc in symtab\nReduces heap size.\n\nR=golang-dev, khr\nCC=golang-dev\nhttps://codereview.appspot.com/10140043",
			"disapproval": false,
			"date": "2013-06-10 05:17:51.188430",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 10140043: runtime: use persistentalloc instead of mallocgc in symtab",
	"created": "2013-06-09 17:24:36.773240",
	"patchsets": [
		1,
		3,
		4001,
		8001
	],
	"modified": "2013-06-10 05:17:52.237360",
	"closed": true,
	"issue": 10140043
}