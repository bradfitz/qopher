{
	"description": "encoding/xml: fix decoding of unknown entities in non-strict mode\n\nFixes issue 3447.",
	"cc": [
		"rsc@golang.org",
		"gustavo@niemeyer.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-15 16:06:08.700280",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6039045/diff/4003/src/pkg/encoding/xml/xml.go\nFile src/pkg/encoding/xml/xml.go (right):\n\nhttp://codereview.appspot.com/6039045/diff/4003/src/pkg/encoding/xml/xml.go#newcode889\nsrc/pkg/encoding/xml/xml.go:889: var text string\nI'm a little confused here.  It seems to me that right around here it should say\n\nif !semicolon {\n    if !d.Strict {\n        b0, b1 = 0, 0\n        d.buf.WriteByte('&')\n        d.buf.Write(d.tmp[0:i])\n        continue Input\n    }\n    d.err = d.syntaxError(\"character entity expression &\" + s + \" does not end in semicolon\")\n    return nil\n}",
			"disapproval": false,
			"date": "2012-04-25 02:46:51.116916",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6039045/diff/4003/src/pkg/encoding/xml/xml.go\nFile src/pkg/encoding/xml/xml.go (right):\n\nhttp://codereview.appspot.com/6039045/diff/4003/src/pkg/encoding/xml/xml.go#newcode889\nsrc/pkg/encoding/xml/xml.go:889: var text string\nOn 2012/04/25 02:46:51, rsc wrote:\n> I'm a little confused here.  It seems to me that right around here it should say\n\nBy that do you mean you'd prefer to have &#123 being unparsed as well? Sure, will do.",
			"disapproval": false,
			"date": "2012-04-25 03:08:47.925910",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Apr 24, 2012 at 23:08,  <n13m3y3r@gmail.com> wrote:\r\n> By that do you mean you'd prefer to have &#123 being unparsed as well?\r\n\r\nYes, it's not valid XML according to http://www.xml.com/axml/testaxml.htm\r\n",
			"disapproval": false,
			"date": "2012-04-25 03:26:57.425057",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Apr 25, 2012 at 00:26, Russ Cox <rsc@golang.org> wrote:\r\n> On Tue, Apr 24, 2012 at 23:08, \u00a0<n13m3y3r@gmail.com> wrote:\r\n>> By that do you mean you'd prefer to have &#123 being unparsed as well?\r\n>\r\n> Yes, it's not valid XML according to http://www.xml.com/axml/testaxml.htm\r\n\r\nThe question in this case is what non-strict parsing means, not what\r\nthe spec says.\r\n\r\n-- \r\nGustavo Niemeyer\r\nhttp://niemeyer.net\r\nhttp://niemeyer.net/plus\r\nhttp://niemeyer.net/twitter\r\nhttp://niemeyer.net/blog\r\n\r\n-- I'm not absolutely sure of anything.\r\n",
			"disapproval": false,
			"date": "2012-04-25 03:40:15.043296",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-25 03:45:34.465051",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2012-04-30 22:54:09.471841",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6039045/diff/14003/src/pkg/encoding/xml/xml.go\nFile src/pkg/encoding/xml/xml.go (right):\n\nhttp://codereview.appspot.com/6039045/diff/14003/src/pkg/encoding/xml/xml.go#newcode891\nsrc/pkg/encoding/xml/xml.go:891: d.err = d.syntaxError(\"invalid character entity &\" + s + \";\")\nsemi := \";\"\nif !semicolon {\n    semi = \" (no semicolon)\"\n}\ns/\";\"/semi/ here\n\nhttp://codereview.appspot.com/6039045/diff/14003/src/pkg/encoding/xml/xml_test.go\nFile src/pkg/encoding/xml/xml_test.go (right):\n\nhttp://codereview.appspot.com/6039045/diff/14003/src/pkg/encoding/xml/xml_test.go#newcode260\nsrc/pkg/encoding/xml/xml_test.go:260: shave = fmt.Sprintf(\"%#v\", have)\nDoes %#v not do the right thing if have is CharData?",
			"disapproval": false,
			"date": "2012-05-01 22:54:14.081850",
			"approval": true
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=28629925cb37 ***\n\nencoding/xml: fix decoding of unknown entities in non-strict mode\n\nFixes issue 3447.\n\nR=rsc, gustavo\nCC=golang-dev\nhttp://codereview.appspot.com/6039045\n\nhttp://codereview.appspot.com/6039045/diff/14003/src/pkg/encoding/xml/xml.go\nFile src/pkg/encoding/xml/xml.go (right):\n\nhttp://codereview.appspot.com/6039045/diff/14003/src/pkg/encoding/xml/xml.go#newcode891\nsrc/pkg/encoding/xml/xml.go:891: d.err = d.syntaxError(\"invalid character entity &\" + s + \";\")\nOn 2012/05/01 22:54:14, rsc wrote:\n> semi := \";\"\n> if !semicolon {\n>     semi = \" (no semicolon)\"\n> }\n> s/\";\"/semi/ here\n\nDone.\n\nhttp://codereview.appspot.com/6039045/diff/14003/src/pkg/encoding/xml/xml_test.go\nFile src/pkg/encoding/xml/xml_test.go (right):\n\nhttp://codereview.appspot.com/6039045/diff/14003/src/pkg/encoding/xml/xml_test.go#newcode260\nsrc/pkg/encoding/xml/xml_test.go:260: shave = fmt.Sprintf(\"%#v\", have)\nOn 2012/05/01 22:54:14, rsc wrote:\n> Does %#v not do the right thing if have is CharData?\n\nIt prints the bytes. Hard to diff visually.",
			"disapproval": false,
			"date": "2012-05-17 03:04:12.244268",
			"approval": false
		}
	],
	"owner_email": "n13m3y3r@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "niemeyer",
	"subject": "code review 6039045: encoding/xml: fix decoding of unknown entities in non-s...",
	"created": "2012-04-15 16:03:29.915549",
	"patchsets": [
		1,
		2001,
		5001,
		1002,
		4003,
		13001,
		14003,
		22001,
		25001
	],
	"modified": "2012-05-17 03:04:15.186909",
	"closed": true,
	"issue": 6039045
}