{
	"description": "cmd/ld: emit TLS relocations during external linking\n\nThis CL adds TLS relocation to the ELF .o file we write during external linking,\nso that the host linker (gcc) can decide the final location of m and g.\n\nSimilar relocations are not necessary on OS X because we use an alternate\nprogram start-time mechanism to acquire thread-local storage.\n\nSimilar relocations are not necessary on ARM or Plan 9 or Windows\nbecause external linking mode is not yet supported on those systems.\n\nOn almost all ELF systems, the references we use are like %fs:-0x4 or %gs:-0x4,\nwhich we write in 6a/8a as -0x4(FS) or -0x4(GS). On Linux/ELF, however,\nXen's lack of support for this mode forced us long ago to use a two-instruction\nsequence: first we load %gs:0x0 into a register r, and then we use -0x4(r).\n(The ELF program loader arranges that %gs:0x0 contains a regular pointer to\nthat same memory location.) In order to relocate those -0x4(r) references,\nthe linker must know where they are. This CL adds the equivalent notation\n-0x4(r)(GS*1) for this purpose: it assembles to the same encoding as -0x4(r)\nbut the (GS*1) indicates to the linker that this is one of those thread-local\nreferences that needs relocation.\n\nThanks to Elias Naur for reminding me about this missing piece and\nalso for writing the test.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"iant@golang.org"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello iant (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-25 21:50:48.531370",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7975045/diff/4001/src/cmd/8l/pass.c\nFile src/cmd/8l/pass.c (right):\n\nhttps://codereview.appspot.com/7975045/diff/4001/src/cmd/8l/pass.c#newcode304\nsrc/cmd/8l/pass.c:304: q->from.index = D_GS; // signal to relocate\nI don't think this is right when linkmode == LinkExternal.  In that case I think we should generate the relocation on the movl and let the system linker sort it out.  If we do this, we wind up using a TLS reloc to indirect into the TCB, which pretty much works, but only by accident, and is not what the reloc is intended to do.\n\nI will incorporate this CL into 7891047 and submit that instead.",
			"disapproval": false,
			"date": "2013-03-27 20:19:09.749670",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7975045: cmd/ld: emit TLS relocations during external linking",
	"created": "2013-03-25 21:45:32.496940",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2013-03-27 20:19:09.749670",
	"closed": false,
	"issue": 7975045
}