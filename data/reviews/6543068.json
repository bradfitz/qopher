{
	"description": "regexp/syntax: define accepted syntax\n\nUpdate issue 3953.",
	"cc": [
		"bradfitz@golang.org",
		"campoy@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Related: http://codereview.appspot.com/6555056\r\n",
			"disapproval": false,
			"date": "2012-09-24 16:21:43.467310",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-24 16:19:08.601800",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\r\n",
			"disapproval": false,
			"date": "2012-09-24 19:22:01.537970",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6543068/diff/5001/src/pkg/regexp/syntax/doc.go\nFile src/pkg/regexp/syntax/doc.go (right):\n\nhttps://codereview.appspot.com/6543068/diff/5001/src/pkg/regexp/syntax/doc.go#newcode19\nsrc/pkg/regexp/syntax/doc.go:19: .              any character, including newline (flag s=true)\nI know what this does, but the description seems confusing.\n\nI see you use this style below too, but it's not obvious to me at least that (flag X=true) means the preceding phrase is conditional.\n\n\"any character, including newline if (flag s=true)\" ?\n\nIt's better described in the table at the bottom at least.\n\nhttps://codereview.appspot.com/6543068/diff/5001/src/pkg/regexp/syntax/doc.go#newcode61\nsrc/pkg/regexp/syntax/doc.go:61: U              ungreedy: swap meaning of x* and x*?, x+ and x+?, etc (default false)\nwhoa. didn't know about U.",
			"disapproval": false,
			"date": "2012-09-24 16:31:43.117520",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ba5179494219 ***\n\nregexp/syntax: define accepted syntax\n\nUpdate issue 3953.\n\nR=bradfitz, campoy\nCC=golang-dev\nhttp://codereview.appspot.com/6543068",
			"disapproval": false,
			"date": "2012-09-24 19:34:02.216300",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6543068/diff/3004/src/pkg/regexp/syntax/doc.go\nFile src/pkg/regexp/syntax/doc.go (right):\n\nhttp://codereview.appspot.com/6543068/diff/3004/src/pkg/regexp/syntax/doc.go#newcode14\nsrc/pkg/regexp/syntax/doc.go:14: The regular expression understood by this package when parsing with the Perl flag is as follows.\nOn 2012/09/24 19:12:49, campoy1 wrote:\n> I'd use the plural here, but I'm not a native speaker.\n> s/expression/expressions/\n> s/is as/are as/\n\nIn general I try to use the singular form when writing technical documentation, as it is often more precise. However, this is just a bug: I meant to say \"regular expression syntax\". Fixed.\n\nhttp://codereview.appspot.com/6543068/diff/3004/src/pkg/regexp/syntax/doc.go#newcode39\nsrc/pkg/regexp/syntax/doc.go:39: x{n,m}         n or n+1 or ... or m x, prefer more\nOn 2012/09/24 19:12:49, campoy1 wrote:\n> prefer m?\n\nNo, it's prefer more. Prefer m does not explain what you get if the choice comes down to n+4 or n+5.\n\nhttp://codereview.appspot.com/6543068/diff/3004/src/pkg/regexp/syntax/doc.go#newcode42\nsrc/pkg/regexp/syntax/doc.go:42: x*?            zero or more x, prefer fewer\nOn 2012/09/24 19:12:49, campoy1 wrote:\n> prefer zero?\n\nSame.\n\nhttp://codereview.appspot.com/6543068/diff/3004/src/pkg/regexp/syntax/doc.go#newcode47\nsrc/pkg/regexp/syntax/doc.go:47: x{n}?          exactly n x\nOn 2012/09/24 19:12:49, campoy1 wrote:\n> Just curious, is there any difference with \"x{n}\" ?\n\nNo.",
			"disapproval": false,
			"date": "2012-09-24 19:19:56.093620",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6543068/diff/5001/src/pkg/regexp/syntax/doc.go\nFile src/pkg/regexp/syntax/doc.go (right):\n\nhttp://codereview.appspot.com/6543068/diff/5001/src/pkg/regexp/syntax/doc.go#newcode19\nsrc/pkg/regexp/syntax/doc.go:19: .              any character, including newline (flag s=true)\nOn 2012/09/24 16:31:43, bradfitz wrote:\n> I know what this does, but the description seems confusing.\n> \n> I see you use this style below too, but it's not obvious to me at least that\n> (flag X=true) means the preceding phrase is conditional.\n> \n> \"any character, including newline if (flag s=true)\" ?\n> \n> It's better described in the table at the bottom at least.\n> \n\nDone.",
			"disapproval": false,
			"date": "2012-09-24 16:52:38.681890",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Just some details, I'm very happy that looking for \"group\" or \"numbered\" works now :-)\n\nhttp://codereview.appspot.com/6543068/diff/3004/src/pkg/regexp/syntax/doc.go\nFile src/pkg/regexp/syntax/doc.go (right):\n\nhttp://codereview.appspot.com/6543068/diff/3004/src/pkg/regexp/syntax/doc.go#newcode14\nsrc/pkg/regexp/syntax/doc.go:14: The regular expression understood by this package when parsing with the Perl flag is as follows.\nI'd use the plural here, but I'm not a native speaker.\ns/expression/expressions/\ns/is as/are as/\n\nhttp://codereview.appspot.com/6543068/diff/3004/src/pkg/regexp/syntax/doc.go#newcode39\nsrc/pkg/regexp/syntax/doc.go:39: x{n,m}         n or n+1 or ... or m x, prefer more\nprefer m?\n\nhttp://codereview.appspot.com/6543068/diff/3004/src/pkg/regexp/syntax/doc.go#newcode42\nsrc/pkg/regexp/syntax/doc.go:42: x*?            zero or more x, prefer fewer\nprefer zero?\n\nhttp://codereview.appspot.com/6543068/diff/3004/src/pkg/regexp/syntax/doc.go#newcode47\nsrc/pkg/regexp/syntax/doc.go:47: x{n}?          exactly n x\nJust curious, is there any difference with \"x{n}\" ?",
			"disapproval": false,
			"date": "2012-09-24 19:12:49.012210",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"campoy@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-24 19:25:24.696140",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6543068: regexp/syntax: define accepted syntax",
	"created": "2012-09-24 16:17:29.391580",
	"patchsets": [
		1,
		2001,
		5001,
		3004,
		10001,
		6
	],
	"modified": "2012-09-24 19:34:02.973310",
	"closed": true,
	"issue": 6543068
}