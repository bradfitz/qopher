{
	"description": "all: fix typos",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ad7749774783 ***\n\nall: fix typos\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/8896045",
			"disapproval": false,
			"date": "2013-04-23 20:46:27.797510",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-04-23 20:22:36.216500",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Apr 23, 2013 at 1:37 PM, minux <minux.ma@gmail.com> wrote:\r\n\r\n>\r\n> On Wed, Apr 24, 2013 at 4:31 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>\r\n>> LGTM\r\n>>\r\n> Thank you, Brad.\r\n> I assume I don't need to get another approval from either r or adg for\r\n> typo fixes.\r\n>\r\n\r\nThis doesn't seem controversial.  Doc cleanups are still fine.\r\n\r\n\r\n> btw, at least for me, all my rietveld emails (those sent from\r\n> codereview.appspot.com,\r\n> e.g. those with the link to the CL page URL at the bottom) are being\r\n> classified as\r\n> spam by gmail, is this the case for you? How could I fix this?\r\n>\r\n\r\nMaybe create a filter in gmail that if it's from\r\ncodereview.appspot.comit's marked as not spam?\r\n\r\nOr flag them as \"Not spam\" a few times by hand and it should learn?\r\n",
			"disapproval": false,
			"date": "2013-04-23 20:41:13.820930",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\n\r\nOn Tue, Apr 23, 2013 at 1:22 PM, <minux.ma@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> all: fix typos\r\n>\r\n> Please review this at https://codereview.appspot.**com/8896045/<https://codereview.appspot.com/8896045/>\r\n>\r\n> Affected files:\r\n>   M doc/articles/image_package.**html\r\n>   M doc/codewalk/urlpoll.go\r\n>   M doc/devel/weekly.html\r\n>   M src/pkg/net/http/serve_test.go\r\n>   M src/pkg/net/http/server.go\r\n>   M src/pkg/runtime/chan.c\r\n>   M src/pkg/runtime/os_darwin.c\r\n>\r\n>\r\n> Index: doc/articles/image_package.**html\r\n> ==============================**==============================**=======\r\n> --- a/doc/articles/image_package.**html\r\n> +++ b/doc/articles/image_package.**html\r\n> @@ -130,7 +130,7 @@\r\n>  A <code>Rectangle</code> is inclusive at the top-left and exclusive at the\r\n>  bottom-right. For a <code>Point p</code> and a <code>Rectangle r</code>,\r\n>  <code>p.In(r)</code> if and only if\r\n> -<code>r.Min.X &lt;= p.X &amp;&amp; p.X &lt; r.Max.X</code>, and similarly\r\n> for <code>Y</code>. This is analagous to how\r\n> +<code>r.Min.X &lt;= p.X &amp;&amp; p.X &lt; r.Max.X</code>, and similarly\r\n> for <code>Y</code>. This is analogous to how\r\n>  a slice <code>s[i0:i1]</code> is inclusive at the low end and exclusive\r\n> at the\r\n>  high end. (Unlike arrays and slices, a <code>Rectangle</code> often has a\r\n>  non-zero origin.)\r\n> @@ -236,7 +236,7 @@\r\n>  The slice-based <code>Image</code> implementations also provide a\r\n>  <code>SubImage</code> method, which returns an <code>Image</code> backed\r\n> by the\r\n>  same array. Modifying the pixels of a sub-image will affect the pixels of\r\n> the\r\n> -original image, analagous to how modifying the contents of a sub-slice\r\n> +original image, analogous to how modifying the contents of a sub-slice\r\n>  <code>s[i0:i1]</code> will affect the contents of the original slice\r\n>  <code>s</code>.\r\n>  </p>\r\n> Index: doc/codewalk/urlpoll.go\r\n> ==============================**==============================**=======\r\n> --- a/doc/codewalk/urlpoll.go\r\n> +++ b/doc/codewalk/urlpoll.go\r\n> @@ -76,7 +76,7 @@\r\n>         return resp.Status\r\n>  }\r\n>\r\n> -// Sleep sleeps for an appropriate interval (dependant on error state)\r\n> +// Sleep sleeps for an appropriate interval (dependent on error state)\r\n>  // before sending the Resource to done.\r\n>  func (r *Resource) Sleep(done chan<- *Resource) {\r\n>         time.Sleep(pollInterval + errTimeout*time.Duration(r.**errCount))\r\n> Index: doc/devel/weekly.html\r\n> ==============================**==============================**=======\r\n> --- a/doc/devel/weekly.html\r\n> +++ b/doc/devel/weekly.html\r\n> @@ -2035,7 +2035,7 @@\r\n>  * spec: define order of multiple assignment.\r\n>  * syscall/windows: dll function load and calling changes (thanks Alex\r\n> Brainman).\r\n>  * syscall: add #ifdefs to fix the manual corrections in\r\n> ztypes_linux_arm.go (thanks Dave Cheney),\r\n> -       adjust Mount to accomodate stricter FS implementations.\r\n> +       adjust Mount to accommodate stricter FS implementations.\r\n>  * testing: fix time reported for failing tests.\r\n>  * utf8: add Valid and ValidString.\r\n>  * websocket: tweak hybi ReadHandshake to support Firefox (thanks Luca\r\n> Greco).\r\n> @@ -4362,7 +4362,7 @@\r\n>  To write to standard output, use fmt.Print[ln].\r\n>\r\n>  A new tool, govet, has been added to the Go distribution. Govet is a\r\n> static\r\n> -checker for Go programs. At the moment, and for the forseeable future,\r\n> +checker for Go programs. At the moment, and for the foreseeable future,\r\n>  it only checks arguments to print calls.\r\n>\r\n>  The cgo tool for writing Go bindings for C code has changed so that it no\r\n> Index: src/pkg/net/http/serve_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/http/serve_test.**go\r\n> +++ b/src/pkg/net/http/serve_test.**go\r\n> @@ -1966,7 +1966,7 @@\r\n>\r\n>  const someResponse = \"<html>some response</html>\"\r\n>\r\n> -// A Reponse that's just no bigger than 2KB, the buffer-before-chunking\r\n> threshold.\r\n> +// A Response that's just no bigger than 2KB, the buffer-before-chunking\r\n> threshold.\r\n>  var response = bytes.Repeat([]byte(**someResponse),\r\n> 2<<10/len(someResponse))\r\n>\r\n>  // Both Content-Type and Content-Length set. Should be no buffering.\r\n> Index: src/pkg/net/http/server.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/http/server.go\r\n> +++ b/src/pkg/net/http/server.go\r\n> @@ -1492,7 +1492,7 @@\r\n>\r\n>         // TLSNextProto optionally specifies a function to take over\r\n>         // ownership of the provided TLS connection when an NPN\r\n> -       // protocol upgrade has occured.  The map key is the protocol\r\n> +       // protocol upgrade has occurred.  The map key is the protocol\r\n>         // name negotiated. The Handler argument should be used to\r\n>         // handle HTTP requests and will initialize the Request's TLS\r\n>         // and RemoteAddr if not already set.  The connection is\r\n> Index: src/pkg/runtime/chan.c\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/chan.c\r\n> +++ b/src/pkg/runtime/chan.c\r\n> @@ -1011,7 +1011,7 @@\r\n>         c = cas->chan;\r\n>\r\n>         if(c->dataqsiz > 0)\r\n> -               runtime\u00b7throw(\"selectgo: shouldnt happen\");\r\n> +               runtime\u00b7throw(\"selectgo: shouldn't happen\");\r\n>\r\n>         if(debug)\r\n>                 runtime\u00b7printf(\"wait-return: sel=%p c=%p cas=%p kind=%d\\n\",\r\n> Index: src/pkg/runtime/os_darwin.c\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/os_darwin.c\r\n> +++ b/src/pkg/runtime/os_darwin.c\r\n> @@ -92,7 +92,7 @@\r\n>\r\n>         // Register our thread-creation callback (see\r\n> sys_darwin_{amd64,386}.s)\r\n>         // but only if we're not using cgo.  If we are using cgo we need\r\n> -       // to let the C pthread libary install its own thread-creation\r\n> callback.\r\n> +       // to let the C pthread library install its own thread-creation\r\n> callback.\r\n>         if(!runtime\u00b7iscgo) {\r\n>                 if(runtime\u00b7bsdthread_register(**) != 0) {\r\n>                         if(runtime\u00b7getenv(\"DYLD_**INSERT_LIBRARIES\"))\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-23 20:31:55.828990",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Apr 24, 2013 at 4:31 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> LGTM\r\n>\r\nThank you, Brad.\r\nI assume I don't need to get another approval from either r or adg for\r\ntypo fixes.\r\n\r\nbtw, at least for me, all my rietveld emails (those sent from\r\ncodereview.appspot.com,\r\ne.g. those with the link to the CL page URL at the bottom) are being\r\nclassified as\r\nspam by gmail, is this the case for you? How could I fix this?\r\n",
			"disapproval": false,
			"date": "2013-04-23 20:38:02.652880",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 8896045: all: fix typos",
	"created": "2013-04-23 20:16:46.615280",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		12001
	],
	"modified": "2013-04-23 20:46:32.094720",
	"closed": true,
	"issue": 8896045
}