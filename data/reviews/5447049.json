{
	"description": "exp/ssh: cleanup client auth tests\n\nThis CL cleans up the client auth tests, making the\nindividual test body more manageable.\n\nAlso, adds tests for rsa and dsa key negotiation.\n\nFinally, remove the package level use of the variable\nstrings, which avoids conflicting with the strings pkg.",
	"cc": [
		"gustav.paul@gmail.com",
		"agl@golang.org",
		"n13m3y3r@gmail.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"gustav.paul@gmail.com",
				"agl@golang.org",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The latest patch set changes the name of the mock server func from authServerListen to newMockAuthServer.",
			"disapproval": false,
			"date": "2011-12-04 03:07:56.335514",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"gustav.paul@gmail.com",
				"agl@golang.org",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for your comments Gustavo. PTAL\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go\nFile src/pkg/exp/ssh/client_auth_test.go (right):\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode65\nsrc/pkg/exp/ssh/client_auth_test.go:65: panic(\"known key type\")\nOn 2011/12/01 12:31:32, niemeyer wrote:\n> un? :-)\n\nDone.\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode105\nsrc/pkg/exp/ssh/client_auth_test.go:105: var rsakey *rsa.PrivateKey\nOn 2011/12/01 12:31:32, niemeyer wrote:\n> Would be nicer as a single var block: var ( ... )\n\nDone.\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode108\nsrc/pkg/exp/ssh/client_auth_test.go:108: var pw = password(\"tiger\")\nOn 2011/12/01 12:31:32, niemeyer wrote:\n> The k and pw names are on the short side for being globals.\n\nDone.\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode151\nsrc/pkg/exp/ssh/client_auth_test.go:151: t.Fatal(err)\nOn 2011/12/01 12:31:32, niemeyer wrote:\n> Fatal => Error+return, as we discussed in the prior CL.\n\nDone.\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode156\nsrc/pkg/exp/ssh/client_auth_test.go:156: defer c.Close()\nOn 2011/12/01 12:31:32, niemeyer wrote:\n> s/defer//\n\nDone.",
			"disapproval": false,
			"date": "2011-12-01 22:21:18.406603",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"gustav.paul@gmail.com",
				"agl@golang.org",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f6fdc83852fd ***\n\nexp/ssh: cleanup client auth tests\n\nThis CL cleans up the client auth tests, making the\nindividual test body more manageable.\n\nAlso, adds tests for rsa and dsa key negotiation.\n\nFinally, remove the package level use of the variable\nstrings, which avoids conflicting with the strings pkg.\n\nR=gustav.paul, agl, n13m3y3r, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5447049\n\nCommitter: Adam Langley <agl@golang.org>\n\nhttp://codereview.appspot.com/5447049/diff/2005/src/pkg/exp/ssh/client_auth_test.go\nFile src/pkg/exp/ssh/client_auth_test.go (right):\n\nhttp://codereview.appspot.com/5447049/diff/2005/src/pkg/exp/ssh/client_auth_test.go#newcode23\nsrc/pkg/exp/ssh/client_auth_test.go:23: const _pem = `-----BEGIN RSA PRIVATE KEY-----\nrenamed to testServerPrivateKey to make it clear which is the server key and which the client when I remove rsa.Generate.\n\nhttp://codereview.appspot.com/5447049/diff/2005/src/pkg/exp/ssh/client_auth_test.go#newcode70\nsrc/pkg/exp/ssh/client_auth_test.go:70: hashFunc := crypto.SHA1\nI added an \"import _ \"crypto/sha1\"\" to make sure that this New call works.\n\nhttp://codereview.appspot.com/5447049/diff/2005/src/pkg/exp/ssh/client_auth_test.go#newcode129\nsrc/pkg/exp/ssh/client_auth_test.go:129: rsakey, err = rsa.GenerateKey(rand.Reader, 512)\ngenerating even a 512-bit key is expensive on our ARM builders, so I switched this to using a static key.\n\nhttp://codereview.appspot.com/5447049/diff/2005/src/pkg/exp/ssh/client_auth_test.go#newcode164\nsrc/pkg/exp/ssh/client_auth_test.go:164: c.Close()\nmade this a defer higher up so that c doesn't leak",
			"disapproval": false,
			"date": "2011-12-06 23:13:32.032672",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"gustav.paul@gmail.com",
				"agl@golang.org",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nLeaving for agl or rsc.",
			"disapproval": false,
			"date": "2011-12-01 22:27:36.356446",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"gustav.paul@gmail.com",
				"agl@golang.org",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gustav.paul@gmail.com, agl@golang.org, n13m3y3r@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-01 10:52:23.469422",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"gustav.paul@gmail.com",
				"agl@golang.org",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go\nFile src/pkg/exp/ssh/client_auth_test.go (right):\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode65\nsrc/pkg/exp/ssh/client_auth_test.go:65: panic(\"known key type\")\nun? :-)\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode105\nsrc/pkg/exp/ssh/client_auth_test.go:105: var rsakey *rsa.PrivateKey\nWould be nicer as a single var block: var ( ... )\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode108\nsrc/pkg/exp/ssh/client_auth_test.go:108: var pw = password(\"tiger\")\nThe k and pw names are on the short side for being globals.\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode151\nsrc/pkg/exp/ssh/client_auth_test.go:151: t.Fatal(err)\nFatal => Error+return, as we discussed in the prior CL.\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode156\nsrc/pkg/exp/ssh/client_auth_test.go:156: defer c.Close()\ns/defer//\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode172\nsrc/pkg/exp/ssh/client_auth_test.go:172: defer c.Close()\ns/defer//\n\nhttps://codereview.appspot.com/5447049/diff/5002/src/pkg/exp/ssh/client_auth_test.go#newcode221\nsrc/pkg/exp/ssh/client_auth_test.go:221: c.Close()\nShould be above Fatalf.",
			"disapproval": false,
			"date": "2011-12-01 12:31:31.850738",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"gustav.paul@gmail.com",
				"agl@golang.org",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gustav.paul@gmail.com, agl@golang.org, n13m3y3r@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-01 22:21:52.982264",
			"approval": false
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"gustav.paul@gmail.com",
				"agl@golang.org",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2011/12/01 10:52:23, dfc wrote:\n> Hello mailto:gustav.paul@gmail.com, mailto:agl@golang.org, mailto:n13m3y3r@gmail.com, mailto:rsc@golang.org\n> (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n\nLGTM",
			"disapproval": false,
			"date": "2011-12-01 11:48:37.719842",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"gustav.paul@gmail.com",
				"agl@golang.org",
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gustav.paul@gmail.com, agl@golang.org, n13m3y3r@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-06 20:25:24.604880",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 5447049: exp/ssh: cleanup client auth tests",
	"created": "2011-11-30 11:29:14.476588",
	"patchsets": [
		1,
		3,
		5001,
		5002,
		1006,
		7001,
		2005
	],
	"modified": "2011-12-07 08:27:26.311228",
	"closed": true,
	"issue": 5447049
}