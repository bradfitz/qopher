{
	"description": "cmd/gc: add GOEXPERIMENT=zerostack to clear stack on function entry\n\nThis is expensive but it might be useful in cases where\npeople are suffering from false positives during garbage\ncollection and are willing to trade the CPU time for getting\nrid of the false positives.\n\nOn the other hand it only eliminates false positives caused\nby other function calls, not false positives caused by dead\ntemporaries stored in the current function call.\n\nThe 5g/6g/8g changes were pulled out of the history, from\nthe last time we needed to do this (to work around a goto bug).\nThe code in go.h, lex.c, pgen.c is new but tiny.",
	"cc": [
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"remyoudompheng@gmail.com",
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-12-17 19:32:23.667480",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1542912cf09d ***\n\ncmd/gc: add GOEXPERIMENT=zerostack to clear stack on function entry\n\nThis is expensive but it might be useful in cases where\npeople are suffering from false positives during garbage\ncollection and are willing to trade the CPU time for getting\nrid of the false positives.\n\nOn the other hand it only eliminates false positives caused\nby other function calls, not false positives caused by dead\ntemporaries stored in the current function call.\n\nThe 5g/6g/8g changes were pulled out of the history, from\nthe last time we needed to do this (to work around a goto bug).\nThe code in go.h, lex.c, pgen.c is new but tiny.\n\nR=ken2\nCC=golang-dev\nhttps://codereview.appspot.com/6938073",
			"disapproval": false,
			"date": "2012-12-17 19:35:07.124750",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FWIW\r\n\r\n$ ~/go/misc/benchcmp pre after\r\nbenchmark                 old ns/op    new ns/op    delta\r\nBenchmarkBinaryTree17    6609304439   7628303665  +15.42%\r\nBenchmarkFannkuch11      4022145484   4004236646   -0.45%\r\nBenchmarkGobDecode         22689501     28294911  +24.70%\r\nBenchmarkGobEncode         14140080     20895874  +47.78%\r\nBenchmarkGzip             573818598    597825448   +4.18%\r\nBenchmarkGunzip           153709528    182790682  +18.92%\r\nBenchmarkJSONEncode        52379183     84300750  +60.94%\r\nBenchmarkJSONDecode       122344908    203004074  +65.93%\r\nBenchmarkMandelbrot200      4922443      4782015   -2.85%\r\nBenchmarkParse              8182503     10212874  +24.81%\r\nBenchmarkRevcomp         1091600620   1019171563   -6.64%\r\nBenchmarkTemplate         163358779    200874163  +22.97%\r\n\r\nbenchmark                  old MB/s     new MB/s  speedup\r\nBenchmarkGobDecode            33.83        27.13    0.80x\r\nBenchmarkGobEncode            54.28        36.73    0.68x\r\nBenchmarkGzip                 33.82        32.46    0.96x\r\nBenchmarkGunzip              126.24       106.16    0.84x\r\nBenchmarkJSONEncode           37.05        23.02    0.62x\r\nBenchmarkJSONDecode           15.86         9.56    0.60x\r\nBenchmarkParse                 7.08         5.67    0.80x\r\nBenchmarkRevcomp             232.84       249.39    1.07x\r\nBenchmarkTemplate             11.88         9.66    0.81x\r\n\r\n\r\nOn Mon, Dec 17, 2012 at 11:32 AM, <rsc@golang.org> wrote:\r\n\r\n> Reviewers: ken2,\r\n>\r\n> Message:\r\n> Hello ken2 (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> cmd/gc: add GOEXPERIMENT=zerostack to clear stack on function entry\r\n>\r\n> This is expensive but it might be useful in cases where\r\n> people are suffering from false positives during garbage\r\n> collection and are willing to trade the CPU time for getting\r\n> rid of the false positives.\r\n>\r\n> On the other hand it only eliminates false positives caused\r\n> by other function calls, not false positives caused by dead\r\n> temporaries stored in the current function call.\r\n>\r\n> The 5g/6g/8g changes were pulled out of the history, from\r\n> the last time we needed to do this (to work around a goto bug).\r\n> The code in go.h, lex.c, pgen.c is new but tiny.\r\n>\r\n> Please review this at https://codereview.appspot.**com/6938073/<https://codereview.appspot.com/6938073/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/5g/gsubr.c\r\n>   M src/cmd/6g/gsubr.c\r\n>   M src/cmd/8g/gsubr.c\r\n>   M src/cmd/gc/go.h\r\n>   M src/cmd/gc/lex.c\r\n>   M src/cmd/gc/pgen.c\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-12-20 19:27:22.613150",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Did you mean on function exit rather than on function entry?\r\nI think I got some occurences of this and it could be interesting to try.\r\n\r\nR\u00e9my.\r\n",
			"disapproval": false,
			"date": "2012-12-19 21:32:12.032590",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Dec 19, 2012 at 4:32 PM, R\u00e9my Oudompheng\r\n<remyoudompheng@gmail.com> wrote:\r\n> Did you mean on function exit rather than on function entry?\r\n> I think I got some occurences of this and it could be interesting to try.\r\n\r\nI meant entry; I'm pretty sure that's what it does.\r\nWe only look for pointers above the stack pointer, so exiting from a function\r\n(moving the stack pointer up) invalidates the frame being exited just fine.\r\nWhen we call some other function (moving the stack pointer back down)\r\nthat's when we need to clear the possible leftovers.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-12-20 00:49:58.316400",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "That's about what I expected as far as slowdown. JSON, Gob, and\r\nTemplate are the highly recursive ones.\r\n",
			"disapproval": false,
			"date": "2012-12-22 15:16:33.491150",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6938073: cmd/gc: add GOEXPERIMENT=zerostack to clear stack on fu...",
	"created": "2012-12-17 19:14:23.366230",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2012-12-20 19:27:22.682170",
	"closed": true,
	"issue": 6938073
}