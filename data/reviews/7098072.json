{
	"description": "mime, strconv: Make testdata more consistent.\n\nAll packages place testdata in a specific directory with the name\n\"testdata\". The mime and strconv packages have been updated to use\nthe same convention.\n\nmime: Move \"mime/test.types\" to \"mime/testdata/test.types\". Update test\ncode accordingly.\n\nstrconv: Move \"strconv/testfp.txt\" to \"strconv/testdata/testfp.txt\".\nUpdate test code accordingly.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-21 07:34:05.875530",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Sun, Jan 20, 2013 at 11:34 PM, <r.eklind.87@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> mime, strconv: Make testdata more consistent.\r\n>\r\n> All packages place testdata in a specific directory with the name\r\n> \"testdata\". The mime and strconv packages have been updated to use\r\n> the same convention.\r\n>\r\n> mime: Move \"mime/test.types\" to \"mime/testdata/test.types\". Update test\r\n> code accordingly.\r\n>\r\n> strconv: Move \"strconv/testfp.txt\" to \"strconv/testdata/testfp.txt\".\r\n> Update test code accordingly.\r\n>\r\n> Please review this at https://codereview.appspot.**com/7098072/<https://codereview.appspot.com/7098072/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/mime/testdata/test.**types\r\n>   M src/pkg/mime/type_unix.go\r\n>   M src/pkg/strconv/fp_test.go\r\n>   M src/pkg/strconv/testdata/**testfp.txt\r\n>\r\n>\r\n> Index: src/pkg/mime/testdata/test.**types\r\n> ==============================**==============================**=======\r\n> rename from src/pkg/mime/test.types\r\n> rename to src/pkg/mime/testdata/test.**types\r\n> Index: src/pkg/mime/type_unix.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/mime/type_unix.go\r\n> +++ b/src/pkg/mime/type_unix.go\r\n> @@ -52,7 +52,7 @@\r\n>  }\r\n>\r\n>  func initMimeForTests() map[string]string {\r\n> -       typeFiles = []string{\"test.types\"}\r\n> +       typeFiles = []string{\"testdata/test.types\"**}\r\n>         return map[string]string{\r\n>                 \".t1\":  \"application/test\",\r\n>                 \".t2\":  \"text/test; charset=utf-8\",\r\n> Index: src/pkg/strconv/fp_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/strconv/fp_test.go\r\n> +++ b/src/pkg/strconv/fp_test.go\r\n> @@ -96,9 +96,9 @@\r\n>  }\r\n>\r\n>  func TestFp(t *testing.T) {\r\n> -       f, err := os.Open(\"testfp.txt\")\r\n> +       f, err := os.Open(\"testdata/testfp.txt\")\r\n>         if err != nil {\r\n> -               t.Fatal(\"testfp: open testfp.txt:\", err)\r\n> +               t.Fatal(\"testfp: open testdata/testfp.txt:\", err)\r\n>         }\r\n>         defer f.Close()\r\n>\r\n> @@ -111,7 +111,7 @@\r\n>                         break\r\n>                 }\r\n>                 if err2 != nil {\r\n> -                       t.Fatal(\"testfp: read testfp.txt: \" + err2.Error())\r\n> +                       t.Fatal(\"testfp: read testdata/testfp.txt: \" +\r\n> err2.Error())\r\n>                 }\r\n>                 line = line[0 : len(line)-1]\r\n>                 lineno++\r\n> @@ -120,7 +120,7 @@\r\n>                 }\r\n>                 a := strings.Split(line, \" \")\r\n>                 if len(a) != 4 {\r\n> -                       t.Error(\"testfp.txt:\", lineno, \": wrong field\r\n> count\")\r\n> +                       t.Error(\"testdata/testfp.txt:\"**, lineno, \":\r\n> wrong field count\")\r\n>                         continue\r\n>                 }\r\n>                 var s string\r\n> @@ -130,21 +130,21 @@\r\n>                         var ok bool\r\n>                         v, ok = myatof64(a[2])\r\n>                         if !ok {\r\n> -                               t.Error(\"testfp.txt:\", lineno, \": cannot\r\n> atof64 \", a[2])\r\n> +                               t.Error(\"testdata/testfp.txt:\"**, lineno,\r\n> \": cannot atof64 \", a[2])\r\n>                                 continue\r\n>                         }\r\n>                         s = fmt.Sprintf(a[1], v)\r\n>                 case \"float32\":\r\n>                         v1, ok := myatof32(a[2])\r\n>                         if !ok {\r\n> -                               t.Error(\"testfp.txt:\", lineno, \": cannot\r\n> atof32 \", a[2])\r\n> +                               t.Error(\"testdata/testfp.txt:\"**, lineno,\r\n> \": cannot atof32 \", a[2])\r\n>                                 continue\r\n>                         }\r\n>                         s = fmt.Sprintf(a[1], v1)\r\n>                         v = float64(v1)\r\n>                 }\r\n>                 if s != a[3] {\r\n> -                       t.Error(\"testfp.txt:\", lineno, \": \", a[0], \" \",\r\n> a[1], \" \", a[2], \" (\", v, \") \",\r\n> +                       t.Error(\"testdata/testfp.txt:\"**, lineno, \": \",\r\n> a[0], \" \", a[1], \" \", a[2], \" (\", v, \") \",\r\n>                                 \"want \", a[3], \" got \", s)\r\n>                 }\r\n>         }\r\n> Index: src/pkg/strconv/testdata/**testfp.txt\r\n> ==============================**==============================**=======\r\n> rename from src/pkg/strconv/testfp.txt\r\n> rename to src/pkg/strconv/testdata/**testfp.txt\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-22 21:44:28.946170",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=6e65a37827c3 ***\n\nmime, strconv: Make testdata more consistent.\n\nAll packages place testdata in a specific directory with the name\n\"testdata\". The mime and strconv packages have been updated to use\nthe same convention.\n\nmime: Move \"mime/test.types\" to \"mime/testdata/test.types\". Update test\ncode accordingly.\n\nstrconv: Move \"strconv/testfp.txt\" to \"strconv/testdata/testfp.txt\".\nUpdate test code accordingly.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7098072\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2013-01-22 21:44:39.649400",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-02-22 08:10:02.249540",
			"approval": false
		}
	],
	"owner_email": "r.eklind.87@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "u",
	"subject": "code review 7098072: mime, strconv: Make testdata more consistent.",
	"created": "2013-01-21 07:28:01.268610",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2013-02-22 08:10:07.035860",
	"closed": true,
	"issue": 7098072
}