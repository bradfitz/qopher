{
	"description": "net/http: added ParseTime function.\n\nParses a time header value into a time.Time according to rfc2616 sec 3.3.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"rsc@golang.org",
		"r@golang.org",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"patrick.allen.higgins@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "What about other datetime style headers like Expires ?",
			"disapproval": false,
			"date": "2012-06-28 06:16:41.736120",
			"approval": false
		},
		{
			"sender": "patrick.allen.higgins@gmail.com",
			"recipients": [
				"patrick.allen.higgins@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-06-27 19:51:31.360042",
			"approval": false
		},
		{
			"sender": "patrick.allen.higgins@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Good point. I hadn't needed Expires yet, but I do today. :-)\r\n\r\nIt seems most flexible to have single function to parse time based\r\nheader values and let the caller pull them out the http.Header object\r\n(or anywhere else) themselves to pass it to the function. I would be\r\nhappy with that.\r\n\r\nThere could also be some convenience methods to get the header value\r\nand parse it in a single call.\r\n\r\nOn Thu, Jun 28, 2012 at 12:16 AM,  <dave@cheney.net> wrote:\r\n> What about other datetime style headers like Expires ?\r\n>\r\n> http://codereview.appspot.com/6344046/\r\n",
			"disapproval": false,
			"date": "2012-06-28 16:35:16.471656",
			"approval": false
		},
		{
			"sender": "patrick.allen.higgins@gmail.com",
			"recipients": [
				"patrick.allen.higgins@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-28 22:26:59.325591",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"patrick.allen.higgins@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm fine with this (especially given http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3), but I defer to Rob or Russ about whether this meets the utility bar.",
			"disapproval": false,
			"date": "2012-08-06 03:51:22.715150",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "... although I just noticed the CL description is no longer accurate.\r\n\r\nOn Mon, Aug 6, 2012 at 1:51 PM, <bradfitz@golang.org> wrote:\r\n\r\n> I'm fine with this (especially given\r\n> http://www.w3.org/Protocols/**rfc2616/rfc2616-sec3.html#**sec3.3<http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.3>),\r\n> but I\r\n> defer to Rob or Russ about whether this meets the utility bar.\r\n>\r\n> http://codereview.appspot.com/**6344046/<http://codereview.appspot.com/6344046/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-08-06 03:53:30.203400",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please fix CL description (hg change).\r\n",
			"disapproval": false,
			"date": "2012-08-06 19:49:19.409980",
			"approval": false
		},
		{
			"sender": "patrick.allen.higgins@gmail.com",
			"recipients": [
				"patrick.allen.higgins@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net, rsc@golang.org, r@golang.org (cc: bradfitz@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-06 20:05:43.240490",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"patrick.allen.higgins@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6344046/diff/11002/src/pkg/net/http/header.go\nFile src/pkg/net/http/header.go (right):\n\nhttp://codereview.appspot.com/6344046/diff/11002/src/pkg/net/http/header.go#newcode57\nsrc/pkg/net/http/header.go:57: // ParseTime tries parsing a header using each of the three formats required\n// ParseTime parses a time header (such as the Date: header),\n// trying each of the three formats allowed by HTTP/1.1:\n// TimeFormat, time.RFC850, and time.ANSIC.\n\nhttp://codereview.appspot.com/6344046/diff/11002/src/pkg/net/http/header.go#newcode59\nsrc/pkg/net/http/header.go:59: func ParseTime(s string) (t time.Time, err error) {\ns/s/text/\n\nhttp://codereview.appspot.com/6344046/diff/11002/src/pkg/net/http/header.go#newcode60\nsrc/pkg/net/http/header.go:60: for _, layout := range []string{TimeFormat, time.RFC850, time.ANSIC} {\nPlease make this a top-level variable\n\nvar timeFormats = []string{\n   TimeFormat,\n   time.RFC850,\n   time.ANSIC,\n}\n\nand then use it in this function. That avoids constructing the slice every time you run the function.",
			"disapproval": false,
			"date": "2012-08-06 20:27:02.540970",
			"approval": false
		},
		{
			"sender": "patrick.allen.higgins@gmail.com",
			"recipients": [
				"patrick.allen.higgins@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net, rsc@golang.org, r@golang.org (cc: bradfitz@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-06 20:45:55.280980",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"patrick.allen.higgins@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-08-31 19:57:18.548360",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"patrick.allen.higgins@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=c5391c55fb2f ***\n\nnet/http: added ParseTime function.\n\nParses a time header value into a time.Time according to rfc2616 sec 3.3.\n\nR=golang-dev, dave, rsc, r\nCC=bradfitz, golang-dev\nhttp://codereview.appspot.com/6344046\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-08-31 22:10:22.533800",
			"approval": false
		},
		{
			"sender": "patrick.allen.higgins@gmail.com",
			"recipients": [
				"patrick.allen.higgins@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-02-04 20:10:43.626850",
			"approval": false
		},
		{
			"sender": "patrick.allen.higgins@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry for the noise. I was trying to create my second CL and when running\r\n\"hg sync\" I was given this message:\r\n\r\nRemoving unmodified files from CL 6344046:\r\nsrc/pkg/net/http/header.go\r\nsrc/pkg/net/http/header_test.go\r\nCL 6344046 has no files; delete (abandon) with hg change -d 6344046\r\n\r\nI followed the instructions to run \"hg change -d 6344046\" but that doesn't\r\nseem like what I really wanted to do.\r\n\r\nWhat should I have done instead?\r\n\r\n\r\nOn Mon, Feb 4, 2013 at 1:10 PM, <patrick.allen.higgins@gmail.com> wrote:\r\n\r\n> *** Abandoned ***\r\n>\r\n> https://codereview.appspot.**com/6344046/<https://codereview.appspot.com/6344046/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-04 20:42:54.434310",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "hg -D 6344046\r\n\r\nOn Tue, Feb 5, 2013 at 7:42 AM, Patrick Higgins\r\n<patrick.allen.higgins@gmail.com> wrote:\r\n> Sorry for the noise. I was trying to create my second CL and when running\r\n> \"hg sync\" I was given this message:\r\n>\r\n> Removing unmodified files from CL 6344046:\r\n> src/pkg/net/http/header.go\r\n> src/pkg/net/http/header_test.go\r\n> CL 6344046 has no files; delete (abandon) with hg change -d 6344046\r\n>\r\n> I followed the instructions to run \"hg change -d 6344046\" but that doesn't\r\n> seem like what I really wanted to do.\r\n>\r\n> What should I have done instead?\r\n>\r\n>\r\n> On Mon, Feb 4, 2013 at 1:10 PM, <patrick.allen.higgins@gmail.com> wrote:\r\n>>\r\n>> *** Abandoned ***\r\n>>\r\n>> https://codereview.appspot.com/6344046/\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-05 01:30:50.982280",
			"approval": false
		}
	],
	"owner_email": "patrick.allen.higgins@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "pah",
	"subject": "code review 6344046: net/http: added ParseTime function.",
	"created": "2012-06-27 19:49:51.873871",
	"patchsets": [
		1,
		3,
		2003,
		7001,
		11002,
		17001
	],
	"modified": "2013-02-04 20:10:45.573680",
	"closed": true,
	"issue": 6344046
}