{
	"description": "codereview: cleanup + basic tests",
	"cc": [
		"adg@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"r@golang.org"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello adg (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-16 14:16:47.718173",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/codereview.py\nFile lib/codereview/codereview.py (right):\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/codereview.py#newcode86\nlib/codereview/codereview.py:86: return [l for l in l1 if l not in l2]\nwow\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/codereview.py#newcode177\nlib/codereview/codereview.py:177: if s == \"\":\nCan we store the last status and not repeat it if it hasn't changed?\n(maybe for another cl)\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/codereview.py#newcode878\nlib/codereview/codereview.py:878: for _, cl in all.items():\nfor cl in all.values():\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/codereview.py#newcode2082\nlib/codereview/codereview.py:2082: codereview_disabled = False\nThis is the second declaration of this global, and the first one was None.\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/test.sh\nFile lib/codereview/test.sh (right):\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/test.sh#newcode6\nlib/codereview/test.sh:6: # Test the code review plugin.\nYes! Very nice.\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/test.sh#newcode10\nlib/codereview/test.sh:10: # dev_appserver.py -p 7777 $HOME/pub/rietveld\nIt'd be nice if this script could (optionally?) be given the location of rietveld and dev_appserver.py and just do the rest.\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/test.sh#newcode55\nlib/codereview/test.sh:55: username=Grace R Emlin <gre@golang.org>\nhah\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/test.sh#newcode112\nlib/codereview/test.sh:112: # Tried to use UTF-8 here to test that, but dev_appserver.py crashes.  Ha ha.\nWhat?! Really?\n\nhttp://codereview.appspot.com/5395044/diff/5001/lib/codereview/test.sh#newcode121\nlib/codereview/test.sh:121: cat .hg/hgrc | sed \"s/Grace Emlin <gre@golang.org>/$name/\" >/tmp/x && mv /tmp/x .hg/hgrc\nisn't the name in .hgrc \"Grace R Emlin\" ?",
			"disapproval": false,
			"date": "2011-11-17 04:41:43.205565",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello adg, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-16 14:33:31.626274",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> http://codereview.appspot.com/5395044/diff/5001/lib/codereview/codereview.py#newcode177\n> lib/codereview/codereview.py:177: if s == \"\":\n> Can we store the last status and not repeat it if it hasn't changed?\n> (maybe for another cl)\n\nNothing that sets a status should last for more than 15 seconds.\nIf it does, the subsequent prints are definitely warranted.\n\n> http://codereview.appspot.com/5395044/diff/5001/lib/codereview/codereview.py#newcode878\n> lib/codereview/codereview.py:878: for _, cl in all.items():\n> for cl in all.values():\n\nNice.\n\n> http://codereview.appspot.com/5395044/diff/5001/lib/codereview/codereview.py#newcode2082\n> lib/codereview/codereview.py:2082: codereview_disabled = False\n> This is the second declaration of this global, and the first one was\n> None.\n\nThat's not fair.  You can't force me to use a language\nwithout useful types and then complain when I make\ntype errors.  :-)\n\n> http://codereview.appspot.com/5395044/diff/5001/lib/codereview/test.sh#newcode10\n> lib/codereview/test.sh:10: # dev_appserver.py -p 7777 $HOME/pub/rietveld\n> It'd be nice if this script could (optionally?) be given the location of\n> rietveld and dev_appserver.py and just do the rest.\n\nFor now, probably not.\n\n> http://codereview.appspot.com/5395044/diff/5001/lib/codereview/test.sh#newcode55\n> lib/codereview/test.sh:55: username=Grace R Emlin <gre@golang.org>\n> hah\n>\n> http://codereview.appspot.com/5395044/diff/5001/lib/codereview/test.sh#newcode112\n> lib/codereview/test.sh:112: # Tried to use UTF-8 here to test that, but\n> dev_appserver.py crashes. \u00a0Ha ha.\n> What?! Really?\n\nYeah, it's the usual ASCII encode/decode problem.\nI would submit a bug for app engine but it would\ninvolve running Rietveld under the dev_appserver\nso maybe not the easiest repro case.\n\n> http://codereview.appspot.com/5395044/diff/5001/lib/codereview/test.sh#newcode121\n> lib/codereview/test.sh:121: cat .hg/hgrc | sed \"s/Grace Emlin\n> <gre@golang.org>/$name/\" >/tmp/x && mv /tmp/x .hg/hgrc\n> isn't the name in .hgrc \"Grace R Emlin\" ?\n\nFixed.\n\nI have some more cleanup to show you and will send\nit when codereview is back up.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-17 21:56:31.606851",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nYou probably want to read the diffs between what you\nreviewed last time and the new file.  Normally I would\nsend this as a separate CL but it also corrects some\nbugs in what you reviewed.\n\nThree additions:\n\n1. hg pending -quick (alias: hg pq) shows\nthe listing without talking to the internet.  It has to\nomit the Reviewer+CC+LGTM lists, but it can be quicker.\n\n2. hg pending -short (alias: hg ps) shows\nthe listing one per line.  It is very useful for\njust seeing the numbers when you are trying\nto submit something.  I've had a shell script\nfor this since nearly day 1.\n\n$ hg ps\n5395044\tcodereview: cleanup + basic tests\n$\n\n3. Tried to tighten up the hg sync chatter.\n\n$ hg sync\npulling from https://go.googlecode.com/hg/\nadded 1 changesets with 2 changes to 2 files\n+ src/pkg/Makefile\n+ src/pkg/exp/terminal/util.go\n2 files updated, 0 files merged, 0 files removed, 0 files unresolved\n$\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-18 03:21:29.162779",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Nov 17, 2011 at 7:21 PM, Russ Cox <rsc@golang.org> wrote:\n\n> PTAL\n>\n> You probably want to read the diffs between what you\n> reviewed last time and the new file.  Normally I would\n> send this as a separate CL but it also corrects some\n> bugs in what you reviewed.\n>\n> Three additions:\n>\n> 1. hg pending -quick (alias: hg pq) shows\n> the listing without talking to the internet.\n\n\nnice!\n",
			"disapproval": false,
			"date": "2011-11-18 03:43:03.458252",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d88e746d3785 ***",
			"disapproval": false,
			"date": "2011-11-18 05:16:19.533581",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5395044/diff/6005/lib/codereview/codereview.py\nFile lib/codereview/codereview.py (right):\n\nhttp://codereview.appspot.com/5395044/diff/6005/lib/codereview/codereview.py#newcode1272\nlib/codereview/codereview.py:1272: \nrogue tab",
			"disapproval": false,
			"date": "2011-11-18 04:11:52.210857",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i see an enormous diff here, far more than the mail that led me here suggested\n\nhttps://codereview.appspot.com/5395044/diff/6006/lib/codereview/codereview.py\nFile lib/codereview/codereview.py (right):\n\nhttps://codereview.appspot.com/5395044/diff/6006/lib/codereview/codereview.py#newcode173\nlib/codereview/codereview.py:173: time.sleep(15 - time.time() % 15)\nput the sleep at the bottom of the loop, so we sleep 30 and then print.",
			"disapproval": false,
			"date": "2013-03-15 20:26:34.450000",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ignore. i am an idiot.\r\n",
			"disapproval": false,
			"date": "2013-03-15 20:27:33.421320",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5395044: codereview: cleanup + basic tests",
	"created": "2011-11-16 14:15:36.578512",
	"patchsets": [
		1,
		2001,
		4001,
		5001,
		6005,
		6006
	],
	"modified": "2013-03-15 20:26:34.757160",
	"closed": true,
	"issue": 5395044
}