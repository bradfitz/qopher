{
	"description": "testing: allow benchmarks to print and fail\nRefactors the benchmarks and test code.\nNow benchmarks can call Errorf, Fail, etc.,\nand the runner will act accordingly.\n\nBecause functionality has been folded into an\nembedded type, a number of methods' docs\nno longer appear in godoc output. A fix is\nunderway; if it doesn't happen fast enough,\nI'll add wrapper methods to restore the\ndocumentation.",
	"cc": [
		"bradfitz@golang.org",
		"adg@google.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "yay!\n\nOn Mon, Dec 19, 2011 at 3:25 PM, <r@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go\n>\n>\n> Description:\n> testing: allow benchmarks to print and fail\n> Refactors the benchmarks and test code.\n> Now benchmarks can call Errorf, Fail, etc.,\n> and the runner will act accordingly.\n>\n> Can't be checked in until godoc issue is\n> resolved with embedded methods.\n>\n> Please review this at http://codereview.appspot.com/**5492060/<http://codereview.appspot.com/5492060/>\n>\n> Affected files:\n>  M src/pkg/testing/benchmark.go\n>  M src/pkg/testing/testing.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-12-19 23:39:54.640096",
			"approval": false
		},
		{
			"sender": "adg@google.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5492060/diff/5006/src/pkg/testing/benchmark.go\nFile src/pkg/testing/benchmark.go (right):\n\nhttp://codereview.appspot.com/5492060/diff/5006/src/pkg/testing/benchmark.go#newcode165\nsrc/pkg/testing/benchmark.go:165: b.result = BenchmarkResult{b.N, b.duration, b.bytes}\nthere's a race here. set this before sending the signal\n\nhttp://codereview.appspot.com/5492060/diff/5006/src/pkg/testing/benchmark.go#newcode243\nsrc/pkg/testing/benchmark.go:243: } else {\ncontinue in the previous if block instead of this else block?\n\nhttp://codereview.appspot.com/5492060/diff/5006/src/pkg/testing/benchmark.go#newcode248\nsrc/pkg/testing/benchmark.go:248: // The output is likely to appear multiple times because the benchmark\nput this in a function (trimOutput?) and then you can use it to address the TODO on line 241.\n\nhttp://codereview.appspot.com/5492060/diff/5006/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttp://codereview.appspot.com/5492060/diff/5006/src/pkg/testing/testing.go#newcode73\nsrc/pkg/testing/testing.go:73: // common holds the elements common between T and B.\nsay something about common methods, too?",
			"disapproval": false,
			"date": "2011-12-20 02:26:15.732326",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2011-12-19 23:25:37.058587",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, adg@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-20 16:39:01.633683",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"bradfitz@golang.org",
				"adg@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5492060/diff/11001/src/pkg/testing/benchmark.go\nFile src/pkg/testing/benchmark.go (right):\n\nhttp://codereview.appspot.com/5492060/diff/11001/src/pkg/testing/benchmark.go#newcode225\nsrc/pkg/testing/benchmark.go:225: signal := make(chan interface{})\nPlease move the chan into the construction of b, so that every chan\ngets used only once.  This will ameliorate the problem where\na lingering goroutine sends on a channel unexpectedly\nduring a later benchmark/test.\n\nhttp://codereview.appspot.com/5492060/diff/11001/src/pkg/testing/benchmark.go#newcode278\nsrc/pkg/testing/benchmark.go:278: // Benchmark benchmarks a single function. Useful for creating\nIt would be nice to have a function like this for tests (func Test).\n\nhttp://codereview.appspot.com/5492060/diff/11001/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttp://codereview.appspot.com/5492060/diff/11001/src/pkg/testing/testing.go#newcode239\nsrc/pkg/testing/testing.go:239: signal := make(chan interface{})\nSame comment: use each channel just once.\nThis will require keeping a list of the running tests\nfor the parallel loop below (instead of numParallel)\nbut it will be worth it.",
			"disapproval": false,
			"date": "2011-12-20 17:36:27.306831",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"bradfitz@golang.org",
				"adg@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 67b329eb1ecb ***\n\ntesting: allow benchmarks to print and fail\nRefactors the benchmarks and test code.\nNow benchmarks can call Errorf, Fail, etc.,\nand the runner will act accordingly.\n\nBecause functionality has been folded into an\nembedded type, a number of methods' docs\nno longer appear in godoc output. A fix is\nunderway; if it doesn't happen fast enough,\nI'll add wrapper methods to restore the\ndocumentation.\n\nR=bradfitz, adg, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5492060",
			"disapproval": false,
			"date": "2011-12-20 17:51:44.627331",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5492060: testing: allow benchmarks to print and fail",
	"created": "2011-12-16 21:36:19.001784",
	"patchsets": [
		1,
		1002,
		3,
		6001,
		1003,
		6002,
		4,
		4009,
		5,
		6007,
		7013,
		4012,
		5005,
		7019,
		5006,
		8001,
		11001,
		2012
	],
	"modified": "2011-12-20 17:51:45.508711",
	"closed": true,
	"issue": 5492060
}