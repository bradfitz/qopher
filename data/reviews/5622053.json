{
	"description": "test: test slice beyond len\n\nWhen slicing a slice, the bounds may be > len as long as they\nare <= cap.  Interestingly, gccgo got that wrong and still\npassed the testsuite and all the library tests.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"iant@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-02-02 23:06:27.838738",
			"approval": true
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Russ Cox <rsc@golang.org> writes:\n\n> On Fri, Feb 3, 2012 at 09:28, Ian Lance Taylor <iant@google.com> wrote:\n>> Yes, I was comparing the lower bound against len rather than cap.\n>\n> FWIW, I believe that for [lo:hi] the simplest check is\n> lo <= hi && hi <= cap; lo doesn't have to be compared\n> against either len or cap.\n\nYeah, I will do that when I disentangle ordinary index expressions from\nslice expressions.\n\nIan\n",
			"disapproval": false,
			"date": "2012-02-03 16:38:13.065009",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-02 23:05:59.278080",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 3, 2012 at 09:28, Ian Lance Taylor <iant@google.com> wrote:\n> Yes, I was comparing the lower bound against len rather than cap.\n\nFWIW, I believe that for [lo:hi] the simplest check is\nlo <= hi && hi <= cap; lo doesn't have to be compared\nagainst either len or cap.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-03 14:41:33.054599",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It must be the lower bound that was the problem?\nSurely the upper bound being > len is all over the place.\n",
			"disapproval": false,
			"date": "2012-02-02 23:07:02.521836",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Russ Cox <rsc@golang.org> writes:\n\n> It must be the lower bound that was the problem?\n> Surely the upper bound being > len is all over the place.\n\nYes, I was comparing the lower bound against len rather than cap.\n\nIan\n",
			"disapproval": false,
			"date": "2012-02-03 14:29:03.039991",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=04ca0ed4614a ***\n\ntest: test slice beyond len\n\nWhen slicing a slice, the bounds may be > len as long as they\nare <= cap.  Interestingly, gccgo got that wrong and still\npassed the testsuite and all the library tests.\n\nR=golang-dev, rsc, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5622053",
			"disapproval": false,
			"date": "2012-02-03 14:29:38.701823",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 5622053: test: test slice beyond len",
	"created": "2012-02-02 23:05:52.734583",
	"patchsets": [
		1,
		1003
	],
	"modified": "2012-02-03 14:29:40.704622",
	"closed": true,
	"issue": 5622053
}