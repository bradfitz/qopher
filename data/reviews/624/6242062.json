{
	"description": "net/http: avoid fmt.Fprintf in Header.WriteSubset",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-27 02:20:45.520788",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If it's unbuffered, sure, but it already sucked if the caller was\r\nunbuffered (it would've been packet per header line... I remember when we\r\nfixed that bug ages ago).  We already have TestClientWrites to count the\r\nnumber of writes on the TCP connection.  I could add a similar one for the\r\nserver if that makes you more comfortable.  (I thought it already existed,\r\nbut I'm not seeing it)\r\n\r\nOn Sat, May 26, 2012 at 7:51 PM, David Symonds <dsymonds@golang.org> wrote:\r\n\r\n> If w is unbuffered this is potentially going to be slower, right?\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-27 02:58:54.412118",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-05-28 18:21:13.159908",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I was just thinking that http.Header can easily be used outside this\r\npackage, and this is making WriteSubset less efficient if w is\r\nunbuffered in that scenario. It's probably not a big deal at all, but\r\njust thought I'd flag it, since presumably the point of this CL is to\r\nmake this method faster.\r\n",
			"disapproval": false,
			"date": "2012-05-27 03:32:09.535440",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If w is unbuffered this is potentially going to be slower, right?\r\n",
			"disapproval": false,
			"date": "2012-05-27 02:51:23.164016",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL (less ugly)\n\nhttp://codereview.appspot.com/6242062/diff/2001/src/pkg/net/http/header.go\nFile src/pkg/net/http/header.go (right):\n\nhttp://codereview.appspot.com/6242062/diff/2001/src/pkg/net/http/header.go#newcode73\nsrc/pkg/net/http/header.go:73: if _, err := io.WriteString(w, \"\\r\\n\"); err != nil {\nOn 2012/05/27 05:25:21, r wrote:\n> How much does this save? \n\nIt makes this function ~twice as fast, and this showed up in profiles.\n\n> It can't be much and is so ugly.\n\nPTAL.  It's less ugly now, and not slower.\n\n> Why not use a bytes.Buffer or even just append to a slice?\n\nIt's already generally writing to a bytes.Buffer behind the scenes. (how this package ever uses it, at probably others too)  The point is avoiding the fmt.Printf overhead.  Appending to a slice would allocate.  A WriteString directly to the underlying bytes.Buffer is the fastest.",
			"disapproval": false,
			"date": "2012-05-27 07:57:23.320929",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yeah, I'm not worried.  Anybody affected 1) is rare, 2) already had\r\nproblems and 3) should know better.\r\n\r\nOn Sat, May 26, 2012 at 8:32 PM, David Symonds <dsymonds@golang.org> wrote:\r\n\r\n> I was just thinking that http.Header can easily be used outside this\r\n> package, and this is making WriteSubset less efficient if w is\r\n> unbuffered in that scenario. It's probably not a big deal at all, but\r\n> just thought I'd flag it, since presumably the point of this CL is to\r\n> make this method faster.\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-27 03:39:34.868674",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6242062/diff/2001/src/pkg/net/http/header.go\nFile src/pkg/net/http/header.go (right):\n\nhttp://codereview.appspot.com/6242062/diff/2001/src/pkg/net/http/header.go#newcode73\nsrc/pkg/net/http/header.go:73: if _, err := io.WriteString(w, \"\\r\\n\"); err != nil {\nHow much does this save? It can't be much and is so ugly. Why not use a bytes.Buffer or even just append to a slice?",
			"disapproval": false,
			"date": "2012-05-27 05:25:21.831286",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-27 07:54:26.745907",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=c78d3265b152 ***\n\nnet/http: avoid fmt.Fprintf in Header.WriteSubset\n\nR=golang-dev, dsymonds, r\nCC=golang-dev\nhttp://codereview.appspot.com/6242062",
			"disapproval": false,
			"date": "2012-05-28 18:27:01.335091",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6242062: net/http: avoid fmt.Fprintf in Header.WriteSubset",
	"created": "2012-05-27 02:20:25.895719",
	"patchsets": [
		1,
		2001,
		9001,
		12001
	],
	"modified": "2012-05-28 18:27:02.747393",
	"closed": true,
	"issue": 6242062
}