{
	"description": "net/rpc: improve response reading logic\n\nCL 5956051 introduced too many call != nil checks, so\nattempt to improve this by splitting logic into three\ndistinct parts.",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6248048/diff/4001/src/pkg/net/rpc/client.go\nFile src/pkg/net/rpc/client.go (right):\n\nhttp://codereview.appspot.com/6248048/diff/4001/src/pkg/net/rpc/client.go#newcode130\nsrc/pkg/net/rpc/client.go:130: } else {\nnot sure this is correct. if call == nil, can't we get here with response.Error set?\n\nin any case the logic here is tortuous and could use a rethink. call != nil is checked 3 times in 20 lines.",
			"disapproval": false,
			"date": "2012-05-26 17:17:26.134759",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nthis is much clearer.\nnow we can remove the elses by using continue, or else turn it into a switch.",
			"disapproval": false,
			"date": "2012-05-26 19:56:05.673206",
			"approval": true
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-26 19:57:21.607811",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-25 05:03:29.946483",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/05/26 17:17:26, r wrote:\n> src/pkg/net/rpc/client.go:130: } else {\n> not sure this is correct. if call == nil, can't we get here with response.Error\n> set?\n\nIf call == nil, then we'd get to the top part, and could never get to the bottom, where we only end up if call != nil and response.Error == \"\". I must have overthought it in my previous CL, I only realized it after you commited the change and I looked at the diff with a fresh look.\n\n> in any case the logic here is tortuous and could use a rethink. call != nil is\n> checked 3 times in 20 lines.\n\nMy assumption is that \"call != nil\" check is supposed to be cheap. We could do less checks by making it a 3 case, but it would be more code duplication. I'd do it, but I'm not sure it's worth it, because top 2 cases would have the same \"read error body\", and the bottom 2 cases would have the same \"call.done\". If that's ok, I'll do it.",
			"disapproval": false,
			"date": "2012-05-26 18:57:00.368050",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=050271fb599f ***\n\nnet/rpc: improve response reading logic\n\nCL 5956051 introduced too many call != nil checks, so\nattempt to improve this by splitting logic into three\ndistinct parts.\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/6248048\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2012-05-26 21:28:36.404579",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nthere's some duplication here, but splitting it up makes it harder to understand",
			"disapproval": false,
			"date": "2012-05-26 21:17:55.322598",
			"approval": true
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-26 19:24:37.827956",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/05/26 19:56:05, r wrote:\n> LGTM\n> this is much clearer.\n> now we can remove the elses by using continue, or else turn it into a switch.\n\nAh, sorry, I fixed an error in a comment before I read your response. I'll look into it.",
			"disapproval": false,
			"date": "2012-05-26 19:59:55.704647",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-26 20:03:38.764767",
			"approval": false
		}
	],
	"owner_email": "snaury@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "snaury",
	"subject": "code review 6248048: net/rpc: improve response reading logic",
	"created": "2012-05-25 04:59:58.933985",
	"patchsets": [
		1,
		2001,
		4001,
		8001,
		8002,
		4
	],
	"modified": "2012-05-27 05:49:13.992825",
	"closed": true,
	"issue": 6248048
}