{
	"description": "goinstall: allow packages from launchpad.net/~user branches.\n\nThe permitted filename characters should include ~ to allow\nthe names of user-owned branches in Launchpad.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nLeaving for Gustavo.\n",
			"disapproval": false,
			"date": "2011-10-17 16:42:40.087669",
			"approval": true
		},
		{
			"sender": "jani.monoses@gmail.com",
			"recipients": [
				"jani.monoses@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"gustavo.niemeyer@canonical.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, gustavo.niemeyer@canonical.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-17 09:59:14.500856",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Ugh.  This is not really safe, since ~ can be expanded by the shell,\nbut in the Launchpad cases it will not be.\n\nOkay for now I guess.\n",
			"disapproval": false,
			"date": "2011-10-17 16:42:33.802316",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"jani.monoses@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"gustavo.niemeyer@canonical.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Oops, that was a regression indeed, thanks Jani.\n\n> Ugh.  This is not really safe, since ~ can be expanded by the shell,\n> but in the Launchpad cases it will not be.\n\nTo be on the safe side, safeName can continue to return false if it the name _starts_ with a tilde.\n\nJani, can you please do this change and make sure you've signed the\ncontributor agreement per http://golang.org/doc/contribute.html\n\nThanks again,",
			"disapproval": false,
			"date": "2011-10-17 22:31:24.710820",
			"approval": false
		},
		{
			"sender": "jani.monoses@gmail.com",
			"recipients": [
				"jani.monoses@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"gustavo.niemeyer@canonical.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/17 22:31:24, niemeyer wrote:\n> Oops, that was a regression indeed, thanks Jani.\n> \n> > Ugh.  This is not really safe, since ~ can be expanded by the shell,\n> > but in the Launchpad cases it will not be.\n> \n> To be on the safe side, safeName can continue to return false if it the name\n> _starts_ with a tilde.\n> \n\nI was also surprised tilde should work at all, but then saw it is a valid character in filenames, even at their start.\n\n$echo test > ~a\n$cat ~a\n$rm ~a\n\nno tilde expansion happens in this case here. Only ~/ expands to homedir.\n\nWould it be an invalid Go package name, or in what way is it different from the few other nonalphanumeric chars in the current pattern?\n\n> Jani, can you please do this change and make sure you've signed the\n> contributor agreement per http://golang.org/doc/contribute.html\n> \nYes, I have signed it.",
			"disapproval": false,
			"date": "2011-10-18 06:06:13.810565",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> > Jani, can you please do this change and make sure you've signed the\n> > contributor agreement per http://golang.org/doc/contribute.html\n> \n> Yes, I have signed it.\n\nConfirmed.  I'll send a CL for that.\n",
			"disapproval": false,
			"date": "2011-10-18 14:40:03.539343",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> I was also surprised tilde should work at all, but then saw it is a\n> valid character in filenames, even at their start.\n>\n> $echo test > ~a\n> $cat ~a\n> $rm ~a\n>\n> no tilde expansion happens in this case here. Only ~/ expands to\n> homedir.\n\n% echo ~niemeyer\n/home/niemeyer\n\n> Would it be an invalid Go package name, or in what way is it different\n> from the few other nonalphanumeric chars in the current pattern?\n\nThe set of characters accepted is purposefully small to avoid\nsurprising expansions in Makeflies and scripts. Then, a package name\nstarting in a tilde isn't a good idea anyway, so it's fine to mark it\nas unsafe.\n\n>> Jani, can you please do this change and make sure you've signed the\n>> contributor agreement per http://golang.org/doc/contribute.html\n>\n> Yes, I have signed it.\n\nThanks!\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I never filed a patent.\n",
			"disapproval": false,
			"date": "2011-10-19 16:45:13.358236",
			"approval": false
		},
		{
			"sender": "jani.monoses@gmail.com",
			"recipients": [
				"jani.monoses@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"gustavo.niemeyer@canonical.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I tried constructing a test case for ~ as the first character so I can test the additional check but I am not sure how to do it, so that I hit this issue. The thing preventing it is that standard libary packages cannot be goinstalled as the tool has an earlier check that cacthes such cases.\n\nConstructing $GOROOT/src/pkg/~badname or $GOROOT/src/pkg/x/y/~badname and running goinstall . in it gives\n'can not goinstall the standard library'\n\nThis suggests that a package with ~ as first char can only be goinstalled from an extrenal source like launchpad or github in which case ~ is not actually the first char.\n\nI am happy to add a check explicitly for ~ as first char being invalid but I would have liked to test it with a real world scenario, which I do not know how to set up.\nthanks",
			"disapproval": false,
			"date": "2011-11-03 15:12:26.153371",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> Constructing $GOROOT/src/pkg/~badname or $GOROOT/src/pkg/x/y/~badname\n> and running goinstall . in it gives\n> 'can not goinstall the standard library'\n>\n> This suggests that a package with ~ as first char can only be\n> goinstalled from an extrenal source like launchpad or github in which\n> case ~ is not actually the first char.\n>\n> I am happy to add a check explicitly for ~ as first char being invalid\n> but I would have liked to test it with a real world scenario, which I do\n> not know how to set up.\n\nIf you export GOPATH=/tmp and create /tmp/src/~badname, then\ngoinstall ~badname should refer to that directory.\n",
			"disapproval": false,
			"date": "2011-11-03 21:33:32.556687",
			"approval": false
		},
		{
			"sender": "jani.monoses@gmail.com",
			"recipients": [
				"jani.monoses@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"gustavo.niemeyer@canonical.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2011-11-03 21:54:42.020304",
			"approval": false
		},
		{
			"sender": "jani.monoses@gmail.com",
			"recipients": [
				"jani.monoses@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"gustavo.niemeyer@canonical.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, n13m3y3r@gmail.com, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com, gustavo.niemeyer@canonical.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-03 21:53:19.023754",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"jani.monoses@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"gustavo.niemeyer@canonical.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM, will submit tonight.",
			"disapproval": false,
			"date": "2011-11-03 21:58:06.536415",
			"approval": true
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"jani.monoses@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"gustavo.niemeyer@canonical.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1185c12fa97c ***\n\ngoinstall: allow packages from launchpad.net/~user branches.\n\nThe permitted filename characters should include ~ to allow\nthe names of user-owned branches in Launchpad.\n\nR=golang-dev, rsc, n13m3y3r, gustavo\nCC=golang-dev, gustavo.niemeyer\nhttp://codereview.appspot.com/5280052\n\nCommitter: Gustavo Niemeyer <gustavo@niemeyer.net>",
			"disapproval": false,
			"date": "2011-11-04 19:07:36.478443",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"jani.monoses@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Taking me off cc list.",
			"disapproval": false,
			"date": "2011-12-13 21:30:45.419165",
			"approval": false
		}
	],
	"owner_email": "jani.monoses@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "jani.monoses",
	"subject": "code review 5280052: goinstall: allow packages from launchpad.net/~user branches.",
	"created": "2011-10-17 09:12:36.629353",
	"patchsets": [
		1,
		2001,
		3002,
		11002
	],
	"modified": "2011-12-13 21:30:45.419602",
	"closed": false,
	"issue": 5280052
}