{
	"description": "http: add test for panic inside hijacked request",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"rsc@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-17 21:20:35.110490",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Add Close?\n",
			"disapproval": false,
			"date": "2011-10-18 17:21:25.763817",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-18 00:12:25.940604",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 18 October 2011 22:30, Russ Cox <rsc@google.com> wrote:\n> On Oct 17, 2011 at 20:15, Andrew Gerrand wrote:\n>> This reveals brokenness. When a goroutine that hijacks a connection\n>> panics the http server recovers but it no longer has a handle on the\n>> connection, so it can't be closed, so the Get in this test hangs\n>> indefinitely.\n>>\n>> What's the correct behavior? Should it be the responsibility of the\n>> hijacker to always defer a rwc.Close()?\n>\n> If you hijacked the connection, its yours.\n> If you don't close it, bad things happen.\n> Not the http server's problem.\n>\n> I'd just change the test to close before panic.\n\nDone.\n",
			"disapproval": false,
			"date": "2011-10-18 20:31:19.741384",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-10-18 20:36:10.764364",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"rsc@google.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b7e1b5525ec9 ***\n\nhttp: add test for panic inside hijacked request\n\nR=golang-dev, rsc, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5283052",
			"disapproval": false,
			"date": "2011-10-18 21:23:58.942917",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5283052: http: add test for panic inside hijacked request",
	"created": "2011-10-17 21:20:24.899069",
	"patchsets": [
		1,
		3001,
		3004,
		8001
	],
	"modified": "2011-10-18 21:24:15.743722",
	"closed": true,
	"issue": 5283052
}