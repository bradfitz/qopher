{
	"description": "doc: explain why cmd/go uses https for repositories and how to work around it\nFixes issue 3418.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "herbert.fischer@gmail.com",
			"recipients": [
				"herbert.fischer@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7712045/diff/5001/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/7712045/diff/5001/doc/go_faq.html#newcode958\ndoc/go_faq.html:958: </p>\nOn 2013/03/15 18:09:35, r wrote:\n> unindent please. follow the style of the text around here.\n\nDone.\n\nhttps://codereview.appspot.com/7712045/diff/5001/doc/go_faq.html#newcode958\ndoc/go_faq.html:958: </p>\nOn 2013/03/15 18:09:35, r wrote:\n> delete this paragraph. it doesn't add to the explanation.\n\nDone.\n\nhttps://codereview.appspot.com/7712045/diff/5001/doc/go_faq.html#newcode964\ndoc/go_faq.html:964: using HTTPS, <code>go get</code> also avoids common networking related issues.\nOn 2013/03/15 18:09:35, r wrote:\n> This can be much shorter, something like\n> \n> Companies often permit outgoing traffic only on the standard TCP ports 80 (HTTP)\n> and 443 (HTTPS).\n> \n> the second sentence doesn't help me understand the issue.\n\nDone.\n\nhttps://codereview.appspot.com/7712045/diff/5001/doc/go_faq.html#newcode969\ndoc/go_faq.html:969: to work around it. For GitHub, you can follow one of this possible solutions:\nOn 2013/03/15 18:09:35, r wrote:\n> It's easy to work around this. For GitHub, try one of these solutions:\n\nDone.",
			"disapproval": false,
			"date": "2013-03-15 19:44:41.007240",
			"approval": false
		},
		{
			"sender": "herbert.fischer@gmail.com",
			"recipients": [
				"herbert.fischer@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: adg@golang.org, golang-dev@googlegroups.com, r@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-03-15 13:46:27.432700",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"herbert.fischer@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't believe the text actually answers the question, \"why https\". As opposed to what?\n\nhttps://codereview.appspot.com/7712045/diff/5001/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/7712045/diff/5001/doc/go_faq.html#newcode958\ndoc/go_faq.html:958: </p>\nunindent please. follow the style of the text around here.\n\nhttps://codereview.appspot.com/7712045/diff/5001/doc/go_faq.html#newcode958\ndoc/go_faq.html:958: </p>\ndelete this paragraph. it doesn't add to the explanation.\n\nhttps://codereview.appspot.com/7712045/diff/5001/doc/go_faq.html#newcode964\ndoc/go_faq.html:964: using HTTPS, <code>go get</code> also avoids common networking related issues.\nThis can be much shorter, something like\n\nCompanies often permit outgoing traffic only on the standard TCP ports 80 (HTTP) and 443 (HTTPS).\n\nthe second sentence doesn't help me understand the issue.\n\nhttps://codereview.appspot.com/7712045/diff/5001/doc/go_faq.html#newcode969\ndoc/go_faq.html:969: to work around it. For GitHub, you can follow one of this possible solutions:\nIt's easy to work around this. For GitHub, try one of these solutions:",
			"disapproval": false,
			"date": "2013-03-15 18:09:35.410920",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"herbert.fischer@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html#newcode963\ndoc/go_faq.html:963: It's easy to work around this. For GitHub, try one of these solutions:\nthat's great, thanks.\n\ns/by using/using/\ns/keypair/key pair/ or maybe just /key/\n\nhttps://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html#newcode971\ndoc/go_faq.html:971: <li>Force <code>git push</code> to always use git protocol by appending\ns|to always use git protocol|to use the <code>git</code> protocol always|",
			"disapproval": false,
			"date": "2013-03-15 20:22:20.553990",
			"approval": false
		},
		{
			"sender": "herbert.fischer@gmail.com",
			"recipients": [
				"herbert.fischer@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: adg@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-15 19:30:56.713660",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"herbert.fischer@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html#newcode959\ndoc/go_faq.html:959: default, providing protection against Man-in-the-middle, eavesdropping and tampering attacks.\ns/Man/man/\n\nhttps://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html#newcode959\ndoc/go_faq.html:959: default, providing protection against Man-in-the-middle, eavesdropping and tampering attacks.\nAdd,\n\n\"The <code>go</code> <code>get</code> command therefore uses <code>HTTPS</code> for safety.\n\nhttps://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html#newcode963\ndoc/go_faq.html:963: It's easy to work around this. For GitHub, try one of these solutions:\nwork around what? you've answered the question now (thanks!) but i don't know what the issue is. why not just use HTTPS?\n\ni don't use git so i may be missing something obvious, but please explain.",
			"disapproval": false,
			"date": "2013-03-15 19:56:36.146290",
			"approval": false
		},
		{
			"sender": "herbert.fischer@gmail.com",
			"recipients": [
				"herbert.fischer@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please see comments before I publish my changes.\n\nhttps://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html\nFile doc/go_faq.html (right):\n\nhttps://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html#newcode959\ndoc/go_faq.html:959: default, providing protection against Man-in-the-middle, eavesdropping and tampering attacks.\nOn 2013/03/15 19:56:36, r wrote:\n> s/Man/man/\n\nDone.\n\nhttps://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html#newcode959\ndoc/go_faq.html:959: default, providing protection against Man-in-the-middle, eavesdropping and tampering attacks.\nOn 2013/03/15 19:56:36, r wrote:\n> Add,\n> \n> \"The <code>go</code> <code>get</code> command therefore uses <code>HTTPS</code>\n> for safety.\n\nOk. I've also included \"TCP port 22 (ssh)\" in the blocked ports list.\n\nhttps://codereview.appspot.com/7712045/diff/14001/doc/go_faq.html#newcode963\ndoc/go_faq.html:963: It's easy to work around this. For GitHub, try one of these solutions:\nOn 2013/03/15 19:56:36, r wrote:\n> work around what? you've answered the question now (thanks!) but i don't know\n> what the issue is. why not just use HTTPS?\n> \n> i don't use git so i may be missing something obvious, but please explain. \n\nI see. Does this makes sense to you?\n\n\"If you use <code>git</code> and prefer to push changes through SSH by using your\nexisting keypair it's easy to work around this. For GitHub, try one of these solutions:\"",
			"disapproval": false,
			"date": "2013-03-15 20:16:50.067440",
			"approval": false
		},
		{
			"sender": "herbert.fischer@gmail.com",
			"recipients": [
				"herbert.fischer@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: adg@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-15 20:30:04.986280",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"herbert.fischer@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nthanks",
			"disapproval": false,
			"date": "2013-03-15 20:35:42.597560",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"herbert.fischer@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=05062dccbb4e ***\n\ndoc: explain why cmd/go uses https for repositories and how to work around it\nFixes issue 3418.\n\nR=golang-dev, r\nCC=adg, golang-dev\nhttps://codereview.appspot.com/7712045\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2013-03-15 20:43:12.813100",
			"approval": false
		}
	],
	"owner_email": "herbert.fischer@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "hgfischer",
	"subject": "code review 7712045: doc: explain why cmd/go uses https for repositories and...",
	"created": "2013-03-14 23:38:54.275450",
	"patchsets": [
		1,
		2001,
		5001,
		11001,
		14001,
		19002,
		21001
	],
	"modified": "2013-03-15 20:50:43.081300",
	"closed": true,
	"issue": 7712045
}