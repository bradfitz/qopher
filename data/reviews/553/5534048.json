{
	"description": "exp/sql: Add NullInt64, NullFloat64, NullBool, NullBytes.\nexp/sql/driver - Modify DefaultParamterConverter to convert Null sql types",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"bradfitz@golang.org",
		"tux21b@gmail.com"
	],
	"messages": [
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/09 19:25:30, rsc wrote:\n> Yuck.  Can we at least use nicer names.\n\nSure thing.  I was following the pattern I saw with NullableString.  Brad had a TODO below NullableString that said to add additional types, which I did.\n\nI'm totally open on the names though.  I'm on #go-nuts now if we want to discuss there.",
			"disapproval": false,
			"date": "2012-01-09 19:37:24.508427",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jan 9, 2012 at 2:22 PM, Russ Cox <rsc@golang.org> wrote:\n\n> On Mon, Jan 9, 2012 at 13:31, Brad Fitzpatrick <bradfitz@golang.org>\n> wrote:\n> > and rename NullableString to StringOpt too?\n> >\n> > if you don't like the -able suffix, maybe just NullString, NullInt64?\n>\n> that's fine too\n>\n\nokay, let's go with Null* then, which should be readily familiar to SQL\nusers\n\nJames, you want to change NullableString in this same CL?\n",
			"disapproval": false,
			"date": "2012-01-09 22:25:08.305086",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"tux21b@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, bradfitz@golang.org, tux21b@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-09 22:41:44.255762",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yeah, okay, I see now.  Both kinda suck.\n\nI'm still digging myself out of email from vacation.  Let me think on this\nfor a day or two and maybe clear some other distractions first.\n\n\nOn Mon, Jan 9, 2012 at 3:58 PM, James Cooper <jamespcooper@gmail.com> wrote:\n\n> Hi Brad,\n>\n> CL description has been updated.\n>\n> (A) Re: having the Null* types implement ValueConverter.  I assume you'd\n> expect something like this:\n>\n> func (n NullString) ConvertValue(v interface{}) (interface{}, error) {\n>  if n.Valid {\n> return n.String, nil\n> }\n>  return nil, nil\n> }\n>\n> Note that we're ignoring the v arg.  Is that what you'd expect?  Also,\n> with this approach DefaultParameterConverter would need to type assert on\n> the ValueConvert interface.  Something like:\n>\n>         if nv, ok := v.(ValueConverter); ok {\n> return nv.ConvertValue(v)\n> }\n>\n> return nil, fmt.Errorf(\"unsupported type %s\", rv.Kind())\n>\n>\n>\n>\n> (B) Re: driver marshalling, I assume you mean have\n> DefaultParameterConverter know about the Null* types is that right?  That\n> was the path I headed down originally, but ran into cyclical dependency\n> issues.  sql.go already knows about driver, so types.go can't import\n> exp/sql.  I'm guessing we could work around this by moving the Null* types\n> into driver.  Is there an easier way?\n>\n>\n> I have (A) implemented locally and could push it if you think I'm on the\n> right track.  Or I could try going down the road of (B), moving the Null*\n> types into the driver package.\n>\n> thoughts?\n>\n> -- James\n>\n>\n>\n> On Mon, Jan 9, 2012 at 11:16 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n>\n>> Please update the CL description.  s/Nullable/Null/\n>>\n>> Also, I'm not a big fan of the driver.Nullable interface.  It exposes a\n>> lot of unnecessary gunk publicly that will crowd the godoc.\n>>\n>> I'd rather just make the driver marshalling know about these couple more\n>> concrete types explicitly.\n>>\n>> Alternatively, why can't NullString/NullInt64/etc just implement the\n>> already-existing ValueConverter interface?\n>>\n>>\n>> On Mon, Jan 9, 2012 at 2:41 PM, <jamespcooper@gmail.com> wrote:\n>>\n>>> Hello golang-dev@googlegroups.com, rsc@golang.org, bradfitz@golang.org,\n>>> tux21b@gmail.com (cc: golang-dev@googlegroups.com),\n>>>\n>>> Please take another look.\n>>>\n>>>\n>>> http://codereview.appspot.com/**5534048/<http://codereview.appspot.com/5534048/>\n>>>\n>>\n>>\n>\n>\n> --\n>\n> James Cooper\n> Principal Consultant - Bitmechanic LLC\n> http://www.bitmechanic.com/\n>\n",
			"disapproval": false,
			"date": "2012-01-10 00:05:08.033675",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Int64Opt?\n",
			"disapproval": false,
			"date": "2012-01-09 21:19:55.803827",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Brad,\n\nCL description has been updated.\n\n(A) Re: having the Null* types implement ValueConverter.  I assume you'd\nexpect something like this:\n\nfunc (n NullString) ConvertValue(v interface{}) (interface{}, error) {\nif n.Valid {\nreturn n.String, nil\n}\nreturn nil, nil\n}\n\nNote that we're ignoring the v arg.  Is that what you'd expect?  Also, with\nthis approach DefaultParameterConverter would need to type assert on the\nValueConvert interface.  Something like:\n\n        if nv, ok := v.(ValueConverter); ok {\nreturn nv.ConvertValue(v)\n}\n\nreturn nil, fmt.Errorf(\"unsupported type %s\", rv.Kind())\n\n\n\n\n(B) Re: driver marshalling, I assume you mean have\nDefaultParameterConverter know about the Null* types is that right?  That\nwas the path I headed down originally, but ran into cyclical dependency\nissues.  sql.go already knows about driver, so types.go can't import\nexp/sql.  I'm guessing we could work around this by moving the Null* types\ninto driver.  Is there an easier way?\n\n\nI have (A) implemented locally and could push it if you think I'm on the\nright track.  Or I could try going down the road of (B), moving the Null*\ntypes into the driver package.\n\nthoughts?\n\n-- James\n\n\n\nOn Mon, Jan 9, 2012 at 11:16 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n> Please update the CL description.  s/Nullable/Null/\n>\n> Also, I'm not a big fan of the driver.Nullable interface.  It exposes a\n> lot of unnecessary gunk publicly that will crowd the godoc.\n>\n> I'd rather just make the driver marshalling know about these couple more\n> concrete types explicitly.\n>\n> Alternatively, why can't NullString/NullInt64/etc just implement the\n> already-existing ValueConverter interface?\n>\n>\n> On Mon, Jan 9, 2012 at 2:41 PM, <jamespcooper@gmail.com> wrote:\n>\n>> Hello golang-dev@googlegroups.com, rsc@golang.org, bradfitz@golang.org,\n>> tux21b@gmail.com (cc: golang-dev@googlegroups.com),\n>>\n>> Please take another look.\n>>\n>>\n>> http://codereview.appspot.com/**5534048/<http://codereview.appspot.com/5534048/>\n>>\n>\n>\n\n\n-- \n\nJames Cooper\nPrincipal Consultant - Bitmechanic LLC\nhttp://www.bitmechanic.com/\n",
			"disapproval": false,
			"date": "2012-01-09 23:58:29.397687",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-09 16:17:36.912549",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yuck.  Can we at least use nicer names.\n",
			"disapproval": false,
			"date": "2012-01-09 19:25:30.502096",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jan 9, 2012 at 13:31, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> and rename NullableString to StringOpt too?\n>\n> if you don't like the -able suffix, maybe just NullString, NullInt64?\n\nthat's fine too\n",
			"disapproval": false,
			"date": "2012-01-09 22:22:10.965362",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please update the CL description.  s/Nullable/Null/\n\nAlso, I'm not a big fan of the driver.Nullable interface.  It exposes a lot\nof unnecessary gunk publicly that will crowd the godoc.\n\nI'd rather just make the driver marshalling know about these couple more\nconcrete types explicitly.\n\nAlternatively, why can't NullString/NullInt64/etc just implement the\nalready-existing ValueConverter interface?\n\n\nOn Mon, Jan 9, 2012 at 2:41 PM, <jamespcooper@gmail.com> wrote:\n\n> Hello golang-dev@googlegroups.com, rsc@golang.org, bradfitz@golang.org,\n> tux21b@gmail.com (cc: golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**5534048/<http://codereview.appspot.com/5534048/>\n>\n",
			"disapproval": false,
			"date": "2012-01-09 23:16:43.375952",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Totally understand.  I'm usually idling on IRC if you'd like to chat about\nsometime in the next few days.\n\ncheers\n\n-- James\n\nOn Tue, Jan 10, 2012 at 12:05 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n> Yeah, okay, I see now.  Both kinda suck.\n>\n> I'm still digging myself out of email from vacation.  Let me think on this\n> for a day or two and maybe clear some other distractions first.\n>\n>\n> On Mon, Jan 9, 2012 at 3:58 PM, James Cooper <jamespcooper@gmail.com>wrote:\n>\n>> Hi Brad,\n>>\n>> CL description has been updated.\n>>\n>> (A) Re: having the Null* types implement ValueConverter.  I assume you'd\n>> expect something like this:\n>>\n>> func (n NullString) ConvertValue(v interface{}) (interface{}, error) {\n>>  if n.Valid {\n>> return n.String, nil\n>> }\n>>  return nil, nil\n>> }\n>>\n>> Note that we're ignoring the v arg.  Is that what you'd expect?  Also,\n>> with this approach DefaultParameterConverter would need to type assert on\n>> the ValueConvert interface.  Something like:\n>>\n>>         if nv, ok := v.(ValueConverter); ok {\n>> return nv.ConvertValue(v)\n>> }\n>>\n>> return nil, fmt.Errorf(\"unsupported type %s\", rv.Kind())\n>>\n>>\n>>\n>>\n>> (B) Re: driver marshalling, I assume you mean have\n>> DefaultParameterConverter know about the Null* types is that right?  That\n>> was the path I headed down originally, but ran into cyclical dependency\n>> issues.  sql.go already knows about driver, so types.go can't import\n>> exp/sql.  I'm guessing we could work around this by moving the Null* types\n>> into driver.  Is there an easier way?\n>>\n>>\n>> I have (A) implemented locally and could push it if you think I'm on the\n>> right track.  Or I could try going down the road of (B), moving the Null*\n>> types into the driver package.\n>>\n>> thoughts?\n>>\n>> -- James\n>>\n>>\n>>\n>> On Mon, Jan 9, 2012 at 11:16 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n>>\n>>> Please update the CL description.  s/Nullable/Null/\n>>>\n>>> Also, I'm not a big fan of the driver.Nullable interface.  It exposes a\n>>> lot of unnecessary gunk publicly that will crowd the godoc.\n>>>\n>>> I'd rather just make the driver marshalling know about these couple more\n>>> concrete types explicitly.\n>>>\n>>> Alternatively, why can't NullString/NullInt64/etc just implement the\n>>> already-existing ValueConverter interface?\n>>>\n>>>\n>>> On Mon, Jan 9, 2012 at 2:41 PM, <jamespcooper@gmail.com> wrote:\n>>>\n>>>> Hello golang-dev@googlegroups.com, rsc@golang.org, bradfitz@golang.org,\n>>>> tux21b@gmail.com (cc: golang-dev@googlegroups.com),\n>>>>\n>>>> Please take another look.\n>>>>\n>>>>\n>>>> http://codereview.appspot.com/**5534048/<http://codereview.appspot.com/5534048/>\n>>>>\n>>>\n>>>\n>>\n>>\n>> --\n>>\n>> James Cooper\n>> Principal Consultant - Bitmechanic LLC\n>> http://www.bitmechanic.com/\n>>\n>\n>\n\n\n-- \n\nJames Cooper\nPrincipal Consultant - Bitmechanic LLC\nhttp://www.bitmechanic.com/\n",
			"disapproval": false,
			"date": "2012-01-10 00:11:46.432079",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jan 9, 2012 at 11:37 AM, <jamespcooper@gmail.com> wrote:\n\n> On 2012/01/09 19:25:30, rsc wrote:\n>\n>> Yuck.  Can we at least use nicer names.\n>>\n>\n> Sure thing.  I was following the pattern I saw with NullableString.\n> Brad had a TODO below NullableString that said to add additional types,\n> which I did.\n>\n> I'm totally open on the names though.  I'm on #go-nuts now if we want to\n> discuss there.\n>\n\nLet's use email.\n\nRuss, name proposals?  I thought I already sent out a CL like this too, but\nI don't know what ever happened to it.\n",
			"disapproval": false,
			"date": "2012-01-09 21:06:41.409817",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Brad,\n\nYep, happy to make those changes.\n\nThe other topic I wanted to raise is the coupling between exp/sql and\nexp/sql/driver.  I found it hard to avoid a cyclic dependency, and to test\nthe changes to DefaultParameterConverter I ended up duplicating some of the\ntest machinery from types_test.go into convert_test.go\n\nAre you guys ok with that?  Or do we want to try to figure out a more\nelegant way to test DefaultParamterConverter?\n\nthank you,\n\n-- James\n\nOn Mon, Jan 9, 2012 at 10:25 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n> On Mon, Jan 9, 2012 at 2:22 PM, Russ Cox <rsc@golang.org> wrote:\n>\n>> On Mon, Jan 9, 2012 at 13:31, Brad Fitzpatrick <bradfitz@golang.org>\n>> wrote:\n>> > and rename NullableString to StringOpt too?\n>> >\n>> > if you don't like the -able suffix, maybe just NullString, NullInt64?\n>>\n>> that's fine too\n>>\n>\n> okay, let's go with Null* then, which should be readily familiar to SQL\n> users\n>\n> James, you want to change NullableString in this same CL?\n>\n>\n\n\n-- \n\nJames Cooper\nPrincipal Consultant - Bitmechanic LLC\nhttp://www.bitmechanic.com/\n",
			"disapproval": false,
			"date": "2012-01-09 22:27:17.976555",
			"approval": false
		},
		{
			"sender": "tux21b@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It was probably discussed before, but what are the advantages of \nNullString, NullInt64 etc. over *string and *int64?\nIf I remember correctly, you can use pointers with the json package too, to \ndetect missing elements (instead of\nempty ones).\n\nThanks,\nChristoph\n",
			"disapproval": false,
			"date": "2012-01-09 22:29:52.640306",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "and rename NullableString to StringOpt too?\n\nif you don't like the -able suffix, maybe just NullString, NullInt64?\n\nOn Mon, Jan 9, 2012 at 1:19 PM, Russ Cox <rsc@golang.org> wrote:\n\n> Int64Opt?\n>\n",
			"disapproval": false,
			"date": "2012-01-09 21:31:27.372758",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Brad can probably answer authoritatively, but I tried playing with that\nover the weekend and found that Scan() was unhappy if I gave it pointers.\n So it would require a bit more work.  I'm not sure if there are other\ntradeoffs.\n\ncheers\n\n-- James\n\nOn Mon, Jan 9, 2012 at 10:29 PM, Christoph Hack <tux21b@gmail.com> wrote:\n\n> It was probably discussed before, but what are the advantages of\n> NullString, NullInt64 etc. over *string and *int64?\n> If I remember correctly, you can use pointers with the json package too,\n> to detect missing elements (instead of\n> empty ones).\n>\n> Thanks,\n> Christoph\n>\n\n\n\n-- \n\nJames Cooper\nPrincipal Consultant - Bitmechanic LLC\nhttp://www.bitmechanic.com/\n",
			"disapproval": false,
			"date": "2012-01-09 22:31:47.393311",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "James,\n\nI didn't add all the new types, but I did work on addressing the problems\nof using NullString as a parameter.  Check out:\n\nhttp://codereview.appspot.com/5536045/\n\nSee driver.SubsetValuer and its use.  It's the best name I could come up\nwith, but there are probably better ones.  Open to suggestions.\n\nAfter that's in, then we can add more types.\n\n\nOn Mon, Jan 9, 2012 at 4:11 PM, James Cooper <jamespcooper@gmail.com> wrote:\n\n> Totally understand.  I'm usually idling on IRC if you'd like to chat about\n> sometime in the next few days.\n>\n> cheers\n>\n> -- James\n>\n>\n> On Tue, Jan 10, 2012 at 12:05 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n>\n>> Yeah, okay, I see now.  Both kinda suck.\n>>\n>> I'm still digging myself out of email from vacation.  Let me think on\n>> this for a day or two and maybe clear some other distractions first.\n>>\n>>\n>> On Mon, Jan 9, 2012 at 3:58 PM, James Cooper <jamespcooper@gmail.com>wrote:\n>>\n>>> Hi Brad,\n>>>\n>>> CL description has been updated.\n>>>\n>>> (A) Re: having the Null* types implement ValueConverter.  I assume you'd\n>>> expect something like this:\n>>>\n>>> func (n NullString) ConvertValue(v interface{}) (interface{}, error) {\n>>>  if n.Valid {\n>>> return n.String, nil\n>>> }\n>>>  return nil, nil\n>>> }\n>>>\n>>> Note that we're ignoring the v arg.  Is that what you'd expect?  Also,\n>>> with this approach DefaultParameterConverter would need to type assert on\n>>> the ValueConvert interface.  Something like:\n>>>\n>>>         if nv, ok := v.(ValueConverter); ok {\n>>> return nv.ConvertValue(v)\n>>> }\n>>>\n>>> return nil, fmt.Errorf(\"unsupported type %s\", rv.Kind())\n>>>\n>>>\n>>>\n>>>\n>>> (B) Re: driver marshalling, I assume you mean have\n>>> DefaultParameterConverter know about the Null* types is that right?  That\n>>> was the path I headed down originally, but ran into cyclical dependency\n>>> issues.  sql.go already knows about driver, so types.go can't import\n>>> exp/sql.  I'm guessing we could work around this by moving the Null* types\n>>> into driver.  Is there an easier way?\n>>>\n>>>\n>>> I have (A) implemented locally and could push it if you think I'm on the\n>>> right track.  Or I could try going down the road of (B), moving the Null*\n>>> types into the driver package.\n>>>\n>>> thoughts?\n>>>\n>>> -- James\n>>>\n>>>\n>>>\n>>> On Mon, Jan 9, 2012 at 11:16 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n>>>\n>>>> Please update the CL description.  s/Nullable/Null/\n>>>>\n>>>> Also, I'm not a big fan of the driver.Nullable interface.  It exposes a\n>>>> lot of unnecessary gunk publicly that will crowd the godoc.\n>>>>\n>>>> I'd rather just make the driver marshalling know about these couple\n>>>> more concrete types explicitly.\n>>>>\n>>>> Alternatively, why can't NullString/NullInt64/etc just implement the\n>>>> already-existing ValueConverter interface?\n>>>>\n>>>>\n>>>> On Mon, Jan 9, 2012 at 2:41 PM, <jamespcooper@gmail.com> wrote:\n>>>>\n>>>>> Hello golang-dev@googlegroups.com, rsc@golang.org, bradfitz@golang.org\n>>>>> ,\n>>>>> tux21b@gmail.com (cc: golang-dev@googlegroups.com),\n>>>>>\n>>>>> Please take another look.\n>>>>>\n>>>>>\n>>>>> http://codereview.appspot.com/**5534048/<http://codereview.appspot.com/5534048/>\n>>>>>\n>>>>\n>>>>\n>>>\n>>>\n>>> --\n>>>\n>>> James Cooper\n>>> Principal Consultant - Bitmechanic LLC\n>>> http://www.bitmechanic.com/\n>>>\n>>\n>>\n>\n>\n> --\n>\n> James Cooper\n> Principal Consultant - Bitmechanic LLC\n> http://www.bitmechanic.com/\n>\n",
			"disapproval": false,
			"date": "2012-01-19 04:01:31.377674",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "James, were you still going to finish this CL up, now that the SubsetValuer\nstuff is in?\n\nOn Mon, Jan 9, 2012 at 8:17 AM, <jamespcooper@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> exp/sql: Add NullableInt64, NullableFloat64, NullableBool,\n> NullableBytes.\n> exp/sql/driver - Modify DefaultParamterConverter to convert Nullable sql\n> types\n>\n> Please review this at http://codereview.appspot.com/**5534048/<http://codereview.appspot.com/5534048/>\n>\n> Affected files:\n>  M src/pkg/exp/sql/convert_test.**go\n>  M src/pkg/exp/sql/driver/types.**go\n>  M src/pkg/exp/sql/sql.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-24 05:50:08.486947",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Brad,\n\nYep, I submitted a new changelist for it.  Apologies if I should have used\nthe existing one.\n\nhttp://codereview.appspot.com/5557063/\n\ncheers\n\n-- James\n\nOn Mon, Jan 23, 2012 at 9:50 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n> James, were you still going to finish this CL up, now that the\n> SubsetValuer stuff is in?\n>\n>\n> On Mon, Jan 9, 2012 at 8:17 AM, <jamespcooper@gmail.com> wrote:\n>\n>> Reviewers: golang-dev_googlegroups.com,\n>>\n>> Message:\n>> Hello golang-dev@googlegroups.com,\n>>\n>> I'd like you to review this change to\n>> https://go.googlecode.com/hg/\n>>\n>>\n>> Description:\n>> exp/sql: Add NullableInt64, NullableFloat64, NullableBool,\n>> NullableBytes.\n>> exp/sql/driver - Modify DefaultParamterConverter to convert Nullable sql\n>> types\n>>\n>> Please review this at http://codereview.appspot.com/**5534048/<http://codereview.appspot.com/5534048/>\n>>\n>> Affected files:\n>>  M src/pkg/exp/sql/convert_test.**go\n>>  M src/pkg/exp/sql/driver/types.**go\n>>  M src/pkg/exp/sql/sql.go\n>>\n>>\n>>\n>\n\n\n-- \n\nJames Cooper\nPrincipal Consultant - Bitmechanic LLC\nhttp://www.bitmechanic.com/\n",
			"disapproval": false,
			"date": "2012-01-24 06:29:35.560577",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Oh, perfect.  Sorry, I must've missed it, or confused it with this thread.\n\nOn Mon, Jan 23, 2012 at 10:29 PM, James Cooper <jamespcooper@gmail.com>wrote:\n\n> Hi Brad,\n>\n> Yep, I submitted a new changelist for it.  Apologies if I should have used\n> the existing one.\n>\n> http://codereview.appspot.com/5557063/\n>\n> cheers\n>\n> -- James\n>\n>\n> On Mon, Jan 23, 2012 at 9:50 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n>\n>> James, were you still going to finish this CL up, now that the\n>> SubsetValuer stuff is in?\n>>\n>>\n>> On Mon, Jan 9, 2012 at 8:17 AM, <jamespcooper@gmail.com> wrote:\n>>\n>>> Reviewers: golang-dev_googlegroups.com,\n>>>\n>>> Message:\n>>> Hello golang-dev@googlegroups.com,\n>>>\n>>> I'd like you to review this change to\n>>> https://go.googlecode.com/hg/\n>>>\n>>>\n>>> Description:\n>>> exp/sql: Add NullableInt64, NullableFloat64, NullableBool,\n>>> NullableBytes.\n>>> exp/sql/driver - Modify DefaultParamterConverter to convert Nullable sql\n>>> types\n>>>\n>>> Please review this at http://codereview.appspot.com/**5534048/<http://codereview.appspot.com/5534048/>\n>>>\n>>> Affected files:\n>>>  M src/pkg/exp/sql/convert_test.**go\n>>>  M src/pkg/exp/sql/driver/types.**go\n>>>  M src/pkg/exp/sql/sql.go\n>>>\n>>>\n>>>\n>>\n>\n>\n> --\n>\n> James Cooper\n> Principal Consultant - Bitmechanic LLC\n> http://www.bitmechanic.com/\n>\n",
			"disapproval": false,
			"date": "2012-01-24 14:55:29.622248",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"tux21b@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-01-26 17:30:25.489813",
			"approval": false
		}
	],
	"owner_email": "jamespcooper@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "coopernurse",
	"subject": "code review 5534048: exp/sql: Add NullInt64, NullFloat64, NullBo...",
	"created": "2012-01-09 16:16:31.605765",
	"patchsets": [
		1,
		1002,
		1003
	],
	"modified": "2012-01-26 17:30:26.962659",
	"closed": true,
	"issue": 5534048
}