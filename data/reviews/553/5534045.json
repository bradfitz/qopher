{
	"description": "doc: update \"How to Write Go Code\" to use the go tool",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"kevlar@google.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nrsc might want to look too\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html#newcode69\ndoc/code.html:69: least use a unique prefix like \"<code>example/</code>\", as in\n'example' is too generic.\ns/example/widgets/g",
			"disapproval": false,
			"date": "2012-01-10 17:45:11.744798",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"kevlar@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=e287fecf68dc ***\n\ndoc: update \"How to Write Go Code\" to use the go tool\n\nR=golang-dev, r, kevlar, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5534045",
			"disapproval": false,
			"date": "2012-01-11 21:25:56.127373",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-01-09 03:15:04.090100",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5534045/diff/1/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5534045/diff/1/doc/code.html#newcode68\ndoc/code.html:68: the source code from its import path.\nOn 2012/01/09 19:42:22, r wrote:\n> shouldn't you say this first? that is, rewrite so the go install stuff works,\n> and then say that if you don't intend your code to be installed this way, at\n> least make sure the prefix is unique.\n\nDone.\n\nhttp://codereview.appspot.com/5534045/diff/1/doc/code.html#newcode96\ndoc/code.html:96: $ cat &gt; $GOPATH/src/example/foo/foo.go &lt;&lt;EOF\nOn 2012/01/09 19:42:22, r wrote:\n> don't use here documents. they're mysterious and make the code have > signs\n> \n> cat > file\n> ....\n> ^D\n> \n> is clear enough\n\nAw, I like here documents, but you're right. Done.",
			"disapproval": false,
			"date": "2012-01-09 23:53:50.000859",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5534045/diff/1/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5534045/diff/1/doc/code.html#newcode68\ndoc/code.html:68: the source code from its import path.\nshouldn't you say this first? that is, rewrite so the go install stuff works, and then say that if you don't intend your code to be installed this way, at least make sure the prefix is unique.\n\nhttp://codereview.appspot.com/5534045/diff/1/doc/code.html#newcode96\ndoc/code.html:96: $ cat &gt; $GOPATH/src/example/foo/foo.go &lt;&lt;EOF\ndon't use here documents. they're mysterious and make the code have > signs\n\ncat > file\n....\n^D\n\nis clear enough",
			"disapproval": false,
			"date": "2012-01-09 19:42:21.971150",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5534045/diff/1002/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode70\ndoc/code.html:70: \"<code>example/foo/bar</code>\".\nA good rule is to use a prefix such as your company or project name since it is unlikely to be used by another group.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode78\ndoc/code.html:78: installing Go libraries and programs. It is a \"zero configuration\" tool;\nare these quotes safe?\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode83\ndoc/code.html:83: To use the go tool effectively you must set the <code>GOPATH</code> variable.\n<code>go</code> here and elsewhere?\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode109\ndoc/code.html:109: (<code>$HOME/.bashrc</code>, <code>$HOME/.profile</code>, or equivalent) now.\ndangling \"now\". maybe even move this idea up above the example\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode113\ndoc/code.html:113: Type \"<code>go help gopath</code>\" on the command line for more information\nno quotes; maybe make a <pre>\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode121\ndoc/code.html:121: The first statement in Go source file should be <code>package\na Go source file?\nGo source files?\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode163\ndoc/code.html:163: \"fmt\"\ni use four spaces in HTML to avoid tabbing issues.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode177\ndoc/code.html:177: See \"<code>go help build</code>\" and \"<code>go help install</code>\" for more\nno quotes\nalso you can't see a command, but you can run one or see its output\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode184\ndoc/code.html:184: Go has a lightweight test framework comprised of the go tool and the\nshame! incorrect use of comprise\ncomprising or composed of\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode277\ndoc/code.html:277: (it can then be used by any program on the system).\nsystem?\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode290\ndoc/code.html:290: See <code>\"go help test\"</code>, <code>\"go help testfunc\"</code>,\nagain",
			"disapproval": false,
			"date": "2012-01-10 00:26:20.260219",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5534045/diff/1002/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode70\ndoc/code.html:70: \"<code>example/foo/bar</code>\".\nOn 2012/01/10 00:26:20, r wrote:\n> A good rule is to use a prefix such as your company or project name since it is\n> unlikely to be used by another group.\n\nDone.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode78\ndoc/code.html:78: installing Go libraries and programs. It is a \"zero configuration\" tool;\nOn 2012/01/10 00:26:20, r wrote:\n> are these quotes safe?\n\nYes.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode83\ndoc/code.html:83: To use the go tool effectively you must set the <code>GOPATH</code> variable.\nOn 2012/01/10 00:26:20, r wrote:\n> <code>go</code> here and elsewhere?\n\nDone.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode109\ndoc/code.html:109: (<code>$HOME/.bashrc</code>, <code>$HOME/.profile</code>, or equivalent) now.\nOn 2012/01/10 00:26:20, r wrote:\n> dangling \"now\". maybe even move this idea up above the example\n\nDone.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode113\ndoc/code.html:113: Type \"<code>go help gopath</code>\" on the command line for more information\nOn 2012/01/10 00:26:20, r wrote:\n> no quotes; maybe make a <pre>\n\nDone.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode121\ndoc/code.html:121: The first statement in Go source file should be <code>package\nOn 2012/01/10 00:26:20, r wrote:\n> a Go source file?\n> Go source files?\n\nDone.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode163\ndoc/code.html:163: \"fmt\"\nOn 2012/01/10 00:26:20, r wrote:\n> i use four spaces in HTML to avoid tabbing issues.\n\nDone.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode177\ndoc/code.html:177: See \"<code>go help build</code>\" and \"<code>go help install</code>\" for more\nOn 2012/01/10 00:26:20, r wrote:\n> no quotes\n> also you can't see a command, but you can run one or see its output\n\nDone.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode184\ndoc/code.html:184: Go has a lightweight test framework comprised of the go tool and the\nOn 2012/01/10 00:26:20, r wrote:\n> shame! incorrect use of comprise\n> comprising or composed of\n\n:-(\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode277\ndoc/code.html:277: (it can then be used by any program on the system).\nOn 2012/01/10 00:26:20, r wrote:\n> system?\n\nRe-worded.\n\nhttp://codereview.appspot.com/5534045/diff/1002/doc/code.html#newcode290\ndoc/code.html:290: See <code>\"go help test\"</code>, <code>\"go help testfunc\"</code>,\nOn 2012/01/10 00:26:20, r wrote:\n> again\n\nDone.",
			"disapproval": false,
			"date": "2012-01-10 02:32:38.274698",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"kevlar@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5534045/diff/6/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html#newcode52\ndoc/code.html:52: <code>errors</code> for convenience.\nOn 2012/01/10 18:35:42, kevlar wrote:\n> I would use something like \"net/http\" for the second example (e.g. something\n> with a /, but which is still \"short\" for some definition of short).\n\nDone.\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html#newcode69\ndoc/code.html:69: least use a unique prefix like \"<code>example/</code>\", as in\nOn 2012/01/10 17:45:11, r wrote:\n> 'example' is too generic.\n> s/example/widgets/g\n\nDone.\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html#newcode107\ndoc/code.html:107: ^D\nOn 2012/01/10 18:35:42, kevlar wrote:\n> Is there any way to bold or italicize this? Or maybe mention somewhere that ^D\n> means to hit \"ctrl+d\"?  I've confused people by using this notation before.\n\nI added a parenthetical after the pre block.\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html#newcode151\ndoc/code.html:151: the <code>GOPATH</code>'s <code>bin</code> subdirectory.\nOn 2012/01/10 18:35:42, kevlar wrote:\n> If there is more than one directory in GOPATH, which one does it use?  Is there\n> a reason not to specify this rule here?\n\nI think it's outside the scope of this 'getting started' style document. I'll write a more detailed article on the go tool later.\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html#newcode221\ndoc/code.html:221: -test.bench=.</code>.\nOn 2012/01/10 18:35:42, kevlar wrote:\n> I might use -test.bench=\".*\" to be clear that . isn't a directory but a regex.\n\nDone.",
			"disapproval": false,
			"date": "2012-01-11 01:59:44.881210",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-01-11 21:21:52.145160",
			"approval": true
		},
		{
			"sender": "kevlar@google.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"kevlar@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The only thing I'd like to see added is a discussion of multiple paths in GOPATH.  A common complaint (I think) is having to change GOPATH for every (group of) project(s), when I think GOPATH was designed to have multiple directories for this reason.  I understand if this is too advanced for this document, though.\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html\nFile doc/code.html (right):\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html#newcode52\ndoc/code.html:52: <code>errors</code> for convenience.\nI would use something like \"net/http\" for the second example (e.g. something with a /, but which is still \"short\" for some definition of short).\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html#newcode107\ndoc/code.html:107: ^D\nIs there any way to bold or italicize this? Or maybe mention somewhere that ^D means to hit \"ctrl+d\"?  I've confused people by using this notation before.\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html#newcode151\ndoc/code.html:151: the <code>GOPATH</code>'s <code>bin</code> subdirectory.\nIf there is more than one directory in GOPATH, which one does it use?  Is there a reason not to specify this rule here?\n\nhttp://codereview.appspot.com/5534045/diff/6/doc/code.html#newcode221\ndoc/code.html:221: -test.bench=.</code>.\nI might use -test.bench=\".*\" to be clear that . isn't a directory but a regex.",
			"disapproval": false,
			"date": "2012-01-10 18:35:41.864335",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5534045: doc: update \"How to Write Go Code\" to use the go tool",
	"created": "2012-01-09 03:14:57.818953",
	"patchsets": [
		1,
		1002,
		3003,
		4003,
		5001,
		6,
		4005,
		9
	],
	"modified": "2012-01-11 21:25:59.212530",
	"closed": true,
	"issue": 5534045
}