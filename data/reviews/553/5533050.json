{
	"description": "graphics/interp: interface-based interpolation API",
	"cc": [
		"nigeltao@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5533050/diff/1010/graphics/affine.go\nFile graphics/affine.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/affine.go#newcode41\ngraphics/affine.go:41: func (a Affine) transformRGBA(dst *image.RGBA, src *image.RGBA, i interp.Interp) error {\ns/Interp/RGBA/ and do the interface check at line 77.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go\nFile graphics/interp/bilinear.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode13\ngraphics/interp/bilinear.go:13: // Bilinear is an implementation of bilinear interpolation.\ns/is an implementation of/implements/ is shorter.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode14\ngraphics/interp/bilinear.go:14: var Bilinear Interp = new(bilinear)\ns/new(bilinear)/bilinear{}/.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode22\ngraphics/interp/bilinear.go:22: \nThis function is so short that I'd delete this blank line.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode99\ngraphics/interp/bilinear.go:99: \nDeleting this blank line would match bilinearGeneral.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode123\ngraphics/interp/bilinear.go:123: type linearSrc struct {\ns/linearSrc/bilinearSrc/, since I don't think this type is right for e.g. tri-linear interpolation?\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode132\ngraphics/interp/bilinear.go:132: swidth := float64(b.Dx())\nThis bug was there beforehand, but I think you want s/b.Dx()/b.Max.X/ in case the source image's bounds don't start at (0, 0).\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/doc.go\nFile graphics/interp/doc.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/doc.go#newcode9\ngraphics/interp/doc.go:9: to interpolate a pixel\nAdd a trailing \":\" or \".\".\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/doc.go#newcode14\ngraphics/interp/doc.go:14: may provide a fastpath by implementing the RGBA and Gray interfaces.\ns/fastpath/fast-path/.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/doc.go#newcode16\ngraphics/interp/doc.go:16: iRgba, ok := i.(interp.RGBA)\nGo style is iRGBA, or i1, or j.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/interp.go\nFile graphics/interp/interp.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/interp.go#newcode12\ngraphics/interp/interp.go:12: // Interp is an interpolation implementation.\nThis sentence doesn't contain much information. How about\n\n// Interp interpolates an image's color at fractional co-ordinates.\n\nFeel free to s/fractional/sub-pixel/ if you think that that's better.",
			"disapproval": false,
			"date": "2012-01-10 05:57:33.638716",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-01-10 10:14:27.077469",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Followup CL in the works.\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/bilinear.go\nFile graphics/interp/bilinear.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/bilinear.go#newcode205\ngraphics/interp/bilinear.go:205: func offGray(src *image.Gray, x, y int) int {\nOn 2012/01/10 07:02:49, nigeltao wrote:\n> Add a blank line before this one.\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/bilinear_test.go\nFile graphics/interp/bilinear_test.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/bilinear_test.go#newcode52\ngraphics/interp/bilinear_test.go:52: 0xff, 0x00,\nOn 2012/01/10 07:02:49, nigeltao wrote:\n> It would also be nice to have some test cases that weren't so symmetric. That\n> might shake out any \"I mistakenly swapped X and Y\" programming errors.\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/doc.go\nFile graphics/interp/doc.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/doc.go#newcode14\ngraphics/interp/doc.go:14: may provide a fast-path by implementing the RGBA and Gray interfaces.\nOn 2012/01/10 07:02:49, nigeltao wrote:\n> s/and/or/.\n\nDone.",
			"disapproval": false,
			"date": "2012-01-10 07:13:49.120868",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as fccf2bd86494 ***\n\ngraphics/interp: interface-based interpolation API\n\nR=nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/5533050",
			"disapproval": false,
			"date": "2012-01-10 07:14:24.263211",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the review!\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/affine.go\nFile graphics/affine.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/affine.go#newcode41\ngraphics/affine.go:41: func (a Affine) transformRGBA(dst *image.RGBA, src *image.RGBA, i interp.Interp) error {\nOn 2012/01/10 05:57:33, nigeltao wrote:\n> s/Interp/RGBA/ and do the interface check at line 77.\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/affine.go#newcode75\ngraphics/affine.go:75: dstRgba, dstOk := dst.(*image.RGBA)\nOn 2012/01/10 05:58:53, nigeltao wrote:\n> s/dstRgba/dstRGBA/ and similarly for srcRGBA and interpRGBA.\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go\nFile graphics/interp/bilinear.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode13\ngraphics/interp/bilinear.go:13: // Bilinear is an implementation of bilinear interpolation.\nOn 2012/01/10 05:57:33, nigeltao wrote:\n> s/is an implementation of/implements/ is shorter.\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode14\ngraphics/interp/bilinear.go:14: var Bilinear Interp = new(bilinear)\nOn 2012/01/10 05:57:33, nigeltao wrote:\n> s/new(bilinear)/bilinear{}/.\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode22\ngraphics/interp/bilinear.go:22: \nOn 2012/01/10 05:57:33, nigeltao wrote:\n> This function is so short that I'd delete this blank line.\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode99\ngraphics/interp/bilinear.go:99: \nOn 2012/01/10 05:57:33, nigeltao wrote:\n> Deleting this blank line would match bilinearGeneral.\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode123\ngraphics/interp/bilinear.go:123: type linearSrc struct {\nOn 2012/01/10 05:57:33, nigeltao wrote:\n> s/linearSrc/bilinearSrc/, since I don't think this type is right for e.g.\n> tri-linear interpolation?\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/bilinear.go#newcode132\ngraphics/interp/bilinear.go:132: swidth := float64(b.Dx())\nOn 2012/01/10 05:57:33, nigeltao wrote:\n> This bug was there beforehand, but I think you want s/b.Dx()/b.Max.X/ in case\n> the source image's bounds don't start at (0, 0).\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/doc.go\nFile graphics/interp/doc.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/doc.go#newcode9\ngraphics/interp/doc.go:9: to interpolate a pixel\nOn 2012/01/10 05:57:33, nigeltao wrote:\n> Add a trailing \":\" or \".\".\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/doc.go#newcode14\ngraphics/interp/doc.go:14: may provide a fastpath by implementing the RGBA and Gray interfaces.\nOn 2012/01/10 05:57:33, nigeltao wrote:\n> s/fastpath/fast-path/.\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/doc.go#newcode16\ngraphics/interp/doc.go:16: iRgba, ok := i.(interp.RGBA)\nOn 2012/01/10 05:57:33, nigeltao wrote:\n> Go style is iRGBA, or i1, or j.\n\nDone.\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/interp.go\nFile graphics/interp/interp.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/interp/interp.go#newcode12\ngraphics/interp/interp.go:12: // Interp is an interpolation implementation.\nOn 2012/01/10 05:57:33, nigeltao wrote:\n> This sentence doesn't contain much information. How about\n> \n> // Interp interpolates an image's color at fractional co-ordinates.\n> \n> Feel free to s/fractional/sub-pixel/ if you think that that's better.\n\nDone.",
			"disapproval": false,
			"date": "2012-01-10 06:22:00.311298",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://crawshaw%40google.com@code.google.com/p/graphics-go/",
			"disapproval": false,
			"date": "2012-01-10 02:21:47.868139",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5533050/diff/1010/graphics/affine.go\nFile graphics/affine.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/1010/graphics/affine.go#newcode75\ngraphics/affine.go:75: dstRgba, dstOk := dst.(*image.RGBA)\ns/dstRgba/dstRGBA/ and similarly for srcRGBA and interpRGBA.",
			"disapproval": false,
			"date": "2012-01-10 05:58:53.629589",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"crawshaw@google.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nOn closer inspection, the s/srcb.Dx()/b.Max.X/ bug runs deeper: you're comparing sx to 0 instead of minX, throughout findLinearSrc.\n\nHow about we keep the bug for now, going back to srcb.Dx() and swidth, and fix the \"src image bounds' min might not be (0, 0)\" bug in a follow-up CL? (Hence, the LGTM).\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/bilinear.go\nFile graphics/interp/bilinear.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/bilinear.go#newcode130\ngraphics/interp/bilinear.go:130: swidth := float64(b.Max.X)\ns/swidth/maxX/\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/bilinear.go#newcode175\ngraphics/interp/bilinear.go:175: } else if sy <= 0.5 && sx <= 0.5 {\ns/sy/sy - minY/ and similarly for X, and below.\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/bilinear.go#newcode205\ngraphics/interp/bilinear.go:205: func offGray(src *image.Gray, x, y int) int {\nAdd a blank line before this one.\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/bilinear_test.go\nFile graphics/interp/bilinear_test.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/bilinear_test.go#newcode52\ngraphics/interp/bilinear_test.go:52: 0xff, 0x00,\nIt would also be nice to have some test cases that weren't so symmetric. That might shake out any \"I mistakenly swapped X and Y\" programming errors.\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/doc.go\nFile graphics/interp/doc.go (right):\n\nhttp://codereview.appspot.com/5533050/diff/7/graphics/interp/doc.go#newcode14\ngraphics/interp/doc.go:14: may provide a fast-path by implementing the RGBA and Gray interfaces.\ns/and/or/.",
			"disapproval": false,
			"date": "2012-01-10 07:02:49.110814",
			"approval": true
		}
	],
	"owner_email": "crawshaw@google.com",
	"private": false,
	"base_url": "",
	"owner": "crawshaw1",
	"subject": "code review 5533050: graphics/interp: interface-based interpolation API",
	"created": "2012-01-09 06:05:46.538014",
	"patchsets": [
		1,
		1001,
		4,
		5,
		1009,
		1010,
		7,
		8001,
		4010
	],
	"modified": "2012-01-10 10:14:28.850836",
	"closed": true,
	"issue": 5533050
}