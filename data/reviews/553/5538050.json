{
	"description": "effective_go: provide reference to runtime.NumCPU()",
	"cc": [
		"golang-dev@googlegroups.com",
		"robert.hencke@gmail.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"robert.hencke@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5538050/diff/3006/doc/effective_go.tmpl\nFile doc/effective_go.tmpl (right):\n\nhttp://codereview.appspot.com/5538050/diff/3006/doc/effective_go.tmpl#newcode2565\ndoc/effective_go.tmpl:2565: <code>runtime.GOMAXPROCS(runtime.NumCPU())</code>).\ni don't think this is right, exactly. if i say 2*runtime.NumCPU() i also use all the cores.\n\nthis info should be in the(default 1) parenthetical:\n(default 1; the function runtime.NumCPU() returns the number of cores on the machine)\n\nexcept that's pretty clunky.\n\nif you'd prefer, i'd be happy to rearrange this paragraph to make it work better.",
			"disapproval": false,
			"date": "2012-01-12 15:27:17.828249",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"robert.hencke@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM if you like my edits.\n\nhttp://codereview.appspot.com/5538050/diff/2011/doc/effective_go.tmpl\nFile doc/effective_go.tmpl (right):\n\nhttp://codereview.appspot.com/5538050/diff/2011/doc/effective_go.tmpl#newcode2562\ndoc/effective_go.tmpl:2562: variable <code>GOMAXPROCS</code> set to the number of cores to use;\ns/;// (erroneous punctuation in original)\n\nhttp://codereview.appspot.com/5538050/diff/2011/doc/effective_go.tmpl#newcode2563\ndoc/effective_go.tmpl:2563: or import the <code>runtime</code> package and call <code>runtime.GOMAXPROCS(NCPU)</code>\ns/$/./\n\nhttp://codereview.appspot.com/5538050/diff/2011/doc/effective_go.tmpl#newcode2564\ndoc/effective_go.tmpl:2564: (<code>runtime.NumCPU()</code> can be used to query the number of logical CPUs on the local machine).\nChange this to\n\nA helpful value might be <code>runtime.NumCPU()</code>, which reports the number of logical CPUS on the local machine.",
			"disapproval": false,
			"date": "2012-01-12 17:47:15.998000",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"robert.hencke@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/12 15:27:17, r wrote:\n> http://codereview.appspot.com/5538050/diff/3006/doc/effective_go.tmpl\n> File doc/effective_go.tmpl (right):\n> \n> http://codereview.appspot.com/5538050/diff/3006/doc/effective_go.tmpl#newcode2565\n> doc/effective_go.tmpl:2565: <code>runtime.GOMAXPROCS(runtime.NumCPU())</code>).\n> i don't think this is right, exactly. if i say 2*runtime.NumCPU() i also use all\n> the cores.\n> \n> this info should be in the(default 1) parenthetical:\n> (default 1; the function runtime.NumCPU() returns the number of cores on the\n> machine)\n> \n> except that's pretty clunky.\n> \n> if you'd prefer, i'd be happy to rearrange this paragraph to make it work\n> better.\n\nPTAL\nI've removed the (default 1) remark - the previous text clearly says that only 1 CPU is used by default. I've also rephrased NumCPU wording.",
			"disapproval": false,
			"date": "2012-01-12 17:21:13.169697",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"robert.hencke@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/12 17:47:15, r wrote:\n> LGTM if you like my edits.\n\nI like your edits. All done.\n\n> \n> http://codereview.appspot.com/5538050/diff/2011/doc/effective_go.tmpl\n> File doc/effective_go.tmpl (right):\n> \n> http://codereview.appspot.com/5538050/diff/2011/doc/effective_go.tmpl#newcode2562\n> doc/effective_go.tmpl:2562: variable <code>GOMAXPROCS</code> set to the number\n> of cores to use;\n> s/;// (erroneous punctuation in original)\n> \n> http://codereview.appspot.com/5538050/diff/2011/doc/effective_go.tmpl#newcode2563\n> doc/effective_go.tmpl:2563: or import the <code>runtime</code> package and call\n> <code>runtime.GOMAXPROCS(NCPU)</code>\n> s/$/./\n> \n> http://codereview.appspot.com/5538050/diff/2011/doc/effective_go.tmpl#newcode2564\n> doc/effective_go.tmpl:2564: (<code>runtime.NumCPU()</code> can be used to query\n> the number of logical CPUs on the local machine).\n> Change this to\n> \n> A helpful value might be <code>runtime.NumCPU()</code>, which reports the number\n> of logical CPUS on the local machine.",
			"disapproval": false,
			"date": "2012-01-12 17:57:00.860088",
			"approval": false
		},
		{
			"sender": "robert.hencke@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"robert.hencke@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM fwiw\n\nhttp://codereview.appspot.com/5538050/diff/1002/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttp://codereview.appspot.com/5538050/diff/1002/doc/effective_go.html#newcode2627\ndoc/effective_go.html:2627: <code>runtime.GOMAXPROCS(NCPU)</code> (to use all available cores call\nComma after cores?",
			"disapproval": false,
			"date": "2012-01-12 15:14:08.247513",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-12 10:51:32.639652",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"robert.hencke@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, robert.hencke@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-12 15:21:36.638601",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"robert.hencke@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=48ac1863c1e2 ***\n\neffective_go: provide reference to runtime.NumCPU()\n\nR=golang-dev, robert.hencke, r\nCC=golang-dev\nhttp://codereview.appspot.com/5538050",
			"disapproval": false,
			"date": "2012-01-12 18:06:57.263994",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 5538050: effective_go: provide reference to runtime.NumCPU()",
	"created": "2012-01-12 10:48:19.752270",
	"patchsets": [
		1,
		2001,
		1002,
		5002,
		3006,
		4006,
		2011,
		7001,
		7002,
		6008,
		6009,
		5010,
		32,
		2026,
		4012,
		6014,
		4013
	],
	"modified": "2012-01-12 18:06:58.932268",
	"closed": true,
	"issue": 5538050
}