{
	"description": "strconv: return ErrSyntax when unquoting illegal octal sequences.  This\nis consistent with what the Go compiler returns when such sequences\nappear in string literals.\n\nFixes issue 2658.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"r@golang.org",
		"r@google.com",
		"nigeltao@golang.org"
	],
	"reviewers": [
		"mikesamuel@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I should add that I think it's fine to disable the test in html for now\nand leave it for the html package authors to fix the bug in html\nseparately.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-09 23:16:36.148622",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "2012/1/11 Rob 'Commander' Pike <r@google.com>:\n>\n> On Jan 11, 2012, at 12:25 PM, mikesamuel@gmail.com wrote:\n>\n>>\n>> http://codereview.appspot.com/5530051/diff/5003/src/pkg/html/template/escape_test.go\n>> File src/pkg/html/template/escape_test.go (right):\n>>\n>> http://codereview.appspot.com/5530051/diff/5003/src/pkg/html/template/escape_test.go#newcode306\n>> src/pkg/html/template/escape_test.go:306: // \u00a0`<p style=\"width: {{\"\n>> e\\78preS\\0Sio/**/n(alert(1337))\"}}\">`,\n>> I'm stupid. \u00a0This and the below are meant to be testing literal CSS\n>> text, so\n>>\n>> \u00a0 \" \u00a0e\\78preS\\0Sio/**/n(alert(1337))\"\n>\n>>\n>> should be\n>>\n>> \u00a0 \" \u00a0e\\\\78preS\\0Sio/**/n(alert(1337))\"\n>>\n>> The \\78 is not meant to be an octal sequence as seen by the template\n>> parser, but as a hex sequence as seen by the CSS decoder.\n>\n> in go, octal constants must be three digits, so you need to do something about \\0 too.\n>\n>>\n>> http://codereview.appspot.com/5530051/diff/5003/src/pkg/html/template/escape_test.go#newcode317\n>> src/pkg/html/template/escape_test.go:317: // \u00a0`<p style=\"{{\"\n>> -mo\\7a-B\\0I/**/nding(alert(1337))\"}}: ...\">`,\n>> Similarly for the \\7a here.\n>>\n>> \u00a0 \u00a0\" \u00a0-mo\\7a-B\\0I/**/nding(alert(1337))\"\n>>\n>> should be\n>>\n>> \u00a0 \u00a0\" \u00a0-mo\\\\7a-B\\0I/**/nding(alert(1337))\"\n>>\n>> http://codereview.appspot.com/5530051/\n>\n\nI will send out a CL shortly.\n",
			"disapproval": false,
			"date": "2012-01-11 21:30:53.661985",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-01-09 19:25:41.705248",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Package html is using go's strconv.UnquoteChar to unescape a\nnon-Go string literal (maybe a JavaScript string literal?\nI'm not sure).  In doing so it was depending on buggy\nbehavior in order to handle escapes that are valid in\nC but not in Go, like \"\\129\" (== \"\\012\" \"9\" in C but\ninvalid syntax in Go).\n",
			"disapproval": false,
			"date": "2012-01-09 23:16:07.584617",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"sameer@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5530051/diff/2001/src/pkg/html/template/escape_test.go\nFile src/pkg/html/template/escape_test.go (right):\n\nhttp://codereview.appspot.com/5530051/diff/2001/src/pkg/html/template/escape_test.go#newcode303\nsrc/pkg/html/template/escape_test.go:303: // This test is broken by the fix to issue 2658.\nis the test broken or the problem gone? that is, can you repair the test, or is what it's testing no longer relevant?",
			"disapproval": false,
			"date": "2012-01-09 19:26:46.858601",
			"approval": false
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"sameer@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"r@golang.org",
				"r@google.com",
				"nigeltao@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5530051/diff/2001/src/pkg/html/template/escape_test.go\nFile src/pkg/html/template/escape_test.go (right):\n\nhttp://codereview.appspot.com/5530051/diff/2001/src/pkg/html/template/escape_test.go#newcode303\nsrc/pkg/html/template/escape_test.go:303: // This test is broken by the fix to issue 2658.\nOn 2012/01/09 19:26:47, r wrote:\n> is the test broken or the problem gone? that is, can you repair the test, or is\n> what it's testing no longer relevant?\n\nPer rsc, the test is broken, since it contains an invalid octal sequence.  He suggested Nigel take a look, so I'll add him.",
			"disapproval": false,
			"date": "2012-01-09 23:13:31.543361",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "2012/1/9 Nigel Tao <nigeltao@golang.org>:\n> On 10 January 2012 10:16, Russ Cox <rsc@golang.org> wrote:\n>> I should add that I think it's fine to disable the test in html for now\n>> and leave it for the html package authors to fix the bug in html\n>> separately.\n>\n> CC'ing mikesamuel for the html/template change.\n\nIn what way are those test broken?\n",
			"disapproval": false,
			"date": "2012-01-11 20:20:44.428617",
			"approval": false
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"sameer@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-09 16:45:58.739887",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Jan 9, 2012, at 11:25 AM, Russ Cox wrote:\n\n> LGTM\n\ndoes not LGTM\n\n",
			"disapproval": true,
			"date": "2012-01-09 19:27:29.380461",
			"approval": false
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"sameer@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"r@golang.org",
				"r@google.com",
				"nigeltao@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=41199a4a9166 ***\n\nstrconv: return ErrSyntax when unquoting illegal octal sequences.  This\nis consistent with what the Go compiler returns when such sequences\nappear in string literals.\n\nFixes issue 2658.\n\nR=golang-dev, rsc, r, r, nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/5530051",
			"disapproval": false,
			"date": "2012-01-10 00:57:05.072648",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Jan 9, 2012, at 3:16 PM, Russ Cox wrote:\n\n> I should add that I think it's fine to disable the test in html for now\n> and leave it for the html package authors to fix the bug in html\n> separately.\n\nLGTM\n\n\n",
			"disapproval": false,
			"date": "2012-01-09 23:48:32.975737",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 10 January 2012 10:16, Russ Cox <rsc@golang.org> wrote:\n> I should add that I think it's fine to disable the test in html for now\n> and leave it for the html package authors to fix the bug in html\n> separately.\n\nCC'ing mikesamuel for the html/template change.\n",
			"disapproval": false,
			"date": "2012-01-09 23:54:15.176411",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Jan 11, 2012, at 12:25 PM, mikesamuel@gmail.com wrote:\n\n> \n> http://codereview.appspot.com/5530051/diff/5003/src/pkg/html/template/escape_test.go\n> File src/pkg/html/template/escape_test.go (right):\n> \n> http://codereview.appspot.com/5530051/diff/5003/src/pkg/html/template/escape_test.go#newcode306\n> src/pkg/html/template/escape_test.go:306: // \t`<p style=\"width: {{\"\n> e\\78preS\\0Sio/**/n(alert(1337))\"}}\">`,\n> I'm stupid.  This and the below are meant to be testing literal CSS\n> text, so\n> \n>   \"  e\\78preS\\0Sio/**/n(alert(1337))\"\n\n> \n> should be\n> \n>   \"  e\\\\78preS\\0Sio/**/n(alert(1337))\"\n> \n> The \\78 is not meant to be an octal sequence as seen by the template\n> parser, but as a hex sequence as seen by the CSS decoder.\n\nin go, octal constants must be three digits, so you need to do something about \\0 too.\n\n> \n> http://codereview.appspot.com/5530051/diff/5003/src/pkg/html/template/escape_test.go#newcode317\n> src/pkg/html/template/escape_test.go:317: // \t`<p style=\"{{\"\n> -mo\\7a-B\\0I/**/nding(alert(1337))\"}}: ...\">`,\n> Similarly for the \\7a here.\n> \n>    \"  -mo\\7a-B\\0I/**/nding(alert(1337))\"\n> \n> should be\n> \n>    \"  -mo\\\\7a-B\\0I/**/nding(alert(1337))\"\n> \n> http://codereview.appspot.com/5530051/\n\n",
			"disapproval": false,
			"date": "2012-01-11 20:27:13.581022",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"sameer@golang.org",
				"mikesamuel@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"r@golang.org",
				"r@google.com",
				"nigeltao@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5530051/diff/5003/src/pkg/html/template/escape_test.go\nFile src/pkg/html/template/escape_test.go (right):\n\nhttp://codereview.appspot.com/5530051/diff/5003/src/pkg/html/template/escape_test.go#newcode306\nsrc/pkg/html/template/escape_test.go:306: // \t`<p style=\"width: {{\"  e\\78preS\\0Sio/**/n(alert(1337))\"}}\">`,\nI'm stupid.  This and the below are meant to be testing literal CSS text, so \n\n   \"  e\\78preS\\0Sio/**/n(alert(1337))\"\n\nshould be\n\n   \"  e\\\\78preS\\0Sio/**/n(alert(1337))\"\n\nThe \\78 is not meant to be an octal sequence as seen by the template parser, but as a hex sequence as seen by the CSS decoder.\n\nhttp://codereview.appspot.com/5530051/diff/5003/src/pkg/html/template/escape_test.go#newcode317\nsrc/pkg/html/template/escape_test.go:317: // \t`<p style=\"{{\"  -mo\\7a-B\\0I/**/nding(alert(1337))\"}}: ...\">`,\nSimilarly for the \\7a here.\n\n    \"  -mo\\7a-B\\0I/**/nding(alert(1337))\"\n\nshould be\n\n    \"  -mo\\\\7a-B\\0I/**/nding(alert(1337))\"",
			"disapproval": false,
			"date": "2012-01-11 20:25:03.772447",
			"approval": false
		}
	],
	"owner_email": "sameer@golang.org",
	"private": false,
	"base_url": "",
	"owner": "Sameer Ajmani",
	"subject": "code review 5530051: strconv: return ErrSyntax when unquoting illegal octal ...",
	"created": "2012-01-09 15:40:34.610446",
	"patchsets": [
		1,
		1002,
		2001,
		5003
	],
	"modified": "2012-01-11 20:25:04.190911",
	"closed": true,
	"issue": 5530051
}