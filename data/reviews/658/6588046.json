{
	"description": "cmd/6g, cmd/8g: rewrite parts of cgen, agen in terms of igen.\n\nThis is a refactoring patch rather than an optimization. However,\nit happens to save a few temporaries and helps 8g's optimizer\nto eliminate more stack variables.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6588046/diff/4001/src/cmd/6g/cgen.c\nFile src/cmd/6g/cgen.c (right):\n\nhttp://codereview.appspot.com/6588046/diff/4001/src/cmd/6g/cgen.c#newcode554\nsrc/cmd/6g/cgen.c:554: igen(n, &tmp, res);\nI have been wondering whether we should put all the logic into a unique function, so that agen and igen would be merely wrappers to that. naddr(canemitcode=1) looked like the ideal candidate, but it was a bit too much change.\n\nWould it look ok to move more and more things to igen ?",
			"disapproval": false,
			"date": "2012-10-01 20:02:33.472570",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "looks fine except the if in gsubr.c.\n\nhttp://codereview.appspot.com/6588046/diff/4001/src/cmd/6g/cgen.c\nFile src/cmd/6g/cgen.c (right):\n\nhttp://codereview.appspot.com/6588046/diff/4001/src/cmd/6g/cgen.c#newcode554\nsrc/cmd/6g/cgen.c:554: igen(n, &tmp, res);\nIn general I am skeptical of calling igen from agen, since igen calls agen when it has something it doesn't want to handle. The call here implies that igen handles all OCALLMETH, OCALLINTER, OCALLFUNC, ODOT, ODOTPTR that you hand it, wihtout calling back to agen. This does seem to be the case, so it's okay, but I wanted to point it out anyway.\n\nhttp://codereview.appspot.com/6588046/diff/4001/src/cmd/8g/gsubr.c\nFile src/cmd/8g/gsubr.c (right):\n\nhttp://codereview.appspot.com/6588046/diff/4001/src/cmd/8g/gsubr.c#newcode839\nsrc/cmd/8g/gsubr.c:839: if(i != D_AX && i != D_CX && i != D_DX && i != D_SP)\nIf i is one of those registers, reg[i] should never be 0. If it is, there's a bug somewhere else. So this if should not be necessary.",
			"disapproval": false,
			"date": "2012-10-01 19:57:09.311850",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-30 10:41:45.178670",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Additionnaly it seems to me that sudoaddable just does what igen would be supposed to do if it handled OINDEX, except that it does so with totally different subtle differences and produces an Addr* instead of a OINDREG Node*: is it really needed or can it be replaced by a new case in igen() ?",
			"disapproval": false,
			"date": "2012-10-01 20:14:43.161780",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "yes, there is some overlap.\r\nsudoaddable is allowed to use a pair of registers instead of igen's 1 register\r\ni wouldn't mind seeing them merged, although probably not in this CL.\r\n",
			"disapproval": false,
			"date": "2012-10-01 20:31:15.120220",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This change creates \"out of fixed registers\" situation. It will wait to be fixed or rewritten or abandoned.",
			"disapproval": false,
			"date": "2012-10-03 21:24:03.905860",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-11-03 09:26:10.289950",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6588046: cmd/6g, cmd/8g: rewrite parts of cgen, agen in terms of...",
	"created": "2012-09-29 10:05:38.890260",
	"patchsets": [
		1,
		2001,
		4001,
		7
	],
	"modified": "2012-11-03 09:26:11.623220",
	"closed": true,
	"issue": 6588046
}