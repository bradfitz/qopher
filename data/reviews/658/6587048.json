{
	"description": "debug/pe: support PE files which contain no symbol table (if NumberOfSymbols is equal to 0 in the IMAGE_FILE_HEADER structure).\n\nNo longer assume that e_lfanew (in the IMAGE_DOS_HEADER strcuture) is always one byte. It is now regarded as a 4 byte uint32.\n\nFixes issue 4177.",
	"cc": [
		"golang-dev@googlegroups.com",
		"alex.brainman@gmail.com",
		"dave@cheney.net",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-03 08:41:08.969230",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Test would be nice. In http://code.google.com/p/go/issues/detail?id=4177 you say, that \"... Notepad.exe contains no symbol table ...\". Please, make test out of that. Just use exec/os/LookPath to find it on the system.\n\nThank you.\n\nAlex\n\nhttp://codereview.appspot.com/6587048/diff/5001/src/pkg/debug/pe/file.go\nFile src/pkg/debug/pe/file.go (left):\n\nhttp://codereview.appspot.com/6587048/diff/5001/src/pkg/debug/pe/file.go#oldcode135\nsrc/pkg/debug/pe/file.go:135: r.ReadAt(sign[0:], int64(dosheader[0x3c]))\ns/0:/:/\n\nhttp://codereview.appspot.com/6587048/diff/5001/src/pkg/debug/pe/file.go\nFile src/pkg/debug/pe/file.go (right):\n\nhttp://codereview.appspot.com/6587048/diff/5001/src/pkg/debug/pe/file.go#newcode134\nsrc/pkg/debug/pe/file.go:134: peStart := int64(binary.LittleEndian.Uint32(dosheader[0x3c:]))\nI do not like your variable name. peStart implies what? According to ms doco, it is \"offset to the PE signature\". Maybe call it off or signoff? I would also be happy, if you make it simple \"i\" or something like that.",
			"disapproval": false,
			"date": "2012-10-01 02:21:30.317890",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/02 23:57:48, dfc wrote:\n> -1 to additional binaries in the source repo, I can already see the\n> bug reports from persnickety anti virus software.\n> \n\nFair enough. I will wait for someone from Go team to confirm then.\n\n@u,\n\nAlternatively, if you delete cl-386-exec and use notepad.exe, I will submit.\n\nAlex",
			"disapproval": false,
			"date": "2012-10-03 00:08:36.068370",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-30 20:15:18.715680",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you Alex for helping me with this CL.\n\nAdded the test file cl-386-exec which contains no symbol table. Below are the test results.\nI did not use the notepad example since we can't be sure that it lacks a symbol table on all systems.\n\nResult before:\n\n=== RUN TestOpen\n--- FAIL: TestOpen (0.01 seconds)\nfile_test.go:97: \tEOF\n=== RUN TestOpenFailure\n--- PASS: TestOpenFailure (0.00 seconds)\n=== RUN TestOpenFileWithNoSymbolTable\n--- FAIL: TestOpenFileWithNoSymbolTable (0.00 seconds)\nfile_test.go:144: \topen testdata/cl-386-exec failed: EOF\nFAIL\nexit status 1\nFAIL\tdebug/pe\t0.017s\n\nResult after:\n\n=== RUN TestOpen\n--- PASS: TestOpen (0.00 seconds)\n=== RUN TestOpenFailure\n--- PASS: TestOpenFailure (0.00 seconds)\n=== RUN TestOpenFileWithNoSymbolTable\n--- PASS: TestOpenFileWithNoSymbolTable (0.00 seconds)\nPASS\nok  \tdebug/pe\t0.013s",
			"disapproval": false,
			"date": "2012-10-02 06:29:31.667460",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/03 08:21:44, u wrote:\n> \n> ... I don't think that using Notepad.exe is a solution. We can't be sure\n> that it lacks a symbol table on all systems, just because it did so on mine. ...\n\nI disagree. I think notepad.exe test is fine. I tried it on many different systems:\n\nWindows XP SP3\nWindows 2000 SP4\nWindows Server 2003\nWindows 7 Pro (64bit)\nWindows Server 2008 Datacenter\nWindows Server 2008 R2 (64bit)\n\nand it fails everywhere without your patch. In fact, I haven't seen a system where it succeeds.\n\n> ... An\n> unreliable test case is worse than no test case at all.\n\nI disagree again. Any test is better then no test. \"Sometimes only\" failure is better then \"never fails\". I checked our go builders, and it fails there. So we will notice the problem, if it ever resurface. Alternatively, some users will complain.\n\n> \n> ..., I have already signed the contributor license agreement, ...\n\nThank you. I will look for it.\n\n> For now I will remove the test case all together until we can find a good\n> solution.\n\nI suggest, we use notepad.exe test. Until we find something better.\n\nOn 2012/10/03 13:32:03, minux wrote:\n> can we build the symbol table-less binary with gcc or just copy and strip\n> (or objcopy) an existing exe test file at test time (if gcc/strip/objcopy\n> etc. is in PATH)?\n> this file won't be difficult to build at test time,\n> and i think only testing this on windows suffices\n> as we don't use platform dependent features in debug/pe.\n\nI do not know how to do it. Feel free to post code. I do not think your suggestion is better then using notepad.exe. It relies on tools we have no control over. I do not know how they work, and I am not convince they will always work (different version of compilers / libs). I also would like to keep complexity to the minimum. I think we have invested too much time into this bit of code already.\n\nAlex",
			"disapproval": false,
			"date": "2012-10-04 00:18:19.548960",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-01 08:04:25.183470",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/01 08:04:25, u wrote:\n> ...\n> Please take another look.\n\nYou didn't create test. Something like:\n\ndiff -r b09f4985724f src/pkg/debug/pe/file_test.go\n--- a/src/pkg/debug/pe/file_test.go\tTue Oct 02 08:35:20 2012 +1000\n+++ b/src/pkg/debug/pe/file_test.go\tTue Oct 02 12:38:06 2012 +1000\n@@ -5,7 +5,9 @@\n package pe\n \n import (\n+\t\"os/exec\"\n \t\"reflect\"\n+\t\"runtime\"\n \t\"testing\"\n )\n \n@@ -125,3 +127,19 @@\n \t\tt.Errorf(\"open %s: succeeded unexpectedly\", filename)\n \t}\n }\n+\n+func TestFileWithNoSymbolTable(t *testing.T) {\n+\tif runtime.GOOS != \"windows\" {\n+\t\tt.Logf(\"skipping test on %q\", runtime.GOOS)\n+\t\treturn\n+\t}\n+\tp, err := exec.LookPath(\"notepad\")\n+\tif err != nil {\n+\t\tt.Fatalf(\"exec.LookPath failed: %v\", err)\n+\t}\n+\tf, err := Open(p)\n+\tif err != nil {\n+\t\tt.Fatalf(\"Open failed: %v\", err)\n+\t}\n+\tdefer f.Close()\n+}\n\nshould do. Please add this to your CL. Feel free to change it as you see fit.\n\nThank you.\n\nAlex",
			"disapproval": false,
			"date": "2012-10-02 02:41:09.068700",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "-1 to additional binaries in the source repo, I can already see the\r\nbug reports from persnickety anti virus software.\r\n\r\nOn Wed, Oct 3, 2012 at 9:55 AM,  <alex.brainman@gmail.com> wrote:\r\n> LGTM\r\n>\r\n> But I am concerned about cl-386-exec file - its size and the fact that\r\n> it is binary and is of unknown origin. I will leave this CL for a few\r\n> days to give others a chance to comment. I propose, we go and use my\r\n> test instead, if we get more reservations like mine.\r\n>\r\n> Meanwhile, you must complete one of the contributor license agreements\r\n> http://golang.org/doc/contribute.html#copyright before we can submit\r\n> your change.\r\n>\r\n>\r\n> Thank you.\r\n>\r\n> Alex\r\n>\r\n> http://codereview.appspot.com/6587048/\r\n",
			"disapproval": false,
			"date": "2012-10-02 23:57:48.540320",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/03 00:08:36, brainman wrote:\n> On 2012/10/02 23:57:48, dfc wrote:\n> > -1 to additional binaries in the source repo, I can already see the\n> > bug reports from persnickety anti virus software.\n> > \n> \n> Fair enough. I will wait for someone from Go team to confirm then.\n> \n> @u,\n> \n> Alternatively, if you delete cl-386-exec and use notepad.exe, I will submit.\n> \n> Alex\n\nI can see the reason for not including unknown binaries, and will remove it from the CL, but I don't think that using Notepad.exe is a solution. We can't be sure that it lacks a symbol table on all systems, just because it did so on mine. An unreliable test case is worse than no test case at all.\n\nBtw, I have already signed the contributor license agreement, so no worries.\n\nFor now I will remove the test case all togeather until we can find a good solution.\n\nThanks for the help!\n\nCheers /u",
			"disapproval": false,
			"date": "2012-10-03 08:21:44.644410",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-02 06:27:32.078390",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nBut I am concerned about cl-386-exec file - its size and the fact that it is binary and is of unknown origin. I will leave this CL for a few days to give others a chance to comment. I propose, we go and use my test instead, if we get more reservations like mine.\n\nMeanwhile, you must complete one of the contributor license agreements http://golang.org/doc/contribute.html#copyright before we can submit your change.\n\nThank you.\n\nAlex",
			"disapproval": false,
			"date": "2012-10-02 23:55:56.547130",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "can we build the symbol table-less binary with gcc or just copy and strip\r\n(or objcopy) an existing exe test file at test time (if gcc/strip/objcopy\r\netc. is in PATH)?\r\nthis file won't be difficult to build at test time,\r\nand i think only testing this on windows suffices\r\nas we don't use platform dependent features in debug/pe.\r\n",
			"disapproval": false,
			"date": "2012-10-03 13:32:03.135460",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=5a8c4552dd85 ***\n\ndebug/pe: support PE files which contain no symbol table (if NumberOfSymbols is equal to 0 in the IMAGE_FILE_HEADER structure).\n\nNo longer assume that e_lfanew (in the IMAGE_DOS_HEADER strcuture) is always one byte. It is now regarded as a 4 byte uint32.\n\nFixes issue 4177.\n\nR=golang-dev, alex.brainman, dave, minux.ma\nCC=golang-dev\nhttp://codereview.appspot.com/6587048\n\nCommitter: Alex Brainman <alex.brainman@gmail.com>",
			"disapproval": false,
			"date": "2012-10-09 00:15:59.996740",
			"approval": false
		}
	],
	"owner_email": "r.eklind.87@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "u",
	"subject": "code review 6587048: debug/pe: support PE files which contain no symbol tabl...",
	"created": "2012-09-30 20:12:00.857590",
	"patchsets": [
		1,
		2001,
		5001,
		4002,
		9002,
		2002
	],
	"modified": "2013-02-09 20:26:47.555160",
	"closed": true,
	"issue": 6587048
}