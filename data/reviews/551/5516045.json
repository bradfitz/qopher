{
	"description": "go/build: no back slash in FindTree returned pkg name\n\nFixes issue 2652.",
	"cc": [
		"adg@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is wrong. Import paths should always use forward slashes. The correct fix is to change the slashes when the import path is turned into a file system path.",
			"disapproval": false,
			"date": "2012-01-05 03:44:02.619210",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-05 01:48:26.600052",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/05 03:44:02, adg wrote:\n> This is wrong. Import paths should always use forward slashes. The correct fix\n> is to change the slashes when the import path is turned into a file system path.\n\nI am not convinced. Help me here. loadPackage in cmd/go/pkg.go calls build.FindTree\n\n// Find basic information about package path.\nt, importPath, err := build.FindTree(arg)\n\nimportPath should only contains forward slashes, while arg will contains back slashes on Windows. What do you propose I change?\n\nThe way I understand it, FindTree suppose to return importPath with forward slashes only, because it describes name of go package, not directory name. Isn't it?\n\nAlex",
			"disapproval": false,
			"date": "2012-01-05 06:20:14.219087",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5516045/diff/3001/src/pkg/go/build/path.go\nFile src/pkg/go/build/path.go (right):\n\nhttp://codereview.appspot.com/5516045/diff/3001/src/pkg/go/build/path.go#newcode108\nsrc/pkg/go/build/path.go:108: pkg = filepath.ToSlash(path[len(tpath):])\nThis looks good.\n\nhttp://codereview.appspot.com/5516045/diff/3001/src/pkg/go/build/path.go#newcode119\nsrc/pkg/go/build/path.go:119: pkg = filepath.ToSlash(pkg)\nThis does not.  HasSrc is passed import paths, so\npkg must already be an import path.  I think the \ncorrect place for the conversion is on line 115\n(pkg = path).",
			"disapproval": false,
			"date": "2012-01-09 17:05:41.777207",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-10 02:59:01.898940",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-16 23:17:46.211400",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5516045/diff/3001/src/pkg/go/build/path.go\nFile src/pkg/go/build/path.go (right):\n\nhttp://codereview.appspot.com/5516045/diff/3001/src/pkg/go/build/path.go#newcode119\nsrc/pkg/go/build/path.go:119: pkg = filepath.ToSlash(pkg)\nOn 2012/01/09 17:05:42, rsc wrote:\n> This does not.  HasSrc is passed import paths, so\n> pkg must already be an import path.  I think the \n> correct place for the conversion is on line 115\n> (pkg = path).\n\nDone.\n\nWe had quite a few bugs recently where we used path/filepath string instead of path string, or vice-verse. Wouldn't it be nice if these two didn't fit the same interface (string)? Otherwise we will keep confusing them again and again. Perhaps, it is too late for Go 1, even if we have some bright ideas.",
			"disapproval": false,
			"date": "2012-01-10 02:59:14.009879",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=eea28ac6be16 ***\n\ngo/build: no back slash in FindTree returned pkg name\n\nFixes issue 2652.\n\nR=adg, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5516045",
			"disapproval": false,
			"date": "2012-01-17 05:51:10.530243",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5516045: go/build: no back slash in FindTree returned pkg name",
	"created": "2012-01-05 01:47:04.228554",
	"patchsets": [
		1,
		2001,
		3001,
		8001,
		15001
	],
	"modified": "2012-01-17 05:51:13.127400",
	"closed": true,
	"issue": 5516045
}