{
	"description": "gc: omit runtime.closure wrap for closures without closure variables\n\nFixes issue 1894.\n\ntest/closure.go's test for newfunc already covers this.",
	"cc": [
		"rsc@golang.org",
		"dsymonds@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jan 6, 2012 at 14:04, David Symonds <dsymonds@golang.org> wrote:\n> (1) You probably mean \"issue 1894\" (flipped digits).\n\ndoh\n\n>\n> (2) Do globals count as closure variables here?\n\nno. the compiler generates internal 'closure variables' for params and\nauto's from enclosing scopes, so i only have to check for the absence\nof those.  global variables work out of the box.\n\n> There's no need for\n> the wrapping if a func only uses global vars, I believe.\n\nand now it won't. so all is good.\n\n>\n>\n> Dave.\n",
			"disapproval": false,
			"date": "2012-01-06 13:06:54.953715",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-06 12:50:08.203085",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "(1) You probably mean \"issue 1894\" (flipped digits).\n\n(2) Do globals count as closure variables here? There's no need for\nthe wrapping if a func only uses global vars, I believe.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-01-06 13:04:22.323783",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM++++",
			"disapproval": false,
			"date": "2012-01-10 04:32:03.227463",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "could this include a malloc count test around such closures?  (like\nnumAllocations in pkg strconv's tests)\n\n\nOn Fri, Jan 6, 2012 at 4:50 AM, <lvd@google.com> wrote:\n\n> Reviewers: rsc,\n>\n> Message:\n> Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> gc: omit runtime.closure wrap for closures without closure variables\n>\n> Fixes issue 1984.\n>\n> test/closure.go's test for newfunc already covers this.\n>\n> Please review this at http://codereview.appspot.com/**5516051/<http://codereview.appspot.com/5516051/>\n>\n> Affected files:\n>  M src/cmd/gc/closure.c\n>\n>\n> Index: src/cmd/gc/closure.c\n> ==============================**==============================**=======\n> --- a/src/cmd/gc/closure.c\n> +++ b/src/cmd/gc/closure.c\n> @@ -192,6 +192,10 @@\n>        Node *xtype, *xfunc, *call, *clos;\n>        NodeList *l, *in;\n>\n> +       // no closure vars, don't bother wrapping\n> +       if(func->cvars == nil)\n> +               return makeclosure(func, init, 1)->nname;\n> +\n>        /*\n>         * wrap body in external function\n>         * with extra closure parameters.\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-10 05:27:49.664689",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"dsymonds@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=07184a938f08 ***\n\ngc: omit runtime.closure wrap for closures without closure variables\n\nFixes issue 1894.\n\ntest/closure.go's test for newfunc already covers this.\n\nR=rsc, dsymonds, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5516051",
			"disapproval": false,
			"date": "2012-01-10 10:07:41.293661",
			"approval": false
		}
	],
	"owner_email": "lvd@google.com",
	"private": false,
	"base_url": "",
	"owner": "lvd",
	"subject": "code review 5516051: gc: omit runtime.closure wrap for closures without clos...",
	"created": "2012-01-06 12:49:30.374891",
	"patchsets": [
		1,
		2001,
		3002,
		7002,
		8002,
		11001,
		13001
	],
	"modified": "2012-01-10 10:07:42.540176",
	"closed": true,
	"issue": 5516051
}