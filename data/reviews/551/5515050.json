{
	"description": "encoding/gob: fix panic when decoding []byte to incompatible slice types\n\nFixes issue 2662.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rogpeppe@gmail.com",
		"r@google.com"
	],
	"reviewers": [
		"r@golang.org"
	],
	"messages": [
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5515050/diff/3/src/pkg/encoding/gob/decode.go\nFile src/pkg/encoding/gob/decode.go (left):\n\nhttp://codereview.appspot.com/5515050/diff/3/src/pkg/encoding/gob/decode.go#oldcode1042\nsrc/pkg/encoding/gob/decode.go:1042: sw = tt.(*sliceType)\nwouldn't a simple fix be sufficient? just change this line to:\n\n    sw, _ = tt.(*sliceType)",
			"disapproval": false,
			"date": "2012-01-06 16:28:45.907405",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-06 16:06:14.153186",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"rogpeppe@gmail.com",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5515050/diff/3/src/pkg/encoding/gob/decode.go\nFile src/pkg/encoding/gob/decode.go (left):\n\nhttp://codereview.appspot.com/5515050/diff/3/src/pkg/encoding/gob/decode.go#oldcode1042\nsrc/pkg/encoding/gob/decode.go:1042: sw = tt.(*sliceType)\nOn 2012/01/06 16:28:46, rog wrote:\n> wouldn't a simple fix be sufficient? just change this line to:\n> \n>     sw, _ = tt.(*sliceType)\n\nThe problem is that there was another panic possibly lurking, as in what if wire == nil? This would real to nil pointer dereference. I'm not sure in which circumstances this might be possible, but other code paths are checking for that, so I rearranged slice case to be similar.",
			"disapproval": false,
			"date": "2012-01-06 16:34:43.844536",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"rogpeppe@gmail.com",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5515050/diff/3/src/pkg/encoding/gob/decode.go\nFile src/pkg/encoding/gob/decode.go (left):\n\nhttp://codereview.appspot.com/5515050/diff/3/src/pkg/encoding/gob/decode.go#oldcode1042\nsrc/pkg/encoding/gob/decode.go:1042: sw = tt.(*sliceType)\nOn 2012/01/06 16:34:43, snaury wrote:\n> On 2012/01/06 16:28:46, rog wrote:\n> > wouldn't a simple fix be sufficient? just change this line to:\n> > \n> >     sw, _ = tt.(*sliceType)\n> \n> The problem is that there was another panic possibly lurking, as in what if wire\n> == nil? This would real to nil pointer dereference. I'm not sure in which\n> circumstances this might be possible, but other code paths are checking for\n> that, so I rearranged slice case to be similar.\n\neven if you add a check for wire being ok, the change can still be fairly minimal, i think, e.g.\n\nvar sw *sliceType\nif tt, ok := builtinIdToType[fw]; ok {\n\tsw, _ = tt.(*sliceType)\n} else if wire != nil {\n\tsw = wire.SliceT\n}",
			"disapproval": false,
			"date": "2012-01-06 17:15:00.742141",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rogpeppe@gmail.com (cc: golang-dev@googlegroups.com, rogpeppe@gmail.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-06 17:29:26.324324",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/06 17:29:26, snaury wrote:\n> Hello mailto:golang-dev@googlegroups.com, mailto:rogpeppe@gmail.com (cc:\n> mailto:golang-dev@googlegroups.com, mailto:rogpeppe@gmail.com),\n> \n> Please take another look.\n\nIs there anything else needed? It's been almost three days, and the patch should be simple enough now. Weird though, since I didn't see my last ptal on golang-dev, so I'm reminding just in case.",
			"disapproval": false,
			"date": "2012-01-09 15:29:01.227813",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Jan 9, 2012, at 7:29 AM, snaury@gmail.com wrote:\n\n> On 2012/01/06 17:29:26, snaury wrote:\n>> Hello mailto:golang-dev@googlegroups.com, mailto:rogpeppe@gmail.com\n> (cc:\n>> mailto:golang-dev@googlegroups.com, mailto:rogpeppe@gmail.com),\n> \n>> Please take another look.\n> \n> Is there anything else needed? It's been almost three days, and the\n> patch should be simple enough now. Weird though, since I didn't see my\n> last ptal on golang-dev, so I'm reminding just in case.\n\nThree days of weekend and holidays for some of us. Please be patient.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-01-09 16:51:33.416859",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"snaury@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rogpeppe@gmail.com",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-09 20:52:13.020139",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 0b7f7406d1da ***\n\nencoding/gob: fix panic when decoding []byte to incompatible slice types\n\nFixes issue 2662.\n\nR=golang-dev, rogpeppe, r, r\nCC=golang-dev, r, rogpeppe\nhttp://codereview.appspot.com/5515050\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2012-01-09 20:52:08.959052",
			"approval": false
		}
	],
	"owner_email": "snaury@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "snaury",
	"subject": "code review 5515050: encoding/gob: fix panic when decoding []byte to incompa...",
	"created": "2012-01-06 16:03:02.291098",
	"patchsets": [
		1,
		2001,
		3,
		2002
	],
	"modified": "2012-01-09 21:14:58.773027",
	"closed": true,
	"issue": 5515050
}