{
	"description": "go.tools/go/types: use []*Func instead of *Scope to hold methods",
	"cc": [
		"golang-dev@googlegroups.com",
		"adonovan@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"adonovan@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nA nice simplification.\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/predicates.go\nFile go/types/predicates.go (left):\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/predicates.go#oldcode232\ngo/types/predicates.go:232: if a.IsEmpty() {\nDon't you want to keep this check?  It'll save you allocating a map in the common case of IsIdentical(interface{}, interface{}).\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/testdata/decls0.src\nFile go/types/testdata/decls0.src (right):\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/testdata/decls0.src#newcode206\ngo/types/testdata/decls0.src:206: func _() {\nIs func _() a useful trick, perhaps: a place to put code that can never run but must compile and may add initialization dependency edges?\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/types.go\nFile go/types/types.go (right):\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/types.go#newcode348\ngo/types/types.go:348: methods    []*Func   // directly associated methods (not the method set of this type)\n\"declared methods (not the method-set of this type)\" ?",
			"disapproval": false,
			"date": "2013-06-13 17:51:56.676330",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"adonovan@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10243043/diff/12001/go/types/predicates.go\nFile go/types/predicates.go (left):\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/predicates.go#oldcode232\ngo/types/predicates.go:232: if a.IsEmpty() {\nOn 2013/06/13 17:51:56, adonovan wrote:\n> Don't you want to keep this check?  It'll save you allocating a map in the\n> common case of IsIdentical(interface{}, interface{}).\n\nI took it out because once the methods are sorted, we may not need the map anymore, anyway.\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/testdata/decls0.src\nFile go/types/testdata/decls0.src (right):\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/testdata/decls0.src#newcode206\ngo/types/testdata/decls0.src:206: func _() {\nOn 2013/06/13 17:51:56, adonovan wrote:\n> Is func _() a useful trick, perhaps: a place to put code that can never run but\n> must compile and may add initialization dependency edges?\n\nyes, it's useful for a variety of purposes. I use it here so I don't need to worry about name conflicts.\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/types.go\nFile go/types/types.go (right):\n\nhttps://codereview.appspot.com/10243043/diff/12001/go/types/types.go#newcode348\ngo/types/types.go:348: methods    []*Func   // directly associated methods (not the method set of this type)\nOn 2013/06/13 17:51:56, adonovan wrote:\n> \"declared methods (not the method-set of this type)\" ?\n\nDone.",
			"disapproval": false,
			"date": "2013-06-13 18:10:28.990150",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"adonovan@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1f50cf3d1335&repo=tools ***\n\ngo.tools/go/types: use []*Func instead of *Scope to hold methods\n\nR=golang-dev, adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/10243043",
			"disapproval": false,
			"date": "2013-06-13 18:11:56.078310",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-06-12 23:53:24.702050",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 10243043: go.tools/go/types: use []*Func instead of *Scope to hol...",
	"created": "2013-06-12 21:32:14.250870",
	"patchsets": [
		1,
		2001,
		5001,
		7001,
		8001,
		5026,
		10001,
		12001,
		17001
	],
	"modified": "2013-07-10 14:25:04.753660",
	"closed": true,
	"issue": 10243043
}