{
	"description": "go.net/ipv6: fix overlooked execution reorder in test\n\nThe test expects to run opt.clear just after opt.set.\n\nFixes issue 5696.",
	"cc": [
		"dave@cheney.net",
		"fullung@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, fullung@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.net",
			"disapproval": false,
			"date": "2013-06-15 04:40:30.739520",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/15 04:40:30, mikio wrote:\n> Hello mailto:dave@cheney.net, mailto:fullung@gmail.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go.net\n\nWhy do these need to be run concurrently ? Something like this would be simpler\n\ndiff -r da2eb5dd9ea9 ipv6/control_test.go\n--- a/ipv6/control_test.go      Sat Jun 15 18:34:13 2013 +0900\n+++ b/ipv6/control_test.go      Sun Jun 16 14:24:14 2013 +1000\n@@ -17,12 +17,13 @@\n        var wg sync.WaitGroup\n        for _, fn := range []ffn{opt.set, opt.clear, opt.clear} {\n                wg.Add(1)\n-               go func(fn ffn) {\n+               f := func(fn ffn) {\n                        defer wg.Done()\n                        opt.Lock()\n                        defer opt.Unlock()\n                        fn(tf)\n-               }(fn)\n+               }\n+               f(fn)\n        }\n        wg.Wait()\n\n\nWhat am I missing ?",
			"disapproval": false,
			"date": "2013-06-16 04:24:29.166940",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Jun 16, 2013 at 1:24 PM,  <dave@cheney.net> wrote:\r\n\r\n> Why do these need to be run concurrently\r\n\r\nBecause you requested to test the rawOpt's lock. ;)\r\n",
			"disapproval": false,
			"date": "2013-06-16 04:46:14.187200",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fair enough :) I forgot that. In that case could you please add a short comment to the loop to explain why it is how it is.\r\n\r\n\r\n\r\nOn 16/06/2013, at 14:46, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> On Sun, Jun 16, 2013 at 1:24 PM,  <dave@cheney.net> wrote:\r\n> \r\n>> Why do these need to be run concurrently\r\n> \r\n> Because you requested to test the rawOpt's lock. ;)\r\n",
			"disapproval": false,
			"date": "2013-06-16 04:55:39.588330",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done.\r\n\r\nAlbert?\r\n\r\nOn Sun, Jun 16, 2013 at 1:55 PM, Dave Cheney <dave@cheney.net> wrote:\r\n> Fair enough :) I forgot that. In that case could you please add a short comment to the loop to explain why it is how it is.\r\n>\r\n>\r\n>\r\n> On 16/06/2013, at 14:46, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n>\r\n>> On Sun, Jun 16, 2013 at 1:24 PM,  <dave@cheney.net> wrote:\r\n>>\r\n>>> Why do these need to be run concurrently\r\n>>\r\n>> Because you requested to test the rawOpt's lock. ;)\r\n",
			"disapproval": false,
			"date": "2013-06-16 05:21:23.228890",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hmm, i'm seeing livelocks running my stress test. Please hold, more information to come tonight.",
			"disapproval": false,
			"date": "2013-06-17 00:55:23.021570",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2013-06-28 07:27:50.183890",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/28 07:27:50, mikio wrote:\n> ping\n\nI just tried again and this live locks under my stress test\n\n#!/bin/bash\n\nset -e\ngo test -c # -race\nPKG=$(basename $(pwd))\n\nwhile true ; do \n        export GOMAXPROCS=$[ 1 + $[ RANDOM % 128 ]]\n        GOTRACEBACK=2 ./$PKG.test $@ 2>&1\ndone\n\ncd $PKG; bash stress.bash",
			"disapproval": false,
			"date": "2013-06-29 03:50:24.210720",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10285044/diff/11001/ipv6/control_test.go\nFile ipv6/control_test.go (right):\n\nhttps://codereview.appspot.com/10285044/diff/11001/ipv6/control_test.go#newcode16\nipv6/control_test.go:16: // This loop runs methods of raw.Opt concurrentry for testing\n/s/concurrentry/concurrently/",
			"disapproval": false,
			"date": "2013-06-29 03:50:47.324910",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jun 29, 2013 at 12:50 PM,  <dave@cheney.net> wrote:\r\n\r\n> I just tried again and this live locks under my stress test\r\n\r\nah, I missed that. sure, it really just doesn't hand-off, thx.\r\n",
			"disapproval": false,
			"date": "2013-06-29 04:02:20.750290",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/10285044/diff/11001/ipv6/control_test.go\nFile ipv6/control_test.go (right):\n\nhttps://codereview.appspot.com/10285044/diff/11001/ipv6/control_test.go#newcode16\nipv6/control_test.go:16: // This loop runs methods of raw.Opt concurrentry for testing\nOn 2013/06/29 03:50:47, dfc wrote:\n> /s/concurrentry/concurrently/\n\nDone.",
			"disapproval": false,
			"date": "2013-06-29 04:03:15.794990",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thank you.",
			"disapproval": false,
			"date": "2013-06-29 04:37:02.469360",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=0579515385a2&repo=net ***\n\ngo.net/ipv6: fix overlooked execution reorder in test\n\nThe test expects to run opt.clear just after opt.set.\n\nFixes issue 5696.\n\nR=dave, fullung\nCC=golang-dev\nhttps://codereview.appspot.com/10285044",
			"disapproval": false,
			"date": "2013-06-29 05:04:31.902090",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 10285044: go.net/ipv6: fix overlooked execution reorder in test",
	"created": "2013-06-15 04:39:29.532260",
	"patchsets": [
		1,
		2001,
		5001,
		11001,
		20001,
		23002
	],
	"modified": "2013-06-29 05:04:35.577520",
	"closed": true,
	"issue": 10285044
}