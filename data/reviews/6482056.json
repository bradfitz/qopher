{
	"description": "text/template: allow grouping of pipelines using parentheses\n\nBased on work by Russ Cox. From his CL:\n\n        This is generally useful but especially helpful when trying\n        to use the built-in boolean operators.  It lets you write:\n\n        {{if not (f 1)}} foo {{end}}\n        {{if and (f 1) (g 2)}} bar {{end}}\n        {{if or (f 1) (g 2)}} quux {{end}}\n\n        instead of\n\n        {{if f 1 | not}} foo {{end}}\n        {{if f 1}}{{if g 2}} bar {{end}}{{end}}\n        {{$do := 0}}{{if f 1}}{{$do := 1}}{{else if g 2}}{{$do := 1}}{{end}}{{if $do}} quux {{end}}\n\nThe result can be a bit LISPy but the benefit in expressiveness and readability\nfor such a small change justifies it.\n\nI believe no changes are required to html/template.\n\nFixes issue 3276.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"rogpeppe@gmail.com",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-08-23 19:42:16.871310",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\tFixes issue 3276.\r\n",
			"disapproval": false,
			"date": "2012-08-23 19:43:09.499370",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-08-24 03:11:30.722420",
			"approval": true
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/23 19:42:16, r wrote:\n> Hello mailto:golang-dev@googlegroups.com,\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go/\n\nIt had to happen some time. It'll be interesting to see how far people take this.\n\nLGTM.",
			"disapproval": false,
			"date": "2012-08-24 07:45:18.557860",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Aug 24, 2012 at 3:42 AM, <r@golang.org> wrote:\r\n\r\n> Description:\r\n> text/template: allow grouping of pipelines using parentheses\r\n>\r\n> Based on work by Russ Cox. From his CL:\r\n>\r\n>         This is generally useful but especially helpful when trying\r\n>         to use the built-in boolean operators.  It lets you write:\r\n>\r\n>         {{if not (f 1)}} foo {{end}}\r\n>         {{if and (f 1) (g 2)}} bar {{end}}\r\n>         {{if or (f 1) (g 2)}} quux {{end}}\r\n>\r\n>         instead of\r\n>\r\n>         {{if f 1 | not}} foo {{end}}\r\n>         {{if f 1}}{{if g 2}} bar {{end}}{{end}}\r\n>         {{$do := 0}}{{if f 1}}{{$do := 1}}{{else if g 2}}{{$do :=\r\n> 1}}{{end}}{{if $do}}quux {{end}}\r\n>\r\n> The result can be a bit LISPy but the benefit in expressiveness and\r\n> readability\r\n> for such a small change justifies it.\r\n>\r\nthe proposal SGTM. i've missed this feature for some time,\r\nand i think a LISPy grammar for a template language is just a perfect fit.\r\n(i like lisp so this view might be biased.)\r\n",
			"disapproval": false,
			"date": "2012-08-24 09:33:04.115460",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a58536973959 ***\n\ntext/template: allow grouping of pipelines using parentheses\n\nBased on work by Russ Cox. From his CL:\n\n        This is generally useful but especially helpful when trying\n        to use the built-in boolean operators.  It lets you write:\n\n        {{if not (f 1)}} foo {{end}}\n        {{if and (f 1) (g 2)}} bar {{end}}\n        {{if or (f 1) (g 2)}} quux {{end}}\n\n        instead of\n\n        {{if f 1 | not}} foo {{end}}\n        {{if f 1}}{{if g 2}} bar {{end}}{{end}}\n        {{$do := 0}}{{if f 1}}{{$do := 1}}{{else if g 2}}{{$do := 1}}{{end}}{{if $do}} quux {{end}}\n\nThe result can be a bit LISPy but the benefit in expressiveness and readability\nfor such a small change justifies it.\n\nI believe no changes are required to html/template.\n\nFixes issue 3276.\n\nR=golang-dev, adg, rogpeppe, minux.ma\nCC=golang-dev\nhttp://codereview.appspot.com/6482056",
			"disapproval": false,
			"date": "2012-08-24 19:37:39.271760",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6482056: text/template: allow grouping of pipelines using parentheses",
	"created": "2012-08-23 19:42:08.595590",
	"patchsets": [
		1,
		5001
	],
	"modified": "2012-08-24 19:37:40.865860",
	"closed": true,
	"issue": 6482056
}