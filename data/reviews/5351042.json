{
	"description": "gc: Clean up dostruct/stotype, detect broken fields and propagate up to structs and functions to supress spurious errors.\n\nFixes issue 1556.\n\n",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Nov 7, 2011 at 19:59, <rsc@golang.org> wrote:\n\n> Can you copy the test case from 1556 in,\n> either as a new one or replacing the current new one?\n> I think the current test case is a little too\n> simplified.\n>\n>\nif i comment out line 1057 in subr.c, i get\n\nfixedbugs/bug374.go:16: cannot use T(0) (type T) as type I in assignment:\n        T does not implement I (wrong type for m method)\n                have m(buf []byte) <T>\n                want m() int\nfixedbugs/bug374.go:18: undefined: xxxx\n\nthat first bug is the one from 1556, the non-root cause.\n\n\n>\n>\n> http://codereview.appspot.com/**5351042/diff/3005/src/cmd/gc/**subr.c<http://codereview.appspot.com/5351042/diff/3005/src/cmd/gc/subr.c>\n> File src/cmd/gc/subr.c (right):\n>\n> http://codereview.appspot.com/**5351042/diff/3005/src/cmd/gc/**\n> subr.c#newcode1065<http://codereview.appspot.com/5351042/diff/3005/src/cmd/gc/subr.c#newcode1065>\n> src/cmd/gc/subr.c:1065: \"\\t\\thave %S%+T\\n\\t\\twant %S%hhT\", src, dst,\n> missing->sym,\n> Why %+T?  What does that do?\n>\n\nleftover frome debugging, gone\n\n\n>\n> http://codereview.appspot.com/**5351042/diff/3005/test/**\n> fixedbugs/bug374.go<http://codereview.appspot.com/5351042/diff/3005/test/fixedbugs/bug374.go>\n> File test/fixedbugs/bug374.go (right):\n>\n> http://codereview.appspot.com/**5351042/diff/3005/test/**\n> fixedbugs/bug374.go#newcode18<http://codereview.appspot.com/5351042/diff/3005/test/fixedbugs/bug374.go#newcode18>\n> test/fixedbugs/bug374.go:18: func (T) m(buf []byte) xxxx {  // ERROR\n> \"xxxx\"\n> What is this test testing?\n> If I run this in the current compiler I get a single error:\n>\n> x.go:18: undefined: xxxx\n>\n> so it's not clear to me that this CL is needed to make this test work.\n>\n> http://codereview.appspot.com/**5351042/<http://codereview.appspot.com/5351042/>\n>\n",
			"disapproval": false,
			"date": "2011-11-07 19:07:59.619176",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=890d78282ea9 ***\n\ngc: Clean up dostruct/stotype, detect broken fields and propagate up to structs and functions to supress spurious errors.\n\nFixes issue 1556.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5351042",
			"disapproval": false,
			"date": "2011-11-07 20:35:20.664382",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Nov 7, 2011 at 20:16, Russ Cox <rsc@golang.org> wrote:\n\n> On Mon, Nov 7, 2011 at 14:07, Luuk van Dijk <lvd@google.com> wrote:\n> > if i comment out line 1057 in subr.c, i get\n> > fixedbugs/bug374.go:16: cannot use T(0) (type T) as type I in assignment:\n> >         T does not implement I (wrong type for m method)\n> >                 have m(buf []byte) <T>\n> >                 want m() int\n> > fixedbugs/bug374.go:18: undefined: xxxx\n> > that first bug is the one from 1556, the non-root cause.\n>\n> i believe that, but the fact remains that at tip there\n> is only one error, so this test would pass with and\n> without this CL.\n>\n\nverified that this one produces\n\nfixedbugs/bug374.go:16: cannot use T(0) (type T) as type I in assignment:\n        T does not implement I (wrong type for m method)\n                have m(buf []byte) (a int)\n                want m() int\nfixedbugs/bug374.go:18: undefined: xxxx\nfixedbugs/bug374.go:19: too many arguments to return\n",
			"disapproval": false,
			"date": "2011-11-07 19:52:06.671992",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/11/06 21:09:31, lvd wrote:\n> Hello mailto:rsc@golang.org (cc: mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nadded a test that checks that a problem on a method inhibits at least the example from the report in 1550.  all tests pass.\n\ni suspect that once this is in, now that we have ->broke available, we can choose to supress other non-root cause messages, but i'd like to leave that for separate cl's, whenever someone reports an example.",
			"disapproval": false,
			"date": "2011-11-06 21:13:26.681747",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-06 20:37:53.845896",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-06 21:09:31.585104",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Can you copy the test case from 1556 in,\neither as a new one or replacing the current new one?\nI think the current test case is a little too\nsimplified.\n\nhttp://codereview.appspot.com/5351042/diff/3005/src/cmd/gc/subr.c\nFile src/cmd/gc/subr.c (right):\n\nhttp://codereview.appspot.com/5351042/diff/3005/src/cmd/gc/subr.c#newcode1065\nsrc/cmd/gc/subr.c:1065: \"\\t\\thave %S%+T\\n\\t\\twant %S%hhT\", src, dst, missing->sym,\nWhy %+T?  What does that do?\n\nhttp://codereview.appspot.com/5351042/diff/3005/test/fixedbugs/bug374.go\nFile test/fixedbugs/bug374.go (right):\n\nhttp://codereview.appspot.com/5351042/diff/3005/test/fixedbugs/bug374.go#newcode18\ntest/fixedbugs/bug374.go:18: func (T) m(buf []byte) xxxx {  // ERROR \"xxxx\"\nWhat is this test testing?\nIf I run this in the current compiler I get a single error:\n\nx.go:18: undefined: xxxx\n\nso it's not clear to me that this CL is needed to make this test work.",
			"disapproval": false,
			"date": "2011-11-07 18:59:33.835867",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Nov 7, 2011 at 14:07, Luuk van Dijk <lvd@google.com> wrote:\n> if i comment out line 1057 in subr.c, i get\n> fixedbugs/bug374.go:16: cannot use T(0) (type T) as type I in assignment:\n> \u00a0 \u00a0 \u00a0 \u00a0 T does not implement I (wrong type for m method)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 have m(buf []byte) <T>\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 want m() int\n> fixedbugs/bug374.go:18: undefined: xxxx\n> that first bug is the one from 1556, the non-root cause.\n\ni believe that, but the fact remains that at tip there\nis only one error, so this test would pass with and\nwithout this CL.\n",
			"disapproval": false,
			"date": "2011-11-07 19:16:37.123598",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-11-07 19:55:57.511075",
			"approval": true
		}
	],
	"owner_email": "lvd@google.com",
	"private": false,
	"base_url": "",
	"owner": "lvd",
	"subject": "code review 5351042: gc: Clean up dostruct/stotype, detect broken fields and...",
	"created": "2011-11-04 22:22:41.954294",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		11001,
		12001,
		11002,
		15002,
		3005,
		19002,
		21002,
		22001
	],
	"modified": "2011-11-07 20:35:22.059643",
	"closed": true,
	"issue": 5351042
}