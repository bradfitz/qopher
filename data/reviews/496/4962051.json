{
	"description": "cgo: support for mingw-w64 4.5.1 and newer",
	"cc": [
		"jp@webmaster.ms",
		"hectorchu@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "vcc.163@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I would suggest only support mingw-w64-4.5.1 and newer, since Win64\ndon't add underscore prefixes for C function names, code would be\nsimpler.\n\n2011/9/5 Russ Cox <rsc@golang.org>:\n> Can you write this without the #ifdef?\n> You are assuming that 6l (or 8l) and the\n> object file being read were compiled\n> with the same compiler. \u00a0That may not be true.\n>\n> I would suggest to first look for __imp__ and\n> then __imp_.\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-09-07 14:44:20.278295",
			"approval": false
		},
		{
			"sender": "vcc.163@gmail.com",
			"recipients": [
				"vcc.163@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-04 03:57:22.995074",
			"approval": false
		},
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"vcc.163@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4962051/diff/4001/src/cmd/ld/ldpe.c\nFile src/cmd/ld/ldpe.c (right):\n\nhttp://codereview.appspot.com/4962051/diff/4001/src/cmd/ld/ldpe.c#newcode415\nsrc/cmd/ld/ldpe.c:415: #if defined(_WIN64) && __GNUC__ >= 4 && __GNUC_MINOR__ >= 5 && __GNUC_PATCHLEVEL__ >= 1 //mingw-w64 4.5.1 and newer don't add underscore\n#if defined(_WIN64) && (__GNUC__*10000+__GNUC_MINOR__*100+__GNUC_PATCHLEVEL__) >= 40501\n\nhttp://codereview.appspot.com/4962051/diff/4001/src/pkg/runtime/cgo/amd64.S\nFile src/pkg/runtime/cgo/amd64.S (right):\n\nhttp://codereview.appspot.com/4962051/diff/4001/src/pkg/runtime/cgo/amd64.S#newcode9\nsrc/pkg/runtime/cgo/amd64.S:9: #if defined(__APPLE__) || (defined(_WIN32) && __GNUC__ <= 4 && __GNUC_MINOR__ <= 5 && __GNUC_PATCHLEVEL__ < 1)\n#if defined(__APPLE__) || (defined(_WIN32) && (__GNUC__*10000+__GNUC_MINOR__*100+__GNUC_PATCHLEVEL__) < 40501)\n\nyour test is not correct with gcc-4.4.3",
			"disapproval": false,
			"date": "2011-09-06 06:47:09.186117",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Can you write this without the #ifdef?\nYou are assuming that 6l (or 8l) and the\nobject file being read were compiled\nwith the same compiler.  That may not be true.\n\nI would suggest to first look for __imp__ and\nthen __imp_.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-09-05 11:46:16.278880",
			"approval": false
		},
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"vcc.163@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"reply@codereview.appspotmail.com"
			],
			"text": "Does anybody use a version older than mingw-w64-4.5.1 ?\n\nOn 2011/09/07 14:44:20, vcc wrote:\n> I would suggest only support mingw-w64-4.5.1 and newer, since Win64\n> don't add underscore prefixes for C function names, code would be\n> simpler.\n> \n> 2011/9/5 Russ Cox <rsc@golang.org>:\n> > Can you write this without the #ifdef?\n> > You are assuming that 6l (or 8l) and the\n> > object file being read were compiled\n> > with the same compiler. &nbsp;That may not be true.\n> >\n> > I would suggest to first look for __imp__ and\n> > then __imp_.\n> >\n> > Russ\n> >",
			"disapproval": false,
			"date": "2011-09-09 13:31:39.531426",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Fri, Sep 9, 2011 at 09:31,  <jp@webmaster.ms> wrote:\n> Does anybody use a version older than mingw-w64-4.5.1 ?\n\nLet's assume no.\n",
			"disapproval": false,
			"date": "2011-09-12 18:39:59.181432",
			"approval": false
		},
		{
			"sender": "vcc.163@gmail.com",
			"recipients": [
				"vcc.163@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL",
			"disapproval": false,
			"date": "2011-09-13 12:14:18.381192",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"vcc.163@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"hectorchu@gmail.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4962051/diff/12001/src/cmd/ld/ldpe.c\nFile src/cmd/ld/ldpe.c (right):\n\nhttp://codereview.appspot.com/4962051/diff/12001/src/cmd/ld/ldpe.c#newcode412\nsrc/cmd/ld/ldpe.c:412: if(sym->sclass == IMAGE_SYM_CLASS_STATIC && sym->value == 0 && sym->type == 0) // section\nIt looks like the code would read more clearly as the following:\n\nif(sym->sclass == IMAGE_SYM_CLASS_STATIC && sym->value == 0 && sym->type == 0) // section\n\tname = obj->sect[sym->sectnum-1].sym->name;\nelse {\n\tname = sym->name;\n\tif(strncmp(name, \"__imp_\", 6) == 0)\n\t\tname = &name[6]; // __imp_Name => Name\n\tif(thechar == '8' && name[0] == '_')\n\t\tname = &name[1]; // _Name => Name\n}",
			"disapproval": false,
			"date": "2011-10-04 21:04:30.340382",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"vcc.163@gmail.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM once Hector is happy with it.",
			"disapproval": false,
			"date": "2011-10-05 15:57:14.227743",
			"approval": true
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM, but will submit with the change suggested in my comment.\n",
			"disapproval": false,
			"date": "2011-10-06 06:06:50.325142",
			"approval": true
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"vcc.163@gmail.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=6bf2b47bba7b ***\n\ncgo: support for mingw-w64 4.5.1 and newer\n\nR=rsc, jp, hectorchu\nCC=golang-dev\nhttp://codereview.appspot.com/4962051\n\nCommitter: Hector Chu <hectorchu@gmail.com>",
			"disapproval": false,
			"date": "2011-10-06 06:22:52.891740",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"vcc.163@gmail.com",
				"hectorchu@gmail.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Is there a way to force close this issue?",
			"disapproval": false,
			"date": "2011-10-13 12:59:06.779484",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Oct 13, 2011 at 08:59, hectorchu@gmail.com wrote:\n> Is there a way to force close this issue?\n\nThe issue will close once Wei runs 'hg sync'.\nThe submit moves all the reviewers to the CC line,\nso it should not show up in your code review\ndashboard.\n\nYour replying to the mail re-added you as a\nreviewer, but I just moved you back to the \nCC line.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-10-13 13:48:09.143327",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"vcc.163@gmail.com",
				"jp@webmaster.ms",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "removing reviewers",
			"disapproval": false,
			"date": "2011-10-13 13:47:21.390368",
			"approval": false
		}
	],
	"owner_email": "vcc.163@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "vcc",
	"subject": "code review 4962051: cgo: support for mingw 4.5.1 and newer",
	"created": "2011-09-04 03:51:54.958471",
	"patchsets": [
		1,
		2001,
		4001,
		12001
	],
	"modified": "2011-10-13 15:09:36.982927",
	"closed": true,
	"issue": 4962051
}