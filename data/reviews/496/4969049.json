{
	"description": "bytes: EqualString",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"gri@golang.org",
		"kevlar@google.com",
		"rsc@golang.org",
		"r@google.com",
		"gustavo@niemeyer.net",
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Aug 29, 2011 at 4:03 PM, Robert Griesemer <gri@golang.org> wrote:\n\n> On Mon, Aug 29, 2011 at 3:54 PM, Gustavo Niemeyer <gustavo@niemeyer.net>\n> wrote:\n> >> I could add strings.EqualBytes(s string, b []byte) for symmetry.  :-)\n> >\n> > More seriously, why doing\n> >\n> >    if strings.EqualsBytes(s, b) { ... }\n> >\n> > rather than\n> >\n> >    if string(b) == s { ... }\n> >\n> > If this is just about saving the conversion, should this be done by\n> > the compiler?\n>\n> +1\n> - gri\n>\n\nRelated:  (previously discussed)\nhttp://code.google.com/p/go/issues/detail?id=2204\n",
			"disapproval": false,
			"date": "2011-08-29 23:04:47.756220",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Aug 29, 2011 at 13:53, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> I'm not going to fight for this to go in,\u00a0but there's a bunch of other\n> trivial functions in package bytes and strings. \u00a0If there's a line, I don't\n> know where it is.\n> I can just include this in my own code when I want to avoid copies.\n\nThis might be below the line, as long as it's\nnot the first of many.  Let's wait and see what Rob thinks.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-08-29 17:59:34.408784",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-08-29 16:19:51.919430",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-08-29 16:23:51.284115",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "But wait for Russ' opinion.\n\nOne question: Why shouldn't this be in strings?\n- Robert\n\nOn Mon, Aug 29, 2011 at 9:23 AM,  <gri@golang.org> wrote:\n> LGTM\n>\n> http://codereview.appspot.com/4969049/\n>\n",
			"disapproval": false,
			"date": "2011-08-29 16:25:07.940822",
			"approval": false
		},
		{
			"sender": "kevlar@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": ">\n> One question: Why shouldn't this be in strings?\n>\n\nI'd paint my bikeshed bytes, because in most of the cases where I am messing\nwith a []byte and want to compare it to a string, I've already imported\nbytes for one of its other functions; but I'm usually manipulating something\nfrom an io.Reader/io.Writer, so someone who has a more string-driven\npipeline would probably see the opposite.\n",
			"disapproval": false,
			"date": "2011-08-29 17:11:35.826601",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Aug 29, 2011 at 9:25 AM, Robert Griesemer <gri@golang.org> wrote:\n\n> But wait for Russ' opinion.\n>\n> One question: Why shouldn't this be in strings?\n>\n\nArbitrary, I suppose.\n\nbytes is about []bytes\nstrings is about strings\nthis is one of both\n\n*shrug*\n",
			"disapproval": false,
			"date": "2011-08-29 16:27:34.339540",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nOn 30/08/2011, at 3:59 AM, Russ Cox wrote:\n\n> On Mon, Aug 29, 2011 at 13:53, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n>> I'm not going to fight for this to go in, but there's a bunch of other\n>> trivial functions in package bytes and strings.  If there's a line, I don't\n>> know where it is.\n>> I can just include this in my own code when I want to avoid copies.\n> \n> This might be below the line, as long as it's\n> not the first of many.  Let's wait and see what Rob thinks.\n\nRob is afraid of the strings and bytes packages filling up with hard-to-remember helpers.  Although he does have some sympathy for this function, the fact that it's uncertain which package it belongs in pushes him towards the \"no\" camp.\n\nIt would help if these packages had a known structure.\n\n-Rob, for rob\n\n",
			"disapproval": false,
			"date": "2011-08-29 21:24:47.908030",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Aug 29, 2011 at 2:24 PM, Rob 'Commander' Pike <r@google.com> wrote:\n\n>\n> On 30/08/2011, at 3:59 AM, Russ Cox wrote:\n>\n> > On Mon, Aug 29, 2011 at 13:53, Brad Fitzpatrick <bradfitz@golang.org>\n> wrote:\n> >> I'm not going to fight for this to go in, but there's a bunch of other\n> >> trivial functions in package bytes and strings.  If there's a line, I\n> don't\n> >> know where it is.\n> >> I can just include this in my own code when I want to avoid copies.\n> >\n> > This might be below the line, as long as it's\n> > not the first of many.  Let's wait and see what Rob thinks.\n>\n> Rob is afraid of the strings and bytes packages filling up with\n> hard-to-remember helpers.  Although he does have some sympathy for this\n> function, the fact that it's uncertain which package it belongs in pushes\n> him towards the \"no\" camp.\n>\n> It would help if these packages had a known structure.\n>\n\nI could add strings.EqualBytes(s string, b []byte) for symmetry.  :-)\n\n*ducks*\n",
			"disapproval": false,
			"date": "2011-08-29 21:27:56.327061",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I am a little worried about this being the\nthin edge of a (string, bytes) cross-product wedge.\nWhat's the situation where this is important\nenough to have?\n\nIf you're doing many comparisons then\nexisting code typically does a single conversion\noutside the loop and then uses == or bytes.Equal.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-08-29 17:25:08.343144",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I'm not going to fight for this to go in, but there's a bunch of other\ntrivial functions in package bytes and strings.  If there's a line, I don't\nknow where it is.\n\nI can just include this in my own code when I want to avoid copies.\n\n\nOn Mon, Aug 29, 2011 at 10:25 AM, Russ Cox <rsc@golang.org> wrote:\n\n> I am a little worried about this being the\n> thin edge of a (string, bytes) cross-product wedge.\n> What's the situation where this is important\n> enough to have?\n>\n> If you're doing many comparisons then\n> existing code typically does a single conversion\n> outside the loop and then uses == or bytes.Equal.\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-08-29 17:53:06.218426",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> I could add strings.EqualBytes(s string, b []byte) for symmetry. \u00a0:-)\n\nMore seriously, why doing\n\n    if strings.EqualsBytes(s, b) { ... }\n\nrather than\n\n    if string(b) == s { ... }\n\nIf this is just about saving the conversion, should this be done by\nthe compiler?\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I never filed a patent.\n",
			"disapproval": false,
			"date": "2011-08-29 22:54:53.942239",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Aug 29, 2011 at 3:54 PM, Gustavo Niemeyer <gustavo@niemeyer.net> wrote:\n>> I could add strings.EqualBytes(s string, b []byte) for symmetry. \u00a0:-)\n>\n> More seriously, why doing\n>\n> \u00a0 \u00a0if strings.EqualsBytes(s, b) { ... }\n>\n> rather than\n>\n> \u00a0 \u00a0if string(b) == s { ... }\n>\n> If this is just about saving the conversion, should this be done by\n> the compiler?\n\n+1\n- gri\n",
			"disapproval": false,
			"date": "2011-08-29 23:03:29.489841",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": ">> If this is just about saving the conversion, should this be done by\n>> the compiler?\n>\n> +1\n> - gri\n\n+1\n",
			"disapproval": false,
			"date": "2011-08-29 23:38:56.620081",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 4969049: bytes: EqualString",
	"created": "2011-08-29 16:19:28.188847",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2011-10-06 18:21:11.469845",
	"closed": true,
	"issue": 4969049
}