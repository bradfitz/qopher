{
	"description": "syscall: use \"cmd /c call\" to call batch files on windows.\nTo get exit code from batch files, use \"cmd /c call\".\n\nFixes issues 2243",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlecode.com",
		"rsc@golang.org",
		"alex.brainman@gmail.com",
		"jp@webmaster.ms"
	],
	"messages": [
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4962069/diff/4001/src/pkg/exec/exec_test.go\nFile src/pkg/exec/exec_test.go (right):\n\nhttp://codereview.appspot.com/4962069/diff/4001/src/pkg/exec/exec_test.go#newcode263\nsrc/pkg/exec/exec_test.go:263: }\nThis 0/1 is used for exit code of batch file.\nShould I add test0.bat / test1.bat ?\n\nOn 2011/09/12 05:17:34, brainman wrote:\n> Please make sure it works with any parameters, not just 0 and 1, for example:\n> \n> Command(`testdata\\test.bat`, \"a b\").CombinedOutput()\n> \n> should return\n> \n> \"hello test.bat, exiting a b\\r\\n\".",
			"disapproval": false,
			"date": "2011-09-12 07:54:04.104796",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4962069/diff/10001/src/pkg/exec/exec_test.go\nFile src/pkg/exec/exec_test.go (right):\n\nhttp://codereview.appspot.com/4962069/diff/10001/src/pkg/exec/exec_test.go#newcode230\nsrc/pkg/exec/exec_test.go:230: e = \"hello test.bat, exiting 0,hello,world,\\\"a b\\\"\\r\\n\"\n> Where did these double quotes come from? What if I do not double quotes inside my batch\n> file parameter? How should I call it with your new Command?\n> \n> Same for other tests.\n\nmakeCmdLine() in syscall/exec_windows.go\n\nhttp://codereview.appspot.com/4962069/diff/10001/src/pkg/exec/testdata/test.bat\nFile src/pkg/exec/testdata/test.bat (right):\n\nhttp://codereview.appspot.com/4962069/diff/10001/src/pkg/exec/testdata/test.bat#newcode3\nsrc/pkg/exec/testdata/test.bat:3: exit /b %1\n> If I replace this line with:\n> \n> exit %1\n> \n> and revert all your changes in pkg/syscall directory, all your tests PASS. How\n> can you explain that? And what are we fixing here then?\n\nNo, exit %1 destroy cmd.exe. \"exit\" is not \"way to quit batch file\". it's \"way to quit cmd.exe\".\n\nhttp://codereview.appspot.com/4962069/diff/10001/src/pkg/syscall/exec_windows.go\nFile src/pkg/syscall/exec_windows.go (right):\n\nhttp://codereview.appspot.com/4962069/diff/10001/src/pkg/syscall/exec_windows.go#newcode297\nsrc/pkg/syscall/exec_windows.go:297: cmdline = string(utf16.Decode(b[0:n])) + \" /c call \" + cmdline\nall windows users have $COMSPEC. it's point to cmd.exe. most people won't modify it. And If getting $COMSPEC, it works with the arguments directly.\n\nOn 2011/09/13 04:06:18, brainman wrote:\n> We all know that cmd.exe will have /c option. But can we be so sure about\n> whatever program is pointed by COMSPEC?",
			"disapproval": false,
			"date": "2011-09-13 04:21:36.723404",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4962069/diff/4001/src/pkg/exec/exec_test.go\nFile src/pkg/exec/exec_test.go (right):\n\nhttp://codereview.appspot.com/4962069/diff/4001/src/pkg/exec/exec_test.go#newcode263\nsrc/pkg/exec/exec_test.go:263: }\nOn 2011/09/12 07:54:04, mattn wrote:\n> This 0/1 is used for exit code of batch file.\n> Should I add test0.bat / test1.bat ?\n> \n> On 2011/09/12 05:17:34, brainman wrote:\n> > Please make sure it works with any parameters, not just 0 and 1, for example:\n> > \n> > Command(`testdata\\test.bat`, \"a b\").CombinedOutput()\n> > \n> > should return\n> > \n> > \"hello test.bat, exiting a b\\r\\n\".\n> \n\nDone.",
			"disapproval": false,
			"date": "2011-09-12 10:18:02.588426",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Sep 12, 2011 at 06:05,  <jp@webmaster.ms> wrote:\n> Actually, it should look into the registry:\n> 1. into HKCR\\.bat to get \"batfile\"\n> 2. into HKLM\\SOFTWARE\\Classes\\batfile\\shell\\Runas\\command (if not exist,\n> look into: HKLM\\SOFTWARE\\Classes\\batfile\\shell\\Open\\command) to get path\n> to cmd.exe.\n>\n> It allows not only to run .bat and .cmd files with cmd.exe but also .pl\n> files with default Perl, .py files with default Python, etc\n\nOne thing at a time.  We can talk about\nwhether to do that in a separate CL.\nI want to make Windows .bat files work first,\nwithout any registry lookups.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-09-12 17:16:48.392156",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlecode.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttp://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-12 01:24:00.622432",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4962069/diff/10001/src/pkg/exec/exec_test.go\nFile src/pkg/exec/exec_test.go (right):\n\nhttp://codereview.appspot.com/4962069/diff/10001/src/pkg/exec/exec_test.go#newcode230\nsrc/pkg/exec/exec_test.go:230: e = \"hello test.bat, exiting 0,hello,world,\\\"a b\\\"\\r\\n\"\nShould not this be\n\ne = \"hello test.bat, exiting 0,hello,world,\\\"a b\\\"\\r\\n\"\n\n?\n\nI do not see double quotes anywhere inside your 4th parameter `a b`. Where did these double quotes come from? What if I do not double quotes inside my batch file parameter? How should I call it with your new Command?\n\nSame for other tests.\n\nhttp://codereview.appspot.com/4962069/diff/10001/src/pkg/exec/testdata/test.bat\nFile src/pkg/exec/testdata/test.bat (right):\n\nhttp://codereview.appspot.com/4962069/diff/10001/src/pkg/exec/testdata/test.bat#newcode3\nsrc/pkg/exec/testdata/test.bat:3: exit /b %1\nIf I replace this line with:\n\nexit %1\n\nand revert all your changes in pkg/syscall directory, all your tests PASS. How can you explain that? And what are we fixing here then?\n\nhttp://codereview.appspot.com/4962069/diff/10001/src/pkg/syscall/exec_windows.go\nFile src/pkg/syscall/exec_windows.go (right):\n\nhttp://codereview.appspot.com/4962069/diff/10001/src/pkg/syscall/exec_windows.go#newcode297\nsrc/pkg/syscall/exec_windows.go:297: cmdline = string(utf16.Decode(b[0:n])) + \" /c call \" + cmdline\nWe all know that cmd.exe will have /c option. But can we be so sure about whatever program is pointed by COMSPEC?",
			"disapproval": false,
			"date": "2011-09-13 04:06:18.492375",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4962069/diff/4001/src/pkg/exec/exec_test.go\nFile src/pkg/exec/exec_test.go (right):\n\nhttp://codereview.appspot.com/4962069/diff/4001/src/pkg/exec/exec_test.go#newcode263\nsrc/pkg/exec/exec_test.go:263: }\nPlease make sure it works with any parameters, not just 0 and 1, for example:\n\nCommand(`testdata\\test.bat`, \"a b\").CombinedOutput()\n\nshould return\n\n\"hello test.bat, exiting a b\\r\\n\".",
			"disapproval": false,
			"date": "2011-09-12 05:17:34.410895",
			"approval": false
		},
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/12 01:24:00, mattn wrote:\n> Hello mailto:golang-dev@googlecode.com, mailto:rsc@golang.org (cc:\n> mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> http://go.googlecode.com/hg/\n\nActually, it should look into the registry:\n1. into HKCR\\.bat to get \"batfile\"\n2. into HKLM\\SOFTWARE\\Classes\\batfile\\shell\\Runas\\command (if not exist, look into: HKLM\\SOFTWARE\\Classes\\batfile\\shell\\Open\\command) to get path to cmd.exe.\n\nIt allows not only to run .bat and .cmd files with cmd.exe but also .pl files with default Perl, .py files with default Python, etc",
			"disapproval": false,
			"date": "2011-09-12 10:05:12.677071",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/13 04:21:36, mattn wrote:\n> src/pkg/exec/exec_test.go:230: e = \"hello test.bat, exiting 0,hello,world,\\\"a\n> b\\\"\\r\\n\"\n> > Where did these double quotes come from? What if I do not double quotes inside\n> my batch\n> > file parameter? How should I call it with your new Command?\n> > \n> > Same for other tests.\n> \n> makeCmdLine() in syscall/exec_windows.go\n\nWhat if I do not want double quotes inside my batch file parameter?\nHow should I call it with your new Command?\n\n> src/pkg/exec/testdata/test.bat:3: exit /b %1\n> > If I replace this line with:\n> > \n> > exit %1\n> > \n> > and revert all your changes in pkg/syscall directory, all your tests PASS. How\n> > can you explain that? And what are we fixing here then?\n> \n> No, exit %1 destroy cmd.exe. \"exit\" is not \"way to quit batch file\". it's \"way\n> to quit cmd.exe\".\n\nWhere does it say we must use \"exit /b\", instead of \"exit\" to exit batch file?\n\n> src/pkg/syscall/exec_windows.go:297: cmdline = string(utf16.Decode(b[0:n])) + \"\n> /c call \" + cmdline\n> all windows users have $COMSPEC. it's point to cmd.exe. most people won't modify\n> it. And If getting $COMSPEC, it works with the arguments directly.\n\nYou are using program stored in a file with the name stored in COMSPEC env variable. How can you be sure, that the program accepts /c option?\n\nAlex",
			"disapproval": false,
			"date": "2011-09-13 04:31:44.323617",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "brainman:\n\nhttp://codereview.appspot.com/4962069/diff/4001/src/pkg/exec/exec_test.go\nFile src/pkg/exec/exec_test.go (right):\n\nhttp://codereview.appspot.com/4962069/diff/4001/src/pkg/exec/exec_test.go#new...\nsrc/pkg/exec/exec_test.go:263: }\nOn 2011/09/12 07:54:04, mattn wrote:\n> This 0/1 is used for exit code of batch file.\n> Should I add test0.bat / test1.bat ?\n> \n> On 2011/09/12 05:17:34, brainman wrote:\n> > Please make sure it works with any parameters, not just 0 and 1, for\nexample:\n> > \n> > Command(`testdata\\test.bat`, \"a b\").CombinedOutput()\n> > \n> > should return\n> > \n> > \"hello test.bat, exiting a b\\r\\n\".\n> \n\nDone.\n\n\nOn 2011/09/12 10:05:12, jp wrote:\n> On 2011/09/12 01:24:00, mattn wrote:\n> > Hello mailto:golang-dev@googlecode.com, mailto:rsc@golang.org (cc:\n> > mailto:golang-dev@googlegroups.com),\n> > \n> > I'd like you to review this change to\n> > http://go.googlecode.com/hg/\n> \n> Actually, it should look into the registry:\n> 1. into HKCR\\.bat to get \"batfile\"\n> 2. into HKLM\\SOFTWARE\\Classes\\batfile\\shell\\Runas\\command (if not exist, look\n> into: HKLM\\SOFTWARE\\Classes\\batfile\\shell\\Open\\command) to get path to cmd.exe.\n> \n> It allows not only to run .bat and .cmd files with cmd.exe but also .pl files\n> with default Perl, .py files with default Python, etc\n\nI can implement it, But once, pass to rsc.",
			"disapproval": false,
			"date": "2011-09-12 10:17:16.608644",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/13 04:31:44, brainman wrote:\n> On 2011/09/13 04:21:36, mattn wrote:\n> > src/pkg/exec/exec_test.go:230: e = \"hello test.bat, exiting 0,hello,world,\\\"a\n> > b\\\"\\r\\n\"\n> > > Where did these double quotes come from? What if I do not double quotes\n> inside\n> > my batch\n> > > file parameter? How should I call it with your new Command?\n> > > \n> > > Same for other tests.\n> > \n> > makeCmdLine() in syscall/exec_windows.go\n> \n> What if I do not want double quotes inside my batch file parameter?\n> How should I call it with your new Command?\n\nOops, sorry. Double qoutes is added by cmd.exe\nIf you don't want to add double quote, you should use %~1 instead of %1.\n\n\n> > src/pkg/exec/testdata/test.bat:3: exit /b %1\n> > > If I replace this line with:\n> > > \n> > > exit %1\n> > > \n> > > and revert all your changes in pkg/syscall directory, all your tests PASS.\n> How\n> > > can you explain that? And what are we fixing here then?\n> > \n> > No, exit %1 destroy cmd.exe. \"exit\" is not \"way to quit batch file\". it's \"way\n> > to quit cmd.exe\".\n> \n> Where does it say we must use \"exit /b\", instead of \"exit\" to exit batch file?\n\nFor example, try following in cmd.exe.\n\n---------------\nC:\\>type con > foo.bat\n@echo off\nexit /b 1\n^Z\n\nC:\\>foo.bat\n\nC:\\>echo %ERRORLEVEL%\n1\n\nC:\\>type con > bar.bat\n@echo off\nexit 1\n^Z\n\nC:\\>bar.bat\n---------------\n\nProbably, your cmd.exe will be gone at \"bat.bat\". If you want to read help, type \"exit /?\".\n\n---------------\nQuits the CMD.EXE program (command interpreter) or the current batch\nscript.\n\nEXIT [/B] [exitCode]\n\n  /B          specifies to exit the current batch script instead of\n              CMD.EXE.  If executed from outside a batch script, it\n              will quit CMD.EXE\n\n  exitCode    specifies a numeric number.  if /B is specified, sets\n              ERRORLEVEL that number.  If quitting CMD.EXE, sets the process\n              exit code with that number.\n---------------\n\n\n> > src/pkg/syscall/exec_windows.go:297: cmdline = string(utf16.Decode(b[0:n])) +\n> \"\n> > /c call \" + cmdline\n> > all windows users have $COMSPEC. it's point to cmd.exe. most people won't\n> modify\n> > it. And If getting $COMSPEC, it works with the arguments directly.\n> \n> You are using program stored in a file with the name stored in COMSPEC env\n> variable. How can you be sure, that the program accepts /c option?\n\n$COMSPEC is environment variable to specify cmd.exe or command.com.\n\nhttp://msdn.microsoft.com/en-us/library/ms404706.aspx\n\nFor example, someone install windows to D drive, $COMSPEC will specify \"D:\\windows\\system32\\cmd.exe\".\nI think we don't need to check whether $COMSPEC is cmd.exe or others.\n\nmattn",
			"disapproval": false,
			"date": "2011-09-13 06:01:01.530400",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/13 06:01:01, mattn wrote:\n> > \n> > What if I do not want double quotes inside my batch file parameter?\n> > How should I call it with your new Command?\n> \n> Oops, sorry. Double qoutes is added by cmd.exe\n> If you don't want to add double quote, you should use %~1 instead of %1.\n\nWhat if I do not want double quotes inside my batch file parameter?\nHow should I call it with your new Command?\n\n> \n>   exitCode    specifies a numeric number.  if /B is specified, sets\n>               ERRORLEVEL that number.  If quitting CMD.EXE, sets the process\n>               exit code with that number.\n> ---------------\n\nI think that explains it. If you want to set CMD.EXE exit code (and that is what go program gets back from the process), then you should use \"exit 1\" form. If you want to set ERRORLEVEL environment variable, then you should use \"exit /b 1\" form.\n\nI don't think there is anything wrong with our current StartProcess implementation. It does return CMD.EXE exit code. It is up to batch file to set CMD.EXE exit code appropriately. Either way, current StartProcess will allow you to call batch file any way you want. You just need to know what batch file does and invoke the command in an appropriate way.\n\n> \n> I think we don't need to check whether $COMSPEC is cmd.exe or others.\n> \n\nMaybe. Maybe not. How will you find cmd.exe? What will you do if you can't find it?\n\nI think this CL raises more questions then it provides answers.\nFrom my personal experience, any batch file with commands other then invoking other commands should be deleted. Otherwise it will cause pain one way or other. <g>\n\nAlex",
			"disapproval": false,
			"date": "2011-09-13 06:27:19.344706",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/13 08:15:42, mattn wrote:\n> \n> Yes, This is my first approach:\n> \n> https://groups.google.com/d/topic/golang-dev/ujtLlrp8e_c/discussion\n> \n> However, rsc is thinking that this is a problem of StartCommand().\n>  \n\nI do not understand what the problem is in http://codereview.appspot.com/4969065/. But if you have hg.bat that is executed before hg.exe is found, then, perhaps you should execute \"hg.exe\", not \"hg\". This way it will not assume \".bat\" extension.\n\n> >\n> > Maybe. Maybe not. How will you find cmd.exe? What will you do if you\n> > can't find it?\n> >\n> > I think this CL raises more questions then it provides answers.\n> >  From my personal experience, any batch file with commands other then\n> > invoking other commands should be deleted. Otherwise it will cause pain\n> > one way or other. <g>\n> >\n> \n> Sorry I can't understand this part.\n> Most people don't change COMSPEC. To change $COMSPEC like to change \n> registory(for me).\n> Am I mis-understanding about your said? sorry...\n> \n\nI think the change you are proposing here is making things more confusing and wrong. I prefer not to work around batch files, but avoid them if possible.\n\nAlex",
			"disapproval": false,
			"date": "2011-09-13 12:55:02.725230",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nOn Tuesday, September 13, 2011 3:27:19 PM UTC+9, brainman wrote:\n>\n> I think that explains it. If you want to set CMD.EXE exit code (and that\n> is what go program gets back from the process), then you should use\n> \"exit 1\" form. If you want to set ERRORLEVEL environment variable, then\n> you should use \"exit /b 1\" form.\n>\n\nYes, This is my first approach:\n\nhttps://groups.google.com/d/topic/golang-dev/ujtLlrp8e_c/discussion\n\nHowever, rsc is thinking that this is a problem of StartCommand().\n \n\n> > I think we don't need to check whether $COMSPEC is cmd.exe or others.\n>\n> Maybe. Maybe not. How will you find cmd.exe? What will you do if you\n> can't find it?\n>\n> I think this CL raises more questions then it provides answers.\n>  From my personal experience, any batch file with commands other then\n> invoking other commands should be deleted. Otherwise it will cause pain\n> one way or other. <g>\n>\n\nSorry I can't understand this part.\nMost people don't change COMSPEC. To change $COMSPEC like to change \nregistory(for me).\nAm I mis-understanding about your said? sorry...\n\n",
			"disapproval": false,
			"date": "2011-09-13 08:15:42.980305",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> On 2011/09/13 08:15:42, mattn wrote:\n> I do not understand what the problem is in\n> http://codereview.appspot.com/4969065/. But if you have hg.bat that is \nexecuted\n> before hg.exe is found, then, perhaps you should execute \"hg.exe\", not \n\"hg\".\n> This way it will not assume \".bat\" extension.\n\nI don't have \"hg.exe\" because I didn't install mercurial from binary \npackage.\nmercurial 1.9 have a bug that can't start editor in console on windows.\n\nhttp://mercurial.selenic.com/bts/issue2888\n\nThen, I use patched version instead of using binary package.\n\nThis is not a problem only for \"hg.exe\".\n\n> I think the change you are proposing here is making things more confusing \nand\n> wrong. I prefer not to work around batch files, but avoid them if \npossible.\n\nProblem is:\nWhen specify batch file at second argument of CreateProcess(),\nGetExitCodeProcess() can't get exit code.\n\nTo avoid this problem, we must specify following.\n\n  cmd /c call [batchfile]\n\nThis is based on \"cmd.exe don't return exit code of batch file with 'cmd /c \nfoo.bat'\".\n\nMy first approach is:\n\n  cmd /c [batchfile] & exit %ERRORLEVEL%\n\nAnd second's one is:\n\n  cmd /c call [batchfile]\n\nThis is working good for batch file. But it may break behavior of other \nfiles.\nThen rsc suggest that it should be fixed only when command is \".bat\".\n\n  cmd /c call [batchfile]\n\nmattn\n\n",
			"disapproval": false,
			"date": "2011-09-13 13:14:51.532339",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2011-09-21 00:36:00.784787",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/21 00:36:00, mattn wrote:\n> ping\n\nI am not convinced what you are proposing here is simple to implement. I am not convinced that batch files should be treated differently from exe files.\n\nLets go back to your http://code.google.com/p/go/issues/detail?id=2243 and see if it can be resolved without this change. I have posted these questions there:\n\n>>>\nCan we try and understand the problem you are having first. The example you have provided so far is not very good. If you change your batch file to:\n\n@echo off\nexit %1\n\nthen your program will print\n\ntrue\nfalse\nfalse\ntrue\n\nas is expected by your explanation. Would this be enough to solve your problem?\n<<<\n\nAlex",
			"disapproval": false,
			"date": "2011-09-21 03:35:12.336634",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2011-09-30 06:10:44.813192",
			"approval": false
		}
	],
	"owner_email": "mattn.jp@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mattn",
	"subject": "code review 4962069: syscall: use \"cmd /c call\" to call batch files on windows.",
	"created": "2011-09-12 01:21:26.164738",
	"patchsets": [
		1,
		1002,
		4001,
		10001
	],
	"modified": "2011-09-30 06:10:46.992061",
	"closed": true,
	"issue": 4962069
}