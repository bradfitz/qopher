{
	"description": "nacl: regularize documentation of box and secretbox.",
	"cc": [
		"golang-dev@googlegroups.com",
		"gobot@golang.org"
	],
	"reviewers": [
		"agl@chromium.org",
		"agl@golang.org"
	],
	"messages": [
		{
			"sender": "sfrithjof@gmail.com",
			"recipients": [
				"sfrithjof@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2013-05-31 22:10:37.657390",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"sfrithjof@gmail.com",
				"agl@chromium.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=agl (assigned by minux)",
			"disapproval": false,
			"date": "2013-06-03 02:38:37.266410",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"sfrithjof@gmail.com",
				"agl@chromium.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NACK.\n\nI'm afraid that I think this is a net loss. I've no idea what the \"new part of out\" means.",
			"disapproval": false,
			"date": "2013-06-03 14:09:08.056690",
			"approval": false
		},
		{
			"sender": "sfrithjof@gmail.com",
			"recipients": [
				"sfrithjof@gmail.com",
				"agl@chromium.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It probably would be a net loss. But the return values should be documented somehow. Maybe there is a better wording.\n\nAlso I think it should be documented, that the capacity of the out argument has to be big enough to hold message (and poly1305.TagSize more bytes).\nOtherwise append might reallocate changing only the local copy of the reference to out. E.g. http://play.golang.org/p/YGbsHyBjND",
			"disapproval": false,
			"date": "2013-06-06 09:05:57.696530",
			"approval": false
		},
		{
			"sender": "sfrithjof@gmail.com",
			"recipients": [
				"sfrithjof@gmail.com",
				"agl@chromium.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Another point is that the test cases don't use the argument out by always using the pattern\n    box = Seal(box[:0], message, &nonce, &key)\n\nWould you agree with such changes?",
			"disapproval": false,
			"date": "2013-06-06 09:20:05.726200",
			"approval": false
		},
		{
			"sender": "agl@chromium.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jun 6, 2013 at 5:06 AM,  <sfrithjof@gmail.com> wrote:\r\n> Also I think it should be documented, that the capacity of the out\r\n> argument has to be big enough to hold message (and poly1305.TagSize more\r\n> bytes).\r\n> Otherwise append might reallocate changing only the local copy of the\r\n> reference to out. E.g. http://play.golang.org/p/YGbsHyBjND\r\n\r\nThe functions are designed to work like append() - they take a\r\n(possibly nil) buffer and return the updated value. That value may\r\nalias the argument, if there was sufficient capacity, or may be a\r\nfresh buffer.\r\n\r\nPerhaps the arguments are confusingly named?\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2013-06-06 14:47:23.166360",
			"approval": false
		},
		{
			"sender": "sfrithjof@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The arguments are fine; I just managed to confuse myself.\r\nStill, if I understand correctly this program\r\nhttp://play.golang.org/p/SRq2AqA4Dz\r\nshould print 'FirstPart SecondPart', but it prints 'SecondPart'.\r\n\r\nBest, Frithjof\r\n\r\n\r\nOn Thu, Jun 6, 2013 at 4:47 PM, Adam Langley <agl@chromium.org> wrote:\r\n\r\n> On Thu, Jun 6, 2013 at 5:06 AM,  <sfrithjof@gmail.com> wrote:\r\n> > Also I think it should be documented, that the capacity of the out\r\n> > argument has to be big enough to hold message (and poly1305.TagSize more\r\n> > bytes).\r\n> > Otherwise append might reallocate changing only the local copy of the\r\n> > reference to out. E.g. http://play.golang.org/p/YGbsHyBjND\r\n>\r\n> The functions are designed to work like append() - they take a\r\n> (possibly nil) buffer and return the updated value. That value may\r\n> alias the argument, if there was sufficient capacity, or may be a\r\n> fresh buffer.\r\n>\r\n> Perhaps the arguments are confusingly named?\r\n>\r\n>\r\n> Cheers\r\n>\r\n> AGL\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-06 19:03:01.090380",
			"approval": false
		},
		{
			"sender": "agl@chromium.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jun 6, 2013 at 3:03 PM, Frithjof Schulze <sfrithjof@gmail.com> wrote:\r\n> The arguments are fine; I just managed to confuse myself.\r\n> Still, if I understand correctly this program\r\n> http://play.golang.org/p/SRq2AqA4Dz\r\n> should print 'FirstPart SecondPart', but it prints 'SecondPart'.\r\n\r\nI've just looked over the secretbox code again and it's clearly nonsense. Sorry!\r\n\r\nWill be fixed with https://codereview.appspot.com/10099043\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2013-06-06 20:32:00.736850",
			"approval": false
		}
	],
	"owner_email": "sfrithjof@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "sfrithjof",
	"subject": "code review 9687046: nacl: regularize documentation of box and secretbox.",
	"created": "2013-05-31 22:06:07.583520",
	"patchsets": [
		1,
		2001,
		3003
	],
	"modified": "2013-06-10 10:31:55.591780",
	"closed": true,
	"issue": 9687046
}