{
	"description": "runtime: avoid r9/r10 during memmove\n\nFixes issue 3718.\n\nRequires CL 6300043.",
	"cc": [
		"rsc@golang.org",
		"minux.ma@gmail.com",
		"extraterrestrial.neighbour@googlemail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks. \r\n\r\n@minux, could I get a third pair of eyes on both of these CLs before committing?\r\n\r\nOn 19/06/2012, at 14:10, rsc@golang.org wrote:\r\n\r\n> LGTM\r\n> \r\n> It's fine as a separate CL. The review log is here.\r\n> \r\n> \r\n> http://codereview.appspot.com/6305100/\r\n",
			"disapproval": false,
			"date": "2012-06-19 04:19:43.141074",
			"approval": false
		},
		{
			"sender": "extraterrestrial.neighbour@googlemail.com",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"extraterrestrial.neighbour@googlemail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6305100/diff/2004/src/pkg/runtime/memmove_arm.s\nFile src/pkg/runtime/memmove_arm.s (right):\n\nhttp://codereview.appspot.com/6305100/diff/2004/src/pkg/runtime/memmove_arm.s#newcode30\nsrc/pkg/runtime/memmove_arm.s:30: // Warning: the linker will use R11 to syntehsize certain instructions. Please\ns/syntehsize/synthesize",
			"disapproval": false,
			"date": "2012-06-19 16:29:45.807421",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"extraterrestrial.neighbour@googlemail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for your comments, PTAL.\n\nhttp://codereview.appspot.com/6305100/diff/10002/src/pkg/runtime/memmove_arm.s\nFile src/pkg/runtime/memmove_arm.s (right):\n\nhttp://codereview.appspot.com/6305100/diff/10002/src/pkg/runtime/memmove_arm.s#newcode26\nsrc/pkg/runtime/memmove_arm.s:26: TS = 0\t\t\t\t\t/* TS or TE are spilled to the stack */\nOn 2012/06/17 14:50:17, rsc wrote:\n> Please put multiline comments and definitions on different lines.\n> Then we won't have to worry about alignment problems.\n\nDone.\n\nhttp://codereview.appspot.com/6305100/diff/10002/src/pkg/runtime/memmove_arm.s#newcode86\nsrc/pkg/runtime/memmove_arm.s:86: MOVW\tR(TS), 4(R13)\t\t/* save TS */\nOn 2012/06/17 14:50:17, rsc wrote:\n> Does it work to say\n> \n> MOVW R(TS), savedts+0(SP)\n> \n> ?\n> \n> and similarly for the restore? It is supposed to. It might be 4 instead of 0\n> here but my first guess would be 0.\n> \n> Same for all the save/restores below.\n\nDone.\n\nhttp://codereview.appspot.com/6305100/diff/2004/src/pkg/runtime/memmove_arm.s\nFile src/pkg/runtime/memmove_arm.s (right):\n\nhttp://codereview.appspot.com/6305100/diff/2004/src/pkg/runtime/memmove_arm.s#newcode30\nsrc/pkg/runtime/memmove_arm.s:30: // Warning: the linker will use R11 to syntehsize certain instructions. Please\nOn 2012/06/19 16:29:45, extraterrestrial wrote:\n> s/syntehsize/synthesize\n\nDone.",
			"disapproval": false,
			"date": "2012-06-19 20:52:01.542328",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6305100/diff/10002/src/pkg/runtime/memmove_arm.s\nFile src/pkg/runtime/memmove_arm.s (right):\n\nhttp://codereview.appspot.com/6305100/diff/10002/src/pkg/runtime/memmove_arm.s#newcode26\nsrc/pkg/runtime/memmove_arm.s:26: TS = 0\t\t\t\t\t/* TS or TE are spilled to the stack */\nPlease put multiline comments and definitions on different lines.\nThen we won't have to worry about alignment problems.\n\nhttp://codereview.appspot.com/6305100/diff/10002/src/pkg/runtime/memmove_arm.s#newcode86\nsrc/pkg/runtime/memmove_arm.s:86: MOVW\tR(TS), 4(R13)\t\t/* save TS */\nDoes it work to say\n\nMOVW R(TS), savedts+0(SP)\n\n?\n\nand similarly for the restore? It is supposed to. It might be 4 instead of 0 here but my first guess would be 0.\n\nSame for all the save/restores below.",
			"disapproval": false,
			"date": "2012-06-17 14:50:17.630237",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Jun 17, 2012 at 2:50 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> Ahh, that makes sense and explains why this routine was so sensitive to\r\n> reg layout. Previously r11 was the last bulk move reg, so it's contents\r\n> we're not important.\r\n>\r\nprobably we need a warning here: the linker will use r11 to synthesize\r\ncertain instructions,\r\nso please double-check with objdump when using r11 directly.\r\n",
			"disapproval": false,
			"date": "2012-06-17 06:55:46.245466",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-17 13:38:24.284121",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ahh, that makes sense and explains why this routine was so sensitive to reg layout. Previously r11 was the last bulk move reg, so it's contents we're not important. \r\n\r\nOn 17/06/2012, at 16:42, minux <minux.ma@gmail.com> wrote:\r\n\r\n> \r\n> On Sun, Jun 17, 2012 at 1:44 PM, Dave Cheney <dave@cheney.net> wrote:\r\n> I'm having a problem making this work\r\n> \r\n>        AND     $~0x03, R(FROM)         /* align source */\r\n> \r\n> is being compiled into\r\n> \r\n>   0x000582f4 <+212>:   mvn     r11, #3\r\n>   0x000582f8 <+216>:   and     r11, r11, r11\r\n> use \"BIC $0x3, R(FROM)\" directly.\r\n> the linker is use r11 to synthesize certain instructions, and unfortunately we are\r\n> also operating on r11 this time.\r\n> \r\n> i think 5l should give error for this case; but it doesn't try to use BIC which is a\r\n> much better alternative.\r\n",
			"disapproval": false,
			"date": "2012-06-17 06:50:39.267012",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nIt's fine as a separate CL. The review log is here.",
			"disapproval": false,
			"date": "2012-06-19 04:10:23.432740",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Jun 17, 2012 at 1:44 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> I'm having a problem making this work\r\n>\r\n>        AND     $~0x03, R(FROM)         /* align source */\r\n>\r\n> is being compiled into\r\n>\r\n>   0x000582f4 <+212>:   mvn     r11, #3\r\n>   0x000582f8 <+216>:   and     r11, r11, r11\r\n>\r\nuse \"BIC $0x3, R(FROM)\" directly.\r\nthe linker is use r11 to synthesize certain instructions, and unfortunately\r\nwe are\r\nalso operating on r11 this time.\r\n\r\ni think 5l should give error for this case; but it doesn't try to use BIC\r\nwhich is a\r\nmuch better alternative.\r\n",
			"disapproval": false,
			"date": "2012-06-17 06:43:02.425252",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I really liked your other one where you shuffled things and used\r\nR0-R7. Is that not possible here?\r\n",
			"disapproval": false,
			"date": "2012-06-16 23:56:27.559332",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Would you like me to merge this CL into\r\nhttp://codereview.appspot.com/6300043/ as both are needed to resolve\r\nthe issue ?\r\n\r\nOn Mon, Jun 18, 2012 at 8:53 AM,  <dave@cheney.net> wrote:\r\n> Hello rsc@golang.org, minux.ma@gmail.com (cc:\r\n>\r\n> golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> http://codereview.appspot.com/6305100/\r\n",
			"disapproval": false,
			"date": "2012-06-17 23:01:47.171893",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-17 22:53:46.299463",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"extraterrestrial.neighbour@googlemail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, minux.ma@gmail.com, extraterrestrial.neighbour@googlemail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-19 20:50:59.874161",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-06-16 07:17:48.822101",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'll try to make that work. I might be able to place TS at 0 and TE at\r\n8, then use R0-R7 and R1-R8 respectively.\r\n\r\nOn Sun, Jun 17, 2012 at 9:56 AM, Russ Cox <rsc@golang.org> wrote:\r\n> I really liked your other one where you shuffled things and used\r\n> R0-R7. Is that not possible here?\r\n",
			"disapproval": false,
			"date": "2012-06-17 00:03:37.958255",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm having a problem making this work\r\n\r\n        AND     $~0x03, R(FROM)         /* align source */\r\n\r\nis being compiled into\r\n\r\n   0x000582f4 <+212>:   mvn     r11, #3\r\n   0x000582f8 <+216>:   and     r11, r11, r11\r\n\r\nWhich is trying to mask off the bottom two bits, but ends up putting\r\n0xfffffffc into r11.\r\n\r\nWhat am I doing wrong?\r\n\r\nhttps://gist.github.com/2943532\r\n\r\nCheers\r\n\r\nDave\r\n\r\nOn Sun, Jun 17, 2012 at 10:03 AM, Dave Cheney <dave@cheney.net> wrote:\r\n> I'll try to make that work. I might be able to place TS at 0 and TE at\r\n> 8, then use R0-R7 and R1-R8 respectively.\r\n>\r\n> On Sun, Jun 17, 2012 at 9:56 AM, Russ Cox <rsc@golang.org> wrote:\r\n>> I really liked your other one where you shuffled things and used\r\n>> R0-R7. Is that not possible here?\r\n",
			"disapproval": false,
			"date": "2012-06-17 05:44:04.964196",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Performance appears unaffected, which is good\n\nBenchmarkMemmove32      20000000               114 ns/op         279.68 MB/s\nBenchmarkMemmove4K       1000000              1253 ns/op        3268.34 MB/s\nBenchmarkMemmove64K        50000             61538 ns/op        1064.97 MB/s\nBenchmarkMemmove4M           100          28315730 ns/op         148.13 MB/s\nBenchmarkMemmove64M            5         455950800 ns/op         147.18 MB/s",
			"disapproval": false,
			"date": "2012-06-17 13:47:10.275845",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"extraterrestrial.neighbour@googlemail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=5ca8acc84025 ***\n\nruntime: avoid r9/r10 during memmove\n\nFixes issue 3718.\n\nRequires CL 6300043.\n\nR=rsc, minux.ma, extraterrestrial.neighbour\nCC=golang-dev\nhttp://codereview.appspot.com/6305100",
			"disapproval": false,
			"date": "2012-06-24 22:29:29.027832",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6305100: runtime: avoid r9/r10 during memmove",
	"created": "2012-06-16 06:47:53.009130",
	"patchsets": [
		1,
		2001,
		4001,
		7001,
		4,
		2002,
		10002,
		2004,
		8005,
		15002,
		16001
	],
	"modified": "2012-07-01 10:04:34.482345",
	"closed": true,
	"issue": 6305100
}