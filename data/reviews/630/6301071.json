{
	"description": "go.crypto/ssh: allow server to respond to client init key exchange.\n\nA windows SSH client, PuTTY, by default re-keys after every 60 minutes\nor 1G of data transfer.",
	"cc": [
		"dave@cheney.net",
		"agl@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"kardianos@gmail.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Mostly LGTM\n\nhttp://codereview.appspot.com/6301071/diff/8001/ssh/server.go\nFile ssh/server.go (right):\n\nhttp://codereview.appspot.com/6301071/diff/8001/ssh/server.go#newcode281\nssh/server.go:281: if err = unmarshal(clientKexInit, clientKexInitPacket, msgKexInit); err != nil {\nI think this means that the clientKexInit is always unmarshaled from the buffer. I think the code should look like:\n\nif clientKexInit == nil {\n  clientKexInit = new(kexInitMsg)\n  if clientKexInitPacket, err = s.readPacket(); err != nil {\n    return\n  }\n  if err = unmarshal(clientKexInit, clientKexInitPacket, msgKexInit); err != nil {\n    return\n  }\n}",
			"disapproval": false,
			"date": "2012-06-12 19:29:49.929036",
			"approval": true
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'll add to the description.\r\nA windows SSH client, PuTTY, by default re-keys after every 60 minutes \r\nor 1G of data transfer.\r\n\r\nIt is my thinking to add a public re-key method, maybe \"ReHandshake()\", \r\nto both the server and client in another CL.\r\n\r\nI wasn't sure If you would like to see the changes in a simple view \r\nbefore re-factoring in a different CL or not. If the public \r\nReHandshake() refactoring might be slightly different then if I do it now.\r\n\r\nPlease let me know if (1) you would be open to another CL adding \r\n\"ReHandshake()\" to the server and client, and (2) if I should redactor \r\nthe code in this CL or not.\r\n\r\nThanks,\r\n-Daniel\r\n\r\n\r\nOn 06/12/2012 07:39 AM, agl@golang.org wrote:\r\n> The CL description should include a justification. Is there some SSH\r\n> client that does renegotiations automatically that we wish to be\r\n> compatible with?\r\n>\r\n> The code itself involves a big lump of copy-and-paste that could\r\n> probably be better.\r\n>\r\n> http://codereview.appspot.com/6301071/\r\n",
			"disapproval": false,
			"date": "2012-06-12 15:24:22.042707",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"kardianos@gmail.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, agl@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-12 18:03:57.959106",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"kardianos@gmail.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The CL description should include a justification. Is there some SSH client that does renegotiations automatically that we wish to be compatible with?\n\nThe code itself involves a big lump of copy-and-paste that could probably be better.",
			"disapproval": false,
			"date": "2012-06-12 14:39:28.643109",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"kardianos@gmail.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, agl@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-12 19:33:34.175253",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"kardianos@gmail.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, agl@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttp://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-06-12 09:00:50.384179",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jun 12, 2012 at 11:24 AM, Daniel <kardianos@gmail.com> wrote:\r\n> I'll add to the description.\r\n> A windows SSH client, PuTTY, by default re-keys after every 60 minutes or 1G\r\n> of data transfer.\r\n\r\nThanks. That's a good reason to support it.\r\n\r\n> Please let me know if (1) you would be open to another CL adding\r\n> \"ReHandshake()\" to the server and client, and (2) if I should redactor the\r\n> code in this CL or not.\r\n\r\nI think that this CL's scope is good, but the amount of duplicated\r\ncode is unfortunate. Littering code with if statements in order to try\r\nand reduce duplicated code is also bad, but I didn't immediately see\r\nthat it was going to be a major problem here, although I could be\r\nwrong.\r\n\r\nWe will want a way to test this functionality in the future, but I'm\r\nnot sure that we should alter the client code for that.\r\n\r\nI question whether we should expose it publicly. I don't believe that\r\nrenegotiating the ciphers actually makes sense. If you believe that an\r\nendpoint has been compromised then renegotiating hardly seems to help.\r\nPossibly it could be effective against slow, secret leaks (i.e. timing\r\nattacks), in which case we should rehandshake automatically for the\r\nuser. But I think the best course of action is to keep things simple.\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2012-06-12 17:09:33.886352",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"kardianos@gmail.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=671a975c2b5f&repo=crypto ***\n\ngo.crypto/ssh: allow server to respond to client init key exchange.\n\nA windows SSH client, PuTTY, by default re-keys after every 60 minutes\nor 1G of data transfer.\n\nR=dave, agl\nCC=golang-dev\nhttp://codereview.appspot.com/6301071\n\nCommitter: Adam Langley <agl@golang.org>",
			"disapproval": false,
			"date": "2012-06-12 20:34:57.139708",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thanks for adding this (and fixing my spelling mistakes).\r\n\r\nOn Wed, Jun 13, 2012 at 6:34 AM,  <agl@golang.org> wrote:\r\n> *** Submitted as\r\n> http://code.google.com/p/go/source/detail?r=671a975c2b5f&repo=crypto ***\r\n>\r\n>\r\n> go.crypto/ssh: allow server to respond to client init key exchange.\r\n>\r\n> A windows SSH client, PuTTY, by default re-keys after every 60 minutes\r\n> or 1G of data transfer.\r\n>\r\n> R=dave, agl\r\n> CC=golang-dev\r\n> http://codereview.appspot.com/6301071\r\n>\r\n> Committer: Adam Langley <agl@golang.org>\r\n>\r\n>\r\n> http://codereview.appspot.com/6301071/\r\n",
			"disapproval": false,
			"date": "2012-06-12 22:30:20.370989",
			"approval": true
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"kardianos@gmail.com",
				"dave@cheney.net",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-06-12 23:36:18.196765",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think the rational I read for including the rehandshake was to protect \r\nagainst leaks when the sequence counter wraps, especially for ctr \r\nciphers. At this point I don't care too much if it is exposed or not, \r\nbut if you're interested I could see how much code it affects and post a \r\ntentative CL (some time after this one is merged).\r\n\r\nThanks,\r\n-Daniel\r\n\r\n\r\nOn 06/12/2012 10:09 AM, Adam Langley wrote:\r\n> I question whether we should expose it publicly. I don't believe that\r\n> renegotiating the ciphers actually makes sense. If you believe that an\r\n> endpoint has been compromised then renegotiating hardly seems to help.\r\n> Possibly it could be effective against slow, secret leaks (i.e. timing\r\n> attacks), in which case we should rehandshake automatically for the\r\n> user. But I think the best course of action is to keep things simple.\r\n",
			"disapproval": false,
			"date": "2012-06-12 19:12:58.654982",
			"approval": false
		}
	],
	"owner_email": "kardianos@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "kardia",
	"subject": "code review 6301071: go.crypto/ssh: allow server to respond to client init k...",
	"created": "2012-06-12 08:59:54.818347",
	"patchsets": [
		1,
		2001,
		4001,
		8001,
		8002
	],
	"modified": "2012-06-12 23:36:19.017303",
	"closed": true,
	"issue": 6301071
}