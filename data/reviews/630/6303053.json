{
	"description": "exp/html: check the context node for consistency when parsing fragments.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-06-07 08:16:01.516119",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f88086a3bb34 ***\n\nexp/html: check the context node for consistency when parsing fragments.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6303053",
			"disapproval": false,
			"date": "2012-06-08 03:55:42.649032",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6303053/diff/3001/src/pkg/exp/html/parse.go\nFile src/pkg/exp/html/parse.go (right):\n\nhttp://codereview.appspot.com/6303053/diff/3001/src/pkg/exp/html/parse.go#newcode2019\nsrc/pkg/exp/html/parse.go:2019: return nil, errors.New(\"html: ParseFragment passed a non-element Node\")\ns/passed a/of/?\n\nhttp://codereview.appspot.com/6303053/diff/3001/src/pkg/exp/html/parse.go#newcode2021\nsrc/pkg/exp/html/parse.go:2021: if context.DataAtom != a.Lookup([]byte(context.Data)) {\nNot context.DataAtom.String() != context.Data?\nIf there's a reason, comment it.",
			"disapproval": false,
			"date": "2012-06-07 12:54:17.839497",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6303053/diff/3001/src/pkg/exp/html/parse.go\nFile src/pkg/exp/html/parse.go (right):\n\nhttp://codereview.appspot.com/6303053/diff/3001/src/pkg/exp/html/parse.go#newcode2019\nsrc/pkg/exp/html/parse.go:2019: return nil, errors.New(\"html: ParseFragment passed a non-element Node\")\nOn 2012/06/07 12:54:17, rsc wrote:\n> s/passed a/of/?\n\nDone.\n\nhttp://codereview.appspot.com/6303053/diff/3001/src/pkg/exp/html/parse.go#newcode2021\nsrc/pkg/exp/html/parse.go:2021: if context.DataAtom != a.Lookup([]byte(context.Data)) {\nOn 2012/06/07 12:54:17, rsc wrote:\n> Not context.DataAtom.String() != context.Data?\n> If there's a reason, comment it.\n\nPTAL.",
			"disapproval": false,
			"date": "2012-06-07 23:43:13.553113",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-06-08 02:21:05.505501",
			"approval": true
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6303053: exp/html: check the context node for consistency when p...",
	"created": "2012-06-07 08:15:39.220416",
	"patchsets": [
		1,
		2001,
		3001,
		7001,
		5004
	],
	"modified": "2012-06-08 03:55:44.675689",
	"closed": true,
	"issue": 6303053
}