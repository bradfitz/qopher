{
	"description": "net: avoid allocation in setAddr\n\nsetAddr was showing up in profiles due to string concatenation construction the os.File name field. netFD.sysfile's Name() is never used, except in dup() so I believe it is safe to avoid this allocation.",
	"cc": [
		"mikioh.mikioh@gmail.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello mikioh.mikioh@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-10-21 10:27:48.526830",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm happy to avoid the allocation in this case, but can you please add a\r\n\r\nfunc (fd *netFD) name() string {\r\n}\r\n\r\nright where the code is being deleted, and then call that from dup to\r\nset the name of the *os.File that dup returns?\r\n\r\nThanks.\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-10-21 16:44:21.793330",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Russ,\r\n\r\nI have moved the naming logic to netFd.name(), please let me know if\r\nthis is not what you wanted.\r\n\r\nPTAL.\r\n\r\nCheers\r\n\r\nDave\r\n\r\nOn Mon, Oct 22, 2012 at 3:44 AM, Russ Cox <rsc@golang.org> wrote:\r\n> I'm happy to avoid the allocation in this case, but can you please add a\r\n>\r\n> func (fd *netFD) name() string {\r\n> }\r\n>\r\n> right where the code is being deleted, and then call that from dup to\r\n> set the name of the *os.File that dup returns?\r\n>\r\n> Thanks.\r\n> Russ\r\n",
			"disapproval": false,
			"date": "2012-10-22 04:37:44.786290",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello mikioh.mikioh@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-24 20:58:47.060410",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks. I believe this fixes the performance problem but preserves all externally visible behavior.",
			"disapproval": false,
			"date": "2012-10-25 21:13:25.927520",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4f27e8ba8a30 ***\n\nnet: avoid allocation in setAddr\n\nsetAddr was showing up in profiles due to string concatenation construction the os.File name field. netFD.sysfile's Name() is never used, except in dup() so I believe it is safe to avoid this allocation.\n\nR=mikioh.mikioh, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6742058",
			"disapproval": false,
			"date": "2012-10-26 08:41:28.920840",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6742058: net: avoid allocation in setAddr",
	"created": "2012-10-21 10:20:17.436030",
	"patchsets": [
		1,
		3,
		4001,
		5001,
		5003,
		4003,
		10001,
		16001
	],
	"modified": "2012-10-26 08:41:30.189960",
	"closed": true,
	"issue": 6742058
}