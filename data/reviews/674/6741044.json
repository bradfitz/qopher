{
	"description": "cmd/gc: escape analysis to track flow of in to out parameters.\n\nincludes step 0: synthesize outparams, from 6600044\nincludes step 1,2: give outparams loopdepth 0 and verify unchanged results\n         generate esc:$mask tags, but still tie to sink if a param has mask != 0\nfrom 6610054\n\nadds final steps:\n- have esccall generate n->escretval, a list of nodes the function results flow to\n- use these in esccall and ORETURN/OAS2FUNC/and f(g())\n- only tie parameters to sink if tag is absent, otherwise according to mask, tie them to escretval",
	"cc": [
		"rsc@golang.org",
		"bradfitz@golang.org",
		"dave@cheney.net",
		"gobot@golang.org",
		"golang-dev@googlegroups.com",
		"iant@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"lvd@google.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=iant (assigned by bradfitz)",
			"disapproval": false,
			"date": "2012-10-23 18:54:42.630990",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-10-18 15:57:56.070630",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Luuk,\r\n\r\nDoes this CL address issues like\r\nhttps://code.google.com/p/go/issues/detail?id=3702 ?\r\n\r\nCheers\r\n\r\nDave\r\n\r\nOn Fri, Oct 19, 2012 at 2:57 AM,  <lvd@google.com> wrote:\r\n> Reviewers: rsc,\r\n>\r\n> Message:\r\n> Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> cmd/gc: escape analysis to track flow of in to out parameters.\r\n>\r\n> includes step 0: synthesize outparams, from 6600044\r\n> includes step 1,2: give outparams loopdepth 0 and verify unchanged\r\n> results\r\n>          generate esc:$mask tags, but still tie to sink if a param has\r\n> mask != 0\r\n> from 6610054\r\n>\r\n> adds final steps:\r\n> - have esccall generate n->escretval, a list of nodes the function\r\n> results flow to\r\n> - use these in esccall and ORETURN/OAS2FUNC/and f(g())\r\n> - only tie parameters to sink if tag is absent, otherwise according to\r\n> mask, tie them to escretval\r\n>\r\n> Please review this at http://codereview.appspot.com/6741044/\r\n>\r\n> Affected files:\r\n>   M src/cmd/gc/closure.c\r\n>   M src/cmd/gc/dcl.c\r\n>   M src/cmd/gc/esc.c\r\n>   M src/cmd/gc/fmt.c\r\n>   M src/cmd/gc/go.h\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-21 10:04:33.880860",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry for the R=spam\r\n\r\nMaybe I'm the only person who navigates web pages with the keyboard.\r\n\r\nThe drop-downs should probably blur once modified or something.\r\n\r\nOn Tue, Oct 23, 2012 at 11:54 AM, <gobot@golang.org> wrote:\r\n\r\n> R=rsc (assigned by bradfitz)\r\n>\r\n> http://codereview.appspot.com/**6741044/<http://codereview.appspot.com/6741044/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-23 18:57:19.671440",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "looks good but i'd like to read the diffs again once the other 2 CLs are submitted. also, please add tests to test/escape*.go.",
			"disapproval": false,
			"date": "2012-10-21 22:02:47.729660",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"lvd@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=bradfitz (assigned by bradfitz)",
			"disapproval": false,
			"date": "2012-10-23 18:54:41.984320",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"iant@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=rsc (assigned by bradfitz)",
			"disapproval": false,
			"date": "2012-10-23 18:54:49.573180",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, bradfitz@golang.org (cc: dave@cheney.net, gobot@golang.org, golang-dev@googlegroups.com, iant@golang.org, rsc@golang.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-24 14:18:59.491770",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-10-29 12:31:38.789110",
			"approval": true
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=7df8438a2c41 ***\n\ncmd/gc: escape analysis to track flow of in to out parameters.\n\nincludes step 0: synthesize outparams, from 6600044\nincludes step 1,2: give outparams loopdepth 0 and verify unchanged results\n         generate esc:$mask tags, but still tie to sink if a param has mask != 0\nfrom 6610054\n\nadds final steps:\n- have esccall generate n->escretval, a list of nodes the function results flow to\n- use these in esccall and ORETURN/OAS2FUNC/and f(g())\n- only tie parameters to sink if tag is absent, otherwise according to mask, tie them to escretval\n\nR=rsc, bradfitz\nCC=dave, gobot, golang-dev, iant, rsc\nhttp://codereview.appspot.com/6741044",
			"disapproval": false,
			"date": "2012-10-29 12:38:27.143490",
			"approval": false
		}
	],
	"owner_email": "lvd@google.com",
	"private": false,
	"base_url": "",
	"owner": "lvd",
	"subject": "code review 6741044: cmd/gc: escape analysis to track flow of in to out para...",
	"created": "2012-10-18 15:56:43.682000",
	"patchsets": [
		1,
		2001,
		5001,
		2002,
		1002,
		8002,
		1003,
		8005,
		16001,
		18001,
		19005,
		19006,
		22009,
		25001,
		24005,
		28001,
		32001
	],
	"modified": "2012-10-29 12:38:28.539010",
	"closed": true,
	"issue": 6741044
}