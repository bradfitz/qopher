{
	"description": "net: change SetTimeout to SetDeadline\n\nPreviously, a timeout (in int64 nanoseconds) applied to a granularity\neven smaller than one operation:  a 100 byte read with a 1 second timeout\ncould take 100 seconds, if the bytes all arrived on the network 1 second\napart.  This was confusing.\n\nRather than making the timeout granularity be per-Read/Write,\nthis CL makes callers set an absolute deadline (in time.Time)\nafter which operations will fail.  This makes it possible to\nset deadlines at higher levels, without knowing exactly how\nmany read/write operations will happen in e.g. reading an HTTP\nrequest.\n\nFixes issue 2723",
	"cc": [
		"r@golang.org",
		"rsc@golang.org",
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"alex.brainman@gmail.com",
		"dsymonds@golang.org"
	],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bradfitz@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for this CL, a solid improvement.\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/exp/ssh/tcpip.go\nFile src/pkg/exp/ssh/tcpip.go (right):\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/exp/ssh/tcpip.go#newcode124\nsrc/pkg/exp/ssh/tcpip.go:124: return errors.New(\"ssh: tcpchan: timeout not supported\")\ns/timeout/deadline\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/exp/ssh/tcpip.go#newcode131\nsrc/pkg/exp/ssh/tcpip.go:131: }\ns/timeout/deadline\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/net/pipe.go\nFile src/pkg/net/pipe.go (left):\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/net/pipe.go#oldcode57\nsrc/pkg/net/pipe.go:57: return errors.New(\"net.Pipe does not support timeouts\")\ndoes not support deadlines ?",
			"disapproval": false,
			"date": "2012-01-18 21:08:38.712393",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=15a4e4a99bff ***\n\nnet: change SetTimeout to SetDeadline\n\nPreviously, a timeout (in int64 nanoseconds) applied to a granularity\neven smaller than one operation:  a 100 byte read with a 1 second timeout\ncould take 100 seconds, if the bytes all arrived on the network 1 second\napart.  This was confusing.\n\nRather than making the timeout granularity be per-Read/Write,\nthis CL makes callers set an absolute deadline (in time.Time)\nafter which operations will fail.  This makes it possible to\nset deadlines at higher levels, without knowing exactly how\nmany read/write operations will happen in e.g. reading an HTTP\nrequest.\n\nFixes issue 2723\n\nR=r, rsc, dave\nCC=golang-dev\nhttp://codereview.appspot.com/5555048",
			"disapproval": false,
			"date": "2012-01-19 00:24:09.400388",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-18 20:21:35.761560",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5555048/diff/2001/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/http/server.go#newcode957\nsrc/pkg/net/http/server.go:957: ReadTimeout    time.Duration // default duration to allow reading the request body from connections\nmaybe\nmaximum duration before timing out read of the request body\n?\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/http/server.go#newcode958\nsrc/pkg/net/http/server.go:958: WriteTimeout   time.Duration // default duration to allow writing responses to connections\nsimilarly.\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/net.go\nFile src/pkg/net/net.go (right):\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/net.go#newcode50\nsrc/pkg/net/net.go:50: // Setting t to its zero value disables the deadline.\nA zero value for t means Read will not time out.\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/net.go#newcode55\nsrc/pkg/net/net.go:55: // Setting t with to its zero value disables the deadline.\ns/with // but make it the same as my sentence above anyway.\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/net.go#newcode98\nsrc/pkg/net/net.go:98: // Setting t to its zero value disables the deadline.\nditto\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/net.go#newcode103\nsrc/pkg/net/net.go:103: // Setting t with to its zero value disables the deadline.\nditto and ditto",
			"disapproval": false,
			"date": "2012-01-18 19:29:10.767581",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/exp/ssh/tcpip.go\nFile src/pkg/exp/ssh/tcpip.go (right):\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/exp/ssh/tcpip.go#newcode122\nsrc/pkg/exp/ssh/tcpip.go:122: // On timeout, the error will implement net.Error with Timeout() == true.\ns/implment/implement/",
			"disapproval": false,
			"date": "2012-01-18 20:50:36.943686",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI like how this turned out.\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/net/net.go\nFile src/pkg/net/net.go (right):\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/net/net.go#newcode49\nsrc/pkg/net/net.go:49: // If the deadline is reached, Read will fail with a timeout (see type Error).\n// ... Read will fail with a timeout (see type Error)\n// instead of blocking.\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/net/net.go#newcode54\nsrc/pkg/net/net.go:54: // If the deadline is reached, Write will fail with a timeout (see type Error).\nSame.\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/net/net.go#newcode97\nsrc/pkg/net/net.go:97: // If the deadline is reached, Read will fail with a timeout (see type Error).\nSame.\n\nhttp://codereview.appspot.com/5555048/diff/3021/src/pkg/net/net.go#newcode102\nsrc/pkg/net/net.go:102: // If the deadline is reached, Write will fail with a timeout (see type Error).\nSame.",
			"disapproval": false,
			"date": "2012-01-18 20:54:58.019928",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org, rsc@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-18 23:47:27.667970",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-18 19:19:47.660133",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Builds & passes, but probably needs wordsmithing.\n\nOn Wed, Jan 18, 2012 at 11:19 AM, <bradfitz@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> net: change SetTimeout to SetDeadline\n>\n> Previously, a timeout (in int64 nanoseconds) applied to a granularity\n> even smaller than one operation:  a 100 byte read with a 1 second\n> timeout\n> could take 100 seconds, if the bytes all arrived on the network 1 second\n> apart.  This was confusing.\n>\n> Rather than making the timeout granularity be per-Read/Write,\n> this CL makes callers set an absolute deadline (in time.Time)\n> after which operations will fail.  This makes it possible to\n> set deadlines at higher levels, without knowing exactly how\n> many read/write operations will happen in e.g. reading an HTTP\n> request.\n>\n> Fixes issue 2723\n>\n> Please review this at http://codereview.appspot.com/**5555048/<http://codereview.appspot.com/5555048/>\n>\n> Affected files:\n>  M src/pkg/crypto/tls/conn.go\n>  M src/pkg/exp/ssh/tcpip.go\n>  M src/pkg/log/syslog/syslog_**test.go\n>  M src/pkg/net/dnsclient_unix.go\n>  M src/pkg/net/fd.go\n>  M src/pkg/net/http/httputil/**dump.go\n>  M src/pkg/net/http/serve_test.go\n>  M src/pkg/net/http/server.go\n>  M src/pkg/net/ipraw_test.go\n>  M src/pkg/net/iprawsock_posix.go\n>  M src/pkg/net/net.go\n>  M src/pkg/net/pipe.go\n>  M src/pkg/net/server_test.go\n>  M src/pkg/net/sockopt.go\n>  M src/pkg/net/tcpsock_posix.go\n>  M src/pkg/net/timeout_test.go\n>  M src/pkg/net/udpsock_posix.go\n>  M src/pkg/net/unixsock_posix.go\n>  M src/pkg/websocket/websocket.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-18 19:22:26.929163",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org, rsc@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-19 00:05:54.581038",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\ndoc changes look good\nupdate html before submit\n\nhttp://codereview.appspot.com/5555048/diff/7/doc/go1.tmpl\nFile doc/go1.tmpl (right):\n\nhttp://codereview.appspot.com/5555048/diff/7/doc/go1.tmpl#newcode664\ndoc/go1.tmpl:664: apply to any activity on the connection, the new methods set an\ns/apply/applies/\n\nhttp://codereview.appspot.com/5555048/diff/7/doc/go1.tmpl#newcode666\ndoc/go1.tmpl:666: reads and/or writes will time out and no longer block.</p>\ns;/or;;",
			"disapproval": false,
			"date": "2012-01-19 00:07:12.876571",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm going to submit now.\n\nTBR=brainman for fd_windows.go\n\n\nOn Wed, Jan 18, 2012 at 4:07 PM, <r@golang.org> wrote:\n\n> LGTM\n>\n> doc changes look good\n> update html before submit\n>\n>\n>\n>\n>\n> http://codereview.appspot.com/**5555048/diff/7/doc/go1.tmpl<http://codereview.appspot.com/5555048/diff/7/doc/go1.tmpl>\n> File doc/go1.tmpl (right):\n>\n> http://codereview.appspot.com/**5555048/diff/7/doc/go1.tmpl#**newcode664<http://codereview.appspot.com/5555048/diff/7/doc/go1.tmpl#newcode664>\n> doc/go1.tmpl:664: apply to any activity on the connection, the new\n> methods set an\n> s/apply/applies/\n>\n> http://codereview.appspot.com/**5555048/diff/7/doc/go1.tmpl#**newcode666<http://codereview.appspot.com/5555048/diff/7/doc/go1.tmpl#newcode666>\n> doc/go1.tmpl:666: reads and/or writes will time out and no longer\n> block.</p>\n> s;/or;;\n>\n> http://codereview.appspot.com/**5555048/<http://codereview.appspot.com/5555048/>\n>\n",
			"disapproval": false,
			"date": "2012-01-19 00:23:33.753095",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"alex.brainman@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-19 00:55:05.294372",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No. It's not possible.  Semantics changed too much.\n On Jan 20, 2012 1:40 AM, \"David Symonds\" <dsymonds@golang.org> wrote:\n\n> Are you planning to write a gofix for this?\n>\n",
			"disapproval": false,
			"date": "2012-01-20 15:29:31.940036",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5555048/diff/2001/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/http/server.go#newcode957\nsrc/pkg/net/http/server.go:957: ReadTimeout    time.Duration // default duration to allow reading the request body from connections\nOn 2012/01/18 19:29:10, r wrote:\n> maybe\n> maximum duration before timing out read of the request body\n> ?\n\nDone.\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/http/server.go#newcode958\nsrc/pkg/net/http/server.go:958: WriteTimeout   time.Duration // default duration to allow writing responses to connections\nOn 2012/01/18 19:29:10, r wrote:\n> similarly.\n\nDone.\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/net.go\nFile src/pkg/net/net.go (right):\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/net.go#newcode50\nsrc/pkg/net/net.go:50: // Setting t to its zero value disables the deadline.\nOn 2012/01/18 19:29:10, r wrote:\n> A zero value for t means Read will not time out.\n\nDone.\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/net.go#newcode55\nsrc/pkg/net/net.go:55: // Setting t with to its zero value disables the deadline.\nOn 2012/01/18 19:29:10, r wrote:\n> s/with // but make it the same as my sentence above anyway.\n\nDone.\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/net.go#newcode98\nsrc/pkg/net/net.go:98: // Setting t to its zero value disables the deadline.\nOn 2012/01/18 19:29:10, r wrote:\n> ditto\n\nDone.\n\nhttp://codereview.appspot.com/5555048/diff/2001/src/pkg/net/net.go#newcode103\nsrc/pkg/net/net.go:103: // Setting t with to its zero value disables the deadline.\nOn 2012/01/18 19:29:10, r wrote:\n> ditto and ditto\n\nDone.",
			"disapproval": false,
			"date": "2012-01-18 19:34:42.310898",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-18 19:34:47.593613",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5555048/diff/6002/src/pkg/net/net.go\nFile src/pkg/net/net.go (right):\n\nhttp://codereview.appspot.com/5555048/diff/6002/src/pkg/net/net.go#newcode49\nsrc/pkg/net/net.go:49: // Read will wait for data before returning an error with Timeout() == true.\nthere's still something wrong with this sentence. how about\nSetReadDeadlines sets the deadline for all Read calls to return. If the deadline is reached, Read will fail with a timeout (see type Error).\n\nthe phrase \"error with Timeout()\" isn't right, because error doesn't have a timeout method, but i think explaining that here is unwise.",
			"disapproval": false,
			"date": "2012-01-18 19:45:49.559880",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org, rsc@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-19 00:04:07.568511",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Now with Windows (fd_windows.go) and Linux support (sendfile_linux.go).\n Both tested.\n\nAnd misc wording fixes as mentioned by r, rsc, dcheney.\n\nPTAL for fd_windows.go at least?\n\n\nOn Wed, Jan 18, 2012 at 3:47 PM, <bradfitz@golang.org> wrote:\n\n> Hello r@golang.org, rsc@golang.org, dave@cheney.net (cc:\n>\n> golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**5555048/<http://codereview.appspot.com/5555048/>\n>\n",
			"disapproval": false,
			"date": "2012-01-18 23:49:05.391465",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Are you planning to write a gofix for this?\n",
			"disapproval": false,
			"date": "2012-01-20 09:40:40.748687",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5555048: net: change SetTimeout to SetDeadline",
	"created": "2012-01-18 19:19:27.903655",
	"patchsets": [
		1,
		2001,
		6002,
		3021,
		4003,
		1021,
		5,
		6,
		7,
		8
	],
	"modified": "2012-01-20 09:40:40.873595",
	"closed": true,
	"issue": 5555048
}