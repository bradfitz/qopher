{
	"description": "effective_go.html: move and rework the blank identifier section\nAlso rename the relevant examples and make sure the working one compiles.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"adg@golang.org",
		"iant@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-03-07 21:09:21.054540",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7597043/diff/1/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttps://codereview.appspot.com/7597043/diff/1/doc/effective_go.html#newcode2459\ndoc/effective_go.html:2459: identifier to ignore type-asserted value:\nMissing word \"the\" ?\n\nhttps://codereview.appspot.com/7597043/diff/1/doc/effective_go.html#newcode2463\ndoc/effective_go.html:2463: if _, ok := val.(json.Marshaler); ok {\nworth mentioning the other case, where the ok is ignored?\n\nvar conn net.Conn\n...\ntcpConn := conn.(*net.TCPConn)     // might panic\nvs\ntcpConn, _ := conn.(*net.TCPConn)  // won't panic",
			"disapproval": false,
			"date": "2013-03-07 21:57:31.821200",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7597043/diff/1/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttps://codereview.appspot.com/7597043/diff/1/doc/effective_go.html#newcode2463\ndoc/effective_go.html:2463: if _, ok := val.(json.Marshaler); ok {\ngood idea, but now i see type assertions aren't well covered here.\nlet me do this in a subsequent CL that addresses that issue. there's enough\nnew material here already.",
			"disapproval": false,
			"date": "2013-03-08 00:10:28.814560",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7597043/diff/5001/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttps://codereview.appspot.com/7597043/diff/5001/doc/effective_go.html#newcode2363\ndoc/effective_go.html:2363: fi, _ := os.Stat(path); os.IsNotExist(err)\ns/;.+//\n\nhttps://codereview.appspot.com/7597043/diff/5001/doc/effective_go.html#newcode2392\ndoc/effective_go.html:2392: To silence complaints about the unused imports, use a\nShow the error messages you'll get?\n\nhttps://codereview.appspot.com/7597043/diff/5001/doc/effective_go.html#newcode2394\ndoc/effective_go.html:2394: By convention, such declarations should come right after\nconsider putting this sentence and the next after listing 2\n\nhttps://codereview.appspot.com/7597043/diff/5001/doc/effective_go.html#newcode2469\ndoc/effective_go.html:2469: (Another method is to use a one-case <a href=\"#type_switch\">type switch</a>.)\nput the parenthetical in a separate paragraph?",
			"disapproval": false,
			"date": "2013-03-08 00:52:43.124910",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-08 01:16:15.299980",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7597043/diff/5001/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttps://codereview.appspot.com/7597043/diff/5001/doc/effective_go.html#newcode2363\ndoc/effective_go.html:2363: fi, _ := os.Stat(path); os.IsNotExist(err)\nOn 2013/03/08 00:52:43, adg wrote:\n> s/;.+//\n\nDone.\n\nhttps://codereview.appspot.com/7597043/diff/5001/doc/effective_go.html#newcode2392\ndoc/effective_go.html:2392: To silence complaints about the unused imports, use a\nno. they're compiler-dependent and likely to change, plus people get confused if they see something other than what you tell them.\n\nhttps://codereview.appspot.com/7597043/diff/5001/doc/effective_go.html#newcode2394\ndoc/effective_go.html:2394: By convention, such declarations should come right after\nOn 2013/03/08 00:52:43, adg wrote:\n> consider putting this sentence and the next after listing 2\n\nDone.\n\nhttps://codereview.appspot.com/7597043/diff/5001/doc/effective_go.html#newcode2469\ndoc/effective_go.html:2469: (Another method is to use a one-case <a href=\"#type_switch\">type switch</a>.)\ni just deleted it. it's distracting.",
			"disapproval": false,
			"date": "2013-03-08 01:16:16.106570",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7597043/diff/9001/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttps://codereview.appspot.com/7597043/diff/9001/doc/effective_go.html#newcode2476\ndoc/effective_go.html:2476: a custom its JSON representation, it should implement\ns/a custom its/a custom/",
			"disapproval": false,
			"date": "2013-03-08 01:32:33.054660",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-03-08 01:39:54.517110",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-03-08 18:34:02.910910",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"iant@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=bdf690b6a741 ***\n\neffective_go.html: move and rework the blank identifier section\nAlso rename the relevant examples and make sure the working one compiles.\n\nR=golang-dev, bradfitz, adg, iant, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7597043",
			"disapproval": false,
			"date": "2013-03-08 18:41:24.611030",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 7597043: effective_go.html: move and rework the blank identifier...",
	"created": "2013-03-07 21:09:16.842320",
	"patchsets": [
		1,
		5001,
		9001,
		16001
	],
	"modified": "2013-03-08 18:41:26.576160",
	"closed": true,
	"issue": 7597043
}