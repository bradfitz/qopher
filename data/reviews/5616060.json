{
	"description": "go/doc: Fix URL linking in ToHTML.\n\nFixes issue: 2832",
	"cc": [
		"rsc@golang.org",
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gary.burd@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "test looks good; not sure about the comment\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment.go\nFile src/pkg/go/doc/comment.go (right):\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment.go#newcode103\nsrc/pkg/go/doc/comment.go:103: // match against first parenthesized sub-regexp; must be match against urlRx\nBut urlRx is now m[1]?",
			"disapproval": false,
			"date": "2012-02-02 22:43:45.745597",
			"approval": false
		},
		{
			"sender": "gary.burd@gmail.com",
			"recipients": [
				"gary.burd@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-02 20:19:07.840374",
			"approval": false
		},
		{
			"sender": "gary.burd@gmail.com",
			"recipients": [
				"gary.burd@gmail.com",
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-03 00:55:21.512890",
			"approval": false
		},
		{
			"sender": "gary.burd@gmail.com",
			"recipients": [
				"gary.burd@gmail.com",
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5616060/diff/2002/src/pkg/go/doc/comment_test.go\nFile src/pkg/go/doc/comment_test.go (right):\n\nhttp://codereview.appspot.com/5616060/diff/2002/src/pkg/go/doc/comment_test.go#newcode90\nsrc/pkg/go/doc/comment_test.go:90: {\"http://www.google.com/\", `<a href=\"http://www.google.com/\">http://www.google.com/</a>`},\nOn 2012/02/03 00:31:47, gri wrote:\n> Can you please add a couple of tests where a valid URL is inside longer text as\n> well. Thanks.\n> \n> say: \"foo bar http://www.google.com/ bal\"\n\nDone.",
			"disapproval": false,
			"date": "2012-02-03 00:55:32.797765",
			"approval": false
		},
		{
			"sender": "gary.burd@gmail.com",
			"recipients": [
				"gary.burd@gmail.com",
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-02 23:56:44.007689",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-02-03 00:16:35.037321",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Feb 2, 2012 at 19:00,  <gary.burd@gmail.com> wrote:\n> m[1] is the end of the entire match. \u00a0urlRx is m[2]:m[3].\n\nForgot the *2; sorry for the noise.\n",
			"disapproval": false,
			"date": "2012-02-03 00:15:57.910830",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gary.burd@gmail.com",
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment.go\nFile src/pkg/go/doc/comment.go (right):\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment.go#newcode90\nsrc/pkg/go/doc/comment.go:90: // m >= 6 (two parenthesized sub-regexps in matchRx, 1st one is identRx)\n1st one is urlRx\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment_test.go\nFile src/pkg/go/doc/comment_test.go (right):\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment_test.go#newcode90\nsrc/pkg/go/doc/comment_test.go:90: {\"http://www.google.com/\", \"<a href=\\\"http://www.google.com/\\\">http://www.google.com/</a>\"},\nuse back-quoted (raw) strings, then there is no need for \\\"\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment_test.go#newcode90\nsrc/pkg/go/doc/comment_test.go:90: {\"http://www.google.com/\", \"<a href=\\\"http://www.google.com/\\\">http://www.google.com/</a>\"},\nshould add a few more test cases, exercising the regexp",
			"disapproval": false,
			"date": "2012-02-02 22:44:57.636029",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gary.burd@gmail.com",
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but please add one or two tests with a URL in the middle of some line\n\nhttp://codereview.appspot.com/5616060/diff/2002/src/pkg/go/doc/comment_test.go\nFile src/pkg/go/doc/comment_test.go (right):\n\nhttp://codereview.appspot.com/5616060/diff/2002/src/pkg/go/doc/comment_test.go#newcode90\nsrc/pkg/go/doc/comment_test.go:90: {\"http://www.google.com/\", `<a href=\"http://www.google.com/\">http://www.google.com/</a>`},\nCan you please add a couple of tests where a valid URL is inside longer text as well. Thanks.\n\nsay: \"foo bar http://www.google.com/ bal\"",
			"disapproval": false,
			"date": "2012-02-03 00:31:47.019957",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Leaving for gri to submit.\n",
			"disapproval": false,
			"date": "2012-02-03 00:40:08.610788",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gary.burd@gmail.com",
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\nthanks.\n- gri",
			"disapproval": false,
			"date": "2012-02-03 01:01:53.791004",
			"approval": true
		},
		{
			"sender": "gary.burd@gmail.com",
			"recipients": [
				"gary.burd@gmail.com",
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment.go\nFile src/pkg/go/doc/comment.go (right):\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment.go#newcode90\nsrc/pkg/go/doc/comment.go:90: // m >= 6 (two parenthesized sub-regexps in matchRx, 1st one is identRx)\nOn 2012/02/02 22:44:57, gri wrote:\n> 1st one is urlRx\n\nFixed.\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment.go#newcode103\nsrc/pkg/go/doc/comment.go:103: // match against first parenthesized sub-regexp; must be match against urlRx\nOn 2012/02/02 22:43:45, rsc wrote:\n> But urlRx is now m[1]?\n\nm[1] is the end of the entire match.  urlRx is m[2]:m[3].\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment_test.go\nFile src/pkg/go/doc/comment_test.go (right):\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment_test.go#newcode90\nsrc/pkg/go/doc/comment_test.go:90: {\"http://www.google.com/\", \"<a href=\\\"http://www.google.com/\\\">http://www.google.com/</a>\"},\nOn 2012/02/02 22:44:57, gri wrote:\n> should add a few more test cases, exercising the regexp\n\nDone.\n\nhttp://codereview.appspot.com/5616060/diff/4001/src/pkg/go/doc/comment_test.go#newcode90\nsrc/pkg/go/doc/comment_test.go:90: {\"http://www.google.com/\", \"<a href=\\\"http://www.google.com/\\\">http://www.google.com/</a>\"},\nOn 2012/02/02 22:44:57, gri wrote:\n> use back-quoted (raw) strings, then there is no need for \\\"\n\nDone.",
			"disapproval": false,
			"date": "2012-02-03 00:00:20.990679",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gary.burd@gmail.com",
				"rsc@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 1850ba379b84 ***\n\ngo/doc: Fix URL linking in ToHTML.\n\nFixes issue: 2832\n\nR=rsc, gri\nCC=golang-dev\nhttp://codereview.appspot.com/5616060\n\nCommitter: Robert Griesemer <gri@golang.org>",
			"disapproval": false,
			"date": "2012-02-03 01:02:07.931326",
			"approval": false
		}
	],
	"owner_email": "gary.burd@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "gburd",
	"subject": "code review 5616060: go/doc: Fix URL linking in ToHTML.",
	"created": "2012-02-02 20:17:20.074124",
	"patchsets": [
		1,
		2001,
		4001,
		2002,
		3009
	],
	"modified": "2012-02-09 01:15:07.719139",
	"closed": true,
	"issue": 5616060
}