{
	"description": "cmd/gc: don't hash nor compare struct padding or blank fields.\n\nFixes issue 4585.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks very much for fixing this.\n\nhttps://codereview.appspot.com/7142052/diff/3/test/blank.go\nFile test/blank.go (right):\n\nhttps://codereview.appspot.com/7142052/diff/3/test/blank.go#newcode109\ntest/blank.go:109: \nThe T struct above may be zeroed in some implementations. Could you please force the memory to be different, like:\n\ntype T1 struct { x, y, z int }\n\n*(*T1)(unsafe.Pointer(&t1)) = T1{1,2,3}\n*(*T1)(unsafe.Pointer(&t1)) = T1{4,5,6}\nif t1 != t2 {\n    panic(\"T{} != T{}\")\n}",
			"disapproval": false,
			"date": "2013-01-18 16:42:28.894520",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-01-18 10:41:23.291530",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Still buggy. Another patch coming.",
			"disapproval": false,
			"date": "2013-01-18 17:46:30.284250",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7142052/diff/3/test/blank.go\nFile test/blank.go (right):\n\nhttps://codereview.appspot.com/7142052/diff/3/test/blank.go#newcode108\ntest/blank.go:108: }\nthis test used to trigger a compilation error:\n\n./blank.go:106: ambiguous selector autotmp_0012._\n./blank.go:106: ambiguous selector autotmp_0013._\n./blank.go:106: ambiguous selector autotmp_0012._\n./blank.go:106: ambiguous selector autotmp_0013._\n./blank.go:106: ambiguous selector autotmp_0012._\n./blank.go:106: ambiguous selector autotmp_0013._",
			"disapproval": false,
			"date": "2013-01-18 10:43:13.170760",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=7059eeacbfba ***\n\ncmd/gc: don't hash nor compare struct padding or blank fields.\n\nFixes issue 4585.\n\nR=rsc, golang-dev\nCC=golang-dev\nhttps://codereview.appspot.com/7142052\n\nhttps://codereview.appspot.com/7142052/diff/3/test/blank.go\nFile test/blank.go (right):\n\nhttps://codereview.appspot.com/7142052/diff/3/test/blank.go#newcode109\ntest/blank.go:109: \nOn 2013/01/18 16:42:28, rsc wrote:\n> The T struct above may be zeroed in some implementations. Could you please force\n> the memory to be different, like:\n> \n> type T1 struct { x, y, z int }\n> \n> *(*T1)(unsafe.Pointer(&t1)) = T1{1,2,3}\n> *(*T1)(unsafe.Pointer(&t1)) = T1{4,5,6}\n> if t1 != t2 {\n>     panic(\"T{} != T{}\")\n> }\n\nDone.",
			"disapproval": false,
			"date": "2013-01-18 17:26:56.388300",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 7142052: cmd/gc: don't hash nor compare struct padding or blank ...",
	"created": "2013-01-18 10:13:35.210330",
	"patchsets": [
		1,
		2001,
		3,
		8001
	],
	"modified": "2013-01-18 17:46:30.460730",
	"closed": true,
	"issue": 7142052
}