{
	"description": "undo CL 11884043 / bfd5ed8236d5\n\nCL submitted prematurely by mistake.\n\n\u00ab\u00ab\u00ab original CL description\nspec: clarify index and selector expressions\n\n1) Explain a[i] and a[i:j] where a is of type *A as\n   shortcut for (*a)[i] and (*a)[i:j], respectively.\n\n2) Together with 1), because len() of nil slices is\n   well defined, there's no need to special case nil\n   operands anymore.\n\n3) The result of indexing or slicing a constant string\n   is always a non-constant byte or string value.\n\n4) The result of slicing an untyped string is a value\n   of type string.\n\n5) If the operand of a valid slice a[i:j] is nil (i, j\n   must be 0 for it to be valid - this already follows\n   from the in-range rules), the result is a nil slice.\n\nFixes issue 4913.\nFixes issue 5951.\n\nR=rsc, r, iant, ken\nCC=golang-dev\nhttps://codereview.appspot.com/11884043\n\u00bb\u00bb\u00bb",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"r@golang.org"
	],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-07-31 21:09:46.427900",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=63235d688030 ***\n\nundo CL 11884043 / bfd5ed8236d5\n\nCL submitted prematurely by mistake.\n\n\u00ab\u00ab\u00ab original CL description\nspec: clarify index and selector expressions\n\n1) Explain a[i] and a[i:j] where a is of type *A as\n   shortcut for (*a)[i] and (*a)[i:j], respectively.\n\n2) Together with 1), because len() of nil slices is\n   well defined, there's no need to special case nil\n   operands anymore.\n\n3) The result of indexing or slicing a constant string\n   is always a non-constant byte or string value.\n\n4) The result of slicing an untyped string is a value\n   of type string.\n\n5) If the operand of a valid slice a[i:j] is nil (i, j\n   must be 0 for it to be valid - this already follows\n   from the in-range rules), the result is a nil slice.\n\nFixes issue 4913.\nFixes issue 5951.\n\nR=rsc, r, iant, ken\nCC=golang-dev\nhttps://codereview.appspot.com/11884043\n\u00bb\u00bb\u00bb\n\nR=r\nCC=golang-dev\nhttps://codereview.appspot.com/12170046",
			"disapproval": false,
			"date": "2013-07-31 21:10:48.842260",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-31 21:12:40.282550",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 12170046: undo CL 11884043 / bfd5ed8236d5",
	"created": "2013-07-31 21:08:25.334360",
	"patchsets": [
		1,
		3001,
		7001
	],
	"modified": "2013-07-31 21:12:40.359100",
	"closed": true,
	"issue": 12170046
}