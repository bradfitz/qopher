{
	"description": "encoding/binary: another attempt to describe the type of Read and Write's data",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@google.com",
		"gri@golang.org",
		"r@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@google.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5641062/diff/1/src/pkg/encoding/binary/binary.go\nFile src/pkg/encoding/binary/binary.go (right):\n\nhttp://codereview.appspot.com/5641062/diff/1/src/pkg/encoding/binary/binary.go#newcode180\nsrc/pkg/encoding/binary/binary.go:180: // values, or an (arbitrarily deep) pointer to such data.\ns/(arbitrarily deep) //\n\nhttp://codereview.appspot.com/5641062/diff/1/src/pkg/encoding/binary/binary.go#newcode256\nsrc/pkg/encoding/binary/binary.go:256: // Size returns how many bytes Write would generate to encode the value v, assuming\nShould say something here; should accept what Read and Write do.\nMaybe the definition of fixed-size should be in the package comment, and then Read says \"pointer to a fixed-size value or a slice of fixed-size values\" and Write and Size say \"a fixed-size value, a pointer to a fixed-size value, or a slice of fixed-size values\".\n\nhttp://codereview.appspot.com/5641062/diff/1/src/pkg/encoding/binary/binary.go#newcode259\nsrc/pkg/encoding/binary/binary.go:259: return dataSize(reflect.ValueOf(v))\ndataSize(reflect.Indirect(reflect.ValueOf(v)))",
			"disapproval": false,
			"date": "2012-02-09 03:33:33.878528",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-09 03:11:14.187386",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5641062/diff/1/src/pkg/encoding/binary/binary.go\nFile src/pkg/encoding/binary/binary.go (right):\n\nhttp://codereview.appspot.com/5641062/diff/1/src/pkg/encoding/binary/binary.go#newcode180\nsrc/pkg/encoding/binary/binary.go:180: // values, or an (arbitrarily deep) pointer to such data.\nOn 2012/02/09 03:33:34, rsc1 wrote:\n> s/(arbitrarily deep) //\n\nbut it is arbitrarily deep. in your quest for precision, are you willing to avoid documenting that detail?",
			"disapproval": false,
			"date": "2012-02-09 03:39:57.293466",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-09 03:39:58.351962",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5641062/diff/4/src/pkg/encoding/binary/binary.go\nFile src/pkg/encoding/binary/binary.go (right):\n\nhttp://codereview.appspot.com/5641062/diff/4/src/pkg/encoding/binary/binary.go#newcode180\nsrc/pkg/encoding/binary/binary.go:180: // values, or an (arbitrarily deep) pointer to such data.\narbitrarily deep seems a bit vague (is it ****p?)",
			"disapproval": false,
			"date": "2012-02-09 17:41:21.538492",
			"approval": true
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 8, 2012 at 22:39,  <r@golang.org> wrote:\n> but it is arbitrarily deep. in your quest for precision, are you willing\n> to avoid documenting that detail?\n\nI don't believe it is arbitrarily deep.\nWrite contains a single call to reflect.Indirect,\nwhich handles 0 or 1 pointers, and then dataSize\nrejects anything containing pointers.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-09 18:34:49.461541",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "apologies. i had a different implementation of indirect in mind.  deleted the term.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-09 22:54:33.414840",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"gri@golang.org",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=155ced87a593 ***\n\nencoding/binary: another attempt to describe the type of Read and Write's data\n\nR=golang-dev, rsc, gri, r\nCC=golang-dev\nhttp://codereview.appspot.com/5641062",
			"disapproval": false,
			"date": "2012-02-09 22:55:56.245034",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5641062: encoding/binary: another attempt to describe the type o...",
	"created": "2012-02-09 03:11:05.806814",
	"patchsets": [
		1,
		4,
		5002
	],
	"modified": "2012-02-09 22:55:58.615849",
	"closed": true,
	"issue": 5641062
}