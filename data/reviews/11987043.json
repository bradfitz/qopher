{
	"description": "net: fix memory leaks on windows\nClose netpoll descriptor along with socket.\nEnsure that error paths close the descriptor as well.",
	"cc": [
		"golang-dev@googlegroups.com",
		"mikioh.mikioh@gmail.com",
		"alex.brainman@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-07-28 12:40:25.383470",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11987043/diff/5001/src/pkg/net/fd_windows.go\nFile src/pkg/net/fd_windows.go (right):\n\nhttps://codereview.appspot.com/11987043/diff/5001/src/pkg/net/fd_windows.go#newcode45\nsrc/pkg/net/fd_windows.go:45: func closesocket(s syscall.Handle) error {\nis this obsoleted?",
			"disapproval": false,
			"date": "2013-07-28 15:16:38.247510",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11987043/diff/5001/src/pkg/net/fd_windows.go\nFile src/pkg/net/fd_windows.go (right):\n\nhttps://codereview.appspot.com/11987043/diff/5001/src/pkg/net/fd_windows.go#newcode45\nsrc/pkg/net/fd_windows.go:45: func closesocket(s syscall.Handle) error {\nOn 2013/07/28 15:16:38, mikio wrote:\n> is this obsoleted?\n\nIt's still used in 2 places: netFD.Close() and if newFD() fails. But, yeah, I can inline it, if that's what you mean.",
			"disapproval": false,
			"date": "2013-07-28 15:29:18.974220",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jul 29, 2013 at 12:29 AM,  <dvyukov@google.com> wrote:\r\n\r\n> It's still used in 2 places: netFD.Close() and if newFD() fails. But,\r\n> yeah, I can inline it, if that's what you mean.\r\n\r\nyup, let's collapse it if possible.\r\n",
			"disapproval": false,
			"date": "2013-07-28 22:00:26.605480",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nbut following comments.\n\nAlex\n\nhttps://codereview.appspot.com/11987043/diff/5001/src/pkg/net/fd_windows.go\nFile src/pkg/net/fd_windows.go (right):\n\nhttps://codereview.appspot.com/11987043/diff/5001/src/pkg/net/fd_windows.go#newcode291\nsrc/pkg/net/fd_windows.go:291: runtime.SetFinalizer(fd, (*netFD).Close)\nBut unix version does not call (*netFD).Close, but just closes file descriptor. I changed that code recently https://codereview.appspot.com/6873046. So it means unix version would be leaking memory too when finaliser is used. Also logically you would not have any outstanding IO here (no one has access to this object once in finaliser) so fd.pd.Close + closesocket should do here.",
			"disapproval": false,
			"date": "2013-07-29 04:08:38.814190",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jul 29, 2013 at 8:08 AM,  <alex.brainman@gmail.com> wrote:\r\n> LGTM\r\n>\r\n> but following comments.\r\n>\r\n> Alex\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.com/11987043/diff/5001/src/pkg/net/fd_windows.go\r\n> File src/pkg/net/fd_windows.go (right):\r\n>\r\n> https://codereview.appspot.com/11987043/diff/5001/src/pkg/net/fd_windows.go#newcode291\r\n> src/pkg/net/fd_windows.go:291: runtime.SetFinalizer(fd, (*netFD).Close)\r\n> But unix version does not call (*netFD).Close, but just closes file\r\n> descriptor. I changed that code recently\r\n> https://codereview.appspot.com/6873046. So it means unix version would\r\n> be leaking memory too when finaliser is used.\r\n\r\noops\r\n\r\n> Also logically you would\r\n> not have any outstanding IO here (no one has access to this object once\r\n> in finaliser) so fd.pd.Close + closesocket should do here.\r\n\r\nyeah, but this is exactly the approach that caused this bug, the leak\r\nin unix finalizer, and some previous similar issues -- the approach\r\nthat you can have several versions of close for different situations\r\n(that different versions eventually become inconsistent). A user would\r\nhave called Close(), and so must the finalizer.\r\n",
			"disapproval": false,
			"date": "2013-07-29 07:36:18.921280",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/29 07:36:18, dvyukov wrote:\n> ... A user would\n> have called Close(), and so must the finalizer.\n\nI am not expert enough here. Take it up with Russ. :-)\n\nOn the other hand, my missing of fd.pd.Close() should be fixed regardless.\n\nAlex",
			"disapproval": false,
			"date": "2013-07-29 07:41:16.454260",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11987043/diff/5001/src/pkg/net/fd_windows.go\nFile src/pkg/net/fd_windows.go (right):\n\nhttps://codereview.appspot.com/11987043/diff/5001/src/pkg/net/fd_windows.go#newcode45\nsrc/pkg/net/fd_windows.go:45: func closesocket(s syscall.Handle) error {\nOn 2013/07/28 15:29:19, dvyukov wrote:\n> On 2013/07/28 15:16:38, mikio wrote:\n> > is this obsoleted?\n> \n> It's still used in 2 places: netFD.Close() and if newFD() fails. But, yeah, I\n> can inline it, if that's what you mean.\n\nThis closesocket is also used in sock_posix.go which is shared between windows and linux.\nBut I've removed:\nfunc (fd *netFD) closesocket() error\nwhich is not used.",
			"disapproval": false,
			"date": "2013-07-29 16:00:59.177850",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=d41598ff11f3 ***\n\nnet: fix memory leaks on windows\nClose netpoll descriptor along with socket.\nEnsure that error paths close the descriptor as well.\n\nR=golang-dev, mikioh.mikioh, alex.brainman\nCC=golang-dev\nhttps://codereview.appspot.com/11987043",
			"disapproval": false,
			"date": "2013-07-29 16:01:29.905640",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 11987043: net: fix memory leaks on windows",
	"created": "2013-07-28 12:38:39.030770",
	"patchsets": [
		1,
		3001,
		5001,
		15001,
		20001
	],
	"modified": "2013-07-29 16:01:31.610140",
	"closed": true,
	"issue": 11987043
}