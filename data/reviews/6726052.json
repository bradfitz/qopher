{
	"description": "go.talks/present: add .html function",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.talks",
			"disapproval": false,
			"date": "2012-10-17 01:58:06.389720",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6726052/diff/1/present/doc.go\nFile present/doc.go (right):\n\nhttp://codereview.appspot.com/6726052/diff/1/present/doc.go#newcode167\npresent/doc.go:167: that cannot be created using only the slide format.\nexplain in strong terms that it's your responsibility to make that HTML safe.\n\nhttp://codereview.appspot.com/6726052/diff/1/present/html.go\nFile present/html.go (right):\n\nhttp://codereview.appspot.com/6726052/diff/1/present/html.go#newcode25\npresent/html.go:25: return HTML(b), nil\ndoes this compile? that nil looks wrong.\n\nhttp://codereview.appspot.com/6726052/diff/1/present/parse.go\nFile present/parse.go (right):\n\nhttp://codereview.appspot.com/6726052/diff/1/present/parse.go#newcode40\npresent/parse.go:40: if function != nil {\nexplain this. it's not obvious what's happening.",
			"disapproval": false,
			"date": "2012-10-17 02:26:00.056170",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2147a6840a68&repo=talks ***\n\ngo.talks/present: add .html function\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/6726052",
			"disapproval": false,
			"date": "2012-10-17 04:10:04.669050",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Oops, I missed your comments. Please continue here http://codereview.appspot.com/6727047\n\nhttps://codereview.appspot.com/6726052/diff/1/present/doc.go\nFile present/doc.go (right):\n\nhttps://codereview.appspot.com/6726052/diff/1/present/doc.go#newcode167\npresent/doc.go:167: that cannot be created using only the slide format.\nOn 2012/10/17 02:26:00, r wrote:\n> explain in strong terms that it's your responsibility to make that HTML safe.\n\nOK. But it's not that big a deal because it's not end-user provided html, but author-provided html.\n\nhttps://codereview.appspot.com/6726052/diff/1/present/html.go\nFile present/html.go (right):\n\nhttps://codereview.appspot.com/6726052/diff/1/present/html.go#newcode25\npresent/html.go:25: return HTML(b), nil\nOn 2012/10/17 02:26:00, r wrote:\n> does this compile? that nil looks wrong.\n\nWhy wouldn't it? the function returns (Elem, error)\n\nhttps://codereview.appspot.com/6726052/diff/1/present/parse.go\nFile present/parse.go (right):\n\nhttps://codereview.appspot.com/6726052/diff/1/present/parse.go#newcode40\npresent/parse.go:40: if function != nil {\nOn 2012/10/17 02:26:00, r wrote:\n> explain this. it's not obvious what's happening.\n\nDone.",
			"disapproval": false,
			"date": "2012-10-17 04:49:56.812650",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 6726052: go.talks/present: add .html function",
	"created": "2012-10-17 01:58:00.852670",
	"patchsets": [
		1,
		4001
	],
	"modified": "2012-10-17 04:49:57.007410",
	"closed": true,
	"issue": 6726052
}