{
	"description": "cmd/5l: use BLX for BL (Rx).\nFixes issue 5111.\nUpdate issue 4718\nThis CL makes BL (Rx) to use BLX Rx instead of:\nMOV LR, PC\nMOV PC, Rx",
	"cc": [
		"cshapiro@golang.org",
		"rsc@golang.org",
		"dave@cheney.net",
		"gobot@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jun 11, 2013 at 1:29 AM, <rsc@golang.org> wrote:\r\n\r\n> https://codereview.appspot.**com/9669045/diff/6002/src/cmd/**\r\n> 5l/asm.c#newcode863<https://codereview.appspot.com/9669045/diff/6002/src/cmd/5l/asm.c#newcode863>\r\n> src/cmd/5l/asm.c:863: if(instoffset != 0)\r\n> On 2013/06/07 16:05:24, minux wrote:\r\n>\r\n>> please note that 5a doesn't accept this statement:\r\n>> BL 4(R0)\r\n>>\r\n>\r\n>  and that it can be trivially translated to:\r\n>> ADD $4, R0, R11\r\n>> BL (R11)\r\n>> without affecting anything.\r\n>>\r\n>\r\n>  also note that cmd/5g and cmd/5c won't generate\r\n>> BL x(Ry) where x != 0.\r\n>>\r\n>\r\n>  so i feel the restriction is reasonable.\r\n>>\r\n>\r\n> Could just keep the old code for that case.\r\n>\r\n> if(instoffset == 0) {\r\n>    // optimization: use BLX\r\n>    ...\r\n> }\r\n> ... old code ..\r\n>\r\nThe reason i didn't keep the old code is that optab defines the length of\r\nthe this particular instruction, so once i changed it to 4, i can no longer\r\nuse the original code (which tries to generate 2 instruction, 8 bytes).\r\n\r\nas i'm sure that 5c/5g doesn't use BL 4(R0), i think we can just live\r\nwithout the old code.\r\n",
			"disapproval": false,
			"date": "2013-06-10 17:51:51.348850",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-07 15:18:34.493180",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9669045/diff/6002/src/cmd/5l/asm.c\nFile src/cmd/5l/asm.c (right):\n\nhttps://codereview.appspot.com/9669045/diff/6002/src/cmd/5l/asm.c#newcode863\nsrc/cmd/5l/asm.c:863: if(instoffset != 0)\nplease note that 5a doesn't accept this statement:\nBL 4(R0)\n\nand that it can be trivially translated to:\nADD $4, R0, R11\nBL (R11)\nwithout affecting anything.\n\nalso note that cmd/5g and cmd/5c won't generate\nBL x(Ry) where x != 0.\n\nso i feel the restriction is reasonable.",
			"disapproval": false,
			"date": "2013-06-07 16:05:24.502390",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/07 16:05:24, minux wrote:\n> https://codereview.appspot.com/9669045/diff/6002/src/cmd/5l/asm.c\n> File src/cmd/5l/asm.c (right):\n> \n> https://codereview.appspot.com/9669045/diff/6002/src/cmd/5l/asm.c#newcode863\n> src/cmd/5l/asm.c:863: if(instoffset != 0)\n> please note that 5a doesn't accept this statement:\n> BL 4(R0)\n> \n> and that it can be trivially translated to:\n> ADD $4, R0, R11\n> BL (R11)\n> without affecting anything.\n> \n> also note that cmd/5g and cmd/5c won't generate\n> BL x(Ry) where x != 0.\n> \n> so i feel the restriction is reasonable.\n\nLGTM. Thank you very much for working on this.\n\nThis passes ./all.bash on my pandaboard, given the spec for BLX covers all ARMv5 chips (BL :label was added to 5T, but we don't use that), I'm pretty sure this will pass all the builders.\n\nI guess MOV LR,PC.. and BLX is used in the case where the compiler must generate a long jump, > +/- 32Mb from the current PC, but I don't really know so am not sure where to look in the assembly to check.\n\nI'll use gocodereview to assign this to Carl as he raised the issue initially.",
			"disapproval": false,
			"date": "2013-06-08 02:44:23.309090",
			"approval": true
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=cshapiro (assigned by dfc)",
			"disapproval": false,
			"date": "2013-06-08 02:44:38.990160",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"cshapiro@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM with fixes\n\nhttps://codereview.appspot.com/9669045/diff/6002/src/cmd/5l/5.out.h\nFile src/cmd/5l/5.out.h (right):\n\nhttps://codereview.appspot.com/9669045/diff/6002/src/cmd/5l/5.out.h#newcode205\nsrc/cmd/5l/5.out.h:205: ABLX,\nCan you do without this? This file is the definition of the file format, and BLX does not appear in the files: BL still does.\n\nhttps://codereview.appspot.com/9669045/diff/6002/src/cmd/5l/asm.c\nFile src/cmd/5l/asm.c (right):\n\nhttps://codereview.appspot.com/9669045/diff/6002/src/cmd/5l/asm.c#newcode863\nsrc/cmd/5l/asm.c:863: if(instoffset != 0)\nOn 2013/06/07 16:05:24, minux wrote:\n> please note that 5a doesn't accept this statement:\n> BL 4(R0)\n> \n> and that it can be trivially translated to:\n> ADD $4, R0, R11\n> BL (R11)\n> without affecting anything.\n> \n> also note that cmd/5g and cmd/5c won't generate\n> BL x(Ry) where x != 0.\n> \n> so i feel the restriction is reasonable.\n\nCould just keep the old code for that case.\n\nif(instoffset == 0) {\n   // optimization: use BLX\n   ...\n}\n... old code ...\n\nhttps://codereview.appspot.com/9669045/diff/6002/src/cmd/5l/asm.c#newcode865\nsrc/cmd/5l/asm.c:865: o1 = oprrr(ABLX, p->scond);\nI think you can pass ABL here.\noprrr isn't defined on ABL right now.",
			"disapproval": false,
			"date": "2013-06-10 17:29:38.398590",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"cshapiro@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM after removing ABLX",
			"disapproval": false,
			"date": "2013-06-10 18:49:08.034110",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"cshapiro@golang.org",
				"rsc@golang.org",
				"dave@cheney.net",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=f5d54688b261 ***\n\ncmd/5l: use BLX for BL (Rx).\nFixes issue 5111.\nUpdate issue 4718\nThis CL makes BL (Rx) to use BLX Rx instead of:\nMOV LR, PC\nMOV PC, Rx\n\nR=cshapiro, rsc\nCC=dave, gobot, golang-dev\nhttps://codereview.appspot.com/9669045",
			"disapproval": false,
			"date": "2013-06-10 19:04:35.189190",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 9669045: cmd/5l: use BLX for BL (Rx).",
	"created": "2013-06-07 14:31:17.238260",
	"patchsets": [
		1,
		2001,
		4001,
		6001,
		6002,
		15001,
		18001,
		21001
	],
	"modified": "2013-06-10 19:04:39.009420",
	"closed": true,
	"issue": 9669045
}