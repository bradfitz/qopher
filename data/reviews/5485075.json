{
	"description": "leveldb/record: new package for record I/O.\n\nIt will be used for leveldb logs.",
	"cc": [
		"bradfitz@golang.org",
		"christoph@tux21b.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "christoph@tux21b.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"christoph@tux21b.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Nigel,\n\nYour API is really beautiful, much better than my sketch or the C++ implementation. I am already looking forward to using this piece of software.\n\nAlso, many thanks for your comments at my CL (5477078). I think I have learned a lot by comparing both versions.\n\nLGTM",
			"disapproval": false,
			"date": "2011-12-14 11:15:13.836613",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"christoph@tux21b.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI can probably do a more thorough/paranoid review later, though.\n\nhttp://codereview.appspot.com/5485075/diff/4005/leveldb/record/record.go\nFile leveldb/record/record.go (right):\n\nhttp://codereview.appspot.com/5485075/diff/4005/leveldb/record/record.go#newcode73\nleveldb/record/record.go:73: // This package does not implement the recovery algorithm yet.\nTODO?\n\nhttp://codereview.appspot.com/5485075/diff/4005/leveldb/record/record.go#newcode113\nleveldb/record/record.go:113: // n is the number of bytes of buf that is valid. Once reading has started,\ns/is/are/ ?\n\nhttp://codereview.appspot.com/5485075/diff/4005/leveldb/record/record.go#newcode116\nleveldb/record/record.go:116: // started is whether the Next has been called at all.\n\"the Next method\" or \"Next\"\n\nhttp://codereview.appspot.com/5485075/diff/4005/leveldb/record/record.go#newcode183\nleveldb/record/record.go:183: r.err = errors.New(\"leveldb/record: Read called before Next\")\nkinda makes me wonder whether Next should return an io.Reader.  (even if the concrete type and receiver is just r)",
			"disapproval": false,
			"date": "2011-12-14 19:18:16.615325",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"christoph@tux21b.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: christoph@tux21b.org, golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/leveldb-go/",
			"disapproval": false,
			"date": "2011-12-14 10:10:41.521966",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"christoph@tux21b.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5485075/diff/4005/leveldb/record/record.go\nFile leveldb/record/record.go (right):\n\nhttp://codereview.appspot.com/5485075/diff/4005/leveldb/record/record.go#newcode73\nleveldb/record/record.go:73: // This package does not implement the recovery algorithm yet.\nOn 2011/12/14 19:18:16, bradfitz wrote:\n> TODO?\n\nDone.\n\nhttp://codereview.appspot.com/5485075/diff/4005/leveldb/record/record.go#newcode113\nleveldb/record/record.go:113: // n is the number of bytes of buf that is valid. Once reading has started,\nOn 2011/12/14 19:18:16, bradfitz wrote:\n> s/is/are/ ?\n\nDone.\n\nhttp://codereview.appspot.com/5485075/diff/4005/leveldb/record/record.go#newcode116\nleveldb/record/record.go:116: // started is whether the Next has been called at all.\nOn 2011/12/14 19:18:16, bradfitz wrote:\n> \"the Next method\" or \"Next\"\n\nDone.\n\nhttp://codereview.appspot.com/5485075/diff/4005/leveldb/record/record.go#newcode183\nleveldb/record/record.go:183: r.err = errors.New(\"leveldb/record: Read called before Next\")\nOn 2011/12/14 19:18:16, bradfitz wrote:\n> kinda makes me wonder whether Next should return an io.Reader.  (even if the\n> concrete type and receiver is just r)\n\nYeah, maybe Next should return an io.Reader or io.Writer. I'll submit this as is, and see what that looks like in a follow-up change.",
			"disapproval": false,
			"date": "2011-12-14 23:45:30.827138",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"christoph@tux21b.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 05ba42898fbe ***\n\nleveldb/record: new package for record I/O.\n\nIt will be used for leveldb logs.\n\nR=bradfitz, christoph\nCC=golang-dev\nhttp://codereview.appspot.com/5485075",
			"disapproval": false,
			"date": "2011-12-14 23:50:37.751210",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 5485075: leveldb/record: new package for record I/O.",
	"created": "2011-12-14 10:08:54.620568",
	"patchsets": [
		1,
		2001,
		3005,
		7001,
		4005,
		9001
	],
	"modified": "2011-12-14 23:50:40.132676",
	"closed": true,
	"issue": 5485075
}