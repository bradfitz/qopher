{
	"description": "net: implement ip protocol name to number resolver for windows\n\nFixes issue 2215.\nFixes issue 2216.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f449f935da49 ***\n\nnet: implement ip protocol name to number resolver for windows\n\nFixes issue 2215.\nFixes issue 2216.\n\nR=golang-dev, dave, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5248055",
			"disapproval": false,
			"date": "2011-10-11 23:29:29.548564",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-10 10:44:16.924725",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview.appspotmail.com"
			],
			"text": "Looks good, tests pass under linux/amd64\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/iprawsock_posix.go\nFile src/pkg/net/iprawsock_posix.go (right):\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/iprawsock_posix.go#newcode220\nsrc/pkg/net/iprawsock_posix.go:220: return \"\", 0, err\nIt's more common to use return\\n here if your return arguments are declared in the method signature.\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/lookup_unix.go\nFile src/pkg/net/lookup_unix.go (right):\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/lookup_unix.go#newcode46\nsrc/pkg/net/lookup_unix.go:46: func lookupProtocol(name string) (proto int, err os.Error) {\nYou probably don't need to name the return arguments here.\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/lookup_windows.go\nFile src/pkg/net/lookup_windows.go (right):\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/lookup_windows.go#newcode21\nsrc/pkg/net/lookup_windows.go:21: func lookupProtocol(name string) (proto int, err os.Error) {\nDrop the named arguments if you aren't going to refer to them in the method body.",
			"disapproval": false,
			"date": "2011-10-10 10:54:23.865817",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview.appspotmail.com"
			],
			"text": "Thank you for review.\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/iprawsock_posix.go\nFile src/pkg/net/iprawsock_posix.go (right):\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/iprawsock_posix.go#newcode220\nsrc/pkg/net/iprawsock_posix.go:220: return \"\", 0, err\nI always try to specify return values explicitly. This way I don't need to guess what I am returning here. I also don't have to worry about shadowed variables. In this particular instance, I am fixing a bug that, I believe, was caused by an empty return statement.\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/lookup_unix.go\nFile src/pkg/net/lookup_unix.go (right):\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/lookup_unix.go#newcode46\nsrc/pkg/net/lookup_unix.go:46: func lookupProtocol(name string) (proto int, err os.Error) {\nI would like to keep this function similar to others in this file. I have changed return statement instead.\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/lookup_windows.go\nFile src/pkg/net/lookup_windows.go (right):\n\nhttp://codereview.appspot.com/5248055/diff/5001/src/pkg/net/lookup_windows.go#newcode21\nsrc/pkg/net/lookup_windows.go:21: func lookupProtocol(name string) (proto int, err os.Error) {\nAgain, I would like to keep this function similar to others.",
			"disapproval": false,
			"date": "2011-10-11 11:29:20.789027",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-11 11:29:11.953585",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-10-11 16:23:44.333767",
			"approval": true
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5248055: net: implement ip protocol name to number resolver for ...",
	"created": "2011-10-10 10:42:32.752617",
	"patchsets": [
		1,
		2001,
		5001,
		10001,
		15001
	],
	"modified": "2011-10-11 23:29:32.112613",
	"closed": true,
	"issue": 5248055
}