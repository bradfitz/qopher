{
	"description": "cmd/gc: elide index bounds check for safe index operations within range statement\n\nThis CL elides the index bounds for index operations within range statements, which are guaranteed not to go out of bounds.\n\n        for i := range slice {\n        \tslice[i] // no check on this index op\n        }\n\nRight now, the cases that this optimization handles is very limited.\nIt is only attempted under these conditions:\n\n  - The right side of the range statement is a pure ONAME.\n  - The slice/array must be of class AUTO, PARAM or PARAMOUT\n  - The slice must not be assigned to within the body of the loop\n  - The index has not been assigned to before a indexing operation.\n  - Nowhere in the function must the address have been taken of either the index or the slice.\n\nI'm sending this out more as a RFC than as a proper review. I've only done some rudimentary testing, and no benchmarks yet.\nI'm not sure if there is some legal edge case that I've missed, which makes the optimization misbehave, or if I've broken any unwritten laws about how the compiler should work.\n\nI'll probably also need some help regarding benchmarks. From lurking the dev list, I see the same set of comparative benchmarks pop up, but I'm not sure how to calculate them with the go build system.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [
		"golang-dev@googlegroups.com"
	],
	"messages": [
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-06-13 18:30:27.265300",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry for the duplication of effort, but I'm already working on more\r\ngeneral elimination that I expect to handle this case. I don't believe\r\nit's worth the effort to put in a special case here.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-06-13 18:37:01.930484",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jun 13, 2012 at 8:36 PM, Russ Cox <rsc@golang.org> wrote:\r\n> Sorry for the duplication of effort, but I'm already working on more\r\n> general elimination that I expect to handle this case. I don't believe\r\n> it's worth the effort to put in a special case here.\r\n>\r\n> Russ\r\n\r\nNo problem. I pretty much did this for fun over a couple of\r\nafternoons. I'll keep this CL active for now if we ever want to\r\nrevisit the idea.\r\n\r\nI'm looking forward to seeing the code for the more general elimination.\r\n",
			"disapproval": false,
			"date": "2012-06-13 18:44:43.902850",
			"approval": false
		}
	],
	"owner_email": "daniel.morsing@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "DMorsing",
	"subject": "code review 6297070: cmd/gc: elide index bounds check for safe index operati...",
	"created": "2012-06-10 18:02:41.530069",
	"patchsets": [
		1,
		2001,
		5001,
		5002,
		8005
	],
	"modified": "2012-07-30 06:56:49.517680",
	"closed": true,
	"issue": 6297070
}