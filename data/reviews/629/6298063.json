{
	"description": "cmd/api: handle empty API file, ignore -next in release",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-06-08 17:25:31.708142",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=8e7ad2db0833 ***\n\ncmd/api: handle empty API file, ignore -next in release\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6298063",
			"disapproval": false,
			"date": "2012-06-08 17:45:04.818158",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Fri, Jun 8, 2012 at 10:25 AM, <rsc@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> cmd/api: handle empty API file, ignore -next in release\r\n>\r\n> Please review this at http://codereview.appspot.com/**6298063/<http://codereview.appspot.com/6298063/>\r\n>\r\n> Affected files:\r\n>  M src/cmd/api/goapi.go\r\n>\r\n>\r\n> Index: src/cmd/api/goapi.go\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/api/goapi.go\r\n> +++ b/src/cmd/api/goapi.go\r\n> @@ -28,6 +28,7 @@\r\n>        \"os/exec\"\r\n>        \"path\"\r\n>        \"path/filepath\"\r\n> +       \"runtime\"\r\n>        \"sort\"\r\n>        \"strconv\"\r\n>        \"strings\"\r\n> @@ -98,6 +99,13 @@\r\n>\r\n>  func main() {\r\n>        flag.Parse()\r\n> +\r\n> +       if !strings.Contains(runtime.**Version(), \"weekly\") {\r\n> +               if *nextFile != \"\" {\r\n> +                       fmt.Printf(\"Go version is %q, ignoring -next\r\n> %s\\n\", runtime.Version(), *nextFile)\r\n> +                       *nextFile = \"\"\r\n> +               }\r\n> +       }\r\n>\r\n>        if *forceCtx != \"\" {\r\n>                setContexts()\r\n> @@ -235,7 +243,11 @@\r\n>        if err != nil {\r\n>                log.Fatalf(\"Error reading file %s: %v\", filename, err)\r\n>        }\r\n> -       return strings.Split(strings.**TrimSpace(string(bs)), \"\\n\")\r\n> +       text := strings.TrimSpace(string(bs))\r\n> +       if text == \"\" {\r\n> +               return nil\r\n> +       }\r\n> +       return strings.Split(text, \"\\n\")\r\n>  }\r\n>\r\n>  // pkgSymbol represents a symbol in a package\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-06-08 17:36:32.238302",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6298063: cmd/api: handle empty API file, ignore -next in release",
	"created": "2012-06-08 17:19:32.924591",
	"patchsets": [
		1,
		2001,
		1002,
		8001,
		7002
	],
	"modified": "2012-06-08 17:45:05.394125",
	"closed": true,
	"issue": 6298063
}