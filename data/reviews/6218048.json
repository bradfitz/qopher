{
	"description": "doc/progs: use test/run.go for testing on Windows\n        cgo[1-4].go, go1.go couldn't be tested now\n(cgo[1-4].go can only be tested when cgo is enabled, go1.go\ncontain a list of filenames in the current directory)",
	"cc": [
		"golang-dev@googlegroups.com",
		"alex.brainman@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I do not see how you are going to hook it all to the builder. Lets wait for CL 6220049 to submit, then we can come back here.\n\nAlex",
			"disapproval": false,
			"date": "2012-05-22 06:19:59.786590",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/05/22 06:19:59, brainman wrote:\n> I do not see how you are going to hook it all to the builder. Lets wait for CL\n> 6220049 to submit, then we can come back here.\nDue to constrain of the codereview plugin, I can't change the same file in two CL.\n\nMy plan is to just enable test/run.go based doc/progs test on Windows,\nbecause it can't test cgo*.go properly (no way to skip if cgo is disabled),\nso on FreeBSD/Linux/Mac OS X, we still need to resort the bash script.",
			"disapproval": false,
			"date": "2012-05-22 18:08:43.928876",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Aug 10, 2012 at 9:32 AM, <alex.brainman@gmail.com> wrote:\r\n\r\n> On 2012/05/22 18:08:43, minux wrote:\r\n>\r\n>  My plan is ...\r\n>>\r\n>\r\n> If you want to finish with your plan, I will review it again.\r\n>\r\nthanks. the problem is doc/progs/go1.go lists files under the current\r\ndirectory,\r\nit think this can't be tested with strict byte-by-byte comparing.\r\n\r\nshould we just ignore it on Windows?\r\n",
			"disapproval": false,
			"date": "2012-08-10 01:56:46.251890",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/05/22 18:08:43, minux wrote:\n> \n> My plan is ...\n\nIf you want to finish with your plan, I will review it again.\n\nAlex",
			"disapproval": false,
			"date": "2012-08-10 01:32:41.914150",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Aug 10, 2012 at 12:40 PM, minux <minux.ma@gmail.com> wrote:\r\n\r\n> http://codereview.appspot.com/**6218048/diff/16001/doc/progs/**\r\n>> go1.go#newcode2<http://codereview.appspot.com/6218048/diff/16001/doc/progs/go1.go#newcode2>\r\n>> doc/progs/go1.go:2: // this file will output a list of filenames in cwd,\r\n>> not suitable for cmpout\r\n>> Your previous version (with cmpout) did work, if doc/progs is current\r\n>> directory. Could you remind me, please, why we could not change\r\n>> directory before we run run.go?\r\n>>\r\n> the reason is it depends on filepath.Walk traversal order, and what's more,\r\n> there could be other files (like *.orig) in doc/progs.\r\n>\r\nupdate: filepath.Walk uses lexical ordering during traversal. but the other\r\nreason\r\nstill applies.\r\n",
			"disapproval": false,
			"date": "2012-08-10 04:48:16.847120",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-08-10 03:33:00.259230",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "You didn't change run.bash. It is still calling $GOROOT/doc/progs/run. Shouldn't both run,bash and run.bat do the same things?\n\nAlex\n\nhttp://codereview.appspot.com/6218048/diff/16001/doc/progs/go1.go\nFile doc/progs/go1.go (right):\n\nhttp://codereview.appspot.com/6218048/diff/16001/doc/progs/go1.go#newcode2\ndoc/progs/go1.go:2: // this file will output a list of filenames in cwd, not suitable for cmpout\nI am not saying lets do it, but maybe we could allow for regex matches.\n\nhttp://codereview.appspot.com/6218048/diff/16001/doc/progs/go1.go#newcode2\ndoc/progs/go1.go:2: // this file will output a list of filenames in cwd, not suitable for cmpout\nYour previous version (with cmpout) did work, if doc/progs is current directory. Could you remind me, please, why we could not change directory before we run run.go?\n\nhttp://codereview.appspot.com/6218048/diff/16001/src/run.bat\nFile src/run.bat (right):\n\nhttp://codereview.appspot.com/6218048/diff/16001/src/run.bat#newcode78\nsrc/run.bat:78: echo.\nPerhaps you could also build programs in ..\\doc\\codewalk like run.bash does.",
			"disapproval": false,
			"date": "2012-08-10 04:20:05.640310",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nBut wait for a day or two before submitting.\n\nPlease, put a TODO in run.bat to remember to resolve issue with go1.go and cgo?.* and change run.bash to use same \"go run run.go ...\" command.\n\nThank you.\n\nAlex",
			"disapproval": false,
			"date": "2012-08-10 04:59:45.734480",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Aug 10, 2012 at 12:20 PM, <alex.brainman@gmail.com> wrote:\r\n\r\n> You didn't change run.bash. It is still calling $GOROOT/doc/progs/run.\r\n> Shouldn't both run,bash and run.bat do the same things?\r\n>\r\ngo1.go and cgo[1-4].go still need to be tested by run.bash\r\n\r\n>\r\n> http://codereview.appspot.com/**6218048/diff/16001/doc/progs/**\r\n> go1.go#newcode2<http://codereview.appspot.com/6218048/diff/16001/doc/progs/go1.go#newcode2>\r\n> doc/progs/go1.go:2: // this file will output a list of filenames in cwd,\r\n> not suitable for cmpout\r\n> Your previous version (with cmpout) did work, if doc/progs is current\r\n> directory. Could you remind me, please, why we could not change\r\n> directory before we run run.go?\r\n>\r\nthe reason is it depends on filepath.Walk traversal order, and what's more,\r\nthere could be other files (like *.orig) in doc/progs.\r\n\r\n>\r\n> http://codereview.appspot.com/**6218048/diff/16001/src/run.**bat#newcode78<http://codereview.appspot.com/6218048/diff/16001/src/run.bat#newcode78>\r\n> src/run.bat:78: echo.\r\n> Perhaps you could also build programs in ..\\doc\\codewalk like run.bash\r\n>\r\nalso in this CL? i think this CL is only for doc/progs.\r\n\r\nwill add that in another CL.\r\n",
			"disapproval": false,
			"date": "2012-08-10 04:40:49.920190",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but you need a change to run.bash",
			"disapproval": false,
			"date": "2012-08-30 14:43:17.708000",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/30 14:43:17, rsc wrote:\n> ... but you need a change to run.bash\nrun.go can't test cgo*.go and go1.go now\ncan we just add\ngo run %GOROOT%/test/run.go - ../doc/progs\nto run.bash without deleting the existing call to\n../doc/prog.run?",
			"disapproval": false,
			"date": "2012-09-01 08:16:02.918190",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Sep 1, 2012 at 4:16 AM,  <minux.ma@gmail.com> wrote:\r\n> On 2012/08/30 14:43:17, rsc wrote:\r\n>>\r\n>> ... but you need a change to run.bash\r\n>\r\n> run.go can't test cgo*.go and go1.go now\r\n> can we just add\r\n> go run %GOROOT%/test/run.go - ../doc/progs\r\n> to run.bash without deleting the existing call to\r\n> ../doc/prog.run?\r\n\r\nI guess so, but I would rather keep run.bat and run.bash in sync. It\r\nsounds like you are saying that even after this CL the Windows build\r\nis missing some tests that happen in the Unix build?\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-09-01 13:56:00.277230",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Sep 1, 2012 at 9:55 PM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> I guess so, but I would rather keep run.bat and run.bash in sync. It\r\n> sounds like you are saying that even after this CL the Windows build\r\n> is missing some tests that happen in the Unix build?\r\n>\r\ncgo[1-4].go can only be tested on cgo enabled (and not FreeBSD)\r\nbuilds, our run.go doesn't support conditional testing.\r\ngo1.go will output filenames in the current directory, so this can'be\r\ntested by \"cmpout\"/\"run\", so i can only \"compile\" this file (unless run.go\r\nsupports regexp matching for cmpout)\r\n",
			"disapproval": false,
			"date": "2012-09-01 14:04:14.323450",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ok\r\n",
			"disapproval": false,
			"date": "2012-09-01 14:22:44.739400",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2323dc1ecb83 ***\n\ndoc/progs: use test/run.go for testing on Windows\n        cgo[1-4].go, go1.go couldn't be tested now\n(cgo[1-4].go can only be tested when cgo is enabled, go1.go\ncontain a list of filenames in the current directory)\n\nR=golang-dev, alex.brainman, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6218048",
			"disapproval": false,
			"date": "2012-09-02 19:50:12.073510",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6218048: doc/progs: use test/run.go for testing",
	"created": "2012-05-18 12:22:51.675610",
	"patchsets": [
		1,
		2001,
		4001,
		7001,
		7053,
		12001,
		14001,
		14002,
		16001,
		22001,
		28002,
		34001,
		36001
	],
	"modified": "2012-09-02 19:50:21.395750",
	"closed": true,
	"issue": 6218048
}