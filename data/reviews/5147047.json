{
	"description": "syscall: adjust Mount to accomodate stricter FS implementations.\n\nNotably, the \"data\" argument should be nil if no options are\ngiven, or (at least) the cgroup filesystem will refuse to\nmount.",
	"cc": [
		"bradfitz@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"fullung@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nLeaving for Brad.\n",
			"disapproval": false,
			"date": "2011-09-29 18:14:32.774360",
			"approval": true
		},
		{
			"sender": "danderson@google.com",
			"recipients": [
				"danderson@google.com",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "I've only run mkall.sh on 386 because that's all I have on hand right now. I can boot a 64-bit VM for amd64 if you don't have such a system handy. I'm also happy to run mkall.sh for arm if you have docs somewhere on how to get qemu to cooperate.",
			"disapproval": false,
			"date": "2011-09-29 07:14:31.815837",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I can test on amd64 but I don't like all the other unrelated changes in this\nCL.\n\nWhat distro/version/kernel/libc did you re-generate from?\n\n\nOn Thu, Sep 29, 2011 at 12:14 AM, <danderson@google.com> wrote:\n\n> Reviewers: bradfitz,\n>\n> Message:\n> I've only run mkall.sh on 386 because that's all I have on hand right\n> now. I can boot a 64-bit VM for amd64 if you don't have such a system\n> handy. I'm also happy to run mkall.sh for arm if you have docs somewhere\n> on how to get qemu to cooperate.\n>\n> Description:\n> syscall: adjust Mount to accomodate stricter FS implementations.\n>\n> Notably, the \"data\" argument should be nil if no options are\n> given, or (at least) the cgroup filesystem will refuse to\n> mount.\n>\n> Please review this at http://codereview.appspot.com/**5147047/<http://codereview.appspot.com/5147047/>\n>\n> Affected files:\n>  M src/pkg/syscall/syscall_linux.**go\n>  M src/pkg/syscall/zerrors_linux_**386.go\n>  M src/pkg/syscall/zsyscall_**linux_386.go\n>  M src/pkg/syscall/zsysnum_linux_**386.go\n>  M src/pkg/syscall/ztypes_linux_**386.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-09-29 07:21:36.551463",
			"approval": false
		},
		{
			"sender": "danderson@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Sep 29, 2011 at 00:21, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n\n> I can test on amd64 but I don't like all the other unrelated changes in\n> this CL.\n\n\nI looked over the unrelated changes, and they all seemed to be improvements\nin some way (adding new protocols to enums, filling in a previously unknown\nerrno string...). I suspect that this extra diff is because Google\nworkstations run the LTS ubuntu, whereas my home machine runs the latest\nstable.\n\n\n>\n> What distro/version/kernel/libc did you re-generate from?\n>\n\nDistro: Ubuntu 11.04\nKernel: 3.0.0-0300-generic\nlibc: eglibc 2.13-0ubuntu13\n\nHappy to submit to whatever software versions you prefer, although my own\ninclination is to generate on more recent systems if possible, as long as\nthe changes are only additions, not incompatible modifications. That said, I\nunderstand the reluctance to throw in unrelated noise, I can revert changes\nnot connected with Mount if you'd like.\n\n- Dave\n\n\n>\n> On Thu, Sep 29, 2011 at 12:14 AM, <danderson@google.com> wrote:\n>\n>> Reviewers: bradfitz,\n>>\n>> Message:\n>> I've only run mkall.sh on 386 because that's all I have on hand right\n>> now. I can boot a 64-bit VM for amd64 if you don't have such a system\n>> handy. I'm also happy to run mkall.sh for arm if you have docs somewhere\n>> on how to get qemu to cooperate.\n>>\n>> Description:\n>> syscall: adjust Mount to accomodate stricter FS implementations.\n>>\n>> Notably, the \"data\" argument should be nil if no options are\n>> given, or (at least) the cgroup filesystem will refuse to\n>> mount.\n>>\n>> Please review this at http://codereview.appspot.com/**5147047/<http://codereview.appspot.com/5147047/>\n>>\n>> Affected files:\n>>  M src/pkg/syscall/syscall_linux.**go\n>>  M src/pkg/syscall/zerrors_linux_**386.go\n>>  M src/pkg/syscall/zsyscall_**linux_386.go\n>>  M src/pkg/syscall/zsysnum_linux_**386.go\n>>  M src/pkg/syscall/ztypes_linux_**386.go\n>>\n>>\n>>\n>\n",
			"disapproval": false,
			"date": "2011-09-29 07:27:53.257514",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Yes, the changes to O_FSYNC etc are especially troubling.\nCan you please generate these on a stock\nUbuntu 10.10 or 11.04 system?  If not, please remove the\ngenerated files from the CL and we can take care of\nregenerating them.\n\nThanks.\nRuss\n",
			"disapproval": false,
			"date": "2011-09-29 13:05:45.018887",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I tried regenerating on my stock 11.04 ubuntu machine\nand it still changed O_FSYNC, which I'm very scared of.\nIf you don't mind, please just revert the changes in\nthe z files that are unrelated to Mount.\n\nThanks.\nRuss\n",
			"disapproval": false,
			"date": "2011-09-29 14:13:23.201905",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Did it change O_FSYNC to a correct or incorrect value?\n\n\nOn Thu, Sep 29, 2011 at 7:13 AM, Russ Cox <rsc@golang.org> wrote:\n\n> I tried regenerating on my stock 11.04 ubuntu machine\n> and it still changed O_FSYNC, which I'm very scared of.\n> If you don't mind, please just revert the changes in\n> the z files that are unrelated to Mount.\n>\n> Thanks.\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-09-29 17:58:24.897196",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Sep 29, 2011 at 10:58, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n\n> Did it change O_FSYNC to a correct or incorrect value?\n\n\nIt changed it to a value with 2 bits set (!).\nIt's irrelevant to this CL, whether it's correct\nor not.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-09-29 18:02:37.142105",
			"approval": false
		},
		{
			"sender": "danderson@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "The new O_FSYNC flips an extra high order bit in the flags. The same bit\ngets flipped for O_SYNC and O_RSYNC. So, AFAICT, the change is backwards\ncompatible, in the sense that a kernel masking the old O_FSYNC in the flag\nfield would still work. I'll grep through kernel/libc changes to find where\nthis happened, there may be some wisdom attached to the change.\n\nThat said, it's clearly unrelated noise, and while it may be worth updating\nz* in a future CL, I'll revert changes not related to Mount.\n\n- Dave\n\nOn Thu, Sep 29, 2011 at 10:58, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n\n> Did it change O_FSYNC to a correct or incorrect value?\n>\n>\n>\n> On Thu, Sep 29, 2011 at 7:13 AM, Russ Cox <rsc@golang.org> wrote:\n>\n>> I tried regenerating on my stock 11.04 ubuntu machine\n>> and it still changed O_FSYNC, which I'm very scared of.\n>> If you don't mind, please just revert the changes in\n>> the z files that are unrelated to Mount.\n>>\n>> Thanks.\n>> Russ\n>>\n>\n>\n",
			"disapproval": false,
			"date": "2011-09-29 18:04:27.816227",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Fails to build on amd64.\n\nINSTALL FAIL syscall\nmake[1]: Entering directory\n`/usr/local/google/home/bradfitz/go/src/pkg/syscall'\n6g  -p syscall -o _go_.6 str.go syscall.go syscall_amd64.go syscall_linux.go\nsyscall_linux_amd64.go zerrors_linux_amd64.go zsyscall_linux_amd64.go\nzsysnum_linux_amd64.go ztypes_linux_amd64.go  exec_unix.go lsf_linux.go\nnetlink_linux.go sockcmsg_linux.go sockcmsg_unix.go syscall_unix.go\n6a asm_linux_amd64.s\nsyscall_linux.go:753: undefined: mount\nsyscall_linux.go:755: undefined: mount\nzsyscall_linux_amd64.go:467: Mount redeclared in this block\n        previous declaration at syscall_linux.go:749\nmake[1]: *** [_go_.6] Error 1\nmake[1]: Leaving directory\n`/usr/local/google/home/bradfitz/go/src/pkg/syscall'\nmake: *** [syscall.install] Error 1\nmake: *** Waiting for unfinished jobs....\nmake: Leaving directory `/usr/local/google/home/bradfitz/go/src/pkg'\n\n\n\n\nOn Thu, Sep 29, 2011 at 11:14 AM, Russ Cox <rsc@golang.org> wrote:\n\n> LGTM\n>\n> Leaving for Brad.\n>\n>\n",
			"disapproval": false,
			"date": "2011-09-29 18:23:53.400567",
			"approval": false
		},
		{
			"sender": "danderson@google.com",
			"recipients": [
				"danderson@google.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "As I said in the initial mail, I only had access to a 386 machine at the time, so I could only mkall.sh to rebuild zsyscall for 386.\n\nNow that I'm at work, I've regenerated the amd64 files as well. CL updated with the amd64 generated code.\n\nI still don't have access to an ARM system, but if you can point me to docs on how to get mkall to work with qemu, I can also regenerate zsyscall_linux_arm.\n\nOn 2011/09/29 18:23:53, bradfitz wrote:\n> Fails to build on amd64.\n> \n> INSTALL FAIL syscall\n> make[1]: Entering directory\n> `/usr/local/google/home/bradfitz/go/src/pkg/syscall'\n> 6g  -p syscall -o _go_.6 str.go syscall.go syscall_amd64.go syscall_linux.go\n> syscall_linux_amd64.go zerrors_linux_amd64.go zsyscall_linux_amd64.go\n> zsysnum_linux_amd64.go ztypes_linux_amd64.go  exec_unix.go lsf_linux.go\n> netlink_linux.go sockcmsg_linux.go sockcmsg_unix.go syscall_unix.go\n> 6a asm_linux_amd64.s\n> syscall_linux.go:753: undefined: mount\n> syscall_linux.go:755: undefined: mount\n> zsyscall_linux_amd64.go:467: Mount redeclared in this block\n>         previous declaration at syscall_linux.go:749\n> make[1]: *** [_go_.6] Error 1\n> make[1]: Leaving directory\n> `/usr/local/google/home/bradfitz/go/src/pkg/syscall'\n> make: *** [syscall.install] Error 1\n> make: *** Waiting for unfinished jobs....\n> make: Leaving directory `/usr/local/google/home/bradfitz/go/src/pkg'\n> \n> \n> \n> \n> On Thu, Sep 29, 2011 at 11:14 AM, Russ Cox <mailto:rsc@golang.org> wrote:\n> \n> > LGTM\n> >\n> > Leaving for Brad.\n> >\n> >",
			"disapproval": false,
			"date": "2011-09-29 20:31:16.138689",
			"approval": false
		},
		{
			"sender": "danderson@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Reverted. Only zsyscall_linux_*.go is relevant to the Mount change. mkall\nintroduced a few new mount flags on 11.04, but they're not critical and can\nwait until a more general refresh of z*.\n\nWould you like me to prepare a separate CL that regenerates z* on a stock\n11.04, assuming I can track down the scary flag changes to something\nacceptable?\n\n- Dave\n\nOn Thu, Sep 29, 2011 at 11:04, David Anderson <danderson@google.com> wrote:\n\n> The new O_FSYNC flips an extra high order bit in the flags. The same bit\n> gets flipped for O_SYNC and O_RSYNC. So, AFAICT, the change is backwards\n> compatible, in the sense that a kernel masking the old O_FSYNC in the flag\n> field would still work. I'll grep through kernel/libc changes to find where\n> this happened, there may be some wisdom attached to the change.\n>\n> That said, it's clearly unrelated noise, and while it may be worth updating\n> z* in a future CL, I'll revert changes not related to Mount.\n>\n> - Dave\n>\n>  On Thu, Sep 29, 2011 at 10:58, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n>\n>> Did it change O_FSYNC to a correct or incorrect value?\n>>\n>>\n>>\n>> On Thu, Sep 29, 2011 at 7:13 AM, Russ Cox <rsc@golang.org> wrote:\n>>\n>>> I tried regenerating on my stock 11.04 ubuntu machine\n>>> and it still changed O_FSYNC, which I'm very scared of.\n>>> If you don't mind, please just revert the changes in\n>>> the z files that are unrelated to Mount.\n>>>\n>>> Thanks.\n>>> Russ\n>>>\n>>\n>>\n>\n",
			"disapproval": false,
			"date": "2011-09-29 18:10:32.873808",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"danderson@google.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "I emailed you details on how to ssh into a Debian ARM box.",
			"disapproval": false,
			"date": "2011-09-30 06:59:28.012148",
			"approval": false
		},
		{
			"sender": "danderson@google.com",
			"recipients": [
				"danderson@google.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/30 06:59:28, bradfitz wrote:\n> I emailed you details on how to ssh into a Debian ARM box.\n\nApologies for the long delay. I've regenerated zsyscall_linux_arm.go and tested that it builds correctly on the arm box. PTAL.",
			"disapproval": false,
			"date": "2011-10-14 03:42:05.067548",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM with latest arm + previous amd64 update.\n\nOn Thu, Sep 29, 2011 at 12:14 AM, <danderson@google.com> wrote:\n\n> Reviewers: bradfitz,\n>\n> Message:\n> I've only run mkall.sh on 386 because that's all I have on hand right\n> now. I can boot a 64-bit VM for amd64 if you don't have such a system\n> handy. I'm also happy to run mkall.sh for arm if you have docs somewhere\n> on how to get qemu to cooperate.\n>\n> Description:\n> syscall: adjust Mount to accomodate stricter FS implementations.\n>\n> Notably, the \"data\" argument should be nil if no options are\n> given, or (at least) the cgroup filesystem will refuse to\n> mount.\n>\n> Please review this at http://codereview.appspot.com/**5147047/<http://codereview.appspot.com/5147047/>\n>\n> Affected files:\n>  M src/pkg/syscall/syscall_linux.**go\n>  M src/pkg/syscall/zerrors_linux_**386.go\n>  M src/pkg/syscall/zsyscall_**linux_386.go\n>  M src/pkg/syscall/zsysnum_linux_**386.go\n>  M src/pkg/syscall/ztypes_linux_**386.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-10-14 16:19:15.171989",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"danderson@google.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=89266ada32fb ***\n\nsyscall: adjust Mount to accomodate stricter FS implementations.\n\nNotably, the \"data\" argument should be nil if no options are\ngiven, or (at least) the cgroup filesystem will refuse to\nmount.\n\nR=bradfitz, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5147047\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2011-10-14 16:19:26.208153",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"danderson@google.com",
				"fullung@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello\n\nOn 2011/10/14 16:19:26, bradfitz wrote:\n> *** Submitted as http://code.google.com/p/go/source/detail?r=89266ada32fb ***\n> syscall: adjust Mount to accomodate stricter FS implementations.\n> Notably, the \"data\" argument should be nil if no options are\n> given, or (at least) the cgroup filesystem will refuse to\n> mount.\n> R=bradfitz, rsc\n> CC=golang-dev\n> http://codereview.appspot.com/5147047\n> Committer: Brad Fitzpatrick <mailto:bradfitz@golang.org>\n\nI just noticed that this change changed the type of the flags parameter to Mount from int to uint32 and broke some of our code in the process.\n\nWas this intentional? Most other system calls that take a flags parameter have it as an int.\n\nRegards\n\nAlbert",
			"disapproval": false,
			"date": "2011-10-19 12:35:01.494160",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Sorry, no, I hadn't noticed that.  Thanks for pointing it out.\n\nDave, you have a strong reason for making it uint32?\n\n\nOn Wed, Oct 19, 2011 at 5:35 AM, <fullung@gmail.com> wrote:\n\n> Hello\n>\n>\n> On 2011/10/14 16:19:26, bradfitz wrote:\n>\n>> *** Submitted as\n>>\n> http://code.google.com/p/go/**source/detail?r=89266ada32fb<http://code.google.com/p/go/source/detail?r=89266ada32fb>***\n>\n>> syscall: adjust Mount to accomodate stricter FS implementations.\n>> Notably, the \"data\" argument should be nil if no options are\n>> given, or (at least) the cgroup filesystem will refuse to\n>> mount.\n>> R=bradfitz, rsc\n>> CC=golang-dev\n>> http://codereview.appspot.com/**5147047<http://codereview.appspot.com/5147047>\n>> Committer: Brad Fitzpatrick <mailto:bradfitz@golang.org>\n>>\n>\n> I just noticed that this change changed the type of the flags parameter\n> to Mount from int to uint32 and broke some of our code in the process.\n>\n> Was this intentional? Most other system calls that take a flags\n> parameter have it as an int.\n>\n> Regards\n>\n> Albert\n>\n> http://codereview.appspot.com/**5147047/<http://codereview.appspot.com/5147047/>\n>\n",
			"disapproval": false,
			"date": "2011-10-19 15:39:30.309980",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "It should probably be uintptr.\n",
			"disapproval": false,
			"date": "2011-10-19 19:01:23.543657",
			"approval": false
		},
		{
			"sender": "danderson@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Oct 19, 2011 at 08:39, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n\n> Sorry, no, I hadn't noticed that.  Thanks for pointing it out.\n>\n> Dave, you have a strong reason for making it uint32?\n>\n\nAs I recall, mount(2) expects to have at least 32 bits of flags to play\nwith, and the int type only offers 31 bits. So with the declaration using\nint, certain flags cannot be passed as they overflow the int type.\n\nAlternatively it could be declared as uint to stick to the definition of\nmount(2) more closely. In hindsight I probably should have done that, sorry.\nDefinitely needs to be unsigned though.\n\n- Dave\n\n\n>\n>\n> On Wed, Oct 19, 2011 at 5:35 AM, <fullung@gmail.com> wrote:\n>\n>> Hello\n>>\n>>\n>> On 2011/10/14 16:19:26, bradfitz wrote:\n>>\n>>> *** Submitted as\n>>>\n>> http://code.google.com/p/go/**source/detail?r=89266ada32fb<http://code.google.com/p/go/source/detail?r=89266ada32fb>***\n>>\n>>> syscall: adjust Mount to accomodate stricter FS implementations.\n>>> Notably, the \"data\" argument should be nil if no options are\n>>> given, or (at least) the cgroup filesystem will refuse to\n>>> mount.\n>>> R=bradfitz, rsc\n>>> CC=golang-dev\n>>> http://codereview.appspot.com/**5147047<http://codereview.appspot.com/5147047>\n>>> Committer: Brad Fitzpatrick <mailto:bradfitz@golang.org>\n>>>\n>>\n>> I just noticed that this change changed the type of the flags parameter\n>> to Mount from int to uint32 and broke some of our code in the process.\n>>\n>> Was this intentional? Most other system calls that take a flags\n>> parameter have it as an int.\n>>\n>> Regards\n>>\n>> Albert\n>>\n>> http://codereview.appspot.com/**5147047/<http://codereview.appspot.com/5147047/>\n>>\n>\n>\n",
			"disapproval": false,
			"date": "2011-10-19 18:30:38.194565",
			"approval": false
		},
		{
			"sender": "danderson@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Would also make sense. I'll compose a CL to make that change.\n\nOn Wed, Oct 19, 2011 at 12:01, Russ Cox <rsc@golang.org> wrote:\n\n> It should probably be uintptr.\n>\n",
			"disapproval": false,
			"date": "2011-10-19 19:08:29.734614",
			"approval": false
		}
	],
	"owner_email": "danderson@google.com",
	"private": false,
	"base_url": "",
	"owner": "danderson",
	"subject": "syscall: adjust Mount to accomodate stricter FS impleme...",
	"created": "2011-09-29 07:02:21.073596",
	"patchsets": [
		1,
		1002,
		11002,
		14001,
		17001
	],
	"modified": "2011-10-19 19:08:29.734614",
	"closed": false,
	"issue": 5147047
}