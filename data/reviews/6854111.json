{
	"description": "exp/cookiejar: add built-in list of known public suffixes\n\nThe list is generated from the list of known public suffixes\nmaintained on http://publicsuffix.org/.\n\nUpdate issue 1960.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"nigeltao@golang.org",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"dr.volker.dobler@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to \nhttps://code.google.com/p/go \n\nDescription: \n\nexp/cookiejar: add built-in list of known public suffixes\n\nThe list is generated from the list of known public suffixes\nmaintained on http://publicsuffix.org/.\n\nUpdate issue 1960.\n\nPlease review this at http://codereview.appspot.com/6854111/ \n\nAffected files: \n  A src/pkg/exp/cookiejar/maketable.go\n  A src/pkg/exp/cookiejar/publicsuffixes.go\n  A src/pkg/exp/cookiejar/publicsuffixes_test.go\n  A src/pkg/exp/cookiejar/table.go",
			"disapproval": false,
			"date": "2012-11-28 08:46:13.449410",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "A few general comments:\n\nI'd prefer it to be in a separate package (say, exp/publicsuffix). If I want to use the cookiejar package but not this particular list, then the compiler needn't have to consider all this data.\n\nThe pslistId shouldn't be based on time.Now. If I regenerate the package tomorrow but from the same effective_tld_names.dat file then I shouldn't need to update any stored cookie jars. Also, the time.Now of when you generated that package doesn't give me enough information to recreate your work. As this file is under version control, it should really be a version number (or whatever the git/hg/svn equivalent is).\n\nYou're creating a lot of small, heap-allocated nodes that will need to be walked on every garbage collection pass. This is static data, it should be possible to encode the entire tree as a (.rodata) string, which should also cut the memory footprint: each of these short strings could be 4 bytes + content (1 byte length + 3 bytes offset into something like atomText in exp/html/atom/table.go) instead of 16 bytes + content (8 bytes pointer, 8 bytes length). Some thought will be required on how to design the data structure...",
			"disapproval": false,
			"date": "2012-11-29 05:10:47.679730",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "One thing you could do is just turn the publicsuffix list into a\r\nsimple sorted list of reversed strings. There's no fancy data\r\nstructure needed, really.\r\nhttp://play.golang.org/p/p-fXOtYpId shows how it might work (only a\r\nfragment of the list).\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-11-29 17:24:35.095520",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I'd prefer it to be in a separate package (say, exp/publicsuffix).\r\n\r\nNo problem\r\n\r\n\r\n> The pslistId shouldn't be based on time.Now. If I regenerate the package\r\n> tomorrow but from the same effective_tld_names.dat file then I shouldn't\r\n> need to update any stored cookie jars. Also, the time.Now of when you\r\n> generated that package doesn't give me enough information to recreate\r\n> your work. As this file is under version control, it should really be a\r\n> version number (or whatever the git/hg/svn equivalent is).\r\n>\r\nSo: check in raw effective_tld_names.dat file too. Version numbers as\r\npart of the content is always difficult with hg.\r\n\r\nYou're creating a lot of small, heap-allocated nodes that will need to\r\n> be walked on every garbage collection pass. This is static data, it\r\n> should be possible to encode the entire tree as a (.rodata) string,\r\n> which should also cut the memory footprint: each of these short strings\r\n> could be 4 bytes + content (1 byte length + 3 bytes offset into\r\n> something like atomText in exp/html/atom/table.go) instead of 16 bytes +\r\n> content (8 bytes pointer, 8 bytes length). Some thought will be required\r\n> on how to design the data structure...\r\n>\r\nNo problem. A real memory-footprint minimized data structure which is\r\noptimized for this kind of retrieval will take some time. Review might\r\nbe not so easy too...\r\n\r\nI'll abandon this CL once I got an optimized version working.\r\n\r\nVolker\r\n\r\n\r\n>\r\n> https://codereview.appspot.**com/6854111/<https://codereview.appspot.com/6854111/>\r\n>\r\n\r\n\r\n\r\n-- \r\nDr. Volker Dobler\r\n",
			"disapproval": false,
			"date": "2012-11-29 08:44:44.073980",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-12-03 23:44:43.349200",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-12-03 23:57:47.107890",
			"approval": false
		}
	],
	"owner_email": "dr.volker.dobler@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "volker.dobler",
	"subject": "exp/cookiejar: add built-in list of known public suffixes",
	"created": "2012-11-28 08:35:31.271510",
	"patchsets": [
		1,
		2001,
		4005
	],
	"modified": "2012-12-03 23:57:47.323440",
	"closed": true,
	"issue": 6854111
}