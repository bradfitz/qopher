{
	"description": "pkg/runtime: Plan 9, 64-bit: Mask all SSE floating-point exceptions\n\nThe Go run-time assumes that all SSE floating-point exceptions\nare masked so that Go programs are not broken by such invalid\noperations. By default, the 64-bit version of the Plan 9 kernel\nmasks only some SSE floating-point exceptions. Here, we mask\nthem all on a per-thread basis.",
	"cc": [
		"rsc@golang.org",
		"rminnich@gmail.com",
		"minux.ma@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Uploaded the declaration in os_plan9.h as well.\r\nForgot to include that in the first round.\r\n\r\nOn 1 October 2012 22:33,  <seed@mail.nanosouffle.net> wrote:\r\n> Reviewers: rsc, rminnich,\r\n>\r\n> Message:\r\n> Hello rsc@golang.org, rminnich@gmail.com (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> pkg/runtime: Plan 9, 64-bit: Mask all SSE floating-point exceptions\r\n>\r\n> The Go run-time assumes that all SSE floating-point exceptions\r\n> are masked so that Go programs are not broken by such invalid\r\n> operations. By default, the 64-bit version of the Plan 9 kernel\r\n> masks only some SSE floating-point exceptions. Here, we mask\r\n> them all on a per-thread basis.\r\n>\r\n> Please review this at http://codereview.appspot.com/6592056/\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/sys_plan9_386.s\r\n>   M src/pkg/runtime/sys_plan9_amd64.s\r\n>   M src/pkg/runtime/thread_plan9.c\r\n>\r\n>\r\n> Index: src/pkg/runtime/sys_plan9_386.s\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/sys_plan9_386.s\r\n> +++ b/src/pkg/runtime/sys_plan9_386.s\r\n> @@ -110,3 +110,7 @@\r\n>         CALL    SI      // fn()\r\n>         CALL    runtime\u00b7exit(SB)\r\n>         RET\r\n> +\r\n> +// Only used by the 64-bit runtime.\r\n> +TEXT runtime\u00b7SetFPControl(SB),7,$0\r\n> +       RET\r\n> Index: src/pkg/runtime/sys_plan9_amd64.s\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/sys_plan9_amd64.s\r\n> +++ b/src/pkg/runtime/sys_plan9_amd64.s\r\n> @@ -121,3 +121,9 @@\r\n>  // This is needed by asm_amd64.s\r\n>  TEXT runtime\u00b7settls(SB),7,$0\r\n>         RET\r\n> +\r\n> +TEXT runtime\u00b7SetFPControl(SB),7,$8\r\n> +       MOVQ    p+0(FP), AX\r\n> +       MOVQ    AX, 0(SP)\r\n> +       CALL    math\u00b7SetFPControl(SB)\r\n> +       RET\r\n> Index: src/pkg/runtime/thread_plan9.c\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/thread_plan9.c\r\n> +++ b/src/pkg/runtime/thread_plan9.c\r\n> @@ -14,6 +14,9 @@\r\n>  void\r\n>  runtime\u00b7minit(void)\r\n>  {\r\n> +       // Mask all SSE floating-point exceptions\r\n> +       // when running on the 64-bit kernel.\r\n> +       runtime\u00b7SetFPControl(0);\r\n>  }\r\n>\r\n>  static int32\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-02 05:42:50.541580",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, rminnich@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-10-02 05:33:00.276280",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\n\nOn 2012/10/02 05:43:40, minux wrote:\n> does 6l automatically link in the math package for this to work?\n\nDone.",
			"disapproval": false,
			"date": "2012-10-02 06:24:42.417130",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "does 6l automatically link in the math package for this to work?\r\n",
			"disapproval": false,
			"date": "2012-10-02 05:43:40.369120",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ah, no, not by default. It doesn't hurt to duplicate this\r\nin pkg/runtime anyways. Will update.\r\n\r\n\r\nThanks\r\n\r\nOn 1 October 2012 22:43, minux <minux.ma@gmail.com> wrote:\r\n> does 6l automatically link in the math package for this to work?\r\n",
			"disapproval": false,
			"date": "2012-10-02 06:08:36.283080",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nPlease omit pkg/ in CL descriptions. I'll fix this as I submit it.",
			"disapproval": false,
			"date": "2012-10-05 20:19:14.538570",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=23ceb3cf4401 ***\n\nruntime: mask SSE exceptions on plan9/amd64\n\nThe Go run-time assumes that all SSE floating-point exceptions\nare masked so that Go programs are not broken by such invalid\noperations. By default, the 64-bit version of the Plan 9 kernel\nmasks only some SSE floating-point exceptions. Here, we mask\nthem all on a per-thread basis.\n\nR=rsc, rminnich, minux.ma\nCC=golang-dev\nhttp://codereview.appspot.com/6592056\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-10-05 20:30:02.177340",
			"approval": false
		}
	],
	"owner_email": "seed@mail.nanosouffle.net",
	"private": false,
	"base_url": "",
	"owner": "akumar",
	"subject": "code review 6592056: pkg/runtime: Plan 9, 64-bit: Mask all SSE floating-poin...",
	"created": "2012-10-02 05:30:41.314980",
	"patchsets": [
		1,
		2001,
		1002,
		4005,
		7004
	],
	"modified": "2012-10-05 23:07:06.380610",
	"closed": true,
	"issue": 6592056
}