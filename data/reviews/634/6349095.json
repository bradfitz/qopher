{
	"description": "spec: improve example explanation on \"Constant expressions\"\n\nFixes issue 3814.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"gri@golang.org",
		"golang-dev@googlegroups.com",
		"go.peter.90@gmail.com"
	],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "s/uint8/int8/ of course (in my prev. mail)\r\n\r\n\r\nOn Thu, Jul 12, 2012 at 5:17 PM, <gri@golang.org> wrote:\r\n\r\n> Please abandon this CL.\r\n>\r\n>\r\n> http://codereview.appspot.com/**6349095/diff/9001/doc/go_spec.**html<http://codereview.appspot.com/6349095/diff/9001/doc/go_spec.html>\r\n> File doc/go_spec.html (right):\r\n>\r\n> http://codereview.appspot.com/**6349095/diff/9001/doc/go_spec.**\r\n> html#newcode3657<http://codereview.appspot.com/6349095/diff/9001/doc/go_spec.html#newcode3657>\r\n>\r\n> doc/go_spec.html:3657: Four * 100   // 400 cannot be represented as an\r\n> int8 (although 100 can)\r\n> There is nothing wrong with the spec here: Four is of type uint8, so 100\r\n> must be represented as uint8 (which is possible), and the result 400 as\r\n> well (which is not possible). This is exactly what the comment says. It\r\n> may not match the error message by the compiler, but we used \"cannot be\r\n> represented\" for the other comments rather than \"overflows\" or\r\n> \"underflows.\r\n>\r\n> http://codereview.appspot.com/**6349095/<http://codereview.appspot.com/6349095/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-13 00:18:04.539560",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org, golang-dev@googlegroups.com, go.peter.90@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-07-13 00:07:14.609180",
			"approval": false
		},
		{
			"sender": "go.peter.90@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"go.peter.90@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6349095/diff/5001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/6349095/diff/5001/doc/go_spec.html#newcode3657\ndoc/go_spec.html:3657: Four * 100   // 400 cannot be represented as an int8 (although 100 can)\nWhy? See my comment on issue 3814. Issue 3814 has not been accepted.",
			"disapproval": false,
			"date": "2012-07-12 11:49:46.522300",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-07-11 19:39:05.135740",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"franciscossouza@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please abandon this CL.\n\nhttp://codereview.appspot.com/6349095/diff/9001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/6349095/diff/9001/doc/go_spec.html#newcode3657\ndoc/go_spec.html:3657: Four * 100   // 400 cannot be represented as an int8 (although 100 can)\nThere is nothing wrong with the spec here: Four is of type uint8, so 100 must be represented as uint8 (which is possible), and the result 400 as well (which is not possible). This is exactly what the comment says. It may not match the error message by the compiler, but we used \"cannot be represented\" for the other comments rather than \"overflows\" or \"underflows.",
			"disapproval": false,
			"date": "2012-07-13 00:17:21.689420",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"franciscossouza@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-07-13 01:02:20.500800",
			"approval": false
		}
	],
	"owner_email": "franciscossouza@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "fss",
	"subject": "code review 6349095: spec: improve example explanation on \"Constant expressions\"",
	"created": "2012-07-11 19:38:39.512270",
	"patchsets": [
		1,
		2001,
		5001,
		9001
	],
	"modified": "2012-07-13 01:02:22.167900",
	"closed": true,
	"issue": 6349095
}