{
	"description": "build: add few tests with GOMAXPROCS=32 to run.bash\nSome class of bugs (data races, runtime bugs) can be found\nonly with real parallelism.\nNote that GOMAXPROCS=32 is somewhat different from go test -cpu=32,\nthis intentionally uses GOMAXPROCS to stress program bootstrap,\ntesting code, garbage collections, etc.\nPackage selection is mostly random.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fair enough. That 8c crash has probably paid for this check already. \r\n\r\nOn 04/07/2012, at 20:39, dvyukov@google.com wrote:\r\n\r\n> On 2012/07/04 10:27:34, dfc wrote:\r\n>> Even on tiny machines like arm?\r\n> \r\n>> I think these are useful checks, but do they pay their way on single\r\n> core hosts?\r\n> \r\n> I would prefer them running even on single core machines. OS still\r\n> multiplexes several threads in unpredictable ways. They can reveal bugs\r\n> in arm-specific code, or in common code exactly due to the fact that\r\n> they are single core and so exhibit completely different interleavings\r\n> from multicore machines.\r\n> \r\n> \r\n> http://codereview.appspot.com/6346070/\r\n",
			"disapproval": false,
			"date": "2012-07-04 10:50:07.745660",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-07-04 10:14:17.801930",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "As a proof of usefulness - it currently crashes due to 2 issues:\nhttp://code.google.com/p/go/issues/detail?id=3793\nhttp://code.google.com/p/go/issues/detail?id=3798\nthat was hiding in the tree for some time.",
			"disapproval": false,
			"date": "2012-07-04 10:16:28.133850",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Even on tiny machines like arm? \r\n\r\nI think these are useful checks, but do they pay their way on single core hosts? \r\n\r\nOn 04/07/2012, at 20:16, dvyukov@google.com wrote:\r\n\r\n> As a proof of usefulness - it currently crashes due to 2 issues:\r\n> http://code.google.com/p/go/issues/detail?id=3793\r\n> http://code.google.com/p/go/issues/detail?id=3798\r\n> that was hiding in the tree for some time.\r\n> \r\n> \r\n> http://codereview.appspot.com/6346070/\r\n",
			"disapproval": false,
			"date": "2012-07-04 10:27:34.601640",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yeah.\r\nI am pretty sure I was testing with GOARCH=386 ./all.bash and GOMAXPROCS=X\r\n./all.bash, but not both...\r\n\r\n\r\nOn Wed, Jul 4, 2012 at 2:46 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> Fair enough. That 8c crash has probably paid for this check already.\r\n>\r\n> On 04/07/2012, at 20:39, dvyukov@google.com wrote:\r\n>\r\n> > On 2012/07/04 10:27:34, dfc wrote:\r\n> >> Even on tiny machines like arm?\r\n> >\r\n> >> I think these are useful checks, but do they pay their way on single\r\n> > core hosts?\r\n> >\r\n> > I would prefer them running even on single core machines. OS still\r\n> > multiplexes several threads in unpredictable ways. They can reveal bugs\r\n> > in arm-specific code, or in common code exactly due to the fact that\r\n> > they are single core and so exhibit completely different interleavings\r\n> > from multicore machines.\r\n> >\r\n> >\r\n> > http://codereview.appspot.com/6346070/\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-04 10:52:08.752710",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/07/04 10:27:34, dfc wrote:\n> Even on tiny machines like arm? \n> \n> I think these are useful checks, but do they pay their way on single core hosts?\n\nI would prefer them running even on single core machines. OS still multiplexes several threads in unpredictable ways. They can reveal bugs in arm-specific code, or in common code exactly due to the fact that they are single core and so exhibit completely different interleavings from multicore machines.",
			"disapproval": false,
			"date": "2012-07-04 10:39:26.152840",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-07-14 01:15:58.838170",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=61d1d72136f7 ***\n\nbuild: add few tests with GOMAXPROCS=32 to run.bash\nSome class of bugs (data races, runtime bugs) can be found\nonly with real parallelism.\nNote that GOMAXPROCS=32 is somewhat different from go test -cpu=32,\nthis intentionally uses GOMAXPROCS to stress program bootstrap,\ntesting code, garbage collections, etc.\nPackage selection is mostly random.\n\nR=golang-dev, dave, r\nCC=golang-dev\nhttp://codereview.appspot.com/6346070",
			"disapproval": false,
			"date": "2012-07-14 11:46:59.424080",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6346070: build: add few tests with GOMAXPROCS=32 to run.bash",
	"created": "2012-07-04 10:10:31.113040",
	"patchsets": [
		1,
		1002,
		4001,
		9001
	],
	"modified": "2012-07-14 11:47:00.651800",
	"closed": true,
	"issue": 6346070
}