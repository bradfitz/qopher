{
	"description": "net/http: fix comment",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=329b9e54357f ***\n\nnet/http: fix comment\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6348062",
			"disapproval": false,
			"date": "2012-07-02 16:11:12.220187",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No, but you could easily modify it to make it one.\r\n\r\nOn Mon, Jul 2, 2012 at 9:10 AM, Dmitry Vyukov <dvyukov@google.com> wrote:\r\n\r\n> Hi Brad,\r\n>\r\n> Btw, is there a good concurrent http benchmark? I see that this benchmark\r\n> sends requests from 1 goroutine.\r\n>\r\n>\r\n> On Mon, Jul 2, 2012 at 8:00 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>\r\n>> LGTM\r\n>>\r\n>>\r\n>> On Mon, Jul 2, 2012 at 8:59 AM, <dvyukov@google.com> wrote:\r\n>>\r\n>>> Reviewers: golang-dev_googlegroups.com,\r\n>>>\r\n>>> Message:\r\n>>> Hello golang-dev@googlegroups.com,\r\n>>>\r\n>>> I'd like you to review this change to\r\n>>> https://go.googlecode.com/hg/\r\n>>>\r\n>>>\r\n>>> Description:\r\n>>> net/http: fix comment\r\n>>>\r\n>>> Please review this at http://codereview.appspot.com/**6348062/<http://codereview.appspot.com/6348062/>\r\n>>>\r\n>>> Affected files:\r\n>>>   M src/pkg/net/http/serve_test.go\r\n>>>\r\n>>>\r\n>>> Index: src/pkg/net/http/serve_test.go\r\n>>> ==============================**==============================**=======\r\n>>> --- a/src/pkg/net/http/serve_test.**go\r\n>>> +++ b/src/pkg/net/http/serve_test.**go\r\n>>> @@ -1270,7 +1270,7 @@\r\n>>>  //\r\n>>>  // For use like:\r\n>>>  //   $ go test -c\r\n>>> -//   $ ./http.test -test.run=XX -test.bench=Benchmarktime=15\r\n>>> -test.cpuprofile=http.prof\r\n>>> +//   $ ./http.test -test.run=XX -test.bench=BenchmarkServer\r\n>>> -test.benchtime=15 -test.cpuprofile=http.prof\r\n>>>  //   $ go tool pprof http.test http.prof\r\n>>>  //   (pprof) web\r\n>>>  func BenchmarkServer(b *testing.B) {\r\n>>>\r\n>>>\r\n>>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-02 16:15:21.491694",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Mon, Jul 2, 2012 at 8:59 AM, <dvyukov@google.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> net/http: fix comment\r\n>\r\n> Please review this at http://codereview.appspot.com/**6348062/<http://codereview.appspot.com/6348062/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/http/serve_test.go\r\n>\r\n>\r\n> Index: src/pkg/net/http/serve_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/http/serve_test.**go\r\n> +++ b/src/pkg/net/http/serve_test.**go\r\n> @@ -1270,7 +1270,7 @@\r\n>  //\r\n>  // For use like:\r\n>  //   $ go test -c\r\n> -//   $ ./http.test -test.run=XX -test.bench=Benchmarktime=15\r\n> -test.cpuprofile=http.prof\r\n> +//   $ ./http.test -test.run=XX -test.bench=BenchmarkServer\r\n> -test.benchtime=15 -test.cpuprofile=http.prof\r\n>  //   $ go tool pprof http.test http.prof\r\n>  //   (pprof) web\r\n>  func BenchmarkServer(b *testing.B) {\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-02 16:00:27.394416",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Unfortunately it says:\r\n\r\n$ go test net/http -run=none -bench=ClientServerParallel -benchtime=1\r\n-cpu=16\r\nPASS\r\nBenchmarkClientServerParallel-16 panic: runtime error: send on closed\r\nchannel\r\n\r\ngoroutine 1084 [running]:\r\nruntime.panic(0x653be8, 0xf84010ae40)\r\nsrc/pkg/runtime/proc.c:1259 +0xac\r\nruntime.panicstring(0x816cb9, 0x7f8b05df9a00)\r\nsrc/pkg/runtime/runtime.c:129 +0xa3\r\nruntime.chansend(0x5a7b00, 0xf8402bf800, 0x7f8b05df9a78, 0x0, 0x1000004,\r\n...)\r\nsrc/pkg/runtime/chan.c:260 +0x101\r\nruntime.chansend1(0x5a7b00, 0xf8402bf800, 0xf8401c4c00, 0xf84031ad80)\r\nsrc/pkg/runtime/chan.c:400 +0x2f\r\nnet/http.(*persistConn).roundTrip(0xf84017b5b0, 0xf8401c4c00, 0xf84017b5b0,\r\n0x0, 0x0, ...)\r\nsrc/pkg/net/http/transport.go:689 +0x23a\r\nnet/http.(*Transport).RoundTrip(0xf840097780, 0xf840198540, 0x100000000,\r\n0x0, 0x0, ...)\r\nsrc/pkg/net/http/transport.go:160 +0x32f\r\nnet/http.send(0xf840198540, 0xf8400898d0, 0xf840097780, 0x0, 0x0, ...)\r\nsrc/pkg/net/http/client.go:140 +0x3ca\r\nnet/http.(*Client).doFollowingRedirects(0x81b988, 0xf840198540, 0x0, 0x0,\r\n0x0, ...)\r\nsrc/pkg/net/http/client.go:251 +0x68a\r\nnet/http.(*Client).Get(0x81b988, 0xf8400bc7e0, 0x16, 0x0, 0x0, ...)\r\nsrc/pkg/net/http/client.go:200 +0xb8\r\nnet/http.Get(0xf8400bc7e0, 0x3a00000016, 0x1a, 0x0, 0x0, ...)\r\nsrc/pkg/net/http/client.go:177 +0x51\r\nnet/http_test.func\u00b7069(0xf840000380, 0xf840000030, 0xf8400003f8, 0x0, 0x0,\r\n...)\r\nsrc/pkg/net/http/serve_test.go:1285 +0x60\r\nruntime.goexit()\r\nsrc/pkg/runtime/proc.c:207\r\ncreated by net/http_test.BenchmarkClientServerParallel\r\nsrc/pkg/net/http/serve_test.go:1298 +0x154\r\n\r\n\r\n\r\n\r\nOn Mon, Jul 2, 2012 at 8:15 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> No, but you could easily modify it to make it one.\r\n>\r\n>\r\n> On Mon, Jul 2, 2012 at 9:10 AM, Dmitry Vyukov <dvyukov@google.com> wrote:\r\n>\r\n>> Hi Brad,\r\n>>\r\n>> Btw, is there a good concurrent http benchmark? I see that this benchmark\r\n>> sends requests from 1 goroutine.\r\n>>\r\n>>\r\n>> On Mon, Jul 2, 2012 at 8:00 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>>\r\n>>> LGTM\r\n>>>\r\n>>>\r\n>>> On Mon, Jul 2, 2012 at 8:59 AM, <dvyukov@google.com> wrote:\r\n>>>\r\n>>>> Reviewers: golang-dev_googlegroups.com,\r\n>>>>\r\n>>>> Message:\r\n>>>> Hello golang-dev@googlegroups.com,\r\n>>>>\r\n>>>> I'd like you to review this change to\r\n>>>> https://go.googlecode.com/hg/\r\n>>>>\r\n>>>>\r\n>>>> Description:\r\n>>>> net/http: fix comment\r\n>>>>\r\n>>>> Please review this at http://codereview.appspot.com/**6348062/<http://codereview.appspot.com/6348062/>\r\n>>>>\r\n>>>> Affected files:\r\n>>>>   M src/pkg/net/http/serve_test.go\r\n>>>>\r\n>>>>\r\n>>>> Index: src/pkg/net/http/serve_test.go\r\n>>>> ==============================**==============================**=======\r\n>>>> --- a/src/pkg/net/http/serve_test.**go\r\n>>>> +++ b/src/pkg/net/http/serve_test.**go\r\n>>>> @@ -1270,7 +1270,7 @@\r\n>>>>  //\r\n>>>>  // For use like:\r\n>>>>  //   $ go test -c\r\n>>>> -//   $ ./http.test -test.run=XX -test.bench=Benchmarktime=15\r\n>>>> -test.cpuprofile=http.prof\r\n>>>> +//   $ ./http.test -test.run=XX -test.bench=BenchmarkServer\r\n>>>> -test.benchtime=15 -test.cpuprofile=http.prof\r\n>>>>  //   $ go tool pprof http.test http.prof\r\n>>>>  //   (pprof) web\r\n>>>>  func BenchmarkServer(b *testing.B) {\r\n>>>>\r\n>>>>\r\n>>>>\r\n>>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-02 16:42:42.479812",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Brad,\r\n\r\nBtw, is there a good concurrent http benchmark? I see that this benchmark\r\nsends requests from 1 goroutine.\r\n\r\n\r\nOn Mon, Jul 2, 2012 at 8:00 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> LGTM\r\n>\r\n>\r\n> On Mon, Jul 2, 2012 at 8:59 AM, <dvyukov@google.com> wrote:\r\n>\r\n>> Reviewers: golang-dev_googlegroups.com,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com,\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://go.googlecode.com/hg/\r\n>>\r\n>>\r\n>> Description:\r\n>> net/http: fix comment\r\n>>\r\n>> Please review this at http://codereview.appspot.com/**6348062/<http://codereview.appspot.com/6348062/>\r\n>>\r\n>> Affected files:\r\n>>   M src/pkg/net/http/serve_test.go\r\n>>\r\n>>\r\n>> Index: src/pkg/net/http/serve_test.go\r\n>> ==============================**==============================**=======\r\n>> --- a/src/pkg/net/http/serve_test.**go\r\n>> +++ b/src/pkg/net/http/serve_test.**go\r\n>> @@ -1270,7 +1270,7 @@\r\n>>  //\r\n>>  // For use like:\r\n>>  //   $ go test -c\r\n>> -//   $ ./http.test -test.run=XX -test.bench=Benchmarktime=15\r\n>> -test.cpuprofile=http.prof\r\n>> +//   $ ./http.test -test.run=XX -test.bench=BenchmarkServer\r\n>> -test.benchtime=15 -test.cpuprofile=http.prof\r\n>>  //   $ go tool pprof http.test http.prof\r\n>>  //   (pprof) web\r\n>>  func BenchmarkServer(b *testing.B) {\r\n>>\r\n>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-02 16:10:15.760708",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-07-02 15:59:32.735103",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Recent regression. I'll fix.\r\n\r\nOn Mon, Jul 2, 2012 at 9:42 AM, Dmitry Vyukov <dvyukov@google.com> wrote:\r\n\r\n> Unfortunately it says:\r\n>\r\n> $ go test net/http -run=none -bench=ClientServerParallel -benchtime=1\r\n> -cpu=16\r\n> PASS\r\n> BenchmarkClientServerParallel-16 panic: runtime error: send on closed\r\n> channel\r\n>\r\n> goroutine 1084 [running]:\r\n> runtime.panic(0x653be8, 0xf84010ae40)\r\n> src/pkg/runtime/proc.c:1259 +0xac\r\n> runtime.panicstring(0x816cb9, 0x7f8b05df9a00)\r\n>  src/pkg/runtime/runtime.c:129 +0xa3\r\n> runtime.chansend(0x5a7b00, 0xf8402bf800, 0x7f8b05df9a78, 0x0, 0x1000004,\r\n> ...)\r\n> src/pkg/runtime/chan.c:260 +0x101\r\n> runtime.chansend1(0x5a7b00, 0xf8402bf800, 0xf8401c4c00, 0xf84031ad80)\r\n> src/pkg/runtime/chan.c:400 +0x2f\r\n> net/http.(*persistConn).roundTrip(0xf84017b5b0, 0xf8401c4c00,\r\n> 0xf84017b5b0, 0x0, 0x0, ...)\r\n>  src/pkg/net/http/transport.go:689 +0x23a\r\n> net/http.(*Transport).RoundTrip(0xf840097780, 0xf840198540, 0x100000000,\r\n> 0x0, 0x0, ...)\r\n> src/pkg/net/http/transport.go:160 +0x32f\r\n> net/http.send(0xf840198540, 0xf8400898d0, 0xf840097780, 0x0, 0x0, ...)\r\n> src/pkg/net/http/client.go:140 +0x3ca\r\n> net/http.(*Client).doFollowingRedirects(0x81b988, 0xf840198540, 0x0, 0x0,\r\n> 0x0, ...)\r\n>  src/pkg/net/http/client.go:251 +0x68a\r\n> net/http.(*Client).Get(0x81b988, 0xf8400bc7e0, 0x16, 0x0, 0x0, ...)\r\n> src/pkg/net/http/client.go:200 +0xb8\r\n> net/http.Get(0xf8400bc7e0, 0x3a00000016, 0x1a, 0x0, 0x0, ...)\r\n> src/pkg/net/http/client.go:177 +0x51\r\n> net/http_test.func\u00b7069(0xf840000380, 0xf840000030, 0xf8400003f8, 0x0, 0x0,\r\n> ...)\r\n>  src/pkg/net/http/serve_test.go:1285 +0x60\r\n> runtime.goexit()\r\n> src/pkg/runtime/proc.c:207\r\n> created by net/http_test.BenchmarkClientServerParallel\r\n>  src/pkg/net/http/serve_test.go:1298 +0x154\r\n>\r\n>\r\n>\r\n>\r\n> On Mon, Jul 2, 2012 at 8:15 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>\r\n>> No, but you could easily modify it to make it one.\r\n>>\r\n>>\r\n>> On Mon, Jul 2, 2012 at 9:10 AM, Dmitry Vyukov <dvyukov@google.com> wrote:\r\n>>\r\n>>> Hi Brad,\r\n>>>\r\n>>> Btw, is there a good concurrent http benchmark? I see that this\r\n>>> benchmark sends requests from 1 goroutine.\r\n>>>\r\n>>>\r\n>>> On Mon, Jul 2, 2012 at 8:00 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>>>\r\n>>>> LGTM\r\n>>>>\r\n>>>>\r\n>>>> On Mon, Jul 2, 2012 at 8:59 AM, <dvyukov@google.com> wrote:\r\n>>>>\r\n>>>>> Reviewers: golang-dev_googlegroups.com,\r\n>>>>>\r\n>>>>> Message:\r\n>>>>> Hello golang-dev@googlegroups.com,\r\n>>>>>\r\n>>>>> I'd like you to review this change to\r\n>>>>> https://go.googlecode.com/hg/\r\n>>>>>\r\n>>>>>\r\n>>>>> Description:\r\n>>>>> net/http: fix comment\r\n>>>>>\r\n>>>>> Please review this at http://codereview.appspot.com/**6348062/<http://codereview.appspot.com/6348062/>\r\n>>>>>\r\n>>>>> Affected files:\r\n>>>>>   M src/pkg/net/http/serve_test.go\r\n>>>>>\r\n>>>>>\r\n>>>>> Index: src/pkg/net/http/serve_test.go\r\n>>>>> ==============================**==============================**\r\n>>>>> =======\r\n>>>>> --- a/src/pkg/net/http/serve_test.**go\r\n>>>>> +++ b/src/pkg/net/http/serve_test.**go\r\n>>>>> @@ -1270,7 +1270,7 @@\r\n>>>>>  //\r\n>>>>>  // For use like:\r\n>>>>>  //   $ go test -c\r\n>>>>> -//   $ ./http.test -test.run=XX -test.bench=Benchmarktime=15\r\n>>>>> -test.cpuprofile=http.prof\r\n>>>>> +//   $ ./http.test -test.run=XX -test.bench=BenchmarkServer\r\n>>>>> -test.benchtime=15 -test.cpuprofile=http.prof\r\n>>>>>  //   $ go tool pprof http.test http.prof\r\n>>>>>  //   (pprof) web\r\n>>>>>  func BenchmarkServer(b *testing.B) {\r\n>>>>>\r\n>>>>>\r\n>>>>>\r\n>>>>\r\n>>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-07-02 17:03:48.179783",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6348062: net/http: fix comment",
	"created": "2012-07-02 15:58:53.911374",
	"patchsets": [
		1,
		2001,
		4001,
		4002
	],
	"modified": "2012-07-02 16:11:13.134888",
	"closed": true,
	"issue": 6348062
}