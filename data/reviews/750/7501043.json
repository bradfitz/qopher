{
	"description": "x509: expose uniformResourceIdentifier [6] in SubjectAltName extension.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"shanemhansen@gmail.com",
		"remyoudompheng@gmail.com",
		"bradfitz@golang.org",
		"rsc@golang.org",
		"agl@google.com"
	],
	"messages": [
		{
			"sender": "jonas.p@gmail.com",
			"recipients": [
				"jonas.p@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-03-05 23:42:14.309540",
			"approval": false
		},
		{
			"sender": "shanemhansen@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can you add a test to this? Also, for those of us less familiar with x509\r\nv3 extensions,\r\na pointer to where URIs are defined for subject alt names would be\r\nappreciated.\r\n\r\nOn Tue, Mar 5, 2013 at 4:42 PM, <jonas.p@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> x509: expose uniformResourceIdentifier [6] in SubjectAltName extension.\r\n>\r\n> Please review this at https://codereview.appspot.**com/7501043/<https://codereview.appspot.com/7501043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/crypto/x509/x509.go\r\n>\r\n>\r\n> Index: src/pkg/crypto/x509/x509.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/crypto/x509/x509.go\r\n> +++ b/src/pkg/crypto/x509/x509.go\r\n> @@ -466,6 +466,7 @@\r\n>         // Subject Alternate Name values\r\n>         DNSNames       []string\r\n>         EmailAddresses []string\r\n> +       URIs           []string\r\n>         IPAddresses    []net.IP\r\n>\r\n>         // Name constraints\r\n> @@ -844,6 +845,9 @@\r\n>                                         case 2:\r\n>                                                 out.DNSNames =\r\n> append(out.DNSNames, string(v.Bytes))\r\n>                                                 parsedName = true\r\n> +                                       case 6:\r\n> +                                               out.URIs =\r\n> append(out.URIs, string(v.Bytes))\r\n> +                                               parsedName = true\r\n>                                         case 7:\r\n>                                                 switch len(v.Bytes) {\r\n>                                                 case net.IPv4len,\r\n> net.IPv6len:\r\n> @@ -1095,7 +1099,7 @@\r\n>                 n++\r\n>         }\r\n>\r\n> -       if len(template.DNSNames) > 0 || len(template.EmailAddresses) > 0\r\n> || len(template.IPAddresses) > 0 {\r\n> +       if len(template.DNSNames) > 0 || len(template.EmailAddresses) > 0\r\n> || len(template.URIs) > 0 || len(template.IPAddresses) > 0 {\r\n>                 ret[n].Id = oidExtensionSubjectAltName\r\n>                 var rawValues []asn1.RawValue\r\n>                 for _, name := range template.DNSNames {\r\n> @@ -1104,6 +1108,9 @@\r\n>                 for _, email := range template.EmailAddresses {\r\n>                         rawValues = append(rawValues, asn1.RawValue{Tag:\r\n> 1, Class: 2, Bytes: []byte(email)})\r\n>                 }\r\n> +               for _, uri := range template.URIs {\r\n> +                       rawValues = append(rawValues, asn1.RawValue{Tag:\r\n> 6, Class: 2, Bytes: []byte(uri)})\r\n> +               }\r\n>                 for _, rawIP := range template.IPAddresses {\r\n>                         // If possible, we always want to encode IPv4\r\n> addresses in 4 bytes.\r\n>                         ip := rawIP.To4()\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-06 06:02:09.864100",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/3/6  <jonas.p@gmail.com> wrote:\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> x509: expose uniformResourceIdentifier [6] in SubjectAltName extension.\r\n>\r\n> Please review this at https://codereview.appspot.com/7501043/\r\n\r\nIs this fixing an issue marked for Go 1.1 (and which one) ? This an\r\nAPI change, if no issue exists yet for this you should create one.\r\n\r\nR\u00e9my.\r\n",
			"disapproval": false,
			"date": "2013-03-06 07:04:58.954760",
			"approval": false
		},
		{
			"sender": "jonas.p@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Can you add a test to this? Also, for those of us less familiar with x509\r\nv3 extensions,\r\n> a pointer to where URIs are defined for subject alt names would be\r\nappreciated.\r\n\r\nI extended x509_test.go to test for entries in URIs. The possibility of\r\nuris is defined in RFC 5280, 4.2.1.6. There already is a comment in the\r\ncode (x509.go:807+) referencing this RFC and uris are listed as well.\r\nTherefore I didn't add any further comments.\r\n\r\n> Is this fixing an issue marked for Go 1.1 (and which one) ? This an\r\n> API change, if no issue exists yet for this you should create one.\r\n\r\nNo, at the moment there is no issue for this. As this is more of a feature\r\nthan an issue, is the golang policy to open an issue for these things as\r\nwell? If that is the case I'll be happy to do so. First time submission,\r\nsorry :)\r\n\r\nAs a sidenote: The API was changed recently anyway by\r\n\r\nchangeset:   15750:e1a94ec9f285\r\nuser:        Adam Langley <agl@golang.org>\r\ndate:        Fri Feb 15 10:40:17 2013 -0500\r\nsummary:     crypto/x509: support IP SANs.\r\n\r\nwhich introduced IPAddresses handling of SubjectAltNames.\r\n",
			"disapproval": false,
			"date": "2013-03-06 07:49:31.304000",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Btw, per the Go 1.1 freeze (\r\nhttps://groups.google.com/forum/?fromgroups=#!topic/golang-dev/IY5JQ1nt2Zo)\r\nthis might be just too late, even though the code looks fine.  If agl is\r\ncool with it and it gets a test, though, it could possibly go in.\r\n\r\nOn Tue, Mar 5, 2013 at 11:49 PM, Jonas Pollok <jonas.p@gmail.com> wrote:\r\n\r\n> > Can you add a test to this? Also, for those of us less familiar with\r\n> x509 v3 extensions,\r\n> > a pointer to where URIs are defined for subject alt names would be\r\n> appreciated.\r\n>\r\n> I extended x509_test.go to test for entries in URIs. The possibility of\r\n> uris is defined in RFC 5280, 4.2.1.6. There already is a comment in the\r\n> code (x509.go:807+) referencing this RFC and uris are listed as well.\r\n> Therefore I didn't add any further comments.\r\n>\r\n> > Is this fixing an issue marked for Go 1.1 (and which one) ? This an\r\n> > API change, if no issue exists yet for this you should create one.\r\n>\r\n> No, at the moment there is no issue for this. As this is more of a feature\r\n> than an issue, is the golang policy to open an issue for these things as\r\n> well? If that is the case I'll be happy to do so. First time submission,\r\n> sorry :)\r\n>\r\n> As a sidenote: The API was changed recently anyway by\r\n>\r\n> changeset:   15750:e1a94ec9f285\r\n> user:        Adam Langley <agl@golang.org>\r\n> date:        Fri Feb 15 10:40:17 2013 -0500\r\n> summary:     crypto/x509: support IP SANs.\r\n>\r\n> which introduced IPAddresses handling of SubjectAltNames.\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-06 08:06:21.387350",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please postpone this CL until after Go 1.1 is out unless this is needed to\r\nfix a Go 1.1 bug. Even though it's small, we're having trouble keeping up\r\nwith the small extra pieces that keep coming in. We had to draw a line.\r\n\r\nThanks.\r\n",
			"disapproval": false,
			"date": "2013-03-06 20:17:00.988410",
			"approval": false
		},
		{
			"sender": "agl@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 6, 2013 at 3:16 PM, Russ Cox <rsc@golang.org> wrote:\r\n> Please postpone this CL until after Go 1.1 is out unless this is needed to\r\n> fix a Go 1.1 bug. Even though it's small, we're having trouble keeping up\r\n> with the small extra pieces that keep coming in. We had to draw a line.\r\n\r\nThis needs a strong motivation also if its to go in at any point. What\r\nuses URIs in X.509 and it is common enough to support?\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2013-03-06 20:27:05.337000",
			"approval": false
		},
		{
			"sender": "jonas.p@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Please postpone this CL until after Go 1.1 is out unless this is needed\r\nto fix a Go 1.1 bug.\r\n\r\nSure, no problem. What would be the standard procedure to do that?\r\n\r\n> This needs a strong motivation also if its to go in at any point. What\r\n> uses URIs in X.509 and it is common enough to support?\r\n\r\nThe reason for me to implement this was to allow WebID authentication over\r\nTLS which is a mechanism relying on linked data and a self signed\r\ncertificate containing an URI in the subjectAltName extension, see\r\nhttp://www.w3.org/2005/Incubator/webid/spec/ . I understand that GO can not\r\nprovide code for every authentication/validation mechanism in the world.\r\nThis is actually why I wanted to expose data present in the certificate to\r\ncode running outside of x509.go.\r\n",
			"disapproval": false,
			"date": "2013-03-07 11:24:23.064010",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Mar 7, 2013 at 3:24 AM, Jonas Pollok <jonas.p@gmail.com> wrote:\r\n\r\n> > Please postpone this CL until after Go 1.1 is out unless this is needed\r\n> to fix a Go 1.1 bug.\r\n>\r\n> Sure, no problem. What would be the standard procedure to do that?\r\n>\r\n\r\nWait for Go 1.1 to come out, then send us a \"ping\" email.  (we don't have\r\nmultiple branches at this point... too much overhead. go1.1 will get its\r\nown maintenance branch later)  You should also file a bug to track it,\r\nreferencing the patch.\r\n",
			"disapproval": false,
			"date": "2013-03-07 16:40:37.248040",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"jonas.p@gmail.com",
				"golang-dev@googlegroups.com",
				"shanemhansen@gmail.com",
				"remyoudompheng@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"agl@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=agl\n\nWhat is the status of this? Jonas, do you still need this?\n\nGo 1.1 is out now, so this can be discussed now.",
			"disapproval": false,
			"date": "2013-06-17 18:21:14.121870",
			"approval": false
		},
		{
			"sender": "jonas.p@gmail.com",
			"recipients": [
				"jonas.p@gmail.com",
				"golang-dev@googlegroups.com",
				"shanemhansen@gmail.com",
				"remyoudompheng@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"agl@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes I would still like the certificate URI to be exposed in some way.\nI filed a bug under https://code.google.com/p/go/issues/detail?id=5752",
			"disapproval": false,
			"date": "2013-06-22 10:00:51.223760",
			"approval": false
		}
	],
	"owner_email": "jonas.p@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "jonasp",
	"subject": "code review 7501043: x509: expose uniformResourceIdentifier [6] in SubjectAl...",
	"created": "2013-03-05 23:35:52.096440",
	"patchsets": [
		1,
		2001,
		4001,
		4003
	],
	"modified": "2013-06-22 10:00:51.562650",
	"closed": false,
	"issue": 7501043
}