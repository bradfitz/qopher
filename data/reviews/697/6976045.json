{
	"description": "go/misc: Adding go-tour to the generated packages for every distribution.",
	"cc": [
		"adg@golang.org",
		"minux.ma@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-08 18:42:27.314780",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "description: use 'misc/dist' is better than 'go/misc'.\n\nthe changes look good, i wonder if we need to provide some\ndocs. pointer to the newly embedded go-tour?",
			"disapproval": false,
			"date": "2013-01-08 21:37:18.889180",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jan 10, 2013 at 8:51 AM, Andrew Gerrand <adg@golang.org> wrote:\r\n\r\n> Putting the tour packages inside $GOROOT/src/pkg\r\n> pros:\r\n>  - they're in godoco when/if the user looks for them\r\n>  - therefore we can document those packages\r\n>  - tour binary doesn't do anything magic when building\r\n> cons:\r\n>  - they pollute the standard library\r\n>\r\none more: the user can't define a package named tour in GOPATH,\r\nand there is no workaround for this problem (unless he deletes those\r\npackages and breaks gotour).\r\n\r\n> not sure if pro or con:\r\n>  - they can be used by non-tour programs\r\n>\r\n> Putting the packages inside $GOROOT/misc/tour\r\n> pros:\r\n>  - tour content is all in one place\r\n>  - standard library remains pristine\r\n> cons:\r\n>  - magic GOPATH in tour's build step\r\n>  - no easy way to find the docs, tricky to make godoc see them\r\n>\r\nthe user only needs to set GOPATH=$GOROOT/misc/tour to be able\r\nto see the docs, so I think this isn't a serious issue.\r\n(we can even start a godoc process with appropriate GOPATH setting\r\nfrom the gotour process and give docs link for tour/* packages; I think\r\nthis solution is good enough for this case because I imagine the user\r\nwould only want to see godoc for tour/* packages when using the tour)\r\n\r\nAs both of these have workarounds, I prefer this one.\r\n",
			"disapproval": false,
			"date": "2013-01-10 08:44:36.952390",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Implemented in combination with https://codereview.appspot.com/6920055/\r\n\r\nTested and it seems it works nicely, so PTAL :-)\r\n\r\n\r\n\r\nOn Thu, Jan 10, 2013 at 11:25 AM, Andrew Gerrand <adg@golang.org> wrote:\r\n\r\n>\r\n> On 10 Jan 2013 21:03, <campoy@golang.org> wrote:\r\n> >\r\n> > I agree with minux.\r\n>\r\n> I agree also. We can launch a godoc process when the tour starts, and\r\n> change the links in the tour slides to point there. Nice.\r\n>\r\n> >\r\n> > Polluting the standard library seems a pretty bad side effect.\r\n> >\r\n> >\r\n> >\r\n> > https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go\r\n> > File misc/dist/bindist.go (right):\r\n> >\r\n> >\r\n> https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode44\r\n> > misc/dist/bindist.go:44: tourRepoURL =\r\n> > \"http://code.google.com/p/go-tour\"\r\n> > On 2013/01/09 05:25:31, adg wrote:\r\n> >>\r\n> >> make it a flag (\"-tour\") just like -repo\r\n> >\r\n> >\r\n> > Done.\r\n> >\r\n> >\r\n> >\r\n> https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode352\r\n> > misc/dist/bindist.go:352: func (b *Build) BuildTour() error {\r\n> > On 2013/01/09 05:25:31, adg wrote:\r\n> >>\r\n> >> s/BuildTour/tour/g\r\n> >\r\n> >\r\n> > Done.\r\n> >\r\n> >\r\n> >\r\n> https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode361\r\n> > misc/dist/bindist.go:361: toolPah  = filepath.Join(b.root, \"pkg\",\r\n> > \"tool\", b.OS+\"_\"+b.Arch, \"tour\")\r\n> > On 2013/01/09 05:25:31, adg wrote:\r\n> >>\r\n> >> s/toolPah/toolPath/\r\n> >\r\n> >\r\n> > Done.\r\n> >\r\n> >\r\n> >\r\n> https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode372\r\n> > misc/dist/bindist.go:372: {tourPkg, \"go\", \"build\"},\r\n> > On 2013/01/09 05:26:25, adg wrote:\r\n> >>\r\n> >> make it \"go build -o tour\"\r\n> >\r\n> >\r\n> >> we want to be able to run \"go tool tour\"\r\n> >\r\n> >\r\n> > Done. I was changin its name in the next command, but I prefer your way.\r\n> >\r\n> >\r\n> >\r\n> https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode373\r\n> > misc/dist/bindist.go:373: {tourPkg, \"mv\", \"gotour\", toolPah},\r\n> > On 2013/01/09 05:26:25, adg wrote:\r\n> >>\r\n> >> s/gotour/tour/\r\n> >\r\n> >\r\n> > Done.\r\n> >\r\n> >\r\n> >\r\n> https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode374\r\n> > misc/dist/bindist.go:374: {tourRoot, \"mv\", \"tree\", \"pic\", \"wc\", pkgDir},\r\n> > On 2013/01/09 05:25:31, adg wrote:\r\n> >>\r\n> >> These packages should be inside $GOROOT/src/pkg/tour/\r\n> >> so that they are imported as \"tour/pic\" etc\r\n> >\r\n> >\r\n> > Waiting for your confirmation on this, should I put it in the std\r\n> > library? or inside of misc?\r\n> >\r\n> > https://codereview.appspot.com/6976045/\r\n>\r\n\r\n\r\n\r\n-- \r\n--\r\nFrancesc\r\n",
			"disapproval": false,
			"date": "2013-01-10 14:46:07.646590",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode44\nmisc/dist/bindist.go:44: tourRepoURL = \"http://code.google.com/p/go-tour\"\nmake it a flag (\"-tour\") just like -repo\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode352\nmisc/dist/bindist.go:352: func (b *Build) BuildTour() error {\ns/BuildTour/tour/g\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode361\nmisc/dist/bindist.go:361: toolPah  = filepath.Join(b.root, \"pkg\", \"tool\", b.OS+\"_\"+b.Arch, \"tour\")\ns/toolPah/toolPath/\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode374\nmisc/dist/bindist.go:374: {tourRoot, \"mv\", \"tree\", \"pic\", \"wc\", pkgDir},\nThese packages should be inside $GOROOT/src/pkg/tour/\nso that they are imported as \"tour/pic\" etc",
			"disapproval": false,
			"date": "2013-01-09 05:25:31.013420",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode372\nmisc/dist/bindist.go:372: {tourPkg, \"go\", \"build\"},\nmake it \"go build -o tour\"\n\nwe want to be able to run \"go tool tour\"\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode373\nmisc/dist/bindist.go:373: {tourPkg, \"mv\", \"gotour\", toolPah},\ns/gotour/tour/",
			"disapproval": false,
			"date": "2013-01-09 05:26:25.117040",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 9, 2013 at 1:25 PM, <adg@golang.org> wrote:\r\n\r\n> https://codereview.appspot.**com/6976045/diff/4001/misc/**\r\n> dist/bindist.go#newcode374<https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode374>\r\n> misc/dist/bindist.go:374: {tourRoot, \"mv\", \"tree\", \"pic\", \"wc\", pkgDir},\r\n> These packages should be inside $GOROOT/src/pkg/tour/\r\n> so that they are imported as \"tour/pic\" etc\r\n>\r\nI wonder if we should put those packages in misc/tour/src/tour, as I doubt\r\nwe want to pollute the namespace of standard library (if we put that in\r\nGOROOT,\r\npeople won't be able to have a package named tour, for example).\r\n\r\nWe can let go-tour detect this (perhaps by build tags) and set GOPATH before\r\nrunning user programs.\r\n",
			"disapproval": false,
			"date": "2013-01-09 09:48:45.842780",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I agree with minux.\n\nPolluting the standard library seems a pretty bad side effect.\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode44\nmisc/dist/bindist.go:44: tourRepoURL = \"http://code.google.com/p/go-tour\"\nOn 2013/01/09 05:25:31, adg wrote:\n> make it a flag (\"-tour\") just like -repo\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode352\nmisc/dist/bindist.go:352: func (b *Build) BuildTour() error {\nOn 2013/01/09 05:25:31, adg wrote:\n> s/BuildTour/tour/g\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode361\nmisc/dist/bindist.go:361: toolPah  = filepath.Join(b.root, \"pkg\", \"tool\", b.OS+\"_\"+b.Arch, \"tour\")\nOn 2013/01/09 05:25:31, adg wrote:\n> s/toolPah/toolPath/\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode372\nmisc/dist/bindist.go:372: {tourPkg, \"go\", \"build\"},\nOn 2013/01/09 05:26:25, adg wrote:\n> make it \"go build -o tour\"\n> \n> we want to be able to run \"go tool tour\"\n\nDone. I was changin its name in the next command, but I prefer your way.\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode373\nmisc/dist/bindist.go:373: {tourPkg, \"mv\", \"gotour\", toolPah},\nOn 2013/01/09 05:26:25, adg wrote:\n> s/gotour/tour/\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode374\nmisc/dist/bindist.go:374: {tourRoot, \"mv\", \"tree\", \"pic\", \"wc\", pkgDir},\nOn 2013/01/09 05:25:31, adg wrote:\n> These packages should be inside $GOROOT/src/pkg/tour/\n> so that they are imported as \"tour/pic\" etc\n\nWaiting for your confirmation on this, should I put it in the std library? or inside of misc?",
			"disapproval": false,
			"date": "2013-01-10 10:03:37.204850",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 9 January 2013 20:48, minux <minux.ma@gmail.com> wrote:\r\n\r\n> I wonder if we should put those packages in misc/tour/src/tour, as I doubt\r\n> we want to pollute the namespace of standard library (if we put that in\r\n> GOROOT,\r\n> people won't be able to have a package named tour, for example).\r\n>\r\n> We can let go-tour detect this (perhaps by build tags) and set GOPATH\r\n> before\r\n> running user programs.\r\n>\r\n\r\nThis came up in the discussion, and I saw no real resolution.\r\n\r\nPutting the tour packages inside $GOROOT/src/pkg\r\npros:\r\n - they're in godoco when/if the user looks for them\r\n - therefore we can document those packages\r\n - tour binary doesn't do anything magic when building\r\ncons:\r\n - they pollute the standard library\r\nnot sure if pro or con:\r\n - they can be used by non-tour programs\r\n\r\nPutting the packages inside $GOROOT/misc/tour\r\npros:\r\n - tour content is all in one place\r\n - standard library remains pristine\r\ncons:\r\n - magic GOPATH in tour's build step\r\n - no easy way to find the docs, tricky to make godoc see them\r\n\r\nIn conclusion, I don't know. Help!\r\n\r\nAndrew\r\n",
			"disapproval": false,
			"date": "2013-01-10 00:51:45.193460",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 10 Jan 2013 21:03, <campoy@golang.org> wrote:\r\n>\r\n> I agree with minux.\r\n\r\nI agree also. We can launch a godoc process when the tour starts, and\r\nchange the links in the tour slides to point there. Nice.\r\n\r\n>\r\n> Polluting the standard library seems a pretty bad side effect.\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go\r\n> File misc/dist/bindist.go (right):\r\n>\r\n>\r\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode44\r\n> misc/dist/bindist.go:44: tourRepoURL =\r\n> \"http://code.google.com/p/go-tour\"\r\n> On 2013/01/09 05:25:31, adg wrote:\r\n>>\r\n>> make it a flag (\"-tour\") just like -repo\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n>\r\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode352\r\n> misc/dist/bindist.go:352: func (b *Build) BuildTour() error {\r\n> On 2013/01/09 05:25:31, adg wrote:\r\n>>\r\n>> s/BuildTour/tour/g\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n>\r\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode361\r\n> misc/dist/bindist.go:361: toolPah  = filepath.Join(b.root, \"pkg\",\r\n> \"tool\", b.OS+\"_\"+b.Arch, \"tour\")\r\n> On 2013/01/09 05:25:31, adg wrote:\r\n>>\r\n>> s/toolPah/toolPath/\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n>\r\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode372\r\n> misc/dist/bindist.go:372: {tourPkg, \"go\", \"build\"},\r\n> On 2013/01/09 05:26:25, adg wrote:\r\n>>\r\n>> make it \"go build -o tour\"\r\n>\r\n>\r\n>> we want to be able to run \"go tool tour\"\r\n>\r\n>\r\n> Done. I was changin its name in the next command, but I prefer your way.\r\n>\r\n>\r\n>\r\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode373\r\n> misc/dist/bindist.go:373: {tourPkg, \"mv\", \"gotour\", toolPah},\r\n> On 2013/01/09 05:26:25, adg wrote:\r\n>>\r\n>> s/gotour/tour/\r\n>\r\n>\r\n> Done.\r\n>\r\n>\r\n>\r\nhttps://codereview.appspot.com/6976045/diff/4001/misc/dist/bindist.go#newcode374\r\n> misc/dist/bindist.go:374: {tourRoot, \"mv\", \"tree\", \"pic\", \"wc\", pkgDir},\r\n> On 2013/01/09 05:25:31, adg wrote:\r\n>>\r\n>> These packages should be inside $GOROOT/src/pkg/tour/\r\n>> so that they are imported as \"tour/pic\" etc\r\n>\r\n>\r\n> Waiting for your confirmation on this, should I put it in the std\r\n> library? or inside of misc?\r\n>\r\n> https://codereview.appspot.com/6976045/\r\n",
			"disapproval": false,
			"date": "2013-01-10 10:25:06.892970",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "As discussed, the steps should be:\n\ncreate a temporary GOPATH\n\ncall \"go get code.google.com/p/go-tour/gotour\" with the GOPATH environment variable set to that temporary path\n\nmv $GOPATH/src/code.google.com/p/go-tour/{solutions,static} $GOROOT/misc/tour\n\nmv $GOPATH/bin/gotour $GOROOT/pkg/tool/$GOOS_$GOARCH/tour\n\nmv $GOPATH/src/code.google.com/p/go-tour/{pic,tree,wc} $GOROOT/misc/src/tour/code.google.com/p/go-tour/\n\nmv $GOPATH/pkg/code.google.com/p/go-tour/{pic,tree,wc} $GOROOT/misc/pkg/tour/code.google.com/p/go-tour/\n\nhttps://codereview.appspot.com/6976045/diff/5003/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/5003/misc/dist/bindist.go#newcode38\nmisc/dist/bindist.go:38: tourRepo = flag.String(\"tour\", \"http://code.google.com/p/go-tour\", \"Go tour repo URL\")\nput this beside repo",
			"disapproval": false,
			"date": "2013-01-10 23:25:33.020480",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "While I agree with moving GOPATH to the tmp directory, we should still fix the the go-tour package so we can actually use \"go get\" on it.\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode34\nmisc/dist/bindist.go:34: tourRepo = flag.String(\"tour\", \"http://code.google.com/p/go-tour\", \"Go tour repo import path\")\nOn 2013/01/14 22:27:06, adg wrote:\n> s/http/https/\n> s/import path/URL/ - there's a crucial difference\nI  changed tourRepo to be the import path, but go get of code.google.com/p/go-tour won't work, since there's not go file there.\n\nShould we fix that first?\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode139\nmisc/dist/bindist.go:139: fmt.Println(\"Work: \", work)\nOn 2013/01/14 22:27:06, adg wrote:\n> delete\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode140\nmisc/dist/bindist.go:140: // defer os.RemoveAll(work)\nOn 2013/01/14 22:27:06, adg wrote:\n> revert\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode144\nmisc/dist/bindist.go:144: if _, err = b.run(work, \"hg\", \"clone\", \"-q\", *repo, b.root); err != nil {\nOn 2013/01/14 22:27:06, adg wrote:\n> revert\nAny good reason?\nThe code is shorter and as readable as before, IMHO\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode147\nmisc/dist/bindist.go:147: if _, err = b.run(b.root, \"hg\", \"update\", *tag); err != nil {\nOn 2013/01/14 22:27:06, adg wrote:\n> revert\n\nIdem\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode377\nmisc/dist/bindist.go:377: {tmp, \"hg\", \"clone\", *tourRepo},\nI can do it most of that, but \"go get code.google.com/p/go-tour\" will fail.\nAlso \"go get code.google.com/p/go-tour/gotour\" fails\n\nOn 2013/01/14 22:27:06, adg wrote:\n> use go get, as the tour will soon depend on go.talks, and who knows what other\n> dependencies we might add\n> \n> you should set gopath to somewhere temporary (the workdir is ideal for this),\n> and move the specific pieces inside. the way you have it now, the tour repo is\n> left intact except that you move the static directory out. \n> \n> misc/tour/code.google.com/p/go-tour should only contain pic, tree, and wc.\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode380\nmisc/dist/bindist.go:380: {tourPkg, goBin, \"build\", \"-o\", \"tour\"},\nOn 2013/01/14 22:27:06, adg wrote:\n> go get will do this for you, and put the result at b.gopath + \"/bin/gotour\"\n\nRead above.",
			"disapproval": false,
			"date": "2013-01-14 23:11:58.234450",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 15 January 2013 10:11, <campoy@golang.org> wrote:\r\n\r\n> Also \"go get code.google.com/p/go-tour/**gotour<http://code.google.com/p/go-tour/gotour>\"\r\n> fails\r\n>\r\n\r\nWhy?\r\n",
			"disapproval": false,
			"date": "2013-01-14 23:14:22.175720",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 15 January 2013 10:13, Andrew Gerrand <adg@golang.org> wrote:\r\n\r\n>\r\n> On 15 January 2013 10:11, <campoy@golang.org> wrote:\r\n>\r\n>> Also \"go get code.google.com/p/go-tour/**gotour<http://code.google.com/p/go-tour/gotour>\"\r\n>> fails\r\n>>\r\n>\r\n> Why?\r\n>\r\n\r\nIt works for me.\r\n",
			"disapproval": false,
			"date": "2013-01-14 23:15:09.228930",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Lookin' good.\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode362\nmisc/dist/bindist.go:362: tourRel = filepath.Join(strings.Split(*tourPath, \"/\")...)\ntourRel = filepath.FromSlash(*tourPath)\nmaybe tourPkg ?\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode367\nmisc/dist/bindist.go:367: for _, dir := range []string{miscDir, tourDst} {\ndo this after running go get\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode373\nmisc/dist/bindist.go:373: _, err := b.run(b.gopath, goBin, \"get\", filepath.Join(*tourPath, \"gotour\"))\nthis is an import path, not a filesystem path; under windows this will use the wrong slashes\ninstead of filepath.Join(...), just do *tourPath + \"/gotour\"\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode618\nmisc/dist/bindist.go:618: func(path string, info os.FileInfo, err error) error {\navoid the indent by first defining\n\nfn := func(path ...)\nreturn filepath.Walk(src, fn)\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode619\nmisc/dist/bindist.go:619: if !strings.HasPrefix(path, src) {\nThis shouldn't be possible. Did you actually see this happen?\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode630\nmisc/dist/bindist.go:630: func cpAllDir(dst, src string, dirs ...string) error {\ns/src/basePath/",
			"disapproval": false,
			"date": "2013-01-15 21:12:04.976410",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6976045/diff/5003/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/5003/misc/dist/bindist.go#newcode38\nmisc/dist/bindist.go:38: tourRepo = flag.String(\"tour\", \"http://code.google.com/p/go-tour\", \"Go tour repo URL\")\nOn 2013/01/10 23:25:33, adg wrote:\n> put this beside repo\n\nDone.",
			"disapproval": false,
			"date": "2013-01-14 20:14:01.085300",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please re-read the previous mail I sent on this CL.\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode34\nmisc/dist/bindist.go:34: tourRepo = flag.String(\"tour\", \"http://code.google.com/p/go-tour\", \"Go tour repo import path\")\ns/http/https/\ns/import path/URL/ - there's a crucial difference\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode139\nmisc/dist/bindist.go:139: fmt.Println(\"Work: \", work)\ndelete\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode140\nmisc/dist/bindist.go:140: // defer os.RemoveAll(work)\nrevert\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode141\nmisc/dist/bindist.go:141: b.root = filepath.Join(work, \"go\")\nalso set b.gopath = work\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode144\nmisc/dist/bindist.go:144: if _, err = b.run(work, \"hg\", \"clone\", \"-q\", *repo, b.root); err != nil {\nrevert\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode147\nmisc/dist/bindist.go:147: if _, err = b.run(b.root, \"hg\", \"update\", *tag); err != nil {\nrevert\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode372\nmisc/dist/bindist.go:372: oldpath := b.gopath\ndelete these three lines\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode377\nmisc/dist/bindist.go:377: {tmp, \"hg\", \"clone\", *tourRepo},\nuse go get, as the tour will soon depend on go.talks, and who knows what other dependencies we might add\n\nyou should set gopath to somewhere temporary (the workdir is ideal for this), and move the specific pieces inside. the way you have it now, the tour repo is left intact except that you move the static directory out. \n\nmisc/tour/code.google.com/p/go-tour should only contain pic, tree, and wc.\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode379\nmisc/dist/bindist.go:379: {tourRoot, \"mv\", \"static\", miscDir},\nwhat about solutions?\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode380\nmisc/dist/bindist.go:380: {tourPkg, goBin, \"build\", \"-o\", \"tour\"},\ngo get will do this for you, and put the result at b.gopath + \"/bin/gotour\"\n\nhttps://codereview.appspot.com/6976045/diff/26002/misc/dist/bindist.go#newcode381\nmisc/dist/bindist.go:381: {tourPkg, \"mv\", \"tour\", toolPath},\nwindows doesn't have a mv command, so you need to use the cp() function (defined in this file), and for copying directories write a function like\n\nfunc cpDir(dst, src string) error\n\nthat walks the paths, makes directories, and so on. (see filepath.Walk)",
			"disapproval": false,
			"date": "2013-01-14 22:27:06.012620",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nOn 2013/01/10 23:25:33, adg wrote:\n> As discussed, the steps should be:\n> \n> create a temporary GOPATH\n> \n> call \"go get code.google.com/p/go-tour/gotour\" with the GOPATH environment\n> variable set to that temporary path\n> \n> mv $GOPATH/src/code.google.com/p/go-tour/{solutions,static} $GOROOT/misc/tour\n> \n> mv $GOPATH/bin/gotour $GOROOT/pkg/tool/$GOOS_$GOARCH/tour\n> \n> mv $GOPATH/src/code.google.com/p/go-tour/{pic,tree,wc}\n> $GOROOT/misc/src/tour/code.google.com/p/go-tour/\n> \n> mv $GOPATH/pkg/code.google.com/p/go-tour/{pic,tree,wc}\n> $GOROOT/misc/pkg/tour/code.google.com/p/go-tour/\n> \n> https://codereview.appspot.com/6976045/diff/5003/misc/dist/bindist.go\n> File misc/dist/bindist.go (right):\n> \n> https://codereview.appspot.com/6976045/diff/5003/misc/dist/bindist.go#newcode38\n> misc/dist/bindist.go:38: tourRepo = flag.String(\"tour\",\n> \"http://code.google.com/p/go-tour\", \"Go tour repo URL\")\n> put this beside repo",
			"disapproval": false,
			"date": "2013-01-14 20:00:15.855140",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\r\n\r\nOn Tuesday, January 15, 2013 10:22:22 AM UTC+11, Francesc wrote:\r\n>\r\n> Maybe this is caused by something else?\r\n>\r\n> package code.google.com/p/go-tour/gotour: \r\n> /var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/misc/tour/src/\r\n> code.google.com/p/go-tour exists but \r\n> /var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/misc/tour/src/\r\n> code.google.com/p/go-tour/.hg does not - stale checkout?\r\n>\r\n> 2013/01/14 12:51:09 darwin-amd64: \r\n> /var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/bin/go \r\n> get code.google.com/p/go-tour/gotour: exit status 1\r\n>\r\n\r\nDo you still have os.RemoveAll(work) commented out in Do?\r\n\r\nMaybe there's a stale environment hanging around.\r\n\r\n",
			"disapproval": false,
			"date": "2013-01-15 10:50:27.783630",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Maybe this is caused by something else?\r\n\r\npackage code.google.com/p/go-tour/gotour:\r\n/var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/misc/tour/src/\r\ncode.google.com/p/go-tour exists but\r\n/var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/misc/tour/src/\r\ncode.google.com/p/go-tour/.hg does not - stale checkout?\r\n\r\n2013/01/14 12:51:09 darwin-amd64:\r\n/var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/bin/go\r\nget code.google.com/p/go-tour/gotour: exit status 1\r\n\r\n\r\nOn Mon, Jan 14, 2013 at 11:14 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n\r\n> go get code.google.com/p/go-tour/**gotour<http://code.google.com/p/go-tour/gotour>\r\n>\r\n\r\n\r\n\r\n\r\n-- \r\n--\r\nFrancesc\r\n",
			"disapproval": false,
			"date": "2013-01-14 23:22:24.340340",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Well something is wrong on your end. Check that go get works outside of\r\ndist first, then check all your other assumptions.\r\nOn 15 Jan 2013 09:22, \"Francesc Campoy Flores\" <campoy@golang.org> wrote:\r\n\r\n> Maybe this is caused by something else?\r\n>\r\n> package code.google.com/p/go-tour/gotour:\r\n> /var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/misc/tour/src/\r\n> code.google.com/p/go-tour exists but\r\n> /var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/misc/tour/src/\r\n> code.google.com/p/go-tour/.hg does not - stale checkout?\r\n>\r\n> 2013/01/14 12:51:09 darwin-amd64:\r\n> /var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/bin/go\r\n> get code.google.com/p/go-tour/gotour: exit status 1\r\n>\r\n>\r\n> On Mon, Jan 14, 2013 at 11:14 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n>\r\n>> go get code.google.com/p/go-tour/**gotour<http://code.google.com/p/go-tour/gotour>\r\n>>\r\n>\r\n>\r\n>\r\n>\r\n> --\r\n> --\r\n> Francesc\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-14 23:27:59.531860",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL, I tried to assess all of your comments and modified substantially the whole tour function.\n\nOn 2013/01/15 10:50:27, adg wrote:\n> \n> On Tuesday, January 15, 2013 10:22:22 AM UTC+11, Francesc wrote:\n> >\n> > Maybe this is caused by something else?\n> >\n> > package code.google.com/p/go-tour/gotour: \n> >\n> /var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/misc/tour/src/\n> > code.google.com/p/go-tour exists but \n> >\n> /var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/misc/tour/src/\n> > code.google.com/p/go-tour/.hg does not - stale checkout?\n> >\n> > 2013/01/14 12:51:09 darwin-amd64: \n> > /var/folders/00/10xjh000h01000cxqpysvccm0043p6/T/bindist579464539/go/bin/go \n> > get code.google.com/p/go-tour/gotour: exit status 1\n> >\n> \n> Do you still have os.RemoveAll(work) commented out in Do?\n> \n> Maybe there's a stale environment hanging around.\n>",
			"disapproval": false,
			"date": "2013-01-15 19:09:58.464160",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Glad we're getting closer to an agreement here :-)\nPTAL\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode362\nmisc/dist/bindist.go:362: tourRel = filepath.Join(strings.Split(*tourPath, \"/\")...)\nOn 2013/01/15 21:12:05, adg wrote:\n> tourRel = filepath.FromSlash(*tourPath)\n> maybe tourPkg ?\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode367\nmisc/dist/bindist.go:367: for _, dir := range []string{miscDir, tourDst} {\nOn 2013/01/15 21:12:05, adg wrote:\n> do this after running go get\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode373\nmisc/dist/bindist.go:373: _, err := b.run(b.gopath, goBin, \"get\", filepath.Join(*tourPath, \"gotour\"))\nOn 2013/01/15 21:12:05, adg wrote:\n> this is an import path, not a filesystem path; under windows this will use the\n> wrong slashes\n> instead of filepath.Join(...), just do *tourPath + \"/gotour\"\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode619\nmisc/dist/bindist.go:619: if !strings.HasPrefix(path, src) {\nOn 2013/01/15 21:12:05, adg wrote:\n> This shouldn't be possible. Did you actually see this happen?\n\nNot really, I just got \"inspiration\" from another filepath.Walk in this file. See line 649\n\nhttps://codereview.appspot.com/6976045/diff/32002/misc/dist/bindist.go#newcode630\nmisc/dist/bindist.go:630: func cpAllDir(dst, src string, dirs ...string) error {\nOn 2013/01/15 21:12:05, adg wrote:\n> s/src/basePath/\n\nDone.",
			"disapproval": false,
			"date": "2013-01-15 23:36:03.595820",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nMake sure you test it fully on at least OS X and Linux before submitting. Thanks.\n\nhttps://codereview.appspot.com/6976045/diff/39001/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/39001/misc/dist/bindist.go#newcode617\nmisc/dist/bindist.go:617: walk := func(path string, info os.FileInfo, err error) error {\ns/path/srcPath/ in this func",
			"disapproval": false,
			"date": "2013-01-15 23:47:12.029620",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 16 January 2013 10:47, <adg@golang.org> wrote:\r\n\r\n> Make sure you test it fully on at least OS X and Linux before\r\n> submitting. Thanks.\r\n>\r\n\r\nAnd you should also wait for the corresponding change to go-tour to be\r\nsubmitted.\r\n",
			"disapproval": false,
			"date": "2013-01-15 23:48:17.889830",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Will test on linux tomorrow.\n\nhttps://codereview.appspot.com/6976045/diff/39001/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/39001/misc/dist/bindist.go#newcode617\nmisc/dist/bindist.go:617: walk := func(path string, info os.FileInfo, err error) error {\nOn 2013/01/15 23:47:12, adg wrote:\n> s/path/srcPath/ in this func\n\nDone.",
			"disapproval": false,
			"date": "2013-01-16 00:09:33.008140",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Works on Linux too. Did you create a CL for the change on the go-tour side? I can't find it.\n\nOn 2013/01/16 00:09:33, gocampoy wrote:\n> Will test on linux tomorrow.\n> \n> https://codereview.appspot.com/6976045/diff/39001/misc/dist/bindist.go\n> File misc/dist/bindist.go (right):\n> \n> https://codereview.appspot.com/6976045/diff/39001/misc/dist/bindist.go#newcode617\n> misc/dist/bindist.go:617: walk := func(path string, info os.FileInfo, err error)\n> error {\n> On 2013/01/15 23:47:12, adg wrote:\n> > s/path/srcPath/ in this func\n> \n> Done.",
			"disapproval": false,
			"date": "2013-01-16 23:03:19.487430",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6920055/\r\n\r\nIt's associated with the user \"gocampoy\" rather than \"campoy\", which might\r\nbe why it was hard to find.\r\n\r\n\r\nOn 17 January 2013 10:03, <campoy@golang.org> wrote:\r\n\r\n> Works on Linux too. Did you create a CL for the change on the go-tour\r\n> side? I can't find it.\r\n>\r\n>\r\n> On 2013/01/16 00:09:33, gocampoy wrote:\r\n>\r\n>> Will test on linux tomorrow.\r\n>>\r\n>\r\n>  https://codereview.appspot.**com/6976045/diff/39001/misc/**\r\n>> dist/bindist.go<https://codereview.appspot.com/6976045/diff/39001/misc/dist/bindist.go>\r\n>> File misc/dist/bindist.go (right):\r\n>>\r\n>\r\n>\r\n> https://codereview.appspot.**com/6976045/diff/39001/misc/**\r\n> dist/bindist.go#newcode617<https://codereview.appspot.com/6976045/diff/39001/misc/dist/bindist.go#newcode617>\r\n>\r\n>> misc/dist/bindist.go:617: walk := func(path string, info os.FileInfo,\r\n>>\r\n> err error)\r\n>\r\n>> error {\r\n>> On 2013/01/15 23:47:12, adg wrote:\r\n>> > s/path/srcPath/ in this func\r\n>>\r\n>\r\n>  Done.\r\n>>\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.**com/6976045/<https://codereview.appspot.com/6976045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-17 00:35:54.378180",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/6976045/diff/48002/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/48002/misc/dist/bindist.go#newcode614\nmisc/dist/bindist.go:614: stat, err := sf.Stat()\nAdded this to make the binary \"tour\" runnable.\n\nhttps://codereview.appspot.com/6976045/diff/48002/misc/dist/bindist.go#newcode625\nmisc/dist/bindist.go:625: if err != nil {\nThis happened, when the src file didn't exist.\nIn that case info was nil and the code would panic.",
			"disapproval": false,
			"date": "2013-01-24 01:07:15.764020",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Just nitpicky stuff\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode67\nmisc/dist/bindist.go:67: \ncreate top level variables:\n\nvar tourPackages = []string{\n \"pic\",\n \"tree\",\n \"wc\",\n}\n\nvar tourContent = []string{\n \"prog\",\n \"solutions\",\n \"static\",\n \"template\",\n \"tour.article\",\n}\n\nas these will need to be updated from time to time.\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode356\nmisc/dist/bindist.go:356: binDst  = filepath.Join(b.root, \"pkg\", \"tool\", b.OS+\"_\"+b.Arch, \"tour\")\nI'd prefer to declare each of these variables just before the sites they are used.\nIn the case of binDst and binSrc they're only used once and it might just be clearer not to declare the temporary variable. They could  just be inlined in the cp call:\n\n// Copy gotour binary to tool directory as \"tour\"; invoked as \"go tool tour\".\nreturn cp(\n    filepath.Join(b.root, \"pkg\", \"tool\", b.OS+\"_\"+b.Arch, \"tour\"),\n    filepath.Join(b.gopath, \"bin\", \"gotour\"),\n)\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode358\nmisc/dist/bindist.go:358: miscDir = filepath.Join(b.root, \"misc\", \"tour\")\ns/miscDir/contentDir/\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode361\nmisc/dist/bindist.go:361: // Relative path to the tour from GOPATH\nit's the import path, actually\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode364\nmisc/dist/bindist.go:364: tourDst = filepath.Join(miscDir, \"src\", tourPkg)\ns/tourDst/packageDir/\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode372\nmisc/dist/bindist.go:372: for _, dir := range []string{miscDir, tourDst} {\nPerhaps just do the MkdirAll inside cpAllDir.\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode381\nmisc/dist/bindist.go:381: res := []string{\"prog\", \"solutions\", \"static\", \"template\", \"tour.article\"}\ns/res/content/",
			"disapproval": false,
			"date": "2013-01-24 02:12:46.413350",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode67\nmisc/dist/bindist.go:67: \nOn 2013/01/24 02:12:46, adg wrote:\n> create top level variables:\n> \n> var tourPackages = []string{\n>  \"pic\",\n>  \"tree\",\n>  \"wc\",\n> }\n> \n> var tourContent = []string{\n>  \"prog\",\n>  \"solutions\",\n>  \"static\",\n>  \"template\",\n>  \"tour.article\",\n> }\n> \n> as these will need to be updated from time to time.\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode356\nmisc/dist/bindist.go:356: binDst  = filepath.Join(b.root, \"pkg\", \"tool\", b.OS+\"_\"+b.Arch, \"tour\")\nOn 2013/01/24 02:12:46, adg wrote:\n> I'd prefer to declare each of these variables just before the sites they are\n> used.\n> In the case of binDst and binSrc they're only used once and it might just be\n> clearer not to declare the temporary variable. They could  just be inlined in\n> the cp call:\n> \n> // Copy gotour binary to tool directory as \"tour\"; invoked as \"go tool tour\".\n> return cp(\n>     filepath.Join(b.root, \"pkg\", \"tool\", b.OS+\"_\"+b.Arch, \"tour\"),\n>     filepath.Join(b.gopath, \"bin\", \"gotour\"),\n> )\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode358\nmisc/dist/bindist.go:358: miscDir = filepath.Join(b.root, \"misc\", \"tour\")\nOn 2013/01/24 02:12:46, adg wrote:\n> s/miscDir/contentDir/\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode361\nmisc/dist/bindist.go:361: // Relative path to the tour from GOPATH\nOn 2013/01/24 02:12:46, adg wrote:\n> it's the import path, actually\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode364\nmisc/dist/bindist.go:364: tourDst = filepath.Join(miscDir, \"src\", tourPkg)\nOn 2013/01/24 02:12:46, adg wrote:\n> s/tourDst/packageDir/\n\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode372\nmisc/dist/bindist.go:372: for _, dir := range []string{miscDir, tourDst} {\nOn 2013/01/24 02:12:46, adg wrote:\n> Perhaps just do the MkdirAll inside cpAllDir.\nActually it was already doing it :-)\nDone.\n\nhttps://codereview.appspot.com/6976045/diff/52001/misc/dist/bindist.go#newcode381\nmisc/dist/bindist.go:381: res := []string{\"prog\", \"solutions\", \"static\", \"template\", \"tour.article\"}\nOn 2013/01/24 02:12:46, adg wrote:\n> s/res/content/\n\nDone.",
			"disapproval": false,
			"date": "2013-01-25 03:05:58.013090",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6976045/diff/59001/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/59001/misc/dist/bindist.go#newcode619\nmisc/dist/bindist.go:619: stat, err := sf.Stat()\nlooks like a fix for a separate issue. please put it in a followup cl",
			"disapproval": false,
			"date": "2013-01-29 04:05:59.773790",
			"approval": true
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=9bcb8f09b9dc ***\n\ngo/misc: Adding go-tour to the generated packages for every distribution.\n\nR=adg, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/6976045\n\nhttps://codereview.appspot.com/6976045/diff/59001/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttps://codereview.appspot.com/6976045/diff/59001/misc/dist/bindist.go#newcode619\nmisc/dist/bindist.go:619: stat, err := sf.Stat()\nOn 2013/01/29 04:06:00, adg wrote:\n> looks like a fix for a separate issue. please put it in a followup cl\n\nDone.",
			"disapproval": false,
			"date": "2013-01-29 05:46:53.254530",
			"approval": false
		}
	],
	"owner_email": "campoy@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gocampoy",
	"subject": "code review 6976045: go/misc: Adding go-tour to the generated packages for e...",
	"created": "2012-12-21 02:55:14.086980",
	"patchsets": [
		1,
		2001,
		4001,
		4004,
		5002,
		4006,
		7003,
		5003,
		18001,
		21001,
		24001,
		20002,
		26002,
		29001,
		31001,
		34001,
		34002,
		32002,
		39001,
		41002,
		48001,
		48002,
		52001,
		54002,
		59001,
		63001,
		61002
	],
	"modified": "2013-01-29 05:46:54.556500",
	"closed": true,
	"issue": 6976045
}