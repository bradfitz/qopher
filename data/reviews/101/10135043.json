{
	"description": "[release-branch.go1.1] cmd/cgo: use gcc_struct attribute for packed structs to work around GCC PR52991.\n\n\u00ab\u00ab\u00ab CL 9895043 / ae83f4b0aa29\ncmd/cgo: use gcc_struct attribute for packed structs to work around GCC PR52991.\nFixes issue 5603.\n\nR=iant, dave\nCC=gobot, golang-dev\nhttps://codereview.appspot.com/9895043\n\u00bb\u00bb\u00bb\n\u00ab\u00ab\u00ab CL 10150043 / ??????\ncmd/cgo: makes clang happy by not using __gcc_struct__ attribute.\n\nR=\nCC=golang-dev\nhttps://codereview.appspot.com/10150043\n\u00bb\u00bb\u00bb\n",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"franciscossouza@gmail.com",
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "From memory clang was not usable in 1.1, the external linking\r\nadditions late in the 1.1 cycle broke clang.\r\n\r\nOn Mon, Jun 10, 2013 at 11:06 PM, Francisco Souza\r\n<franciscossouza@gmail.com> wrote:\r\n> What about clang?\r\n>\r\n> # net\r\n> cgo_unix.go:52:31: warning: unknown attribute '__gcc_struct__' ignored\r\n> [-Wattributes]\r\n>         } __attribute__((__packed__, __gcc_struct__)) *a = v;\r\n>                                      ^\r\n> cgo_unix.go:62:31: warning: unknown attribute '__gcc_struct__' ignored\r\n> [-Wattributes]\r\n>         } __attribute__((__packed__, __gcc_struct__)) *a = v;\r\n>                                      ^\r\n> cgo_unix.go:71:31: warning: unknown attribute '__gcc_struct__' ignored\r\n> [-Wattributes]\r\n>         } __attribute__((__packed__, __gcc_struct__)) *a = v;\r\n>                                      ^\r\n> cgo_unix.go:82:31: warning: unknown attribute '__gcc_struct__' ignored\r\n> [-Wattributes]\r\n>         } __attribute__((__packed__, __gcc_struct__)) *a = v;\r\n>                                      ^\r\n> cgo_unix.go:96:31: warning: unknown attribute '__gcc_struct__' ignored\r\n> [-Wattributes]\r\n>         } __attribute__((__packed__, __gcc_struct__)) *a = v;\r\n>                                      ^\r\n> 5 warnings generated.\r\n>\r\n> On Mon, Jun 10, 2013 at 10:00 AM, minux <minux.ma@gmail.com> wrote:\r\n>>\r\n>> On Mon, Jun 10, 2013 at 7:53 PM, Russ Cox <rsc@golang.org> wrote:\r\n>>>\r\n>>> I am worried about this. We don't know how well __gcc_struct__ does or\r\n>>> doesn't work in the other versions of gcc that people might be using. Isn't\r\n>>> there a workaround, namely don't use that version of mingw on Windows?\r\n>>\r\n>> Even GCC 4.0.4 supports this attribute:\r\n>> http://gcc.gnu.org/onlinedocs/gcc-4.0.4/gcc/Type-Attributes.html#index-g_t_0040code_007bgcc_005fstruct_007d-1807\r\n>>>\r\n>>>\r\n>>> It is still possible to use Go without this CL, you just have to use a\r\n>>> working gcc.\r\n>>\r\n>> But the user has to downgrade to GCC 4.6.x or older, however support for\r\n>> those versions have\r\n>> recently ended with the release of GCC 4.8.\r\n>>\r\n>> --\r\n>>\r\n>> ---\r\n>> You received this message because you are subscribed to the Google Groups\r\n>> \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@googlegroups.com.\r\n>> For more options, visit https://groups.google.com/groups/opt_out.\r\n>>\r\n>>\r\n>\r\n>\r\n>\r\n> --\r\n> Francisco Souza\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-10 13:08:32.213450",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-06-09 14:44:50.038970",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd like to propose we include this fix into Go 1.1.1.\n\nfirstly, the bug makes using any 64-bit types as function parameters and\nreturn values in cgo function impossible on certain platforms (windows).\n\nsecondly, the GCC bug is in all maintained versions of gcc (4.7 and above),\nso people don't have workaround (I believe we can ask people to upgrade\nto a new version to workaround a problem, but we shouldn't ask people\nto downgrade to an unmaintained version for workaround).\n\nThank you.",
			"disapproval": false,
			"date": "2013-06-09 14:50:12.730340",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am worried about this. We don't know how well __gcc_struct__ does or\r\ndoesn't work in the other versions of gcc that people might be using. Isn't\r\nthere a workaround, namely don't use that version of mingw on Windows?\r\n\r\nIt is still possible to use Go without this CL, you just have to use a\r\nworking gcc.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-06-10 11:53:18.275680",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jun 10, 2013 at 7:53 PM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> I am worried about this. We don't know how well __gcc_struct__ does or\r\n> doesn't work in the other versions of gcc that people might be using. Isn't\r\n> there a workaround, namely don't use that version of mingw on Windows?\r\n>\r\nEven GCC 4.0.4 supports this attribute:\r\nhttp://gcc.gnu.org/onlinedocs/gcc-4.0.4/gcc/Type-Attributes.html#index-g_t_0040code_007bgcc_005fstruct_007d-1807\r\n\r\n>\r\n> It is still possible to use Go without this CL, you just have to use a\r\n> working gcc.\r\n>\r\nBut the user has to downgrade to GCC 4.6.x or older, however support for\r\nthose versions have\r\nrecently ended with the release of GCC 4.8.\r\n",
			"disapproval": false,
			"date": "2013-06-10 13:00:32.555750",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "What about clang?\r\n\r\n# net\r\ncgo_unix.go:52:31: warning: unknown attribute '__gcc_struct__' ignored\r\n[-Wattributes]\r\n        } __attribute__((__packed__, __gcc_struct__)) *a = v;\r\n                                     ^\r\ncgo_unix.go:62:31: warning: unknown attribute '__gcc_struct__' ignored\r\n[-Wattributes]\r\n        } __attribute__((__packed__, __gcc_struct__)) *a = v;\r\n                                     ^\r\ncgo_unix.go:71:31: warning: unknown attribute '__gcc_struct__' ignored\r\n[-Wattributes]\r\n        } __attribute__((__packed__, __gcc_struct__)) *a = v;\r\n                                     ^\r\ncgo_unix.go:82:31: warning: unknown attribute '__gcc_struct__' ignored\r\n[-Wattributes]\r\n        } __attribute__((__packed__, __gcc_struct__)) *a = v;\r\n                                     ^\r\ncgo_unix.go:96:31: warning: unknown attribute '__gcc_struct__' ignored\r\n[-Wattributes]\r\n        } __attribute__((__packed__, __gcc_struct__)) *a = v;\r\n                                     ^\r\n5 warnings generated.\r\n\r\nOn Mon, Jun 10, 2013 at 10:00 AM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n> On Mon, Jun 10, 2013 at 7:53 PM, Russ Cox <rsc@golang.org> wrote:\r\n>>\r\n>> I am worried about this. We don't know how well __gcc_struct__ does or\r\n>> doesn't work in the other versions of gcc that people might be using. Isn't\r\n>> there a workaround, namely don't use that version of mingw on Windows?\r\n>\r\n> Even GCC 4.0.4 supports this attribute:\r\n> http://gcc.gnu.org/onlinedocs/gcc-4.0.4/gcc/Type-Attributes.html#index-g_t_0040code_007bgcc_005fstruct_007d-1807\r\n>>\r\n>>\r\n>> It is still possible to use Go without this CL, you just have to use a\r\n>> working gcc.\r\n>\r\n> But the user has to downgrade to GCC 4.6.x or older, however support for\r\n> those versions have\r\n> recently ended with the release of GCC 4.8.\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n\r\n\r\n\r\n-- \r\nFrancisco Souza\r\n",
			"disapproval": false,
			"date": "2013-06-10 13:06:25.061270",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jun 10, 2013 at 10:08 AM, Dave Cheney <dave@cheney.net> wrote:\r\n> From memory clang was not usable in 1.1, the external linking\r\n> additions late in the 1.1 cycle broke clang.\r\n\r\nNot really, I use clang and everything worked fine until this CL.\r\n\r\n--\r\nFrancisco Souza\r\n",
			"disapproval": false,
			"date": "2013-06-10 13:57:19.930640",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jun 10, 2013 at 9:56 PM, Francisco Souza\r\n<franciscossouza@gmail.com>wrote:\r\n\r\n> On Mon, Jun 10, 2013 at 10:08 AM, Dave Cheney <dave@cheney.net> wrote:\r\n> > From memory clang was not usable in 1.1, the external linking\r\n> > additions late in the 1.1 cycle broke clang.\r\n>\r\n> Not really, I use clang and everything worked fine until this CL.\r\n>\r\nClang is not working correctly as least on Darwin.\r\n# os/user\r\nlookup_unix.go:64: cannot use _Ctype_size_t(bufSize) (type C.size_t) as\r\ntype C.ulong in function argument\r\n\r\nanyway, i just sent CL 10150043 to not make situation worse for clang.\r\n",
			"disapproval": false,
			"date": "2013-06-10 14:33:37.574040",
			"approval": false
		},
		{
			"sender": "franciscossouza@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jun 10, 2013 at 11:33 AM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n> On Mon, Jun 10, 2013 at 9:56 PM, Francisco Souza <franciscossouza@gmail.com>\r\n> wrote:\r\n>>\r\n>> On Mon, Jun 10, 2013 at 10:08 AM, Dave Cheney <dave@cheney.net> wrote:\r\n>> > From memory clang was not usable in 1.1, the external linking\r\n>> > additions late in the 1.1 cycle broke clang.\r\n>>\r\n>> Not really, I use clang and everything worked fine until this CL.\r\n>\r\n> Clang is not working correctly as least on Darwin.\r\n> # os/user\r\n> lookup_unix.go:64: cannot use _Ctype_size_t(bufSize) (type C.size_t) as type\r\n> C.ulong in function argument\r\n\r\nThat's clang 3.3 or later. With clang 3.2 (which apple calls 4.2), it works.\r\n\r\nOn clang 3.4 (trunk), make.bash's output is worse:\r\nhttps://gist.github.com/fsouza/5749597\r\n\r\n--\r\nFrancisco Souza\r\n",
			"disapproval": false,
			"date": "2013-06-10 15:19:44.673920",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It is fine to make these changes at tip for Go 1.2. This still seems to me\r\ntoo big a change to send out in Go 1.1.1. We have raised the bar\r\nsignificantly for patching 1.x.x releases: it has to be something with\r\nessentially no workaround AND a trivial fix obviously free of bad side\r\neffects. This CL has a workaround (use an older mingw) and the fix is NOT\r\nobviously free of bad side effects. One (clang) has already been reported.\r\nI don't know what others lurk.\r\n\r\nWhat you get in exchange for this much stricter criteria is the regular\r\nrelease schedule: there will be a Go 1.2 in six months. People who really\r\nneed gcc 4.7 on Windows can wait until then.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-06-10 18:39:58.114990",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"franciscossouza@gmail.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-06-10 18:55:35.285920",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 10135043: [release-branch.go1.1] cmd/cgo: use gcc_struct attribut...",
	"created": "2013-06-09 14:38:37.616140",
	"patchsets": [
		1,
		2001,
		4001,
		13001
	],
	"modified": "2013-06-10 18:55:39.716640",
	"closed": true,
	"issue": 10135043
}