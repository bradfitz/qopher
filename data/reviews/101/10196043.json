{
	"description": "runtime: rename _rt0_$GOARCH to _rt0_go\n\nThere's no reason to use a different name on each architecture,\nand doing so makes it impossible for portable code to refer to\nthe original Go runtime entry point. Rename it _rt0_go everywhere.\n\nThis is a global search and replace only.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"minux.ma@gmail.com"
	],
	"reviewers": [
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n On Jun 11, 2013 9:55 PM, <rsc@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> runtime: rename _rt0_$GOARCH to _rt0_go\r\n>\r\n> There's no reason to use a different name on each architecture,\r\n> and doing so makes it impossible for portable code to refer to\r\n> the original Go runtime entry point. Rename it _rt0_go everywhere.\r\n>\r\n> This is a global search and replace only.\r\n>\r\n> Please review this at https://codereview.appspot.**com/10196043/<https://codereview.appspot.com/10196043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/asm_386.s\r\n>   M src/pkg/runtime/asm_amd64.s\r\n>   M src/pkg/runtime/asm_arm.s\r\n>   M src/pkg/runtime/rt0_darwin_**386.s\r\n>   M src/pkg/runtime/rt0_darwin_**amd64.s\r\n>   M src/pkg/runtime/rt0_freebsd_**386.s\r\n>   M src/pkg/runtime/rt0_freebsd_**amd64.s\r\n>   M src/pkg/runtime/rt0_freebsd_**arm.s\r\n>   M src/pkg/runtime/rt0_linux_386.**s\r\n>   M src/pkg/runtime/rt0_linux_**amd64.s\r\n>   M src/pkg/runtime/rt0_linux_arm.**s\r\n>   M src/pkg/runtime/rt0_netbsd_**386.s\r\n>   M src/pkg/runtime/rt0_netbsd_**amd64.s\r\n>   M src/pkg/runtime/rt0_netbsd_**arm.s\r\n>   M src/pkg/runtime/rt0_openbsd_**386.s\r\n>   M src/pkg/runtime/rt0_openbsd_**amd64.s\r\n>   M src/pkg/runtime/rt0_plan9_386.**s\r\n>   M src/pkg/runtime/rt0_plan9_**amd64.s\r\n>   M src/pkg/runtime/rt0_windows_**386.s\r\n>   M src/pkg/runtime/rt0_windows_**amd64.s\r\n>\r\n>\r\n> Index: src/pkg/runtime/asm_386.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/asm_386.s\r\n> +++ b/src/pkg/runtime/asm_386.s\r\n> @@ -4,7 +4,7 @@\r\n>\r\n>  #include \"zasm_GOOS_GOARCH.h\"\r\n>\r\n> -TEXT _rt0_386(SB),7,$0\r\n> +TEXT _rt0_go(SB),7,$0\r\n>         // copy arguments forward on an even stack\r\n>         MOVL    argc+0(FP), AX\r\n>         MOVL    argv+4(FP), BX\r\n> Index: src/pkg/runtime/asm_amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/asm_amd64.s\r\n> +++ b/src/pkg/runtime/asm_amd64.s\r\n> @@ -4,7 +4,7 @@\r\n>\r\n>  #include \"zasm_GOOS_GOARCH.h\"\r\n>\r\n> -TEXT _rt0_amd64(SB),7,$-8\r\n> +TEXT _rt0_go(SB),7,$-8\r\n>         // copy arguments forward on an even stack\r\n>         MOVQ    DI, AX          // argc\r\n>         MOVQ    SI, BX          // argv\r\n> Index: src/pkg/runtime/asm_arm.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/asm_arm.s\r\n> +++ b/src/pkg/runtime/asm_arm.s\r\n> @@ -5,7 +5,7 @@\r\n>  #include \"zasm_GOOS_GOARCH.h\"\r\n>\r\n>  // using frame size $-4 means do not save LR on stack.\r\n> -TEXT _rt0_arm(SB),7,$-4\r\n> +TEXT _rt0_go(SB),7,$-4\r\n>         MOVW    $0xcafebabe, R12\r\n>\r\n>         // copy arguments forward on an even stack\r\n> Index: src/pkg/runtime/rt0_darwin_**386.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_darwin_**386.s\r\n> +++ b/src/pkg/runtime/rt0_darwin_**386.s\r\n> @@ -11,4 +11,4 @@\r\n>         INT     $3\r\n>\r\n>  TEXT main(SB),7,$0\r\n> -       JMP     _rt0_386(SB)\r\n> +       JMP     _rt0_go(SB)\r\n> Index: src/pkg/runtime/rt0_darwin_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_darwin_**amd64.s\r\n> +++ b/src/pkg/runtime/rt0_darwin_**amd64.s\r\n> @@ -9,5 +9,5 @@\r\n>         JMP     AX\r\n>\r\n>  TEXT main(SB),7,$-8\r\n> -       MOVQ    $_rt0_amd64(SB), AX\r\n> +       MOVQ    $_rt0_go(SB), AX\r\n>         JMP     AX\r\n> Index: src/pkg/runtime/rt0_freebsd_**386.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_freebsd_**386.s\r\n> +++ b/src/pkg/runtime/rt0_freebsd_**386.s\r\n> @@ -11,4 +11,4 @@\r\n>         INT     $3\r\n>\r\n>  TEXT main(SB),7,$0\r\n> -       JMP     _rt0_386(SB)\r\n> +       JMP     _rt0_go(SB)\r\n> Index: src/pkg/runtime/rt0_freebsd_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_freebsd_**amd64.s\r\n> +++ b/src/pkg/runtime/rt0_freebsd_**amd64.s\r\n> @@ -9,5 +9,5 @@\r\n>         JMP     AX\r\n>\r\n>  TEXT main(SB),7,$-8\r\n> -       MOVQ    $_rt0_amd64(SB), AX\r\n> +       MOVQ    $_rt0_go(SB), AX\r\n>         JMP     AX\r\n> Index: src/pkg/runtime/rt0_freebsd_**arm.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_freebsd_**arm.s\r\n> +++ b/src/pkg/runtime/rt0_freebsd_**arm.s\r\n> @@ -5,4 +5,4 @@\r\n>  // FreeBSD and Linux use the same linkage to main\r\n>\r\n>  TEXT _rt0_arm_freebsd(SB),7,$-4\r\n> -       B       _rt0_arm(SB)\r\n> +       B       _rt0_go(SB)\r\n> Index: src/pkg/runtime/rt0_linux_386.**s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_linux_**386.s\r\n> +++ b/src/pkg/runtime/rt0_linux_**386.s\r\n> @@ -12,7 +12,7 @@\r\n>         INT     $3\r\n>\r\n>  TEXT main(SB),7,$0\r\n> -       JMP     _rt0_386(SB)\r\n> +       JMP     _rt0_go(SB)\r\n>\r\n>  TEXT _fallback_vdso(SB),7,$0\r\n>         INT     $0x80\r\n> Index: src/pkg/runtime/rt0_linux_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_linux_**amd64.s\r\n> +++ b/src/pkg/runtime/rt0_linux_**amd64.s\r\n> @@ -9,5 +9,5 @@\r\n>         JMP     AX\r\n>\r\n>  TEXT main(SB),7,$-8\r\n> -       MOVQ    $_rt0_amd64(SB), AX\r\n> +       MOVQ    $_rt0_go(SB), AX\r\n>         JMP     AX\r\n> Index: src/pkg/runtime/rt0_linux_arm.**s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_linux_**arm.s\r\n> +++ b/src/pkg/runtime/rt0_linux_**arm.s\r\n> @@ -41,7 +41,7 @@\r\n>         SUB     $4, R13 // fake a stack frame for runtime\u00b7setup_auxv\r\n>         BL      runtime\u00b7setup_auxv(SB)\r\n>         ADD     $4, R13\r\n> -       B       _rt0_arm(SB)\r\n> +       B       _rt0_go(SB)\r\n>\r\n>  TEXT bad_abi<>(SB),7,$-4\r\n>         // give diagnosis and exit\r\n> Index: src/pkg/runtime/rt0_netbsd_**386.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_netbsd_**386.s\r\n> +++ b/src/pkg/runtime/rt0_netbsd_**386.s\r\n> @@ -11,4 +11,4 @@\r\n>         INT     $3\r\n>\r\n>  TEXT main(SB),7,$0\r\n> -       JMP     _rt0_386(SB)\r\n> +       JMP     _rt0_go(SB)\r\n> Index: src/pkg/runtime/rt0_netbsd_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_netbsd_**amd64.s\r\n> +++ b/src/pkg/runtime/rt0_netbsd_**amd64.s\r\n> @@ -9,5 +9,5 @@\r\n>         JMP     AX\r\n>\r\n>  TEXT main(SB),7,$-8\r\n> -       MOVQ    $_rt0_amd64(SB), AX\r\n> +       MOVQ    $_rt0_go(SB), AX\r\n>         JMP     AX\r\n> Index: src/pkg/runtime/rt0_netbsd_**arm.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_netbsd_**arm.s\r\n> +++ b/src/pkg/runtime/rt0_netbsd_**arm.s\r\n> @@ -5,4 +5,4 @@\r\n>  // FreeBSD/NetBSD and Linux use the same linkage to main\r\n>\r\n>  TEXT _rt0_arm_netbsd(SB),7,$-4\r\n> -       B _rt0_arm(SB)\r\n> +       B _rt0_go(SB)\r\n> Index: src/pkg/runtime/rt0_openbsd_**386.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_openbsd_**386.s\r\n> +++ b/src/pkg/runtime/rt0_openbsd_**386.s\r\n> @@ -11,4 +11,4 @@\r\n>         INT     $3\r\n>\r\n>  TEXT main(SB),7,$0\r\n> -       JMP     _rt0_386(SB)\r\n> +       JMP     _rt0_go(SB)\r\n> Index: src/pkg/runtime/rt0_openbsd_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_openbsd_**amd64.s\r\n> +++ b/src/pkg/runtime/rt0_openbsd_**amd64.s\r\n> @@ -9,5 +9,5 @@\r\n>         JMP     AX\r\n>\r\n>  TEXT main(SB),7,$-8\r\n> -       MOVQ    $_rt0_amd64(SB), AX\r\n> +       MOVQ    $_rt0_go(SB), AX\r\n>         JMP     AX\r\n> Index: src/pkg/runtime/rt0_plan9_386.**s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_plan9_**386.s\r\n> +++ b/src/pkg/runtime/rt0_plan9_**386.s\r\n> @@ -33,7 +33,7 @@\r\n>         PUSHL   AX\r\n>         PUSHL   $-1\r\n>\r\n> -       JMP     _rt0_386(SB)\r\n> +       JMP     _rt0_go(SB)\r\n>\r\n>  DATA  runtime\u00b7isplan9(SB)/4, $1\r\n>  GLOBL runtime\u00b7isplan9(SB), $4\r\n> Index: src/pkg/runtime/rt0_plan9_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_plan9_**amd64.s\r\n> +++ b/src/pkg/runtime/rt0_plan9_**amd64.s\r\n> @@ -5,7 +5,7 @@\r\n>  TEXT _rt0_amd64_plan9(SB),7,$-8\r\n>         LEAQ    8(SP), SI // argv\r\n>         MOVQ    0(SP), DI // argc\r\n> -       MOVQ    $_rt0_amd64(SB), AX\r\n> +       MOVQ    $_rt0_go(SB), AX\r\n>         JMP     AX\r\n>\r\n>  DATA runtime\u00b7isplan9(SB)/4, $1\r\n> Index: src/pkg/runtime/rt0_windows_**386.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_windows_**386.s\r\n> +++ b/src/pkg/runtime/rt0_windows_**386.s\r\n> @@ -11,7 +11,7 @@\r\n>         JMP     main(SB)\r\n>\r\n>  TEXT main(SB),7,$0\r\n> -       JMP     _rt0_386(SB)\r\n> +       JMP     _rt0_go(SB)\r\n>\r\n>\r\n>  DATA  runtime\u00b7iswindows(SB)/4, $1\r\n> Index: src/pkg/runtime/rt0_windows_**amd64.s\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/rt0_windows_**amd64.s\r\n> +++ b/src/pkg/runtime/rt0_windows_**amd64.s\r\n> @@ -11,7 +11,7 @@\r\n>         JMP     AX\r\n>\r\n>  TEXT main(SB),7,$-8\r\n> -       MOVQ    $_rt0_amd64(SB), AX\r\n> +       MOVQ    $_rt0_go(SB), AX\r\n>         JMP     AX\r\n>\r\n>  DATA  runtime\u00b7iswindows(SB)/4, $1\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-11 19:57:03.796420",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-06-11 19:55:23.819540",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jun 12, 2013 at 3:55 AM, <rsc@golang.org> wrote:\r\n\r\n> There's no reason to use a different name on each architecture,\r\n> and doing so makes it impossible for portable code to refer to\r\n> the original Go runtime entry point.\r\n>\r\nJust curious, what do you need this ability for? shared Go library?\r\n",
			"disapproval": false,
			"date": "2013-06-11 20:03:30.953090",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I need it because the stack trace routine needs to stop when they unwind\r\nall the way to this function. I'd rather it didn't have three different\r\nnames.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-06-11 20:48:42.391670",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=0648763efe60 ***\n\nruntime: rename _rt0_$GOARCH to _rt0_go\n\nThere's no reason to use a different name on each architecture,\nand doing so makes it impossible for portable code to refer to\nthe original Go runtime entry point. Rename it _rt0_go everywhere.\n\nThis is a global search and replace only.\n\nR=golang-dev, bradfitz, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/10196043",
			"disapproval": false,
			"date": "2013-06-11 20:49:27.710650",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\r\n\r\n\r\n\r\nOn 12/06/2013, at 6:48, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> I need it because the stack trace routine needs to stop when they unwind all the way to this function. I'd rather it didn't have three different names.\r\n> \r\n> Russ\r\n> \r\n> -- \r\n>  \r\n> --- \r\n> You received this message because you are subscribed to the Google Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>  \r\n>  \r\n",
			"disapproval": false,
			"date": "2013-06-11 23:53:52.098510",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 10196043: runtime: rename _rt0_$GOARCH to _rt0_go",
	"created": "2013-06-11 19:53:09.269410",
	"patchsets": [
		1,
		2001,
		2022,
		9001
	],
	"modified": "2013-06-11 23:53:52.197210",
	"closed": true,
	"issue": 10196043
}