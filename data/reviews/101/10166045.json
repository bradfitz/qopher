{
	"description": "go.tools/ssa: small changes accumulated during gri's vacation. :)\n\nMethod sets:\n- Simplify CallCommon.\n  Avoid the implicit copy when calling a T method on a *T\n  receiver.  This simplifies clients.  Instead we generate\n  \"indirection wrapper\" functions that do this (like gc does).\n  New invariant:\n  m's receiver type is exactly T for all m in MethodSet(T)\n- MakeInterface no longer holds the concrete type's MethodSet.\n  We can defer its computation this way.\n- ssa.Type now just wraps a types.TypeName object.\n  MethodSets are computed as needed, not eagerly.\n\nPosition info:\n- new CanonicalPos utility maps ast.Expr to canonical\n  token.Pos, as returned by {Instruction,Value}.Pos() methods.\n- Don't set posn for implicit operations (e.g. varargs array alloc)\n- Set position info for ChangeInterface and Slice instructions.\n\nCosmetic:\n- add Member.Token() method\n- simplify isPointer\n- Omit words \"interface\", \"slice\" when printing MakeInterface,\n  MakeSlice; the type is enough.\n- Comments on PathEnclosingInterval.\n- Remove Function.FullName() where implicit String() suffices.\n\nAlso:\n- Exposed NewLiteral to clients.\n- Added ssa.Instruction.Parent() *Function\n  Added ssa.BasicBlock.Parent() *Function.\n  Added Sanity checks for above.",
	"cc": [
		"golang-dev@googlegroups.com",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-06-13 18:19:37.569500",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=143bdde18cb6&repo=tools ***\n\ngo.tools/ssa: small changes accumulated during gri's vacation. :)\n\nMethod sets:\n- Simplify CallCommon.\n  Avoid the implicit copy when calling a T method on a *T\n  receiver.  This simplifies clients.  Instead we generate\n  \"indirection wrapper\" functions that do this (like gc does).\n  New invariant:\n  m's receiver type is exactly T for all m in MethodSet(T)\n- MakeInterface no longer holds the concrete type's MethodSet.\n  We can defer its computation this way.\n- ssa.Type now just wraps a types.TypeName object.\n  MethodSets are computed as needed, not eagerly.\n\nPosition info:\n- new CanonicalPos utility maps ast.Expr to canonical\n  token.Pos, as returned by {Instruction,Value}.Pos() methods.\n- Don't set posn for implicit operations (e.g. varargs array alloc)\n- Set position info for ChangeInterface and Slice instructions.\n\nCosmetic:\n- add Member.Token() method\n- simplify isPointer\n- Omit words \"interface\", \"slice\" when printing MakeInterface,\n  MakeSlice; the type is enough.\n- Comments on PathEnclosingInterval.\n- Remove Function.FullName() where implicit String() suffices.\n\nAlso:\n- Exposed NewLiteral to clients.\n- Added ssa.Instruction.Parent() *Function\n  Added ssa.BasicBlock.Parent() *Function.\n  Added Sanity checks for above.\n\nR=golang-dev, gri\nCC=golang-dev\nhttps://codereview.appspot.com/10166045\n\nhttps://codereview.appspot.com/10166045/diff/12016/ssa/emit.go\nFile ssa/emit.go (right):\n\nhttps://codereview.appspot.com/10166045/diff/12016/ssa/emit.go#newcode199\nssa/emit.go:199: //x1\nOn 2013/06/13 18:32:48, gri wrote:\n> dregg?\n\nOops, fixed.\n\nhttps://codereview.appspot.com/10166045/diff/12016/ssa/source.go\nFile ssa/source.go (right):\n\nhttps://codereview.appspot.com/10166045/diff/12016/ssa/source.go#newcode224\nssa/source.go:224: return token.NoPos\nOn 2013/06/13 18:32:48, gri wrote:\n> perhaps a newline before the return?\n\nDone.",
			"disapproval": false,
			"date": "2013-06-13 18:43:37.322490",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/10166045/diff/12016/ssa/emit.go\nFile ssa/emit.go (right):\n\nhttps://codereview.appspot.com/10166045/diff/12016/ssa/emit.go#newcode199\nssa/emit.go:199: //x1\ndregg?\n\nhttps://codereview.appspot.com/10166045/diff/12016/ssa/source.go\nFile ssa/source.go (right):\n\nhttps://codereview.appspot.com/10166045/diff/12016/ssa/source.go#newcode224\nssa/source.go:224: return token.NoPos\nperhaps a newline before the return?",
			"disapproval": false,
			"date": "2013-06-13 18:32:48.156310",
			"approval": true
		}
	],
	"owner_email": "adonovan@google.com",
	"private": false,
	"base_url": "",
	"owner": "adonovan",
	"subject": "code review 10166045: go.tools/ssa: small changes accumulated during gri's vacation. :)",
	"created": "2013-06-11 16:42:06.590850",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		11001,
		12016,
		19002
	],
	"modified": "2013-06-13 18:43:38.501090",
	"closed": true,
	"issue": 10166045
}