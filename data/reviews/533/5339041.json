{
	"description": "httputil: move dump and chunking functions out of http\n\nThis moves DumpRequest, DumpResponse, NewChunkedReader,\nand NewChunkedWriter out of http, as part of the continued\nhttp diet plan.\n\nAlso, adds DumpRequestOut (for dumping outbound requests),\nsince DumpRequest's ambiguity (the \"wire representation\" in\nwhat direction?) was often a source of confusion and bug\nreports.",
	"cc": [
		"rsc@golang.org",
		"adg@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Well, I hate them less now, now that we have both halves, they're\ndocumented, and they're out of http.\n\nPeople obviously use them if they're filing bugs on them.  I've used them\ntoo when debugging stuff, so they're _occasionally_ useful.\n\n\nOn Thu, Nov 3, 2011 at 5:29 PM, Russ Cox <rsc@golang.org> wrote:\n\n> Can we delete them?\n>\n",
			"disapproval": false,
			"date": "2011-11-04 00:31:30.292276",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Nov 3, 2011 at 5:26 PM, Russ Cox <rsc@golang.org> wrote:\n\n> I'm confused.  How can the outgoing wire representation\n> be different from the incoming wire representation?\n> That's not a very good wire.\n\n\narrggh.  I hate these Dump functions so much.\n\nYou may not remember\nhttp://code.google.com/p/go/source/detail?r=8d5b60fed6b9 , but I do.\n",
			"disapproval": false,
			"date": "2011-11-04 00:28:23.972661",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Can we delete them?\n",
			"disapproval": false,
			"date": "2011-11-04 00:30:00.433820",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Missing a file in the CL?\nThere are no httputil/*_test.go files.\n",
			"disapproval": false,
			"date": "2011-11-04 00:38:48.330551",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-04 00:15:24.090070",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I'm confused.  How can the outgoing wire representation\nbe different from the incoming wire representation?\nThat's not a very good wire.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-04 00:26:04.216829",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5339041/diff/8001/src/pkg/net/http/httputil/dump.go\nFile src/pkg/net/http/httputil/dump.go (right):\n\nhttp://codereview.appspot.com/5339041/diff/8001/src/pkg/net/http/httputil/dump.go#newcode46\nsrc/pkg/net/http/httputil/dump.go:46: // DumpRequestOut returns the outbound wire representation of req,\nDelete entire paragraph (mostly duplicated with DumpRequest).\n\n// DumpRequestOut is like DumpRequest but includes\n// headers that the standard http.Transport adds,\n// such as X-Whatever.",
			"disapproval": false,
			"date": "2011-11-04 00:34:09.542098",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "The difference is the wire as we get it (as a Server) vs the wire as we\nsend it (for Transport, adding our User-Agent and HTTP/1.1, etc)\n\nAlso, I need to update the docs on Request so say it's used for two\npurposes.  The current docs say that Request is only for incoming stuff.\n\n\nOn Thu, Nov 3, 2011 at 5:28 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n> On Thu, Nov 3, 2011 at 5:26 PM, Russ Cox <rsc@golang.org> wrote:\n>\n>> I'm confused.  How can the outgoing wire representation\n>> be different from the incoming wire representation?\n>> That's not a very good wire.\n>\n>\n> arrggh.  I hate these Dump functions so much.\n>\n> You may not remember\n> http://code.google.com/p/go/source/detail?r=8d5b60fed6b9 , but I do.\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-11-04 00:29:56.899381",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Nov 3, 2011 at 5:34 PM, <rsc@golang.org> wrote:\n\n> LGTM\n>\n> Should the tests move too?\n>\n\nWhich?\n\nI got DumpRequest's.\n\nChunked could use some [more?] tests.  Didn't see any.  I'll add some\nbefore submitting.\n",
			"disapproval": false,
			"date": "2011-11-04 00:36:43.487898",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nShould the tests move too?",
			"disapproval": false,
			"date": "2011-11-04 00:34:52.370390",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Nov 3, 2011 at 5:38 PM, Russ Cox <rsc@golang.org> wrote:\n\n> Missing a file in the CL?\n> There are no httputil/*_test.go files.\n>\n\nOh, indeed.\n\n\"hg p\" normally tells me that, but isn't now.  hg status does:\n\n$ hg p\n5339041:\nhttputil: move dump and chunking functions out of http\n DumpRequest, DumpResponse, NewChunkedReader, NewChunkedWriter\n Also, adds DumpRequestOut (for dumping outbound requests),\nsince DumpRequest's ambiguity (the \"wire representation\" in\nwhat direction?) was often a source of confusion and bug\nreports.\n\nReviewer: rsc@golang.org\nrsc: LGTM\nCC: golang-dev@googlegroups.com\nFiles:\nsrc/pkg/net/http/Makefile\nsrc/pkg/net/http/chunked.go\nsrc/pkg/net/http/dump.go\nsrc/pkg/net/http/httputil/Makefile\nsrc/pkg/net/http/httputil/chunked.go\nsrc/pkg/net/http/httputil/dump.go\nsrc/pkg/net/http/request.go\nsrc/pkg/net/http/requestwrite_test.go\nsrc/pkg/net/http/transfer.go\n\n$ hg st\nM src/pkg/net/http/Makefile\nM src/pkg/net/http/chunked.go\nM src/pkg/net/http/httputil/Makefile\nM src/pkg/net/http/request.go\nM src/pkg/net/http/requestwrite_test.go\nM src/pkg/net/http/transfer.go\nA src/pkg/net/http/httputil/chunked.go\nA src/pkg/net/http/httputil/dump.go\nR src/pkg/net/http/dump.go\n? src/pkg/net/http/httputil/#dump.go#\n? src/pkg/net/http/httputil/dump_test.go\n",
			"disapproval": false,
			"date": "2011-11-04 00:40:05.990647",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-04 01:02:28.034277",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=37533e1cfe43 ***\n\nhttputil: move dump and chunking functions out of http\n\nThis moves DumpRequest, DumpResponse, NewChunkedReader,\nand NewChunkedWriter out of http, as part of the continued\nhttp diet plan.\n\nAlso, adds DumpRequestOut (for dumping outbound requests),\nsince DumpRequest's ambiguity (the \"wire representation\" in\nwhat direction?) was often a source of confusion and bug\nreports.\n\nR=rsc, adg\nCC=golang-dev\nhttp://codereview.appspot.com/5339041",
			"disapproval": false,
			"date": "2011-11-04 01:12:55.017803",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-04 00:46:51.603171",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Now with chunking tests. And the old dump tests actually in the CL.\n\nOn Thu, Nov 3, 2011 at 6:02 PM, <bradfitz@golang.org> wrote:\n\n> Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**5339041/<http://codereview.appspot.com/5339041/>\n>\n",
			"disapproval": false,
			"date": "2011-11-04 01:03:28.426410",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5339041/diff/15002/src/pkg/net/http/httputil/chunked_test.go\nFile src/pkg/net/http/httputil/chunked_test.go (right):\n\nhttp://codereview.appspot.com/5339041/diff/15002/src/pkg/net/http/httputil/chunked_test.go#newcode21\nsrc/pkg/net/http/httputil/chunked_test.go:21: if g, e := b.String(), \"7\\r\\nhello, \\r\\n17\\r\\nworld! 0123456789abcdef\\r\\n0\\r\\n\"; g != e {\ncan you programmatically generate the expected string?\n\nconst msg1 = \"hello, \"\nconst msg2 = \"world! sdafhdshfdsa\"\nw.Write([]byte(msg1))\nw.Write([]byte(msg2))\n\nexp1 := fmt.Sprintf(\"%d\\r\\n%s\\r\\n%d\\r\\n%s\\r\\n0\\r\\n\", len(msg1), msg1, len(msg2), msg2)\nexp2 := msg1 + msg2",
			"disapproval": false,
			"date": "2011-11-04 01:06:59.545597",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Done, to some degree.  I don't want to replicate the code in the test,\nthough, otherwise what am I testing?  I think it's fine to have some golden\ndata in tests.\n\nBut I did kill some of the stutter.\n\n\nOn Thu, Nov 3, 2011 at 6:06 PM, <adg@golang.org> wrote:\n\n> LGTM\n>\n>\n> http://codereview.appspot.com/**5339041/diff/15002/src/pkg/**\n> net/http/httputil/chunked_**test.go<http://codereview.appspot.com/5339041/diff/15002/src/pkg/net/http/httputil/chunked_test.go>\n> File src/pkg/net/http/httputil/**chunked_test.go (right):\n>\n> http://codereview.appspot.com/**5339041/diff/15002/src/pkg/**\n> net/http/httputil/chunked_**test.go#newcode21<http://codereview.appspot.com/5339041/diff/15002/src/pkg/net/http/httputil/chunked_test.go#newcode21>\n> src/pkg/net/http/httputil/**chunked_test.go:21: if g, e := b.String(),\n> \"7\\r\\nhello, \\r\\n17\\r\\nworld! 0123456789abcdef\\r\\n0\\r\\n\"; g != e {\n> can you programmatically generate the expected string?\n>\n> const msg1 = \"hello, \"\n> const msg2 = \"world! sdafhdshfdsa\"\n> w.Write([]byte(msg1))\n> w.Write([]byte(msg2))\n>\n> exp1 := fmt.Sprintf(\"%d\\r\\n%s\\r\\n%d\\r\\**n%s\\r\\n0\\r\\n\", len(msg1), msg1,\n> len(msg2), msg2)\n> exp2 := msg1 + msg2\n>\n> http://codereview.appspot.com/**5339041/<http://codereview.appspot.com/5339041/>\n>\n",
			"disapproval": false,
			"date": "2011-11-04 01:09:59.525927",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "hg p only tells you if you have hg add'ed the file\n",
			"disapproval": false,
			"date": "2011-11-04 01:11:08.874894",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5339041: httputil: move dump and chunking functions out of http",
	"created": "2011-11-04 00:15:08.586537",
	"patchsets": [
		1,
		2001,
		2002,
		8001,
		15001,
		15002,
		17020
	],
	"modified": "2011-11-04 01:12:55.970274",
	"closed": true,
	"issue": 5339041
}