{
	"description": "bytes: add assembly version of Equal for ARM\n\nBenchmarkEqual32                       662          159  -75.98%\nBenchmarkEqual4K                     76545        13719  -82.08%\nBenchmarkEqual4M                  90136700     23588870  -73.83%\nBenchmarkEqual64M               2147483647   1419616000  -42.63%\n\nBenchmarkEqual32                     48.32       201.15    4.16x\nBenchmarkEqual4K                     53.51       298.56    5.58x\nBenchmarkEqual4M                     46.53       177.81    3.82x\nBenchmarkEqual64M                    27.12        47.27    1.74x",
	"cc": [
		"golang-dev@googlegroups.com",
		"qyzhai@gmail.com",
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"iant@golang.org",
		"nigeltao@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The benchmark numbers above are incorrect due to the allocator influencing the benchmark time. I have made a possible fix to the benchmark (at the cost of a 128mb static allocation). \n\nhttp://codereview.appspot.com/6116048\n\nHere is the same test with the new becnhmark code\n\nBenchmarkEqual32                       670          152  -77.31%\nBenchmarkEqual4K                     76629        12306  -83.94%\nBenchmarkEqual4M                  78468300     12575380  -83.97%\nBenchmarkEqual64M               1284210000    201596100  -84.30%\n\nBenchmarkEqual32                     47.75       209.76    4.39x\nBenchmarkEqual4K                     53.45       332.83    6.23x\nBenchmarkEqual4M                     53.45       333.53    6.24x\nBenchmarkEqual64M                    52.26       332.89    6.37x",
			"disapproval": false,
			"date": "2012-04-25 03:41:09.196876",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-04-25 03:38:54.956442",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the suggestion, again the cost of those conditional\r\ninstructions appears to be slightly higher.\r\n\r\nPASS\r\nBenchmarkEqual32        10000000               163 ns/op         195.65 MB/s\r\nBenchmarkEqual4K          100000             14388 ns/op         284.67 MB/s\r\nBenchmarkEqual4M             100          14700010 ns/op         285.33 MB/s\r\nBenchmarkEqual64M              5         234979400 ns/op         285.59 MB/s\r\n\r\nOn Wed, Apr 25, 2012 at 2:31 PM, zhai <qyzhai@gmail.com> wrote:\r\n> Here is a \u00a0slight change to your code,\u00a0re-ranged instructions,\u00a0\u00a0maybe save\r\n> 2-3 cycles in the inner loop. 5a compiles passed, but I don't have a arm box\r\n> to test it.\r\n>\r\n> TEXT \u00b7Equal(SB),7,$0\r\n> MOVW aptr+0(FP), R0\r\n> MOVW alen+4(FP), R1\r\n> MOVW bptr+12(FP), R2\r\n> MOVW blen+16(FP), R3\r\n> CMP R1, R3 // unequal lengths are not equal\r\n> B.NE _notequal\r\n>\r\n> CMP $0, R1\r\n> B.EQ _equal // lengths \u00a0= 0\r\n> MOVBU.NE.P 1(R0), R4\r\n> MOVBU.NE.P 1(R2), R5\r\n> _next:\r\n> CMP R4, R5\r\n> B.NE \u00a0 \u00a0_notequal\r\n> SUB.S \u00a0 $1, R1\r\n> MOVBU.NE.P 1(R0), R4\r\n> MOVBU.NE.P 1(R2), R5\r\n> B.NE _next\r\n>\r\n> _equal:\r\n> MOVW $1, R0\r\n> MOVW R0, equal+24(FP)\r\n> RET\r\n>\r\n> _notequal:\r\n> MOVW $0, R0\r\n> MOVW R0, equal+24(FP)\r\n> RET\r\n>\r\n",
			"disapproval": false,
			"date": "2012-04-25 06:13:04.331269",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please take another look.",
			"disapproval": false,
			"date": "2012-04-26 21:13:08.360652",
			"approval": false
		},
		{
			"sender": "qyzhai@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Here is a  slight change to your code, re-ranged instructions,  maybe save\r\n2-3 cycles in the inner loop. 5a compiles passed, but I don't have a arm\r\nbox to test it.\r\n\r\nTEXT \u00b7Equal(SB),7,$0\r\nMOVW aptr+0(FP), R0\r\nMOVW alen+4(FP), R1\r\nMOVW bptr+12(FP), R2\r\nMOVW blen+16(FP), R3\r\n CMP R1, R3 // unequal lengths are not equal\r\nB.NE _notequal\r\n\r\nCMP $0, R1\r\nB.EQ _equal // lengths  = 0\r\n MOVBU.NE.P 1(R0), R4\r\nMOVBU.NE.P 1(R2), R5\r\n_next:\r\n CMP R4, R5\r\nB.NE    _notequal\r\nSUB.S   $1, R1\r\nMOVBU.NE.P 1(R0), R4\r\nMOVBU.NE.P 1(R2), R5\r\nB.NE _next\r\n\r\n_equal:\r\nMOVW $1, R0\r\nMOVW R0, equal+24(FP)\r\nRET\r\n\r\n_notequal:\r\nMOVW $0, R0\r\nMOVW R0, equal+24(FP)\r\nRET\r\n",
			"disapproval": false,
			"date": "2012-04-25 04:31:13.296925",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2012-04-29 23:32:09.050266",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, qyzhai@gmail.com, minux.ma@gmail.com, rsc@golang.org, iant@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-01 02:22:00.398852",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6118049/diff/4001/src/pkg/bytes/asm_arm.s\nFile src/pkg/bytes/asm_arm.s (right):\n\nhttp://codereview.appspot.com/6118049/diff/4001/src/pkg/bytes/asm_arm.s#newcode30\nsrc/pkg/bytes/asm_arm.s:30: MOVW\taptr+0(FP), R0\nI would move the loads of aptr and bptr to below the comparison of alen and blen.\n\nhttp://codereview.appspot.com/6118049/diff/4001/src/pkg/bytes/asm_arm.s#newcode35\nsrc/pkg/bytes/asm_arm.s:35: CMP\tR1, R3\t\t// unequal lengths are not equal\nI think I make it a little smaller, along the lines of:\n\n  movw $0,r6\n  cmp r1,r3\n  b.ne _ret\n\n  add r0,r1\n  b _start\n\n_next:\n  movbu.p 1(r0),r5\n  movbu.p 1(r2),r5\n  cmp r4,r5\n  b.ne _ret\n\n_start:\n  cmp r0,r1\n  b.ne _next\n\n  movw $1,r6\n\n_ret:\n  movw r6,equal+24(fp)\n  ret",
			"disapproval": false,
			"date": "2012-04-30 23:32:05.632242",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Patch set 6 turned out to regress, here are the performance numbers for patch set 7.\n\nBenchmarkEqual32        10000000               150 ns/op         212.15 MB/s\nBenchmarkEqual4K          200000             12314 ns/op         332.60 MB/s\nBenchmarkEqual4M             100          12597660 ns/op         332.94 MB/s\nBenchmarkEqual64M              5         201660200 ns/op         332.78 MB/s",
			"disapproval": false,
			"date": "2012-05-01 02:27:57.482586",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-05-01 05:43:16.103231",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for your review ian. I've tweaked it a bit more to incorporate as many of suggestions as possible.\n\nBenchmarkEqual32        10000000               158 ns/op         202.35 MB/s\nBenchmarkEqual4K          100000             13683 ns/op         299.33 MB/s\nBenchmarkEqual4M             100          12598580 ns/op         332.92 MB/s\nBenchmarkEqual64M              5         201489200 ns/op         333.06 MB/s\n\nhttp://codereview.appspot.com/6118049/diff/4001/src/pkg/bytes/asm_arm.s\nFile src/pkg/bytes/asm_arm.s (right):\n\nhttp://codereview.appspot.com/6118049/diff/4001/src/pkg/bytes/asm_arm.s#newcode30\nsrc/pkg/bytes/asm_arm.s:30: MOVW\taptr+0(FP), R0\nOn 2012/04/30 23:32:06, iant wrote:\n> I would move the loads of aptr and bptr to below the comparison of alen and\n> blen.\n\nDone. That shaved another 9ns (and similar %'s) from Equal32.\n\nhttp://codereview.appspot.com/6118049/diff/4001/src/pkg/bytes/asm_arm.s#newcode35\nsrc/pkg/bytes/asm_arm.s:35: CMP\tR1, R3\t\t// unequal lengths are not equal\nHmm, turned out to be slower. I think it is the forward branch to _start.\n\nBenchmarkEqual32        10000000               259 ns/op         123.49 MB/s\nBenchmarkEqual4K          100000             28641 ns/op         143.01 MB/s\nBenchmarkEqual4M              50          29295640 ns/op         143.17 MB/s\nBenchmarkEqual64M              5         469024800 ns/op         143.08 MB/s\n\nOn 2012/04/30 23:32:06, iant wrote:\n> I think I make it a little smaller, along the lines of:\n> \n>   movw $0,r6\n>   cmp r1,r3\n>   b.ne _ret\n> \n>   add r0,r1\n>   b _start\n> \n> _next:\n>   movbu.p 1(r0),r5\n>   movbu.p 1(r2),r5\n>   cmp r4,r5\n>   b.ne _ret\n> \n> _start:\n>   cmp r0,r1\n>   b.ne _next\n> \n>   movw $1,r6\n> \n> _ret:\n>   movw r6,equal+24(fp)\n>   ret",
			"disapproval": false,
			"date": "2012-05-01 02:21:42.731551",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you to everyone for your comments. Once there are a few more builders reporting in I will submit this change.",
			"disapproval": false,
			"date": "2012-05-01 22:56:20.446512",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6118049/diff/20001/src/pkg/bytes/asm_arm.s\nFile src/pkg/bytes/asm_arm.s (right):\n\nhttp://codereview.appspot.com/6118049/diff/20001/src/pkg/bytes/asm_arm.s#newcode45\nsrc/pkg/bytes/asm_arm.s:45: CMP \tR4, R5\nMixed spaces and tabs after \"CMP\".",
			"disapproval": false,
			"date": "2012-05-01 23:07:56.439862",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Will fix\r\n\r\nOn Wed, May 2, 2012 at 9:07 AM,  <nigeltao@golang.org> wrote:\r\n>\r\n> http://codereview.appspot.com/6118049/diff/20001/src/pkg/bytes/asm_arm.s\r\n> File src/pkg/bytes/asm_arm.s (right):\r\n>\r\n> http://codereview.appspot.com/6118049/diff/20001/src/pkg/bytes/asm_arm.s#newcode45\r\n> src/pkg/bytes/asm_arm.s:45: CMP \u00a0 \u00a0 \u00a0 \u00a0 R4, R5\r\n> Mixed spaces and tabs after \"CMP\".\r\n>\r\n> http://codereview.appspot.com/6118049/\r\n",
			"disapproval": false,
			"date": "2012-05-01 23:08:17.340110",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "gofmt has made me lazy, i'll be more careful to check the formatting in the future.\n\nhttp://codereview.appspot.com/6118049/diff/20001/src/pkg/bytes/asm_arm.s\nFile src/pkg/bytes/asm_arm.s (right):\n\nhttp://codereview.appspot.com/6118049/diff/20001/src/pkg/bytes/asm_arm.s#newcode45\nsrc/pkg/bytes/asm_arm.s:45: CMP \tR4, R5\nOn 2012/05/01 23:07:56, nigeltao wrote:\n> Mixed spaces and tabs after \"CMP\".\n\nDone.",
			"disapproval": false,
			"date": "2012-05-01 23:14:48.065639",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"qyzhai@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"nigeltao@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3a60780b99eb ***\n\nbytes: add assembly version of Equal for ARM\n\nBenchmarkEqual32                       662          159  -75.98%\nBenchmarkEqual4K                     76545        13719  -82.08%\nBenchmarkEqual4M                  90136700     23588870  -73.83%\nBenchmarkEqual64M               2147483647   1419616000  -42.63%\n\nBenchmarkEqual32                     48.32       201.15    4.16x\nBenchmarkEqual4K                     53.51       298.56    5.58x\nBenchmarkEqual4M                     46.53       177.81    3.82x\nBenchmarkEqual64M                    27.12        47.27    1.74x\n\nR=golang-dev, qyzhai, minux.ma, rsc, iant, nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/6118049",
			"disapproval": false,
			"date": "2012-05-02 02:18:34.272326",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6118049: bytes: add assembly version of Equal for ARM",
	"created": "2012-04-25 03:31:16.985277",
	"patchsets": [
		1,
		2001,
		4001,
		11001,
		13001,
		11002,
		20001,
		24001,
		28001
	],
	"modified": "2012-05-02 02:20:24.750329",
	"closed": true,
	"issue": 6118049
}