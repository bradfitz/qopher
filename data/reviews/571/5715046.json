{
	"description": "sync: add Once example",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"bradfitz@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Does it have to allocate though? It doesn't close over anything and funcs\ncan no longer ==. The compiler could generate this once, right?\nOn Mar 1, 2012 8:19 AM, \"Russ Cox\" <rsc@golang.org> wrote:\n\n> This is an unfortunate example, because it allocates the closure on each\n> run.\n> Better to use a function.\n>\n",
			"disapproval": false,
			"date": "2012-03-01 17:17:08.532752",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-03-01 18:14:32.498262",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Mar 1, 2012 at 12:17, Brad Fitzpatrick <bradfitz@google.com> wrote:\n> Does it have to allocate though? It doesn't close over anything and funcs\n> can no longer ==. The compiler could generate this once, right?\n\nIt does, now, but having to explain that distracts from the example.\n",
			"disapproval": false,
			"date": "2012-03-01 17:18:23.445419",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-01 12:00:42.786841",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is an unfortunate example, because it allocates the closure on each run.\nBetter to use a function.\n",
			"disapproval": false,
			"date": "2012-03-01 16:19:00.118755",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, bradfitz@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-01 17:24:11.389601",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"bradfitz@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=096c7653c6b5 ***\n\nsync: add Once example\n\nR=golang-dev, rsc, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5715046",
			"disapproval": false,
			"date": "2012-03-01 18:16:25.100970",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 5715046: sync: add Once example",
	"created": "2012-03-01 11:56:34.376765",
	"patchsets": [
		1,
		1002,
		3,
		5,
		1005,
		2004
	],
	"modified": "2012-03-01 18:16:26.421791",
	"closed": true,
	"issue": 5715046
}