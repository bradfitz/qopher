{
	"description": "strconv: handle very large inputs\n\nFixes issue 2642.",
	"cc": [
		"remyoudompheng@gmail.com",
		"r@golang.org",
		"r@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5639052/diff/1002/src/pkg/strconv/decimal.go\nFile src/pkg/strconv/decimal.go (right):\n\nhttp://codereview.appspot.com/5639052/diff/1002/src/pkg/strconv/decimal.go#newcode15\nsrc/pkg/strconv/decimal.go:15: d     [800]byte // digits\nLGTM for now, but i was thinking it might be a better idea (although more work) to use a small buffer here, suitable for almost all inputs, and overflow to an allocated, growing slice at, say, 80 bytes.",
			"disapproval": false,
			"date": "2012-02-07 23:36:05.828067",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Feb 8, 2012, at 2:26 PM, Russ Cox wrote:\n\n> On Tue, Feb 7, 2012 at 18:36,  <r@golang.org> wrote:\n>> LGTM for now, but i was thinking it might be a better idea (although\n>> more work) to use a small buffer here, suitable for almost all inputs,\n>> and overflow to an allocated, growing slice at, say, 80 bytes.\n> \n> Remy explored that in another CL that is still pending.\n> I agree that this can be improved, after Go 1 is out.\n> I think the truncation code would stay regardless: there's\n> no need for unbounded storage here.\n\nagree on all counts.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-02-08 03:31:42.673360",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello remyoudompheng (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-07 23:15:41.940787",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-07 23:29:28.978750",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5639052/diff/1002/src/pkg/strconv/decimal.go\nFile src/pkg/strconv/decimal.go (right):\n\nhttp://codereview.appspot.com/5639052/diff/1002/src/pkg/strconv/decimal.go#newcode314\nsrc/pkg/strconv/decimal.go:314: // Returns receiver for convenience.\nI'm noticing this extra comment, maybe it should be removed.",
			"disapproval": false,
			"date": "2012-02-07 23:30:57.444506",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as c111d33ea407 ***\n\nstrconv: handle very large inputs\n\nFixes issue 2642.\n\nR=remyoudompheng, r, r\nCC=golang-dev\nhttp://codereview.appspot.com/5639052",
			"disapproval": false,
			"date": "2012-02-08 04:37:17.877762",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 7, 2012 at 18:36,  <r@golang.org> wrote:\n> LGTM for now, but i was thinking it might be a better idea (although\n> more work) to use a small buffer here, suitable for almost all inputs,\n> and overflow to an allocated, growing slice at, say, 80 bytes.\n\nRemy explored that in another CL that is still pending.\nI agree that this can be improved, after Go 1 is out.\nI think the truncation code would stay regardless: there's\nno need for unbounded storage here.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-08 03:26:37.113285",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5639052: strconv: handle very large inputs",
	"created": "2012-02-07 23:15:23.642276",
	"patchsets": [
		1,
		1002,
		3003
	],
	"modified": "2012-02-08 04:37:18.905580",
	"closed": true,
	"issue": 5639052
}