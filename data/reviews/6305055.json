{
	"description": "test/bench/go1: add go/parser benchmark\n\nAs discussed in\n\nhttps://groups.google.com/d/msg/golang-dev/Na9XE6mcQyY/zbeBI7R-vnoJ\n\nHere is a static copy of the go/parser benchmark. I ended up using\nfancy encodings because the original parser.go had a number of `s\nscattered throughout which made it hard to embed the source directly.\n\nCuriously on my laptop this benchmark always scores roughly 10% higher\nthan the standalone benchmark. This may be down to the generation of\nthe fasta data set triggering the cpu governor to raise the cpu speed.\nHowever the benchmark is consistent with itself across multiple runs.",
	"cc": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-06-06 12:46:10.307587",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "have you tried to use the userspace cpu governor and set cpu speed manually?\non my MBP, the result matches that of go/parser closely.\n\nbtw, in the description:\ns/govenor/governor/",
			"disapproval": false,
			"date": "2012-06-06 13:07:23.208386",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/06/06 13:07:23, minux wrote:\n> have you tried to use the userspace cpu governor and set cpu speed manually?\n> on my MBP, the result matches that of go/parser closely.\n\nNo, I hadn't got to that point (was on battery power at the time). I'm glad you can confirm there is no difference between the original benchmark and this embedded one.\n \n> btw, in the description:\n> s/govenor/governor/\n\nFixed, ta.",
			"disapproval": false,
			"date": "2012-06-06 13:17:42.002641",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-06-06 15:03:01.443672",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d5d55e8e2f51 ***\n\ntest/bench/go1: add go/parser benchmark\n\nAs discussed in\n\nhttps://groups.google.com/d/msg/golang-dev/Na9XE6mcQyY/zbeBI7R-vnoJ\n\nHere is a static copy of the go/parser benchmark. I ended up using\nfancy encodings because the original parser.go had a number of `s\nscattered throughout which made it hard to embed the source directly.\n\nCuriously on my laptop this benchmark always scores roughly 10% higher\nthan the standalone benchmark. This may be down to the generation of\nthe fasta data set triggering the cpu governor to raise the cpu speed.\nHowever the benchmark is consistent with itself across multiple runs.\n\nR=golang-dev, minux.ma, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6305055",
			"disapproval": false,
			"date": "2012-06-07 00:24:07.719491",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6305055: test/bench/go1: add go/parser benchmark",
	"created": "2012-06-06 12:41:18.452933",
	"patchsets": [
		1,
		2001,
		5001,
		10001
	],
	"modified": "2012-06-07 00:29:20.842661",
	"closed": true,
	"issue": 6305055
}