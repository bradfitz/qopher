{
	"description": "syscall: add Dup3 on Linux\n\nWith dup3, we can avoid an extra system call on some machines\nwhile holding syscall.ForkLock. Currently we have to\nsyscall.Dup + syscall.CloseOnExec.\n\nOn machines with Linux and a new enough kernel, this can just\nbe dup3.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"iant@golang.org"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-07-31 20:12:46.425230",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Do we know the kernel is new enough? Would dup4 be 33% better?",
			"disapproval": false,
			"date": "2013-08-01 00:59:46.269680",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-01 01:01:57.681000",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This doesn't use it yet.\r\n\r\nA future CL will conditionally use it, checking ENOSYS etc.\r\n On Jul 31, 2013 5:59 PM, <r@golang.org> wrote:\r\n\r\n> Do we know the kernel is new enough? Would dup4 be 33% better?\r\n>\r\n> https://codereview.appspot.**com/12170045/<https://codereview.appspot.com/12170045/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-01 01:01:28.227270",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c92197d20d7d ***\n\nsyscall: add Dup3 on Linux\n\nWith dup3, we can avoid an extra system call on some machines\nwhile holding syscall.ForkLock. Currently we have to\nsyscall.Dup + syscall.CloseOnExec.\n\nOn machines with Linux and a new enough kernel, this can just\nbe dup3.\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/12170045",
			"disapproval": false,
			"date": "2013-08-01 06:38:57.706860",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jul 31, 2013 at 1:12 PM,  <bradfitz@golang.org> wrote:\r\n>\r\n> syscall: add Dup3 on Linux\r\n>\r\n> With dup3, we can avoid an extra system call on some machines\r\n> while holding syscall.ForkLock. Currently we have to\r\n> syscall.Dup + syscall.CloseOnExec.\r\n>\r\n> On machines with Linux and a new enough kernel, this can just\r\n> be dup3.\r\n\r\nNo objection to the CL, but I wonder how we can use this.  What we\r\nneed in the net package is really dup+O_CLOEXEC.  Unfortunately dup3\r\nis dup2+O_CLOEXEC: it requires you to specify the new descriptor\r\nnumber.  I don't see how the net package can reliably determine a new\r\ndescriptor number to use.\r\n\r\nThat is to say, what we should use in the net package is not dup3, but\r\nfcntl(fd.sysfd, F_DUPFD_CLOEXEC), which has been available since\r\nkernel version 2.6.24.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2013-08-02 23:15:25.038610",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Aug 2, 2013 at 4:15 PM, Ian Lance Taylor <iant@golang.org> wrote:\r\n\r\n> On Wed, Jul 31, 2013 at 1:12 PM,  <bradfitz@golang.org> wrote:\r\n> >\r\n> > syscall: add Dup3 on Linux\r\n> >\r\n> > With dup3, we can avoid an extra system call on some machines\r\n> > while holding syscall.ForkLock. Currently we have to\r\n> > syscall.Dup + syscall.CloseOnExec.\r\n> >\r\n> > On machines with Linux and a new enough kernel, this can just\r\n> > be dup3.\r\n>\r\n> No objection to the CL, but I wonder how we can use this.  What we\r\n> need in the net package is really dup+O_CLOEXEC.  Unfortunately dup3\r\n> is dup2+O_CLOEXEC: it requires you to specify the new descriptor\r\n> number.  I don't see how the net package can reliably determine a new\r\n> descriptor number to use.\r\n>\r\n\r\nYeah, I realized that later too. And then I laughed, thinking of Rob's dup4\r\nremark.\r\n\r\n\r\n> That is to say, what we should use in the net package is not dup3, but\r\n> fcntl(fd.sysfd, F_DUPFD_CLOEXEC), which has been available since\r\n> kernel version 2.6.24.\r\n>\r\n\r\nNice. I'll try that.\r\n",
			"disapproval": false,
			"date": "2013-08-03 00:14:14.384850",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 12170045: syscall: add Dup3 on Linux",
	"created": "2013-07-31 20:12:31.627590",
	"patchsets": [
		1,
		3001,
		6001,
		11001
	],
	"modified": "2013-08-03 00:14:14.501830",
	"closed": true,
	"issue": 12170045
}