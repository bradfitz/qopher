{
	"description": "runtime: optimize some hash lookups.\n\nWhen comparing strings, check these (in order):\n- length mismatch => not equal\n- string pointer equal => equal\n- if length is short:\n  - memeq on body\n- if length is long:\n  - compare first&last few bytes, if different => not equal\n  - save entry as a possible match\n  - after checking every entry, if there is only one possible\n    match, use memeq on that entry.  Otherwise, fallback to hash.\n\nbenchmark                 old ns/op    new ns/op    delta\nBenchmarkSameLengthMap           43            4  -89.77%\n\nFixes issue 5194.\nUpdate issue 3885.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"khr@google.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://khr%40golang.org@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-30 23:11:46.730690",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nDid any of the other benchmark numbers change?",
			"disapproval": false,
			"date": "2013-07-30 23:45:02.313750",
			"approval": true
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Everything else was in the noise.\r\n\r\n\r\nOn Tue, Jul 30, 2013 at 4:45 PM, <bradfitz@golang.org> wrote:\r\n\r\n> LGTM\r\n>\r\n> Did any of the other benchmark numbers change?\r\n>\r\n>\r\n> https://codereview.appspot.**com/12128044/<https://codereview.appspot.com/12128044/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-30 23:47:42.481920",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"khr@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-31 00:22:19.371140",
			"approval": true
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"khr@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=2faab4336bf1 ***\n\nruntime: optimize some hash lookups.\n\nWhen comparing strings, check these (in order):\n- length mismatch => not equal\n- string pointer equal => equal\n- if length is short:\n  - memeq on body\n- if length is long:\n  - compare first&last few bytes, if different => not equal\n  - save entry as a possible match\n  - after checking every entry, if there is only one possible\n    match, use memeq on that entry.  Otherwise, fallback to hash.\n\nbenchmark                 old ns/op    new ns/op    delta\nBenchmarkSameLengthMap           43            4  -89.77%\n\nFixes issue 5194.\nUpdate issue 3885.\n\nR=golang-dev, bradfitz, khr, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/12128044",
			"disapproval": false,
			"date": "2013-07-31 04:40:00.789920",
			"approval": false
		}
	],
	"owner_email": "khr@golang.org",
	"private": false,
	"base_url": "",
	"owner": "khr",
	"subject": "code review 12128044: runtime: optimize some hash lookups.",
	"created": "2013-07-30 23:01:26.143180",
	"patchsets": [
		1,
		2001,
		3,
		10001
	],
	"modified": "2013-07-31 04:40:03.327620",
	"closed": true,
	"issue": 12128044
}