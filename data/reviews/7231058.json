{
	"description": "encoding/json: improve performance of Unmarshal on primitive types\n\nAttempt 2. The first fix was much faster but ignored syntax errors.\n\nbenchmark                      old ns/op    new ns/op    delta\nBenchmarkCodeEncoder            74993543     72982390   -2.68%\nBenchmarkCodeMarshal            77811181     75610637   -2.83%\nBenchmarkCodeDecoder           213337123    190144982  -10.87%\nBenchmarkCodeUnmarshal         212180972    190394852  -10.27%\nBenchmarkCodeUnmarshalReuse    202113428    182106660   -9.90%\nBenchmarkUnmarshalString            1343          919  -31.57%\nBenchmarkUnmarshalFloat64           1149          908  -20.97%\nBenchmarkUnmarshalInt64              967          778  -19.54%\nBenchmarkSkipValue              28851581     28414125   -1.52%\n\nbenchmark                       old MB/s     new MB/s  speedup\nBenchmarkCodeEncoder               25.88        26.59    1.03x\nBenchmarkCodeMarshal               24.94        25.66    1.03x\nBenchmarkCodeDecoder                9.10        10.21    1.12x\nBenchmarkCodeUnmarshal              9.15        10.19    1.11x\nBenchmarkSkipValue                 69.05        70.11    1.02x\n\nFixes issue 3949.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-29 22:55:39.889520",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=de89928ea00f ***\n\nencoding/json: improve performance of Unmarshal on primitive types\n\nAttempt 2. The first fix was much faster but ignored syntax errors.\n\nbenchmark                      old ns/op    new ns/op    delta\nBenchmarkCodeEncoder            74993543     72982390   -2.68%\nBenchmarkCodeMarshal            77811181     75610637   -2.83%\nBenchmarkCodeDecoder           213337123    190144982  -10.87%\nBenchmarkCodeUnmarshal         212180972    190394852  -10.27%\nBenchmarkCodeUnmarshalReuse    202113428    182106660   -9.90%\nBenchmarkUnmarshalString            1343          919  -31.57%\nBenchmarkUnmarshalFloat64           1149          908  -20.97%\nBenchmarkUnmarshalInt64              967          778  -19.54%\nBenchmarkSkipValue              28851581     28414125   -1.52%\n\nbenchmark                       old MB/s     new MB/s  speedup\nBenchmarkCodeEncoder               25.88        26.59    1.03x\nBenchmarkCodeMarshal               24.94        25.66    1.03x\nBenchmarkCodeDecoder                9.10        10.21    1.12x\nBenchmarkCodeUnmarshal              9.15        10.19    1.11x\nBenchmarkSkipValue                 69.05        70.11    1.02x\n\nFixes issue 3949.\n\nR=rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7231058\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-31 01:53:51.522360",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7231058/diff/4001/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttps://codereview.appspot.com/7231058/diff/4001/src/pkg/encoding/json/decode.go#newcode78\nsrc/pkg/encoding/json/decode.go:78: d := new(decodeState).init(data)\nToo much duplicated code. Please move all this (except the return statement) up to the top of the function and then drop the duplication in the new chunk.",
			"disapproval": false,
			"date": "2013-01-30 17:23:01.996020",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7231058/diff/7001/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttps://codereview.appspot.com/7231058/diff/7001/src/pkg/encoding/json/decode.go#newcode82\nsrc/pkg/encoding/json/decode.go:82: dp := new(decodeState).init(data)\nThere's already one above: let's use it.\n\nd.init(data)\nreturn d.unmarshal(v)",
			"disapproval": false,
			"date": "2013-01-31 01:34:42.952580",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/7231058/diff/7001/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttps://codereview.appspot.com/7231058/diff/7001/src/pkg/encoding/json/decode.go#newcode82\nsrc/pkg/encoding/json/decode.go:82: dp := new(decodeState).init(data)\nOn 2013/01/31 01:34:43, rsc wrote:\n> There's already one above: let's use it.\n> \n> d.init(data)\n> return d.unmarshal(v)\n\nDone.",
			"disapproval": false,
			"date": "2013-01-31 01:50:51.597870",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nBenchmark numbers are within 2% of the previous patchset.\n\nhttps://codereview.appspot.com/7231058/diff/4001/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttps://codereview.appspot.com/7231058/diff/4001/src/pkg/encoding/json/decode.go#newcode78\nsrc/pkg/encoding/json/decode.go:78: d := new(decodeState).init(data)\nOn 2013/01/30 17:23:02, rsc wrote:\n> Too much duplicated code. Please move all this (except the return statement) up\n> to the top of the function and then drop the duplication in the new chunk.\n\nDone. Sorry, this was left over from my attempts to skip the checkValid call by first doing some simple checks for \"null\", \"true\", \"false\", and obviously bad strings and numbers. Turns out all that extra work didn't improve the speed.",
			"disapproval": false,
			"date": "2013-01-30 22:49:13.251450",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-31 01:52:01.407180",
			"approval": true
		}
	],
	"owner_email": "rickarnoldjr@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rick",
	"subject": "code review 7231058: encoding/json: improve performance of Unmarshal on prim...",
	"created": "2013-01-29 22:54:39.946340",
	"patchsets": [
		1,
		2001,
		4001,
		7001,
		3003
	],
	"modified": "2013-01-31 02:26:54.549450",
	"closed": true,
	"issue": 7231058
}