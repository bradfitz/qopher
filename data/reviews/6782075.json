{
	"description": "sync/atomic: fix race instrumentation",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Thu, Nov 15, 2012 at 3:58 AM,  <dvyukov@google.com> wrote:\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://dvyukov%40google.com@code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> sync/atomic: fix race instrumentation\r\n>\r\n> Please review this at http://codereview.appspot.com/6782075/\r\n>\r\n> Affected files:\r\n>   M src/pkg/sync/atomic/race.go\r\n>\r\n>\r\n> Index: src/pkg/sync/atomic/race.go\r\n> ===================================================================\r\n> --- a/src/pkg/sync/atomic/race.go\r\n> +++ b/src/pkg/sync/atomic/race.go\r\n> @@ -165,7 +165,7 @@\r\n>\r\n>  func LoadUintptr(addr *uintptr) (val uintptr) {\r\n>         runtime.RaceSemacquire(&mtx)\r\n> -       runtime.RaceRead(unsafe.Pointer(val))\r\n> +       runtime.RaceRead(unsafe.Pointer(addr))\r\n>         runtime.RaceAcquire(unsafe.Pointer(addr))\r\n>         val = *addr\r\n>         runtime.RaceSemrelease(&mtx)\r\n> @@ -198,7 +198,7 @@\r\n>\r\n>  func StorePointer(addr *unsafe.Pointer, val unsafe.Pointer) {\r\n>         runtime.RaceSemacquire(&mtx)\r\n> -       runtime.RaceRead(unsafe.Pointer(val))\r\n> +       runtime.RaceRead(unsafe.Pointer(addr))\r\n>         *addr = val\r\n>         runtime.RaceRelease(unsafe.Pointer(addr))\r\n>         runtime.RaceSemrelease(&mtx)\r\n> @@ -206,7 +206,7 @@\r\n>\r\n>  func StoreUintptr(addr *uintptr, val uintptr) {\r\n>         runtime.RaceSemacquire(&mtx)\r\n> -       runtime.RaceRead(unsafe.Pointer(val))\r\n> +       runtime.RaceRead(unsafe.Pointer(addr))\r\n>         *addr = val\r\n>         runtime.RaceRelease(unsafe.Pointer(addr))\r\n>         runtime.RaceSemrelease(&mtx)\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-15 17:22:21.421590",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=c7a85aebdb9c ***\n\nsync/atomic: fix race instrumentation\n\nR=golang-dev, iant\nCC=golang-dev\nhttp://codereview.appspot.com/6782075",
			"disapproval": false,
			"date": "2012-11-15 17:30:33.941410",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-11-15 11:58:22.341500",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6782075: sync/atomic: fix race instrumentation",
	"created": "2012-11-15 11:54:31.939740",
	"patchsets": [
		1,
		2001,
		5001,
		8001
	],
	"modified": "2012-11-15 17:30:35.141290",
	"closed": true,
	"issue": 6782075
}