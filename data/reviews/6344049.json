{
	"description": "path/filepath: avoid allocation in Clean of cleaned path even on windows (fix build)",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nInstead of needing to add volumeNameLen everywhere, why not just use len(VolumeName) in Clean? Otherwise looks good.",
			"disapproval": false,
			"date": "2012-06-29 22:59:21.075763",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=485bd0156f7d ***\n\npath/filepath: avoid allocation in Clean of cleaned path even on windows (fix build)\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6344049",
			"disapproval": false,
			"date": "2012-06-30 12:09:00.891351",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-06-28 02:15:02.166371",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/06/29 23:05:00, rsc wrote:\n\n> If you want to keep volumeNameLen instead, please move VolumeName into a\n> generic (non-OS-specific) file so that each OS only has to implement one of\n> the two.\n> \n\nWill do. I am away from computer now, but your suggested change is simple enough, so I will submit without further review. Thank you.\n\nAlex",
			"disapproval": false,
			"date": "2012-06-29 23:12:00.488563",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/06/29 22:59:21, rsc wrote:\n> LGTM\n> \n> Instead of needing to add volumeNameLen everywhere, why not just use\n> len(VolumeName) in Clean? Otherwise looks good.\n\nThe introduction of volumeNameLen guarantee that path[:volumeNameLen] == VolumeName(path). The VolumeName by itself does not provide that. Isn't it?\n\nAlex",
			"disapproval": false,
			"date": "2012-06-29 23:03:14.409050",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jun 29, 2012 at 7:03 PM, <alex.brainman@gmail.com> wrote:\r\n\r\n> The introduction of volumeNameLen guarantee that path[:volumeNameLen] ==\r\n> VolumeName(path). The VolumeName by itself does not provide that. Isn't\r\n> it?\r\n>\r\n\r\nThe definition of VolumeName says it returns a prefix of path. That seems\r\nlike enough.\r\nIf you want to keep volumeNameLen instead, please move VolumeName into a\r\ngeneric (non-OS-specific) file so that each OS only has to implement one of\r\nthe two.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-06-29 23:05:00.405900",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 6344049: path/filepath: avoid allocation in Clean of cleaned pat...",
	"created": "2012-06-28 02:08:36.746231",
	"patchsets": [
		1,
		2001,
		4001,
		5007
	],
	"modified": "2012-06-30 12:09:02.917943",
	"closed": true,
	"issue": 6344049
}