{
	"description": "gc: undo most of 'fix infinite recursion for embedded interfaces'\n\nPreserve test.\n\nchangeset:   11593:f1deaf35e1d1\nuser:        Luuk van Dijk <lvd@golang.org>\ndate:        Tue Jan 17 10:00:57 2012 +0100\nsummary:     gc: fix infinite recursion for embedded interfaces\n\nThis is causing 'interface type loop' errors during compilation\nof a complex program.  I don't understand what's happening\nwell enough to boil it down to a simple test case, but undoing\nthis change fixes the problem.\n\nThe change being undone is fixing a corner case (uses of\npointer to interface in an interface definition) that basically\nonly comes up in erroneous Go programs.  Let's not try to\nfix this again until after Go 1.\n\nUnfixes issue 1909.",
	"cc": [
		"lvd@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"lvd@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello lvd (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-01-20 22:14:08.692765",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"lvd@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f74a2a538435 ***\n\ngc: undo most of 'fix infinite recursion for embedded interfaces'\n\nPreserve test.\n\nchangeset:   11593:f1deaf35e1d1\nuser:        Luuk van Dijk <lvd@golang.org>\ndate:        Tue Jan 17 10:00:57 2012 +0100\nsummary:     gc: fix infinite recursion for embedded interfaces\n\nThis is causing 'interface type loop' errors during compilation\nof a complex program.  I don't understand what's happening\nwell enough to boil it down to a simple test case, but undoing\nthis change fixes the problem.\n\nThe change being undone is fixing a corner case (uses of\npointer to interface in an interface definition) that basically\nonly comes up in erroneous Go programs.  Let's not try to\nfix this again until after Go 1.\n\nUnfixes issue 1909.\n\nTBR=lvd\nCC=golang-dev\nhttp://codereview.appspot.com/5555063",
			"disapproval": false,
			"date": "2012-01-20 22:14:11.977032",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jan 20, 2012 at 23:14,  <rsc@golang.org> wrote:\n> *** Submitted as\n> http://code.google.com/p/go/source/detail?r=f74a2a538435 ***\n>\n>\n> gc: undo most of 'fix infinite recursion for embedded interfaces'\n>\n> Preserve test.\n>\n> changeset: \u00a0 11593:f1deaf35e1d1\n> user: \u00a0 \u00a0 \u00a0 \u00a0Luuk van Dijk <lvd@golang.org>\n> date: \u00a0 \u00a0 \u00a0 \u00a0Tue Jan 17 10:00:57 2012 +0100\n> summary: \u00a0 \u00a0 gc: fix infinite recursion for embedded interfaces\n>\n> This is causing 'interface type loop' errors during compilation\n> of a complex program. \u00a0I don't understand what's happening\n> well enough to boil it down to a simple test case, but undoing\n> this change fixes the problem.\n>\n> The change being undone is fixing a corner case (uses of\n> pointer to interface in an interface definition) that basically\n> only comes up in erroneous Go programs.\n\nI don't thing that is correct; i took the pointers out of the test\ncase.  the problem is\nthat interface definitions whose methods refer to that interface again\nas argument types cause multiple paths trhough\nthe recursion in printing them, leading to exponential behaviour.\nThefix fixed that by printing the original definition instead\nof the one with the methods expanded, but introduced a new problem\nwith multiple interfaces that recursively refer to\neachother because the import type function in export.c, called from\nthe part of the grammar that handles the imports,\ncan't deal with forward declared types.\n\n>\u00a0Let's not try to\n> fix this again until after Go 1.\n\nA fine plan.  Apologies for the inconvenience.\n\n>\n> Unfixes issue 1909.\n>\n> TBR=lvd\n> CC=golang-dev\n> http://codereview.appspot.com/5555063\n>\n>\n> http://codereview.appspot.com/5555063/\n",
			"disapproval": false,
			"date": "2012-01-21 20:32:48.411276",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I can believe that.  Then the bug affects interface\ndefinitions which contain nested interface type literals\n(as opposed to names), which themselves embed\ninterface types, like:\n\ntype I interface {\n    J() interface { I }\n}\n\nStill, a rare case.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-21 20:40:02.394358",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5555063: gc: undo most of 'fix infinite recursion for embedded i...",
	"created": "2012-01-20 22:06:09.837715",
	"patchsets": [
		1,
		2001,
		2002
	],
	"modified": "2012-01-20 22:14:12.850637",
	"closed": true,
	"issue": 5555063
}