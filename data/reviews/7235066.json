{
	"description": "os: don't hold ForkLock across opens on Plan 9\n\nIf os.OpenFile holds ForkLock on files that block opens,\nthen threads that simultaneously try to do fork-exec will\nget hung up (until the open succeeds). Blocked opens are\ncommon enough on Plan 9 that protecting against fd leaks\ninto fork-execs means not being able to do fork-execs\nproperly in the general case. Thus, we forgo taking the\nlock.",
	"cc": [
		"rsc@golang.org",
		"ality@pbrane.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=0e84a5cf4e81 ***\n\nos: don't hold ForkLock across opens on Plan 9\n\nIf os.OpenFile holds ForkLock on files that block opens,\nthen threads that simultaneously try to do fork-exec will\nget hung up (until the open succeeds). Blocked opens are\ncommon enough on Plan 9 that protecting against fd leaks\ninto fork-execs means not being able to do fork-execs\nproperly in the general case. Thus, we forgo taking the\nlock.\n\nR=rsc, ality\nCC=golang-dev\nhttps://codereview.appspot.com/7235066\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-30 17:41:21.376490",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yeah, it can happen from user code as well, and the\r\ntrade-off is between leaking fds and being able to\r\nuse os/exec properly. The latter seems more important,\r\nindeed.\r\n\r\nOn 30 January 2013 16:14,  <rsc@golang.org> wrote:\r\n>\r\n> https://codereview.appspot.com/7235066/diff/3/src/pkg/net/ipsock_plan9.go\r\n> File src/pkg/net/ipsock_plan9.go (right):\r\n>\r\n> https://codereview.appspot.com/7235066/diff/3/src/pkg/net/ipsock_plan9.go#newcode154\r\n> src/pkg/net/ipsock_plan9.go:154: f, err := os.OpenFile(l.dir+\"/listen\",\r\n> os.O_RDONLY|syscall.O_CANBLOCK, 0)\r\n> This is hardly the only open that can block on Plan 9. I think you have\r\n> to accept the race and just never hold the ForkLock across an open.\r\n>\r\n> https://codereview.appspot.com/7235066/\r\n",
			"disapproval": false,
			"date": "2013-01-30 16:21:46.453640",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nAlso updated the description.",
			"disapproval": false,
			"date": "2013-01-30 16:44:56.559120",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-30 17:38:55.680590",
			"approval": true
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, ality@pbrane.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-30 13:11:15.879280",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7235066/diff/3/src/pkg/net/ipsock_plan9.go\nFile src/pkg/net/ipsock_plan9.go (right):\n\nhttps://codereview.appspot.com/7235066/diff/3/src/pkg/net/ipsock_plan9.go#newcode154\nsrc/pkg/net/ipsock_plan9.go:154: f, err := os.OpenFile(l.dir+\"/listen\", os.O_RDONLY|syscall.O_CANBLOCK, 0)\nThis is hardly the only open that can block on Plan 9. I think you have to accept the race and just never hold the ForkLock across an open.",
			"disapproval": false,
			"date": "2013-01-30 16:14:00.811110",
			"approval": false
		}
	],
	"owner_email": "seed@mail.nanosouffle.net",
	"private": false,
	"base_url": "",
	"owner": "akumar",
	"subject": "code review 7235066: net, os, syscall: don't hold ForkLock during blocked op...",
	"created": "2013-01-30 13:05:20.415540",
	"patchsets": [
		1,
		1001,
		3,
		7001
	],
	"modified": "2013-01-31 04:28:45.614810",
	"closed": true,
	"issue": 7235066
}