{
	"description": "net: Add IPv6 Support on Windows.\n\nFixes issue 1740. Fixes issue 2315.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Please complete a CLA as described at\nhttp://golang.org/doc/contribute.html#copyright\n\nThanks.\nRuss\n",
			"disapproval": false,
			"date": "2011-10-03 14:24:19.412101",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-01 14:24:12.315348",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/04 00:39:25, zhoumichaely wrote:\n> \n> I'll look at the name resolution later today.\n> Where might I be able to find the tests for networking?\n> \n\ncd $GOROOT/src/net\nmake clean install test\n\nwill create an 8.out.exe (and run it) which includes all *_test.go tests in net directory. See http://golang.org/pkg/testing/ for how testing works.\n\nYou could run\n\n./8.out.exe -test.v\n\nto see which tests run.\n\nYou could run\n\n./8.out.exe -test.run=TestTCPServer\n\nto run TestTCPServer only, for example.\n\nSee\n\n./8.out.exe -?\n\nfor all options.\n\nYou need to look at tests that test ipv6 related features, and make sure they run. ipv6 related tests are automatically disabled, if ipv6 is not available. None of windows ipv6 tests are run even after your change, because winsock stack is not initialised (see fd_windows.go init function) at the time when tests make decision if os support ipv6 or not.\n\nMy offer to submit your change as is still stands. This is your first change. I do not want this change to become too big.\n\nAlex",
			"disapproval": false,
			"date": "2011-10-04 01:14:33.671859",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2011-10-01 14:28:35.434048",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "That was easy!\n\nBut, seriously, you should at least make some ipv6 net tests working for windows, just to prove that your changes work. supportsIPv6 is still false, so none of ipv6 net tests are executed. The reason for that is probeIPv6Stack function fails, because windows net stack is not initialized at the time when it runs. You would have to rearrange things a little bit to make sure correct init order.\n\nOn the other hand, some tests would need ipv6 resolver to work properly too (see http://code.google.com/p/go/issues/detail?id=2315).\n\nI am happy to accept youy change as is, and we could add things to it latter. Alternatively, you could add it now. Your choice.\n\nThank you.\n\nAlex\n\nhttp://codereview.appspot.com/5175042/diff/4001/src/pkg/syscall/syscall_windows.go\nFile src/pkg/syscall/syscall_windows.go (right):\n\nhttp://codereview.appspot.com/5175042/diff/4001/src/pkg/syscall/syscall_windows.go#newcode556\nsrc/pkg/syscall/syscall_windows.go:556: Family   uint16\nI think it should be\ns/uint16/int16/\n\nPlease, change RawSockaddrInet4 while you at it.",
			"disapproval": false,
			"date": "2011-10-03 06:24:53.649386",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/03 06:24:53, brainman wrote:\n> That was easy!\n> \n> But, seriously, you should at least make some ipv6 net tests working for\n> windows, just to prove that your changes work. supportsIPv6 is still false, so\n> none of ipv6 net tests are executed. The reason for that is probeIPv6Stack\n> function fails, because windows net stack is not initialized at the time when it\n> runs. You would have to rearrange things a little bit to make sure correct init\n> order.\n> \n> On the other hand, some tests would need ipv6 resolver to work properly too (see\n> http://code.google.com/p/go/issues/detail?id=2315).\n> \n> I am happy to accept youy change as is, and we could add things to it latter.\n> Alternatively, you could add it now. Your choice.\n> \n> Thank you.\n> \n> Alex\n> \n> http://codereview.appspot.com/5175042/diff/4001/src/pkg/syscall/syscall_windows.go\n> File src/pkg/syscall/syscall_windows.go (right):\n> \n> http://codereview.appspot.com/5175042/diff/4001/src/pkg/syscall/syscall_windows.go#newcode556\n> src/pkg/syscall/syscall_windows.go:556: Family   uint16\n> I think it should be\n> s/uint16/int16/\n> \n> Please, change RawSockaddrInet4 while you at it.\n\nI'll look at the name resolution later today.\nWhere might I be able to find the tests for networking?\n\n\nOn 2011/10/03 14:24:19, rsc wrote:\n> Please complete a CLA as described at\n> http://golang.org/doc/contribute.html#copyright\n> \n> Thanks.\n> Russ\n\nDone",
			"disapproval": false,
			"date": "2011-10-04 00:39:25.406434",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I had a poke around and it is indeed the case that issue 2315 is needed for it to be able to pass the IPv6 tests.\n\nDoing so would involve adding another syscall as well as quite a large number of other changes which could take me some time to complete, so it may be best to submit this change as is (with the uint16 changed to int16) and add the rest later.",
			"disapproval": false,
			"date": "2011-10-04 12:27:22.905058",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/04 12:27:22, zhoumichaely wrote:\n> ..., so it may be best to\n> submit this change as is (with the uint16 changed to int16) ...\n\nSounds good to me. Please change uint16(s) into int16(s) then. Also remove \"Fixes issue 1740.\" from CL description (hg change 5175042), since we are not going to make ipv6 working yet. Once done, run \"hg mail 5175042\", and I will submit.\n\nRuss, did you see CLA yet?\n\nThank you.\n\nAlex",
			"disapproval": false,
			"date": "2011-10-05 01:34:01.979375",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-05 12:48:11.521907",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Got it working completely, but unfortunately made a bit of a mess with the code.\n\nLet me know anything that should be done differently.",
			"disapproval": false,
			"date": "2011-10-05 13:01:34.360124",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I have asked for it :-)\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/net/fd_windows.go\nFile src/pkg/net/fd_windows.go (left):\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/net/fd_windows.go#oldcode24\nsrc/pkg/net/fd_windows.go:24: func init() {\nPlease, do not move WinSock initialization into syscall package.\n\nYou proposed solution raises concurrency concerns. It is prone to making mistakes. You try to initialize at the start of all socket syscalls. What if you miss some?.\n\nWe have problem with order in which code is executed, lets fix the order. Here is what Russ suggested:\n\n>>>\nAnother alternative is to not initialize the vars at all and have a single func init that makes very clear what the ordering is:\n\nfunc init() {\n   sysInit()\n   supportsIPv6, supportsIPv4map = probeIPv6Stack()\n}\n<<<\n\nThen you could do all Winsock initialization inside sysInit in fd_windows.go. You would have to create an empty sysInit in fd.go (or any other non-windows source file) to make sure that non-windows versions will compile too.\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/net/lookup_windows.go\nFile src/pkg/net/lookup_windows.go (left):\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/net/lookup_windows.go#oldcode29\nsrc/pkg/net/lookup_windows.go:29: func LookupIP(name string) (addrs []IP, err os.Error) {\nUsing syscall.GetAddrinfo here breaks on my Windows 2000. Please, lets have two versions of LookupIP function, whatever you want to call them, new one that uses syscall.GetAddrinfo and old one that uses syscall.GetHostByName. You could decide which function to use on startup by inspecting correspondent dll to see if it contains GetAddrinfo function.\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/net/lookup_windows.go\nFile src/pkg/net/lookup_windows.go (right):\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/net/lookup_windows.go#newcode38\nsrc/pkg/net/lookup_windows.go:38: addrs = make([]IP, 128) // (Hopefully) plenty of room to grow\naddrs = make([]IP, 0, 10)\nand then just use append.\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/syscall/syscall_windows.go\nFile src/pkg/syscall/syscall_windows.go (right):\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/syscall/syscall_windows.go#newcode503\nsrc/pkg/syscall/syscall_windows.go:503: //sys\tGetAddrinfo(name string, service string, hints *RawAddrinfo, out **RawAddrinfo) (errno int) [failretval==-1] = ws2_32.getaddrinfo\nThis function, unlike many others, returns errno, therefore you want:\ns/(errno int) [failretval==-1]/(sockerrno int)/\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/syscall/syscall_windows.go#newcode503\nsrc/pkg/syscall/syscall_windows.go:503: //sys\tGetAddrinfo(name string, service string, hints *RawAddrinfo, out **RawAddrinfo) (errno int) [failretval==-1] = ws2_32.getaddrinfo\nYou want W version of this function:\ns/getaddrinfo/GetAddrInfoW/\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/syscall/syscall_windows.go#newcode504\nsrc/pkg/syscall/syscall_windows.go:504: //sys\tFreeAddrinfo(ai *RawAddrinfo) = ws2_32.freeaddrinfo\nYou want W version of this function:\ns/freeaddrinfo/FreeAddrInfoW/\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/syscall/syscall_windows.go#newcode609\nsrc/pkg/syscall/syscall_windows.go:609: type RawAddrinfo struct {\nPut this into ztypes_windows.go.\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/syscall/syscall_windows.go#newcode609\nsrc/pkg/syscall/syscall_windows.go:609: type RawAddrinfo struct {\nLets keep close to MS names:\ns/RawAddrinfo/AddrInfo/\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/syscall/syscall_windows.go#newcode615\nsrc/pkg/syscall/syscall_windows.go:615: Canonname **byte  // Pointer to C string\nI don't think you need 2 stars. Why?\n\nhttp://codereview.appspot.com/5175042/diff/20001/src/pkg/syscall/syscall_windows.go#newcode615\nsrc/pkg/syscall/syscall_windows.go:615: Canonname **byte  // Pointer to C string\nI think if you change to use W version, then you would have to change:\ns/**byte/*uint16/",
			"disapproval": false,
			"date": "2011-10-07 03:56:13.120037",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Please move the func init into fd.go, so that there\nis only one copy of the initialization of the IPv6 probe.\nOtherwise other architectures will forget to initialize it.\n\nIt is okay to add func sysInit() {} to the non-Windows files.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-10-12 17:38:10.676507",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Why do we want to use the W version?",
			"disapproval": false,
			"date": "2011-10-07 13:36:52.758901",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Getting this problem after switching to W version.\n\nthrow: fault\n\ngoroutine 1 [chan receive]:\ntesting.RunTests(0x401000, 0x623c78, 0x2c)\n        c:/Code/go/src/pkg/testing/testing.go:201 +0x53e\ntesting.Main(0x401000, 0x623c78, 0x2c, 0x2c, 0x62d418, ...)\n        c:/Code/go/src/pkg/testing/testing.go:168 +0x48\nmain.main()\n        c:/Code/go/src/pkg/net/_testmain.go:72 +0x42\n\ngoroutine 3 [syscall]:\nsyscall.Syscall6(0x76634889, 0x6, 0x12233a80, 0xf, 0x12226b50, ...)\n        c:/Code/go/src/pkg/runtime/windows/syscall.c:85 +0x49\nsyscall.GetAddrInfo(0x12233a80, 0xf, 0xf, 0x12226b50, 0x5, ...)\n        c:/Code/go/src/pkg/syscall/zsyscall_windows_386.go:1307 +0xde\nnet.lookupIPGetAddrInfo(0x50cb34, 0xe, 0x0, 0x0, 0x0, ...)\n        c:/Code/go/src/pkg/net/lookup_windows.go:61 +0x132\nnet.LookupIP(0x50cb34, 0xe, 0x200000, 0x48564a)\n        c:/Code/go/src/pkg/net/lookup_windows.go:34 +0x75\nnet.TestDialGoogleIPv4(0x12226b70, 0x12221540)\n        c:/Code/go/src/pkg/net/dialgoogle_test.go:79 +0x71\ntesting.tRunner(0x12226b70, 0x623c84, 0x0)\n        c:/Code/go/src/pkg/testing/testing.go:156 +0x38\ncreated by testing.RunTests\n        c:/Code/go/src/pkg/testing/testing.go:200 +0x510\ngotest: \"./8.out.exe\" failed: exit status 2\nmake: *** [test] Error 2\n\n$ gdb ./8.out.exe\nGNU gdb (GDB) 7.2\nCopyright (C) 2010 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"mingw32\".\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>...\nReading symbols from c:\\Code\\go\\src\\pkg\\net/./8.out.exe...done.\n(gdb) r -test.v -ipv6\nStarting program: c:\\Code\\go\\src\\pkg\\net/./8.out.exe -test.v -ipv6\n[New Thread 4436.0x1004]\n=== RUN  net.TestLookupCNAME\n[New Thread 4436.0x74c]\n--- PASS: net.TestLookupCNAME (0.02 seconds)\n=== RUN  net.TestDialGoogleIPv4\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x76634901 in WSAConnectByList () from C:\\Windows\\syswow64\\ws2_32.dll\n(gdb) bt full\n#0  0x76634901 in WSAConnectByList () from C:\\Windows\\syswow64\\ws2_32.dll\nNo symbol table info available.\n#1  0x00414a3e in runtime.asmstdcall (c=void)\n    at c:/Code/go/src/pkg/runtime/windows/386/sys.s:27\nNo locals.\n#2  0x12202a80 in ?? ()\nNo symbol table info available.\n#3  0x00342a34 in ?? ()\nNo symbol table info available.\n#4  0x8b000000 in ?? ()\nNo symbol table info available.\n#5  0x8908247c in ?? ()\nNo symbol table info available.\n#6  0x24648b39 in ?? ()\nNo symbol table info available.\n#7  0x8b64c304 in ?? ()\nNo symbol table info available.\n#8  0x00002c0d in ?? ()\nNo symbol table info available.\n#9  0x39018b00 in ?? ()\nNo symbol table info available.\n#10 0x02770460 in ?? ()\nNo symbol table info available.\n#11 0x203b03cd in ?? ()\nNo symbol table info available.\n#12 0x03cd0277 in ?? ()\nNo symbol table info available.\n#13 0x247c8bc3 in ?? ()\nNo symbol table info available.\n#14 0x244c8b04 in ?? ()\nNo symbol table info available.\n#15 0x83cb8908 in ?? ()\nNo symbol table info available.\n#16 0xe9c103e3 in ?? ()\nNo symbol table info available.\n#17 0xfcc03102 in ?? ()\nNo symbol table info available.\n#18 0xd989abf3 in ?? ()\nNo symbol table info available.\n#19 0x8bc3aaf3 in ?? ()\nNo symbol table info available.\n#20 0x8b042444 in ?? ()\nNo symbol table info available.\n#21 0x8bc3fc40 in ?? ()\nNo symbol table info available.\n#22 0x8b042444 in ?? ()\nNo symbol table info available.\n#23 0x8908245c in ?? ()\nNo symbol table info available.\n#24 0x8bc3fc58 in ?? ()\nNo symbol table info available.\n#25 0xc3042444 in ?? ()\nNo symbol table info available.\n#26 0xc710ec83 in ?? ()\nNo symbol table info available.\n#27 0x00072404 in ?? ()\nNo symbol table info available.\n#28 0x058d0000 in ?? ()\nNo symbol table info available.\n#29 0x0062ddc8 in ?? ()\nNo symbol table info available.\nCannot access memory at address 0x2c0d8b68",
			"disapproval": false,
			"date": "2011-10-07 13:56:47.904095",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/07 13:36:52, zhoumichaely wrote:\n> Why do we want to use the W version?\n\nAll strings in Go are unicode, not ascii. We use W versions on Windows everywhere. There is no downside to it. Is there?",
			"disapproval": false,
			"date": "2011-10-09 04:26:16.161897",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/09 08:06:53, jp wrote:\n> ...\n> I think GetHostByName can be removed and GetAddrInfo version can be left as the\n> only lookup method.\n> \n\nI have asked to keep GetHostByName around. Otherwise I will not be able to use Go on my Windows 2000 PC.\n\nI agree, we should be using GetAddrInfo, if it is available, not just for ipv6 lookups. But, I think this CL is complicated enough. Let's get it submitted. We can change things later.\n\nAlex",
			"disapproval": false,
			"date": "2011-10-09 09:58:02.896219",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "OK. It works when I just pass in a string.",
			"disapproval": false,
			"date": "2011-10-08 00:53:04.799395",
			"approval": false
		},
		{
			"sender": "jp@webmaster.ms",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5175042/diff/29001/src/pkg/net/lookup_windows.go\nFile src/pkg/net/lookup_windows.go (right):\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/net/lookup_windows.go#newcode34\nsrc/pkg/net/lookup_windows.go:34: return lookupIPGetAddrInfo(name)\nI think GetHostByName can be removed and GetAddrInfo version can be left as the only lookup method.\n\n1. The lookup itself does not require IPv6 connectivity.\n\n2. Looking for IPv6 addresses of a given name may have sense even in case of absence of native/tunnel IPv6 connectivity (user software may use socks5 to connect to IPv6 addresses or only display the IPv6 addresses with no attempt to connect).\n\n3. This is the way how lookup works in Linux version.",
			"disapproval": false,
			"date": "2011-10-09 08:06:53.347931",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Getting there.\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/net/fd_windows.go\nFile src/pkg/net/fd_windows.go (left):\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/net/fd_windows.go#oldcode24\nsrc/pkg/net/fd_windows.go:24: func init() {\nPlease move this init function into ipsock.go as is. Then add sysInit function to fd.go that does nothing. Lets have a single init function (in ipsock.go) that determines clearly order of initialisation for all OSes.\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/net/lookup_windows.go\nFile src/pkg/net/lookup_windows.go (right):\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/net/lookup_windows.go#newcode8\nsrc/pkg/net/lookup_windows.go:8: \"fmt\"\nPlease, do not introduce dependency on fmt package. It is quite expensive to use.\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/net/lookup_windows.go#newcode60\nsrc/pkg/net/lookup_windows.go:60: //Flags:    syscall.AI_CANONNAME,\nWhy that comment?\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/net/lookup_windows.go#newcode71\nsrc/pkg/net/lookup_windows.go:71: addrs = make([]IP, 0, 128) // (Hopefully) plenty of room to grow\nappend will grow array as needed. You do not need that comment now. Also no point allocating 128 of those, even 10 will be too many, considering append will grow array.\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/net/lookup_windows.go#newcode73\nsrc/pkg/net/lookup_windows.go:73: for ; cur != nil && i != cap(addrs); i++ {\ns/ && i != cap(addrs)//\ndo not need to check array limits anymore, now that append will grow it as needed.\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/net/lookup_windows.go#newcode85\nsrc/pkg/net/lookup_windows.go:85: err = os.NewError(fmt.Sprintf(\"Unknown Family (%d) returned from GetAddrInfo\", cur.Family))\nShould not you return here?\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/syscall/ztypes_windows.go\nFile src/pkg/syscall/ztypes_windows.go (right):\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/syscall/ztypes_windows.go#newcode623\nsrc/pkg/syscall/ztypes_windows.go:623: type AddrinfoW struct {\ns/AddrinfoW/Addrinfo/\nNone of our structure names have W suffix.",
			"disapproval": false,
			"date": "2011-10-09 04:24:01.730921",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/12 17:38:10, rsc wrote:\n\nOK. I'll do that soon.",
			"disapproval": false,
			"date": "2011-10-14 06:00:43.700264",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/14 06:00:43, zhoumichaely wrote:\n\nI just took a look and realised that fd.go isn't included in the Windows build, so I'm not sure how we could make it such that there's only one init unless we do other major restructuring.",
			"disapproval": false,
			"date": "2011-10-26 06:18:00.319518",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5175042/diff/29001/src/pkg/net/fd_windows.go\nFile src/pkg/net/fd_windows.go (left):\n\nhttp://codereview.appspot.com/5175042/diff/29001/src/pkg/net/fd_windows.go#oldcode24\nsrc/pkg/net/fd_windows.go:24: func init() {\nI will repeat my previous suggestion:\n\nPlease move this init function into ipsock.go as is. Then add sysInit function to fd.go that does nothing. Lets have a single init function (in ipsock.go) that determines clearly order of initialisation for all OSes.",
			"disapproval": false,
			"date": "2011-10-26 06:27:02.839522",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"jp@webmaster.ms",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "zhoumichaely,\n\nIt has been awhile since there was activity on this change. I would like to push it along. Please, let me know if you intend to continue with it. Alternatively, I will implement it myself. Thank you.\n\nAlex",
			"disapproval": false,
			"date": "2012-01-04 23:20:13.104525",
			"approval": false
		},
		{
			"sender": "zhoumichaely@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi,\n\nIt would be great if you could continue implementing it.\nOn 05/01/2012 10:20 AM, <alex.brainman@gmail.com> wrote:\n>\n> zhoumichaely,\n>\n> It has been awhile since there was activity on this change. I would like\n> to push it along. Please, let me know if you intend to continue with it.\n> Alternatively, I will implement it myself. Thank you.\n>\n> Alex\n>\n> http://codereview.appspot.com/5175042/\n",
			"disapproval": false,
			"date": "2012-01-05 00:41:14.294519",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"zhoumichaely@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-06-03 04:37:51.342961",
			"approval": false
		}
	],
	"owner_email": "zhoumichaely@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "zhoumichaely",
	"subject": "code review 5175042: net: Add IPv6 Support on Windows.",
	"created": "2011-10-01 14:15:39.259336",
	"patchsets": [
		1,
		2001,
		4001,
		12001,
		14001,
		17001,
		20001,
		26011,
		29001
	],
	"modified": "2012-06-03 04:37:51.343362",
	"closed": false,
	"issue": 5175042
}