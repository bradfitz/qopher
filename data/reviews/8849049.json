{
	"description": "go.talks/2013/go11: add What's new in Go 1.1 talk",
	"cc": [
		"golang-dev@googlegroups.com",
		"daniel.morsing@gmail.com",
		"r@golang.org",
		"dvyukov@google.com",
		"seb.binet@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "seb.binet@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"r@golang.org",
				"dvyukov@google.com",
				"seb.binet@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "typo\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide\nFile 2013/go1.1.slide (right):\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode238\n2013/go1.1.slide:238: - In-ling of small functions by the gc compilers,\n- In-ling\n+ In-lining\n? (not being a native english speaker, I would have written inlining, but...)",
			"disapproval": false,
			"date": "2013-05-01 11:15:09.251260",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.talks",
			"disapproval": false,
			"date": "2013-04-30 13:26:35.582490",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8849049/diff/15001/2013/go1.1.slide\nFile 2013/go1.1.slide (right):\n\nhttps://codereview.appspot.com/8849049/diff/15001/2013/go1.1.slide#newcode123\n2013/go1.1.slide:123: The `go`run` command now runs all files in the current directory if no files are provided. In this sense,\nThis will be not true once the revert is in.\n\nhttps://codereview.appspot.com/8849049/diff/15001/2013/go1.1.slide#newcode199\n2013/go1.1.slide:199: The `Timer` type has a new method `Reset` that modifies the timer to expire after a specified duration.\nYou probably mention in the script for this talk, but it would be nice to mention that you get around generating garbage this way.",
			"disapproval": false,
			"date": "2013-04-30 15:09:56.422050",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide\nFile 2013/go1.1.slide (right):\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode35\n2013/go1.1.slide:35: Sometimes you want to turn a method into a plain function (binding it to its receiver).\nyou might mention the word 'curry'\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode117\n2013/go1.1.slide:117: # TODO(adg): example of a blocking profile\nmemory benchmarks",
			"disapproval": false,
			"date": "2013-04-30 16:54:28.156140",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"r@golang.org",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide\nFile 2013/go1.1.slide (right):\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode81\n2013/go1.1.slide:81: .play go1.1/race.go\nif you want to show the report, I find it useful to run present as:\n$ TMPDIR=/a GORACE=\"strip_path_prefix=pkg/\" ./present\nthis makes the reports much shorter.\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode117\n2013/go1.1.slide:117: # TODO(adg): example of a blocking profile\nif you want to show a demo profile, the following generates a nice profile:\n\n$ go test -run=none -bench=.* -cpu=8 -blockprofile=prof net/rpc\n$ go tool pprof --web rpc.test prof\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode241\n2013/go1.1.slide:241: - Tighter coupling of the run-time and network libraries, resulting in fewer context switches on network operations.\nhey, what about the scheduler?",
			"disapproval": false,
			"date": "2013-04-30 17:12:52.958990",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"r@golang.org",
				"dvyukov@google.com",
				"seb.binet@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/8849049/diff/15001/2013/go1.1.slide\nFile 2013/go1.1.slide (right):\n\nhttps://codereview.appspot.com/8849049/diff/15001/2013/go1.1.slide#newcode123\n2013/go1.1.slide:123: The `go`run` command now runs all files in the current directory if no files are provided. In this sense,\nOn 2013/04/30 15:09:56, DMorsing wrote:\n> This will be not true once the revert is in.\n\nRemoved.\n\nhttps://codereview.appspot.com/8849049/diff/15001/2013/go1.1.slide#newcode199\n2013/go1.1.slide:199: The `Timer` type has a new method `Reset` that modifies the timer to expire after a specified duration.\nOn 2013/04/30 15:09:56, DMorsing wrote:\n> You probably mention in the script for this talk, but it would be nice to\n> mention that you get around generating garbage this way.\n\nDone.\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide\nFile 2013/go1.1.slide (right):\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode35\n2013/go1.1.slide:35: Sometimes you want to turn a method into a plain function (binding it to its receiver).\nOn 2013/04/30 16:54:28, r wrote:\n> you might mention the word 'curry'\n\nDone.\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode81\n2013/go1.1.slide:81: .play go1.1/race.go\nOn 2013/04/30 17:12:53, dvyukov wrote:\n> if you want to show the report, I find it useful to run present as:\n> $ TMPDIR=/a GORACE=\"strip_path_prefix=pkg/\" ./present\n> this makes the reports much shorter.\n\nAck\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode117\n2013/go1.1.slide:117: # TODO(adg): example of a blocking profile\nOn 2013/04/30 17:12:53, dvyukov wrote:\n> if you want to show a demo profile, the following generates a nice profile:\n> \n> $ go test -run=none -bench=.* -cpu=8 -blockprofile=prof net/rpc\n> $ go tool pprof --web rpc.test prof\n\nDone.\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode238\n2013/go1.1.slide:238: - In-ling of small functions by the gc compilers,\nOn 2013/05/01 11:15:09, binet wrote:\n> - In-ling\n> + In-lining\n> ? (not being a native english speaker, I would have written inlining, but...)\n\nDone.\n\nhttps://codereview.appspot.com/8849049/diff/20001/2013/go1.1.slide#newcode241\n2013/go1.1.slide:241: - Tighter coupling of the run-time and network libraries, resulting in fewer context switches on network operations.\nOn 2013/04/30 17:12:53, dvyukov wrote:\n> hey, what about the scheduler?\n\nit was implied by the last point, but i have made it explicit",
			"disapproval": false,
			"date": "2013-05-02 13:26:12.311180",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"r@golang.org",
				"dvyukov@google.com",
				"seb.binet@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-05-09 23:14:36.331210",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"r@golang.org",
				"dvyukov@google.com",
				"seb.binet@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=7597f5c52a13&repo=talks ***\n\ngo.talks/2013/go11: add What's new in Go 1.1 talk\n\nR=golang-dev, daniel.morsing, r, dvyukov, seb.binet\nCC=golang-dev\nhttps://codereview.appspot.com/8849049",
			"disapproval": false,
			"date": "2013-05-10 17:17:39.280750",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 8849049: go.talks/2013/go11: add What's new in Go 1.1 talk",
	"created": "2013-04-25 14:40:03.892530",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		12001,
		15001,
		20001,
		32001,
		37001,
		44001,
		48001
	],
	"modified": "2013-05-10 17:17:41.248580",
	"closed": true,
	"issue": 8849049
}