{
	"description": "go.text/encoding: add UTF-16 encodings.\n\nThere are some TODOs concerning the exact behavior for bad UTF-16, but\nI'll address those after getting consensus on the broad-brush design.\n\ncandide-utf-16le.txt was generated by\niconv -f UTF-8 -t UTF-16LE < candide-utf-8.txt > candide-utf-16le.txt",
	"cc": [
		"r@golang.org",
		"andybalholm@gmail.com",
		"golang-dev@googlegroups.com",
		"mpvl@golang.org",
		"rogpeppe@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"mpvl@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: andybalholm@gmail.com, golang-dev@googlegroups.com, mpvl@golang.org, rogpeppe@gmail.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.text",
			"disapproval": false,
			"date": "2013-07-19 06:12:36.301910",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"mpvl@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11565043/diff/5001/encoding/encoding_test.go\nFile encoding/encoding_test.go (right):\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/encoding_test.go#newcode279\nencoding/encoding_test.go:279: // - inputs with multiple U+FEFF and U+FFFE runes. Should occurences other\noccurrences\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/encoding_test.go#newcode280\nencoding/encoding_test.go:280: //   than at the start be converted to U+FFFD?\nno\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/encoding_test.go#newcode283\nencoding/encoding_test.go:283: //   return ErrShortSrc?\nU+FFFD\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/utf16.go\nFile encoding/utf16.go (right):\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/utf16.go#newcode20\nencoding/utf16.go:20: // the endianness used for decoding, and will instead be output as UTF-8:\ns/UTF-8/their standard UTF-8 encodings/\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/utf16.go#newcode30\nencoding/utf16.go:30: // the stream if the BOMPolicy is ExpectBOM. Otherwise, a BOM will not be\ns/stream/output/ or /output &/\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/utf16.go#newcode60\nencoding/utf16.go:60: // BigEndian is the big-endian form of UTF-16.\nthese have official names, UTF-16LE and UTF-16BE i think\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/utf16.go#newcode76\nencoding/utf16.go:76: return &utf16Decoder{endianness: u.endianness, bomPolicy: u.bomPolicy}\nit's not superimportant but i would check that the policy and endianness are valid.\ni would also consider making them boolean rather than integers just so they can never be invalid and i can avoid the check.\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/utf16.go#newcode91\nencoding/utf16.go:91: return \"UTF16(\" + e + \" Endian, \" + b + \" BOM)\"\nmaybe UTF-16LE etc.\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/utf16.go#newcode95\nencoding/utf16.go:95: // TODO: does these need to be explicitly or implicitly reset, if this\ns/does/do/\n\nhttps://codereview.appspot.com/11565043/diff/5001/encoding/utf16.go#newcode186\nencoding/utf16.go:186: // If the previous input was invalid UTF-8, skip any continuation bytes.\noverkill. see what unicode/utf8 does",
			"disapproval": false,
			"date": "2013-07-19 06:23:16.660590",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"mpvl@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Trivial edits were done.\n\nI'm leaning in favor of removing the UTF-8 synchronization code, but I'll let it stew overnight (and while I'm on vacation).",
			"disapproval": false,
			"date": "2013-07-19 07:05:45.530680",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"mpvl@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nI will remove the UTF-8 synchronization code, but I'll do that in a follow-up CL, as that affects the existing charmap encodings, not just the new UTF-16 encodings that this CL adds.",
			"disapproval": false,
			"date": "2013-07-29 05:36:19.765290",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"mpvl@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nthen delete the UTF-8 sync code",
			"disapproval": false,
			"date": "2013-07-30 01:46:38.740430",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"mpvl@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c80cf5c1f0a2&repo=text ***\n\ngo.text/encoding: add UTF-16 encodings.\n\nThere are some TODOs concerning the exact behavior for bad UTF-16, but\nI'll address those after getting consensus on the broad-brush design.\n\ncandide-utf-16le.txt was generated by\niconv -f UTF-8 -t UTF-16LE < candide-utf-8.txt > candide-utf-16le.txt\n\nR=r\nCC=andybalholm, golang-dev, mpvl, rogpeppe\nhttps://codereview.appspot.com/11565043",
			"disapproval": false,
			"date": "2013-07-30 01:53:42.499700",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 11565043: go.text/encoding: add UTF-16 encodings.",
	"created": "2013-07-19 06:12:02.353710",
	"patchsets": [
		1,
		2001,
		5001,
		11001,
		13001,
		20001
	],
	"modified": "2013-07-30 01:53:45.815350",
	"closed": true,
	"issue": 11565043
}