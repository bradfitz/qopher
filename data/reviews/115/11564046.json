{
	"description": "go.tools/ssa: repair treatment of typeswitch after recent go/types changes.\n\nNow, in a \"switch y := x.(type)\", there is no object for the\nouter y, only implicit objects, one per case (including\ndefault).\n\nAlso: don't set obj=nil for blank idents (workaround suggested by gri).",
	"cc": [
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-24 17:41:00.447800",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/11564046/diff/2/ssa/builder.go\nFile ssa/builder.go (right):\n\nhttps://codereview.appspot.com/11564046/diff/2/ssa/builder.go#newcode1428\nssa/builder.go:1428: var dflt *ast.CaseClause\nit took me a while to decipher dflt. default_ ? (adding an _ is the default (pardon the pun) remedy in cases like this\n\nhttps://codereview.appspot.com/11564046/diff/2/ssa/builder.go#newcode1438\nssa/builder.go:1438: var ti Value // t_i, ok := typeassert,ok x <T_i>\nt_i or ti ?\ncomment seems inconsistent",
			"disapproval": false,
			"date": "2013-07-24 17:56:27.855500",
			"approval": true
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11564046/diff/2/ssa/builder.go\nFile ssa/builder.go (right):\n\nhttps://codereview.appspot.com/11564046/diff/2/ssa/builder.go#newcode1428\nssa/builder.go:1428: var dflt *ast.CaseClause\nOn 2013/07/24 17:56:27, gri wrote:\n> it took me a while to decipher dflt. default_ ? (adding an _ is the default\n> (pardon the pun) remedy in cases like this\n\nDone.\n\nhttps://codereview.appspot.com/11564046/diff/2/ssa/builder.go#newcode1438\nssa/builder.go:1438: var ti Value // t_i, ok := typeassert,ok x <T_i>\nOn 2013/07/24 17:56:27, gri wrote:\n> t_i or ti ?\n> comment seems inconsistent\n\nDone.",
			"disapproval": false,
			"date": "2013-07-24 18:03:39.532670",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=94544f166296&repo=tools ***\n\ngo.tools/ssa: repair treatment of typeswitch after recent go/types changes.\n\nNow, in a \"switch y := x.(type)\", there is no object for the\nouter y, only implicit objects, one per case (including\ndefault).\n\nAlso: don't set obj=nil for blank idents (workaround suggested by gri).\n\nR=gri\nCC=golang-dev\nhttps://codereview.appspot.com/11564046",
			"disapproval": false,
			"date": "2013-07-24 18:03:55.696900",
			"approval": false
		}
	],
	"owner_email": "adonovan@google.com",
	"private": false,
	"base_url": "",
	"owner": "adonovan",
	"subject": "code review 11564046: go.tools/ssa: repair treatment of typeswitch after rece...",
	"created": "2013-07-24 17:38:58.677550",
	"patchsets": [
		1,
		3001,
		8001,
		11001,
		2,
		17001,
		11004
	],
	"modified": "2013-07-24 18:03:56.910140",
	"closed": true,
	"issue": 11564046
}