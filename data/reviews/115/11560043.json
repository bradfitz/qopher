{
	"description": "runtime: disable preemption during runtime.settype\n\nIt assumes that the m will not change, and the m may\nchange if the goroutine is preempted.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"dvyukov@google.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-19 02:46:49.133590",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-19 02:58:06.185110",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=353ca41927f1 ***\n\nruntime: disable preemption during runtime.settype\n\nIt assumes that the m will not change, and the m may\nchange if the goroutine is preempted.\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/11560043",
			"disapproval": false,
			"date": "2013-07-19 02:58:52.499650",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"rsc@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/19 02:58:52, rsc wrote:\n> *** Submitted as https://code.google.com/p/go/source/detail?r=353ca41927f1 ***\n> \n> runtime: disable preemption during runtime.settype\n> \n> It assumes that the m will not change, and the m may\n> change if the goroutine is preempted.\n\n\nPreemption can happen only in function calls, I do not see how it can happen here -- there are no function calls.\n\nsettype must be atomic with mallocgc -- the goroutine can be preempted in between and then the block will be scanned w/o type into.\n\nHere is the long time pending CL to fix all these problems:\nhttps://codereview.appspot.com/10136043/",
			"disapproval": false,
			"date": "2013-07-19 08:57:08.990070",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The function call is settype calling settype_flush.",
			"disapproval": false,
			"date": "2013-07-22 18:45:10.919900",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 11560043: runtime: disable preemption during runtime.settype",
	"created": "2013-07-19 02:44:33.630960",
	"patchsets": [
		1,
		2001,
		3001,
		8001
	],
	"modified": "2013-07-22 18:45:11.140650",
	"closed": true,
	"issue": 11560043
}