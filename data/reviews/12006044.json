{
	"description": "misc/dashboard/builder: add support for multiple VCS on dashboard\n\nCurrently, the go dashboard only support Mercurial as a VCS. In the\nfuture, we want to add the gofrontend to the build dashboard, and\nwe'll need at least Subversion support as well.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"cmang@google.com",
		"adg@google.com",
		"dsymonds@golang.org",
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "adg@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I suggest we move the dashboard code from the core repo to\r\ngo.tools/dashboard, and the new vcs package can live there too.\r\n\r\nYou're right that cmd/go cannot be dependent on go.tools/vcs; not without\r\nsome bootstrapping work anyway. We can maintain the go.tools/vcs package so\r\nthat vcs.go can be copied to cmd/go with only a package statement rewrite.\r\n\r\nThe first step is to move misc/dashboard to go.tools/dashboard (if nobody\r\nhas any objections). dsymonds should weigh in, because he owns\r\nmisc/dashboard/codereview which should either stay or live somewhere else,\r\nas it's not related to the build infrastructure.\r\n\r\nAfter the move, send a CL to add package go.tools/vcs and use it in\r\ngo.tools/dashboard/builder.\r\n\r\nSound good?\r\n\r\nAndrew\r\n",
			"disapproval": false,
			"date": "2013-07-29 23:34:02.069050",
			"approval": false
		},
		{
			"sender": "cmang@golang.org",
			"recipients": [
				"cmang@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-29 17:28:32.367830",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"cmang@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=adg\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go\nFile misc/dashboard/builder/vcs.go (right):\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode21\nmisc/dashboard/builder/vcs.go:21: Vcs  *vcsCmd\nGo style is to not mix case of initalisms.\n\nSo this would be \"vcs\" or \"VCS\", but never \"Vcs\".\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode123\nmisc/dashboard/builder/vcs.go:123: // CompleteCommand returns the full command with arguments substituted in.\nsubstituted how?\n\nalso, what is the difference between cmd and cmdline?\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode194\nmisc/dashboard/builder/vcs.go:194: // A Log represents any VCS Changelog that can hold multiple entries.\n// A LogHolder (not Log)\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode203\nmisc/dashboard/builder/vcs.go:203: func (holder HgLogHolder) UnmarshalXML(data string) error {\nyou probably want a pointer receiver here.  you're at least taking the address of things in the method body.\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode204\nmisc/dashboard/builder/vcs.go:204: err := xml.Unmarshal([]byte(data), &holder.Logs)\njust return it directly, without the var?\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode212\nmisc/dashboard/builder/vcs.go:212: func (holder SvnLogHolder) UnmarshalXML(data string) error {\nyou probably want a pointer receiver here.  you're at least taking the address of things in the method body.\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode213\nmisc/dashboard/builder/vcs.go:213: err := xml.Unmarshal([]byte(data), &holder.Logs)\nlikewise",
			"disapproval": false,
			"date": "2013-07-29 20:54:19.935520",
			"approval": false
		},
		{
			"sender": "cmang@golang.org",
			"recipients": [
				"cmang@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go\nFile misc/dashboard/builder/vcs.go (right):\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode21\nmisc/dashboard/builder/vcs.go:21: Vcs  *vcsCmd\nOn 2013/07/29 20:54:20, bradfitz wrote:\n> Go style is to not mix case of initalisms.\n> \n> So this would be \"vcs\" or \"VCS\", but never \"Vcs\".\n\nDone.\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode123\nmisc/dashboard/builder/vcs.go:123: // CompleteCommand returns the full command with arguments substituted in.\nOn 2013/07/29 20:54:20, bradfitz wrote:\n> substituted how?\n> \n> also, what is the difference between cmd and cmdline?\n\nI kind stole this from cmd/go/vcs.go and mixed the terminology. `cmd` is supposed to be represent the VCS cmd (i.e. `hg --config extensions.codereview=!`), where as cmdline is supposed to be the command line argument template (i.e. `log --limit={limit} --encoding=utf-8 --template={template}`) that gets variables inside of `{}` substituted in. Perhaps these should be named differently?\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode194\nmisc/dashboard/builder/vcs.go:194: // A Log represents any VCS Changelog that can hold multiple entries.\nOn 2013/07/29 20:54:20, bradfitz wrote:\n> // A LogHolder (not Log)\n\nDone.\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode203\nmisc/dashboard/builder/vcs.go:203: func (holder HgLogHolder) UnmarshalXML(data string) error {\nOn 2013/07/29 20:54:20, bradfitz wrote:\n> you probably want a pointer receiver here.  you're at least taking the address\n> of things in the method body.\n\nDone.\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode204\nmisc/dashboard/builder/vcs.go:204: err := xml.Unmarshal([]byte(data), &holder.Logs)\nOn 2013/07/29 20:54:20, bradfitz wrote:\n> just return it directly, without the var?\n\nDone.\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode212\nmisc/dashboard/builder/vcs.go:212: func (holder SvnLogHolder) UnmarshalXML(data string) error {\nOn 2013/07/29 20:54:20, bradfitz wrote:\n> you probably want a pointer receiver here.  you're at least taking the address\n> of things in the method body.\n\nDone.\n\nhttps://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode213\nmisc/dashboard/builder/vcs.go:213: err := xml.Unmarshal([]byte(data), &holder.Logs)\nOn 2013/07/29 20:54:20, bradfitz wrote:\n> likewise\n\nDone.",
			"disapproval": false,
			"date": "2013-07-29 21:55:23.764200",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Leaving for Andrew to review.\r\n\r\nI just did a quick style pass.\r\n\r\nYou may want to summarize for Andrew the different options we discuss\r\nregarding where the VCS logic goes (between the main repo's \"go get\" and\r\nthe builder) and whether we should just mirror one file to another\r\nlocation.  (Is that still the plan? Or is the one vcs.go now a fork and not\r\nan identical copy?)\r\n\r\n\r\n\r\n\r\n\r\nOn Mon, Jul 29, 2013 at 2:55 PM, <cmang@golang.org> wrote:\r\n\r\n>\r\n> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n> dashboard/builder/vcs.go<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go>\r\n> File misc/dashboard/builder/vcs.go (right):\r\n>\r\n> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n> dashboard/builder/vcs.go#**newcode21<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode21>\r\n> misc/dashboard/builder/vcs.go:**21: Vcs  *vcsCmd\r\n> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>\r\n>> Go style is to not mix case of initalisms.\r\n>>\r\n>\r\n>  So this would be \"vcs\" or \"VCS\", but never \"Vcs\".\r\n>>\r\n>\r\n> Done.\r\n>\r\n>\r\n> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n> dashboard/builder/vcs.go#**newcode123<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode123>\r\n> misc/dashboard/builder/vcs.go:**123: // CompleteCommand returns the full\r\n> command with arguments substituted in.\r\n> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>\r\n>> substituted how?\r\n>>\r\n>\r\n>  also, what is the difference between cmd and cmdline?\r\n>>\r\n>\r\n> I kind stole this from cmd/go/vcs.go and mixed the terminology. `cmd` is\r\n> supposed to be represent the VCS cmd (i.e. `hg --config\r\n> extensions.codereview=!`), where as cmdline is supposed to be the\r\n> command line argument template (i.e. `log --limit={limit}\r\n> --encoding=utf-8 --template={template}`) that gets variables inside of\r\n> `{}` substituted in. Perhaps these should be named differently?\r\n>\r\n>\r\n> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n> dashboard/builder/vcs.go#**newcode194<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode194>\r\n> misc/dashboard/builder/vcs.go:**194: // A Log represents any VCS Changelog\r\n> that can hold multiple entries.\r\n> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>\r\n>> // A LogHolder (not Log)\r\n>>\r\n>\r\n> Done.\r\n>\r\n>\r\n> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n> dashboard/builder/vcs.go#**newcode203<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode203>\r\n> misc/dashboard/builder/vcs.go:**203: func (holder HgLogHolder)\r\n> UnmarshalXML(data string) error {\r\n> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>\r\n>> you probably want a pointer receiver here.  you're at least taking the\r\n>>\r\n> address\r\n>\r\n>> of things in the method body.\r\n>>\r\n>\r\n> Done.\r\n>\r\n>\r\n> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n> dashboard/builder/vcs.go#**newcode204<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode204>\r\n> misc/dashboard/builder/vcs.go:**204: err := xml.Unmarshal([]byte(data),\r\n> &holder.Logs)\r\n> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>\r\n>> just return it directly, without the var?\r\n>>\r\n>\r\n> Done.\r\n>\r\n>\r\n> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n> dashboard/builder/vcs.go#**newcode212<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode212>\r\n> misc/dashboard/builder/vcs.go:**212: func (holder SvnLogHolder)\r\n> UnmarshalXML(data string) error {\r\n> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>\r\n>> you probably want a pointer receiver here.  you're at least taking the\r\n>>\r\n> address\r\n>\r\n>> of things in the method body.\r\n>>\r\n>\r\n> Done.\r\n>\r\n>\r\n> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n> dashboard/builder/vcs.go#**newcode213<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode213>\r\n> misc/dashboard/builder/vcs.go:**213: err := xml.Unmarshal([]byte(data),\r\n> &holder.Logs)\r\n> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>\r\n>> likewise\r\n>>\r\n>\r\n> Done.\r\n>\r\n> https://codereview.appspot.**com/12006044/<https://codereview.appspot.com/12006044/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-29 22:07:42.535540",
			"approval": false
		},
		{
			"sender": "cmang@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Andrew,\r\n\r\nAs Brad suggests, a lot of the VCS code added here was adapted from\r\ncmd/go/vcs.go, which supports several VCS. As of right now, the code here\r\nis a minor fork of the code from cmd/go/vcs.go, as I've added extra\r\ncommands and logging abilities to the vcsCmd struct that weren't there\r\nbefore. The code in cmd/go/vcs.go is really useful though, and it might be\r\na good idea in the future to decouple it from `go get` and possibly put it\r\nin go.tools in the same manner as vet and cover. However, the `go get`\r\ncommand probably shouldn't be dependent on things inside of go.tools, so it\r\nmight be a good idea to have the cmd/go/vcs.go be a mirror of the code in\r\ngo.tools/vcs.\r\n\r\nFor the time being though, I'm just trying add support for building a\r\ngofrontend dashboard that reuses most of the already written go dashboard\r\ncode. Let me know what you think is the best course of action.\r\n\r\n\r\nOn Mon, Jul 29, 2013 at 3:07 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> Leaving for Andrew to review.\r\n>\r\n> I just did a quick style pass.\r\n>\r\n> You may want to summarize for Andrew the different options we discuss\r\n> regarding where the VCS logic goes (between the main repo's \"go get\" and\r\n> the builder) and whether we should just mirror one file to another\r\n> location.  (Is that still the plan? Or is the one vcs.go now a fork and not\r\n> an identical copy?)\r\n>\r\n>\r\n>\r\n>\r\n>\r\n> On Mon, Jul 29, 2013 at 2:55 PM, <cmang@golang.org> wrote:\r\n>\r\n>>\r\n>> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n>> dashboard/builder/vcs.go<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go>\r\n>> File misc/dashboard/builder/vcs.go (right):\r\n>>\r\n>> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n>> dashboard/builder/vcs.go#**newcode21<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode21>\r\n>> misc/dashboard/builder/vcs.go:**21: Vcs  *vcsCmd\r\n>> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>>\r\n>>> Go style is to not mix case of initalisms.\r\n>>>\r\n>>\r\n>>  So this would be \"vcs\" or \"VCS\", but never \"Vcs\".\r\n>>>\r\n>>\r\n>> Done.\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n>> dashboard/builder/vcs.go#**newcode123<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode123>\r\n>> misc/dashboard/builder/vcs.go:**123: // CompleteCommand returns the full\r\n>> command with arguments substituted in.\r\n>> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>>\r\n>>> substituted how?\r\n>>>\r\n>>\r\n>>  also, what is the difference between cmd and cmdline?\r\n>>>\r\n>>\r\n>> I kind stole this from cmd/go/vcs.go and mixed the terminology. `cmd` is\r\n>> supposed to be represent the VCS cmd (i.e. `hg --config\r\n>> extensions.codereview=!`), where as cmdline is supposed to be the\r\n>> command line argument template (i.e. `log --limit={limit}\r\n>> --encoding=utf-8 --template={template}`) that gets variables inside of\r\n>> `{}` substituted in. Perhaps these should be named differently?\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n>> dashboard/builder/vcs.go#**newcode194<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode194>\r\n>> misc/dashboard/builder/vcs.go:**194: // A Log represents any VCS\r\n>> Changelog\r\n>> that can hold multiple entries.\r\n>> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>>\r\n>>> // A LogHolder (not Log)\r\n>>>\r\n>>\r\n>> Done.\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n>> dashboard/builder/vcs.go#**newcode203<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode203>\r\n>> misc/dashboard/builder/vcs.go:**203: func (holder HgLogHolder)\r\n>> UnmarshalXML(data string) error {\r\n>> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>>\r\n>>> you probably want a pointer receiver here.  you're at least taking the\r\n>>>\r\n>> address\r\n>>\r\n>>> of things in the method body.\r\n>>>\r\n>>\r\n>> Done.\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n>> dashboard/builder/vcs.go#**newcode204<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode204>\r\n>> misc/dashboard/builder/vcs.go:**204: err := xml.Unmarshal([]byte(data),\r\n>> &holder.Logs)\r\n>> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>>\r\n>>> just return it directly, without the var?\r\n>>>\r\n>>\r\n>> Done.\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n>> dashboard/builder/vcs.go#**newcode212<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode212>\r\n>> misc/dashboard/builder/vcs.go:**212: func (holder SvnLogHolder)\r\n>> UnmarshalXML(data string) error {\r\n>> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>>\r\n>>> you probably want a pointer receiver here.  you're at least taking the\r\n>>>\r\n>> address\r\n>>\r\n>>> of things in the method body.\r\n>>>\r\n>>\r\n>> Done.\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/12006044/diff/6001/misc/**\r\n>> dashboard/builder/vcs.go#**newcode213<https://codereview.appspot.com/12006044/diff/6001/misc/dashboard/builder/vcs.go#newcode213>\r\n>> misc/dashboard/builder/vcs.go:**213: err := xml.Unmarshal([]byte(data),\r\n>> &holder.Logs)\r\n>> On 2013/07/29 20:54:20, bradfitz wrote:\r\n>>\r\n>>> likewise\r\n>>>\r\n>>\r\n>> Done.\r\n>>\r\n>> https://codereview.appspot.**com/12006044/<https://codereview.appspot.com/12006044/>\r\n>>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-29 22:25:21.682810",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm fine with it moving.\r\n",
			"disapproval": false,
			"date": "2013-07-30 04:22:42.464200",
			"approval": false
		},
		{
			"sender": "adg@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 30 July 2013 14:22, David Symonds <dsymonds@golang.org> wrote:\r\n\r\n> I'm fine with it moving.\r\n\r\n\r\nAfter some discussion, we decided to leave misc/dashboard/codereview where\r\nit is (it will go away soon once qopher matures), but move the other stuff\r\nto go.tools.\r\n",
			"disapproval": false,
			"date": "2013-07-30 04:27:22.094580",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "SGTM.\r\n\r\nOn Tue, Jul 30, 2013 at 2:26 PM, Andrew Gerrand <adg@google.com> wrote:\r\n>\r\n> On 30 July 2013 14:22, David Symonds <dsymonds@golang.org> wrote:\r\n>>\r\n>> I'm fine with it moving.\r\n>\r\n>\r\n> After some discussion, we decided to leave misc/dashboard/codereview where\r\n> it is (it will go away soon once qopher matures), but move the other stuff\r\n> to go.tools.\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-30 04:29:22.449350",
			"approval": false
		}
	],
	"owner_email": "cmang@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rpd",
	"subject": "code review 12006044: misc/dashboard/builder: add support for multiple VCS on...",
	"created": "2013-07-29 17:15:20.965370",
	"patchsets": [
		1,
		3001,
		6001,
		12001
	],
	"modified": "2013-07-30 04:29:22.806270",
	"closed": false,
	"issue": 12006044
}