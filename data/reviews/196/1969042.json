{
	"description": "path: added func Rooted to check if the path is rooted.",
	"cc": [
		"rsc@golang.org",
		"imkrasin@gmail.com",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2010-08-11 15:24:53.619343",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/1969042/diff/2001/3002\nFile src/pkg/path/path_test.go (right):\n\nhttp://codereview.appspot.com/1969042/diff/2001/3002#newcode330\nsrc/pkg/path/path_test.go:330: t.Errorf(\"Rooted(%q) = %q, want %q\", test.path, r, test.rooted)\nOn 2010/08/26 16:44:02, rsc1 wrote:\n> = %v want %v\n> \n> %q will refuse to print a bool\n> \n\nDone.",
			"disapproval": false,
			"date": "2010-08-26 21:28:18.493538",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nbut please fix printf bug\n\nhttp://codereview.appspot.com/1969042/diff/2001/3002\nFile src/pkg/path/path_test.go (right):\n\nhttp://codereview.appspot.com/1969042/diff/2001/3002#newcode330\nsrc/pkg/path/path_test.go:330: t.Errorf(\"Rooted(%q) = %q, want %q\", test.path, r, test.rooted)\n= %v want %v\n\n%q will refuse to print a bool",
			"disapproval": false,
			"date": "2010-08-26 16:44:02.346833",
			"approval": true
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nOn 2010/08/26 21:28:18, imkrasin wrote:\n> http://codereview.appspot.com/1969042/diff/2001/3002\n> File src/pkg/path/path_test.go (right):\n> \n> http://codereview.appspot.com/1969042/diff/2001/3002#newcode330\n> src/pkg/path/path_test.go:330: t.Errorf(\"Rooted(%q) = %q, want %q\", test.path,\n> r, test.rooted)\n> On 2010/08/26 16:44:02, rsc1 wrote:\n> > = %v want %v\n> > \n> > %q will refuse to print a bool\n> > \n> \n> Done.",
			"disapproval": false,
			"date": "2010-09-01 12:25:59.390530",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Ping?\n\nOn 2010/09/01 12:25:59, imkrasin wrote:\n> PTAL\n> \n> On 2010/08/26 21:28:18, imkrasin wrote:\n> > http://codereview.appspot.com/1969042/diff/2001/3002\n> > File src/pkg/path/path_test.go (right):\n> > \n> > http://codereview.appspot.com/1969042/diff/2001/3002#newcode330\n> > src/pkg/path/path_test.go:330: t.Errorf(\"Rooted(%q) = %q, want %q\", test.path,\n> > r, test.rooted)\n> > On 2010/08/26 16:44:02, rsc1 wrote:\n> > > = %v want %v\n> > > \n> > > %q will refuse to print a bool\n> > > \n> > \n> > Done.",
			"disapproval": false,
			"date": "2010-09-05 18:32:22.229621",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I'll get there.  I'm still drowning in code reviews -\nI haven't even figured out what's going on with\nmksyscall.sh - and this is a long weekend in the US.\n\nRuss\n",
			"disapproval": false,
			"date": "2010-09-06 21:32:21.911852",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/1969042/diff/11001/12001\nFile src/pkg/path/path.go (right):\n\nhttp://codereview.appspot.com/1969042/diff/11001/12001#newcode212\nsrc/pkg/path/path.go:212: func Rooted(path string) bool {\nThis function needs a comment for godoc.  Also Rooted is an unfortunate name choice since it has unpleasant connotations in some countries.  Finally I prefer boolean functions to be phrases like \"is this\" or \"at there\"; that makes the code read better. \n\nTechnically this is not a 'rooted' path but an absolute path, so the right name is probably IsAbsolute but that is long. Perhaps AtRoot is OK.\n\nhttp://codereview.appspot.com/1969042/diff/11001/12001#newcode215\nsrc/pkg/path/path.go:215: return strings.HasPrefix(path, \"/\")\nyou don't need the 'path' variable.",
			"disapproval": false,
			"date": "2010-09-06 21:54:22.500632",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Rob,\n\nI've answered your comments and have updated the code.\n\nRuss,\nno problem. I understand.\n\nhttp://codereview.appspot.com/1969042/diff/11001/12001\nFile src/pkg/path/path.go (right):\n\nhttp://codereview.appspot.com/1969042/diff/11001/12001#newcode212\nsrc/pkg/path/path.go:212: func Rooted(path string) bool {\nOn 2010/09/06 21:54:22, r wrote:\n> This function needs a comment for godoc.  Also Rooted is an unfortunate name\n> choice since it has unpleasant connotations in some countries.  Finally I prefer\n> boolean functions to be phrases like \"is this\" or \"at there\"; that makes the\n> code read better. \n> \n> Technically this is not a 'rooted' path but an absolute path, so the right name\n> is probably IsAbsolute but that is long. Perhaps AtRoot is OK.\n> \n\nDone.\n\nIsAbs looks to be a good fit. Python uses path.isabs to check if path is absolute. Also, abs is very known acronym for absolute because of math function.\n\nhttp://codereview.appspot.com/1969042/diff/11001/12001#newcode215\nsrc/pkg/path/path.go:215: return strings.HasPrefix(path, \"/\")\nOn 2010/09/06 21:54:22, r wrote:\n> you don't need the 'path' variable.\n\nDone.",
			"disapproval": false,
			"date": "2010-09-07 08:01:55.480040",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/1969042/diff/20001/src/pkg/path/path.go\nFile src/pkg/path/path.go (right):\n\nhttp://codereview.appspot.com/1969042/diff/20001/src/pkg/path/path.go#newcode212\nsrc/pkg/path/path.go:212: // IsAbs returns if the path is absolute. The path is cleaned before checking.\ns/returns/returns true/\n\nWhy clean the path?  It shouldn't change the answer and it's expensive.",
			"disapproval": false,
			"date": "2010-09-08 14:21:39.314128",
			"approval": false
		},
		{
			"sender": "imkrasin@gmail.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/1969042/diff/20001/src/pkg/path/path.go\nFile src/pkg/path/path.go (right):\n\nhttp://codereview.appspot.com/1969042/diff/20001/src/pkg/path/path.go#newcode212\nsrc/pkg/path/path.go:212: // IsAbs returns if the path is absolute. The path is cleaned before checking.\nOn 2010/09/08 14:21:39, rsc1 wrote:\n> s/returns/returns true/\nDone.\n\n> \n> Why clean the path?  It shouldn't change the answer and it's expensive.\n> \n\nI thought it's more safe. For example, if Clean will do something like trimming spaces at the beginning of the path, it will make sense.\nBut since it is not a big deal, I have removed Clean call",
			"disapproval": false,
			"date": "2010-09-08 14:30:00.286742",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nleaving for rsc",
			"disapproval": false,
			"date": "2010-09-09 04:31:52.818431",
			"approval": true
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2010-09-09 04:54:06.488847",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"krasin@golang.org",
				"rsc@golang.org",
				"imkrasin@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=96ed4ec3f5a8 ***\n\npath: add IsAbs\n\nR=rsc, imkrasin, r\nCC=golang-dev\nhttp://codereview.appspot.com/1969042\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2010-09-09 05:42:45.943922",
			"approval": false
		}
	],
	"owner_email": "krasin@golang.org",
	"private": false,
	"base_url": "",
	"owner": "Ivan Krasin",
	"subject": "path: added func Rooted to check if the path is rooted.",
	"created": "2010-08-11 15:22:28.070423",
	"patchsets": [
		1,
		2001,
		11001,
		20001,
		25001
	],
	"modified": "2012-01-22 01:39:43.841628",
	"closed": true,
	"issue": 1969042
}