{
	"description": "go/scanner: 17% faster scanning\n\n- Changed the Scan API semantics slightly:\nThe token literal string is only returned\nif the token is a literal, comment, semicolon,\nor illegal character. In all other cases, the\ntoken literal value is determined by the token\nvalue.\n\nClients that care about the token literal value\nwhen not present can always use the following\npiece of code:\n\npos, tok, lit := scanner.Scan()\nif lit == \"\" {\n   lit = tok.String()\n}\n\n- Changed token.Lookup API to use a string instead\nof a []byte argument.\n\n- Both these changes were long-standing TODOs.\n\n- Added BenchmarkScan.\n\nThis change permits a faster implementation of Scan\nwith much fewer string creations:\n\nbenchmark                old ns/op    new ns/op    delta\nscanner.BenchmarkScan        74404        61457  -17.40%",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=af2cb1911e0e ***\n\ngo/scanner: 17% faster scanning\n\n- Changed the Scan API semantics slightly:\nThe token literal string is only returned\nif the token is a literal, comment, semicolon,\nor illegal character. In all other cases, the\ntoken literal value is determined by the token\nvalue.\n\nClients that care about the token literal value\nwhen not present can always use the following\npiece of code:\n\npos, tok, lit := scanner.Scan()\nif lit == \"\" {\n   lit = tok.String()\n}\n\n- Changed token.Lookup API to use a string instead\nof a []byte argument.\n\n- Both these changes were long-standing TODOs.\n\n- Added BenchmarkScan.\n\nThis change permits a faster implementation of Scan\nwith much fewer string creations:\n\nbenchmark                old ns/op    new ns/op    delta\nscanner.BenchmarkScan        74404        61457  -17.40%\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5532076",
			"disapproval": false,
			"date": "2012-01-11 22:20:37.443276",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-11 22:10:42.066886",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-01-11 22:14:59.598210",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5532076: go/scanner: 17% faster scanning",
	"created": "2012-01-11 21:57:20.442551",
	"patchsets": [
		1,
		2001,
		1002,
		2002,
		1006,
		7001
	],
	"modified": "2012-01-11 22:20:38.942820",
	"closed": true,
	"issue": 5532076
}