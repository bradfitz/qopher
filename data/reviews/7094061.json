{
	"description": "runtime: avoid defining the same variable in more than one translation unit\nFor gccgo runtime and Darwin where -fno-common is the default.",
	"cc": [
		"iant@golang.org",
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"iant@google.com"
	],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Don't we already pass -fno-common on all platforms in cmd/dist/build.c ?\r\n\r\nOn 21/01/2013, at 14:52, minux.ma@gmail.com wrote:\r\n\r\n> Reviewers: iant,\r\n> \r\n> Message:\r\n> Hello iant@golang.org (cc: golang-dev@googlegroups.com),\r\n> \r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n> \r\n> \r\n> Description:\r\n> pkg/runtime: avoid defining the same variable in more than one\r\n> translation unit\r\n> For gccgo runtime and Darwin where -fno-common is the default.\r\n> \r\n> Please review this at https://codereview.appspot.com/7094061/\r\n> \r\n> Affected files:\r\n>  M src/pkg/runtime/malloc.goc\r\n>  M src/pkg/runtime/malloc.h\r\n>  M src/pkg/runtime/proc.c\r\n>  M src/pkg/runtime/runtime.h\r\n> \r\n> \r\n> Index: src/pkg/runtime/malloc.goc\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/malloc.goc\r\n> +++ b/src/pkg/runtime/malloc.goc\r\n> @@ -19,6 +19,8 @@\r\n> #pragma dataflag 16 /* mark mheap as 'no pointers', hiding from garbage collector */\r\n> MHeap runtime\u00b7mheap;\r\n> \r\n> +int32    runtime\u00b7checking;\r\n> +\r\n> extern MStats mstats;    // defined in zruntime_def_$GOOS_$GOARCH.go\r\n> \r\n> extern volatile intgo runtime\u00b7MemProfileRate;\r\n> Index: src/pkg/runtime/malloc.h\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/malloc.h\r\n> +++ b/src/pkg/runtime/malloc.h\r\n> @@ -446,7 +446,7 @@\r\n> void    runtime\u00b7checkallocated(void *v, uintptr n);\r\n> void    runtime\u00b7markfreed(void *v, uintptr n);\r\n> void    runtime\u00b7checkfreed(void *v, uintptr n);\r\n> -int32    runtime\u00b7checking;\r\n> +extern    int32    runtime\u00b7checking;\r\n> void    runtime\u00b7markspan(void *v, uintptr size, uintptr n, bool leftover);\r\n> void    runtime\u00b7unmarkspan(void *v, uintptr size);\r\n> bool    runtime\u00b7blockspecial(void*);\r\n> Index: src/pkg/runtime/proc.c\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/proc.c\r\n> +++ b/src/pkg/runtime/proc.c\r\n> @@ -24,6 +24,13 @@\r\n> \r\n> int32    runtime\u00b7gcwaiting;\r\n> \r\n> +G*    runtime\u00b7allg;\r\n> +G*    runtime\u00b7lastg;\r\n> +M*    runtime\u00b7allm;\r\n> +\r\n> +int8*    runtime\u00b7goos;\r\n> +int32    runtime\u00b7ncpu;\r\n> +\r\n> // Go scheduler\r\n> //\r\n> // The go scheduler's job is to match ready-to-run goroutines (`g's)\r\n> Index: src/pkg/runtime/runtime.h\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/runtime.h\r\n> +++ b/src/pkg/runtime/runtime.h\r\n> @@ -562,15 +562,15 @@\r\n>  */\r\n> extern    String    runtime\u00b7emptystring;\r\n> extern    uintptr runtime\u00b7zerobase;\r\n> -G*    runtime\u00b7allg;\r\n> -G*    runtime\u00b7lastg;\r\n> -M*    runtime\u00b7allm;\r\n> +extern    G*    runtime\u00b7allg;\r\n> +extern    G*    runtime\u00b7lastg;\r\n> +extern    M*    runtime\u00b7allm;\r\n> extern    int32    runtime\u00b7gomaxprocs;\r\n> extern    bool    runtime\u00b7singleproc;\r\n> extern    uint32    runtime\u00b7panicking;\r\n> extern    int32    runtime\u00b7gcwaiting;        // gc is waiting to run\r\n> -int8*    runtime\u00b7goos;\r\n> -int32    runtime\u00b7ncpu;\r\n> +extern    int8*    runtime\u00b7goos;\r\n> +extern    int32    runtime\u00b7ncpu;\r\n> extern    bool    runtime\u00b7iscgo;\r\n> extern    void    (*runtime\u00b7sysargs)(int32, uint8**);\r\n> extern    uint32    runtime\u00b7maxstring;\r\n> \r\n> \r\n",
			"disapproval": false,
			"date": "2013-01-21 03:58:36.567610",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jan 21, 2013 at 11:58 AM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> Don't we already pass -fno-common on all platforms in cmd/dist/build.c ?\r\n\r\nThis change is for gccgo's runtime where the runtime is compiled by gcc.\r\n\r\nsee https://codereview.appspot.com/7096063/ for relevant discussions.\r\n",
			"disapproval": false,
			"date": "2013-01-21 04:03:04.977860",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello iant@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-21 03:52:35.445870",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks.",
			"disapproval": false,
			"date": "2013-01-25 23:51:06.031210",
			"approval": true
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jan 25, 2013 at 5:59 PM, minux <minux.ma@gmail.com> wrote:\r\n> Hi Ian, could you please merge this into gofrontend and gcc trunk if\r\n> possible?\r\n> or do you want me to submit CL to gofrontend?\r\n\r\nI've merged the current library into gofrontend.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2013-01-29 23:31:54.614790",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Ian, could you please merge this into gofrontend and gcc trunk if\r\npossible?\r\nor do you want me to submit CL to gofrontend?\r\n",
			"disapproval": false,
			"date": "2013-01-26 01:59:55.215750",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=fe561fd77106 ***\n\nruntime: avoid defining the same variable in more than one translation unit\nFor gccgo runtime and Darwin where -fno-common is the default.\n\nR=iant, dave\nCC=golang-dev\nhttps://codereview.appspot.com/7094061",
			"disapproval": false,
			"date": "2013-01-26 01:57:17.458980",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 30, 2013 at 7:31 AM, Ian Lance Taylor <iant@google.com> wrote:\r\n\r\n> On Fri, Jan 25, 2013 at 5:59 PM, minux <minux.ma@gmail.com> wrote:\r\n> > Hi Ian, could you please merge this into gofrontend and gcc trunk if\r\n> > possible?\r\n> > or do you want me to submit CL to gofrontend?\r\n>\r\n> I've merged the current library into gofrontend.\r\n>\r\nThank you very much!\r\n",
			"disapproval": false,
			"date": "2013-01-30 05:45:35.089750",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 7094061: pkg/runtime: avoid defining the same variable in more t...",
	"created": "2013-01-21 03:50:41.518870",
	"patchsets": [
		1,
		2001,
		4005,
		9001
	],
	"modified": "2013-01-29 23:31:54.715030",
	"closed": true,
	"issue": 7094061
}