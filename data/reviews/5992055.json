{
	"description": "runtime: preparation for parallel GC\nmake MHeap.allspans an array instead on a linked-list,\nit's required for parallel for\n\nbenchmark                              old ns/op    new ns/op    delta\n\ngarbage.BenchmarkTree                  494435529    487962705   -1.31%\ngarbage.BenchmarkTree-2                499652705    485358000   -2.86%\ngarbage.BenchmarkTree-4                468482117    454093117   -3.07%\ngarbage.BenchmarkTree-8                488533235    471872470   -3.41%\ngarbage.BenchmarkTree-16               507835176    492558470   -3.01%\n\ngarbage.BenchmarkTree2                  31453900     31404300   -0.16%\ngarbage.BenchmarkTree2-2                21440600     21477000   +0.17%\ngarbage.BenchmarkTree2-4                10982000     11117400   +1.23%\ngarbage.BenchmarkTree2-8                 7544700      7456700   -1.17%\ngarbage.BenchmarkTree2-16                7049500      6805700   -3.46%\n\ngarbage.BenchmarkParser               4448988000   4453264000   +0.10%\ngarbage.BenchmarkParser-2             4086045000   4057948000   -0.69%\ngarbage.BenchmarkParser-4             3677365000   3661246000   -0.44%\ngarbage.BenchmarkParser-8             3517253000   3540190000   +0.65%\ngarbage.BenchmarkParser-16            3506562000   3463478000   -1.23%\n\ngarbage.BenchmarkTreePause              20969784     21100238   +0.62%\ngarbage.BenchmarkTreePause-2            20215875     20139572   -0.38%\ngarbage.BenchmarkTreePause-4            17240709     16683624   -3.23%\ngarbage.BenchmarkTreePause-8            18196386     17639306   -3.06%\ngarbage.BenchmarkTreePause-16           20621158     20215056   -1.97%\n\ngarbage.BenchmarkTree2Pause            173992142    173872380   -0.07%\ngarbage.BenchmarkTree2Pause-2          131281904    131366666   +0.06%\ngarbage.BenchmarkTree2Pause-4           93484952     95109619   +1.74%\ngarbage.BenchmarkTree2Pause-8           88950523     86533333   -2.72%\ngarbage.BenchmarkTree2Pause-16          86071238     84089190   -2.30%\n\ngarbage.BenchmarkParserPause           135815000    135255952   -0.41%\ngarbage.BenchmarkParserPause-2          92691523     91451428   -1.34%\ngarbage.BenchmarkParserPause-4          53392190     51611904   -3.33%\ngarbage.BenchmarkParserPause-8          36059523     35116666   -2.61%\ngarbage.BenchmarkParserPause-16         30174300     27340600   -9.39%\n\ngarbage.BenchmarkTreeLastPause          28420000     29142000   +2.54%\ngarbage.BenchmarkTreeLastPause-2        23514000     26779000  +13.89%\ngarbage.BenchmarkTreeLastPause-4        21773000     18660000  -14.30%\ngarbage.BenchmarkTreeLastPause-8        24072000     21276000  -11.62%\ngarbage.BenchmarkTreeLastPause-16       25149000     28541000  +13.49%\n\ngarbage.BenchmarkTree2LastPause        314491000    313982000   -0.16%\ngarbage.BenchmarkTree2LastPause-2      214363000    214715000   +0.16%\ngarbage.BenchmarkTree2LastPause-4      109778000    111115000   +1.22%\ngarbage.BenchmarkTree2LastPause-8       75390000     74522000   -1.15%\ngarbage.BenchmarkTree2LastPause-16      70333000     67880000   -3.49%\n\ngarbage.BenchmarkParserLastPause       327247000    326815000   -0.13%\ngarbage.BenchmarkParserLastPause-2     217039000    212529000   -2.08%\ngarbage.BenchmarkParserLastPause-4     119722000    111535000   -6.84%\ngarbage.BenchmarkParserLastPause-8      70806000     69613000   -1.68%\ngarbage.BenchmarkParserLastPause-16     62813000     48009000  -23.57%",
	"cc": [
		"rsc@golang.org",
		"r@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-06 11:54:58.320808",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-07 13:12:47.851043",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/06 21:05:01, rsc wrote:\n> LGTM\n> \n> http://codereview.appspot.com/5992055/diff/6001/src/pkg/runtime/mheap.c\n> File src/pkg/runtime/mheap.c (right):\n> \n> http://codereview.appspot.com/5992055/diff/6001/src/pkg/runtime/mheap.c#newcode36\n> src/pkg/runtime/mheap.c:36: cap = 64*1024/sizeof(MSpan*);\n> Please use sizeof all[0] instead of sizeof(MSpan*) throughout,\n> so that I don't have to think about whether that's the right type.\n> \n> There are 4 here to change.\n\nWhat does it mean when you say LGTM and write some comments? Does it mean that I may address the comments and submit w/o one more review? Or it's better to wait for one more review? Sometimes it's a matter of an additional day and an additional client.",
			"disapproval": false,
			"date": "2012-04-07 13:15:13.765165",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 07/04/2012, at 11:15 PM, dvyukov@google.com wrote:\n\n> On 2012/04/06 21:05:01, rsc wrote:\n>> LGTM\n> \n> \n> http://codereview.appspot.com/5992055/diff/6001/src/pkg/runtime/mheap.c\n>> File src/pkg/runtime/mheap.c (right):\n> \n> \n> http://codereview.appspot.com/5992055/diff/6001/src/pkg/runtime/mheap.c#newcode36\n>> src/pkg/runtime/mheap.c:36: cap = 64*1024/sizeof(MSpan*);\n>> Please use sizeof all[0] instead of sizeof(MSpan*) throughout,\n>> so that I don't have to think about whether that's the right type.\n> \n>> There are 4 here to change.\n> \n> What does it mean when you say LGTM and write some comments? Does it\n> mean that I may address the comments and submit w/o one more review? Or\n> it's better to wait for one more review? Sometimes it's a matter of an\n> additional day and an additional client.\n\nIt means: \"Looks good to me after these changes. Make the changes and submit\". Another round is not necessary unless you disagree with the changes.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-04-07 21:45:03.661011",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=512073e3b7f2 ***\n\nruntime: preparation for parallel GC\nmake MHeap.allspans an array instead on a linked-list,\nit's required for parallel for\n\nbenchmark                              old ns/op    new ns/op    delta\n\ngarbage.BenchmarkTree                  494435529    487962705   -1.31%\ngarbage.BenchmarkTree-2                499652705    485358000   -2.86%\ngarbage.BenchmarkTree-4                468482117    454093117   -3.07%\ngarbage.BenchmarkTree-8                488533235    471872470   -3.41%\ngarbage.BenchmarkTree-16               507835176    492558470   -3.01%\n\ngarbage.BenchmarkTree2                  31453900     31404300   -0.16%\ngarbage.BenchmarkTree2-2                21440600     21477000   +0.17%\ngarbage.BenchmarkTree2-4                10982000     11117400   +1.23%\ngarbage.BenchmarkTree2-8                 7544700      7456700   -1.17%\ngarbage.BenchmarkTree2-16                7049500      6805700   -3.46%\n\ngarbage.BenchmarkParser               4448988000   4453264000   +0.10%\ngarbage.BenchmarkParser-2             4086045000   4057948000   -0.69%\ngarbage.BenchmarkParser-4             3677365000   3661246000   -0.44%\ngarbage.BenchmarkParser-8             3517253000   3540190000   +0.65%\ngarbage.BenchmarkParser-16            3506562000   3463478000   -1.23%\n\ngarbage.BenchmarkTreePause              20969784     21100238   +0.62%\ngarbage.BenchmarkTreePause-2            20215875     20139572   -0.38%\ngarbage.BenchmarkTreePause-4            17240709     16683624   -3.23%\ngarbage.BenchmarkTreePause-8            18196386     17639306   -3.06%\ngarbage.BenchmarkTreePause-16           20621158     20215056   -1.97%\n\ngarbage.BenchmarkTree2Pause            173992142    173872380   -0.07%\ngarbage.BenchmarkTree2Pause-2          131281904    131366666   +0.06%\ngarbage.BenchmarkTree2Pause-4           93484952     95109619   +1.74%\ngarbage.BenchmarkTree2Pause-8           88950523     86533333   -2.72%\ngarbage.BenchmarkTree2Pause-16          86071238     84089190   -2.30%\n\ngarbage.BenchmarkParserPause           135815000    135255952   -0.41%\ngarbage.BenchmarkParserPause-2          92691523     91451428   -1.34%\ngarbage.BenchmarkParserPause-4          53392190     51611904   -3.33%\ngarbage.BenchmarkParserPause-8          36059523     35116666   -2.61%\ngarbage.BenchmarkParserPause-16         30174300     27340600   -9.39%\n\ngarbage.BenchmarkTreeLastPause          28420000     29142000   +2.54%\ngarbage.BenchmarkTreeLastPause-2        23514000     26779000  +13.89%\ngarbage.BenchmarkTreeLastPause-4        21773000     18660000  -14.30%\ngarbage.BenchmarkTreeLastPause-8        24072000     21276000  -11.62%\ngarbage.BenchmarkTreeLastPause-16       25149000     28541000  +13.49%\n\ngarbage.BenchmarkTree2LastPause        314491000    313982000   -0.16%\ngarbage.BenchmarkTree2LastPause-2      214363000    214715000   +0.16%\ngarbage.BenchmarkTree2LastPause-4      109778000    111115000   +1.22%\ngarbage.BenchmarkTree2LastPause-8       75390000     74522000   -1.15%\ngarbage.BenchmarkTree2LastPause-16      70333000     67880000   -3.49%\n\ngarbage.BenchmarkParserLastPause       327247000    326815000   -0.13%\ngarbage.BenchmarkParserLastPause-2     217039000    212529000   -2.08%\ngarbage.BenchmarkParserLastPause-4     119722000    111535000   -6.84%\ngarbage.BenchmarkParserLastPause-8      70806000     69613000   -1.68%\ngarbage.BenchmarkParserLastPause-16     62813000     48009000  -23.57%\n\nR=rsc, r\nCC=golang-dev\nhttp://codereview.appspot.com/5992055",
			"disapproval": false,
			"date": "2012-04-09 09:06:35.686997",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5992055/diff/6001/src/pkg/runtime/mheap.c\nFile src/pkg/runtime/mheap.c (right):\n\nhttp://codereview.appspot.com/5992055/diff/6001/src/pkg/runtime/mheap.c#newcode36\nsrc/pkg/runtime/mheap.c:36: cap = 64*1024/sizeof(MSpan*);\nPlease use sizeof all[0] instead of sizeof(MSpan*) throughout,\nso that I don't have to think about whether that's the right type.\n\nThere are 4 here to change.",
			"disapproval": false,
			"date": "2012-04-06 21:05:01.621752",
			"approval": true
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 5992055: runtime: preparation for parallel GC",
	"created": "2012-04-06 11:15:42.671381",
	"patchsets": [
		1,
		2001,
		4001,
		6001,
		3004,
		1009,
		2006
	],
	"modified": "2012-04-09 09:06:37.497478",
	"closed": true,
	"issue": 5992055
}