{
	"description": "math: improved accuracy for Tan",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-02 17:27:44.771212",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Looks good.  Just want to understand the Pi/2 case a little better.\n\nhttp://codereview.appspot.com/5298087/diff/1003/src/pkg/math/all_test.go\nFile src/pkg/math/all_test.go (left):\n\nhttp://codereview.appspot.com/5298087/diff/1003/src/pkg/math/all_test.go#oldcode2266\nsrc/pkg/math/all_test.go:2266: if f := Tan(Pi / 2); !alike(f, NaN()) {\nCan we keep the Pi/2 test?",
			"disapproval": false,
			"date": "2011-11-02 17:40:15.084607",
			"approval": false
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/11/02 17:40:15, rsc wrote:\n> Looks good.  Just want to understand the Pi/2 case a little better.\n> \n> http://codereview.appspot.com/5298087/diff/1003/src/pkg/math/all_test.go\n> File src/pkg/math/all_test.go (left):\n> \n> http://codereview.appspot.com/5298087/diff/1003/src/pkg/math/all_test.go#oldcode2266\n> src/pkg/math/all_test.go:2266: if f := Tan(Pi / 2); !alike(f, NaN()) {\n> Can we keep the Pi/2 test?\n\nNo, because Pi/2 is not exactly representable. Now:\nTan(Nextafter(Pi/2, 0))=3.5301143212171585e+15\nTan(Pi/2)=1.6331239353195392e+16\nTan(Nextafter(Pi/2, Pi))=-6.218431163823735e+15\n\n-- Charlie",
			"disapproval": false,
			"date": "2011-11-02 18:00:20.309201",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-11-02 18:01:14.293321",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=c35eeb1599e9 ***\n\nmath: improved accuracy for Tan\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5298087\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-11-02 18:01:24.995032",
			"approval": false
		}
	],
	"owner_email": "cldorian@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Charlie Dorian",
	"subject": "code review 5298087: math: improved accuracy for Tan",
	"created": "2011-11-02 17:27:17.722865",
	"patchsets": [
		1,
		1002,
		1003
	],
	"modified": "2011-11-04 01:39:19.004457",
	"closed": true,
	"issue": 5298087
}