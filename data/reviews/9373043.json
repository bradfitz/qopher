{
	"description": "runtime: simplify MCache\nThe nlistmin/size thresholds are copied from tcmalloc,\nbut are unnecesary for Go malloc. We do not do explicit\nfrees into MCache. For sparse cases when we do (mainly hashmap),\nsimpler logic will do.",
	"cc": [
		"rsc@golang.org",
		"dave@cheney.net",
		"iant@golang.org",
		"gobot@golang.org",
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"remyoudompheng@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-05-13 08:27:59.470890",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2013-05-18 10:12:01.615390",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Does it speed up a lot or is it mainly about code cleaning?",
			"disapproval": false,
			"date": "2013-05-18 10:13:34.725420",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "seems fine to this non-expert.\n\nhttps://codereview.appspot.com/9373043/diff/16001/src/pkg/runtime/mcentral.c\nFile src/pkg/runtime/mcentral.c (right):\n\nhttps://codereview.appspot.com/9373043/diff/16001/src/pkg/runtime/mcentral.c#newcode34\nsrc/pkg/runtime/mcentral.c:34: // Return the number of objects allocated.\ntrailing tab\n\nhttps://codereview.appspot.com/9373043/diff/16001/src/pkg/runtime/mcentral.c#newcode90\nsrc/pkg/runtime/mcentral.c:90: for(; start; start = next) {\nstart != nil please.",
			"disapproval": false,
			"date": "2013-05-18 17:08:00.938010",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=rsc (assigned by r)",
			"disapproval": false,
			"date": "2013-05-18 17:08:23.690870",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/18 17:08:00, r wrote:\n> seems fine to this non-expert.\n> \n> https://codereview.appspot.com/9373043/diff/16001/src/pkg/runtime/mcentral.c\n> File src/pkg/runtime/mcentral.c (right):\n> \n> https://codereview.appspot.com/9373043/diff/16001/src/pkg/runtime/mcentral.c#newcode34\n> src/pkg/runtime/mcentral.c:34: // Return the number of objects allocated.\n> trailing tab\n\nDone\n\n> https://codereview.appspot.com/9373043/diff/16001/src/pkg/runtime/mcentral.c#newcode90\n> src/pkg/runtime/mcentral.c:90: for(; start; start = next) {\n> start != nil please.\n\nDone",
			"disapproval": false,
			"date": "2013-05-20 07:35:54.373070",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/18 10:13:34, remyoudompheng wrote:\n> Does it speed up a lot or is it mainly about code cleaning?\n\nProbably it cuts few cycles, but it more for code cleaning and generally moving the allocator from \"tcmalloc copy\" to \"Go allocator\". One of the next steps will be to inline MCache_Alloc() into mallocgc(), the more complex MCache_Alloc(), the harder it is to do.",
			"disapproval": false,
			"date": "2013-05-20 07:39:05.364190",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Could you please hg mail again, this patch is out of date.",
			"disapproval": false,
			"date": "2013-05-21 11:16:07.197940",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/21 11:16:07, dfc wrote:\n> Could you please hg mail again, this patch is out of date.\n\nDone",
			"disapproval": false,
			"date": "2013-05-21 11:47:02.772870",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"r@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-05-22 05:01:52.761650",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"iant@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e66374feac5c ***\n\nruntime: simplify MCache\nThe nlistmin/size thresholds are copied from tcmalloc,\nbut are unnecesary for Go malloc. We do not do explicit\nfrees into MCache. For sparse cases when we do (mainly hashmap),\nsimpler logic will do.\n\nR=rsc, dave, iant\nCC=gobot, golang-dev, r, remyoudompheng\nhttps://codereview.appspot.com/9373043",
			"disapproval": false,
			"date": "2013-05-22 09:29:38.354710",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 9373043: runtime: simplify MCache",
	"created": "2013-05-13 07:17:55.095230",
	"patchsets": [
		1,
		2001,
		4001,
		7001,
		10001,
		13001,
		16001,
		24001,
		30001,
		30002,
		34001,
		39001,
		42001
	],
	"modified": "2013-05-22 09:29:38.354710",
	"closed": true,
	"issue": 9373043
}