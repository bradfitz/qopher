{
	"description": "bytes: fix Replace so it actually copies\n\nThe documentation for bytes.Replace says it copies\nthe slice but it won't necessarily copy them.  Since\nthe data is mutable, breaking the contract is an issue.\n\nWe either have to fix this by making the copy at all\ntimes, as suggested in this CL, or we should change the\ndocumentation and perhaps make better use of the fact\nit's fine to mutate the slice in place otherwise.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"adg@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-09-21 13:34:23.807563",
			"approval": true
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-20 03:54:28.127770",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-20 04:17:00.729825",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Ouch.\n\nAdd a test too?\n\n\nOn Mon, Sep 19, 2011 at 8:54 PM, <n13m3y3r@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> bytes: fix Replace so it actually copies\n>\n> The documentation for bytes.Replace says it copies\n> the slice but it won't necessarily copy them.  Since\n> the data is mutable, breaking the contract is an issue.\n>\n> We either have to fix this by making the copy at all\n> times, as suggested in this CL, or we should change the\n> documentation and perhaps make better use of the fact\n> it's fine to mutate the slice in place otherwise.\n>\n> Please review this at http://codereview.appspot.com/**5081043/<http://codereview.appspot.com/5081043/>\n>\n> Affected files:\n>  M src/pkg/bytes/bytes.go\n>\n>\n> Index: src/pkg/bytes/bytes.go\n> ==============================**==============================**=======\n> --- a/src/pkg/bytes/bytes.go\n> +++ b/src/pkg/bytes/bytes.go\n> @@ -572,13 +572,18 @@\n>  // non-overlapping instances of old replaced by new.\n>  // If n < 0, there is no limit on the number of replacements.\n>  func Replace(s, old, new []byte, n int) []byte {\n> -       if n == 0 {\n> -               return s // avoid allocation\n> +       m := 0\n> +       if n != 0 {\n> +               // Compute number of replacements.\n> +               m = Count(s, old)\n>        }\n> -       // Compute number of replacements.\n> -       if m := Count(s, old); m == 0 {\n> -               return s // avoid allocation\n> -       } else if n <= 0 || m < n {\n> +       if m == 0 {\n> +               // Nothing to do. Just copy.\n> +               t := make([]byte, len(s))\n> +               copy(t, s)\n> +               return t\n> +       }\n> +       if n <= 0 || m < n {\n>                n = m\n>        }\n>\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-09-20 03:58:49.056668",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Does the test you just introduced break without the changes to bytes.go ?\n\nhttp://codereview.appspot.com/5081043/diff/4/src/pkg/bytes/bytes.go\nFile src/pkg/bytes/bytes.go (right):\n\nhttp://codereview.appspot.com/5081043/diff/4/src/pkg/bytes/bytes.go#newcode580\nsrc/pkg/bytes/bytes.go:580: if m == 0 {\nI think this should be\n\nif m == 0 || n == 0 {\n\nReplace(s, old, new, 0) should do zero replacements and return a copy of s.\n\nhttp://codereview.appspot.com/5081043/diff/4/src/pkg/bytes/bytes.go#newcode586\nsrc/pkg/bytes/bytes.go:586: if n <= 0 || m < n {\nif n < 0 || m < n {",
			"disapproval": false,
			"date": "2011-09-20 04:56:04.252640",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-20 04:16:21.500105",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=722a1d98acc0 ***\n\nbytes: fix Replace so it actually copies\n\nThe documentation for bytes.Replace says it copies\nthe slice but it won't necessarily copy them.  Since\nthe data is mutable, breaking the contract is an issue.\n\nWe either have to fix this by making the copy at all\ntimes, as suggested in this CL, or we should change the\ndocumentation and perhaps make better use of the fact\nit's fine to mutate the slice in place otherwise.\n\nR=golang-dev, bradfitz, adg, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5081043",
			"disapproval": false,
			"date": "2011-09-21 15:36:30.358088",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hi Andrew,\n\n> Does the test you just introduced break without the changes to bytes.go ?\n\nYes, it's testing precisely the fact that Replace doesn't always copy:\n\n--- FAIL: bytes_test.TestReplace (0.00 seconds)\n        Replace(\"hello\", \"l\", \"L\", 0) didn't copy\n        Replace(\"hello\", \"x\", \"X\", -1) didn't copy\n        Replace(\"\", \"x\", \"X\", -1) didn't copy\n\nhttp://codereview.appspot.com/5081043/diff/4/src/pkg/bytes/bytes.go\nFile src/pkg/bytes/bytes.go (right):\n\nhttp://codereview.appspot.com/5081043/diff/4/src/pkg/bytes/bytes.go#newcode580\nsrc/pkg/bytes/bytes.go:580: if m == 0 {\n\n> if m == 0 || n == 0 {\n\nIf n is 0, m will necessarily be 0.\n\nhttp://codereview.appspot.com/5081043/diff/4/src/pkg/bytes/bytes.go#newcode586\nsrc/pkg/bytes/bytes.go:586: if n <= 0 || m < n {\n> if n < 0 || m < n {\n\nDone.",
			"disapproval": false,
			"date": "2011-09-20 13:14:53.837018",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5081043/diff/4/src/pkg/bytes/bytes.go\nFile src/pkg/bytes/bytes.go (right):\n\nhttp://codereview.appspot.com/5081043/diff/4/src/pkg/bytes/bytes.go#newcode580\nsrc/pkg/bytes/bytes.go:580: if m == 0 {\nOn 2011/09/20 13:14:53, niemeyer wrote:\n> \n> > if m == 0 || n == 0 {\n> \n> If n is 0, m will necessarily be 0.\n\nDuh, of course.",
			"disapproval": false,
			"date": "2011-09-20 22:24:01.747449",
			"approval": true
		}
	],
	"owner_email": "n13m3y3r@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "niemeyer",
	"subject": "code review 5081043: bytes: fix Replace so it actually copies",
	"created": "2011-09-20 03:40:15.507995",
	"patchsets": [
		1,
		1002,
		3001,
		8001,
		4,
		12001,
		2004
	],
	"modified": "2011-09-21 15:36:33.595215",
	"closed": true,
	"issue": 5081043
}