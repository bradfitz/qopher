{
	"description": "misc/osx: Add scripts to create OS X package and disk image\n\nFixes issue 2327.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"roberto@costumero.es",
		"jdpoirier@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"bytbox@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttp://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-11-11 15:06:37.029148",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Does it make sense to put the stuff in /opt or does\nit make more sense to have /Applications/Go?\nThat's where I'd look if I wanted to uninstall.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-11 19:53:56.469228",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 11/11/11 15:11, Russ Cox wrote:\n> The only thing in /opt on my Mac is X11.\n> No matter how you look at it, Go is not like X11.\n\nThat's funny; I appear to have X11 under /Developer(/usr/X11).\n\n>\n> What are the strict semantics of /Developer?\n\nDetails below. It looks like /Developer/SDKs would be the appropriate \nplace to stick GOROOT, if it couldn't be split up - that's where the \nandroid sdk goes, at least.\n\nSupposedly apple has a guidelines document which specifically discusses \n/Developer, but I can't seem to find it. What I can find\n\nhttp://developer.apple.com/library/mac/#documentation/FileManagement/Conceptual/FileSystemProgrammingGUide/FileSystemOverview/FileSystemOverview.html\n\nDoesn't say much that's helpful - it does mention unix directories as \nbeing \"helpful to developers\".\n\nRoughly, this is what it appears to be (disclaimer: this is all tainted \nby my own experience and what tools I use - other tools may attach more \nor less meaning to these directories):\n\n  - Applications: GUI stuff for developers. .app format. Not for us (yet).\n  - Documentation: obvious. Matters at least to spotlight (at least \nempirically, with my configuration); probably to XCode as well.\n  - Examples: equally obvious; less important. If examples are in \nDocumentation, that's ok.\n  - Extras: miscellaneous. This seems to be mostly used for demos (see \nPreferencePanes for example)\n  - Headers: obvious; not for us\n  - Library: this seems to be meant to be used by applicatons as a place \nto store their backend - including both preferences and underlying \nframeworks.\n  - Makefiles: I think XCode likes to use this underneath, but I'll \nadmit I don't know.\n  - Platforms: .platform-formatted folders, probably Xcode et al. expect \nsomething special from this (lots of badly-designed plist excrement).\n  - SDKs: Complete, bundled SDKs. Except for the android sdk, everything \nI have here obeys a plist-ridden format, presumably for the benefit of \nXcode et al. The android SDK doesn't; I'd imagine we're most like them.\n  - Tools: I only have things installed by CPlusTest in here, so this \nmight not be real.\n\nI also have /Developer/usr - I'm not sure if that's actually supposed to \nbe there, or if it's just leftover from macports or similar.\n\n-- \nScott Lawrence\n",
			"disapproval": false,
			"date": "2011-11-11 20:39:26.417069",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "The only thing in /opt on my Mac is X11.\nNo matter how you look at it, Go is not like X11.\n\nWhat are the strict semantics of /Developer?\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-11 20:11:07.612975",
			"approval": false
		},
		{
			"sender": "roberto@costumero.es",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Fri, Nov 11, 2011 at 21:39, Scott Lawrence <bytbox@gmail.com> wrote:\n\n> On 11/11/11 15:11, Russ Cox wrote:\n>\n>> The only thing in /opt on my Mac is X11.\n>> No matter how you look at it, Go is not like X11.\n>>\n>\n> That's funny; I appear to have X11 under /Developer(/usr/X11).\n\n\nMe too. Though there's no /opt directory on Lion.\n\n\n>\n>\n>\n>> What are the strict semantics of /Developer?\n>>\n>\n> Details below. It looks like /Developer/SDKs would be the appropriate\n> place to stick GOROOT, if it couldn't be split up - that's where the\n> android sdk goes, at least.\n>\n> Supposedly apple has a guidelines document which specifically discusses\n> /Developer, but I can't seem to find it. What I can find\n>\n> http://developer.apple.com/**library/mac/#documentation/**\n> FileManagement/Conceptual/**FileSystemProgrammingGUide/**\n> FileSystemOverview/**FileSystemOverview.html<http://developer.apple.com/library/mac/#documentation/FileManagement/Conceptual/FileSystemProgrammingGUide/FileSystemOverview/FileSystemOverview.html>\n>\n> Doesn't say much that's helpful - it does mention unix directories as\n> being \"helpful to developers\".\n>\n> Roughly, this is what it appears to be (disclaimer: this is all tainted by\n> my own experience and what tools I use - other tools may attach more or\n> less meaning to these directories):\n>\n>  - Applications: GUI stuff for developers. .app format. Not for us (yet).\n>  - Documentation: obvious. Matters at least to spotlight (at least\n> empirically, with my configuration); probably to XCode as well.\n>  - Examples: equally obvious; less important. If examples are in\n> Documentation, that's ok.\n>  - Extras: miscellaneous. This seems to be mostly used for demos (see\n> PreferencePanes for example)\n>  - Headers: obvious; not for us\n>  - Library: this seems to be meant to be used by applicatons as a place to\n> store their backend - including both preferences and underlying frameworks.\n>  - Makefiles: I think XCode likes to use this underneath, but I'll admit I\n> don't know.\n>  - Platforms: .platform-formatted folders, probably Xcode et al. expect\n> something special from this (lots of badly-designed plist excrement).\n>  - SDKs: Complete, bundled SDKs. Except for the android sdk, everything I\n> have here obeys a plist-ridden format, presumably for the benefit of Xcode\n> et al. The android SDK doesn't; I'd imagine we're most like them.\n>  - Tools: I only have things installed by CPlusTest in here, so this might\n> not be real.\n>\n> I also have /Developer/usr - I'm not sure if that's actually supposed to\n> be there, or if it's just leftover from macports or similar.\n>\n> --\n> Scott Lawrence\n>\n\nI've got Go installed on three different paths:\n\n/usr/local - Thought in the first place it would be nice to have it\ninstalled there as it is related to usr space and something \"extra\" I\nadded. There it's where git or LaTeX install by default.\n\n/Developer/Go - Then I thought it would be nice to have all my developer\ntools together. And I still think it would be a nice place to put Go, but\none of the updates of XCode broke my Go installation.\n\nNow I've got it installed in a path inside my home directory, cause it's\nwhere I've placed all my big projects and on the migration to Lion didn't\nknow what to do with Go.\n\nIf there is no problem /Developer should be Go's home with a .dmg\ninstaller, but /usr/local seems like a good candidate to me.\n",
			"disapproval": false,
			"date": "2011-11-11 21:11:38.767166",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "/usr/local/go is fine with me.\n",
			"disapproval": false,
			"date": "2011-11-11 21:27:44.088229",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"bytbox@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "This is most likely unready for merging (files for various editors in misc/ need to be put into place, etc.), but I figured there's enough to get started here.",
			"disapproval": false,
			"date": "2011-11-11 15:08:46.152308",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 11/11/11 14:53, Russ Cox wrote:\n> Does it make sense to put the stuff in /opt or does\n> it make more sense to have /Applications/Go?\n> That's where I'd look if I wanted to uninstall.\n\n/Applications/Go makes sense if Go was a .app meant to be executed \noutside of terminal. Putting GOROOT there would confuse any tool \nscanning Applications for things to show to the user, such as spotlight.\n\nDeveloper tools are usually spread loosely throughout /Developer - in \nthe future, that may be the logical destination for the installation. At \nthe moment, there's not any benefit derived from doing that, (no tools \nanyone might use are expecting us to do that) and it would make the \ninstallation considerably more complicated, since there could no longer \nbe a single GOROOT.\n\nPutting things in /opt on macs is common enough; I think at this stage \nit's the best option (even though it is kind of a cheat to avoid having \nto deal with the strict semantics of /Developer).\n\n-- \nScott Lawrence\n",
			"disapproval": false,
			"date": "2011-11-11 20:02:21.047883",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On 11/11/11 16:27, Russ Cox wrote:\n> /usr/local/go is fine with me.\n\nHere too; will do.\n\n-- \nScott Lawrence\n",
			"disapproval": false,
			"date": "2011-11-11 21:28:54.268523",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Once it is checked in I will be happy to try it on Lion.\n",
			"disapproval": false,
			"date": "2011-11-18 23:36:04.094147",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"bytbox@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"roberto@costumero.es",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, roberto@costumero.es (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-17 22:39:13.162157",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The installer now works sanely (complete installation requires no user\nintervention) and puts XCode files into place when xcode is installed\n- probably ready for merging. Installation is GOROOT=/usr/local/go\n\nOn Thu, Nov 17, 2011 at 17:39,  <bytbox@gmail.com> wrote:\n> Hello golang-dev@googlegroups.com, rsc@golang.org, roberto@costumero.es\n> (cc: golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/5375049/\n>\n\n\n\n-- \nScott Lawrence\n",
			"disapproval": false,
			"date": "2011-11-17 22:42:56.260318",
			"approval": false
		},
		{
			"sender": "jdpoirier@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Nov 17, 2011 at 4:42 PM, Scott Lawrence <bytbox@gmail.com> wrote:\n> The installer now works sanely (complete installation requires no user\n> intervention) and puts XCode files into place when xcode is installed\n> - probably ready for merging. Installation is GOROOT=/usr/local/go\n>\n> On Thu, Nov 17, 2011 at 17:39, \u00a0<bytbox@gmail.com> wrote:\n>> Hello golang-dev@googlegroups.com, rsc@golang.org, roberto@costumero.es\n>> (cc: golang-dev@googlegroups.com),\n>>\n>> Please take another look.\n>>\n>>\n>> http://codereview.appspot.com/5375049/\n>>\n>\n>\n>\n> --\n> Scott Lawrence\n>\n\nWorked great on my MBP running 10.6.8.\n\nThe packager builds the toolchain but I think the plan is to have the\ndashboard builder call the packager after the toolchain has already\nbeen built (for designated builds, e.g. releases).\n\n-joe\n",
			"disapproval": false,
			"date": "2011-11-18 05:29:29.519961",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 11/18/11 00:28, Joseph Poirier wrote:\n> Worked great on my MBP running 10.6.8.\n>\n> The packager builds the toolchain but I think the plan is to have the\n> dashboard builder call the packager after the toolchain has already\n> been built (for designated builds, e.g. releases).\n\nSounds good; if that's so, the re-building can be skipped.\n\nThis is, of course, still wildly untested - every machine that's ever \nrun it (as far as I know) was an MBP running 10.6.8. No idea if Lion's \ndifferent enough to cause problems.\n\n-- \nScott Lawrence\n",
			"disapproval": false,
			"date": "2011-11-18 13:01:36.188749",
			"approval": false
		},
		{
			"sender": "jdpoirier@gmail.com",
			"recipients": [
				"bytbox@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"roberto@costumero.es",
				"jdpoirier@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d34288abcb3b ***\n\nmisc/osx: Add scripts to create OS X package and disk image\n\nFixes issue 2327.\n\nR=golang-dev, rsc, roberto, jdpoirier\nCC=golang-dev\nhttp://codereview.appspot.com/5375049\n\nCommitter: Joe Poirier <jdpoirier@gmail.com>",
			"disapproval": false,
			"date": "2011-11-19 01:05:59.139998",
			"approval": false
		}
	],
	"owner_email": "bytbox@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "bytbox",
	"subject": "code review 5375049: misc/osx: Add scripts to create OS X package and disk image",
	"created": "2011-11-10 06:37:45.674863",
	"patchsets": [
		1,
		4,
		2001,
		4001,
		5001,
		3016,
		1023,
		6002,
		3027,
		2009,
		3028,
		8001,
		10001,
		12010,
		14010
	],
	"modified": "2011-11-20 19:35:45.084638",
	"closed": true,
	"issue": 5375049
}