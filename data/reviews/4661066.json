{
	"description": "net: add Dest, DialRequest, DialTimeout, etc\n\nFOR DISCUSSION. STRAWMAN.\n\nThis gives the net package similar treatment\nto the exec package:\n\nc, err := net.Dest(\"tcp\", \"google.com:80\").DialTimeout(1e9)\n\nWhere Dest returns a *DialRequest with a dest addr,\nlocal addr (optional) and connect timeout (optional,\nand may be set by DialTimeout)\n\nFixes issue 240",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"jacek.masiulaniec@gmail.com",
		"mikioh.mikioh@gmail.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-07-01 17:12:09.207373",
			"approval": false
		},
		{
			"sender": "jacek.masiulaniec@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Non-API remark: it could be cheaper or cleaner to implement timeout in\npollserver instead of spawning goroutines.\n",
			"disapproval": false,
			"date": "2011-07-01 18:04:49.683476",
			"approval": false
		},
		{
			"sender": "jacek.masiulaniec@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Is similar approach to be assumed for Dials in other packages?  I mean\ntls, rpc, smtp, websocket, etc.\n",
			"disapproval": false,
			"date": "2011-07-01 18:35:34.353487",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Fri, Jul 1, 2011 at 11:04 AM, Jacek Masiulaniec <\njacek.masiulaniec@gmail.com> wrote:\n\n> Non-API remark: it could be cheaper or cleaner to implement timeout in\n> pollserver instead of spawning goroutines.\n>\n\nAgreed. The current timeout implementation is a placeholder. (I forgot a\ncomment)\n\nI think finding an agreeable API will be harder than pushing the timeout\ndown to the pollserver.\n\nOne step at a time.\n",
			"disapproval": false,
			"date": "2011-07-01 18:42:35.325029",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"jacek.masiulaniec@gmail.com",
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4661066/diff/3001/src/pkg/net/dial.go\nFile src/pkg/net/dial.go (right):\n\nhttp://codereview.appspot.com/4661066/diff/3001/src/pkg/net/dial.go#newcode63\nsrc/pkg/net/dial.go:63: // address. Dest is typically used to create a DialRequest:\nI'm deeply grateful if you could implement a single Dial \ncall that handles the target which is a single name but \nhas multiple destination addresses.\ne.g., \"tcp\", \"www.google.com:80\" {2001::1, 1.2.3.4, 5.6.7.8, ....}\n\nhttp://codereview.appspot.com/4661066/diff/3001/src/pkg/net/dial.go#newcode111\nsrc/pkg/net/dial.go:111: func Dest(net, addr string) *DialRequest {\nNot sure which is better - Dest, Dst, Remote or Target, \nI would like to see consistent naming across standard \npackages.",
			"disapproval": false,
			"date": "2011-07-02 13:12:56.084072",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 4661066: net: add Dest, DialRequest, DialTimeout, etc",
	"created": "2011-07-01 17:11:39.379064",
	"patchsets": [
		1,
		1001,
		3001
	],
	"modified": "2012-01-19 00:14:14.594062",
	"closed": true,
	"issue": 4661066
}