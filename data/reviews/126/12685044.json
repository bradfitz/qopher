{
	"description": "openpgp: Implement compressed data packets & add support for compressing data during symmetric encryption.\n\nThis patch implements the facilities needed to compress data before\nencryption as allowed (and recommended) by RFC 4880. The new\nfunctionality is then used to add support for compressing data during\nsymmetric encryption (openpgp.SymmetricallyEncrypt()).\n\nFor now, compression defaults to off. Also, only the ZIP and ZLIB\ncompression schemes are supported by this patch.\n\nResulting output tested/verified using GPG.\n\nhttps://gist.github.com/marete/6189760 is a small program that can be\nused to test that the output of various compression/encryption settings\ncan be read by GPG or other RFC 4880 programs.\n\nUpon review, I will follow this patch with 2 others: a) Add support for \tcompression during public key encryption (openpgp.Encrypt()) b) Enable\ncompression by default (subject to the restrictions of the \"Compression \tPreferences\" section in RFC 4880).",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"agl@golang.org"
	],
	"messages": [
		{
			"sender": "marete@toshnix.com",
			"recipients": [
				"marete@toshnix.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2013-08-08 23:49:05.797370",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"marete@toshnix.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Mostly LGTM.\n\nThere's a lack of tests here. But I can imagine that the tests live in the higher-level code that isn't in this change. If that's the case then don't worry about duplicating them here.\n\nhttps://codereview.appspot.com/12685044/diff/6001/openpgp/packet/compressed.go\nFile openpgp/packet/compressed.go (right):\n\nhttps://codereview.appspot.com/12685044/diff/6001/openpgp/packet/compressed.go#newcode59\nopenpgp/packet/compressed.go:59: // header and the compressor. It's Close() method ensures that both\nIt's -> Its\n\nhttps://codereview.appspot.com/12685044/diff/6001/openpgp/packet/compressed.go#newcode77\nopenpgp/packet/compressed.go:77: err = cwc.sh.Close()\nCan be just:\n\nreturn cwc.sh.Close()\n\nhttps://codereview.appspot.com/12685044/diff/6001/openpgp/packet/compressed.go#newcode107\nopenpgp/packet/compressed.go:107: s := strconv.FormatUint(uint64(algo), 10)\nI think this should be strconv.Itoa(int(algo))\n\nhttps://codereview.appspot.com/12685044/diff/6001/openpgp/packet/config.go\nFile openpgp/packet/config.go (right):\n\nhttps://codereview.appspot.com/12685044/diff/6001/openpgp/packet/config.go#newcode43\nopenpgp/packet/config.go:43: DefaultCompressionConfig *CompressionConfig\nWhile other members of Config are defaults and can be overridden by lists of supported ciphers etc, I think this should just be called \"CompressionConfig\", no? It's not the case that a public key can say that it supports ZLIB, but only default compression.\n\nhttps://codereview.appspot.com/12685044/diff/6001/openpgp/write.go\nFile openpgp/write.go (right):\n\nhttps://codereview.appspot.com/12685044/diff/6001/openpgp/write.go#newcode125\nopenpgp/write.go:125: literaldata, err = packet.SerializeCompressed(w, algo, level)\nSome compression algorithms may have algorithm-specific options that could be expressed in a CompressionConfig. But that would need SerializeCompressed to take a *CompressionConfig rather than the level directly.\n\nSo I think I would remove the CompressionLevel accessor from Config, pass a *CompressionConfig into SerializeCompressed and have it with the case that it's nil.",
			"disapproval": false,
			"date": "2013-08-12 11:43:41.573160",
			"approval": true
		},
		{
			"sender": "marete@toshnix.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Many thanks for the review. I will make the changes requested this evening.\r\n\r\nMuch appreciated.\r\n\r\nBrian Gitonga Marete\r\nCEO/CTO Toshnix Systems Limited\r\nhttp://www.toshnix.com\r\nOn Aug 12, 2013 2:43 PM, <agl@golang.org> wrote:\r\n\r\n> Mostly LGTM.\r\n>\r\n> There's a lack of tests here. But I can imagine that the tests live in\r\n> the higher-level code that isn't in this change. If that's the case then\r\n> don't worry about duplicating them here.\r\n>\r\n>\r\n> https://codereview.appspot.**com/12685044/diff/6001/**\r\n> openpgp/packet/compressed.go<https://codereview.appspot.com/12685044/diff/6001/openpgp/packet/compressed.go>\r\n> File openpgp/packet/compressed.go (right):\r\n>\r\n> https://codereview.appspot.**com/12685044/diff/6001/**\r\n> openpgp/packet/compressed.go#**newcode59<https://codereview.appspot.com/12685044/diff/6001/openpgp/packet/compressed.go#newcode59>\r\n> openpgp/packet/compressed.go:**59: // header and the compressor. It's\r\n> Close() method ensures that both\r\n> It's -> Its\r\n>\r\n> https://codereview.appspot.**com/12685044/diff/6001/**\r\n> openpgp/packet/compressed.go#**newcode77<https://codereview.appspot.com/12685044/diff/6001/openpgp/packet/compressed.go#newcode77>\r\n> openpgp/packet/compressed.go:**77: err = cwc.sh.Close()\r\n> Can be just:\r\n>\r\n> return cwc.sh.Close()\r\n>\r\n> https://codereview.appspot.**com/12685044/diff/6001/**\r\n> openpgp/packet/compressed.go#**newcode107<https://codereview.appspot.com/12685044/diff/6001/openpgp/packet/compressed.go#newcode107>\r\n> openpgp/packet/compressed.go:**107: s := strconv.FormatUint(uint64(**\r\n> algo),\r\n> 10)\r\n> I think this should be strconv.Itoa(int(algo))\r\n>\r\n> https://codereview.appspot.**com/12685044/diff/6001/**\r\n> openpgp/packet/config.go<https://codereview.appspot.com/12685044/diff/6001/openpgp/packet/config.go>\r\n> File openpgp/packet/config.go (right):\r\n>\r\n> https://codereview.appspot.**com/12685044/diff/6001/**\r\n> openpgp/packet/config.go#**newcode43<https://codereview.appspot.com/12685044/diff/6001/openpgp/packet/config.go#newcode43>\r\n> openpgp/packet/config.go:43: DefaultCompressionConfig *CompressionConfig\r\n> While other members of Config are defaults and can be overridden by\r\n> lists of supported ciphers etc, I think this should just be called\r\n> \"CompressionConfig\", no? It's not the case that a public key can say\r\n> that it supports ZLIB, but only default compression.\r\n>\r\n> https://codereview.appspot.**com/12685044/diff/6001/**openpgp/write.go<https://codereview.appspot.com/12685044/diff/6001/openpgp/write.go>\r\n> File openpgp/write.go (right):\r\n>\r\n> https://codereview.appspot.**com/12685044/diff/6001/**\r\n> openpgp/write.go#newcode125<https://codereview.appspot.com/12685044/diff/6001/openpgp/write.go#newcode125>\r\n> openpgp/write.go:125: literaldata, err = packet.SerializeCompressed(w,\r\n> algo, level)\r\n> Some compression algorithms may have algorithm-specific options that\r\n> could be expressed in a CompressionConfig. But that would need\r\n> SerializeCompressed to take a *CompressionConfig rather than the level\r\n> directly.\r\n>\r\n> So I think I would remove the CompressionLevel accessor from Config,\r\n> pass a *CompressionConfig into SerializeCompressed and have it with the\r\n> case that it's nil.\r\n>\r\n> https://codereview.appspot.**com/12685044/<https://codereview.appspot.com/12685044/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-12 11:47:59.242650",
			"approval": false
		},
		{
			"sender": "marete@toshnix.com",
			"recipients": [
				"marete@toshnix.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, agl@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-13 20:30:54.526790",
			"approval": false
		},
		{
			"sender": "marete@toshnix.com",
			"recipients": [
				"marete@toshnix.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, agl@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-13 21:48:05.496300",
			"approval": false
		},
		{
			"sender": "marete@toshnix.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Aug 14, 2013 at 12:48 AM, <marete@toshnix.com> wrote:\r\n>\r\n> Hello golang-dev@googlegroups.com, agl@golang.org (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> https://codereview.appspot.com/12685044/\r\n\r\nThis last change fixes comments.\r\n\r\nThanks.\r\n\r\n-- \r\nBrian Gitonga Marete\r\nCEO/CTO Toshnix Systems\r\nhttp://toshnix.com\r\n",
			"disapproval": false,
			"date": "2013-08-13 21:50:28.042770",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"marete@toshnix.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1e7a3e301825&repo=crypto ***\n\nopenpgp: Implement compressed data packets & add support for compressing data during symmetric encryption.\n\nThis patch implements the facilities needed to compress data before\nencryption as allowed (and recommended) by RFC 4880. The new\nfunctionality is then used to add support for compressing data during\nsymmetric encryption (openpgp.SymmetricallyEncrypt()).\n\nFor now, compression defaults to off. Also, only the ZIP and ZLIB\ncompression schemes are supported by this patch.\n\nResulting output tested/verified using GPG.\n\nhttps://gist.github.com/marete/6189760 is a small program that can be\nused to test that the output of various compression/encryption settings\ncan be read by GPG or other RFC 4880 programs.\n\nUpon review, I will follow this patch with 2 others: a) Add support for \tcompression during public key encryption (openpgp.Encrypt()) b) Enable\ncompression by default (subject to the restrictions of the \"Compression \tPreferences\" section in RFC 4880).\n\nR=golang-dev, agl\nCC=golang-dev\nhttps://codereview.appspot.com/12685044\n\nCommitter: Adam Langley <agl@golang.org>\n\nhttps://codereview.appspot.com/12685044/diff/25001/openpgp/packet/compressed.go\nFile openpgp/packet/compressed.go (right):\n\nhttps://codereview.appspot.com/12685044/diff/25001/openpgp/packet/compressed.go#newcode65\nopenpgp/packet/compressed.go:65: // compressor and serialized stream header are closed. It's Write()\nAnother It's -> Its here.\n\nhttps://codereview.appspot.com/12685044/diff/25001/openpgp/write.go\nFile openpgp/write.go (right):\n\nhttps://codereview.appspot.com/12685044/diff/25001/openpgp/write.go#newcode124\nopenpgp/write.go:124: literaldata, err = packet.SerializeCompressed(w, algo, config.CompressionConfig)\nAlthough this doesn't crash when config is nil, it's only saved for a subtle reason. This should be clearer.",
			"disapproval": false,
			"date": "2013-08-15 16:04:23.760140",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"marete@toshnix.com",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "(Note: I fixed up the couple of nits before landing to save another review round trip.)",
			"disapproval": false,
			"date": "2013-08-15 16:05:13.331330",
			"approval": false
		},
		{
			"sender": "marete@toshnix.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Many thanks.\r\n\r\nBrian Gitonga Marete\r\nCEO/CTO Toshnix Systems Limited\r\nhttp://www.toshnix.com\r\nOn Aug 15, 2013 7:05 PM, <agl@golang.org> wrote:\r\n\r\n> (Note: I fixed up the couple of nits before landing to save another\r\n> review round trip.)\r\n>\r\n> https://codereview.appspot.**com/12685044/<https://codereview.appspot.com/12685044/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-15 16:08:07.922170",
			"approval": false
		}
	],
	"owner_email": "marete@toshnix.com",
	"private": false,
	"base_url": "",
	"owner": "marete",
	"subject": "code review 12685044: openpgp: Implement compressed data packets & add suppor...",
	"created": "2013-08-08 23:43:16.767370",
	"patchsets": [
		1,
		3001,
		6001,
		13001,
		16001,
		19001,
		22001,
		25001
	],
	"modified": "2013-08-15 16:08:08.011490",
	"closed": false,
	"issue": 12685044
}