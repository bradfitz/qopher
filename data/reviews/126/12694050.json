{
	"description": "runtime: improve block profiler support for channels\n1. Handle select statements.\n2. Handle chan close.\n3. Show top frame in debug mode (chansend/chanrecv/selectgo).\nFixes issue 6049.",
	"cc": [
		"golang-dev@googlegroups.com",
		"daniel.morsing@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-13 18:00:42.268300",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-12 08:41:31.744940",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks, but still missing something rather important.\n\nThis CL reports the select header as the PC in the profile. If I have multiple goroutines feeding into one select, I can't tell which goroutine was blocked. The PC that we return to is available, it's just an issue of getting it into the profile.",
			"disapproval": false,
			"date": "2013-08-12 10:10:40.677640",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Aug 12, 2013 at 2:10 PM, <daniel.morsing@gmail.com> wrote:\r\n\r\n> Thanks, but still missing something rather important.\r\n>\r\n> This CL reports the select header as the PC in the profile. If I have\r\n> multiple goroutines feeding into one select, I can't tell which\r\n> goroutine was blocked. The PC that we return to is available, it's just\r\n> an issue of getting it into the profile.\r\n>\r\n\r\n\r\nIf a goroutine is blocked on select, it is blocked on *all* cases. The one\r\nthat eventually become ready looks irrelevant here, it actually maybe the\r\nless problematic one.\r\n",
			"disapproval": false,
			"date": "2013-08-12 10:45:16.208840",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/12 10:45:16, dvyukov wrote:\n> On Mon, Aug 12, 2013 at 2:10 PM, <mailto:daniel.morsing@gmail.com> wrote:\n> \n> > Thanks, but still missing something rather important.\n> >\n> > This CL reports the select header as the PC in the profile. If I have\n> > multiple goroutines feeding into one select, I can't tell which\n> > goroutine was blocked. The PC that we return to is available, it's just\n> > an issue of getting it into the profile.\n> >\n> \n> \n> If a goroutine is blocked on select, it is blocked on *all* cases. The one\n> that eventually become ready looks irrelevant here, it actually maybe the\n> less problematic one.\n\nYou're right. A completely blocked goroutine wouldn't show up in the blocking profile.\n\nStill, in the case of a select sending to a select, you're none the wiser as to what caused the blocking with this CL, but I can't think of a better way to represent multiway blocking than what you're already doing. LGTM.",
			"disapproval": false,
			"date": "2013-08-12 11:26:01.952640",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=a5954109dae3 ***\n\nruntime: improve block profiler support for channels\n1. Handle select statements.\n2. Handle chan close.\n3. Show top frame in debug mode (chansend/chanrecv/selectgo).\nFixes issue 6049.\n\nR=golang-dev, daniel.morsing, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/12694050",
			"disapproval": false,
			"date": "2013-08-14 09:56:25.892740",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 12694050: runtime: improve block profiler support for channels",
	"created": "2013-08-11 09:38:15.968040",
	"patchsets": [
		1,
		1002,
		4001,
		6001,
		9001,
		16001
	],
	"modified": "2013-08-14 09:56:27.214870",
	"closed": true,
	"issue": 12694050
}