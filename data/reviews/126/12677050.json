{
	"description": "database/sql: make Rows.Next returning false always implicitly call\nRows.Close.\n\nPreviously, callers that followed the example code (but not call\nrows.Close after \"for rows.Next() { ... }\") could leak statements if\nthe driver returned an error other than io.EOF.",
	"cc": [
		"bradfitz@golang.org",
		"alex.brainman@gmail.com",
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Brad will want new test. :-)\n\nI tested this against code.google.com/p/odbc and it works OK. I am not familiar enough with this code myself, so I don't know if your change is good. Better wait for brad.\n\nAlex",
			"disapproval": false,
			"date": "2013-08-12 07:35:07.968360",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-12 07:05:29.213620",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\"go test database/sql\" passes but that doesn't actually exercise any of the real drivers. How else should I test this?\n\nI'm also not overly familiar with database/sql so I don't know if this will break any existing drivers. Who should be CC'ed on this?",
			"disapproval": false,
			"date": "2013-08-12 07:16:19.594520",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Seems fine.  I can't see this breaking anything, but it'd be nice to add a test.\n\nI just modify the in-memory fake driver (in fakedb_test.go) to make it do what I want, or add hooks in the sql.go code to inject failures, etc.\n\nhttps://codereview.appspot.com/12677050/diff/6001/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttps://codereview.appspot.com/12677050/diff/6001/src/pkg/database/sql/sql.go#newcode1373\nsrc/pkg/database/sql/sql.go:1373: // result of Err. Close is idempotent and does not affect the result of Err.\n> Close is idempotent and does not affect the result of Err.\n\nExcept that part where you assign to rs.err.  So not really.",
			"disapproval": false,
			"date": "2013-08-12 22:11:00.667720",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Test added. PTAL.\n\nhttps://codereview.appspot.com/12677050/diff/6001/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttps://codereview.appspot.com/12677050/diff/6001/src/pkg/database/sql/sql.go#newcode1373\nsrc/pkg/database/sql/sql.go:1373: // result of Err. Close is idempotent and does not affect the result of Err.\nOn 2013/08/12 22:11:00, bradfitz wrote:\n> > Close is idempotent and does not affect the result of Err.\n> \n> Except that part where you assign to rs.err.  So not really.\n\nCode reverted to match documentation.",
			"disapproval": false,
			"date": "2013-08-14 01:25:18.781210",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nthanks!",
			"disapproval": false,
			"date": "2013-08-14 20:44:11.108300",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1da41fd62139 ***\n\ndatabase/sql: make Rows.Next returning false always implicitly call\nRows.Close.\n\nPreviously, callers that followed the example code (but not call\nrows.Close after \"for rows.Next() { ... }\") could leak statements if\nthe driver returned an error other than io.EOF.\n\nR=bradfitz, alex.brainman\nCC=golang-dev, rsc\nhttps://codereview.appspot.com/12677050",
			"disapproval": false,
			"date": "2013-08-16 01:23:51.942530",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 12677050: database/sql: make Rows.Next returning false always imp...",
	"created": "2013-08-12 07:04:53.867100",
	"patchsets": [
		1,
		3001,
		6001,
		13001,
		16001
	],
	"modified": "2013-08-16 01:23:55.048970",
	"closed": true,
	"issue": 12677050
}