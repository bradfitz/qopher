{
	"description": "cmd/go: allow '$' in #cgo directive\r\n\r\nFixes issue 6038.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I feel like this CL description is missing a word.  A CGO what?\r\n\r\n\r\n\r\nOn Wed, Aug 7, 2013 at 11:29 AM, <rjeczalik@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> cmd/go: Cannot pass linker macros to a CGO\r\n>\r\n> Fixes issue 6038.\r\n>\r\n> Please review this at https://codereview.appspot.**com/12619043/<https://codereview.appspot.com/12619043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/go/build/build.go\r\n>   M src/pkg/go/build/build_test.go\r\n>\r\n>\r\n> Index: src/pkg/go/build/build.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/go/build/build.go\r\n> +++ b/src/pkg/go/build/build.go\r\n> @@ -931,7 +931,7 @@\r\n>         return nil\r\n>  }\r\n>\r\n> -var safeBytes = []byte(\"+-.,/0123456789=**ABCDEFGHIJKLMNOPQRSTUVWXYZ_**\r\n> abcdefghijklmnopqrstuvwxyz:\")\r\n> +var safeBytes = []byte(\"+-.,/0123456789=**ABCDEFGHIJKLMNOPQRSTUVWXYZ_**\r\n> abcdefghijklmnopqrstuvwxyz:$\")\r\n>\r\n>  func safeName(s string) bool {\r\n>         if s == \"\" {\r\n> Index: src/pkg/go/build/build_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/go/build/build_test.**go\r\n> +++ b/src/pkg/go/build/build_test.**go\r\n> @@ -5,6 +5,7 @@\r\n>  package build\r\n>\r\n>  import (\r\n> +       \"go/ast\"\r\n>         \"os\"\r\n>         \"path/filepath\"\r\n>         \"runtime\"\r\n> @@ -117,3 +118,13 @@\r\n>                 t.Errorf(\"should not build file3, expected the contrary\")\r\n>         }\r\n>  }\r\n> +\r\n> +func TestSaveCgoDollarOrigin(t *testing.T) {\r\n> +       ctx := &Context{}\r\n> +       di := &Package{}\r\n> +       cg := &ast.CommentGroup{List: []*ast.Comment{&ast.Comment{**Text:\r\n> \"// #cgo LDFLAGS: -Wl,-rpath -Wl,$ORIGIN\"}}}\r\n> +\r\n> +       if err := ctx.saveCgo(\"test.go\", di, cg); err != nil {\r\n> +               t.Errorf(\"valid cgo comment rejected with \\\"%s\\\"\",\r\n> err.Error())\r\n> +       }\r\n> +}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-07 18:31:52.486690",
			"approval": false
		},
		{
			"sender": "rjeczalik@gmail.com",
			"recipients": [
				"rjeczalik@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-08-07 18:29:34.781310",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't know cgo.  I'm just saving you a review round later, when a cgo\r\nexpert reviews it.\r\n\r\n\r\n\r\nOn Wed, Aug 7, 2013 at 11:59 AM, <rjeczalik@gmail.com> wrote:\r\n\r\n> Suddenly it's more to the point now, thanks. How about the patch itself?\r\n>\r\n>\r\n> On 2013/08/07 18:49:11, bradfitz wrote:\r\n>\r\n>> Word it in terms of what's changing, not what the bug was.\r\n>>\r\n>\r\n>  cmd/go: allow $ as a ______\r\n>> or\r\n>> cmd/go: allow $ in __________\r\n>> or\r\n>> cmd/go: allow linker macros; marks $ as a _____\r\n>>\r\n>\r\n>  etc\r\n>>\r\n>\r\n>\r\n>\r\n>\r\n>\r\n>  On Wed, Aug 7, 2013 at 11:29 AM, <mailto:rjeczalik@gmail.com> wrote:\r\n>>\r\n>\r\n>  > Reviewers: golang-dev1,\r\n>> >\r\n>> > Message:\r\n>> > Hello mailto:golang-dev@**googlegroups.com<golang-dev@googlegroups.com>(cc:\r\n>>\r\n> mailto:golang-dev@**googlegroups.com <golang-dev@googlegroups.com>),\r\n>\r\n>  >\r\n>> > I'd like you to review this change to\r\n>> > https://code.google.com/p/go\r\n>> >\r\n>> >\r\n>> > Description:\r\n>> > cmd/go: Cannot pass linker macros to a CGO\r\n>> >\r\n>> > Fixes issue 6038.\r\n>> >\r\n>> > Please review this at\r\n>>\r\n>\r\n> https://codereview.appspot.****com/12619043/%3Chttps://codere**\r\n> view.appspot.com/12619043/ <http://codereview.appspot.com/12619043/>>\r\n>\r\n>  >\r\n>> > Affected files:\r\n>> >   M src/pkg/go/build/build.go\r\n>> >   M src/pkg/go/build/build_test.go\r\n>> >\r\n>> >\r\n>> > Index: src/pkg/go/build/build.go\r\n>> >\r\n>>\r\n> ==============================****============================**\r\n> ==**=======\r\n>\r\n>  > --- a/src/pkg/go/build/build.go\r\n>> > +++ b/src/pkg/go/build/build.go\r\n>> > @@ -931,7 +931,7 @@\r\n>> >         return nil\r\n>> >  }\r\n>> >\r\n>> > -var safeBytes =\r\n>>\r\n> []byte(\"+-.,/0123456789=****ABCDEFGHIJKLMNOPQRSTUVWXYZ_**\r\n>\r\n>  > abcdefghijklmnopqrstuvwxyz:\")\r\n>> > +var safeBytes =\r\n>>\r\n> []byte(\"+-.,/0123456789=****ABCDEFGHIJKLMNOPQRSTUVWXYZ_**\r\n>\r\n>  > abcdefghijklmnopqrstuvwxyz:$\")\r\n>> >\r\n>> >  func safeName(s string) bool {\r\n>> >         if s == \"\" {\r\n>> > Index: src/pkg/go/build/build_test.go\r\n>> >\r\n>>\r\n> ==============================****============================**\r\n> ==**=======\r\n>\r\n>> > --- a/src/pkg/go/build/build_test.****go\r\n>> > +++ b/src/pkg/go/build/build_test.****go\r\n>>\r\n>> > @@ -5,6 +5,7 @@\r\n>> >  package build\r\n>> >\r\n>> >  import (\r\n>> > +       \"go/ast\"\r\n>> >         \"os\"\r\n>> >         \"path/filepath\"\r\n>> >         \"runtime\"\r\n>> > @@ -117,3 +118,13 @@\r\n>> >                 t.Errorf(\"should not build file3, expected the\r\n>>\r\n> contrary\")\r\n>\r\n>> >         }\r\n>> >  }\r\n>> > +\r\n>> > +func TestSaveCgoDollarOrigin(t *testing.T) {\r\n>> > +       ctx := &Context{}\r\n>> > +       di := &Package{}\r\n>> > +       cg := &ast.CommentGroup{List:\r\n>>\r\n> []*ast.Comment{&ast.Comment{****Text:\r\n>\r\n>  > \"// #cgo LDFLAGS: -Wl,-rpath -Wl,$ORIGIN\"}}}\r\n>> > +\r\n>> > +       if err := ctx.saveCgo(\"test.go\", di, cg); err != nil {\r\n>> > +               t.Errorf(\"valid cgo comment rejected with \\\"%s\\\"\",\r\n>> > err.Error())\r\n>> > +       }\r\n>> > +}\r\n>> >\r\n>> >\r\n>> > --\r\n>> >\r\n>> > ---You received this message because you are subscribed to the\r\n>>\r\n> Google\r\n>\r\n>> > Groups \"golang-dev\" group.\r\n>> > To unsubscribe from this group and stop receiving emails from it,\r\n>>\r\n> send an\r\n>\r\n>> > email to\r\n>>\r\n>\r\n> mailto:golang-dev+unsubscribe@****googlegroups.com<golang-dev%**\r\n> 2Bunsubscribe@googlegroups.com<golang-dev%252Bunsubscribe@googlegroups.com>\r\n> **>\r\n>\r\n>  > .\r\n>> > For more options, visit\r\n>>\r\n>\r\n> https://groups.google.com/****groups/opt_out%3Chttps://**\r\n> groups.google.com/groups/opt_**out<https://groups.google.com/**groups/opt_out%3Chttps://groups.google.com/groups/opt_out>\r\n> >\r\n>\r\n>> > .\r\n>> >\r\n>> >\r\n>> >\r\n>>\r\n>\r\n>\r\n> https://codereview.appspot.**com/12619043/<https://codereview.appspot.com/12619043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-07 19:00:30.124070",
			"approval": false
		},
		{
			"sender": "rjeczalik@gmail.com",
			"recipients": [
				"rjeczalik@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Indeed poor wording - possibly a _tool_ is the missing word. Or even better - 'through #cgo directive'. Is it good enough?\n\nOn 2013/08/07 18:31:52, bradfitz wrote:\n> I feel like this CL description is missing a word.  A CGO what?\n> \n> \n> \n> On Wed, Aug 7, 2013 at 11:29 AM, <mailto:rjeczalik@gmail.com> wrote:\n> \n> > Reviewers: golang-dev1,\n> >\n> > Message:\n> > Hello mailto:golang-dev@googlegroups.com (cc: mailto:golang-dev@googlegroups.com),\n> >\n> > I'd like you to review this change to\n> > https://code.google.com/p/go\n> >\n> >\n> > Description:\n> > cmd/go: Cannot pass linker macros to a CGO\n> >\n> > Fixes issue 6038.\n> >\n> > Please review this at\n> https://codereview.appspot.**com/12619043/%3Chttps://codereview.appspot.com/12619043/>\n> >\n> > Affected files:\n> >   M src/pkg/go/build/build.go\n> >   M src/pkg/go/build/build_test.go\n> >\n> >\n> > Index: src/pkg/go/build/build.go\n> > ==============================**==============================**=======\n> > --- a/src/pkg/go/build/build.go\n> > +++ b/src/pkg/go/build/build.go\n> > @@ -931,7 +931,7 @@\n> >         return nil\n> >  }\n> >\n> > -var safeBytes = []byte(\"+-.,/0123456789=**ABCDEFGHIJKLMNOPQRSTUVWXYZ_**\n> > abcdefghijklmnopqrstuvwxyz:\")\n> > +var safeBytes = []byte(\"+-.,/0123456789=**ABCDEFGHIJKLMNOPQRSTUVWXYZ_**\n> > abcdefghijklmnopqrstuvwxyz:$\")\n> >\n> >  func safeName(s string) bool {\n> >         if s == \"\" {\n> > Index: src/pkg/go/build/build_test.go\n> > ==============================**==============================**=======\n> > --- a/src/pkg/go/build/build_test.**go\n> > +++ b/src/pkg/go/build/build_test.**go\n> > @@ -5,6 +5,7 @@\n> >  package build\n> >\n> >  import (\n> > +       \"go/ast\"\n> >         \"os\"\n> >         \"path/filepath\"\n> >         \"runtime\"\n> > @@ -117,3 +118,13 @@\n> >                 t.Errorf(\"should not build file3, expected the contrary\")\n> >         }\n> >  }\n> > +\n> > +func TestSaveCgoDollarOrigin(t *testing.T) {\n> > +       ctx := &Context{}\n> > +       di := &Package{}\n> > +       cg := &ast.CommentGroup{List: []*ast.Comment{&ast.Comment{**Text:\n> > \"// #cgo LDFLAGS: -Wl,-rpath -Wl,$ORIGIN\"}}}\n> > +\n> > +       if err := ctx.saveCgo(\"test.go\", di, cg); err != nil {\n> > +               t.Errorf(\"valid cgo comment rejected with \\\"%s\\\"\",\n> > err.Error())\n> > +       }\n> > +}\n> >\n> >\n> > --\n> >\n> > ---You received this message because you are subscribed to the Google\n> > Groups \"golang-dev\" group.\n> > To unsubscribe from this group and stop receiving emails from it, send an\n> > email to\n> mailto:golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\n> > .\n> > For more options, visit\n> https://groups.google.com/**groups/opt_out%3Chttps://groups.google.com/groups/opt_out>\n> > .\n> >\n> >\n> >",
			"disapproval": false,
			"date": "2013-08-07 18:43:19.365030",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Word it in terms of what's changing, not what the bug was.\r\n\r\ncmd/go: allow $ as a ______\r\nor\r\ncmd/go: allow $ in __________\r\nor\r\ncmd/go: allow linker macros; marks $ as a _____\r\n\r\netc\r\n\r\n\r\n\r\n\r\n\r\nOn Wed, Aug 7, 2013 at 11:29 AM, <rjeczalik@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> cmd/go: Cannot pass linker macros to a CGO\r\n>\r\n> Fixes issue 6038.\r\n>\r\n> Please review this at https://codereview.appspot.**com/12619043/<https://codereview.appspot.com/12619043/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/go/build/build.go\r\n>   M src/pkg/go/build/build_test.go\r\n>\r\n>\r\n> Index: src/pkg/go/build/build.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/go/build/build.go\r\n> +++ b/src/pkg/go/build/build.go\r\n> @@ -931,7 +931,7 @@\r\n>         return nil\r\n>  }\r\n>\r\n> -var safeBytes = []byte(\"+-.,/0123456789=**ABCDEFGHIJKLMNOPQRSTUVWXYZ_**\r\n> abcdefghijklmnopqrstuvwxyz:\")\r\n> +var safeBytes = []byte(\"+-.,/0123456789=**ABCDEFGHIJKLMNOPQRSTUVWXYZ_**\r\n> abcdefghijklmnopqrstuvwxyz:$\")\r\n>\r\n>  func safeName(s string) bool {\r\n>         if s == \"\" {\r\n> Index: src/pkg/go/build/build_test.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/go/build/build_test.**go\r\n> +++ b/src/pkg/go/build/build_test.**go\r\n> @@ -5,6 +5,7 @@\r\n>  package build\r\n>\r\n>  import (\r\n> +       \"go/ast\"\r\n>         \"os\"\r\n>         \"path/filepath\"\r\n>         \"runtime\"\r\n> @@ -117,3 +118,13 @@\r\n>                 t.Errorf(\"should not build file3, expected the contrary\")\r\n>         }\r\n>  }\r\n> +\r\n> +func TestSaveCgoDollarOrigin(t *testing.T) {\r\n> +       ctx := &Context{}\r\n> +       di := &Package{}\r\n> +       cg := &ast.CommentGroup{List: []*ast.Comment{&ast.Comment{**Text:\r\n> \"// #cgo LDFLAGS: -Wl,-rpath -Wl,$ORIGIN\"}}}\r\n> +\r\n> +       if err := ctx.saveCgo(\"test.go\", di, cg); err != nil {\r\n> +               t.Errorf(\"valid cgo comment rejected with \\\"%s\\\"\",\r\n> err.Error())\r\n> +       }\r\n> +}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-07 18:49:11.516760",
			"approval": false
		},
		{
			"sender": "rjeczalik@gmail.com",
			"recipients": [
				"rjeczalik@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Suddenly it's more to the point now, thanks. How about the patch itself?\n\nOn 2013/08/07 18:49:11, bradfitz wrote:\n> Word it in terms of what's changing, not what the bug was.\n> \n> cmd/go: allow $ as a ______\n> or\n> cmd/go: allow $ in __________\n> or\n> cmd/go: allow linker macros; marks $ as a _____\n> \n> etc\n> \n> \n> \n> \n> \n> On Wed, Aug 7, 2013 at 11:29 AM, <mailto:rjeczalik@gmail.com> wrote:\n> \n> > Reviewers: golang-dev1,\n> >\n> > Message:\n> > Hello mailto:golang-dev@googlegroups.com (cc: mailto:golang-dev@googlegroups.com),\n> >\n> > I'd like you to review this change to\n> > https://code.google.com/p/go\n> >\n> >\n> > Description:\n> > cmd/go: Cannot pass linker macros to a CGO\n> >\n> > Fixes issue 6038.\n> >\n> > Please review this at\n> https://codereview.appspot.**com/12619043/%3Chttps://codereview.appspot.com/12619043/>\n> >\n> > Affected files:\n> >   M src/pkg/go/build/build.go\n> >   M src/pkg/go/build/build_test.go\n> >\n> >\n> > Index: src/pkg/go/build/build.go\n> > ==============================**==============================**=======\n> > --- a/src/pkg/go/build/build.go\n> > +++ b/src/pkg/go/build/build.go\n> > @@ -931,7 +931,7 @@\n> >         return nil\n> >  }\n> >\n> > -var safeBytes = []byte(\"+-.,/0123456789=**ABCDEFGHIJKLMNOPQRSTUVWXYZ_**\n> > abcdefghijklmnopqrstuvwxyz:\")\n> > +var safeBytes = []byte(\"+-.,/0123456789=**ABCDEFGHIJKLMNOPQRSTUVWXYZ_**\n> > abcdefghijklmnopqrstuvwxyz:$\")\n> >\n> >  func safeName(s string) bool {\n> >         if s == \"\" {\n> > Index: src/pkg/go/build/build_test.go\n> > ==============================**==============================**=======\n> > --- a/src/pkg/go/build/build_test.**go\n> > +++ b/src/pkg/go/build/build_test.**go\n> > @@ -5,6 +5,7 @@\n> >  package build\n> >\n> >  import (\n> > +       \"go/ast\"\n> >         \"os\"\n> >         \"path/filepath\"\n> >         \"runtime\"\n> > @@ -117,3 +118,13 @@\n> >                 t.Errorf(\"should not build file3, expected the contrary\")\n> >         }\n> >  }\n> > +\n> > +func TestSaveCgoDollarOrigin(t *testing.T) {\n> > +       ctx := &Context{}\n> > +       di := &Package{}\n> > +       cg := &ast.CommentGroup{List: []*ast.Comment{&ast.Comment{**Text:\n> > \"// #cgo LDFLAGS: -Wl,-rpath -Wl,$ORIGIN\"}}}\n> > +\n> > +       if err := ctx.saveCgo(\"test.go\", di, cg); err != nil {\n> > +               t.Errorf(\"valid cgo comment rejected with \\\"%s\\\"\",\n> > err.Error())\n> > +       }\n> > +}\n> >\n> >\n> > --\n> >\n> > ---You received this message because you are subscribed to the Google\n> > Groups \"golang-dev\" group.\n> > To unsubscribe from this group and stop receiving emails from it, send an\n> > email to\n> mailto:golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\n> > .\n> > For more options, visit\n> https://groups.google.com/**groups/opt_out%3Chttps://groups.google.com/groups/opt_out>\n> > .\n> >\n> >\n> >",
			"disapproval": false,
			"date": "2013-08-07 18:59:28.824560",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rjeczalik@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/12619043/diff/6001/src/pkg/go/build/build.go\nFile src/pkg/go/build/build.go (right):\n\nhttps://codereview.appspot.com/12619043/diff/6001/src/pkg/go/build/build.go#newcode934\nsrc/pkg/go/build/build.go:934: var safeBytes = []byte(\"+-.,/0123456789=ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz:$\")\nadd above this line:\n// NOTE: $ is allowed here for use in linker arguments (like $ORIGIN),\n// not for use as a shell metacharacter. golang.org/issue/6038.",
			"disapproval": false,
			"date": "2013-08-13 16:41:01.392940",
			"approval": true
		}
	],
	"owner_email": "rjeczalik@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rjeczalik",
	"subject": "code review 12619043: cmd/go: allow '$' in #cgo directive",
	"created": "2013-08-07 18:23:33.926390",
	"patchsets": [
		1,
		3001,
		6001
	],
	"modified": "2013-08-13 16:41:01.876530",
	"closed": false,
	"issue": 12619043
}