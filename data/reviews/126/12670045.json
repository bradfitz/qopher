{
	"description": "sync/atomic: add Swap functions\nFixes issue 5722.",
	"cc": [
		"golang-dev@googlegroups.com",
		"khr@golang.org",
		"cshapiro@google.com",
		"rsc@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-12 10:47:00.549470",
			"approval": false
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s\nFile src/pkg/sync/atomic/asm_arm.s (right):\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s#newcode92\nsrc/pkg/sync/atomic/asm_arm.s:92: TEXT \u00b7armSwapUint32(SB),7,$0\nWhy do these need the \"arm\" prefix?  You don't seem to be doing this for x86/amd64.\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s#newcode96\nsrc/pkg/sync/atomic/asm_arm.s:96: // LDREX and STREX were introduced in ARM 6.\nDon't we have to be able to run on arm v5?\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s#newcode115\nsrc/pkg/sync/atomic/asm_arm.s:115: LDREXD\t(R1), R4\t// loads R4 and R5\nsame here\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_freebsd_arm.s\nFile src/pkg/sync/atomic/asm_freebsd_arm.s (right):\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_freebsd_arm.s#newcode30\nsrc/pkg/sync/atomic/asm_freebsd_arm.s:30: B \u00b7SwapUint32(SB)\nwouldn't it be better to make all of these go to armSwapUint32 directly?",
			"disapproval": false,
			"date": "2013-08-12 21:07:22.110560",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/12 21:07:22, khr wrote:\n> https://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s\n> File src/pkg/sync/atomic/asm_arm.s (right):\n> \n> https://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s#newcode92\n> src/pkg/sync/atomic/asm_arm.s:92: TEXT \u00b7armSwapUint32(SB),7,$0\n> Why do these need the \"arm\" prefix?  You don't seem to be doing this for\n> x86/amd64.\n> \n> https://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s#newcode96\n> src/pkg/sync/atomic/asm_arm.s:96: // LDREX and STREX were introduced in ARM 6.\n> Don't we have to be able to run on arm v5?\n> \n> https://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s#newcode115\n> src/pkg/sync/atomic/asm_arm.s:115: LDREXD\t(R1), R4\t// loads R4 and R5\n> same here\n> \n> https://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_freebsd_arm.s\n> File src/pkg/sync/atomic/asm_freebsd_arm.s (right):\n> \n> https://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_freebsd_arm.s#newcode30\n> src/pkg/sync/atomic/asm_freebsd_arm.s:30: B \u00b7SwapUint32(SB)\n> wouldn't it be better to make all of these go to armSwapUint32 directly?\n\n\nI will take a closer look at your comments and the code tomorrow. But generally I was just doing things exactly as they done today. Including naming, who calls what and instructions used.\nThere may be opportunities for refactoring, but not in this CL. I don't even have an ARM to test.",
			"disapproval": false,
			"date": "2013-08-12 21:24:16.347900",
			"approval": false
		},
		{
			"sender": "cshapiro@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"cshapiro@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s\nFile src/pkg/sync/atomic/asm_arm.s (right):\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s#newcode96\nsrc/pkg/sync/atomic/asm_arm.s:96: // LDREX and STREX were introduced in ARM 6.\nARM6 is a core and probably not the intended referece: ARM6 implemented ARMv3.  ARMv6 is an architecture revision and probably what you want.  The ARM nomenclature is very confusing so it would certainly help the reader to be consistent.\n\nWe could use SWP for ARMv5.\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s#newcode114\nsrc/pkg/sync/atomic/asm_arm.s:114: // LDREXD and STREXD were introduced in ARM 11.\nI don't think this comment is true.  There are ARM11 cores that do not have LDREXD and STREXD, such as the original ARM1136.  I believe only ARM11 cores implementing ARMv6k features have this instruction which includes later ARM1136 implemenations and ARM11MPcore.\n\nThis comment (and others like it) should reference ARMv6k and not \"ARM 11\".",
			"disapproval": false,
			"date": "2013-08-12 21:31:53.452130",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"cshapiro@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nlet the arm dust settle\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_386.s\nFile src/pkg/sync/atomic/asm_386.s (right):\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_386.s#newcode7\nsrc/pkg/sync/atomic/asm_386.s:7: TEXT \u00b7SwapInt32(SB),7,$0\nuse the new NOSPLIT definition (see khr's recent CLs)\napplies to all files.\n\nshould probably also declare argument sizes but i see the rest of the file does not do that yet.\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s\nFile src/pkg/sync/atomic/asm_arm.s (right):\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s#newcode92\nsrc/pkg/sync/atomic/asm_arm.s:92: TEXT \u00b7armSwapUint32(SB),7,$0\nOn 2013/08/12 21:07:22, khr wrote:\n> Why do these need the \"arm\" prefix?  You don't seem to be doing this for\n> x86/amd64.\n\nThese are the raw implementations, but on Linux at least we can use implementations provided by the kernel and bypass most of the architectural confusion. The non-arm-prefix names are in the arm OS-specific files like asm_linux_arm.s.\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_arm.s#newcode96\nsrc/pkg/sync/atomic/asm_arm.s:96: // LDREX and STREX were introduced in ARM 6.\nOn 2013/08/12 21:07:22, khr wrote:\n> Don't we have to be able to run on arm v5?\n\nYes.\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_freebsd_arm.s\nFile src/pkg/sync/atomic/asm_freebsd_arm.s (right):\n\nhttps://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_freebsd_arm.s#newcode30\nsrc/pkg/sync/atomic/asm_freebsd_arm.s:30: B \u00b7SwapUint32(SB)\nOn 2013/08/12 21:07:22, khr wrote:\n> wouldn't it be better to make all of these go to armSwapUint32 directly?\n\nEpsilon better, yes. It's structured this way because sometimes SwapUint32 has a more complex implementation (see the Linux file).",
			"disapproval": false,
			"date": "2013-08-12 23:07:13.705100",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "don't forget go1.2.txt once this lands.\r\n",
			"disapproval": false,
			"date": "2013-08-13 00:27:20.910250",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"cshapiro@google.com",
				"rsc@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/12 23:07:13, rsc wrote:\n> LGTM\n> let the arm dust settle\n> \n> https://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_386.s\n> File src/pkg/sync/atomic/asm_386.s (right):\n> \n> https://codereview.appspot.com/12670045/diff/9001/src/pkg/sync/atomic/asm_386.s#newcode7\n> src/pkg/sync/atomic/asm_386.s:7: TEXT \u00b7SwapInt32(SB),7,$0\n> use the new NOSPLIT definition (see khr's recent CLs)\n> applies to all files.\n> \n> should probably also declare argument sizes but i see the rest of the file does\n> not do that yet.\n\n\nAdded NOSPLIT and argsize.",
			"disapproval": false,
			"date": "2013-08-13 11:23:00.626050",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"cshapiro@google.com",
				"rsc@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Keith, Carl, I am not competent to do these cleanups, and I can't test any significant code changes. Please send followup CLs.",
			"disapproval": false,
			"date": "2013-08-13 11:34:49.092570",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"cshapiro@google.com",
				"rsc@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=41d393af9bb8 ***\n\nsync/atomic: add Swap functions\nFixes issue 5722.\n\nR=golang-dev, khr, cshapiro, rsc, r\nCC=golang-dev\nhttps://codereview.appspot.com/12670045",
			"disapproval": false,
			"date": "2013-08-13 11:26:59.594470",
			"approval": false
		},
		{
			"sender": "cshapiro@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Aug 13, 2013 at 4:34 AM, <dvyukov@google.com> wrote:\r\n\r\n> Keith, Carl, I am not competent to do these cleanups, and I can't test\r\n> any significant code changes. Please send followup CLs.\r\n>\r\n\r\nI'm confused.  I just asked to fix 2 comments.\r\n",
			"disapproval": false,
			"date": "2013-08-13 17:34:20.667190",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Aug 13, 2013 at 1:33 PM, Carl Shapiro <cshapiro@google.com> wrote:\r\n\r\n> On Tue, Aug 13, 2013 at 4:34 AM, <dvyukov@google.com> wrote:\r\n>\r\n>> Keith, Carl, I am not competent to do these cleanups, and I can't test\r\n>> any significant code changes. Please send followup CLs.\r\n>>\r\n>\r\n> I'm confused.  I just asked to fix 2 comments.\r\n>\r\n\r\nYou also suggested using SWP on ARM 5 (or ARMv5 I suppose).\r\n\r\nAs far as the comments are concerned, the comments Dmitriy added are at\r\nleast consistent with the comments in the rest of the file. ARM versioning\r\nis a mess, and I think it's fair to say that you understand the variations\r\nand subtle semantics of things like \"ARM 6\" vs \"ARMv6\" better than Dmitriy\r\nor me. If you'd like to go over the comments in the _arm.s files and make\r\nthem consistently use the correct terminology to avoid misleading ARM\r\nexperts, that'd be great.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-08-13 18:42:49.090380",
			"approval": false
		},
		{
			"sender": "cshapiro@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Aug 13, 2013 at 11:42 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> You also suggested using SWP on ARM 5 (or ARMv5 I suppose).\r\n>\r\n\r\nI followed up to Keith's comment.  I have also created an issue to track\r\nthis\r\n\r\nhttps://code.google.com/p/go/issues/detail?id=6134\r\n\r\nand also suggested a more general and low-effort solution to this problem.\r\n\r\n\r\n> As far as the comments are concerned, the comments Dmitriy added are at\r\n> least consistent with the comments in the rest of the file. ARM versioning\r\n> is a mess, and I think it's fair to say that you understand the variations\r\n> and subtle semantics of things like \"ARM 6\" vs \"ARMv6\" better than Dmitriy\r\n> or me. If you'd like to go over the comments in the _arm.s files and make\r\n> them consistently use the correct terminology to avoid misleading ARM\r\n> experts, that'd be great.\r\n>\r\n\r\nI think we are good to go for now.  The comments in the arm assembly for\r\nLinux  (asm_arm_linux.s) were already correct.  With the clean-up change\r\nsubmitted all the source code files are now consistent.\r\n",
			"disapproval": false,
			"date": "2013-08-13 18:51:51.734010",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 12670045: sync/atomic: add Swap functions",
	"created": "2013-08-10 10:26:41.754670",
	"patchsets": [
		1,
		3001,
		3002,
		6011,
		9001,
		21001,
		24001,
		28001
	],
	"modified": "2013-08-13 18:51:51.936930",
	"closed": true,
	"issue": 12670045
}