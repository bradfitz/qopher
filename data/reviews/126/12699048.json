{
	"description": "cmd/api: eliminate duplicate package import work\n\nOn my Mac, cuts the API checks from 15 seconds to 6 seconds.\nAlso clean up some tag confusion: go run list-of-files ignores tags.",
	"cc": [
		"bradfitz@golang.org",
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-09 21:26:54.758160",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go\nFile src/cmd/api/goapi.go (right):\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode43\nsrc/cmd/api/goapi.go:43: var ourTags = map[string]bool{}\nI see this being assigned to, but never used. dregg?\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode395\nsrc/cmd/api/goapi.go:395: var (\nplease add comment about the key\n\n// maps tag-based key -> package\n\n?\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode397\nsrc/cmd/api/goapi.go:397: pkgTags  = map[string][]string{}\nsame here",
			"disapproval": false,
			"date": "2013-08-09 21:46:42.310970",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM with or without below\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go\nFile src/cmd/api/goapi.go (right):\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode43\nsrc/cmd/api/goapi.go:43: var ourTags = map[string]bool{}\nadd a comment.\n\n// ourTags is the set of tags we care about over all contexts ...\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode401\nsrc/cmd/api/goapi.go:401: // It is a comma-separated string; the first part is dir, the rest tags.\nwe have structs that support == nowadays.  just make a \"tagKey\" type and lose the English?\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode416\nsrc/cmd/api/goapi.go:416: key := dir\nvar keyTags []string\nfor _, tag := range tags {\n   if ctags[tag] {\n       keyTags = append(keyTags, tag)\n   }\n}\nstrings.Sort(keyTags)  // is this guaranteed otherwise?\nreturn tagKey{dir, strings.Join(keyTags, \",\")}\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/run.bash\nFile src/run.bash (right):\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/run.bash#newcode185\nsrc/run.bash:185: time go run $GOROOT/src/cmd/api/run.go\nI would delete the time.  Noise.  And seems like debugging.\n\nWe can always time it by hand later (and I have often).\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/run.bash#newcode185\nsrc/run.bash:185: time go run $GOROOT/src/cmd/api/run.go\nalso remove the --tags from run.bat.",
			"disapproval": false,
			"date": "2013-08-09 21:41:29.561280",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go\nFile src/cmd/api/goapi.go (right):\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode43\nsrc/cmd/api/goapi.go:43: var ourTags = map[string]bool{}\nOn 2013/08/09 21:46:42, gri wrote:\n> I see this being assigned to, but never used. dregg?\n\nYes, gone.\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode395\nsrc/cmd/api/goapi.go:395: var (\nOn 2013/08/09 21:46:42, gri wrote:\n> please add comment about the key\n> \n> // maps tag-based key -> package\n> \n> ?\n\nDone.\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode397\nsrc/cmd/api/goapi.go:397: pkgTags  = map[string][]string{}\nOn 2013/08/09 21:46:42, gri wrote:\n> same here\n\nDone.\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode401\nsrc/cmd/api/goapi.go:401: // It is a comma-separated string; the first part is dir, the rest tags.\nOn 2013/08/09 21:41:29, bradfitz wrote:\n> we have structs that support == nowadays.  just make a \"tagKey\" type and lose\n> the English?\n\nI'd still need the comma-separated key list since I have a variable number of strings to use in the key. Left as is.\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/cmd/api/goapi.go#newcode416\nsrc/cmd/api/goapi.go:416: key := dir\nOn 2013/08/09 21:41:29, bradfitz wrote:\n> var keyTags []string\n> for _, tag := range tags {\n>    if ctags[tag] {\n>        keyTags = append(keyTags, tag)\n>    }\n> }\n> strings.Sort(keyTags)  // is this guaranteed otherwise?\n> return tagKey{dir, strings.Join(keyTags, \",\")}\n\nThe AllTags list is sorted, and the tags list came from AllTags. Added a comment.\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/run.bash\nFile src/run.bash (right):\n\nhttps://codereview.appspot.com/12699048/diff/2001/src/run.bash#newcode185\nsrc/run.bash:185: time go run $GOROOT/src/cmd/api/run.go\nOn 2013/08/09 21:41:29, bradfitz wrote:\n> I would delete the time.  Noise.  And seems like debugging.\n> \n> We can always time it by hand later (and I have often).\n\nWe time everything else. I want to time this too. This is what I always feel like I'm waiting for (perhaps unfairly, because it is at the end of the build), and I want to see (every time) how it compares to the other things.",
			"disapproval": false,
			"date": "2013-08-09 22:38:06.957560",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"bradfitz@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=9e198c0d7d40 ***\n\ncmd/api: eliminate duplicate package import work\n\nOn my Mac, cuts the API checks from 15 seconds to 6 seconds.\nAlso clean up some tag confusion: go run list-of-files ignores tags.\n\nR=bradfitz, gri\nCC=golang-dev\nhttps://codereview.appspot.com/12699048",
			"disapproval": false,
			"date": "2013-08-09 22:44:04.046940",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 12699048: cmd/api: eliminate duplicate package import work",
	"created": "2013-08-09 21:17:36.896490",
	"patchsets": [
		1,
		2001,
		10001,
		5002
	],
	"modified": "2013-08-09 22:44:05.800710",
	"closed": true,
	"issue": 12699048
}