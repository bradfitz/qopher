{
	"description": "cmd/5c, cmd/5g, cmd/5l: introduce MOVBS and MOVHS instructions.\n\nMOVBS and MOVHS are defined as duplicates of MOVB and MOVH,\nand perform sign-extension moving.\nNo change is made to code generation.\n\nUpdate issue 1837",
	"cc": [
		"rsc@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-08-08 20:57:16.851560",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM as you already received an LGTM on a superset of this.\r\n\r\n\r\n\r\nOn Thu, Aug 8, 2013 at 1:57 PM, <remyoudompheng@gmail.com> wrote:\r\n\r\n> Reviewers: rsc,\r\n>\r\n> Message:\r\n> Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> cmd/5c, cmd/5g, cmd/5l: introduce MOVBS and MOVHS instructions.\r\n>\r\n> MOVBS and MOVHS are defined as duplicates of MOVB and MOVH,\r\n> and perform sign-extension moving.\r\n> No change is made to code generation.\r\n>\r\n> Update issue 1837\r\n>\r\n> Please review this at https://codereview.appspot.**com/12682043/<https://codereview.appspot.com/12682043/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/5c/peep.c\r\n>   M src/cmd/5c/reg.c\r\n>   M src/cmd/5c/txt.c\r\n>   M src/cmd/5g/gsubr.c\r\n>   M src/cmd/5g/peep.c\r\n>   M src/cmd/5g/reg.c\r\n>   M src/cmd/5l/5.out.h\r\n>   M src/cmd/5l/asm.c\r\n>   M src/cmd/5l/optab.c\r\n>   M src/cmd/5l/span.c\r\n>\r\n>\r\n> Index: src/cmd/5c/peep.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/5c/peep.c\r\n> +++ b/src/cmd/5c/peep.c\r\n> @@ -127,8 +127,10 @@\r\n>                         }\r\n>                         continue;\r\n>                 case AMOVH:\r\n> +               case AMOVHS:\r\n>                 case AMOVHU:\r\n>                 case AMOVB:\r\n> +               case AMOVBS:\r\n>                 case AMOVBU:\r\n>                         if(p->to.type != D_REG)\r\n>                                 continue;\r\n> @@ -152,6 +154,7 @@\r\n>                 switch(p->as) {\r\n>                 case AMOVW:\r\n>                 case AMOVB:\r\n> +               case AMOVBS:\r\n>                 case AMOVBU:\r\n>                         if(p->from.type == D_OREG && p->from.offset == 0)\r\n>                                 xtramodes(r, &p->from);\r\n> @@ -824,7 +827,7 @@\r\n>         Adr v;\r\n>\r\n>         p = r->prog;\r\n> -       if(p->as == AMOVB && p->from.type == D_OREG)    /* byte load */\r\n> +       if((p->as == AMOVB || p->as == AMOVBS) && p->from.type == D_OREG)\r\n>       /* byte load */\r\n>                 return 0;\r\n>         v = *a;\r\n>         v.type = D_REG;\r\n> @@ -836,7 +839,7 @@\r\n>                 case AADD:\r\n>                         if(p1->from.type == D_REG ||\r\n>                            (p1->from.type == D_SHIFT &&\r\n> (p1->from.offset&(1<<4)) == 0 &&\r\n> -                           (p->as != AMOVB || (a == &p->from &&\r\n> (p1->from.offset&~0xf) == 0))) ||\r\n> +                           ((p->as != AMOVB && p->as != AMOVBS) || (a ==\r\n> &p->from && (p1->from.offset&~0xf) == 0))) ||\r\n>                            (p1->from.type == D_CONST &&\r\n>                             p1->from.offset > -4096 && p1->from.offset <\r\n> 4096))\r\n>                         if(nochange(uniqs(r1), r, p1)) {\r\n> @@ -961,8 +964,10 @@\r\n>         case AMOVF:\r\n>         case AMOVD:\r\n>         case AMOVH:\r\n> +       case AMOVHS:\r\n>         case AMOVHU:\r\n>         case AMOVB:\r\n> +       case AMOVBS:\r\n>         case AMOVBU:\r\n>         case AMOVDW:\r\n>         case AMOVWD:\r\n> Index: src/cmd/5c/reg.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/5c/reg.c\r\n> +++ b/src/cmd/5c/reg.c\r\n> @@ -175,8 +175,10 @@\r\n>                  */\r\n>                 case ANOP:\r\n>                 case AMOVB:\r\n> +               case AMOVBS:\r\n>                 case AMOVBU:\r\n>                 case AMOVH:\r\n> +               case AMOVHS:\r\n>                 case AMOVHU:\r\n>                 case AMOVW:\r\n>                 case AMOVF:\r\n> Index: src/cmd/5c/txt.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/5c/txt.c\r\n> +++ b/src/cmd/5c/txt.c\r\n> @@ -594,13 +594,13 @@\r\n>                         a = AMOVD;\r\n>                         break;\r\n>                 case TCHAR:\r\n> -                       a = AMOVB;\r\n> +                       a = AMOVBS;\r\n>                         break;\r\n>                 case TUCHAR:\r\n>                         a = AMOVBU;\r\n>                         break;\r\n>                 case TSHORT:\r\n> -                       a = AMOVH;\r\n> +                       a = AMOVHS;\r\n>                         break;\r\n>                 case TUSHORT:\r\n>                         a = AMOVHU;\r\n> @@ -630,13 +630,13 @@\r\n>                         a = AMOVBU;\r\n>                         break;\r\n>                 case TCHAR:\r\n> -                       a = AMOVB;\r\n> +                       a = AMOVBS;\r\n>                         break;\r\n>                 case TUSHORT:\r\n>                         a = AMOVHU;\r\n>                         break;\r\n>                 case TSHORT:\r\n> -                       a = AMOVH;\r\n> +                       a = AMOVHS;\r\n>                         break;\r\n>                 case TFLOAT:\r\n>                         a = AMOVF;\r\n> @@ -761,13 +761,13 @@\r\n>                 switch(tt) {\r\n>                 case TDOUBLE:\r\n>                         regalloc(&nod, f, Z);\r\n> -                       gins(AMOVH, f, &nod);\r\n> +                       gins(AMOVHS, f, &nod);\r\n>                         gins(AMOVWD, &nod, t);\r\n>                         regfree(&nod);\r\n>                         return;\r\n>                 case TFLOAT:\r\n>                         regalloc(&nod, f, Z);\r\n> -                       gins(AMOVH, f, &nod);\r\n> +                       gins(AMOVHS, f, &nod);\r\n>                         gins(AMOVWF, &nod, t);\r\n>                         regfree(&nod);\r\n>                         return;\r\n> @@ -776,7 +776,7 @@\r\n>                 case TULONG:\r\n>                 case TLONG:\r\n>                 case TIND:\r\n> -                       a = AMOVH;\r\n> +                       a = AMOVHS;\r\n>                         break;\r\n>                 case TSHORT:\r\n>                 case TUSHORT:\r\n> @@ -819,13 +819,13 @@\r\n>                 switch(tt) {\r\n>                 case TDOUBLE:\r\n>                         regalloc(&nod, f, Z);\r\n> -                       gins(AMOVB, f, &nod);\r\n> +                       gins(AMOVBS, f, &nod);\r\n>                         gins(AMOVWD, &nod, t);\r\n>                         regfree(&nod);\r\n>                         return;\r\n>                 case TFLOAT:\r\n>                         regalloc(&nod, f, Z);\r\n> -                       gins(AMOVB, f, &nod);\r\n> +                       gins(AMOVBS, f, &nod);\r\n>                         gins(AMOVWF, &nod, t);\r\n>                         regfree(&nod);\r\n>                         return;\r\n> @@ -836,7 +836,7 @@\r\n>                 case TIND:\r\n>                 case TSHORT:\r\n>                 case TUSHORT:\r\n> -                       a = AMOVB;\r\n> +                       a = AMOVBS;\r\n>                         break;\r\n>                 case TCHAR:\r\n>                 case TUCHAR:\r\n> @@ -893,13 +893,13 @@\r\n>         if(typechlp[ft] && typechlp[tt] && ewidth[ft] >= ewidth[tt]){\r\n>                 switch(tt){\r\n>                 case TSHORT:\r\n> -                       a = AMOVH;\r\n> +                       a = AMOVHS;\r\n>                         break;\r\n>                 case TUSHORT:\r\n>                         a = AMOVHU;\r\n>                         break;\r\n>                 case TCHAR:\r\n> -                       a = AMOVB;\r\n> +                       a = AMOVBS;\r\n>                         break;\r\n>                 case TUCHAR:\r\n>                         a = AMOVBU;\r\n> Index: src/cmd/5g/gsubr.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/5g/gsubr.c\r\n> +++ b/src/cmd/5g/gsubr.c\r\n> @@ -1877,7 +1877,8 @@\r\n>         default:\r\n>                 return 0;\r\n>         case AADD: case ASUB: case AAND: case AORR: case AEOR:\r\n> -       case AMOVB: case AMOVBU: case AMOVH: case AMOVHU:\r\n> +       case AMOVB: case AMOVBS: case AMOVBU:\r\n> +       case AMOVH: case AMOVHS: case AMOVHU:\r\n>         case AMOVW:\r\n>                 break;\r\n>         }\r\n> Index: src/cmd/5g/peep.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/5g/peep.c\r\n> +++ b/src/cmd/5g/peep.c\r\n> @@ -153,8 +153,10 @@\r\n>                         break;\r\n>\r\n>                 case AMOVH:\r\n> +               case AMOVHS:\r\n>                 case AMOVHU:\r\n>                 case AMOVB:\r\n> +               case AMOVBS:\r\n>                 case AMOVBU:\r\n>                         /*\r\n>                          * look for MOVB x,R; MOVB R,R\r\n> @@ -181,6 +183,7 @@\r\n>                 switch(p->as) {\r\n>                 case AMOVW:\r\n>                 case AMOVB:\r\n> +               case AMOVBS:\r\n>                 case AMOVBU:\r\n>                         if(p->from.type == D_OREG && p->from.offset == 0)\r\n>                                 xtramodes(r, &p->from);\r\n> @@ -893,7 +896,7 @@\r\n>                                 break;\r\n>                         if(p1->from.type == D_REG ||\r\n>                            (p1->from.type == D_SHIFT &&\r\n> (p1->from.offset&(1<<4)) == 0 &&\r\n> -                           (p->as != AMOVB || (a == &p->from &&\r\n> (p1->from.offset&~0xf) == 0))) ||\r\n> +                           ((p->as != AMOVB && p->as != AMOVBS) || (a ==\r\n> &p->from && (p1->from.offset&~0xf) == 0))) ||\r\n>                            (p1->from.type == D_CONST &&\r\n>                             p1->from.offset > -4096 && p1->from.offset <\r\n> 4096))\r\n>                         if(nochange(uniqs(r1), r, p1)) {\r\n> @@ -1016,8 +1019,10 @@\r\n>         case AMOVF:\r\n>         case AMOVD:\r\n>         case AMOVH:\r\n> +       case AMOVHS:\r\n>         case AMOVHU:\r\n>         case AMOVB:\r\n> +       case AMOVBS:\r\n>         case AMOVBU:\r\n>         case AMOVFW:\r\n>         case AMOVWF:\r\n> Index: src/cmd/5g/reg.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/5g/reg.c\r\n> +++ b/src/cmd/5g/reg.c\r\n> @@ -374,6 +374,7 @@\r\n>                  */\r\n>                 case ANOP:\r\n>                 case AMOVB:\r\n> +               case AMOVBS:\r\n>                 case AMOVBU:\r\n>                 case AMOVD:\r\n>                 case AMOVDF:\r\n> @@ -381,6 +382,7 @@\r\n>                 case AMOVF:\r\n>                 case AMOVFW:\r\n>                 case AMOVH:\r\n> +               case AMOVHS:\r\n>                 case AMOVHU:\r\n>                 case AMOVW:\r\n>                 case AMOVWD:\r\n> Index: src/cmd/5l/5.out.h\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/5l/5.out.h\r\n> +++ b/src/cmd/5l/5.out.h\r\n> @@ -135,8 +135,10 @@\r\n>         AMODU,\r\n>\r\n>         AMOVB,\r\n> +       AMOVBS,\r\n>         AMOVBU,\r\n>         AMOVH,\r\n> +       AMOVHS,\r\n>         AMOVHU,\r\n>         AMOVW,\r\n>         AMOVM,\r\n> Index: src/cmd/5l/asm.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/5l/asm.c\r\n> +++ b/src/cmd/5l/asm.c\r\n> @@ -954,7 +954,7 @@\r\n>                 r = p->to.reg;\r\n>                 o1 |= (p->from.reg)|(r<<12);\r\n>                 o2 |= (r)|(r<<12);\r\n> -               if(p->as == AMOVB || p->as == AMOVBU) {\r\n> +               if(p->as == AMOVB || p->as == AMOVBS || p->as == AMOVBU) {\r\n>                         o1 |= (24<<7);\r\n>                         o2 |= (24<<7);\r\n>                 } else {\r\n> @@ -1035,7 +1035,7 @@\r\n>                 if(r == NREG)\r\n>                         r = o->param;\r\n>                 o2 = olrr(REGTMP,r, p->to.reg, p->scond);\r\n> -               if(p->as == AMOVBU || p->as == AMOVB)\r\n> +               if(p->as == AMOVBU || p->as == AMOVBS || p->as == AMOVB)\r\n>                         o2 |= 1<<22;\r\n>                 break;\r\n>\r\n> @@ -1224,7 +1224,7 @@\r\n>                 if(p->to.reg == NREG)\r\n>                         diag(\"MOV to shifter operand\");\r\n>                 o1 = osrr(p->from.reg, p->to.offset, p->to.reg, p->scond);\r\n> -               if(p->as == AMOVB || p->as == AMOVBU)\r\n> +               if(p->as == AMOVB || p->as == AMOVBS || p->as == AMOVBU)\r\n>                         o1 |= 1<<22;\r\n>                 break;\r\n>\r\n> @@ -1265,7 +1265,7 @@\r\n>                 if(!o1)\r\n>                         break;\r\n>                 o2 = olr(0, REGTMP, p->to.reg, p->scond);\r\n> -               if(p->as == AMOVBU || p->as == AMOVB)\r\n> +               if(p->as == AMOVBU || p->as == AMOVBS || p->as == AMOVB)\r\n>                         o2 |= 1<<22;\r\n>                 if(o->flag & LPCREL) {\r\n>                         o3 = o2;\r\n> @@ -1309,9 +1309,9 @@\r\n>                 if(r == NREG)\r\n>                         r = o->param;\r\n>                 o1 = olhr(instoffset, r, p->to.reg, p->scond);\r\n> -               if(p->as == AMOVB)\r\n> +               if(p->as == AMOVB || p->as == AMOVBS)\r\n>                         o1 ^= (1<<5)|(1<<6);\r\n> -               else if(p->as == AMOVH)\r\n> +               else if(p->as == AMOVH || p->as == AMOVHS)\r\n>                         o1 ^= (1<<6);\r\n>                 break;\r\n>         case 72:        /* movh/movhu R,L(R) -> strh */\r\n> @@ -1331,9 +1331,9 @@\r\n>                 if(r == NREG)\r\n>                         r = o->param;\r\n>                 o2 = olhrr(REGTMP, r, p->to.reg, p->scond);\r\n> -               if(p->as == AMOVB)\r\n> +               if(p->as == AMOVB || p->as == AMOVBS)\r\n>                         o2 ^= (1<<5)|(1<<6);\r\n> -               else if(p->as == AMOVH)\r\n> +               else if(p->as == AMOVH || p->as == AMOVHS)\r\n>                         o2 ^= (1<<6);\r\n>                 break;\r\n>         case 74:        /* bx $I */\r\n> @@ -1485,9 +1485,9 @@\r\n>                 if(!o1)\r\n>                         break;\r\n>                 o2 = olhr(0, REGTMP, p->to.reg, p->scond);\r\n> -               if(p->as == AMOVB)\r\n> +               if(p->as == AMOVB || p->as == AMOVBS)\r\n>                         o2 ^= (1<<5)|(1<<6);\r\n> -               else if(p->as == AMOVH)\r\n> +               else if(p->as == AMOVH || p->as == AMOVHS)\r\n>                         o2 ^= (1<<6);\r\n>                 if(o->flag & LPCREL) {\r\n>                         o3 = o2;\r\n> Index: src/cmd/5l/optab.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/5l/optab.c\r\n> +++ b/src/cmd/5l/optab.c\r\n> @@ -95,8 +95,10 @@\r\n>         { ACMP,         C_LCON, C_REG,  C_NONE,         13, 8, 0,\r\n> LFROM },\r\n>\r\n>         { AMOVB,        C_REG,  C_NONE, C_REG,          14, 8, 0 },\r\n> +       { AMOVBS,       C_REG,  C_NONE, C_REG,          14, 8, 0 },\r\n>         { AMOVBU,       C_REG,  C_NONE, C_REG,          58, 4, 0 },\r\n>         { AMOVH,        C_REG,  C_NONE, C_REG,          14, 8, 0 },\r\n> +       { AMOVHS,       C_REG,  C_NONE, C_REG,          14, 8, 0 },\r\n>         { AMOVHU,       C_REG,  C_NONE, C_REG,          14, 8, 0 },\r\n>\r\n>         { AMUL,         C_REG,  C_REG,  C_REG,          15, 4, 0 },\r\n> @@ -112,6 +114,8 @@\r\n>         { AMOVW,        C_REG,  C_NONE, C_SOREG,        20, 4, 0 },\r\n>         { AMOVB,        C_REG,  C_NONE, C_SAUTO,        20, 4, REGSP },\r\n>         { AMOVB,        C_REG,  C_NONE, C_SOREG,        20, 4, 0 },\r\n> +       { AMOVBS,       C_REG,  C_NONE, C_SAUTO,        20, 4, REGSP },\r\n> +       { AMOVBS,       C_REG,  C_NONE, C_SOREG,        20, 4, 0 },\r\n>         { AMOVBU,       C_REG,  C_NONE, C_SAUTO,        20, 4, REGSP },\r\n>         { AMOVBU,       C_REG,  C_NONE, C_SOREG,        20, 4, 0 },\r\n>\r\n> @@ -126,6 +130,9 @@\r\n>         { AMOVB,        C_REG,  C_NONE, C_LAUTO,        30, 8, REGSP,\r\n> LTO },\r\n>         { AMOVB,        C_REG,  C_NONE, C_LOREG,        30, 8, 0,\r\n> LTO },\r\n>         { AMOVB,        C_REG,  C_NONE, C_ADDR,         64, 8, 0,\r\n> LTO | LPCREL, 4 },\r\n> +       { AMOVBS,       C_REG,  C_NONE, C_LAUTO,        30, 8, REGSP,\r\n> LTO },\r\n> +       { AMOVBS,       C_REG,  C_NONE, C_LOREG,        30, 8, 0,\r\n> LTO },\r\n> +       { AMOVBS,       C_REG,  C_NONE, C_ADDR,         64, 8, 0,\r\n> LTO | LPCREL, 4 },\r\n>         { AMOVBU,       C_REG,  C_NONE, C_LAUTO,        30, 8, REGSP,\r\n> LTO },\r\n>         { AMOVBU,       C_REG,  C_NONE, C_LOREG,        30, 8, 0,\r\n> LTO },\r\n>         { AMOVBU,       C_REG,  C_NONE, C_ADDR,         64, 8, 0,\r\n> LTO | LPCREL, 4 },\r\n> @@ -176,9 +183,11 @@\r\n>         { AMOVBU,       C_SHIFT,C_NONE, C_REG,          59, 4, 0 },\r\n>\r\n>         { AMOVB,        C_SHIFT,C_NONE, C_REG,          60, 4, 0 },\r\n> +       { AMOVBS,       C_SHIFT,C_NONE, C_REG,          60, 4, 0 },\r\n>\r\n>         { AMOVW,        C_REG,  C_NONE, C_SHIFT,        61, 4, 0 },\r\n>         { AMOVB,        C_REG,  C_NONE, C_SHIFT,        61, 4, 0 },\r\n> +       { AMOVBS,       C_REG,  C_NONE, C_SHIFT,        61, 4, 0 },\r\n>         { AMOVBU,       C_REG,  C_NONE, C_SHIFT,        61, 4, 0 },\r\n>\r\n>         { ACASE,        C_REG,  C_NONE, C_NONE,         62, 4, 0, LPCREL,\r\n> 8 },\r\n> @@ -186,19 +195,28 @@\r\n>\r\n>         { AMOVH,        C_REG,  C_NONE, C_HAUTO,        70, 4, REGSP,   0\r\n> },\r\n>         { AMOVH,        C_REG,  C_NONE, C_HOREG,        70, 4, 0,       0\r\n> },\r\n> +       { AMOVHS,       C_REG,  C_NONE, C_HAUTO,        70, 4, REGSP,   0\r\n> },\r\n> +       { AMOVHS,       C_REG,  C_NONE, C_HOREG,        70, 4, 0,       0\r\n> },\r\n>         { AMOVHU,       C_REG,  C_NONE, C_HAUTO,        70, 4, REGSP,   0\r\n> },\r\n>         { AMOVHU,       C_REG,  C_NONE, C_HOREG,        70, 4, 0,       0\r\n> },\r\n>\r\n>         { AMOVB,        C_HAUTO,C_NONE, C_REG,          71, 4, REGSP,   0\r\n> },\r\n>         { AMOVB,        C_HOREG,C_NONE, C_REG,          71, 4, 0,       0\r\n> },\r\n> +       { AMOVBS,       C_HAUTO,C_NONE, C_REG,          71, 4, REGSP,   0\r\n> },\r\n> +       { AMOVBS,       C_HOREG,C_NONE, C_REG,          71, 4, 0,       0\r\n> },\r\n>         { AMOVH,        C_HAUTO,C_NONE, C_REG,          71, 4, REGSP,   0\r\n> },\r\n>         { AMOVH,        C_HOREG,C_NONE, C_REG,          71, 4, 0,       0\r\n> },\r\n> +       { AMOVHS,       C_HAUTO,C_NONE, C_REG,          71, 4, REGSP,   0\r\n> },\r\n> +       { AMOVHS,       C_HOREG,C_NONE, C_REG,          71, 4, 0,       0\r\n> },\r\n>         { AMOVHU,       C_HAUTO,C_NONE, C_REG,          71, 4, REGSP,   0\r\n> },\r\n>         { AMOVHU,       C_HOREG,C_NONE, C_REG,          71, 4, 0,       0\r\n> },\r\n>\r\n>         { AMOVH,        C_REG,  C_NONE, C_LAUTO,        72, 8, REGSP,\r\n> LTO },\r\n>         { AMOVH,        C_REG,  C_NONE, C_LOREG,        72, 8, 0,\r\n> LTO },\r\n>         { AMOVH,        C_REG,  C_NONE, C_ADDR, 94, 8, 0,       LTO |\r\n> LPCREL, 4 },\r\n> +       { AMOVHS,       C_REG,  C_NONE, C_LAUTO,        72, 8, REGSP,\r\n> LTO },\r\n> +       { AMOVHS,       C_REG,  C_NONE, C_LOREG,        72, 8, 0,\r\n> LTO },\r\n> +       { AMOVHS,       C_REG,  C_NONE, C_ADDR, 94, 8, 0,       LTO |\r\n> LPCREL, 4 },\r\n>         { AMOVHU,       C_REG,  C_NONE, C_LAUTO,        72, 8, REGSP,\r\n> LTO },\r\n>         { AMOVHU,       C_REG,  C_NONE, C_LOREG,        72, 8, 0,\r\n> LTO },\r\n>         { AMOVHU,       C_REG,  C_NONE, C_ADDR, 94, 8, 0,       LTO |\r\n> LPCREL, 4 },\r\n> @@ -206,9 +224,15 @@\r\n>         { AMOVB,        C_LAUTO,C_NONE, C_REG,          73, 8, REGSP,\r\n> LFROM },\r\n>         { AMOVB,        C_LOREG,C_NONE, C_REG,          73, 8, 0,\r\n> LFROM },\r\n>         { AMOVB,        C_ADDR, C_NONE, C_REG,          93, 8, 0,\r\n> LFROM | LPCREL, 4 },\r\n> +       { AMOVBS,       C_LAUTO,C_NONE, C_REG,          73, 8, REGSP,\r\n> LFROM },\r\n> +       { AMOVBS,       C_LOREG,C_NONE, C_REG,          73, 8, 0,\r\n> LFROM },\r\n> +       { AMOVBS,       C_ADDR, C_NONE, C_REG,          93, 8, 0,\r\n> LFROM | LPCREL, 4 },\r\n>         { AMOVH,        C_LAUTO,C_NONE, C_REG,          73, 8, REGSP,\r\n> LFROM },\r\n>         { AMOVH,        C_LOREG,C_NONE, C_REG,          73, 8, 0,\r\n> LFROM },\r\n>         { AMOVH,        C_ADDR, C_NONE, C_REG,          93, 8, 0,\r\n> LFROM | LPCREL, 4 },\r\n> +       { AMOVHS,       C_LAUTO,C_NONE, C_REG,          73, 8, REGSP,\r\n> LFROM },\r\n> +       { AMOVHS,       C_LOREG,C_NONE, C_REG,          73, 8, 0,\r\n> LFROM },\r\n> +       { AMOVHS,       C_ADDR, C_NONE, C_REG,          93, 8, 0,\r\n> LFROM | LPCREL, 4 },\r\n>         { AMOVHU,       C_LAUTO,C_NONE, C_REG,          73, 8, REGSP,\r\n> LFROM },\r\n>         { AMOVHU,       C_LOREG,C_NONE, C_REG,          73, 8, 0,\r\n> LFROM },\r\n>         { AMOVHU,       C_ADDR, C_NONE, C_REG,          93, 8, 0,\r\n> LFROM | LPCREL, 4 },\r\n> Index: src/cmd/5l/span.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/5l/span.c\r\n> +++ b/src/cmd/5l/span.c\r\n> @@ -813,8 +813,10 @@\r\n>                         break;\r\n>                 case AMOVW:\r\n>                 case AMOVB:\r\n> +               case AMOVBS:\r\n>                 case AMOVBU:\r\n>                 case AMOVH:\r\n> +               case AMOVHS:\r\n>                 case AMOVHU:\r\n>                         break;\r\n>                 case ASWPW:\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-08 21:26:22.844690",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/08 21:26:22, bradfitz wrote:\n> LGTM as you already received an LGTM on a superset of this.\n> \n\nAlso all.bash passes, which is a serious advantage.",
			"disapproval": false,
			"date": "2013-08-08 21:28:41.198350",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b0240b16a8e0 ***\n\ncmd/5c, cmd/5g, cmd/5l: introduce MOVBS and MOVHS instructions.\n\nMOVBS and MOVHS are defined as duplicates of MOVB and MOVH,\nand perform sign-extension moving.\nNo change is made to code generation.\n\nUpdate issue 1837\n\nR=rsc, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/12682043",
			"disapproval": false,
			"date": "2013-08-08 21:29:09.713510",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 12682043: cmd/5c, cmd/5g, cmd/5l: introduce MOVBS and MOVHS instr...",
	"created": "2013-08-08 20:55:23.930350",
	"patchsets": [
		1,
		3001,
		6001,
		11001
	],
	"modified": "2013-08-08 21:29:11.363690",
	"closed": true,
	"issue": 12682043
}