{
	"description": "runtime: allocate internal symbol table eagerly\nwe need it for GC anyway.",
	"cc": [
		"golang-dev@googlegroups.com",
		"khr@golang.org",
		"dave@cheney.net",
		"khr@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-05-27 07:49:58.255360",
			"approval": false
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nGet rid of the findfunc(0) call in pkg/runtime/cpuprof.c, it will no longer be needed.",
			"disapproval": false,
			"date": "2013-05-28 06:09:40.363480",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, May 28, 2013 at 10:09 AM, <khr@golang.org> wrote:\r\n\r\n> LGTM\r\n>\r\n> Get rid of the findfunc(0) call in pkg/runtime/cpuprof.c, it will no\r\n> longer be needed.\r\n>\r\n\r\n\r\nI think I need to remove the lazy initialization logic from findfunc()\r\nentirely (mutex, etc). Call buildfuncs() during sched init, and then expect\r\nthat it's initialized in findfunc().\r\nWhat do you think?\r\n",
			"disapproval": false,
			"date": "2013-05-28 07:03:06.647530",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I think I need to remove the lazy initialization logic from findfunc()\r\n> entirely (mutex, etc). Call buildfuncs() during sched init, and then expect\r\n> that it's initialized in findfunc().\r\n> What do you think?\r\n\r\nSGTM.\r\n",
			"disapproval": false,
			"date": "2013-05-28 07:04:23.110930",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sounds good.\r\n\r\n\r\nOn Tue, May 28, 2013 at 12:04 AM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> > I think I need to remove the lazy initialization logic from findfunc()\r\n> > entirely (mutex, etc). Call buildfuncs() during sched init, and then\r\n> expect\r\n> > that it's initialized in findfunc().\r\n> > What do you think?\r\n>\r\n> SGTM.\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-28 15:02:02.605310",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"dave@cheney.net",
				"khr@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> > > I think I need to remove the lazy initialization logic from findfunc()\n> > > entirely (mutex, etc). Call buildfuncs() during sched init, and then\n> > expect\n> > > that it's initialized in findfunc().\n> > > What do you think?\n\n\nDone, PTAL.\nmuch better now",
			"disapproval": false,
			"date": "2013-05-28 15:13:42.086380",
			"approval": false
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"dave@cheney.net",
				"khr@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/28 15:13:42, dvyukov wrote:\n> > > > I think I need to remove the lazy initialization logic from findfunc()\n> > > > entirely (mutex, etc). Call buildfuncs() during sched init, and then\n> > > expect\n> > > > that it's initialized in findfunc().\n> > > > What do you think?\n> \n> \n> Done, PTAL.\n> much better now\n\nLGTM.",
			"disapproval": false,
			"date": "2013-05-28 15:52:17.687440",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"khr@golang.org",
				"dave@cheney.net",
				"khr@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c658ed1b4459 ***\n\nruntime: allocate internal symbol table eagerly\nwe need it for GC anyway.\n\nR=golang-dev, khr, dave, khr\nCC=golang-dev\nhttps://codereview.appspot.com/9728044",
			"disapproval": false,
			"date": "2013-05-28 17:10:13.945520",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 9728044: runtime: allocate internal symbol table eagerly",
	"created": "2013-05-27 07:49:48.985400",
	"patchsets": [
		1,
		2001,
		5001,
		12001,
		17001
	],
	"modified": "2013-05-28 17:10:15.290560",
	"closed": true,
	"issue": 9728044
}