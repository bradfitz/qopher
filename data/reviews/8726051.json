{
	"description": "net: refactor sockets",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\n> how much else in this diff is just providing distraction?\n\nNot so much, isolated, thx.",
			"disapproval": false,
			"date": "2013-07-24 15:06:10.807270",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-07-24 00:13:31.416870",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8726051/diff/61001/src/pkg/net/ipsock_posix.go\nFile src/pkg/net/ipsock_posix.go (right):\n\nhttps://codereview.appspot.com/8726051/diff/61001/src/pkg/net/ipsock_posix.go#newcode26\nsrc/pkg/net/ipsock_posix.go:26: laddr TCPAddr\nthese three changes here look unnecessary.\n\nsmaller diffs are easier to review.\n\nhow much else in this diff is just providing distraction?",
			"disapproval": false,
			"date": "2013-07-24 01:49:52.663440",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/24 15:06:10, mikio wrote:\n> PTAL\n> \n> > how much else in this diff is just providing distraction?\n> \n> Not so much, isolated, thx.\n\nHi Mikio,\n\nI'm having trouble following this CL. Can I please ask you to do several things.\n\n1. Unless they are critical to the change, please revert the nil checks. Please open a discussion on the mailing list to discuss this change in behavior, from my understanding Go takes a very liberal approach to cushioning the user against passing nil pointer values.\n\n2. Can refactoring of listenerSockaddr be split out into another CL.\n\n3. And this is related to point 1, and please excuse me if I have misunderstood this change, it feels like nil is being used as a signal inside the net package. I'm uncomfortable about this change as I expressed in point 1.\n\nThanks again\n\nDave",
			"disapproval": false,
			"date": "2013-07-25 11:11:59.228350",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jul 25, 2013 at 8:11 PM,  <dave@cheney.net> wrote:\r\n\r\n> 1. Unless they are critical to the change, please revert the nil checks.\r\n\r\nI guess you are saying about net.sockaddr stuff, right?\r\n\r\nUnfortunately they are a bit important stuff; same as it was, and as\r\nyou supposed,\r\ninternal socket preflight helpers take nil as a signal that indicates\r\n\"a passed address\r\nis already determined by exposed API surface whether wildcard stuff or\r\nnot. Now we\r\nunderstand that the address, net.sockaddr (not syscall.Sockaddr), is\r\nreally nil address\r\nfor target operations such as syscall.Listen, syscall.Connect\".\r\n\r\n> 3. And this is related to point 1, and please excuse me if I have\r\n> misunderstood this change, it feels like nil is being used as a signal\r\n> inside the net package. I'm uncomfortable about this change as I\r\n> expressed in point 1.\r\n\r\nI'm happy if you have a nice counterproposal.\r\n\r\n> Please open a discussion on the mailing list to discuss this change in\r\n> behavior, from my understanding Go takes a very liberal approach to\r\n> cushioning the user against passing nil pointer values.\r\n\r\nWill do so if you want.\r\n\r\n> 2. Can refactoring of listenerSockaddr be split out into another CL.\r\n\r\nNot sure how to do that, any suggestions?\r\n",
			"disapproval": false,
			"date": "2013-07-25 14:34:00.181920",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for your comments, I'll take another pass in the morning. \r\n\r\n\r\n\r\nOn 26/07/2013, at 0:33, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> On Thu, Jul 25, 2013 at 8:11 PM,  <dave@cheney.net> wrote:\r\n> \r\n>> 1. Unless they are critical to the change, please revert the nil checks.\r\n> \r\n> I guess you are saying about net.sockaddr stuff, right?\r\n> \r\n> Unfortunately they are a bit important stuff; same as it was, and as\r\n> you supposed,\r\n> internal socket preflight helpers take nil as a signal that indicates\r\n> \"a passed address\r\n> is already determined by exposed API surface whether wildcard stuff or\r\n> not. Now we\r\n> understand that the address, net.sockaddr (not syscall.Sockaddr), is\r\n> really nil address\r\n> for target operations such as syscall.Listen, syscall.Connect\".\r\n> \r\n>> 3. And this is related to point 1, and please excuse me if I have\r\n>> misunderstood this change, it feels like nil is being used as a signal\r\n>> inside the net package. I'm uncomfortable about this change as I\r\n>> expressed in point 1.\r\n> \r\n> I'm happy if you have a nice counterproposal.\r\n> \r\n>> Please open a discussion on the mailing list to discuss this change in\r\n>> behavior, from my understanding Go takes a very liberal approach to\r\n>> cushioning the user against passing nil pointer values.\r\n> \r\n> Will do so if you want.\r\n> \r\n>> 2. Can refactoring of listenerSockaddr be split out into another CL.\r\n> \r\n> Not sure how to do that, any suggestions?\r\n",
			"disapproval": false,
			"date": "2013-07-25 14:54:27.192200",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jul 25, 2013 at 11:54 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> Thanks for your comments, I'll take another pass in the morning.\r\n\r\nThanks too. I just remembered that just a year ago Russ rejected the CL\r\nI wrote and modified w/ your suggestions. Ah, that patch included something\r\nlike how could we deal a net.Addr; whether a wildcard address+port or not, use\r\nof nil as a signal or not, blah blah blah. Hm... ;)\r\n",
			"disapproval": false,
			"date": "2013-07-25 15:00:49.231210",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yup. I'm ashamed to admit I proposed something very icky using types nils. \r\n\r\n\r\n\r\nOn 26/07/2013, at 1:00, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> On Thu, Jul 25, 2013 at 11:54 PM, Dave Cheney <dave@cheney.net> wrote:\r\n> \r\n>> Thanks for your comments, I'll take another pass in the morning.\r\n> \r\n> Thanks too. I just remembered that just a year ago Russ rejected the CL\r\n> I wrote and modified w/ your suggestions. Ah, that patch included something\r\n> like how could we deal a net.Addr; whether a wildcard address+port or not, use\r\n> of nil as a signal or not, blah blah blah. Hm... ;)\r\n",
			"disapproval": false,
			"date": "2013-07-25 15:26:39.401570",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am having difficulty reviewing this change as I cannot determine a theme. Can you please try to break this CL up into smaller parts. I have marked some places in the diff where I believe these changes can be made independently.\n\nhttps://codereview.appspot.com/8726051/diff/77001/src/pkg/net/ipsock_posix.go\nFile src/pkg/net/ipsock_posix.go (left):\n\nhttps://codereview.appspot.com/8726051/diff/77001/src/pkg/net/ipsock_posix.go#oldcode130\nsrc/pkg/net/ipsock_posix.go:130: }\nthis move to sock_posix.go can move to a new cl.\n\nhttps://codereview.appspot.com/8726051/diff/77001/src/pkg/net/sock_windows.go\nFile src/pkg/net/sock_windows.go (left):\n\nhttps://codereview.appspot.com/8726051/diff/77001/src/pkg/net/sock_windows.go#oldcode15\nsrc/pkg/net/sock_windows.go:15: func listenerSockaddr(s syscall.Handle, f int, la syscall.Sockaddr, toAddr func(syscall.Sockaddr) Addr) (syscall.Sockaddr, error) {\nplease move this change (and the one in sock_unix.go) to a new CL",
			"disapproval": false,
			"date": "2013-07-28 02:37:44.143300",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Jul 28, 2013 at 11:37 AM,  <dave@cheney.net> wrote:\r\n\r\n> I am having difficulty reviewing this change as I cannot determine a\r\n> theme. Can you please try to break this CL up into smaller parts. I have\r\n> marked some places in the diff where I believe these changes can be made\r\n> independently.\r\n\r\nAh, you need almost all transitions, toAddr -> sockaddr, internetSocket to\r\nnew methods, unixSocket -> new methods, right?\r\n",
			"disapproval": false,
			"date": "2013-07-28 02:50:53.458700",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can't you do the socketaddr interface move and the other move without changing their contents ?\r\n\r\nOn 28/07/2013, at 12:50, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> On Sun, Jul 28, 2013 at 11:37 AM,  <dave@cheney.net> wrote:\r\n> \r\n>> I am having difficulty reviewing this change as I cannot determine a\r\n>> theme. Can you please try to break this CL up into smaller parts. I have\r\n>> marked some places in the diff where I believe these changes can be made\r\n>> independently.\r\n> \r\n> Ah, you need almost all transitions, toAddr -> sockaddr, internetSocket to\r\n> new methods, unixSocket -> new methods, right?\r\n",
			"disapproval": false,
			"date": "2013-07-28 03:10:17.990690",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Jul 28, 2013 at 12:10 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> Can't you do the socketaddr interface move and the other move without changing their contents ?\r\n\r\nWithout ephemeral scaffolds, no.\r\nBut let me try it.\r\n",
			"disapproval": false,
			"date": "2013-07-28 03:22:45.711810",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Or, is it possible to refractor those methods in place, the propose a follow up CL that will reduce the duplication. \r\n\r\nOn 28/07/2013, at 13:22, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\r\n\r\n> On Sun, Jul 28, 2013 at 12:10 PM, Dave Cheney <dave@cheney.net> wrote:\r\n> \r\n>> Can't you do the socketaddr interface move and the other move without changing their contents ?\r\n> \r\n> Without ephemeral scaffolds, no.\r\n> But let me try it.\r\n",
			"disapproval": false,
			"date": "2013-07-28 03:32:26.563710",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 8726051: net: refactor sockets",
	"created": "2013-04-18 16:09:20.170320",
	"patchsets": [
		61001,
		59014,
		77001,
		140001
	],
	"modified": "2013-08-15 13:23:46.055930",
	"closed": false,
	"issue": 8726051
}