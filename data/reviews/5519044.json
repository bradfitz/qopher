{
	"description": "sort.SortBy: using the new sort API\n\nThere are more cases in the code base, but these are\nsome examples where SortBy makes the code more concise.\n\nThis CL depends on pending CL 5520048.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-05 18:23:39.241163",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"nigeltao@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nhttp://codereview.appspot.com/5519044/diff/3009/src/pkg/compress/bzip2/huffman.go\nFile src/pkg/compress/bzip2/huffman.go (right):\n\nhttp://codereview.appspot.com/5519044/diff/3009/src/pkg/compress/bzip2/huffman.go#newcode89\nsrc/pkg/compress/bzip2/huffman.go:89: pairs[i].length == pairs[j].length &&\nCan you add some parens here? I always have to look up which of && and || has higher precedence.\n\nhttp://codereview.appspot.com/5519044/diff/3009/src/pkg/compress/flate/huffman_code.go\nFile src/pkg/compress/flate/huffman_code.go (right):\n\nhttp://codereview.appspot.com/5519044/diff/3009/src/pkg/compress/flate/huffman_code.go#newcode354\nsrc/pkg/compress/flate/huffman_code.go:354: return list[i].freq < list[j].freq ||\nDitto with parens.",
			"disapproval": false,
			"date": "2012-01-05 22:18:24.059279",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "&& and || is in the same ordering as & and | which is in the same\nordering as * and + . I thought we made it really simple in Go.... :-)\n\nI'll add the parens once others agree as well that this CL is a good idea.\n\nThanks for looking at it.\n- gri\n\nOn Thu, Jan 5, 2012 at 2:18 PM,  <nigeltao@golang.org> wrote:\n> LGTM.\n>\n>\n> http://codereview.appspot.com/5519044/diff/3009/src/pkg/compress/bzip2/huffman.go\n> File src/pkg/compress/bzip2/huffman.go (right):\n>\n> http://codereview.appspot.com/5519044/diff/3009/src/pkg/compress/bzip2/huffman.go#newcode89\n> src/pkg/compress/bzip2/huffman.go:89: pairs[i].length == pairs[j].length\n> &&\n> Can you add some parens here? I always have to look up which of && and\n> || has higher precedence.\n>\n> http://codereview.appspot.com/5519044/diff/3009/src/pkg/compress/flate/huffman_code.go\n> File src/pkg/compress/flate/huffman_code.go (right):\n>\n> http://codereview.appspot.com/5519044/diff/3009/src/pkg/compress/flate/huffman_code.go#newcode354\n> src/pkg/compress/flate/huffman_code.go:354: return list[i].freq <\n> list[j].freq ||\n> Ditto with parens.\n>\n> http://codereview.appspot.com/5519044/\n",
			"disapproval": false,
			"date": "2012-01-05 22:31:45.944253",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jan 5, 2012 at 14:18,  <nigeltao@golang.org> wrote:\n> Can you add some parens here? I always have to look up which of && and\n> || has higher precedence.\n\nStop writing C programs.  :-)\n",
			"disapproval": false,
			"date": "2012-01-09 17:11:12.231418",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can you point to specific examples that you think are better?\nI looked at the first handful of files and didn't see anything\ncompelling.  That is, I don't see why SortBy is a significant\nenough improvement on Sort to muddy the waters with a second API.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-09 17:13:29.151081",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jan 9, 2012 at 09:13, Russ Cox <rsc@golang.org> wrote:\n> Can you point to specific examples that you think are better?\n> I looked at the first handful of files and didn't see anything\n> compelling. \u00a0That is, I don't see why SortBy is a significant\n> enough improvement on Sort to muddy the waters with a second API.\n\nNever mind.  I found the other thread where the decision was\nmade to postpone this, which sgtm.\n",
			"disapproval": false,
			"date": "2012-01-09 17:17:28.064232",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-06-03 04:38:07.309031",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5519044: sort.SortBy: using the new sort API",
	"created": "2012-01-05 18:21:24.243828",
	"patchsets": [
		1,
		1001,
		3009
	],
	"modified": "2012-06-03 04:38:07.309031",
	"closed": false,
	"issue": 5519044
}