{
	"description": "net/http: make a test more paranoid & reliable on Windows, maybe.\n\nPart of diagnosing issue 3050.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-29 16:28:58.161202",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=42ff329df337 ***\n\nnet/http: make a test more paranoid & reliable on Windows, maybe.\n\nPart of diagnosing issue 3050.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5707056",
			"disapproval": false,
			"date": "2012-02-29 17:53:20.999008",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-29 02:04:48.547923",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FWIW, this should have no effect.\n\nBut who knows.\n\n\nOn Tue, Feb 28, 2012 at 6:04 PM, <bradfitz@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> net/http: make a test more paranoid & reliable on Windows, maybe.\n>\n> Part of diagnosing issue 3050.\n>\n> Please review this at http://codereview.appspot.com/**5707056/<http://codereview.appspot.com/5707056/>\n>\n> Affected files:\n>  M src/pkg/net/http/fs_test.go\n>\n>\n> Index: src/pkg/net/http/fs_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/http/fs_test.go\n> +++ b/src/pkg/net/http/fs_test.go\n> @@ -152,12 +152,19 @@\n>        }\n>  }\n>\n> +func mustRemoveAll(dir string) {\n> +       err := os.RemoveAll(dir)\n> +       if err != nil {\n> +               panic(err)\n> +       }\n> +}\n> +\n>  func TestFileServerImplicitLeadingS**lash(t *testing.T) {\n>        tempDir, err := ioutil.TempDir(\"\", \"\")\n>        if err != nil {\n>                t.Fatalf(\"TempDir: %v\", err)\n>        }\n> -       defer os.RemoveAll(tempDir)\n> +       defer mustRemoveAll(tempDir)\n>        if err := ioutil.WriteFile(filepath.**Join(tempDir, \"foo.txt\"),\n> []byte(\"Hello world\"), 0644); err != nil {\n>                t.Fatalf(\"WriteFile: %v\", err)\n>        }\n> @@ -172,6 +179,7 @@\n>                if err != nil {\n>                        t.Fatalf(\"ReadAll %s: %v\", suffix, err)\n>                }\n> +               res.Body.Close()\n>                return string(b)\n>        }\n>        if s := get(\"/bar/\"); !strings.Contains(s, \">foo.txt<\") {\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-29 02:07:03.155565",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5707056: net/http: make a test more paranoid & reliable on Windo...",
	"created": "2012-02-29 02:03:54.928460",
	"patchsets": [
		1,
		2001,
		4001,
		5002
	],
	"modified": "2012-02-29 17:53:22.612428",
	"closed": true,
	"issue": 5707056
}