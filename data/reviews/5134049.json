{
	"description": "regexp: speedups\n\nMatchEasy0_1K        500000        4207 ns/op   243.35 MB/s\nMatchEasy0_1K_Old    500000        4625 ns/op   221.40 MB/s\nMatchEasy0_1M           500     3948932 ns/op   265.53 MB/s\nMatchEasy0_1M_Old       500     3943926 ns/op   265.87 MB/s\nMatchEasy0_32K        10000      122974 ns/op   266.46 MB/s\nMatchEasy0_32K_Old    10000      123270 ns/op   265.82 MB/s\nMatchEasy0_32M           10   127265400 ns/op   263.66 MB/s\nMatchEasy0_32M_Old       10   127123500 ns/op   263.95 MB/s\nMatchEasy1_1K        500000        5637 ns/op   181.63 MB/s\nMatchEasy1_1K_Old     10000      100690 ns/op    10.17 MB/s\nMatchEasy1_1M           200     7683150 ns/op   136.48 MB/s\nMatchEasy1_1M_Old        10   145774000 ns/op     7.19 MB/s\nMatchEasy1_32K        10000      239887 ns/op   136.60 MB/s\nMatchEasy1_32K_Old      500     4508182 ns/op     7.27 MB/s\nMatchEasy1_32M           10   247103500 ns/op   135.79 MB/s\nMatchEasy1_32M_Old        1  4660191000 ns/op     7.20 MB/s\nMatchMedium_1K        10000      160567 ns/op     6.38 MB/s\nMatchMedium_1K_Old    10000      158367 ns/op     6.47 MB/s\nMatchMedium_1M           10   162928000 ns/op     6.44 MB/s\nMatchMedium_1M_Old       10   159699200 ns/op     6.57 MB/s\nMatchMedium_32K         500     5090758 ns/op     6.44 MB/s\nMatchMedium_32K_Old     500     5005800 ns/op     6.55 MB/s\nMatchMedium_32M           1  5233973000 ns/op     6.41 MB/s\nMatchMedium_32M_Old       1  5109676000 ns/op     6.57 MB/s\nMatchHard_1K          10000      249087 ns/op     4.11 MB/s\nMatchHard_1K_Old       5000      364569 ns/op     2.81 MB/s\nMatchHard_1M              5   256050000 ns/op     4.10 MB/s\nMatchHard_1M_Old          5   372446400 ns/op     2.82 MB/s\nMatchHard_32K           200     7944525 ns/op     4.12 MB/s\nMatchHard_32K_Old       100    11609380 ns/op     2.82 MB/s\nMatchHard_32M             1  8144503000 ns/op     4.12 MB/s\nMatchHard_32M_Old         1 11885434000 ns/op     2.82 MB/s",
	"cc": [
		"r@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Which is old?  The \"was\" number or the \"Old\" number?\n\nOn Tue, Sep 27, 2011 at 11:31 AM, <rsc@golang.org> wrote:\n\n> Reviewers: r,\n>\n> Message:\n> Hello r (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> regexp: speedups\n>\n> regexp.BenchmarkMatch      162141 ns/op    6.17 MB/s (was 4.17 MB/s)\n> regexp.BenchmarkOldMatch   186438 ns/op    5.36 MB/s\n>\n> Please review this at http://codereview.appspot.com/**5134049/<http://codereview.appspot.com/5134049/>\n>\n> Affected files:\n>  M src/pkg/regexp/exec.go\n>  M src/pkg/regexp/exec_test.go\n>  M src/pkg/regexp/regexp.go\n>  M src/pkg/regexp/syntax/compile.**go\n>  M src/pkg/regexp/syntax/prog.go\n>  M src/pkg/regexp/syntax/prog_**test.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-09-27 18:35:54.287253",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-27 18:31:36.089015",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM but how about a couple of other cases for benchmarks.\n- prefix that matches\n- prefix that doesn't match\n- maybe some parens?",
			"disapproval": false,
			"date": "2011-09-27 18:33:24.989089",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5134049/diff/12001/src/pkg/regexp/exec_test.go\nFile src/pkg/regexp/exec_test.go (right):\n\nhttp://codereview.appspot.com/5134049/diff/12001/src/pkg/regexp/exec_test.go#newcode661\nsrc/pkg/regexp/exec_test.go:661: if rand.Intn(30) == 0 {\nyour benchmarks depend on random input?\n\nI know the random has a fixed seed, but still... seems sketch.  If you run -test.Bench=That vs. -test.Bench=This|That, now That potentially changes speed?\n\nSeems like your benchmark functions should fix the seed at least.",
			"disapproval": false,
			"date": "2011-09-28 15:52:05.012591",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "These benchmarks match the RE2 ones.\nIt doesn't matter what the input is.\nA kilobyte or 32 MB of random data is\nnot distinguishable from another one\nfor these tests.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-09-28 15:59:57.748390",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "The Old number is old/regexp.\nThe was number is regexp before this CL.\n",
			"disapproval": false,
			"date": "2011-09-27 18:44:47.341988",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-28 15:44:32.720900",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=11940a304fb1 ***\n\nregexp: speedups\n\nMatchEasy0_1K        500000        4207 ns/op   243.35 MB/s\nMatchEasy0_1K_Old    500000        4625 ns/op   221.40 MB/s\nMatchEasy0_1M           500     3948932 ns/op   265.53 MB/s\nMatchEasy0_1M_Old       500     3943926 ns/op   265.87 MB/s\nMatchEasy0_32K        10000      122974 ns/op   266.46 MB/s\nMatchEasy0_32K_Old    10000      123270 ns/op   265.82 MB/s\nMatchEasy0_32M           10   127265400 ns/op   263.66 MB/s\nMatchEasy0_32M_Old       10   127123500 ns/op   263.95 MB/s\nMatchEasy1_1K        500000        5637 ns/op   181.63 MB/s\nMatchEasy1_1K_Old     10000      100690 ns/op    10.17 MB/s\nMatchEasy1_1M           200     7683150 ns/op   136.48 MB/s\nMatchEasy1_1M_Old        10   145774000 ns/op     7.19 MB/s\nMatchEasy1_32K        10000      239887 ns/op   136.60 MB/s\nMatchEasy1_32K_Old      500     4508182 ns/op     7.27 MB/s\nMatchEasy1_32M           10   247103500 ns/op   135.79 MB/s\nMatchEasy1_32M_Old        1  4660191000 ns/op     7.20 MB/s\nMatchMedium_1K        10000      160567 ns/op     6.38 MB/s\nMatchMedium_1K_Old    10000      158367 ns/op     6.47 MB/s\nMatchMedium_1M           10   162928000 ns/op     6.44 MB/s\nMatchMedium_1M_Old       10   159699200 ns/op     6.57 MB/s\nMatchMedium_32K         500     5090758 ns/op     6.44 MB/s\nMatchMedium_32K_Old     500     5005800 ns/op     6.55 MB/s\nMatchMedium_32M           1  5233973000 ns/op     6.41 MB/s\nMatchMedium_32M_Old       1  5109676000 ns/op     6.57 MB/s\nMatchHard_1K          10000      249087 ns/op     4.11 MB/s\nMatchHard_1K_Old       5000      364569 ns/op     2.81 MB/s\nMatchHard_1M              5   256050000 ns/op     4.10 MB/s\nMatchHard_1M_Old          5   372446400 ns/op     2.82 MB/s\nMatchHard_32K           200     7944525 ns/op     4.12 MB/s\nMatchHard_32K_Old       100    11609380 ns/op     2.82 MB/s\nMatchHard_32M             1  8144503000 ns/op     4.12 MB/s\nMatchHard_32M_Old         1 11885434000 ns/op     2.82 MB/s\n\nR=r, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5134049",
			"disapproval": false,
			"date": "2011-09-28 16:00:33.900425",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "There are new numbers in the CL description.\n",
			"disapproval": false,
			"date": "2011-09-28 15:48:30.381986",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-09-28 15:49:31.615681",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5134049: regexp: speedups",
	"created": "2011-09-27 18:29:22.292046",
	"patchsets": [
		1,
		2001,
		4002,
		9001,
		12001,
		12002
	],
	"modified": "2011-09-28 16:00:34.834805",
	"closed": true,
	"issue": 5134049
}