{
	"description": "exp/cookiejar: dumbify the storage interface, add a basic Jar\nimplementation.\n\nUpdate issue 1960.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [
		"bradfitz@golang.org",
		"dr.volker.dobler@gmail.com"
	],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org, dr.volker.dobler@gmail.com (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-12-21 00:12:02.232050",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I like dumbifying.\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/storage.go\nFile src/pkg/exp/cookiejar/storage.go (right):\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/storage.go#newcode44\nsrc/pkg/exp/cookiejar/storage.go:44: // TODO: should Keys instead be\nprobably.  A Keys() returning all the keys in the whole table worries me.",
			"disapproval": false,
			"date": "2012-12-21 21:22:43.160550",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am very much in favor of this design. It will allow\na clean and sensible implementation of a cookiejar.\nHow come you changed your mind on this design?\n\nThere is just one little thing: If the provided\npublic suffix list is really just a dummy returning \"\"\nfor all domains, then eTLD+1 will be the TLD only and\nall cookies for any .com domain will be keyed under\n\"com\" which might be inefficient.\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode99\nsrc/pkg/exp/cookiejar/jar.go:99: // SetCookies2Options are the options to a Jar's SetCookies2 method.\nI was irritated on first reading: The comeback of the \nSet-Cookie2 header?  Any chance for an other name?\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode132\nsrc/pkg/exp/cookiejar/jar.go:132: // cookie is deleted if its expiry time is or is before now, otherwise its last\nhow about \"is not after now\" instead of \"is or is before now\"?\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode169\nsrc/pkg/exp/cookiejar/jar.go:169: ret = append(ret, c)\nThis will return expired cookies if not o.ReadOnly.\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode175\nsrc/pkg/exp/cookiejar/jar.go:175: }\nMissing sorting of cookies according to path length (and\nCreation).\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode218\nsrc/pkg/exp/cookiejar/jar.go:218: e.Creation = old.Creation\nOnly if old is not expired.\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode235\nsrc/pkg/exp/cookiejar/jar.go:235: key = key[:i]\nBuggy for IPv6 addresses. Use net.SplitHostPort\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode237\nsrc/pkg/exp/cookiejar/jar.go:237: key, err := effectiveTLDPlus1(strings.ToLower(key), psl)\nThe key for an IP address should be the IP address itself.\nIt is okay to set a host cookie on an IP address, or am I\nwrong here?\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar_test.go\nFile src/pkg/exp/cookiejar/jar_test.go (right):\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar_test.go#newcode172\nsrc/pkg/exp/cookiejar/jar_test.go:172: func TestBasics(t *testing.T) {\nThis type of test is hard to understand, and e.g. the\nsort.Sort(byName(got)) seems buggy as there is a single\ncorrect way of sorting the result of Cookies and Cookies2\n(by path length and Creation) which is ignored by re-sorting.\n\nI have a table driven testsuite ready which also includes\nall (the Chroimum test from http://src.chromium.org/viewvc/chrome/trunk/src/net/cookies/cookie_store_unittest.h\nIt might be easier to assert that the table driven tests\nare proper translations from the Chromium tests, than\nverifying tests like this one (especially for the uglier\nstuff).\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/jar_test.go#newcode336\nsrc/pkg/exp/cookiejar/jar_test.go:336: // TODO: test non-canonical hosts: EXAMPLE.COM, IP addresses, IDNA?\nOne more: TODO: test re-keying on changed public suffix list.\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/storage.go\nFile src/pkg/exp/cookiejar/storage.go (right):\n\nhttps://codereview.appspot.com/6996044/diff/4001/src/pkg/exp/cookiejar/storage.go#newcode44\nsrc/pkg/exp/cookiejar/storage.go:44: // TODO: should Keys instead be\nNo, because of two reasons:\na) Re-keying in case of changed public suffix list needs\naccess to all cookies, thus all keys.\nb) It is not just a prefix: foo.example.com can get cookies\nfrom foo.example.com and example.com, but anyway, this won't\nwork as eTLD+1 for {foo.,bar.,}example.com is example.com.\nLooking up cookies happens in Get, not in Keys.\n\nIf returning an arbitrary long slice seems troublesome\nKeys could use a callback. This callback could record all\nnow-bogus keys (which should be a short list) and re-key\non this list.",
			"disapproval": false,
			"date": "2012-12-22 00:27:10.657570",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"dr.volker.dobler@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-01-31 11:07:03.196960",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6996044: exp/cookiejar: dumbify the storage interface, add a bas...",
	"created": "2012-12-21 00:07:28.308230",
	"patchsets": [
		1,
		3,
		4001
	],
	"modified": "2013-01-31 11:07:06.955830",
	"closed": true,
	"issue": 6996044
}