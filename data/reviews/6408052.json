{
	"description": "exp/locale/collate: changed trie in first step towards support for multiple locales.\n- Allow handles into the trie for different locales.  Multiple tables share the same\n  try to allow for reuse of blocks.\n- Significantly improved memory footprint and reduced allocations of trieNodes.\n  This speeds up generation by about 30% and allows keeping trieNodes around\n  for multiple locales during generation.\n- Renamed print method to fprint.",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-07-17 17:11:51.100900",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go\nFile src/pkg/exp/locale/collate/build/trie.go (right):\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go#newcode155\nsrc/pkg/exp/locale/collate/build/trie.go:155: // Add a dummy block to accomodate for the double block size.\ns/accomodate for/accommodate/  (two edits there)\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go#newcode187\nsrc/pkg/exp/locale/collate/build/trie.go:187: // We insert a null block afther the first start value block.\ns/afther/after/\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go#newcode188\nsrc/pkg/exp/locale/collate/build/trie.go:188: // This ensures that continuation bytes UTF8 sequences of a lenghts\ns/UTF8/of UTF-8/\ns/a lenghts/length/ (three edits there)\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go#newcode195\nsrc/pkg/exp/locale/collate/build/trie.go:195: h.lookupStart = n.ref - 1\ns/$/./\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie_test.go\nFile src/pkg/exp/locale/collate/build/trie_test.go (right):\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie_test.go#newcode44\nsrc/pkg/exp/locale/collate/build/trie_test.go:44: t.Error(\"output differs\", buf.String())\nwon't this just be a huge output of a single string?\nif you want more detail, good, but how about doing something like splitting into lines and printing the line number and expected/received data for the first differing line?\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/table_test.go\nFile src/pkg/exp/locale/collate/table_test.go (right):\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/table_test.go#newcode50\nsrc/pkg/exp/locale/collate/table_test.go:50: return nil, fmt.Errorf(\"makeTable failed: %v\", err)\nnothing wrong with this but i don't see why the extra annotation is necessary. as far as i can see it just duplicates what's already printed on line 262.",
			"disapproval": false,
			"date": "2012-07-18 15:48:34.103290",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go\nFile src/pkg/exp/locale/collate/build/trie.go (right):\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go#newcode155\nsrc/pkg/exp/locale/collate/build/trie.go:155: // Add a dummy block to accomodate for the double block size.\nOn 2012/07/18 15:48:34, r wrote:\n> s/accomodate for/accommodate/  (two edits there)\n\nDone.\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go#newcode187\nsrc/pkg/exp/locale/collate/build/trie.go:187: // We insert a null block afther the first start value block.\nOn 2012/07/18 15:48:34, r wrote:\n> s/afther/after/\n\nDone.\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go#newcode188\nsrc/pkg/exp/locale/collate/build/trie.go:188: // This ensures that continuation bytes UTF8 sequences of a lenghts\nOn 2012/07/18 15:48:34, r wrote:\n> s/UTF8/of UTF-8/\n> s/a lenghts/length/ (three edits there)\n> \n\nDone.\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go#newcode195\nsrc/pkg/exp/locale/collate/build/trie.go:195: h.lookupStart = n.ref - 1\nOn 2012/07/18 15:48:34, r wrote:\n> s/$/./\n\nDone.\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie.go#newcode195\nsrc/pkg/exp/locale/collate/build/trie.go:195: h.lookupStart = n.ref - 1\nOn 2012/07/18 15:48:34, r wrote:\n> s/$/./\n\nDone.\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie_test.go\nFile src/pkg/exp/locale/collate/build/trie_test.go (right):\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/build/trie_test.go#newcode44\nsrc/pkg/exp/locale/collate/build/trie_test.go:44: t.Error(\"output differs\", buf.String())\nPardon my sloppiness.  I used this for debugging and it slipped in by accident.\nRemoved change.\nOn 2012/07/18 15:48:34, r wrote:\n> won't this just be a huge output of a single string?\n> if you want more detail, good, but how about doing something like splitting into\n> lines and printing the line number and expected/received data for the first\n> differing line?\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/table_test.go\nFile src/pkg/exp/locale/collate/table_test.go (right):\n\nhttp://codereview.appspot.com/6408052/diff/4001/src/pkg/exp/locale/collate/table_test.go#newcode50\nsrc/pkg/exp/locale/collate/table_test.go:50: return nil, fmt.Errorf(\"makeTable failed: %v\", err)\nRemoved extra annotation.\n\nOn 2012/07/18 15:48:34, r wrote:\n> nothing wrong with this but i don't see why the extra annotation is necessary.\n> as far as i can see it just duplicates what's already printed on line 262.",
			"disapproval": false,
			"date": "2012-07-27 12:45:23.070830",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6408052/diff/12001/src/pkg/exp/locale/collate/build/trie.go\nFile src/pkg/exp/locale/collate/build/trie.go (right):\n\nhttp://codereview.appspot.com/6408052/diff/12001/src/pkg/exp/locale/collate/build/trie.go#newcode188\nsrc/pkg/exp/locale/collate/build/trie.go:188: // This ensures that continuation bytes UTF-8 sequences of lenght\ns/lenght/length/",
			"disapproval": false,
			"date": "2012-07-27 17:56:57.057880",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-07-27 12:58:18.718090",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ed59e6a6be1e ***\n\nexp/locale/collate: changed trie in first step towards support for multiple locales.\n- Allow handles into the trie for different locales.  Multiple tables share the same\n  try to allow for reuse of blocks.\n- Significantly improved memory footprint and reduced allocations of trieNodes.\n  This speeds up generation by about 30% and allows keeping trieNodes around\n  for multiple locales during generation.\n- Renamed print method to fprint.\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/6408052",
			"disapproval": false,
			"date": "2012-07-28 16:44:24.917550",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 6408052: exp/locale/collate: changed trie in first step towards ...",
	"created": "2012-07-17 17:11:17.150890",
	"patchsets": [
		1,
		2001,
		4001,
		12001,
		15002
	],
	"modified": "2012-07-28 16:44:26.044850",
	"closed": true,
	"issue": 6408052
}