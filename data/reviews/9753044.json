{
	"description": "go.crypto/ssh: fix and test port forwarding.\n\nSet maxPacket in forwarded connection, and use the requested port\nnumber as key in forwardList.",
	"cc": [
		"golang-dev@googlegroups.com",
		"agl@golang.org",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2013-06-03 14:59:51.326650",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Adam, thoughts?",
			"disapproval": false,
			"date": "2013-06-05 13:32:58.844030",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for this change. I'd like to see it soon, I just a have a few questions about the change.\n\nhttps://codereview.appspot.com/9753044/diff/4001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/9753044/diff/4001/ssh/tcpip.go#newcode52\nssh/tcpip.go:52: ch := c.forwardList.add(*laddr)\nwhy did you move this, could it leak on line 60 ?\n\nhttps://codereview.appspot.com/9753044/diff/4001/ssh/tcpip.go#newcode56\nssh/tcpip.go:56: origPort := uint32(laddr.Port)\nif laddr.Port is not already a uint32, how can I specify a port about 2^15 ?\n\nhttps://codereview.appspot.com/9753044/diff/4001/ssh/tcpip.go#newcode102\nssh/tcpip.go:102: func (l *forwardList) remove(addr net.TCPAddr) {\ncan you explain your rational for making addr a value not a ptr ?",
			"disapproval": false,
			"date": "2013-06-06 11:54:49.345260",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9753044/diff/4001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/9753044/diff/4001/ssh/tcpip.go#newcode52\nssh/tcpip.go:52: ch := c.forwardList.add(*laddr)\nOn 2013/06/06 11:54:49, dfc wrote:\n> why did you move this, could it leak on line 60 ?\n\nAdded a comment.\n\nThe forward has to be registered with the orignal port number, ie. if you listen to :0 , you may get port number X, but you still have to register under number 0, as the the openChannelMsg for a port-forward will have 0 rather than X.\n\nYou can see this if you run\n\n ssh -R 0:localhost:2020 -vvv localhost \n\nI was surprised that you cannot have two separate listeners with auto-assigned port numbers, but that's apparently how it works.\n\nhttps://codereview.appspot.com/9753044/diff/4001/ssh/tcpip.go#newcode56\nssh/tcpip.go:56: origPort := uint32(laddr.Port)\nOn 2013/06/06 11:54:49, dfc wrote:\n> if laddr.Port is not already a uint32, how can I specify a port about 2^15 ?\n\nit's an int currently, see http://golang.org/pkg/net/#TCPAddr - this cast is just to quelch the conversion error.\n\nhttps://codereview.appspot.com/9753044/diff/4001/ssh/tcpip.go#newcode102\nssh/tcpip.go:102: func (l *forwardList) remove(addr net.TCPAddr) {\nOn 2013/06/06 11:54:49, dfc wrote:\n> can you explain your rational for making addr a value not a ptr ?\n\nit makes the semantics self-documenting. The original code did\n\n  // addr.Port == Y\n  list.add(addr)\n  addr.Port = X\n\nand it's unclear from reading the call-site whether this registers the address with port number X or with Y.\n\nSince TCPAddr is a small datastructure, and this codepath is not heavily exercised, there is no performance penalty in using a pass-by-value.\n\nhttps://codereview.appspot.com/9753044/diff/10001/ssh/test/forward_test.go\nFile ssh/test/forward_test.go (right):\n\nhttps://codereview.appspot.com/9753044/diff/10001/ssh/test/forward_test.go#newcode88\nssh/test/forward_test.go:88: }\ni've also added this bit.",
			"disapproval": false,
			"date": "2013-06-06 12:55:11.134640",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "dfc knows this code better than I, so I'll leave approval to him.\n\nhttps://codereview.appspot.com/9753044/diff/10001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/9753044/diff/10001/ssh/tcpip.go#newcode85\nssh/tcpip.go:85: // forward represents an incoming forwarded tcpip connection.  The\n(nit: only a single space after the period.)\n\nhttps://codereview.appspot.com/9753044/diff/10001/ssh/tcpip.go#newcode96\nssh/tcpip.go:96: \n(nit: remove this new, empty line or make the same change in remove and lookup.)",
			"disapproval": false,
			"date": "2013-06-06 14:02:33.285730",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9753044/diff/10001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/9753044/diff/10001/ssh/tcpip.go#newcode85\nssh/tcpip.go:85: // forward represents an incoming forwarded tcpip connection.  The\nOn 2013/06/06 14:02:33, agl1 wrote:\n> (nit: only a single space after the period.)\n\nDone.\n\nhttps://codereview.appspot.com/9753044/diff/10001/ssh/tcpip.go#newcode96\nssh/tcpip.go:96: \nOn 2013/06/06 14:02:33, agl1 wrote:\n> (nit: remove this new, empty line or make the same change in remove and lookup.)\n\nDone.",
			"disapproval": false,
			"date": "2013-06-06 14:18:53.078970",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Dave, friendly ping?\r\n\r\nOn Thu, Jun 6, 2013 at 4:18 PM,  <hanwen@google.com> wrote:\r\n>\r\n> https://codereview.appspot.com/9753044/diff/10001/ssh/tcpip.go\r\n> File ssh/tcpip.go (right):\r\n>\r\n> https://codereview.appspot.com/9753044/diff/10001/ssh/tcpip.go#newcode85\r\n> ssh/tcpip.go:85: // forward represents an incoming forwarded tcpip\r\n> connection.  The\r\n> On 2013/06/06 14:02:33, agl1 wrote:\r\n>>\r\n>> (nit: only a single space after the period.)\r\n>\r\n>\r\n> Done.\r\n>\r\n> https://codereview.appspot.com/9753044/diff/10001/ssh/tcpip.go#newcode96\r\n> ssh/tcpip.go:96:\r\n>\r\n> On 2013/06/06 14:02:33, agl1 wrote:\r\n>>\r\n>> (nit: remove this new, empty line or make the same change in remove\r\n>\r\n> and lookup.)\r\n>\r\n> Done.\r\n>\r\n> https://codereview.appspot.com/9753044/\r\n\r\n--\r\nGoogle Germany GmbH - ABC-Str. 19 - 20354 Hamburg\r\nRegistergericht und -nummer: Hamburg, HRB 86891\r\nSitz der Gesellschaft: Hamburg - Gesch\u00e4ftsf\u00fchrer: Graham Law, Katherine Stephens\r\n",
			"disapproval": false,
			"date": "2013-06-10 16:23:17.039360",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you. I think this is very close. My remaining question is around the origPort member, it doesn't appear to be needed.\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/client.go#newcode369\nssh/client.go:369: ch.maxPacket = msg.MaxPacketSize\nwow, how did this ever work ?\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/client.go#newcode376\nssh/client.go:376: // As per RFC 4253 6.1, 32k is also the mininimum.\ns/mininimum/minimum/\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/tcpip.go#newcode130\nssh/tcpip.go:130: origPort uint32\nthis field does not appear to be needed. I removed it and all the tests pass.\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/tcpip.go#newcode161\nssh/tcpip.go:161: origAddr.Port = int(l.origPort)\nIf the goal is to make a copy of l.laddr, please consider this alternative.\n\n        origAddr := net.TCPAddr{\n                IP: l.laddr.IP,\n                Port: int(l.origPort),\n        }",
			"disapproval": false,
			"date": "2013-06-11 10:46:06.421410",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Opps, spoke too soon.\r\n\r\n--- FAIL: TestPortForward (0.08 seconds)\r\n        forward_test.go:65: tcpConn.CloseWrite: shutdown tcp\r\n127.0.0.1:56897: transport endpoint is not connected\r\n        forward_test.go:71: got 0 bytes, want 741451\r\n        test_unix_test.go:141: sshd: \"\"\r\nFAIL\r\n\r\nOn Tue, Jun 11, 2013 at 11:21 PM, Dave Cheney <dave@cheney.net> wrote:\r\n> I see, thank you for your patience. I'll submit this now.\r\n",
			"disapproval": false,
			"date": "2013-06-11 13:24:18.140080",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9753044/diff/19001/ssh/client.go\nFile ssh/client.go (right):\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/client.go#newcode369\nssh/client.go:369: ch.maxPacket = msg.MaxPacketSize\nOn 2013/06/11 10:46:06, dfc wrote:\n> wow, how did this ever work ?\n\nI guess it didn't?\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/client.go#newcode376\nssh/client.go:376: // As per RFC 4253 6.1, 32k is also the mininimum.\nOn 2013/06/11 10:46:06, dfc wrote:\n> s/mininimum/minimum/\n\nDone.\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/tcpip.go\nFile ssh/tcpip.go (right):\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/tcpip.go#newcode130\nssh/tcpip.go:130: origPort uint32\nOn 2013/06/11 10:46:06, dfc wrote:\n> this field does not appear to be needed. I removed it and all the tests pass.\n\nIf you remove this, on closing, the forwardList.remove() call will not remove the entry. This means that handleChanOpen() may accept a port-forward channel open message for port 0, where it says\n\n\t// Section 7.2, implementations MUST reject suprious incoming\n\t// connections.\n\tc.sendConnectionFailed(msg.PeersId)\n\nin client.go. \n\nTo test it properly, we'd need a server implementation that issues a spurious port-forward channel open, and check that it gets rejected. I didn't see an easy way to do so.\n\nAlternatively, we could have remove() panic if it doesn't find the requested entry, but then tcpListener must be protected against double-close, which is also not straighforward.\n\nWhat do you think?\n\nhttps://codereview.appspot.com/9753044/diff/19001/ssh/tcpip.go#newcode161\nssh/tcpip.go:161: origAddr.Port = int(l.origPort)\nOn 2013/06/11 10:46:06, dfc wrote:\n> If the goal is to make a copy of l.laddr, please consider this alternative.\n> \n>         origAddr := net.TCPAddr{\n>                 IP: l.laddr.IP,\n>                 Port: int(l.origPort),\n>         }\n\nDone.",
			"disapproval": false,
			"date": "2013-06-11 13:10:50.225740",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I see, thank you for your patience. I'll submit this now.\r\n",
			"disapproval": false,
			"date": "2013-06-11 13:21:54.866940",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Is this reproducible or flakiness? I tried running a couple of times, but didn't see this\n\nI'm at \n\n changeset:   124:d73471ad7bea\n\nI'm on a Ubuntu Precise derived OS, with\n\nOpenSSH_5.9gg10, OpenSSL 1.0.1 14 Mar 2012",
			"disapproval": false,
			"date": "2013-06-11 13:50:22.842890",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/11 13:50:22, hanwen wrote:\n> Is this reproducible or flakiness? I tried running a couple of times, but didn't\n> see this\n> \n> I'm at \n> \n>  changeset:   124:d73471ad7bea\n> \n> I'm on a Ubuntu Precise derived OS, with\n> \n> OpenSSH_5.9gg10, OpenSSL 1.0.1 14 Mar 2012\n\nI wasn't able to reproduce this failure on another machine so I'm assuming it is a local issue.",
			"disapproval": false,
			"date": "2013-06-12 02:13:35.795930",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=40246d2ae2eb&repo=crypto ***\n\ngo.crypto/ssh: fix and test port forwarding.\n\nSet maxPacket in forwarded connection, and use the requested port\nnumber as key in forwardList.\n\nR=golang-dev, agl, dave\nCC=golang-dev\nhttps://codereview.appspot.com/9753044\n\nCommitter: Dave Cheney <dave@cheney.net>",
			"disapproval": false,
			"date": "2013-06-12 02:14:01.435930",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hmm, looks like it wasn't just that one machine.\r\n\r\nhttp://build.golang.org/log/619fe15659caeca07b6e900ddeefcf544b414574\r\n\r\nCould you take a look please ?\r\n\r\nOn Wed, Jun 12, 2013 at 12:14 PM,  <dave@cheney.net> wrote:\r\n> *** Submitted as\r\n> https://code.google.com/p/go/source/detail?r=40246d2ae2eb&repo=crypto\r\n> ***\r\n>\r\n>\r\n> go.crypto/ssh: fix and test port forwarding.\r\n>\r\n> Set maxPacket in forwarded connection, and use the requested port\r\n> number as key in forwardList.\r\n>\r\n> R=golang-dev, agl, dave\r\n> CC=golang-dev\r\n> https://codereview.appspot.com/9753044\r\n>\r\n> Committer: Dave Cheney <dave@cheney.net>\r\n>\r\n>\r\n> https://codereview.appspot.com/9753044/\r\n",
			"disapproval": false,
			"date": "2013-06-12 02:29:33.924290",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looking.\r\n\r\nMy home laptop (OpenSSH 6.2) also sees this. Do you know what platform\r\nthese builders run?\r\n\r\nOn Wed, Jun 12, 2013 at 4:29 AM, Dave Cheney <dave@cheney.net> wrote:\r\n> Hmm, looks like it wasn't just that one machine.\r\n>\r\n> http://build.golang.org/log/619fe15659caeca07b6e900ddeefcf544b414574\r\n>\r\n> Could you take a look please ?\r\n>\r\n> On Wed, Jun 12, 2013 at 12:14 PM,  <dave@cheney.net> wrote:\r\n>> *** Submitted as\r\n>> https://code.google.com/p/go/source/detail?r=40246d2ae2eb&repo=crypto\r\n>> ***\r\n>>\r\n>>\r\n>> go.crypto/ssh: fix and test port forwarding.\r\n>>\r\n>> Set maxPacket in forwarded connection, and use the requested port\r\n>> number as key in forwardList.\r\n>>\r\n>> R=golang-dev, agl, dave\r\n>> CC=golang-dev\r\n>> https://codereview.appspot.com/9753044\r\n>>\r\n>> Committer: Dave Cheney <dave@cheney.net>\r\n>>\r\n>>\r\n>> https://codereview.appspot.com/9753044/\r\n\r\n\r\n\r\n-- \r\nHan-Wen Nienhuys\r\nGoogle Munich\r\nhanwen@google.com\r\n",
			"disapproval": false,
			"date": "2013-06-12 09:29:37.559510",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://code.google.com/p/go-wiki/wiki/DashboardBuilders\r\n",
			"disapproval": false,
			"date": "2013-06-12 09:40:29.452990",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ugh.\r\n\r\nIt appears that openssh 5.9 and 6.2 handle dynamically allocated ports\r\ndifferently. That is, for 5.9 what I submitted works, and for 6.2 you\r\ncan leave out the orig port mess.\r\n\r\nSee also https://bugzilla.mindrot.org/show_bug.cgi?id=2017\r\n\r\nOptions:\r\n\r\n* make something that works for both 5.9 and 6.0. This will be ugly.\r\n\r\n* have it break for 5.9 like it used to.\r\n\r\n* have dynamic port allocation disabled for openssh <= 5.9\r\n\r\nI favor the latter, as it will be less surprising, but we would need\r\naccess to the remote version string to know the server version.\r\n\r\nI will prepare a patch that removes the origport manipulation, and a\r\nfollow-up which does something more intelligent for openssh 5.9.\r\nSounds good?\r\n\r\n\r\nOn Wed, Jun 12, 2013 at 4:29 AM, Dave Cheney <dave@cheney.net> wrote:\r\n> Hmm, looks like it wasn't just that one machine.\r\n>\r\n> http://build.golang.org/log/619fe15659caeca07b6e900ddeefcf544b414574\r\n>\r\n> Could you take a look please ?\r\n>\r\n> On Wed, Jun 12, 2013 at 12:14 PM,  <dave@cheney.net> wrote:\r\n>> *** Submitted as\r\n>> https://code.google.com/p/go/source/detail?r=40246d2ae2eb&repo=crypto\r\n>> ***\r\n>>\r\n>>\r\n>> go.crypto/ssh: fix and test port forwarding.\r\n>>\r\n>> Set maxPacket in forwarded connection, and use the requested port\r\n>> number as key in forwardList.\r\n>>\r\n>> R=golang-dev, agl, dave\r\n>> CC=golang-dev\r\n>> https://codereview.appspot.com/9753044\r\n>>\r\n>> Committer: Dave Cheney <dave@cheney.net>\r\n>>\r\n>>\r\n>> https://codereview.appspot.com/9753044/\r\n\r\n\r\n\r\n-- \r\nHan-Wen Nienhuys\r\nGoogle Munich\r\nhanwen@google.com\r\n",
			"disapproval": false,
			"date": "2013-06-12 11:02:24.352470",
			"approval": false
		},
		{
			"sender": "hanwen@google.com",
			"recipients": [
				"hanwen@google.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-06-12 14:01:29.250450",
			"approval": false
		}
	],
	"owner_email": "hanwen@google.com",
	"private": false,
	"base_url": "",
	"owner": "hanwen",
	"subject": "code review 9753044: go.crypto/ssh: fix and test port forwarding.",
	"created": "2013-06-03 14:58:25.125520",
	"patchsets": [
		1,
		2001,
		4001,
		10001,
		17001,
		19001,
		25001,
		31001
	],
	"modified": "2013-06-12 14:01:30.993860",
	"closed": true,
	"issue": 9753044
}