{
	"description": "spec: clarify lhs syntax for range and select\n\nFixes issue 4653.",
	"cc": [
		"rsc@golang.org",
		"r@golang.org",
		"iant@golang.org",
		"ken@golang.org",
		"thakis@chromium.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "thakis@chromium.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"thakis@chromium.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks!\n\nhttps://codereview.appspot.com/7135058/diff/2001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7135058/diff/2001/doc/go_spec.html#newcode4559\ndoc/go_spec.html:4559: The receive case may declare one or two new variables using a\ns/one or two// here?\n\n a, b, c, d := f_returning_4_tuple()\n\nis syntactically valid after this cl.",
			"disapproval": false,
			"date": "2013-01-18 20:14:04.681610",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"thakis@chromium.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7135058/diff/2001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7135058/diff/2001/doc/go_spec.html#newcode4559\ndoc/go_spec.html:4559: The receive case may declare one or two new variables using a\nOn 2013/01/18 20:14:04, thakis wrote:\n> s/one or two// here?\n> \n>  a, b, c, d := f_returning_4_tuple()\n> \n> is syntactically valid after this cl.\n\nIt can only be one or two. This CL simply trades some accuracy for some other: Now the syntax permits arbitrary long lists on the lhs, but it makes it clear that the lhs has to identifiers if we have a := .\n\nBut in both cases (range, select) we have additional prose restricting to one or two lhs operands, so that's fine.\n\nFinally, the syntax in this document often is \"liberal\" for brevity; the prose is important.",
			"disapproval": false,
			"date": "2013-01-18 20:20:09.281220",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@golang.org, iant@golang.org, ken@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-18 20:12:07.162410",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-01-18 21:17:11.471470",
			"approval": true
		},
		{
			"sender": "thakis@chromium.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"thakis@chromium.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7135058/diff/2001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/7135058/diff/2001/doc/go_spec.html#newcode4559\ndoc/go_spec.html:4559: The receive case may declare one or two new variables using a\nOn 2013/01/18 20:20:09, gri wrote:\n> On 2013/01/18 20:14:04, thakis wrote:\n> > s/one or two// here?\n> > \n> >  a, b, c, d := f_returning_4_tuple()\n> > \n> > is syntactically valid after this cl.\n> \n> It can only be one or two. This CL simply trades some accuracy for some other:\n> Now the syntax permits arbitrary long lists on the lhs, but it makes it clear\n> that the lhs has to identifiers if we have a := .\n> \n> But in both cases (range, select) we have additional prose restricting to one or\n> two lhs operands, so that's fine.\n> \n> Finally, the syntax in this document often is \"liberal\" for brevity; the prose\n> is important.\n\nMakes sense, thanks.",
			"disapproval": false,
			"date": "2013-01-18 20:21:50.002020",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"thakis@chromium.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ef1ce4503d85 ***\n\nspec: clarify lhs syntax for range and select\n\nFixes issue 4653.\n\nR=rsc, r, iant, ken, thakis\nCC=golang-dev\nhttps://codereview.appspot.com/7135058",
			"disapproval": false,
			"date": "2013-01-18 21:59:49.479660",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 7135058: spec: clarify lhs syntax for range and select",
	"created": "2013-01-18 20:06:40.315230",
	"patchsets": [
		1,
		2001,
		4001,
		8002
	],
	"modified": "2013-01-18 21:59:51.657030",
	"closed": true,
	"issue": 7135058
}