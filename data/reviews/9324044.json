{
	"description": "Improve source build support on darwin.\n\nAttempting to set the maximum number of open file descriptors causes all.bash\nruns to fail. Ensuring true returns allows the script to run.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"dave@cheney.net",
		"minux.ma@gmail.com"
	],
	"messages": [
		{
			"sender": "mark@amerine.net",
			"recipients": [
				"mark@amerine.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-05-14 06:20:50.850090",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"mark@amerine.net",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "What is the failure mode?  What version of OS X are you running?\n\nI don't see any failures on the Darwin builders at http://build.golang.org/ .",
			"disapproval": false,
			"date": "2013-05-14 13:44:38.121520",
			"approval": false
		},
		{
			"sender": "mark@amerine.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On May 14, 2013, at 6:44 AM, iant@golang.org wrote:\r\n\r\n> What is the failure mode?  What version of OS X are you running?\r\n\r\nThe latest version of 10.8, but I've tested on 10.7 as well.\r\n\r\n> \r\n> I don't see any failures on the Darwin builders at\r\n> http://build.golang.org/ .\r\n> \r\n> https://codereview.appspot.com/9324044/\r\n\r\nI have not been able to run src/all.bash on any OS X machine. They all fail when attempting to set the invalid ulimit value.",
			"disapproval": false,
			"date": "2013-05-14 16:08:11.100780",
			"approval": false
		},
		{
			"sender": "mark@amerine.net",
			"recipients": [
				"mark@amerine.net",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/14 20:57:52, minux wrote:\n> what does \"ulimit -n -H\" say on your system?\n> what locale are you using? perhaps it's not english?\n\n ~ \u2b80 ulimit -n -H\n32768\n\nSpecifically that is set in /etc/launchd.conf (the \"proper\" place to set and persist the file discriptor limit since 10.7 according to Apple). \n\nThe locale in the shells is en_US. Here the output of locale:\n \n~ \u2b80 locale\nLANG=\"en_US.UTF-8\"\nLC_COLLATE=\"en_US.UTF-8\"\nLC_CTYPE=\"en_US.UTF-8\"\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_MONETARY=\"en_US.UTF-8\"\nLC_NUMERIC=\"en_US.UTF-8\"\nLC_TIME=\"en_US.UTF-8\"\nLC_ALL=",
			"disapproval": false,
			"date": "2013-05-14 21:09:35.915470",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "We have 10.6 and 10.7 darwin builders, the -race builder is 10.7. I'd\r\nlike to be able to reproduce the failure before apply a fix.\r\n\r\nOn Wed, May 15, 2013 at 2:08 AM, Mark Turner <mark@amerine.net> wrote:\r\n> On May 14, 2013, at 6:44 AM, iant@golang.org wrote:\r\n>\r\n>> What is the failure mode?  What version of OS X are you running?\r\n>\r\n> The latest version of 10.8, but I've tested on 10.7 as well.\r\n>\r\n>>\r\n>> I don't see any failures on the Darwin builders at\r\n>> http://build.golang.org/ .\r\n>>\r\n>> https://codereview.appspot.com/9324044/\r\n>\r\n> I have not been able to run src/all.bash on any OS X machine. They all fail when attempting to set the invalid ulimit value.\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-14 19:30:42.969350",
			"approval": false
		},
		{
			"sender": "mark@amerine.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, May 14, 2013 at 12:30 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> We have 10.6 and 10.7 darwin builders, the -race builder is 10.7. I'd\r\n> like to be able to reproduce the failure before apply a fix.\r\n>\r\n>\r\nWhere can I see what the scripts/makefiles/etc that the builders are using?\r\nAre they just running src/all.bash?\r\n",
			"disapproval": false,
			"date": "2013-05-14 20:00:41.874520",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The code for the builders is in $GOROOT/misc/dashboard/builder. They\r\nall run ./all.{bash,bat} (unless their build key ends in -race, in\r\nwhich case they run ./race.{bash,bat}\r\n\r\nOn Wed, May 15, 2013 at 6:00 AM, Mark Turner <mark@amerine.net> wrote:\r\n> On Tue, May 14, 2013 at 12:30 PM, Dave Cheney <dave@cheney.net> wrote:\r\n>>\r\n>> We have 10.6 and 10.7 darwin builders, the -race builder is 10.7. I'd\r\n>> like to be able to reproduce the failure before apply a fix.\r\n>>\r\n>\r\n> Where can I see what the scripts/makefiles/etc that the builders are using?\r\n> Are they just running src/all.bash?\r\n",
			"disapproval": false,
			"date": "2013-05-14 20:06:01.521800",
			"approval": false
		},
		{
			"sender": "mark@amerine.net",
			"recipients": [
				"mark@amerine.net",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/14 20:06:01, dfc wrote:\n> The code for the builders is in $GOROOT/misc/dashboard/builder. They\n> all run ./all.{bash,bat} (unless their build key ends in -race, in\n> which case they run ./race.{bash,bat}\n\nThanks Dave.\n\nI'm not sure what else to test. Here is the error that stops all.bash from completing:\n\n`run.bash: line 20: ulimit: open files: cannot modify limit: Invalid argument` \n\nThat line in run.bash is specifically is trying to set the open file descriptors limit which results in an error (non-zero exit status) on all OS X 10.7,8 machines I have access to.",
			"disapproval": false,
			"date": "2013-05-14 20:35:10.246480",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, May 15, 2013 at 4:35 AM, <mark@amerine.net> wrote:\r\n\r\n> `run.bash: line 20: ulimit: open files: cannot modify limit: Invalid\r\n> argument`\r\n>\r\n> That line in run.bash is specifically is trying to set the open file\r\n> descriptors limit which results in an error (non-zero exit status) on\r\n> all OS X 10.7,8 machines I have access to.\r\n>\r\nwhat does \"ulimit -n -H\" say on your system?\r\nwhat locale are you using? perhaps it's not english?\r\n",
			"disapproval": false,
			"date": "2013-05-14 20:57:52.752660",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mark@amerine.net",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping. \n\nI do not see what this CL fixes. None of our builders are broken without this change.",
			"disapproval": false,
			"date": "2013-05-22 01:21:13.655770",
			"approval": false
		},
		{
			"sender": "mark@amerine.net",
			"recipients": [
				"mark@amerine.net",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/22 01:21:13, dfc wrote:\n> ping. \n> \n> I do not see what this CL fixes. None of our builders are broken without this\n> change.\n\ndfc, I'm forced to agree with you considering it only appears to be my systems that fail to build.",
			"disapproval": false,
			"date": "2013-05-22 01:46:44.929960",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Given how many people on the Go team use darwin, I'm confident this\r\nisn't a widespread issue.\r\n\r\nOn Wed, May 22, 2013 at 11:46 AM,  <mark@amerine.net> wrote:\r\n> On 2013/05/22 01:21:13, dfc wrote:\r\n>>\r\n>> ping.\r\n>\r\n>\r\n>> I do not see what this CL fixes. None of our builders are broken\r\n>\r\n> without this\r\n>>\r\n>> change.\r\n>\r\n>\r\n> dfc, I'm forced to agree with you considering it only appears to be my\r\n> systems that fail to build.\r\n>\r\n> https://codereview.appspot.com/9324044/\r\n",
			"disapproval": false,
			"date": "2013-05-22 01:47:32.774440",
			"approval": false
		},
		{
			"sender": "mark@amerine.net",
			"recipients": [
				"mark@amerine.net",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/22 01:47:32, dfc wrote:\n> Given how many people on the Go team use darwin, I'm confident this\n> isn't a widespread issue.\n\nI tracked the problem down. On a fresh OS X 10.8 machine. I made a single configuration change.  I set the soft and hard file descriptor limits set to 16384 and 32768 respectively, through /etc/launchd.conf (example: https://gist.github.com/amerine/f00b989ea1226bd68b77), I can cause all.bash to fail every time.\n\nWhen the hard limit is set in /etc/launchd.conf, and the script attempts to set it higher, it will fail.",
			"disapproval": false,
			"date": "2013-05-22 09:16:34.258910",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"mark@amerine.net",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9324044/diff/4001/src/run.bash\nFile src/run.bash (right):\n\nhttps://codereview.appspot.com/9324044/diff/4001/src/run.bash#newcode21\nsrc/run.bash:21: ([ \"$(ulimit -H -n)\" == \"unlimited\" ] || ulimit -S -n $(ulimit -H -n))\nhow about this:\n[ \"$(ulimit -H -n)\" == \"unlimited\" ] || ulimit -S -n $(ulimit -H -n) || true\n[ \"$(ulimit -H -d)\" == \"unlimited\" ] || ulimit -S -d $(ulimit -H -d) || true",
			"disapproval": false,
			"date": "2013-05-22 16:41:27.329180",
			"approval": false
		},
		{
			"sender": "mark@amerine.net",
			"recipients": [
				"mark@amerine.net",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9324044/diff/4001/src/run.bash\nFile src/run.bash (right):\n\nhttps://codereview.appspot.com/9324044/diff/4001/src/run.bash#newcode21\nsrc/run.bash:21: ([ \"$(ulimit -H -n)\" == \"unlimited\" ] || ulimit -S -n $(ulimit -H -n))\nOn 2013/05/22 16:41:27, minux wrote:\n> how about this:\n> [ \"$(ulimit -H -n)\" == \"unlimited\" ] || ulimit -S -n $(ulimit -H -n) || true\n> [ \"$(ulimit -H -d)\" == \"unlimited\" ] || ulimit -S -d $(ulimit -H -d) || true\n\nThis also works. And I like it better.",
			"disapproval": false,
			"date": "2013-05-22 16:54:50.338530",
			"approval": false
		}
	],
	"owner_email": "mark@amerine.net",
	"private": false,
	"base_url": "",
	"owner": "amerine",
	"subject": "code review 9324044: Improve source build support on darwin.",
	"created": "2013-05-14 06:18:56.026420",
	"patchsets": [
		1,
		1001,
		4001,
		21001
	],
	"modified": "2013-05-22 16:54:50.338530",
	"closed": false,
	"issue": 9324044
}