{
	"description": "strconv: extend Grisu3 algorithm to float32.\n\nAlso improve extfloat.Normalize to obtain a modest performance\ngain in parsing, and add a shortcut path for exact integers.\n\nbenchmark                              old ns/op    new ns/op    delta\nBenchmarkAtof64Decimal                        73           73   -0.54%\nBenchmarkAtof64Float                          91           91   -0.54%\nBenchmarkAtof64FloatExp                      198          180   -9.09%\nBenchmarkAtof64Big                           307          308   +0.33%\n\nBenchmarkAtof32Decimal                        72           72   +0.42%\nBenchmarkAtof32Float                          83           83   -0.72%\nBenchmarkAtof32FloatExp                      212          186  -12.26%\nBenchmarkAtof32Random                        262          250   -4.58%\n\nBenchmarkAppendFloatDecimal                  474          305  -35.65%\nBenchmarkAppendFloat                         497          489   -1.61%\nBenchmarkAppendFloatExp                      493          483   -2.03%\nBenchmarkAppendFloatNegExp                   481          481   +0.00%\nBenchmarkAppendFloatBig                      667          652   -2.25%\n\nBenchmarkAppendFloat32Integer                338          307   -9.17%\nBenchmarkAppendFloat32ExactFraction          364          439  +20.60%\nBenchmarkAppendFloat32Point                 1299          490  -62.28%\nBenchmarkAppendFloat32Exp                   2593          489  -81.14%\nBenchmarkAppendFloat32NegExp                5116          481  -90.60%",
	"cc": [
		"rsc@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com",
		"remy@archlinux.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-06-15 21:29:41.128728",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Why did BenchmarkAppendFloat32Decimal get slower? Is the grisu slower than the old case for the case of an odd integer?\n\nhttp://codereview.appspot.com/6303087/diff/4001/src/pkg/strconv/extfloat.go\nFile src/pkg/strconv/extfloat.go (right):\n\nhttp://codereview.appspot.com/6303087/diff/4001/src/pkg/strconv/extfloat.go#newcode218\nsrc/pkg/strconv/extfloat.go:218: if mant>>32 == 0 {\nCould you write these >> constants as (64-32), (64-16) and so on, to match the constants used in the if bodies?",
			"disapproval": false,
			"date": "2012-06-19 04:05:15.620538",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-06-19 04:05:20.597971",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-19 06:46:36.405712",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6303087/diff/4002/src/pkg/strconv/extfloat.go\nFile src/pkg/strconv/extfloat.go (right):\n\nhttp://codereview.appspot.com/6303087/diff/4002/src/pkg/strconv/extfloat.go#newcode201\nsrc/pkg/strconv/extfloat.go:201: if f.exp < 0 && mant == (mant>>uint(-f.exp))<<uint(-f.exp) {\nShould this be <= 0 ?",
			"disapproval": false,
			"date": "2012-06-19 15:11:26.072915",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-28 10:14:21.467051",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The refactoring introduced a bug I discovered while doing more extensive testing (printing of float32(1<<92)). I have added a test.\n\nhttp://codereview.appspot.com/6303087/diff/4002/src/pkg/strconv/extfloat.go\nFile src/pkg/strconv/extfloat.go (right):\n\nhttp://codereview.appspot.com/6303087/diff/4002/src/pkg/strconv/extfloat.go#newcode201\nsrc/pkg/strconv/extfloat.go:201: if f.exp < 0 && mant == (mant>>uint(-f.exp))<<uint(-f.exp) {\nOn 2012/06/19 15:11:26, rsc wrote:\n> Should this be <= 0 ?\n> \n\nDone.",
			"disapproval": false,
			"date": "2012-06-28 10:18:09.936719",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Any more thoughts on this?",
			"disapproval": false,
			"date": "2012-07-06 17:58:49.325880",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-07-09 22:28:46.682050",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=695f65745351 ***\n\nstrconv: extend Grisu3 algorithm to float32.\n\nAlso improve extfloat.Normalize to obtain a modest performance\ngain in parsing, and add a shortcut path for exact integers.\n\nbenchmark                              old ns/op    new ns/op    delta\nBenchmarkAtof64Decimal                        73           73   -0.54%\nBenchmarkAtof64Float                          91           91   -0.54%\nBenchmarkAtof64FloatExp                      198          180   -9.09%\nBenchmarkAtof64Big                           307          308   +0.33%\n\nBenchmarkAtof32Decimal                        72           72   +0.42%\nBenchmarkAtof32Float                          83           83   -0.72%\nBenchmarkAtof32FloatExp                      212          186  -12.26%\nBenchmarkAtof32Random                        262          250   -4.58%\n\nBenchmarkAppendFloatDecimal                  474          305  -35.65%\nBenchmarkAppendFloat                         497          489   -1.61%\nBenchmarkAppendFloatExp                      493          483   -2.03%\nBenchmarkAppendFloatNegExp                   481          481   +0.00%\nBenchmarkAppendFloatBig                      667          652   -2.25%\n\nBenchmarkAppendFloat32Integer                338          307   -9.17%\nBenchmarkAppendFloat32ExactFraction          364          439  +20.60%\nBenchmarkAppendFloat32Point                 1299          490  -62.28%\nBenchmarkAppendFloat32Exp                   2593          489  -81.14%\nBenchmarkAppendFloat32NegExp                5116          481  -90.60%\n\nR=rsc, r\nCC=golang-dev, remy\nhttp://codereview.appspot.com/6303087",
			"disapproval": false,
			"date": "2012-07-10 05:44:30.770250",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ah, for some reason I missed the new test in atof_test.go, I will include it in another patch.",
			"disapproval": false,
			"date": "2012-07-10 05:51:30.375040",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6303087: strconv: extend Grisu3 algorithm to float32.",
	"created": "2012-06-15 21:28:29.625035",
	"patchsets": [
		1,
		2001,
		4001,
		4002,
		13001,
		19002
	],
	"modified": "2012-07-10 05:51:30.597730",
	"closed": true,
	"issue": 6303087
}