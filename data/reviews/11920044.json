{
	"description": "runtime: fix potential deadlock in netpoll on windows\nIf netpoll has been told to block, it must not return with nil,\notherwise scheduler assumes that netpoll is disabled.",
	"cc": [
		"golang-dev@googlegroups.com",
		"alex.brainman@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-26 14:37:43.589040",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI assumed that netpollready will always set gp to non nil given it io completion packet. How is it possible to otherwise? Do you think this could be solution to our problem?\n\nI haven't seen BSOD but because of faulty drivers or hardware. I am very surprised with what you are seeing. I will keep looking. I will try and see again, if I did see CPU 100% or process was just locked like you have described. Do you think we should disable net test temporarily until we decide what to do next?\n\nAlex",
			"disapproval": false,
			"date": "2013-07-27 02:30:44.286770",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c3466cad62b0 ***\n\nruntime: fix potential deadlock in netpoll on windows\nIf netpoll has been told to block, it must not return with nil,\notherwise scheduler assumes that netpoll is disabled.\n\nR=golang-dev, alex.brainman\nCC=golang-dev\nhttps://codereview.appspot.com/11920044",
			"disapproval": false,
			"date": "2013-07-27 09:46:47.622030",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/07/27 02:30:44, brainman wrote:\n> LGTM\n> \n> I assumed that netpollready will always set gp to non nil given it io completion\n> packet. How is it possible to otherwise? Do you think this could be solution to\n> our problem?\n\nThere a logical race condition between waiter calling netpollblock and netpoll calling netpollunblock. If the latter happens first, then netpollunblock just sets the semaphore to READY and returns with nil gp. netpollblock will consume READY w/o blocking.\nThe protocol between scheduler and netpoll is that netpoll(block=true) must not return with nil gp, otherwise scheduler assumes that netpoll is disabled.\n\nUnfortunately it is not the cause of the hang we observe, I've patched it very early during my investigation (though, it could be).\n\n\n> I haven't seen BSOD but because of faulty drivers or hardware. I am very\n> surprised with what you are seeing. I will keep looking. I will try and see\n> again, if I did see CPU 100% or process was just locked like you have described.\n\nI've seen in goroutine tracebacks that the goroutine is blocked in WaitCancelled, which means that it has received the timeout.\nI've inserted time.Sleep(time.Hour) when the hang is detected and seen with ProcExplorer that one of the threads is blocked in GQCS, and it also does not consume CPU during hang.\n\n\n> Do you think we should disable net test temporarily until we decide what to do\n> next?\n\nI've filed https://code.google.com/p/go/issues/detail?id=5971\nand disabled the test for now.",
			"disapproval": false,
			"date": "2013-07-27 09:52:41.564630",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 11920044: runtime: fix potential deadlock in netpoll on windows",
	"created": "2013-07-26 14:36:55.265330",
	"patchsets": [
		1,
		3001,
		6001,
		10001,
		13001
	],
	"modified": "2013-07-27 09:52:41.710680",
	"closed": true,
	"issue": 11920044
}