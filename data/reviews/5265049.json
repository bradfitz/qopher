{
	"description": "exp/ssh: server cleanups\n\nserver.go/channel.go:\n* rename Server to ServerConfig to match Client.\n* rename ServerConnection to ServeConn to match Client.\n* add Listen/Listener.\n* ServerConn.Handshake(), general cleanups.\n\nclient.go:\n* fix bug where fmt.Error was not assigned to err",
	"cc": [
		"rsc@golang.org",
		"agl@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM. Still don't like pulling in fmt for so little, but that can always be changed later.",
			"disapproval": false,
			"date": "2011-10-21 12:05:15.183244",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=62bd14aa45d0 ***\n\nexp/ssh: server cleanups\n\nserver.go/channel.go:\n* rename Server to ServerConfig to match Client.\n* rename ServerConnection to ServeConn to match Client.\n* add Listen/Listener.\n* ServerConn.Handshake(), general cleanups.\n\nclient.go:\n* fix bug where fmt.Error was not assigned to err\n\nR=rsc, agl\nCC=golang-dev\nhttp://codereview.appspot.com/5265049\n\nCommitter: Adam Langley <agl@golang.org>",
			"disapproval": false,
			"date": "2011-10-21 15:04:59.210378",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, agl@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-21 11:43:53.132697",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Agreed, pls hold.\n\nOn Fri, Oct 21, 2011 at 11:05 PM,  <agl@golang.org> wrote:\n> LGTM. Still don't like pulling in fmt for so little, but that can always\n> be changed later.\n>\n> http://codereview.appspot.com/5265049/\n>\n",
			"disapproval": false,
			"date": "2011-10-21 12:08:20.603001",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, agl@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-21 12:11:04.466876",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5265049/diff/9001/src/pkg/exp/ssh/server.go\nFile src/pkg/exp/ssh/server.go (right):\n\nhttp://codereview.appspot.com/5265049/diff/9001/src/pkg/exp/ssh/server.go#newcode659\nsrc/pkg/exp/ssh/server.go:659: // A Listener implements a network listener (net.Listener) for TLS connections.\ns/TLS/SSH/\n\nhttp://codereview.appspot.com/5265049/diff/9001/src/pkg/exp/ssh/server.go#newcode665\nsrc/pkg/exp/ssh/server.go:665: // Accept waits for and returns the next incoming ssh connection.\ns/ssh/SSH/\n\nhttp://codereview.appspot.com/5265049/diff/9001/src/pkg/exp/ssh/server.go#newcode687\nsrc/pkg/exp/ssh/server.go:687: // Open a new tcp socket on laddr and return a listener\nListen creates an SSH listener accepting connections on the\ngiven network address using net.Listen.\n\nhttp://codereview.appspot.com/5265049/diff/9001/src/pkg/exp/ssh/server.go#newcode688\nsrc/pkg/exp/ssh/server.go:688: // which can be used to Accept incoming ssh connections.\ns/ssh/SSH/",
			"disapproval": false,
			"date": "2011-10-21 14:45:08.118973",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Please take another look. Sorry about the copy and paste errors.\n\nhttp://codereview.appspot.com/5265049/diff/9001/src/pkg/exp/ssh/server.go\nFile src/pkg/exp/ssh/server.go (right):\n\nhttp://codereview.appspot.com/5265049/diff/9001/src/pkg/exp/ssh/server.go#newcode659\nsrc/pkg/exp/ssh/server.go:659: // A Listener implements a network listener (net.Listener) for TLS connections.\nOn 2011/10/21 14:45:08, rsc wrote:\n> s/TLS/SSH/\n\nDone.\n\nhttp://codereview.appspot.com/5265049/diff/9001/src/pkg/exp/ssh/server.go#newcode665\nsrc/pkg/exp/ssh/server.go:665: // Accept waits for and returns the next incoming ssh connection.\nOn 2011/10/21 14:45:08, rsc wrote:\n> s/ssh/SSH/\n\nDone.\n\nhttp://codereview.appspot.com/5265049/diff/9001/src/pkg/exp/ssh/server.go#newcode687\nsrc/pkg/exp/ssh/server.go:687: // Open a new tcp socket on laddr and return a listener\nOn 2011/10/21 14:45:08, rsc wrote:\n> Listen creates an SSH listener accepting connections on the\n> given network address using net.Listen.\n\nDone.\n\nhttp://codereview.appspot.com/5265049/diff/9001/src/pkg/exp/ssh/server.go#newcode688\nsrc/pkg/exp/ssh/server.go:688: // which can be used to Accept incoming ssh connections.\nOn 2011/10/21 14:45:08, rsc wrote:\n> s/ssh/SSH/\n\nDone.",
			"disapproval": false,
			"date": "2011-10-21 15:00:25.511934",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 5265049: exp/ssh: server cleanups",
	"created": "2011-10-14 22:21:21.212057",
	"patchsets": [
		1,
		2001,
		3001,
		4003,
		9001,
		12001
	],
	"modified": "2011-10-21 22:59:35.657261",
	"closed": true,
	"issue": 5265049
}