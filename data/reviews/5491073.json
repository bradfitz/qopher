{
	"description": "old/template: close file in TestAll before deleting it",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-19 01:03:33.376906",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2011/12/19 20:37:35, rsc wrote:\n> \n> Also good is\n> \n> defer os.Remove(f.Name())\n> defer f.Close()\n\nI did not want to rely on f.Name() to return correct file name after f.Close() has run. I will leave it as is for now. Perhaps, if your f.Remove() proposal will fly, we could use it later instead.\n\nAlex",
			"disapproval": false,
			"date": "2011-12-20 00:06:28.694905",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nAlso good is\n\ndefer os.Remove(f.Name())\ndefer f.Close()\n",
			"disapproval": false,
			"date": "2011-12-19 20:37:35.200975",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=dc5d99cca37f ***\n\nold/template: close file in TestAll before deleting it\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5491073",
			"disapproval": false,
			"date": "2011-12-20 00:51:38.163905",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Dec 19, 2011 at 19:06,  <alex.brainman@gmail.com> wrote:\n> I did not want to rely on f.Name() to return correct file name after\n> f.Close() has run. I will leave it as is for now. Perhaps, if your\n> f.Remove() proposal will fly, we could use it later instead.\n\nWhen you write\n\ndefer os.Remove(f.Name())\ndefer f.Close()\n\ndefer behaves like 'go': the function being called and the\narguments to the call are evaluated immediately.  It is only\nthe call itself that is deferred.  So in this sequence the\nf.Name() is evaluated immediately, as is the f on the next line.\nThat is, the above is like\n\ntmp1 := f.Name()\ndefer os.Remove(tmp1)\ntmp2 := f\ndefer (*os.File).Close(tmp2)\n\nwhere tmp1 and tmp2 can never be changed.  The code you\nhad is fine, and there's no need to change it, but I wanted to\npoint out this subtlety of defer/go, which can be very important\nin some contexts.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-12-20 03:42:06.165029",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2011/12/20 03:42:06, rsc wrote:\n> ... I wanted to\n> point out this subtlety of defer/go, which can be very important\n> in some contexts.\n\nThank you for explaining.\n\nMy mind is quite primitive. So I always chose simplistic path. Not always the shortest, but leaves not doubt for me when I read my code later.\n\nAlex",
			"disapproval": false,
			"date": "2011-12-20 03:47:34.321389",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5491073: old/template: close file in TestAll before deleting it",
	"created": "2011-12-19 00:56:03.046592",
	"patchsets": [
		1,
		2001,
		2002,
		3004
	],
	"modified": "2011-12-20 03:47:34.597685",
	"closed": true,
	"issue": 5491073
}