{
	"description": "runtime: use vDSO clock_gettime for time.now & runtime.nanotime on Linux/amd64\nPerformance improvement aside, time.Now() now gets real nanosecond resolution\non supported systems.\n\nBenchmark done on Core i7-2600 @ 3.40GHz with kernel 3.5.2-gentoo.\noriginal vDSO gettimeofday:\nBenchmarkNow    100000000               27.4 ns/op\nnew vDSO gettimeofday fallback:\nBenchmarkNow    100000000               27.6 ns/op\nnew vDSO clock_gettime:\nBenchmarkNow    100000000               24.4 ns/op",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"iant@golang.org",
		"iant@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Nov 8, 2012 at 8:50 AM, minux <minux.ma@gmail.com> wrote:\r\n> what do you think of using clock_gettime on all\r\n> unix systems where ns resolution is available?\r\n\r\nSounds like a good idea to me, unless it is slower.\r\n\r\n> should i add 386 code in this cl or in a subsequent cl?\r\n\r\nSubsequent CL, I think.  This CL is pretty amd64 specific, and the 386\r\ncode will be quite different.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2012-11-08 17:14:25.979520",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-11-08 10:47:23.378080",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "this CL lets runtime.nanotime call time.now.\r\n\r\nif necessary, i can duplicate time.now code for runtime.nanotime to speed\r\nthe\r\nlatter up a little (as did before).\r\n",
			"disapproval": false,
			"date": "2012-11-08 10:54:49.576630",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI, on linux/386, using clock_gettime actually slows time.now() down.\n\n110 ns/op vs. 118 ns/op.\n\nThis huge performance difference is due to the lack of vDSO\nclock_gettime and gettimeofday on linux/386.",
			"disapproval": false,
			"date": "2012-11-08 13:23:07.063290",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "what do you think of using clock_gettime on all\r\nunix systems where ns resolution is available?\r\n\r\nshould i add 386 code in this cl or in a subsequent cl?\r\n",
			"disapproval": false,
			"date": "2012-11-08 16:50:22.011050",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "My personal opinion is that a 8 ns loss on a platform where people don't\r\nrun servers is far outweighed by any speed-up or increase in functionality\r\n(nanosecond resolution) elsewhere.\r\n\r\nOn Thu, Nov 8, 2012 at 7:23 AM, <minux.ma@gmail.com> wrote:\r\n\r\n> FYI, on linux/386, using clock_gettime actually slows time.now() down.\r\n>\r\n> 110 ns/op vs. 118 ns/op.\r\n>\r\n> This huge performance difference is due to the lack of vDSO\r\n> clock_gettime and gettimeofday on linux/386.\r\n>\r\n> https://codereview.appspot.**com/6814103/<https://codereview.appspot.com/6814103/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-08 16:23:52.496420",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-11-08 16:43:10.322690",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"iant@golang.org",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=42c8d3aadc40 ***\n\nruntime: use vDSO clock_gettime for time.now & runtime.nanotime on Linux/amd64\nPerformance improvement aside, time.Now() now gets real nanosecond resolution\non supported systems.\n\nBenchmark done on Core i7-2600 @ 3.40GHz with kernel 3.5.2-gentoo.\noriginal vDSO gettimeofday:\nBenchmarkNow    100000000               27.4 ns/op\nnew vDSO gettimeofday fallback:\nBenchmarkNow    100000000               27.6 ns/op\nnew vDSO clock_gettime:\nBenchmarkNow    100000000               24.4 ns/op\n\nR=golang-dev, bradfitz, iant, iant\nCC=golang-dev\nhttp://codereview.appspot.com/6814103",
			"disapproval": false,
			"date": "2012-11-09 06:19:19.857730",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6814103: runtime: use vDSO clock_gettime for time.now & runtime....",
	"created": "2012-11-08 10:38:53.618250",
	"patchsets": [
		1,
		1001,
		9001
	],
	"modified": "2012-11-09 06:19:22.845160",
	"closed": true,
	"issue": 6814103
}