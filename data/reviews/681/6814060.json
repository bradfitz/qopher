{
	"description": "crypto: use better hash benchmarks\n\nLabels the existing benchmark as stream, and add benchmarks that\ncompute the checksum.",
	"cc": [
		"golang-dev@googlegroups.com",
		"agl@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"eric.d.eisner@gmail.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Changed it around a bit. Will submit in a sec.",
			"disapproval": false,
			"date": "2012-11-01 18:19:48.864090",
			"approval": false
		},
		{
			"sender": "eric.d.eisner@gmail.com",
			"recipients": [
				"eric.d.eisner@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-10-31 18:30:27.646010",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"eric.d.eisner@gmail.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6814060/diff/5001/src/pkg/crypto/md5/md5_test.go\nFile src/pkg/crypto/md5/md5_test.go (right):\n\nhttps://codereview.appspot.com/6814060/diff/5001/src/pkg/crypto/md5/md5_test.go#newcode107\nsrc/pkg/crypto/md5/md5_test.go:107: func BenchmarkShortHash(b *testing.B) {\nCan you call this BenchmarkHash8Bytes throughout, and write 8 bytes rather than 10 in order to match eBACS?",
			"disapproval": false,
			"date": "2012-10-31 19:32:29.143510",
			"approval": false
		},
		{
			"sender": "eric.d.eisner@gmail.com",
			"recipients": [
				"eric.d.eisner@gmail.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/31 19:32:29, agl1 wrote:\n> https://codereview.appspot.com/6814060/diff/5001/src/pkg/crypto/md5/md5_test.go\n> File src/pkg/crypto/md5/md5_test.go (right):\n> \n> https://codereview.appspot.com/6814060/diff/5001/src/pkg/crypto/md5/md5_test.go#newcode107\n> src/pkg/crypto/md5/md5_test.go:107: func BenchmarkShortHash(b *testing.B) {\n> Can you call this BenchmarkHash8Bytes throughout, and write 8 bytes rather than\n> 10 in order to match eBACS?\n\nThat makes the name sound like it's doing the same thing as the BenchmarkHash1K functions, where those are streaming and this is computing the checksum every iteration. Maybe rename the existing ones BenchmarkHashStream1K, or collapse them into BenchmarkHashStream?",
			"disapproval": false,
			"date": "2012-10-31 19:51:46.616340",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Oct 31, 2012 at 3:51 PM,  <eric.d.eisner@gmail.com> wrote:\r\n> That makes the name sound like it's doing the same thing as the\r\n> BenchmarkHash1K functions, where those are streaming and this is\r\n> computing the checksum every iteration. Maybe rename the existing ones\r\n> BenchmarkHashStream1K, or collapse them into BenchmarkHashStream?\r\n\r\nThe problem is that the other benchmarks are broken. They should also\r\nfinalise the hash.\r\n\r\n(And the 8K one should have an explicit length to make sure that it's\r\ntesting the right thing.)\r\n\r\nFeel free to fix them or just file a bug against me.\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2012-10-31 19:54:48.910290",
			"approval": false
		},
		{
			"sender": "eric.d.eisner@gmail.com",
			"recipients": [
				"eric.d.eisner@gmail.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/31 19:54:48, agl1 wrote:\n> On Wed, Oct 31, 2012 at 3:51 PM,  <mailto:eric.d.eisner@gmail.com> wrote:\n> > That makes the name sound like it's doing the same thing as the\n> > BenchmarkHash1K functions, where those are streaming and this is\n> > computing the checksum every iteration. Maybe rename the existing ones\n> > BenchmarkHashStream1K, or collapse them into BenchmarkHashStream?\n> \n> The problem is that the other benchmarks are broken. They should also\n> finalise the hash.\n> \n> (And the 8K one should have an explicit length to make sure that it's\n> testing the right thing.)\n> \n> Feel free to fix them or just file a bug against me.\n> \n> \n> Cheers\n> \n> AGL\n\nPTAL\n\nI changed them around to address what I was trying to fix and what I think you wanted fixed.",
			"disapproval": false,
			"date": "2012-10-31 21:12:12.067950",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"eric.d.eisner@gmail.com",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1d9ea73cf6c1 ***\n\ncrypto: use better hash benchmarks\n\nLabels the existing benchmark as stream, and add benchmarks that\ncompute the checksum.\n\nR=golang-dev, agl\nCC=golang-dev\nhttp://codereview.appspot.com/6814060\n\nCommitter: Adam Langley <agl@golang.org>",
			"disapproval": false,
			"date": "2012-11-01 20:21:32.959760",
			"approval": false
		}
	],
	"owner_email": "eric.d.eisner@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Eric Roshan Eisner",
	"subject": "code review 6814060: crypto: add short hash benchmarks",
	"created": "2012-10-31 16:00:27.394130",
	"patchsets": [
		1,
		2001,
		5001,
		9001
	],
	"modified": "2012-11-01 20:21:32.959760",
	"closed": false,
	"issue": 6814060
}