{
	"description": "go.crypto/ssh: make tests work on non-cgo platforms.\n\nuser.Current() currently requires cgo - if an error is returned\nattempt to get the username from the environment.",
	"cc": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com",
		"bradfitz@golang.org",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Nov 8, 2012 at 9:54 AM, minux <minux.ma@gmail.com> wrote:\r\n\r\n>\r\n> On Thu, Nov 8, 2012 at 11:34 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>\r\n>> Kinda gross and won't get updated when openbsd gets cgo.\r\n>>\r\n>> Can we query for cgo at runtime somehow? Alternatively, there's a cgo\r\n>> build tag.\r\n>>\r\n> The dependency is much more subtle than that.\r\n> however, your concern is also valid.\r\n>\r\n> I'd suggest we first call os/user.Current, and if it is \"\" or error occurs,\r\n> try os.Getenv(\"USER\"), if still \"\", panic.\r\n>\r\n\r\nYes, that SGTM.\r\n",
			"disapproval": false,
			"date": "2012-11-08 16:20:50.282300",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6819113/diff/5002/ssh/test/test_unix_test.go\nFile ssh/test/test_unix_test.go (right):\n\nhttps://codereview.appspot.com/6819113/diff/5002/ssh/test/test_unix_test.go#newcode169\nssh/test/test_unix_test.go:169: User: username,\nusername() and pull the above out into a function?",
			"disapproval": false,
			"date": "2012-11-08 16:33:24.271060",
			"approval": true
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=cf51e694ba75&repo=crypto ***\n\ngo.crypto/ssh: make tests work on non-cgo platforms.\n\nuser.Current() currently requires cgo - if an error is returned\nattempt to get the username from the environment.\n\nR=golang-dev, minux.ma, bradfitz, dave\nCC=golang-dev\nhttp://codereview.appspot.com/6819113",
			"disapproval": false,
			"date": "2012-11-11 15:52:31.766800",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Nov 8, 2012 at 11:34 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> Kinda gross and won't get updated when openbsd gets cgo.\r\n>\r\n> Can we query for cgo at runtime somehow? Alternatively, there's a cgo\r\n> build tag.\r\n>\r\nThe dependency is much more subtle than that.\r\nhowever, your concern is also valid.\r\n\r\nI'd suggest we first call os/user.Current, and if it is \"\" or error occurs,\r\ntry os.Getenv(\"USER\"), if still \"\", panic.\r\n",
			"disapproval": false,
			"date": "2012-11-08 15:54:48.016610",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Kinda gross and won't get updated when openbsd gets cgo.\r\n\r\nCan we query for cgo at runtime somehow? Alternatively, there's a cgo build\r\ntag.\r\n On Nov 8, 2012 6:35 AM, <jsing@google.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go.**crypto<https://code.google.com/p/go.crypto>\r\n>\r\n>\r\n> Description:\r\n> go.crypto/ssh: make tests work on OpenBSD\r\n>\r\n> OpenBSD does not have a working user.Current() since this currently\r\n> requires CGO support. Attempt to get the username via the USER\r\n> environment variable instead.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6819113/<http://codereview.appspot.com/6819113/>\r\n>\r\n> Affected files:\r\n>   M ssh/test/test_unix_test.go\r\n>\r\n>\r\n> Index: ssh/test/test_unix_test.go\r\n> ==============================**==============================**=======\r\n> --- a/ssh/test/test_unix_test.go\r\n> +++ b/ssh/test/test_unix_test.go\r\n> @@ -23,6 +23,7 @@\r\n>         \"os/exec\"\r\n>         \"os/user\"\r\n>         \"path/filepath\"\r\n> +       \"runtime\"\r\n>         \"testing\"\r\n>         \"text/template\"\r\n>         \"time\"\r\n> @@ -151,14 +152,25 @@\r\n>  }\r\n>\r\n>  func clientConfig() *ssh.ClientConfig {\r\n> -       user, err := user.Current()\r\n> -       if err != nil {\r\n> -               panic(err)\r\n> +       var username string\r\n> +       if runtime.GOOS == \"openbsd\" {\r\n> +               // OpenBSD does not have a working user.Current() since\r\n> this\r\n> +               // currently requires CGO support.\r\n> +               username = os.Getenv(\"USER\")\r\n> +       } else {\r\n> +               user, err := user.Current()\r\n> +               if err != nil {\r\n> +                       panic(err)\r\n> +               }\r\n> +               username = user.Username\r\n> +       }\r\n> +       if username == \"\" {\r\n> +               panic(\"Unable to get username\")\r\n>         }\r\n>         kc := new(keychain)\r\n>         kc.keys = append(kc.keys, rsakey)\r\n>         config := &ssh.ClientConfig{\r\n> -               User: user.Username,\r\n> +               User: username,\r\n>                 Auth: []ssh.ClientAuth{\r\n>                         ssh.ClientAuthKeyring(kc),\r\n>                 },\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-11-08 15:34:11.625240",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-11-08 14:35:48.302440",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-11-08 14:43:48.748660",
			"approval": true
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 9 November 2012 02:54, minux <minux.ma@gmail.com> wrote:\r\n>\r\n> On Thu, Nov 8, 2012 at 11:34 PM, Brad Fitzpatrick <bradfitz@golang.org>\r\n> wrote:\r\n>>\r\n>> Kinda gross and won't get updated when openbsd gets cgo.\r\n>>\r\n>> Can we query for cgo at runtime somehow? Alternatively, there's a cgo\r\n>> build tag.\r\n>\r\n> The dependency is much more subtle than that.\r\n> however, your concern is also valid.\r\n\r\nRight. The underlying issue is that user.Current() currently has no\r\nnon-cgo implementation.\r\n\r\n> I'd suggest we first call os/user.Current, and if it is \"\" or error occurs,\r\n> try os.Getenv(\"USER\"), if still \"\", panic.\r\n\r\nWorks for me, although I think checking for an error is sufficient -\r\nif we got a User with an empty username then that is probably a valid\r\nfailure case.\r\n\r\nPTAL\r\n",
			"disapproval": false,
			"date": "2012-11-08 16:26:39.570050",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6819113/diff/5002/ssh/test/test_unix_test.go\nFile ssh/test/test_unix_test.go (right):\n\nhttps://codereview.appspot.com/6819113/diff/5002/ssh/test/test_unix_test.go#newcode158\nssh/test/test_unix_test.go:158: // user.Current() currently requires CGO support - if it\nOn 2012/11/08 16:30:48, dfc wrote:\n> // user.Current() requires cgo. If an error is returned\n> // try to get the username from the environment.\n\nI've merged most of your suggestion.\n\nhttps://codereview.appspot.com/6819113/diff/5002/ssh/test/test_unix_test.go#newcode169\nssh/test/test_unix_test.go:169: User: username,\nOn 2012/11/08 16:33:24, bradfitz wrote:\n> username() and pull the above out into a function?\n\nYup, done.",
			"disapproval": false,
			"date": "2012-11-11 15:47:07.764280",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM modulo comment.\n\nhttp://codereview.appspot.com/6819113/diff/5002/ssh/test/test_unix_test.go\nFile ssh/test/test_unix_test.go (right):\n\nhttp://codereview.appspot.com/6819113/diff/5002/ssh/test/test_unix_test.go#newcode158\nssh/test/test_unix_test.go:158: // user.Current() currently requires CGO support - if it\n// user.Current() requires cgo. If an error is returned\n// try to get the username from the environment.",
			"disapproval": false,
			"date": "2012-11-08 16:30:47.749990",
			"approval": true
		}
	],
	"owner_email": "jsing@google.com",
	"private": false,
	"base_url": "",
	"owner": "jsing",
	"subject": "code review 6819113: go.crypto/ssh: make tests work on OpenBSD",
	"created": "2012-11-08 14:29:00.928300",
	"patchsets": [
		1,
		2001,
		5001,
		5002,
		11003,
		1003,
		3004
	],
	"modified": "2012-11-11 15:52:34.068710",
	"closed": true,
	"issue": 6819113
}