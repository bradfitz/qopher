{
	"description": "database/sql: allow simultaneous queries, etc in a Tx\n\nNow that revision 0c029965805f is in, it's easy\nto guarantee that we never access a driver.Conn\nconcurrently, per the database/sql/driver contract,\nso we can remove this overlarge mutex.\n\nFixes issue 3857",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-18 15:10:04.241590",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7707047/diff/4001/src/pkg/database/sql/sql_test.go\nFile src/pkg/database/sql/sql_test.go (right):\n\nhttps://codereview.appspot.com/7707047/diff/4001/src/pkg/database/sql/sql_test.go#newcode741\nsrc/pkg/database/sql/sql_test.go:741: func TestSimultaneousQueries(t *testing.T) {\nIf this test fails, does it deadlock?",
			"disapproval": false,
			"date": "2013-03-18 18:30:39.006430",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Mar 18, 2013 at 11:30 AM, <adg@golang.org> wrote:\r\n\r\n> LGTM\r\n>\r\n>\r\n> https://codereview.appspot.**com/7707047/diff/4001/src/pkg/**\r\n> database/sql/sql_test.go<https://codereview.appspot.com/7707047/diff/4001/src/pkg/database/sql/sql_test.go>\r\n> File src/pkg/database/sql/sql_test.**go (right):\r\n>\r\n> https://codereview.appspot.**com/7707047/diff/4001/src/pkg/**\r\n> database/sql/sql_test.go#**newcode741<https://codereview.appspot.com/7707047/diff/4001/src/pkg/database/sql/sql_test.go#newcode741>\r\n> src/pkg/database/sql/sql_test.**go:741: func TestSimultaneousQueries(t\r\n> *testing.T) {\r\n> If this test fails, does it deadlock?\r\n>\r\n\r\nwell, crashes with deadlock.\r\n",
			"disapproval": false,
			"date": "2013-03-18 18:33:07.219940",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c6f2bdbb0933 ***\n\ndatabase/sql: allow simultaneous queries, etc in a Tx\n\nNow that revision 0c029965805f is in, it's easy\nto guarantee that we never access a driver.Conn\nconcurrently, per the database/sql/driver contract,\nso we can remove this overlarge mutex.\n\nFixes issue 3857\n\nR=golang-dev, adg\nCC=golang-dev\nhttps://codereview.appspot.com/7707047",
			"disapproval": false,
			"date": "2013-03-18 18:39:06.356130",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 19 March 2013 05:33, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> well, crashes with deadlock.\r\n\r\n\r\nYep that's what I thought. SGTM\r\n",
			"disapproval": false,
			"date": "2013-03-18 21:17:10.660230",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 7707047: database/sql: allow simultaneous queries, etc in a Tx",
	"created": "2013-03-18 15:08:58.391760",
	"patchsets": [
		1,
		3,
		4001,
		11001
	],
	"modified": "2013-03-18 18:39:07.690850",
	"closed": true,
	"issue": 7707047
}