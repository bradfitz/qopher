{
	"description": "freetype: import path gofixes.\n\nAlso update freetype/truetype for s/int/rune/.",
	"cc": [
		"rsc@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as c9c9c863abe0 ***\n\nfreetype: import path gofixes.\n\nAlso update freetype/truetype for s/int/rune/.\n\nR=rsc, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5505067",
			"disapproval": false,
			"date": "2011-12-22 23:56:03.965945",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/freetype-go",
			"disapproval": false,
			"date": "2011-12-22 23:37:26.920833",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM at least\n\nOn Thu, Dec 22, 2011 at 3:37 PM, <nigeltao@golang.org> wrote:\n\n> Reviewers: rsc,\n>\n> Message:\n> Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://code.google.com/p/**freetype-go<https://code.google.com/p/freetype-go>\n>\n>\n> Description:\n> freetype: import path gofixes.\n>\n> Also update freetype/truetype for s/int/rune/.\n>\n> Please review this at http://codereview.appspot.com/**5505067/<http://codereview.appspot.com/5505067/>\n>\n> Affected files:\n>  M example/freetype/main.go\n>  M example/gamma/main.go\n>  M example/raster/main.go\n>  M example/round/main.go\n>  M example/truetype/main.go\n>  M freetype/Makefile\n>  M freetype/freetype.go\n>  M freetype/raster/Makefile\n>  M freetype/truetype/Makefile\n>  M freetype/truetype/truetype.go\n>\n>\n> Index: example/freetype/main.go\n> ==============================**==============================**=======\n> --- a/example/freetype/main.go\n> +++ b/example/freetype/main.go\n> @@ -9,7 +9,6 @@\n>        \"bufio\"\n>        \"flag\"\n>        \"fmt\"\n> -       \"freetype-go.googlecode.com/**hg/freetype<http://freetype-go.googlecode.com/hg/freetype>\n> \"\n>        \"image\"\n>        \"image/color\"\n>        \"image/draw\"\n> @@ -17,6 +16,8 @@\n>        \"io/ioutil\"\n>        \"log\"\n>        \"os\"\n> +\n> +       \"code.google.com/p/freetype-**go/freetype<http://code.google.com/p/freetype-go/freetype>\n> \"\n>  )\n>\n>  var (\n> Index: example/gamma/main.go\n> ==============================**==============================**=======\n> --- a/example/gamma/main.go\n> +++ b/example/gamma/main.go\n> @@ -14,7 +14,7 @@\n>        \"log\"\n>        \"os\"\n>\n> -       \"freetype-go.googlecode.com/**hg/freetype/raster<http://freetype-go.googlecode.com/hg/freetype/raster>\n> \"\n> +       \"code.google.com/p/freetype-**go/freetype/raster<http://code.google.com/p/freetype-go/freetype/raster>\n> \"\n>  )\n>\n>  func p(x, y int) raster.Point {\n> Index: example/raster/main.go\n> ==============================**==============================**=======\n> --- a/example/raster/main.go\n> +++ b/example/raster/main.go\n> @@ -15,7 +15,7 @@\n>        \"log\"\n>        \"os\"\n>\n> -       \"freetype-go.googlecode.com/**hg/freetype/raster<http://freetype-go.googlecode.com/hg/freetype/raster>\n> \"\n> +       \"code.google.com/p/freetype-**go/freetype/raster<http://code.google.com/p/freetype-go/freetype/raster>\n> \"\n>  )\n>\n>  type node struct {\n> Index: example/round/main.go\n> ==============================**==============================**=======\n> --- a/example/round/main.go\n> +++ b/example/round/main.go\n> @@ -21,7 +21,7 @@\n>        \"math\"\n>        \"os\"\n>\n> -       \"freetype-go.googlecode.com/**hg/freetype/raster<http://freetype-go.googlecode.com/hg/freetype/raster>\n> \"\n> +       \"code.google.com/p/freetype-**go/freetype/raster<http://code.google.com/p/freetype-go/freetype/raster>\n> \"\n>  )\n>\n>  func main() {\n> Index: example/truetype/main.go\n> ==============================**==============================**=======\n> --- a/example/truetype/main.go\n> +++ b/example/truetype/main.go\n> @@ -11,7 +11,7 @@\n>        \"io/ioutil\"\n>        \"log\"\n>\n> -       \"freetype-go.googlecode.com/**hg/freetype/truetype<http://freetype-go.googlecode.com/hg/freetype/truetype>\n> \"\n> +       \"code.google.com/p/freetype-**go/freetype/truetype<http://code.google.com/p/freetype-go/freetype/truetype>\n> \"\n>  )\n>\n>  var fontfile = flag.String(\"fontfile\", \"../../luxi-fonts/luxisr.ttf\",\n> \"filename of the ttf font\")\n> Index: freetype/Makefile\n> ==============================**==============================**=======\n> --- a/freetype/Makefile\n> +++ b/freetype/Makefile\n> @@ -5,7 +5,7 @@\n>\n>  include $(GOROOT)/src/Make.inc\n>\n> -TARG=freetype-go.googlecode.**com/hg/freetype<http://freetype-go.googlecode.com/hg/freetype>\n> +TARG=code.google.com/p/**freetype-go/freetype<http://code.google.com/p/freetype-go/freetype>\n>  GOFILES=\\\n>        freetype.go\\\n>\n> Index: freetype/freetype.go\n> ==============================**==============================**=======\n> --- a/freetype/freetype.go\n> +++ b/freetype/freetype.go\n> @@ -10,10 +10,11 @@\n>\n>  import (\n>        \"errors\"\n> -       \"freetype-go.googlecode.com/**hg/freetype/raster<http://freetype-go.googlecode.com/hg/freetype/raster>\n> \"\n> -       \"freetype-go.googlecode.com/**hg/freetype/truetype<http://freetype-go.googlecode.com/hg/freetype/truetype>\n> \"\n>        \"image\"\n>        \"image/draw\"\n> +\n> +       \"code.google.com/p/freetype-**go/freetype/raster<http://code.google.com/p/freetype-go/freetype/raster>\n> \"\n> +       \"code.google.com/p/freetype-**go/freetype/truetype<http://code.google.com/p/freetype-go/freetype/truetype>\n> \"\n>  )\n>\n>  // These constants determine the size of the glyph cache. The cache is\n> keyed\n> Index: freetype/raster/Makefile\n> ==============================**==============================**=======\n> --- a/freetype/raster/Makefile\n> +++ b/freetype/raster/Makefile\n> @@ -5,7 +5,7 @@\n>\n>  include $(GOROOT)/src/Make.inc\n>\n> -TARG=freetype-go.googlecode.**com/hg/freetype/raster<http://freetype-go.googlecode.com/hg/freetype/raster>\n> +TARG=code.google.com/p/**freetype-go/freetype/raster<http://code.google.com/p/freetype-go/freetype/raster>\n>  GOFILES=\\\n>        geom.go\\\n>        paint.go\\\n> Index: freetype/truetype/Makefile\n> ==============================**==============================**=======\n> --- a/freetype/truetype/Makefile\n> +++ b/freetype/truetype/Makefile\n> @@ -5,7 +5,7 @@\n>\n>  include $(GOROOT)/src/Make.inc\n>\n> -TARG=freetype-go.googlecode.**com/hg/freetype/truetype<http://freetype-go.googlecode.com/hg/freetype/truetype>\n> +TARG=code.google.com/p/**freetype-go/freetype/truetype<http://code.google.com/p/freetype-go/freetype/truetype>\n>  GOFILES=\\\n>        truetype.go\\\n>\n> Index: freetype/truetype/truetype.go\n> ==============================**==============================**=======\n> --- a/freetype/truetype/truetype.**go\n> +++ b/freetype/truetype/truetype.**go\n> @@ -17,7 +17,7 @@\n>        \"fmt\"\n>  )\n>\n> -// An Index is a Font's index of a Unicode code point.\n> +// An Index is a Font's index of a rune.\n>  type Index uint16\n>\n>  // A Bounds holds the co-ordinate range of one or more glyphs.\n> @@ -287,9 +287,9 @@\n>        return f.unitsPerEm\n>  }\n>\n> -// Index returns a Font's index for the given Unicode code point.\n> -func (f *Font) Index(codePoint int) Index {\n> -       c := uint16(codePoint)\n> +// Index returns a Font's index for the given rune.\n> +func (f *Font) Index(x rune) Index {\n> +       c := uint16(x)\n>        n := len(f.cm)\n>        for i := 0; i < n; i++ {\n>                if f.cm[i].start <= c && c <= f.cm[i].end {\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-12-22 23:40:28.226768",
			"approval": true
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 5505067: freetype: import path gofixes.",
	"created": "2011-12-22 23:35:45.172556",
	"patchsets": [
		1,
		2001,
		4001,
		5001
	],
	"modified": "2011-12-22 23:56:06.597003",
	"closed": true,
	"issue": 5505067
}