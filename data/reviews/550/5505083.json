{
	"description": "cmd/go: include test files in the files sent to gofmt, govet, and gofix\n\nAlso, add TestGoFiles to the go command's public api.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-03 01:55:18.160327",
			"approval": false
		},
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-30 06:24:38.303510",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 3 January 2012 16:06, sanjay.m <balasanjay@gmail.com> wrote:\n> Wow, I totally forgot about XTestGoFiles from build.DirInfo... ugh\n>\n> A quick grep shows 81 uses of external test packages in the standard\n> library, and this number is probably going to grow as more examples are\n> written.\n>\n> I'm not sure if I should simply mirror the api from go/build and add a\n> XTestGoFiles field to the API, or just have the public API expose a single\n> property that encompasses both types of files. I filed an issue so it\n> doesn't slip my mind (golang.org/issue/2649)\n\nMy gut reaction is that the public API should have both fields.\n\nLet me think about it some more.\n\nAndrew\n",
			"disapproval": false,
			"date": "2012-01-03 05:46:51.577539",
			"approval": false
		},
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-30 06:13:32.820031",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-03 02:17:56.802960",
			"approval": true
		},
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Wow, I totally forgot about XTestGoFiles from build.DirInfo... ugh\n\nA quick grep shows 81 uses of external test packages in the standard \nlibrary, and this number is probably going to grow as more examples are \nwritten.\n\nI'm not sure if I should simply mirror the api from go/build and add a \nXTestGoFiles field to the API, or just have the public API expose a single \nproperty that encompasses both types of files. I filed an issue so it \ndoesn't slip my mind (golang.org/issue/2649)\n\nThoughts?\n\nSanjay\n",
			"disapproval": false,
			"date": "2012-01-03 05:06:25.504909",
			"approval": false
		},
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-12-30 06:31:42.881797",
			"approval": false
		},
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\n>\n> What's the rationale for the combined test files field? When would you\n> want both?\n>\nI was trying to think of what people would actually use the API for, some \nfuture Go IDE or dev scripts or something, and it seemed like all test \nfiles for a package would be more helpful than just internal or external.\n\nOn second thought, though, I think you're right, theres no point with the \nadditional API surface, when it is so trivially computed\n\nI think the shorter names are fine. Consistency is more important than\n> VeryLongButHelpfulNames, and there'll be a doc comment on the struct\n> anyway.\n>\n\nSounds good, will send in a CL shortly.\n\nSanjay \n",
			"disapproval": false,
			"date": "2012-01-04 05:17:37.994312",
			"approval": false
		},
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5505083/diff/4004/src/cmd/go/list.go\nFile src/cmd/go/list.go (right):\n\nhttp://codereview.appspot.com/5505083/diff/4004/src/cmd/go/list.go#newcode40\nsrc/cmd/go/list.go:40: TestGoFiles []string // _test.go source files\nOn 2012/01/03 01:29:11, adg wrote:\n> Use spaces for indent here.\n\nDone.\n\nhttp://codereview.appspot.com/5505083/diff/4004/src/cmd/go/pkg.go\nFile src/cmd/go/pkg.go (right):\n\nhttp://codereview.appspot.com/5505083/diff/4004/src/cmd/go/pkg.go#newcode160\nsrc/cmd/go/pkg.go:160: // Ditto Cgo files\nOn 2012/01/03 01:29:11, adg wrote:\n> These added comments and spaces are unnecessary.\n\nDone.\n\nhttp://codereview.appspot.com/5505083/diff/4004/src/cmd/go/pkg.go#newcode172\nsrc/cmd/go/pkg.go:172: //TODO(sanjay) should we consider a package stale if test files have been modified?\nOn 2012/01/03 01:29:11, adg wrote:\n> No. Test binaries are always built, and nothing depends on a test binary. Drop\n> this TODO.\n\nDone.",
			"disapproval": false,
			"date": "2012-01-03 01:56:49.586017",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3c4105537157 ***\n\ncmd/go: include test files in the files sent to gofmt, govet, and gofix\n\nAlso, add TestGoFiles to the go command's public api.\n\nR=golang-dev, adg\nCC=golang-dev\nhttp://codereview.appspot.com/5505083\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2012-01-03 03:13:00.959379",
			"approval": false
		},
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I was reviewing the text/template syntax rules, and if I am right in \nthinking that the -f flag of go list will be the primary user of this API, \nthen perhaps we should do as your gut says and have both fields\n\nBut also expose a function called AllTestGoFiles or something similar that \ncomputes a slice of string that will be all the union of TestGoFiles and \nXTestGoFiles. The syntax for accessing this function through text/template \nshould be identical to that of a field.\n\nActually, perhaps to make it more explicit call the fields \nInternalTestGoFiles and ExternalTestGoFiles respectively, and the method \nTestGoFiles, where they're documented to be internal to the package under \ntest, external to the package under test, and all files testing a package.\n\nSanjay\n",
			"disapproval": false,
			"date": "2012-01-03 11:20:10.373101",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5505083/diff/4004/src/cmd/go/list.go\nFile src/cmd/go/list.go (right):\n\nhttp://codereview.appspot.com/5505083/diff/4004/src/cmd/go/list.go#newcode40\nsrc/cmd/go/list.go:40: TestGoFiles []string // _test.go source files\nUse spaces for indent here.\n\nhttp://codereview.appspot.com/5505083/diff/4004/src/cmd/go/pkg.go\nFile src/cmd/go/pkg.go (right):\n\nhttp://codereview.appspot.com/5505083/diff/4004/src/cmd/go/pkg.go#newcode160\nsrc/cmd/go/pkg.go:160: // Ditto Cgo files\nThese added comments and spaces are unnecessary.\n\nhttp://codereview.appspot.com/5505083/diff/4004/src/cmd/go/pkg.go#newcode172\nsrc/cmd/go/pkg.go:172: //TODO(sanjay) should we consider a package stale if test files have been modified?\nNo. Test binaries are always built, and nothing depends on a test binary. Drop this TODO.",
			"disapproval": false,
			"date": "2012-01-03 01:29:11.675501",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 3 January 2012 22:20, sanjay.m <balasanjay@gmail.com> wrote:\n> I was reviewing the text/template syntax rules, and if I am right in\n> thinking that the -f flag of go list will be the primary user of this API,\n> then perhaps we should do as your gut says and have both fields\n>\n> But also expose a function called AllTestGoFiles or something similar that\n> computes a slice of string that will be all the union of TestGoFiles and\n> XTestGoFiles. The syntax for accessing this function through text/template\n> should be identical to that of a field.\n>\n> Actually, perhaps to make it more explicit call the fields\n> InternalTestGoFiles and ExternalTestGoFiles respectively, and the method\n> TestGoFiles, where they're documented to be internal to the package under\n> test, external to the package under test, and all files testing a package.\n\nWhat's the rationale for the combined test files field? When would you\nwant both?\n\nI think the shorter names are fine. Consistency is more important than\nVeryLongButHelpfulNames, and there'll be a doc comment on the struct\nanyway.\n\nAndrew\n",
			"disapproval": false,
			"date": "2012-01-04 04:24:51.472277",
			"approval": false
		}
	],
	"owner_email": "balasanjay@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "sanjay.m",
	"subject": "code review 5505083: cmd/go: include test files in the files sent to gofmt, ...",
	"created": "2011-12-30 06:09:44.057879",
	"patchsets": [
		1,
		2001,
		4001,
		1003,
		4004,
		5004
	],
	"modified": "2012-01-03 03:27:30.941508",
	"closed": true,
	"issue": 5505083
}