{
	"description": "os: make Environ return sorted list\n\nFixes issue 2619.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"dave@cheney.net",
		"r@google.com",
		"bradfitz@golang.org",
		"borman@google.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NO\n\nunnecessary. no claim is made about ordering. this is just the vector provided by the system. the few (any?) who care can sort it themselves.\n\nin short, agree with dsymonds except for the LGTM part.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-01-04 12:02:19.191431",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't care to have it sorted, but I would like it documented that not\nonly is it unsorted, but it's a different random order on each call.\n\nIt's not true that this is \"just a vector provided by the system\".  It's\nactually a vector provided by the system, put into a hashmap, and randomly\niterated over on each call.\n\nThis bit me because I was expecting it to be stable between invocations and\nit was causing a larger data structure of mine to be randomly changing, no\nlonger hashing the same.\n\n\nOn Wed, Jan 4, 2012 at 4:02 AM, Rob 'Commander' Pike <r@google.com> wrote:\n\n> NO\n>\n> unnecessary. no claim is made about ordering. this is just the vector\n> provided by the system. the few (any?) who care can sort it themselves.\n>\n> in short, agree with dsymonds except for the LGTM part.\n>\n> -rob\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-04 19:10:58.608491",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"dave@cheney.net",
				"r@google.com",
				"bradfitz@golang.org",
				"borman@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-01-04 21:02:44.228415",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-01-04 06:14:02.010638",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "if sorting is important, it shouldn't be in a map. if speed of indexing is important, the map should be the interface.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-01-04 19:25:01.622013",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think it should be in a map and documented as having non-deterministic\nordering.\n\nOn Wed, Jan 4, 2012 at 11:25 AM, Rob 'Commander' Pike <r@google.com> wrote:\n\n> if sorting is important, it shouldn't be in a map. if speed of indexing is\n> important, the map should be the interface.\n>\n> -rob\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-04 19:44:56.826600",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 5 January 2012 06:25, Rob 'Commander' Pike <r@google.com> wrote:\n> if sorting is important, it shouldn't be in a map. if speed of indexing is important, the map should be the interface.\n\nSeems that with the status quo we have the worst of both worlds.\n\nexec.Cmd.Env and is.Environ might both be better using maps in their\ninterfaces. In the case of os.Environ we would need to make a copy\nbefore handing it to the user, lest they mutate the environment by\nmistake.\n\nAndrew\n",
			"disapproval": false,
			"date": "2012-01-04 20:51:58.739229",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nbut I don't see the point, personally. Only a few callers will care, and they are capable of sorting it themselves.\n\nhttp://codereview.appspot.com/5509044/diff/1/src/pkg/os/env.go\nFile src/pkg/os/env.go (right):\n\nhttp://codereview.appspot.com/5509044/diff/1/src/pkg/os/env.go#newcode119\nsrc/pkg/os/env.go:119: // Environ returns an array of strings representing the environment,\ns/an array/a slice/ while you're here.",
			"disapproval": false,
			"date": "2012-01-04 06:26:48.374322",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Jan 4, 2012, at 12:51 PM, Andrew Gerrand wrote:\n\n> On 5 January 2012 06:25, Rob 'Commander' Pike <r@google.com> wrote:\n>> if sorting is important, it shouldn't be in a map. if speed of indexing is important, the map should be the interface.\n> \n> Seems that with the status quo we have the worst of both worlds.\n> \n> exec.Cmd.Env and is.Environ might both be better using maps in their\n> interfaces. In the case of os.Environ we would need to make a copy\n> before handing it to the user, lest they mutate the environment by\n> mistake.\n\ni think the status quo is fine.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-01-04 20:57:06.779302",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Seconded\n\nSent from my iPhone\n\nOn 04/01/2012, at 17:26, dsymonds@golang.org wrote:\n\n> LGTM\n> \n> but I don't see the point, personally. Only a few callers will care, and\n> they are capable of sorting it themselves.\n> \n> \n> http://codereview.appspot.com/5509044/diff/1/src/pkg/os/env.go\n> File src/pkg/os/env.go (right):\n> \n> http://codereview.appspot.com/5509044/diff/1/src/pkg/os/env.go#newcode119\n> src/pkg/os/env.go:119: // Environ returns an array of strings\n> representing the environment,\n> s/an array/a slice/ while you're here.\n> \n> http://codereview.appspot.com/5509044/\n",
			"disapproval": false,
			"date": "2012-01-04 06:53:12.908056",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think it's worth fixing this, but not with sort and not in os.\nsyscall is in charge of the environment; the fix belongs there.\n\nIt is easy to fix.  Right now syscall has\n\nvar env map[string]string\nvar envs []string // provided by runtime\n\nit copies envs into env for quick access the\nfirst time (using envOnce to define first) and\nthen never looks at envs again.  Instead, it\ncan maintain\n\nvar env map[string]int  // map to index in envs\nvar envs []string // provided by runtime\n\nand then Environ can return a copy of envs.\nthat will preserve the original order passed to\nthe program, with new variables at the end.\n\nruss\n",
			"disapproval": false,
			"date": "2012-01-09 16:58:30.020135",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done, in http://codereview.appspot.com/5528058/\n\nOn Mon, Jan 9, 2012 at 8:58 AM, Russ Cox <rsc@golang.org> wrote:\n\n> I think it's worth fixing this, but not with sort and not in os.\n> syscall is in charge of the environment; the fix belongs there.\n>\n> It is easy to fix.  Right now syscall has\n>\n> var env map[string]string\n> var envs []string // provided by runtime\n>\n> it copies envs into env for quick access the\n> first time (using envOnce to define first) and\n> then never looks at envs again.  Instead, it\n> can maintain\n>\n> var env map[string]int  // map to index in envs\n> var envs []string // provided by runtime\n>\n> and then Environ can return a copy of envs.\n> that will preserve the original order passed to\n> the program, with new variables at the end.\n>\n> russ\n>\n",
			"disapproval": false,
			"date": "2012-01-10 00:12:50.583571",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5509044: os: make Environ return sorted list",
	"created": "2012-01-04 06:13:54.135230",
	"patchsets": [
		1
	],
	"modified": "2012-01-09 16:58:30.141087",
	"closed": true,
	"issue": 5509044
}