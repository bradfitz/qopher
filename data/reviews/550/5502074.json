{
	"description": "go/doc: don't ignore anonymous non-exported fields\n\n- remove wrapper.go from testing package (not needed anymore)\n\nFixes issue 1000.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com",
		"n13m3y3r@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the feedback.\n\nI agree, this code needs to be rewritten at this point - this can be\nmuch much cleaner. It's a stop-gap measure for now. I may have some\ntime over the holidays.\n\nMerry Xmas!\n- Robert\n\nOn Fri, Dec 23, 2011 at 1:07 PM,  <n13m3y3r@gmail.com> wrote:\n> Not comfortable with the code base, but it works for me, and looks\n> sensible.\n>\n> http://codereview.appspot.com/5502074/\n",
			"disapproval": false,
			"date": "2011-12-23 23:43:00.127784",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-23 08:43:16.174922",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Not comfortable with the code base, but it works for me, and looks sensible.",
			"disapproval": false,
			"date": "2011-12-23 21:07:54.222452",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com, n13m3y3r@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-10 20:44:35.097038",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks pretty good.  I patched it in and ran 'godoc .'\nin a directory containing only this:\n\n\npackage p\n\ntype T struct {\n\tptrMeth\n\tvalMeth\n\t*ptrMeth1\n\t*valMeth1\n}\n\ntype ptrMeth struct{}\nfunc (*ptrMeth) PtrMeth() {}\n\ntype ptrMeth1 struct{}\nfunc (*ptrMeth1) PtrMeth1() {}\n\ntype valMeth struct{}\nfunc (valMeth) ValMeth() {}\n\ntype valMeth1 struct{}\nfunc (valMeth1) ValMeth1() {}\n\nIt prints:\n\ntype T struct {\n    // contains filtered or unexported fields\n}\n\nfunc (*T) PtrMeth()\n\nfunc (*T) PtrMeth1()\n\nfunc (T) ValMeth()\n\nfunc (*T) ValMeth1()\n\nI believe the output should be\n\nfunc (*T) PtrMeth()  // same as above\n\nfunc (T) PtrMeth1()  // no * here (the embedded field has a * so the\nreceiver does not require one)\n\nfunc (T) ValMeth()  // same as above\n\nfunc (T) ValMeth1()  // no * here (it's a value method)\n",
			"disapproval": false,
			"date": "2012-01-11 20:52:08.867966",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nA doc_test.go is in the works for a next CL.\n- gri\n\nOn Wed, Jan 11, 2012 at 12:52 PM, Russ Cox <rsc@golang.org> wrote:\n> Looks pretty good. \u00a0I patched it in and ran 'godoc .'\n> in a directory containing only this:\n>\n>\n> package p\n>\n> type T struct {\n> \u00a0 \u00a0 \u00a0 \u00a0ptrMeth\n> \u00a0 \u00a0 \u00a0 \u00a0valMeth\n> \u00a0 \u00a0 \u00a0 \u00a0*ptrMeth1\n> \u00a0 \u00a0 \u00a0 \u00a0*valMeth1\n> }\n>\n> type ptrMeth struct{}\n> func (*ptrMeth) PtrMeth() {}\n>\n> type ptrMeth1 struct{}\n> func (*ptrMeth1) PtrMeth1() {}\n>\n> type valMeth struct{}\n> func (valMeth) ValMeth() {}\n>\n> type valMeth1 struct{}\n> func (valMeth1) ValMeth1() {}\n>\n> It prints:\n>\n> type T struct {\n> \u00a0 \u00a0// contains filtered or unexported fields\n> }\n>\n> func (*T) PtrMeth()\n>\n> func (*T) PtrMeth1()\n>\n> func (T) ValMeth()\n>\n> func (*T) ValMeth1()\n>\n> I believe the output should be\n>\n> func (*T) PtrMeth() \u00a0// same as above\n>\n> func (T) PtrMeth1() \u00a0// no * here (the embedded field has a * so the\n> receiver does not require one)\n>\n> func (T) ValMeth() \u00a0// same as above\n>\n> func (T) ValMeth1() \u00a0// no * here (it's a value method)\n",
			"disapproval": false,
			"date": "2012-01-12 00:29:04.445727",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com, n13m3y3r@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-12 19:41:34.257149",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-12 23:19:29.312498",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=044f408c2471 ***\n\ngo/doc: don't ignore anonymous non-exported fields\n\n- remove wrapper.go from testing package (not needed anymore)\n\nFixes issue 1000.\n\nR=rsc, golang-dev, n13m3y3r\nCC=golang-dev\nhttp://codereview.appspot.com/5502074",
			"disapproval": false,
			"date": "2012-01-13 00:04:55.493005",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5502074: go/doc: don't ignore anonymous non-exported fields",
	"created": "2011-12-23 00:00:24.623774",
	"patchsets": [
		1,
		1002,
		3,
		4002,
		6001,
		6007,
		7001,
		10001,
		13001,
		14001,
		14002,
		10008,
		16001,
		18001,
		23001
	],
	"modified": "2012-01-13 00:32:41.588825",
	"closed": true,
	"issue": 5502074
}