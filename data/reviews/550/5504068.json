{
	"description": "syscall: make getdirentries work on netbsd",
	"cc": [
		"golang-dev@googlegroups.com",
		"mikioh.mikioh@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Well, have you already succeeded to run \"cgo -godefs\" run perfectly?\nI just tried but got a core dump.\n\nOn Thu, Dec 22, 2011 at 11:11 AM,  <jsing@google.com> wrote:\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> syscall: make getdirentries work on netbsd\n>\n> Please review this at http://codereview.appspot.com/5504068/\n>\n> Affected files:\n> \u00a0M src/pkg/syscall/syscall_netbsd.go\n> \u00a0M src/pkg/syscall/zsyscall_netbsd_386.go\n> \u00a0M src/pkg/syscall/zsyscall_netbsd_amd64.go\n> \u00a0M src/pkg/syscall/ztypes_netbsd_386.go\n> \u00a0M src/pkg/syscall/ztypes_netbsd_amd64.go\n>\n>\n> Index: src/pkg/syscall/syscall_netbsd.go\n> ===================================================================\n> --- a/src/pkg/syscall/syscall_netbsd.go\n> +++ b/src/pkg/syscall/syscall_netbsd.go\n> @@ -74,13 +74,13 @@\n> \u00a0 \u00a0 \u00a0 \u00a0return\n> \u00a0}\n>\n> -// TODO\n> -func Sendfile(outfd int, infd int, offset *int64, count int) (written int,\n> err error) {\n> - \u00a0 \u00a0 \u00a0 return -1, ENOSYS\n> +//sys getdents(fd int, buf []byte) (n int, err error)\n> +func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {\n> + \u00a0 \u00a0 \u00a0 return getdents(fd, buf)\n> \u00a0}\n>\n> \u00a0// TODO\n> -func Getdirentries(fd int, buf []byte, basep *uintptr) (n int, err error) {\n> +func Sendfile(outfd int, infd int, offset *int64, count int) (written int,\n> err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0return -1, ENOSYS\n> \u00a0}\n>\n> @@ -176,7 +176,6 @@\n> \u00a0// __fhstatvfs140\n> \u00a0// __fstat30\n> \u00a0// __getcwd\n> -// __getdents30\n> \u00a0// __getfh30\n> \u00a0// __getlogin\n> \u00a0// __lstat30\n> Index: src/pkg/syscall/zsyscall_netbsd_386.go\n> ===================================================================\n> --- a/src/pkg/syscall/zsyscall_netbsd_386.go\n> +++ b/src/pkg/syscall/zsyscall_netbsd_386.go\n> @@ -263,6 +263,23 @@\n>\n> \u00a0// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n>\n> +func getdents(fd int, buf []byte) (n int, err error) {\n> + \u00a0 \u00a0 \u00a0 var _p0 unsafe.Pointer\n> + \u00a0 \u00a0 \u00a0 if len(buf) > 0 {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 _p0 = unsafe.Pointer(&buf[0])\n> + \u00a0 \u00a0 \u00a0 } else {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 _p0 = unsafe.Pointer(&_zero)\n> + \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 r0, _, e1 := Syscall(SYS_GETDENTS, uintptr(fd), uintptr(_p0),\n> uintptr(len(buf)))\n> + \u00a0 \u00a0 \u00a0 n = int(r0)\n> + \u00a0 \u00a0 \u00a0 if e1 != 0 {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 err = e1\n> + \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 return\n> +}\n> +\n> +// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n> +\n> \u00a0func Access(path string, mode uint32) (err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0_, _, e1 := Syscall(SYS_ACCESS,\n> uintptr(unsafe.Pointer(StringBytePtr(path))), uintptr(mode), 0)\n> \u00a0 \u00a0 \u00a0 \u00a0if e1 != 0 {\n> Index: src/pkg/syscall/zsyscall_netbsd_amd64.go\n> ===================================================================\n> --- a/src/pkg/syscall/zsyscall_netbsd_amd64.go\n> +++ b/src/pkg/syscall/zsyscall_netbsd_amd64.go\n> @@ -263,6 +263,23 @@\n>\n> \u00a0// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n>\n> +func getdents(fd int, buf []byte) (n int, err error) {\n> + \u00a0 \u00a0 \u00a0 var _p0 unsafe.Pointer\n> + \u00a0 \u00a0 \u00a0 if len(buf) > 0 {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 _p0 = unsafe.Pointer(&buf[0])\n> + \u00a0 \u00a0 \u00a0 } else {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 _p0 = unsafe.Pointer(&_zero)\n> + \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 r0, _, e1 := Syscall(SYS_GETDENTS, uintptr(fd), uintptr(_p0),\n> uintptr(len(buf)))\n> + \u00a0 \u00a0 \u00a0 n = int(r0)\n> + \u00a0 \u00a0 \u00a0 if e1 != 0 {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 err = e1\n> + \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 return\n> +}\n> +\n> +// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT\n> +\n> \u00a0func Access(path string, mode uint32) (err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0_, _, e1 := Syscall(SYS_ACCESS,\n> uintptr(unsafe.Pointer(StringBytePtr(path))), uintptr(mode), 0)\n> \u00a0 \u00a0 \u00a0 \u00a0if e1 != 0 {\n> Index: src/pkg/syscall/ztypes_netbsd_386.go\n> ===================================================================\n> --- a/src/pkg/syscall/ztypes_netbsd_386.go\n> +++ b/src/pkg/syscall/ztypes_netbsd_386.go\n> @@ -127,11 +127,11 @@\n> \u00a0}\n>\n> \u00a0type Dirent struct {\n> - \u00a0 \u00a0 \u00a0 Fileno uint32\n> + \u00a0 \u00a0 \u00a0 Fileno uint64\n> \u00a0 \u00a0 \u00a0 \u00a0Reclen uint16\n> + \u00a0 \u00a0 \u00a0 Namlen uint16\n> \u00a0 \u00a0 \u00a0 \u00a0Type \u00a0 uint8\n> - \u00a0 \u00a0 \u00a0 Namlen uint8\n> - \u00a0 \u00a0 \u00a0 Name \u00a0 [256]int8\n> + \u00a0 \u00a0 \u00a0 Name \u00a0 [512]int8\n> \u00a0}\n>\n> \u00a0type Fsid struct {\n> Index: src/pkg/syscall/ztypes_netbsd_amd64.go\n> ===================================================================\n> --- a/src/pkg/syscall/ztypes_netbsd_amd64.go\n> +++ b/src/pkg/syscall/ztypes_netbsd_amd64.go\n> @@ -130,11 +130,11 @@\n> \u00a0}\n>\n> \u00a0type Dirent struct {\n> - \u00a0 \u00a0 \u00a0 Fileno uint32\n> + \u00a0 \u00a0 \u00a0 Fileno uint64\n> \u00a0 \u00a0 \u00a0 \u00a0Reclen uint16\n> + \u00a0 \u00a0 \u00a0 Namlen uint16\n> \u00a0 \u00a0 \u00a0 \u00a0Type \u00a0 uint8\n> - \u00a0 \u00a0 \u00a0 Namlen uint8\n> - \u00a0 \u00a0 \u00a0 Name \u00a0 [256]int8\n> + \u00a0 \u00a0 \u00a0 Name \u00a0 [512]int8\n> \u00a0}\n>\n> \u00a0type Fsid struct {\n>\n>\n",
			"disapproval": false,
			"date": "2011-12-22 09:32:26.925391",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4643c96f1a68 ***\n\nsyscall: make getdirentries work on netbsd\n\nR=golang-dev, mikioh.mikioh\nCC=golang-dev\nhttp://codereview.appspot.com/5504068",
			"disapproval": false,
			"date": "2011-12-22 12:42:54.545308",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-22 02:11:14.214963",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 22 December 2011 20:32, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\n\n> Well, have you already succeeded to run \"cgo -godefs\" run perfectly?\n>\n\nNo, we're still a little way off that. There will be several steps to\ngetting a working cgo and now that things are built using 'go' we need to\nget that working as well (although we can obviously still run gomake for\nnow). One of things that go needs is a working Getdirentries(), hence this\nchange.\n\nI just tried but got a core dump.\n>\n\nI have some local hacks that get me further than a core dump - m4dh4tt3r is\nalso working on runtime fixes.\n",
			"disapproval": false,
			"date": "2011-12-22 11:12:37.894187",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Dec 22, 2011, at 8:12 PM, Joel Sing <jsing@google.com> wrote:\n\n> On 22 December 2011 20:32, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\n> Well, have you already succeeded to run \"cgo -godefs\" run perfectly?\n> \n> No, we're still a little way off that. There will be several steps to getting a working cgo and now that things are built using 'go' we need to get that working as well (although we can obviously still run gomake for now). One of things that go needs is a working Getdirentries(), hence this change.\n> \n> I just tried but got a core dump.\n> \n> I have some local hacks that get me further than a core dump - m4dh4tt3r is also working on runtime fixes.\n",
			"disapproval": false,
			"date": "2011-12-22 12:11:37.041922",
			"approval": true
		}
	],
	"owner_email": "jsing@google.com",
	"private": false,
	"base_url": "",
	"owner": "jsing",
	"subject": "code review 5504068: syscall: make getdirentries work on netbsd",
	"created": "2011-12-22 02:07:16.521331",
	"patchsets": [
		1,
		2001,
		4001,
		3,
		5008
	],
	"modified": "2011-12-22 13:29:48.055238",
	"closed": true,
	"issue": 5504068
}