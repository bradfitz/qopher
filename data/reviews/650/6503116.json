{
	"description": "spec: clarify section on string types\n\nStrings happen to be represented similarly to\nbyte slices internally, but they don't quite\nbehave like them: While strings can be indexed,\nsliced, and have their len() taken like byte\nslices, string elements are not addressable,\nmake() and cap() is not supported, range loops\noperate differently, and they are immutable (and\nthus behave like values rather then references).\n\nFixes issue 4018.",
	"cc": [
		"r@golang.org",
		"rsc@golang.org",
		"iant@golang.org",
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r, rsc, iant, ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-13 21:39:10.002610",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-14 03:48:04.509570",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=8df0b8f89db3 ***\n\nspec: clarify section on string types\n\nStrings happen to be represented similarly to\nbyte slices internally, but they don't quite\nbehave like them: While strings can be indexed,\nsliced, and have their len() taken like byte\nslices, string elements are not addressable,\nmake() and cap() is not supported, range loops\noperate differently, and they are immutable (and\nthus behave like values rather then references).\n\nFixes issue 4018.\n\nR=r, rsc, iant, ken\nCC=golang-dev\nhttp://codereview.appspot.com/6503116",
			"disapproval": false,
			"date": "2012-09-14 18:32:00.839140",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/6503116/diff/5001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/6503116/diff/5001/doc/go_spec.html#newcode792\ndoc/go_spec.html:792: the built-in function <a href=\"#Length_and_capacity\"><code>len(s)</code></a>.\nOn 2012/09/13 23:07:41, iant wrote:\n> I know this is parallel to the existing text, but the built-in function is not\n> \"len(s)\".  Perhaps simply say \"The length of a string (its size in bytes) can be\n> discovered using the built-in function len.\"\n\nDone.\n\nhttp://codereview.appspot.com/6503116/diff/5001/doc/go_spec.html#newcode793\ndoc/go_spec.html:793: The length is a compile-time constant if <code>s</code> is a string constant.\nOn 2012/09/13 23:07:41, iant wrote:\n> If you take the above change, then here s/s/the string/\n\nDone.\n\nhttp://codereview.appspot.com/6503116/diff/5001/doc/go_spec.html#newcode797\ndoc/go_spec.html:797: <code>s[i]</code> is the <code>i</code>.th byte of a\nOn 2012/09/13 23:07:41, iant wrote:\n> s/./'/ I guess.  Or rewrite.  I'm not sure this last clause is that useful\n> anyhow.\n\nDone.\n\nThe old version used italics which made the \"i\" in \"ith\" overlap with the \"th\". The dot helped, but using <code> is even better.",
			"disapproval": false,
			"date": "2012-09-14 00:04:04.103600",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6503116/diff/5001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/6503116/diff/5001/doc/go_spec.html#newcode792\ndoc/go_spec.html:792: the built-in function <a href=\"#Length_and_capacity\"><code>len(s)</code></a>.\nI know this is parallel to the existing text, but the built-in function is not \"len(s)\".  Perhaps simply say \"The length of a string (its size in bytes) can be discovered using the built-in function len.\"\n\nhttps://codereview.appspot.com/6503116/diff/5001/doc/go_spec.html#newcode793\ndoc/go_spec.html:793: The length is a compile-time constant if <code>s</code> is a string constant.\nIf you take the above change, then here s/s/the string/\n\nhttps://codereview.appspot.com/6503116/diff/5001/doc/go_spec.html#newcode797\ndoc/go_spec.html:797: <code>s[i]</code> is the <code>i</code>.th byte of a\ns/./'/ I guess.  Or rewrite.  I'm not sure this last clause is that useful anyhow.",
			"disapproval": false,
			"date": "2012-09-13 23:07:41.633670",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-14 04:53:32.424840",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-14 15:41:10.596970",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 6503116: spec: clarify section on string types",
	"created": "2012-09-13 21:39:05.769010",
	"patchsets": [
		1,
		3001,
		5001,
		4002,
		4003
	],
	"modified": "2012-09-14 18:32:02.326960",
	"closed": true,
	"issue": 6503116
}