{
	"description": "math: Faster Tanh\n\nFrom 159 to 47.6 ns/op; slightly more accurate.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com",
		"mtj@google.com",
		"dave@cheney.net",
		"remyoudompheng@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mtj@google.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/14 09:04:18, remyoudompheng wrote:\n> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go\n> File src/pkg/math/tanh.go (right):\n> \n> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode55\n> src/pkg/math/tanh.go:55: var tanhP = [...]float64{\n> Is it faster/clearer to have these as constants instead of static variables?\n> \n\nI looked at this in November 2011. If you review issues 2446 and 2447, you will see the reasons for my choice of static variables rather than constants. If you think the floating-point code generation has improved since then, I'll be glad to re-do the tests.\n\n> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode83\n> src/pkg/math/tanh.go:83: z = x +\n> x*s*((tanhP[0]*s+tanhP[1])*s+tanhP[2])/(((s+tanhQ[0])*s+tanhQ[1])*s+tanhQ[2])\n> x + x * s * ((P0 * s + P1) * s + P2) / ((Q0 * s + Q1) * s + Q2)\n> \n> (and I would reverse the indexing so that P(x) = P0 + P1\u00b7x\u00b2 + P2\u00b7x\u2074, Q(x) = Q0 +\n> Q1\u00b7x\u00b2 + Q2\u00b7x\u2074 but that's a personal preference)\n\nI tend to place the highest exponent on the left (A\u00b7x\u00b2 + B\u00b7x + C), but perhaps that's a relict of algebra teaching 50 years ago.",
			"disapproval": false,
			"date": "2012-09-14 14:29:31.419430",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mtj@google.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go\nFile src/pkg/math/tanh.go (right):\n\nhttp://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode1\nsrc/pkg/math/tanh.go:1: // Copyright 2012 The Go Authors. All rights reserved.\nWe traditionally don't update the copyright date of existing files.",
			"disapproval": false,
			"date": "2012-09-14 06:33:39.218530",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mtj@google.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-17 21:15:36.993680",
			"approval": true
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mtj@google.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/14 03:13:40, rsc wrote:\n> LGTM\n> \n> Let me know about the const - just want to make sure one of the MAXLOGs\n> shouldn't be MINLOG.\n\nIt is confusing, so I changed the code to put MAXLOG and MINLOG in the comments. Only MAXLOG remains in the function body.\n \n> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go\n> File src/pkg/math/tanh.go (right):\n> \n> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode75\n> src/pkg/math/tanh.go:75: MINLOG = -8.872283911167299960540e+01 // log(2**-128)\n> Unused?\n\nRemoved from function body.",
			"disapproval": false,
			"date": "2012-09-14 15:19:10.139340",
			"approval": false
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-14 03:09:31.926910",
			"approval": false
		},
		{
			"sender": "mtj@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Original looked like this:\r\n\r\nz = fabs(x);\r\nif( z > 0.5 * MAXLOG )\r\n\t{\r\n\tif( x > 0 )\r\n\t\treturn( 1.0 );\r\n\telse\r\n\t\treturn( -1.0 );\r\n\t}\r\nif( z >= 0.625 )\r\n\t{\r\n\ts = exp(2.0*z);\r\n\tz =  1.0  - 2.0/(s + 1.0);\r\n\tif( x < 0 )\r\n\t\tz = -z;\r\n\t}\r\nelse\r\n\t{\r\n\tif( x == 0.0 )\r\n\t  return(x);\r\n\ts = x * x;\r\n\tz = polevl( s, P, 2 )/p1evl(s, Q, 3);\r\n\tz = x * s * z;\r\n\tz = x + z;\r\n\t}\r\nreturn( z );\r\n\r\nOn Thu, Sep 13, 2012 at 8:19 PM, Charlie Dorian <cldorian@gmail.com> wrote:\r\n> The two comparisons to MAXLOG allowed me to avoid another case and a\r\n> call to IsNaN.\r\n>\r\n> On Thu, Sep 13, 2012 at 11:17 PM, Charlie Dorian <cldorian@gmail.com> wrote:\r\n>> I included the constant MINLOG because it is mentioned in the\r\n>> documentation; it is not used in the code.\r\n>>\r\n>> On Thu, Sep 13, 2012 at 11:13 PM,  <rsc@golang.org> wrote:\r\n>>> LGTM\r\n>>>\r\n>>> Let me know about the const - just want to make sure one of the MAXLOGs\r\n>>> shouldn't be MINLOG.\r\n>>>\r\n>>>\r\n>>>\r\n>>> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go\r\n>>> File src/pkg/math/tanh.go (right):\r\n>>>\r\n>>> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode75\r\n>>> src/pkg/math/tanh.go:75: MINLOG = -8.872283911167299960540e+01 //\r\n>>> log(2**-128)\r\n>>> Unused?\r\n>>>\r\n>>> http://codereview.appspot.com/6500121/\r\n\r\n\r\n\r\n-- \r\nMichael T. Jones | Chief Technology Advocate  | mtj@google.com |  +1\r\n650-335-5765\r\n",
			"disapproval": false,
			"date": "2012-09-14 03:34:40.878200",
			"approval": false
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I included the constant MINLOG because it is mentioned in the\r\ndocumentation; it is not used in the code.\r\n\r\nOn Thu, Sep 13, 2012 at 11:13 PM,  <rsc@golang.org> wrote:\r\n> LGTM\r\n>\r\n> Let me know about the const - just want to make sure one of the MAXLOGs\r\n> shouldn't be MINLOG.\r\n>\r\n>\r\n>\r\n> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go\r\n> File src/pkg/math/tanh.go (right):\r\n>\r\n> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode75\r\n> src/pkg/math/tanh.go:75: MINLOG = -8.872283911167299960540e+01 //\r\n> log(2**-128)\r\n> Unused?\r\n>\r\n> http://codereview.appspot.com/6500121/\r\n",
			"disapproval": false,
			"date": "2012-09-14 03:17:13.624070",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mtj@google.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=595850cc051e ***\n\nmath: Faster Tanh\n\nFrom 159 to 47.6 ns/op; slightly more accurate.\n\nR=rsc, golang-dev, mtj, dave, remyoudompheng\nCC=golang-dev\nhttp://codereview.appspot.com/6500121\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-09-17 21:18:19.337230",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nLet me know about the const - just want to make sure one of the MAXLOGs shouldn't be MINLOG.\n\nhttp://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go\nFile src/pkg/math/tanh.go (right):\n\nhttp://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode75\nsrc/pkg/math/tanh.go:75: MINLOG = -8.872283911167299960540e+01 // log(2**-128)\nUnused?",
			"disapproval": false,
			"date": "2012-09-14 03:13:40.891640",
			"approval": true
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The two comparisons to MAXLOG allowed me to avoid another case and a\r\ncall to IsNaN.\r\n\r\nOn Thu, Sep 13, 2012 at 11:17 PM, Charlie Dorian <cldorian@gmail.com> wrote:\r\n> I included the constant MINLOG because it is mentioned in the\r\n> documentation; it is not used in the code.\r\n>\r\n> On Thu, Sep 13, 2012 at 11:13 PM,  <rsc@golang.org> wrote:\r\n>> LGTM\r\n>>\r\n>> Let me know about the const - just want to make sure one of the MAXLOGs\r\n>> shouldn't be MINLOG.\r\n>>\r\n>>\r\n>>\r\n>> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go\r\n>> File src/pkg/math/tanh.go (right):\r\n>>\r\n>> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode75\r\n>> src/pkg/math/tanh.go:75: MINLOG = -8.872283911167299960540e+01 //\r\n>> log(2**-128)\r\n>> Unused?\r\n>>\r\n>> http://codereview.appspot.com/6500121/\r\n",
			"disapproval": false,
			"date": "2012-09-14 03:19:58.182170",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mtj@google.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go\nFile src/pkg/math/tanh.go (right):\n\nhttp://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode55\nsrc/pkg/math/tanh.go:55: var tanhP = [...]float64{\nIs it faster/clearer to have these as constants instead of static variables?\n\nhttp://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode83\nsrc/pkg/math/tanh.go:83: z = x + x*s*((tanhP[0]*s+tanhP[1])*s+tanhP[2])/(((s+tanhQ[0])*s+tanhQ[1])*s+tanhQ[2])\nx + x * s * ((P0 * s + P1) * s + P2) / ((Q0 * s + Q1) * s + Q2)\n\n(and I would reverse the indexing so that P(x) = P0 + P1\u00b7x\u00b2 + P2\u00b7x\u2074, Q(x) = Q0 + Q1\u00b7x\u00b2 + Q2\u00b7x\u2074 but that's a personal preference)",
			"disapproval": false,
			"date": "2012-09-14 09:04:18.572530",
			"approval": false
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mtj@google.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, golang-dev@googlegroups.com, mtj@google.com, dave@cheney.net, remyoudompheng@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-14 15:15:59.315950",
			"approval": false
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mtj@google.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/14 06:33:39, dfc wrote:\n> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go\n> File src/pkg/math/tanh.go (right):\n> \n> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode1\n> src/pkg/math/tanh.go:1: // Copyright 2012 The Go Authors. All rights reserved.\n> We traditionally don't update the copyright date of existing files.\n\nThanks; I'll change it back. I wasn't sure of the tradition.",
			"disapproval": false,
			"date": "2012-09-14 14:31:40.408760",
			"approval": false
		},
		{
			"sender": "cldorian@gmail.com",
			"recipients": [
				"cldorian@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mtj@google.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I reverted to the original logic sequence -- it was clearer (and faster by 2 ns).\n\nOn 2012/09/14 03:34:40, mtj1 wrote:\n> Original looked like this:\n> \n> z = fabs(x);\n> if( z > 0.5 * MAXLOG )\n> \t{\n> \tif( x > 0 )\n> \t\treturn( 1.0 );\n> \telse\n> \t\treturn( -1.0 );\n> \t}\n> if( z >= 0.625 )\n> \t{\n> \ts = exp(2.0*z);\n> \tz =  1.0  - 2.0/(s + 1.0);\n> \tif( x < 0 )\n> \t\tz = -z;\n> \t}\n> else\n> \t{\n> \tif( x == 0.0 )\n> \t  return(x);\n> \ts = x * x;\n> \tz = polevl( s, P, 2 )/p1evl(s, Q, 3);\n> \tz = x * s * z;\n> \tz = x + z;\n> \t}\n> return( z );\n> \n> On Thu, Sep 13, 2012 at 8:19 PM, Charlie Dorian <mailto:cldorian@gmail.com> wrote:\n> > The two comparisons to MAXLOG allowed me to avoid another case and a\n> > call to IsNaN.\n> >\n> > On Thu, Sep 13, 2012 at 11:17 PM, Charlie Dorian <mailto:cldorian@gmail.com> wrote:\n> >> I included the constant MINLOG because it is mentioned in the\n> >> documentation; it is not used in the code.\n> >>\n> >> On Thu, Sep 13, 2012 at 11:13 PM,  <mailto:rsc@golang.org> wrote:\n> >>> LGTM\n> >>>\n> >>> Let me know about the const - just want to make sure one of the MAXLOGs\n> >>> shouldn't be MINLOG.\n> >>>\n> >>>\n> >>>\n> >>> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go\n> >>> File src/pkg/math/tanh.go (right):\n> >>>\n> >>>\n> http://codereview.appspot.com/6500121/diff/5001/src/pkg/math/tanh.go#newcode75\n> >>> src/pkg/math/tanh.go:75: MINLOG = -8.872283911167299960540e+01 //\n> >>> log(2**-128)\n> >>> Unused?\n> >>>\n> >>> http://codereview.appspot.com/6500121/\n> \n> \n> \n> -- \n> Michael T. Jones | Chief Technology Advocate  | mailto:mtj@google.com |  +1\n> 650-335-5765",
			"disapproval": false,
			"date": "2012-09-14 15:20:59.685150",
			"approval": false
		}
	],
	"owner_email": "cldorian@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Charlie Dorian",
	"subject": "code review 6500121: math: Faster Tanh",
	"created": "2012-09-14 03:09:07.046450",
	"patchsets": [
		1,
		2001,
		5001,
		11002
	],
	"modified": "2012-09-17 21:23:36.284520",
	"closed": true,
	"issue": 6500121
}