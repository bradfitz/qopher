{
	"description": "runtime/debug: make TestFreeOSMemory repeatable\nFixes issue 4835.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"fullung@gmail.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"fullung@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/18 11:42:48, albert.strasheim wrote:\n> LGTM.\n> \n> Fixes issue 4835.\n\nDone.",
			"disapproval": false,
			"date": "2013-02-18 11:46:26.289420",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-18 11:39:43.712240",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"fullung@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nFixes issue 4835.",
			"disapproval": false,
			"date": "2013-02-18 11:42:48.811920",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"fullung@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It always works the first time, right? I suggest moving the allocation back to the global (it is there so that there cannot be any trace of the allocation lying around on the test goroutine stack) and then just make the test do:\n\nif big == nil {\n    return\n}\n\nso that subsequent tests do not repeat the test.",
			"disapproval": false,
			"date": "2013-02-19 16:32:52.761520",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"fullung@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=bfaaa2075564 ***\n\nruntime/debug: make TestFreeOSMemory repeatable\nFixes issue 4835.\n\nR=golang-dev, fullung\nCC=golang-dev\nhttps://codereview.appspot.com/7319050",
			"disapproval": false,
			"date": "2013-02-18 11:46:55.421870",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello\n\nI clearly didn't test this properly. It now fails with:\n\n--- FAIL: TestFreeOSMemory-89 (0.00 seconds)\ngarbage_test.go:86: released before=0; released after=0; did not go up\nFAIL\n\nRegards\n\nAlbert",
			"disapproval": false,
			"date": "2013-02-19 03:36:03.745890",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "mailed https://codereview.appspot.com/7379043\r\n\r\n\r\n\r\nOn Tue, Feb 19, 2013 at 8:32 PM, <rsc@golang.org> wrote:\r\n\r\n> It always works the first time, right? I suggest moving the allocation\r\n> back to the global (it is there so that there cannot be any trace of the\r\n> allocation lying around on the test goroutine stack) and then just make\r\n> the test do:\r\n>\r\n> if big == nil {\r\n>     return\r\n> }\r\n>\r\n> so that subsequent tests do not repeat the test.\r\n>\r\n>\r\n> https://codereview.appspot.**com/7319050/<https://codereview.appspot.com/7319050/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-20 08:15:56.476050",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 7319050: runtime/debug: make TestFreeOSMemory repeatable",
	"created": "2013-02-18 11:38:55.672480",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		12001
	],
	"modified": "2013-02-19 16:32:52.859820",
	"closed": true,
	"issue": 7319050
}