{
	"description": "syscall: check for invalid characters in Setenv on Unix\n\nOn POSIX, '=' in key is explicitly invalid, and '\\x00' in key/value is implicitly invalid.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "speter.go1@gmail.com",
			"recipients": [
				"speter.go1@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-08 13:43:40.845030",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"speter.go1@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=9d68dabd0026 ***\n\nsyscall: check for invalid characters in Setenv on Unix\n\nOn POSIX, '=' in key is explicitly invalid, and '\\x00' in key/value is implicitly invalid.\n\nR=golang-dev, iant, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7311061\n\nCommitter: Ian Lance Taylor <iant@golang.org>",
			"disapproval": false,
			"date": "2013-02-08 18:45:51.845680",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"speter.go1@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm not sure whether this is necessary or not.\n\nhttps://codereview.appspot.com/7311061/diff/7001/src/pkg/syscall/env_unix.go\nFile src/pkg/syscall/env_unix.go (right):\n\nhttps://codereview.appspot.com/7311061/diff/7001/src/pkg/syscall/env_unix.go#newcode74\nsrc/pkg/syscall/env_unix.go:74: for _, b := range []byte(key) {\nThis will convert the string to []byte, using memory.  Write\n    for i := 0; i < len(key); i++\nand test key[i].",
			"disapproval": false,
			"date": "2013-02-08 14:50:32.533110",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 8, 2013 at 6:50 AM, <iant@golang.org> wrote:\r\n\r\n> I'm not sure whether this is necessary or not.\r\n>\r\n\r\nI probably wouldn't change the Setenv signature for this or introduce a new\r\nerror type, but given that this already returns EINVAL, this seems fine to\r\nme.  (except for the allocation you mentioned).\r\n",
			"disapproval": false,
			"date": "2013-02-08 15:28:49.412750",
			"approval": false
		},
		{
			"sender": "speter.go1@gmail.com",
			"recipients": [
				"speter.go1@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please take another look.\n\n> I'm not sure whether this is necessary or not.\n\nNot checking for '\\x00' is inconsistent with the rest of the syscall functions (which return EINVAL), and not checking for '=' is inconsistent with the OS -- at least with linux, freebsd, openbsd, and netbsd. For darwin, a man page I found for setenv(3) indicates that it tolerates a trailing '=' appended to the key, but IIUC the equivalent has never been supported or considered for support in Go.\n\nhttps://codereview.appspot.com/7311061/diff/7001/src/pkg/syscall/env_unix.go\nFile src/pkg/syscall/env_unix.go (right):\n\nhttps://codereview.appspot.com/7311061/diff/7001/src/pkg/syscall/env_unix.go#newcode74\nsrc/pkg/syscall/env_unix.go:74: for _, b := range []byte(key) {\nOn 2013/02/08 14:50:32, iant wrote:\n> This will convert the string to []byte, using memory.  Write\n>     for i := 0; i < len(key); i++\n> and test key[i].\n\nDone.",
			"disapproval": false,
			"date": "2013-02-08 17:20:39.231140",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"speter.go1@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-02-08 18:45:40.237190",
			"approval": true
		}
	],
	"owner_email": "speter.go1@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "speter",
	"subject": "code review 7311061: syscall: check for invalid characters in Setenv on Unix",
	"created": "2013-02-08 13:27:55.381280",
	"patchsets": [
		1,
		2001,
		3003,
		7001,
		10002
	],
	"modified": "2013-02-08 21:28:40.644130",
	"closed": true,
	"issue": 7311061
}