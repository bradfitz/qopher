{
	"description": "net/http/httptest: add examples",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the feedback, PTAL.\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go\nFile src/pkg/net/http/httptest/example_test.go (right):\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go#newcode17\nsrc/pkg/net/http/httptest/example_test.go:17: http.Error(w, req.URL.Path+\": something went horribly wrong.\", http.StatusInternalServerError)\nOn 2013/02/07 22:21:43, adg wrote:\n> remove the period from the message\n\nDone\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go#newcode29\nsrc/pkg/net/http/httptest/example_test.go:29: //Output: 500 - /foo: something went horribly wrong.\nOn 2013/02/07 22:21:43, adg wrote:\n> \"// Output:\"\n> \n> add the space.\n\nDone\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go#newcode36\nsrc/pkg/net/http/httptest/example_test.go:36: server := httptest.NewServer(http.HandlerFunc(handler))\nOn 2013/02/07 22:31:14, bradfitz wrote:\n> in all the net/http tests, we never make a variable for \"handler\" even... just:\n> \n> server := httptest.NewServer(http.HandlerFunc(w http.ResponseWriter, req\n> *http.Request) {\n>        ....\n> })\n> defer server.Close()\n> \n> We also normally say \"ts\", but \"server\" is fine.\n\nI took a look at how this was used in net/http and reworked it in to a similar style.\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go#newcode41\nsrc/pkg/net/http/httptest/example_test.go:41: log.Fatal(\"server did not respond\")\nOn 2013/02/07 22:31:14, bradfitz wrote:\n> how do you know? maybe there was no DNS and you never even reached the server.\n> don't throw out err. it tries to say something useful.\n\nTotally, not sure why I ate the error here but not in the other spot. Fixed to just print err.\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go#newcode50\nsrc/pkg/net/http/httptest/example_test.go:50: //Output: Hello, client\nOn 2013/02/07 22:21:43, adg wrote:\n> ditto\n\nDone",
			"disapproval": false,
			"date": "2013-02-08 03:09:44.651030",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-06 05:38:24.312030",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Nice examples\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go\nFile src/pkg/net/http/httptest/example_test.go (right):\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go#newcode17\nsrc/pkg/net/http/httptest/example_test.go:17: http.Error(w, req.URL.Path+\": something went horribly wrong.\", http.StatusInternalServerError)\nremove the period from the message\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go#newcode29\nsrc/pkg/net/http/httptest/example_test.go:29: //Output: 500 - /foo: something went horribly wrong.\n\"// Output:\"\n\nadd the space.\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go#newcode50\nsrc/pkg/net/http/httptest/example_test.go:50: //Output: Hello, client\nditto",
			"disapproval": false,
			"date": "2013-02-07 22:21:43.419410",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go\nFile src/pkg/net/http/httptest/example_test.go (right):\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go#newcode36\nsrc/pkg/net/http/httptest/example_test.go:36: server := httptest.NewServer(http.HandlerFunc(handler))\nin all the net/http tests, we never make a variable for \"handler\" even... just:\n\nserver := httptest.NewServer(http.HandlerFunc(w http.ResponseWriter, req *http.Request) {\n       ....\n})\ndefer server.Close()\n\nWe also normally say \"ts\", but \"server\" is fine.\n\nhttps://codereview.appspot.com/7314046/diff/4001/src/pkg/net/http/httptest/example_test.go#newcode41\nsrc/pkg/net/http/httptest/example_test.go:41: log.Fatal(\"server did not respond\")\nhow do you know? maybe there was no DNS and you never even reached the server. don't throw out err. it tries to say something useful.",
			"disapproval": false,
			"date": "2013-02-07 22:31:14.721450",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7314046/diff/4002/src/pkg/net/http/httptest/example_test.go\nFile src/pkg/net/http/httptest/example_test.go (right):\n\nhttps://codereview.appspot.com/7314046/diff/4002/src/pkg/net/http/httptest/example_test.go#newcode17\nsrc/pkg/net/http/httptest/example_test.go:17: http.Error(w, r.URL.Path+\": something went horribly wrong\", http.StatusInternalServerError)\nthis is an XSS vector, so makes for a bad example.  http.Error doesn't escape anything.  Just say \"something failed\", or use html.EscapeString.",
			"disapproval": false,
			"date": "2013-02-08 03:51:55.928570",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-08 04:14:08.924510",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\r\n\r\nI'll reorder one line before I submit.\r\n\r\n\r\nOn Thu, Feb 7, 2013 at 8:14 PM, <kamil.kisiel@gmail.com> wrote:\r\n\r\n> Hello golang-dev@googlegroups.com, adg@golang.org, bradfitz@golang.org\r\n> (cc: golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> https://codereview.appspot.**com/7314046/<https://codereview.appspot.com/7314046/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-08 17:18:09.878180",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=bad13530d9b3 ***\n\nnet/http/httptest: add examples\n\nR=golang-dev, adg, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7314046\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2013-02-08 17:20:55.767090",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=close",
			"disapproval": false,
			"date": "2013-07-20 21:25:00.392170",
			"approval": false
		}
	],
	"owner_email": "kamil.kisiel@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "kisielk",
	"subject": "code review 7314046: net/http/httptest: add examples",
	"created": "2013-02-06 05:36:35.771560",
	"patchsets": [
		1,
		2001,
		4001,
		4002,
		7002
	],
	"modified": "2013-07-20 21:25:00.581180",
	"closed": false,
	"issue": 7314046
}