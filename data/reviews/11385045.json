{
	"description": "runtime: print g0 stack if we throw on it and GOTRACEBACK>=2.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://khr%40golang.org@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-16 22:02:26.587470",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nPlease avoid the implicit comparison with zero. It's a little easier to\r\nread later, and that habit also happens to avoid a compiler crash in 6c\r\nwhen the expression is a vlong [sic].\r\n\r\nif((t = ...) > 0)\r\n",
			"disapproval": false,
			"date": "2013-07-16 23:37:40.406590",
			"approval": true
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=95e1e4bd8da9 ***\n\nruntime: print g0 stack if we throw on it and GOTRACEBACK>=2.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/11385045",
			"disapproval": false,
			"date": "2013-07-16 23:44:26.681380",
			"approval": false
		}
	],
	"owner_email": "khr@golang.org",
	"private": false,
	"base_url": "",
	"owner": "khr",
	"subject": "code review 11385045: runtime: print g0 stack if we throw on it and GOTRACEBA...",
	"created": "2013-07-16 21:57:06.667610",
	"patchsets": [
		1,
		3001,
		6001,
		11001
	],
	"modified": "2013-07-16 23:44:28.163890",
	"closed": true,
	"issue": 11385045
}