{
	"description": "json: Properly handle nil slices.\n\nMarshal nil slices as null and parse null value as a nil slice.\nFixes issue 2278.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "awreece@gmail.com",
			"recipients": [
				"awreece@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I added fixed issue 2278 about marshaling nil slices correctly, and added some test cases.",
			"disapproval": false,
			"date": "2011-10-18 21:02:06.570725",
			"approval": false
		},
		{
			"sender": "awreece@gmail.com",
			"recipients": [
				"awreece@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-18 21:23:18.313088",
			"approval": false
		},
		{
			"sender": "awreece@gmail.com",
			"recipients": [
				"awreece@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I am pinging this CL again because I didn't see it in the golang-dev mailing list.",
			"disapproval": false,
			"date": "2011-10-24 18:00:24.293103",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"awreece@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5257053/diff/5001/src/pkg/json/decode_test.go\nFile src/pkg/json/decode_test.go (right):\n\nhttp://codereview.appspot.com/5257053/diff/5001/src/pkg/json/decode_test.go#newcode246\nsrc/pkg/json/decode_test.go:246: type Bslice struct {\nThe behavior for a nil slice was already tested below\n(you had to update the test case).\nThis case should be redundant.  Please delete,\nor extend the case below if there is more to test.\nThat data structure defines the set of all things that\nneed testing, and then all the specific tests use it.\n\nThanks.\n\nhttp://codereview.appspot.com/5257053/diff/5001/src/pkg/json/decode_test.go#newcode562\nsrc/pkg/json/decode_test.go:562: \"EmptyMap\": null,\nWhy isn't this {}?  It seems like it should be.\n\nhttp://codereview.appspot.com/5257053/diff/5001/src/pkg/json/decode_test.go#newcode583\nsrc/pkg/json/decode_test.go:583: \"EmptySlice\": null,\nWhy is this changing?  This seems wrong.\nOnly the nil slice should be null.\n\nhttp://codereview.appspot.com/5257053/diff/5001/src/pkg/json/decode_test.go#newcode585\nsrc/pkg/json/decode_test.go:585: \"StringSlice\": null,\nThese two changing is even more troubling,\nbecause allValue has them set to non-empty slices.",
			"disapproval": false,
			"date": "2011-10-24 19:06:44.568036",
			"approval": false
		},
		{
			"sender": "awreece@gmail.com",
			"recipients": [
				"awreece@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "pallValue sets all non pointer values to there zero values, and thus all non pointer slices must get marshaled as null.\n\nhttp://codereview.appspot.com/5257053/diff/5001/src/pkg/json/decode_test.go\nFile src/pkg/json/decode_test.go (right):\n\nhttp://codereview.appspot.com/5257053/diff/5001/src/pkg/json/decode_test.go#newcode246\nsrc/pkg/json/decode_test.go:246: type Bslice struct {\nOn 2011/10/24 19:06:44, rsc wrote:\n> The behavior for a nil slice was already tested below\n> (you had to update the test case).\n> This case should be redundant.  Please delete,\n> or extend the case below if there is more to test.\n> That data structure defines the set of all things that\n> need testing, and then all the specific tests use it.\n> \n> Thanks.\n\nDone.\n\nhttp://codereview.appspot.com/5257053/diff/5001/src/pkg/json/decode_test.go#newcode562\nsrc/pkg/json/decode_test.go:562: \"EmptyMap\": null,\nOn 2011/10/24 19:06:44, rsc wrote:\n> Why isn't this {}?  It seems like it should be.\n\nIt actually isn't supposed to be. In line 363 above, pallValue only initialized PFields, so everything else gets set to the zero value. In the case of slices, the zero value is nil and they should be marshaled as null.\n\nI can change this in one of two ways: I can initialize it above to a non-zero value or I can have it marshal to null here. I chose the latter, but I am willing to change.\n\nhttp://codereview.appspot.com/5257053/diff/5001/src/pkg/json/decode_test.go#newcode583\nsrc/pkg/json/decode_test.go:583: \"EmptySlice\": null,\nOn 2011/10/24 19:06:44, rsc wrote:\n> Why is this changing?  This seems wrong.\n> Only the nil slice should be null.\n\nSee previous comment.\n\nhttp://codereview.appspot.com/5257053/diff/5001/src/pkg/json/decode_test.go#newcode585\nsrc/pkg/json/decode_test.go:585: \"StringSlice\": null,\nOn 2011/10/24 19:06:44, rsc wrote:\n> These two changing is even more troubling,\n> because allValue has them set to non-empty slices.\n\nUnfortunately, that is not true. pallValue sets these fields to the zero value, which is nil for slices. See previous comment.",
			"disapproval": false,
			"date": "2011-10-25 00:54:40.165671",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-10-31 15:29:54.202914",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-10-31 15:42:07.377827",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"awreece@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f8f1f5c76c8b ***\n\njson: Properly handle nil slices.\n\nMarshal nil slices as null and parse null value as a nil slice.\nFixes issue 2278.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5257053\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-10-31 17:59:25.172564",
			"approval": false
		},
		{
			"sender": "awreece@gmail.com",
			"recipients": [
				"awreece@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-04-16 22:29:55.162117",
			"approval": false
		}
	],
	"owner_email": "awreece@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "awreece",
	"subject": "code review 5257053: json: Properly handle nil slices.",
	"created": "2011-10-11 05:32:09.534427",
	"patchsets": [
		1,
		2001,
		5001,
		13001
	],
	"modified": "2012-04-16 22:29:57.192594",
	"closed": true,
	"issue": 5257053
}