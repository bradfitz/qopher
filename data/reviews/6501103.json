{
	"description": "faq: another way to solve the closure/variable/range complaint\nIt's easier just to declare a new variable.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-07 15:58:29.690460",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Fri, Sep 7, 2012 at 8:58 AM, <r@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> faq: another way to solve the closure/variable/range complaint\r\n> It's easier just to declare a new variable.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6501103/<http://codereview.appspot.com/6501103/>\r\n>\r\n> Affected files:\r\n>   M doc/go_faq.html\r\n>\r\n>\r\n> Index: doc/go_faq.html\r\n> ==============================**==============================**=======\r\n> --- a/doc/go_faq.html\r\n> +++ b/doc/go_faq.html\r\n> @@ -1220,8 +1220,9 @@\r\n>  </p>\r\n>\r\n>  <p>\r\n> -To bind the value of <code>v</code> to each closure as they are launched,\r\n> one\r\n> -could modify the inner loop to read:\r\n> +To bind the current value of <code>v</code> to each closure as it is\r\n> launched, one\r\n> +must modify the inner loop to create a new variable each iteration.\r\n> +One way is to pass the variable as an argument to the closure:\r\n>  </p>\r\n>\r\n>  <pre>\r\n> @@ -1239,6 +1240,21 @@\r\n>  the variable <code>u</code>.\r\n>  </p>\r\n>\r\n> +<p>\r\n> +Even easier is just to create a new variable, using a declaration style\r\n> that may\r\n> +seem odd but works fine in Go:\r\n> +</p>\r\n> +\r\n> +<pre>\r\n> +    for _, v := range values {\r\n> +        <b>v := v</b> // create a new 'v'.\r\n> +        go func() {\r\n> +            fmt.Println(<b>v</b>)\r\n> +            done &lt;- true\r\n> +        }()\r\n> +    }\r\n> +</pre>\r\n> +\r\n>  <h2 id=\"Control_flow\">Control flow</h2>\r\n>\r\n>  <h3 id=\"Does_Go_have_a_ternary_**form\">\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-09-07 16:02:17.180260",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3bca7b333e00 ***\n\nfaq: another way to solve the closure/variable/range complaint\nIt's easier just to declare a new variable.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6501103",
			"disapproval": false,
			"date": "2012-09-07 16:11:45.140270",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6501103: faq: another way to solve the closure/variable/range co...",
	"created": "2012-09-07 15:58:26.444080",
	"patchsets": [
		1,
		3
	],
	"modified": "2012-09-07 16:11:46.017930",
	"closed": true,
	"issue": 6501103
}