{
	"description": "misc/vim: restore fileencodings.\r\nCurrently, ftdetect/gofiletype.vim set fileencodings to open the file as\r\nutf-8 encoding event if the file does not contain multibyte characters.\r\nBut fileencodings is global option.\r\n\r\n$ vim foo.txt\r\n:set fileencodings\r\nutf-8,ucs-bom,cp932\r\n\r\n$ vim foo.go\r\n:set fileencodings\r\nutf-8\r\n\r\nThis change restore fileencodings before opening the file.\r\nAlso added specify fileformats=unix.",
	"cc": [
		"golang-dev@googlecode.com",
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Would it be better to replace \"fileencoding=utf-8\" with\n\"encoding=utf-8\" (and force fileencoding to be empty)? Go source files\nare defined to be UTF-8.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-03-02 06:45:39.709352",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Mar 2, 2012 at 6:51 PM, mattn <mattn.jp@gmail.com> wrote:\n\n> No. Many japanese uses set encoding=cp932 yet. And they treat files which is\n> cp932/utf-8 encoded both.\n> Of couse if go source file contain utf-8 characters which can't convert into\n> cp932, vim show \"conversion error\".\n\ncp932 is not a valid representation of Go source code, which is\ndefined by the specification to be UTF-8.\n  http://golang.org/doc/go_spec.html#Source_code_representation\n",
			"disapproval": false,
			"date": "2012-03-02 07:57:27.686685",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlecode.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttp://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-02 02:54:31.269167",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> On Friday, March 2, 2012 3:45:39 PM UTC+9, David Symonds wrote:\n>  Would it be better to replace \"fileencoding=utf-8\" with\n>  \"encoding=utf-8\" (and force fileencoding to be empty)? Go source files\n>  are defined to be UTF-8.\n\nNo. Many japanese uses set encoding=cp932 yet. And they treat files which \nis cp932/utf-8 encoded both.\nOf couse if go source file contain utf-8 characters which can't convert \ninto cp932, vim show \"conversion error\".\nHowever, they users double byte character sets. Because utf-8's glyph is \nnot same as cp932's one.\nAnd, if changing encoding to utf-8, some vim plugins which is running then \nmay break behavior.\n\n\n",
			"disapproval": false,
			"date": "2012-03-02 07:51:53.976989",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> cp932 is not a valid representation of Go source code, which is\n>  defined by the specification to be UTF-8.\n>    http://golang.org/doc/go_spec.html#Source_code_representation \n\nYes, I know. When setting like below,\n\nset encoding=cp932\nset fileencodings=utf-8\n\nvim try to open the file as utf-8 encoding. Thus, it can read/write utf-8 \nfile.\n\nOn Friday, March 2, 2012 4:57:27 PM UTC+9, David Symonds wrote:\n>\n> On Fri, Mar 2, 2012 at 6:51 PM, mattn <mattn.jp@gmail.com> wrote:\n>\n> > No. Many japanese uses set encoding=cp932 yet. And they treat files \n> which is\n> > cp932/utf-8 encoded both.\n> > Of couse if go source file contain utf-8 characters which can't convert \n> into\n> > cp932, vim show \"conversion error\".\n>\n> cp932 is not a valid representation of Go source code, which is\n> defined by the specification to be UTF-8.\n>   http://golang.org/doc/go_spec.html#Source_code_representation\n>\n>",
			"disapproval": false,
			"date": "2012-03-02 08:35:02.573062",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2012-03-08 05:51:42.254446",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry, I haven't forgotten about this. I've just been away. I'll study\nthis closer tomorrow.\n",
			"disapproval": false,
			"date": "2012-03-08 05:57:55.516501",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm still not comfortable with this yet. Something that is bugging me\nis that this seems more complex than it should be. Can you point at\nany other file type plugins that do this kind of machination?\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-03-09 13:09:00.247888",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I'm still not comfortable with this yet. Something that is bugging me\n> is that this seems more complex than it should be. Can you point at\n> any other file type plugins that do this kind of machination?\n\nNo, Go is particular. For example, java endorse to write the code as utf-8 \nencoding. But it's not \"MUST\". Go enforce to write the code as utf-8.\n\nI (or CJK people) often write the code(C/C++/ruby/perl/python etc) which is \nnot utf-8 encoding with vim. They always set options like following.\n\n:set encoding=cp932 \" or another DBCS encoding.\n:set fileencodings=utf-8,cp932 \" and more encodings to guess.\n\nBecause, utf-8 is not upper compatible of DBCS. Andalso, we open file both \nDBCS/UTF-8 at a time.\nSomeone may use terminal emurator which don't support utf-8. AFAIK, who use \nencoding=utf-8 on windows isn't many. I know some japanese use non-utf8 \nlocale on unix yet. But gofiletype.vim change global option 'encoding'. \nit's rudely.\n\nThanks.\n\n",
			"disapproval": false,
			"date": "2012-03-13 08:42:41.607990",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 13, 2012 at 7:42 PM, mattn <mattn.jp@gmail.com> wrote:\n\n> Someone may use terminal emurator which don't support utf-8.\u00a0AFAIK, who use\n> encoding=utf-8 on windows isn't many. I know some japanese use non-utf8\n> locale on unix yet.\u00a0But gofiletype.vim change global option 'encoding'. it's\n> rudely.\n\nOkay, this makes sense to me.\n\nIs there a way to change the encoding for a particular buffer? If so,\nwe should definitely do that. If not, we'll have to proceed with your\nchange.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-03-13 12:10:00.999154",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Is there a way to change the encoding for a particular buffer? If so,\n> we should definitely do that. If not, we'll have to proceed with your\n> change.\n\nvim don't have buffer local encoding option.\n",
			"disapproval": false,
			"date": "2012-03-13 16:21:32.686835",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mar 14, 2012 3:20 AM, \"mattn\" <mattn.jp@gmail.com> wrote:\n\n> > Is there a way to change the encoding for a particular buffer? If so,\n> > we should definitely do that. If not, we'll have to proceed with your\n> > change.\n>\n> vim don't have buffer local encoding option.\n\nYeah, didn't think so. Okay, I'll review this today.\n",
			"disapproval": false,
			"date": "2012-03-13 22:06:49.622498",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "One other thing to try: ++enc allows overriding fileencoding on a per-file basis. Is there a way you can hook that in instead? That would be a lot less invasive.\n\nIf that doesn't work, please add the comment I mention below, and I'll LGTM this CL.\n\nhttp://codereview.appspot.com/5718045/diff/3/misc/vim/ftdetect/gofiletype.vim\nFile misc/vim/ftdetect/gofiletype.vim (right):\n\nhttp://codereview.appspot.com/5718045/diff/3/misc/vim/ftdetect/gofiletype.vim#newcode1\nmisc/vim/ftdetect/gofiletype.vim:1: let s:current_fileformats = ''\nAdd a comment at the top here.\n\n\" We take care to preserve the user's fileencodings and fileformats,\n\" because those settings are global (not buffer local), yet we want\n\" to override them for loading Go files, which are defined to be UTF-8.",
			"disapproval": false,
			"date": "2012-03-14 04:36:41.906249",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-03-14 06:29:19.904451",
			"approval": true
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> One other thing to try: ++enc allows overriding fileencoding on a per-file basis. Is there a way you can hook that in instead? That would be a lot less invasive.\n\n\":e ++enc=utf-8 foo.go\" is meaning that set fileencodings to just only utf-8 before opening foo.go. vimscript can't know what value specified in '++enc'. We can know fileencodings value with hook BufReadPre. But script can't know whether the value is specified in vimrc or ++enc. Andalso, fileencoding(not fileencodings) have two meanings. The first is 'current file encoding'. When change this vaule, buffer will be saved as specified encoding. The second is 'default encodings when open new file'. Thus if set fileencoding=utf-8 in BufReadPre, the value will be utf-8 for new file, but if open exist file, it make different from real fileencoding . i.e. We shouldn't use fileencoding option also for this trick.\nTo solve this problem,\n\n* Reading exist file:\n\n1. Store current fileencodings/fileformats\n2. Set just only utf-8/unix for fileencodings/fileformats before reading file.\n3. Restore original value for fileencodings/fileformats.\n\n* Open new buffer:\n1. set utf8/unix for fileencoding/fileformat.\n This don't effect modified flag.\n\nhttp://codereview.appspot.com/5718045/diff/3/misc/vim/ftdetect/gofiletype.vim\nFile misc/vim/ftdetect/gofiletype.vim (right):\n\nhttp://codereview.appspot.com/5718045/diff/3/misc/vim/ftdetect/gofiletype.vim#newcode1\nmisc/vim/ftdetect/gofiletype.vim:1: let s:current_fileformats = ''\nOn 2012/03/14 04:36:42, dsymonds wrote:\n> Add a comment at the top here.\n> \n> \" We take care to preserve the user's fileencodings and fileformats,\n> \" because those settings are global (not buffer local), yet we want\n> \" to override them for loading Go files, which are defined to be UTF-8.\n\nDone.",
			"disapproval": false,
			"date": "2012-03-14 06:28:01.652316",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ca61f2a46162 ***\n\nmisc/vim: restore fileencodings.\nCurrently, ftdetect/gofiletype.vim set fileencodings to open the file as\nutf-8 encoding event if the file does not contain multibyte characters.\nBut fileencodings is global option.\n\n$ vim foo.txt\n:set fileencodings\nutf-8,ucs-bom,cp932\n\n$ vim foo.go\n:set fileencodings\nutf-8\n\nThis change restore fileencodings before opening the file.\nAlso added specify fileformats=unix.\n\nR=golang-dev, dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/5718045\n\nCommitter: David Symonds <dsymonds@golang.org>",
			"disapproval": false,
			"date": "2012-03-14 07:43:09.110428",
			"approval": false
		}
	],
	"owner_email": "mattn.jp@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mattn",
	"subject": "code review 5718045: misc/vim: restore fileencodings.",
	"created": "2012-03-02 02:54:10.610589",
	"patchsets": [
		1,
		2001,
		3,
		16002
	],
	"modified": "2012-04-04 02:47:54.599639",
	"closed": true,
	"issue": 5718045
}