{
	"description": "cmd/go: write coverage to file, add percentage statistic\nMove the data dumper to the testing package, where it has access\nto file I/O.\nPrint a percentage value at the end of the run.",
	"cc": [
		"rsc@golang.org",
		"adg@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-06-13 21:08:19.795660",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10264045/diff/15001/src/pkg/testing/cover.go\nFile src/pkg/testing/cover.go (right):\n\nhttps://codereview.appspot.com/10264045/diff/15001/src/pkg/testing/cover.go#newcode48\nsrc/pkg/testing/cover.go:48: defer f.Close()\nshould check the error return value of f.Close when writing\n\nhttps://codereview.appspot.com/10264045/diff/15001/src/pkg/testing/cover.go#newcode76\nsrc/pkg/testing/cover.go:76: panic(err)\npanic? why not print \"testing: err\" and os.Exit(2) as with the Create above?",
			"disapproval": false,
			"date": "2013-06-18 03:46:07.519360",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-18 16:05:20.911140",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-06-18 20:57:35.530140",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/10264045/diff/28001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttps://codereview.appspot.com/10264045/diff/28001/src/cmd/go/test.go#newcode1012\nsrc/cmd/go/test.go:1012: testing.CoverRegister(coverCounters, coverBlocks)\ns/CoverRegister/RegisterCover/\nto match various other registrations in the standard library.\n\nhttps://codereview.appspot.com/10264045/diff/31001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttps://codereview.appspot.com/10264045/diff/31001/src/cmd/go/test.go#newcode127\nsrc/cmd/go/test.go:127: -cover set,count,atomic\nNot for this CL, but ...\n\nI think this should probably be covermode, which like coverprofile would be a parameter that can be omitted.\nThe -cover flag should be a boolean that enables coverage at all, using the covermode and coverprofile settings.\n\nThen \n\ngo test -cover regexp\n\ndoes something useful.\n\nhttps://codereview.appspot.com/10264045/diff/31001/src/cmd/go/test.go#newcode136\nsrc/cmd/go/test.go:136: Sets -v.\nTODO: This will change.\n\nhttps://codereview.appspot.com/10264045/diff/31001/src/cmd/go/testflag.go\nFile src/cmd/go/testflag.go (right):\n\nhttps://codereview.appspot.com/10264045/diff/31001/src/cmd/go/testflag.go#newcode188\nsrc/cmd/go/testflag.go:188: // Guarantee we see the coverage statistics. Doesn't turn -v on generally; tricky. TODO?\nFine for now.\n\nI suspect that the thing to do is to parse the (collected but suppressed) output to find the coverage information and show it in the table. Where go test std currently says:\n\nok  \tcompress/bzip2\t0.086s\nok  \tcompress/flate\t0.957s\nok  \tcompress/gzip\t0.029s\nok  \tcompress/lzw\t0.136s\nok  \tcompress/zlib\t1.411s\nok  \tcontainer/heap\t0.025s\n\n'go test -cover std' might say:\n\nok  \tcompress/bzip2\t0.086s  93% coverage\nok  \tcompress/flate\t0.957s  95% coverage\nok  \tcompress/gzip\t0.029s  80% coverage\nok  \tcompress/lzw\t0.136s  20% coverage\nok  \tcompress/zlib\t1.411s  45% coverage\nok  \tcontainer/heap\t0.025s  100% coverage",
			"disapproval": false,
			"date": "2013-06-18 21:05:08.169650",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=8e10088eb699 ***\n\ncmd/go: write coverage to file, add percentage statistic\nMove the data dumper to the testing package, where it has access\nto file I/O.\nPrint a percentage value at the end of the run.\n\nR=rsc, adg\nCC=golang-dev\nhttps://codereview.appspot.com/10264045\n\nhttps://codereview.appspot.com/10264045/diff/15001/src/pkg/testing/cover.go\nFile src/pkg/testing/cover.go (right):\n\nhttps://codereview.appspot.com/10264045/diff/15001/src/pkg/testing/cover.go#newcode48\nsrc/pkg/testing/cover.go:48: defer f.Close()\nOn 2013/06/18 03:46:07, adg wrote:\n> should check the error return value of f.Close when writing\n\nmeh. and do what? stupid idea, but the orthodoxy.\n\nhttps://codereview.appspot.com/10264045/diff/15001/src/pkg/testing/cover.go#newcode76\nsrc/pkg/testing/cover.go:76: panic(err)\nOn 2013/06/18 03:46:07, adg wrote:\n> panic? why not print \"testing: err\" and os.Exit(2) as with the Create above?\n\nDone.",
			"disapproval": false,
			"date": "2013-06-18 21:18:29.466960",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 10264045: cmd/go: write coverage to file, add percentage statistic",
	"created": "2013-06-13 21:08:16.415770",
	"patchsets": [
		1,
		3001,
		5001,
		8001,
		10001,
		15001,
		22001,
		26001,
		28001,
		31001,
		22010
	],
	"modified": "2013-06-18 21:18:31.124990",
	"closed": true,
	"issue": 10264045
}