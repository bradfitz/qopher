{
	"description": "cmd/cgo, cmd/dist, cmd/go: cgo with clang fixes\n1. Workaround the smart clang diagnostics with -Qunused-arguments:\nclang: error: argument unused during compilation: '-XXX'\n2. if \"clang -print-libgcc-file-name\" returns non-absolute path, don't\nprovide that on linker command line.\n3. Fix dwarf.PtrType.Size() in cmd/cgo as clang doesn't generate\nDW_AT_byte_size for pointer types.\n4. Workaround warnings for -Wno-unneeded-internal-declaration with\n-Wno-unknown-warning-option.\n5. Add -Wno-unused-function.\n6. enable race detector test on darwin with clang\n(at least Apple clang version 1.7 (tags/Apple/clang-77) works).\n\nRequires CL 7354043.\n\nUpdate issue 4829\nThis should fix most parts of the problem, but one glitch still remains.\nDWARF generated by newer clang doesn't differentiate these\ntwo function types:\n    void *malloc(size_t);\n    void *malloc(unsigned long int);\nso you might need to do this to make make.bash pass:\nsed -i -e 's/C.malloc(C.size_t/C.malloc(C.ulong/' pkg/os/user/lookup_unix.go",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"iant@golang.org"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/19 01:41:06, dfc wrote:\n> Please hg mail this for review.\n\nThis did not fix the problem using clang-3.2 from the llvm.org download site,\n\n# net\nreading DWARF entry: decoding dwarf section info at offset 0x45: unknown entry attr format\ndebug/gosym\ndatabase/sql\nencoding/csv\nexp/ebnf\ngo/types\nexp/ebnflint\nexp/inotify\nexp/norm\nimage/draw\nimage/gif\nimage/jpeg\nimage/png\nos/user\nruntime/debug\nexp/locale/collate/colltab\ntesting\n# os/user\nreading DWARF entry: decoding dwarf section info at offset 0x45: unknown entry attr format\n\n% $CC -v\nclang version 3.2 (tags/RELEASE_32/final)\nTarget: x86_64-unknown-linux-gnu\nThread model: posix",
			"disapproval": false,
			"date": "2013-02-19 02:08:05.309660",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please hg mail this for review.",
			"disapproval": false,
			"date": "2013-02-19 01:41:06.062460",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tuesday, February 19, 2013, wrote:\r\n\r\n> On 2013/02/19 01:41:06, dfc wrote:\r\n>\r\n>> Please hg mail this for review.\r\n>>\r\n>\r\n> This did not fix the problem using clang-3.2 from the llvm.org download\r\n> site,\r\n>\r\n> # net\r\n> reading DWARF entry: decoding dwarf section info at offset 0x45: unknown\r\n> entry attr format\r\n>\r\n this CL still requires the debug/dwarf changes in CL 7354043.\r\n",
			"disapproval": false,
			"date": "2013-02-19 05:51:49.878320",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ahh, my bad, i'll wait for those CLs to be mailed\r\n\r\nOn 19/02/2013, at 16:51, minux <minux.ma@gmail.com> wrote:\r\n\r\n> \r\n> On Tuesday, February 19, 2013, wrote:\r\n>> On 2013/02/19 01:41:06, dfc wrote:\r\n>>> Please hg mail this for review.\r\n>> \r\n>> This did not fix the problem using clang-3.2 from the llvm.org download\r\n>> site,\r\n>> \r\n>> # net\r\n>> reading DWARF entry: decoding dwarf section info at offset 0x45: unknown\r\n>> entry attr format\r\n>  this CL still requires the debug/dwarf changes in CL 7354043.\r\n",
			"disapproval": false,
			"date": "2013-02-19 06:16:00.578990",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "For the record, the way to test this CL is:\r\ncd $GOROOT/src # assuming it's up-to-date and clean\r\nhg clp 7354043\r\nhg revert cmd/cgo\r\nhg clp 7351044\r\n\r\ndepending on your version of clang (newer than 3?), you might need to do\r\nthis to\r\ntemporarily work around a clang bug:\r\nsed -i -e 's/C.malloc(C.size_t/C.malloc(C.ulong/' pkg/os/user/lookup_unix.go\r\n\r\nthen:\r\nCC=clang all.bash\r\n\r\nI appreciate all testing results.\r\n\r\nPS:\r\nI've tested it on Linux/amd64 with clang trunk and Darwin/amd64 with clang\r\ntrunk (both require\r\npatching pkg/os/user/lookup_unix.go)\r\nand Darwin/amd64 with an old xcode clang [version: Apple clang version 1.7\r\n(tags/Apple/clang-77) (based on LLVM 2.9svn)]\r\n(doesn't require patching pkg/os/user/lookup_unix.go)\r\n",
			"disapproval": false,
			"date": "2013-02-19 07:20:29.991700",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI suppose.",
			"disapproval": false,
			"date": "2013-02-20 02:41:16.835430",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "cmd/cgo, cmd/dist, cmd/go: cgo with clang fixes\n1. Workaround the smart clang diagnostics with -Qunused-arguments:\nclang: error: argument unused during compilation: '-XXX'\n2. if \"clang -print-libgcc-file-name\" returns non-absolute path, don't\nprovide that on linker command line.\n3. Fix dwarf.PtrType.Size() in cmd/cgo as clang doesn't generate\nDW_AT_byte_size for pointer types.\n4. Workaround warnings for -Wno-unneeded-internal-declaration with\n-Wno-unknown-warning-option.\n5. Add -Wno-unused-function. (We really should use -w for clang!)\n6. enable race detector test on darwin with clang\n(at least Apple clang version 1.7 (tags/Apple/clang-77) works).\n\nRequires debug/dwarf changes in CL 7354043.\n\nFixes issue 4829.\n\nStatus:\nPatch Set 1 makes all.bash pass on FreeBSD 9/amd64 with clang 3.0.\nPatch Set 5: only one error remains. I conclude it's clang bug.\nPatch Set 7: all.bash passed on Darwin with Apple clang version 1.7.\nIf you use newer clang, you might need to apply this patch:\ndiff -r 6f23480a76e1 src/pkg/os/user/lookup_unix.go\n--- a/src/pkg/os/user/lookup_unix.go\tSun Feb 17 13:07:17 2013 +0100\n+++ b/src/pkg/os/user/lookup_unix.go\tMon Feb 18 05:59:55 2013 +0800\n@@ -61,7 +61,7 @@\n \t\t\treturn nil, fmt.Errorf(\"user: unreasonable _SC_GETPW_R_SIZE_MAX of %d\",\nbufSize)\n \t\t}\n \t}\n-\tbuf := C.malloc(C.size_t(bufSize))\n+\tbuf := C.malloc(C.ulong(bufSize))\n \tdefer C.free(buf)\n \tvar rv C.int\n \tif lookupByName {\n\n==========\nTest program for clang bug:\n$ cat x.c\n#include <stdlib.h>\ntypeof(malloc) *pointer;\n$ clang -o x-clang.o -gdwarf-2 -c x.c # clang version 3.3\n(http://llvm.org/git/clang.git e50e91d4a6f6c) (http://llvm.org/git/llvm.git\n906727dcfeb)\n$ gcc -o x-gcc.o -gdwarf-2 -c x.c # gcc version 4.8.0 20130129 (experimental)\n(GCC)\n\nThen compare DWARF info. in two object files, and you will discover that\nclang generates this type for pointer: *func (long unsigned int) *void\nwhile gcc (correctly) generates this: *func (size_t) *void\n\nNote: this bug doesn't appear with Apple clang version 1.7\n(tags/Apple/clang-77), so\nmaybe this is indeed a recent clang regression.",
			"disapproval": false,
			"date": "2013-02-20 16:15:22.713080",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If you use macports, sudo port install clang-3.2 works well, also\r\nhttp://llvm.org/releases/3.2/clang+llvm-3.2-x86_64-apple-darwin11.tar.gz\r\nis another option.\r\n\r\nOn Tue, Feb 26, 2013 at 9:19 AM, Russ Cox <rsc@golang.org> wrote:\r\n> On Mon, Feb 25, 2013 at 4:50 PM, minux <minux.ma@gmail.com> wrote:\r\n>>\r\n>> what version is it?\r\n>\r\n>\r\n> I don't know. Someone here who works on clang gave me a binary. It's my\r\n> problem, don't worry about it. :-)\r\n> I'm glad it's working with a clang other people actually have.\r\n>\r\n> Russ\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-25 22:52:22.216160",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net, iant@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-20 16:21:21.100440",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"iant@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7351044/diff/29001/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttps://codereview.appspot.com/7351044/diff/29001/src/cmd/dist/build.c#newcode412\nsrc/cmd/dist/build.c:412: \"-ggdb\",\nNot sure why this is being added.\nIt's added again below?\n\nhttps://codereview.appspot.com/7351044/diff/29001/src/cmd/go/build.go\nFile src/cmd/go/build.go (right):\n\nhttps://codereview.appspot.com/7351044/diff/29001/src/cmd/go/build.go#newcode1684\nsrc/cmd/go/build.go:1684: // clang is too smart about arguments\ns/arguments/command-line arguments\n\n(Just to make it clear we're not talking about function arguments in the source code being compiled.)",
			"disapproval": false,
			"date": "2013-02-22 22:36:48.289720",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"iant@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=04d884e0f760 ***\n\ncmd/cgo, cmd/dist, cmd/go: cgo with clang fixes\n1. Workaround the smart clang diagnostics with -Qunused-arguments:\nclang: error: argument unused during compilation: '-XXX'\n2. if \"clang -print-libgcc-file-name\" returns non-absolute path, don't\nprovide that on linker command line.\n3. Fix dwarf.PtrType.Size() in cmd/cgo as clang doesn't generate\nDW_AT_byte_size for pointer types.\n4. Workaround warnings for -Wno-unneeded-internal-declaration with\n-Wno-unknown-warning-option.\n5. Add -Wno-unused-function.\n6. enable race detector test on darwin with clang\n(at least Apple clang version 1.7 (tags/Apple/clang-77) works).\n\nRequires CL 7354043.\n\nUpdate issue 4829\nThis should fix most parts of the problem, but one glitch still remains.\nDWARF generated by newer clang doesn't differentiate these\ntwo function types:\n    void *malloc(size_t);\n    void *malloc(unsigned long int);\nso you might need to do this to make make.bash pass:\nsed -i -e 's/C.malloc(C.size_t/C.malloc(C.ulong/' pkg/os/user/lookup_unix.go\n\nR=golang-dev, dave, iant, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7351044\n\nhttps://codereview.appspot.com/7351044/diff/29001/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttps://codereview.appspot.com/7351044/diff/29001/src/cmd/dist/build.c#newcode412\nsrc/cmd/dist/build.c:412: \"-ggdb\",\nOn 2013/02/22 22:36:48, rsc wrote:\n> Not sure why this is being added.\n> It's added again below?\noh, i mean to add -ggdb here for both clang and gcc.\nwill remove the code below.",
			"disapproval": false,
			"date": "2013-02-23 12:25:04.678190",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry, but the copy of clang I have rejects -ggdb. That's why I removed it. Will try to fix later.",
			"disapproval": false,
			"date": "2013-02-25 21:49:23.393410",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 26, 2013 at 5:49 AM, <rsc@golang.org> wrote:\r\n\r\n> Sorry, but the copy of clang I have rejects -ggdb. That's why I removed\r\n> it. Will try to fix later.\r\n>\r\nwhat version is it?\r\n\r\nI've tested with clang 2.9, 3.0 and 3.3svn.\r\n",
			"disapproval": false,
			"date": "2013-02-25 21:51:02.252790",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 25, 2013 at 4:50 PM, minux <minux.ma@gmail.com> wrote:\r\n\r\n> what version is it?\r\n>\r\n\r\nI don't know. Someone here who works on clang gave me a binary. It's my\r\nproblem, don't worry about it. :-)\r\nI'm glad it's working with a clang other people actually have.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-02-25 22:19:45.092530",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 7351044: cmd/cgo, cmd/dist, cmd/go: cgo with clang fixes",
	"created": "2013-02-17 15:45:28.946140",
	"patchsets": [
		1,
		2001,
		8001,
		11001,
		13001,
		3004,
		12004,
		13007,
		29001,
		26002,
		36001
	],
	"modified": "2013-02-25 21:49:23.666670",
	"closed": true,
	"issue": 7351044
}