{
	"description": "encoding/json: coerce invalid UTF-8 to valid UTF-8 during Marshal\n\nIn practice, rejecting an entire structure due to a single invalid byte\nin a string is just too picky, and too hard to track down.\nBe consistent with the bulk of the standard library by converting\ninvalid UTF-8 into UTF-8 with replacement runes.",
	"cc": [
		"golang-dev@googlegroups.com",
		"crawshaw@google.com"
	],
	"reviewers": [
		"r@golang.org"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"crawshaw@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/11211045/diff/6001/src/pkg/encoding/json/decode_test.go\nFile src/pkg/encoding/json/decode_test.go (right):\n\nhttps://codereview.appspot.com/11211045/diff/6001/src/pkg/encoding/json/decode_test.go#newcode395\nsrc/pkg/encoding/json/decode_test.go:395: s := \"hello\\xffworld\"\nthis is a pretty weak test case but the code is easy enough it's probably ok.\nif you're in the mood, make it a table with at least\n\n{\"\",\"\"}\n{\"\\xff\", \"\\uffd\"}\n{\"\\xff\\xff\", \"\\uffd\\uffd\"}\n{\"a\\xffb\", \"a\\uffdb\"}\n{\"\\xe6\\x97\\xa5\\xe6\\x9c\\xac\\xff\\xaa\\x9e\", \"\u65e5\u672c\\uffd\\uffd\\uffd\"}",
			"disapproval": false,
			"date": "2013-07-12 21:38:09.234880",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"crawshaw@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=f6ae6596a571 ***\n\nencoding/json: coerce invalid UTF-8 to valid UTF-8 during Marshal\n\nIn practice, rejecting an entire structure due to a single invalid byte\nin a string is just too picky, and too hard to track down.\nBe consistent with the bulk of the standard library by converting\ninvalid UTF-8 into UTF-8 with replacement runes.\n\nR=golang-dev, crawshaw\nCC=golang-dev\nhttps://codereview.appspot.com/11211045",
			"disapproval": false,
			"date": "2013-07-12 21:37:14.286880",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-12 18:39:10.994640",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"crawshaw@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-12 21:28:52.402530",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 11211045: encoding/json: coerce invalid UTF-8 to valid UTF-8 duri...",
	"created": "2013-07-12 18:37:59.333260",
	"patchsets": [
		1,
		3001,
		6001,
		12001
	],
	"modified": "2013-07-12 21:38:09.454470",
	"closed": true,
	"issue": 11211045
}