{
	"description": "go.crypto/ssh: new test subpackage\n\nThis proposal is an attempt to improve the state of functional testing in the ssh package. The previous functional tests required the user to give away some personal details, like their password and private key to run the tests, and so were probably not run as frequently as they should.",
	"cc": [
		"agl@golang.org",
		"gustav.paul@gmail.com",
		"kardianos@gmail.com",
		"fullung@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, gustav.paul@gmail.com, kardianos@gmail.com, fullung@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-04 06:06:15.640910",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nIs go.crypto/ssh/sshtest a stutter? Should it be go.crypto/ssh/test? Up to you.",
			"disapproval": false,
			"date": "2012-10-04 16:18:57.022870",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL. I have reworked the file layout to run these tests on unix platforms only. Refactoring to support windows server processes should be straight forward.",
			"disapproval": false,
			"date": "2012-10-04 07:47:18.958850",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/03 11:22:36, dfc wrote:\n> Hello mailto:agl@golang.org, mailto:gustav.paul@gmail.com, mailto:kardianos@gmail.com,\n> mailto:fullung@gmail.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nJust a note about the choice of a sub package for these tests. \n\nIt was my intention to separate these integration tests from the unit-esq tests in the main ssh package for a number of reasons\n\n1. they are not self hosting, these are not unit tests\n2. sadly, I expect them to break more often, and having an individual test package, I feel, will make it easier to spot this earlier\n3. for those that do not want/cant run the integration tests, moving them to a separate package makes that easier, without having to put up with a bunch of 'test skipped ...' messages in the log.\n\nHaving said all this I have had feedback that this arrangement is unorthodox, so will be happy to entertain moving these back into the main ssh package if that is the majority view.",
			"disapproval": false,
			"date": "2012-10-03 12:47:09.834920",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/04 07:47:18, dfc wrote:\n> PTAL. I have reworked the file layout to run these tests on unix platforms only.\n> Refactoring to support windows server processes should be straight forward.\n\nLGTM.",
			"disapproval": false,
			"date": "2012-10-04 15:04:46.027610",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, gustav.paul@gmail.com, kardianos@gmail.com, fullung@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-10-03 10:52:48.396740",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/auth_test.go\nFile ssh/sshtest/auth_test.go (right):\n\nhttps://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/auth_test.go#newcode86\nssh/sshtest/auth_test.go:86: func (k *keychain) loadPEM(file string) error {\nIt's not obvious where this is used, but I might have missed it.\n\nhttps://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/session_test.go\nFile ssh/sshtest/session_test.go (right):\n\nhttps://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/session_test.go#newcode19\nssh/sshtest/session_test.go:19: cleanup := startSshd(t)\ns/Sshd/SSHd/ perhaps. (\"Sshd\" looks really weird to me.)\n\nhttps://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/sshtest_test.go\nFile ssh/sshtest/sshtest_test.go (right):\n\nhttps://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/sshtest_test.go#newcode142\nssh/sshtest/sshtest_test.go:142: <-time.After(100 * time.Millisecond)\nThis seems unfortunate. Can we have the sshd log to stderr, or a file, and have a goroutine watch for a log line that indicates that it has opened the socket?\n\nOr perhaps pass -i to sshd and mimic inetd mode?",
			"disapproval": false,
			"date": "2012-10-03 20:14:22.793500",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, gustav.paul@gmail.com, kardianos@gmail.com, fullung@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-03 11:22:36.875230",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for your comments. I'm attempting a version of the harness that uses sshd -i now.\n\nhttp://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/auth_test.go\nFile ssh/sshtest/auth_test.go (right):\n\nhttp://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/auth_test.go#newcode86\nssh/sshtest/auth_test.go:86: func (k *keychain) loadPEM(file string) error {\nOn 2012/10/03 20:14:22, agl1 wrote:\n> It's not obvious where this is used, but I might have missed it.\n\nI've merged this file back into sshtest_test.go, it wasn't carrying its weight.\n\nhttp://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/session_test.go\nFile ssh/sshtest/session_test.go (right):\n\nhttp://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/session_test.go#newcode19\nssh/sshtest/session_test.go:19: cleanup := startSshd(t)\nOn 2012/10/03 20:14:22, agl1 wrote:\n> s/Sshd/SSHd/ perhaps. (\"Sshd\" looks really weird to me.)\n\nDone.\n\nhttp://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/sshtest_test.go\nFile ssh/sshtest/sshtest_test.go (right):\n\nhttp://codereview.appspot.com/6601043/diff/10001/ssh/sshtest/sshtest_test.go#newcode142\nssh/sshtest/sshtest_test.go:142: <-time.After(100 * time.Millisecond)\nOn 2012/10/03 20:14:22, agl1 wrote:\n> This seems unfortunate. Can we have the sshd log to stderr, or a file, and have a goroutine watch for a log line that indicates that it has opened the socket? Or perhaps pass -i to sshd and mimic inetd mode?\n\nlogging to stdout is easy, cmd = os.Stdout, but rather noisy.\n\nI've never tried fd passing in Go, but it would be the best way, i'll try to make that work with sshd -i",
			"disapproval": false,
			"date": "2012-10-04 04:56:57.090500",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "None of these will work on windows (no sshd). Maybe I should use //\r\n+build tags ?\r\n\r\nOn Thu, Oct 4, 2012 at 4:28 PM,  <kardianos@gmail.com> wrote:\r\n> On windows only build tcpip_test.go and not the other tests. Otherwise\r\n> looks fine as far as I can tell.\r\n>\r\n> https://codereview.appspot.com/6601043/\r\n",
			"disapproval": false,
			"date": "2012-10-04 06:30:31.487350",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On windows only build tcpip_test.go and not the other tests. Otherwise looks fine as far as I can tell.",
			"disapproval": false,
			"date": "2012-10-04 06:28:35.402470",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/04 16:18:57, agl1 wrote:\n> LGTM.\n> \n> Is go.crypto/ssh/sshtest a stutter? Should it be go.crypto/ssh/test? Up to you.\n\nDone. That does mean we end up with test_unix_test.go, which could probably be improved in the future.\n\nI'm going to submit this today and see what breaks.",
			"disapproval": false,
			"date": "2012-10-05 01:09:51.423530",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=671a5c2bfac2&repo=crypto ***\n\ngo.crypto/ssh: new test subpackage\n\nThis proposal is an attempt to improve the state of functional testing in the ssh package. The previous functional tests required the user to give away some personal details, like their password and private key to run the tests, and so were probably not run as frequently as they should.\n\nR=agl, gustav.paul, kardianos, fullung\nCC=golang-dev\nhttp://codereview.appspot.com/6601043",
			"disapproval": false,
			"date": "2012-10-05 01:11:16.892770",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6601043: go.crypto/ssh: new package: sshtest",
	"created": "2012-10-03 10:27:24.952260",
	"patchsets": [
		1,
		2001,
		8,
		2002,
		6001,
		1002,
		10001,
		1004,
		7006,
		3011,
		14002,
		16001,
		20001
	],
	"modified": "2012-10-05 01:11:26.524750",
	"closed": true,
	"issue": 6601043
}