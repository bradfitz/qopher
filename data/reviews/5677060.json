{
	"description": "sort: add interface examples",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@google.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_reverse_test.go\nFile src/pkg/sort/example_reverse_test.go (right):\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_reverse_test.go#newcode15\nsrc/pkg/sort/example_reverse_test.go:15: // This embedded Interface allows Rerverse to inherit the methods of\nReverse, not Rerverse.\n\nI thought we avoided the word \"inherit\"?\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_reverse_test.go#newcode22\nsrc/pkg/sort/example_reverse_test.go:22: return !r.Interface.Less(i, j)\nreturn r.Interface.Less(j, i)  ?\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_reverse_test.go#newcode27\nsrc/pkg/sort/example_reverse_test.go:27: r := Reverse{sort.IntSlice(s)}\nI'd move this into the next line. the variable r doesn't add anything.\n\nsort.Sort(Reverse{sort.IntSlice(s)})\n\n... seems to read better.",
			"disapproval": false,
			"date": "2012-02-16 00:33:18.373572",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_interface_test.go\nFile src/pkg/sort/example_interface_test.go (right):\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_interface_test.go#newcode18\nsrc/pkg/sort/example_interface_test.go:18: Grams Grams\nOn 2012/02/16 00:52:55, r wrote:\n> my edit was\n> Weight Grams\n> which reads better throughout\n\nDone.\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_interface_test.go#newcode26\nsrc/pkg/sort/example_interface_test.go:26: type ByName struct{ Organs }\nOn 2012/02/16 00:52:55, r wrote:\n> worth a doc comment here and on ByGrams to say this is a conversion trick\n\nDone.\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_interface_test.go#newcode30\nsrc/pkg/sort/example_interface_test.go:30: type ByGrams struct{ Organs }\nOn 2012/02/16 00:52:55, r wrote:\n> i'd prefer ByWeight\n\nDone.\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_interface_test.go#newcode71\nsrc/pkg/sort/example_interface_test.go:71: fmt.Printf(\"%-8s (%s)\\n\", o.Name, o.Grams)\nOn 2012/02/16 00:52:55, r wrote:\n> how about s/%s/%v/g\n\nDone.",
			"disapproval": false,
			"date": "2012-02-16 01:52:12.475915",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\ni like the embedded organs",
			"disapproval": false,
			"date": "2012-02-16 02:07:58.286934",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_interface_test.go\nFile src/pkg/sort/example_interface_test.go (right):\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_interface_test.go#newcode10\nsrc/pkg/sort/example_interface_test.go:10: )\ntype Grams int\nfunc (g Grams) String() { return fmt.Sprintf(\"%dg\", int(g)) }\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_interface_test.go#newcode14\nsrc/pkg/sort/example_interface_test.go:14: Weight int // in grams\ns/int.*/Grams\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_interface_test.go#newcode28\nsrc/pkg/sort/example_interface_test.go:28: func (s ByWeight) Less(i, j int) bool { return s.Organs[i].Weight < s.Organs[j].Weight }\ns2/Weight/Grams/g\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_interface_test.go#newcode67\nsrc/pkg/sort/example_interface_test.go:67: fmt.Printf(\"%-8s (%d grams)\\n\", o.Name, o.Weight)\ns/%d grams/%s/",
			"disapproval": false,
			"date": "2012-02-16 00:35:43.892677",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_interface_test.go\nFile src/pkg/sort/example_interface_test.go (right):\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_interface_test.go#newcode10\nsrc/pkg/sort/example_interface_test.go:10: )\nOn 2012/02/16 00:35:44, r wrote:\n> type Grams int\n> func (g Grams) String() { return fmt.Sprintf(\"%dg\", int(g)) }\n> \n\nDone.\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_interface_test.go#newcode14\nsrc/pkg/sort/example_interface_test.go:14: Weight int // in grams\nOn 2012/02/16 00:35:44, r wrote:\n> s/int.*/Grams\n\nDone.\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_interface_test.go#newcode28\nsrc/pkg/sort/example_interface_test.go:28: func (s ByWeight) Less(i, j int) bool { return s.Organs[i].Weight < s.Organs[j].Weight }\nOn 2012/02/16 00:35:44, r wrote:\n> s2/Weight/Grams/g\n\nDone.\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_interface_test.go#newcode67\nsrc/pkg/sort/example_interface_test.go:67: fmt.Printf(\"%-8s (%d grams)\\n\", o.Name, o.Weight)\nOn 2012/02/16 00:35:44, r wrote:\n> s/%d grams/%s/\n\nDone.\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_reverse_test.go\nFile src/pkg/sort/example_reverse_test.go (right):\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_reverse_test.go#newcode15\nsrc/pkg/sort/example_reverse_test.go:15: // This embedded Interface allows Rerverse to inherit the methods of\nOn 2012/02/16 00:33:18, bradfitzgoog wrote:\n> Reverse, not Rerverse.\n\nDone.\n\n> I thought we avoided the word \"inherit\"?\n\nGot a better one? :-)\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_reverse_test.go#newcode22\nsrc/pkg/sort/example_reverse_test.go:22: return !r.Interface.Less(i, j)\nOn 2012/02/16 00:33:18, bradfitzgoog wrote:\n> return r.Interface.Less(j, i)  ?\n\nDone.\n\nhttp://codereview.appspot.com/5677060/diff/2001/src/pkg/sort/example_reverse_test.go#newcode27\nsrc/pkg/sort/example_reverse_test.go:27: r := Reverse{sort.IntSlice(s)}\nOn 2012/02/16 00:33:18, bradfitzgoog wrote:\n> I'd move this into the next line. the variable r doesn't add anything.\n> \n> sort.Sort(Reverse{sort.IntSlice(s)})\n> \n> ... seems to read better.\n\nDone.",
			"disapproval": false,
			"date": "2012-02-16 00:47:50.230215",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=df612f0d549f ***\n\nsort: add interface examples\n\nR=golang-dev, bradfitz, r\nCC=golang-dev\nhttp://codereview.appspot.com/5677060",
			"disapproval": false,
			"date": "2012-02-16 02:16:13.084791",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-02-16 00:26:34.984013",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@google.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_interface_test.go\nFile src/pkg/sort/example_interface_test.go (right):\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_interface_test.go#newcode18\nsrc/pkg/sort/example_interface_test.go:18: Grams Grams\nmy edit was\nWeight Grams\nwhich reads better throughout\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_interface_test.go#newcode26\nsrc/pkg/sort/example_interface_test.go:26: type ByName struct{ Organs }\nworth a doc comment here and on ByGrams to say this is a conversion trick\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_interface_test.go#newcode30\nsrc/pkg/sort/example_interface_test.go:30: type ByGrams struct{ Organs }\ni'd prefer ByWeight\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_interface_test.go#newcode71\nsrc/pkg/sort/example_interface_test.go:71: fmt.Printf(\"%-8s (%s)\\n\", o.Name, o.Grams)\nhow about s/%s/%v/g\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_reverse_test.go\nFile src/pkg/sort/example_reverse_test.go (right):\n\nhttp://codereview.appspot.com/5677060/diff/5/src/pkg/sort/example_reverse_test.go#newcode15\nsrc/pkg/sort/example_reverse_test.go:15: // This embedded Interface allows Reverse to inherit the methods of\ns/inherit/use/",
			"disapproval": false,
			"date": "2012-02-16 00:52:55.326243",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5677060: sort: add interface examples",
	"created": "2012-02-16 00:26:16.555988",
	"patchsets": [
		1,
		2001,
		5,
		7001,
		7
	],
	"modified": "2012-02-16 02:16:14.838640",
	"closed": true,
	"issue": 5677060
}