{
	"description": "weekly.2012-01-27",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org"
	],
	"reviewers": [
		"lvd@google.com"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-01-27 05:45:33.111586",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5577060/diff/1/doc/devel/weekly.html\nFile doc/devel/weekly.html (right):\n\nhttp://codereview.appspot.com/5577060/diff/1/doc/devel/weekly.html#newcode110\ndoc/devel/weekly.html:110: * net: Dial, ListenPacket with \"ip:protocol\" network for raw IP sockets (thanks Mikio Hara),\nI wonder why whatever builds this sorts net after net/http, but sorts doc before doc/go.",
			"disapproval": false,
			"date": "2012-01-27 05:48:52.687869",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 27 January 2012 16:48,  <dsymonds@golang.org> wrote:\n> LGTM\n>\n>\n> http://codereview.appspot.com/5577060/diff/1/doc/devel/weekly.html\n> File doc/devel/weekly.html (right):\n>\n> http://codereview.appspot.com/5577060/diff/1/doc/devel/weekly.html#newcode110\n> doc/devel/weekly.html:110: * net: Dial, ListenPacket with \"ip:protocol\"\n> network for raw IP sockets (thanks Mikio Hara),\n> I wonder why whatever builds this sorts net after net/http, but sorts\n> doc before doc/go.\n\nBecause I edit it by hand after the machine-generation, and my idea of\n'sorted' is different to <. If everyone typed perfect commit messages\nthis would be a lot easier !!!\n",
			"disapproval": false,
			"date": "2012-01-27 06:51:15.718321",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1107a7d3cb07 ***\n\nweekly.2012-01-27\n\nR=golang-dev, dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/5577060",
			"disapproval": false,
			"date": "2012-01-27 06:52:00.192563",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"adg@golang.org",
				"lvd@google.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5577060/diff/1/doc/devel/weekly.html\nFile doc/devel/weekly.html (right):\n\nhttp://codereview.appspot.com/5577060/diff/1/doc/devel/weekly.html#newcode38\ndoc/devel/weekly.html:38: * cmd/gc: forgotten recursion on ninit itself in order.c.\nthis can go with the other gc stuff below.",
			"disapproval": false,
			"date": "2012-01-27 08:48:53.445550",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5577060: weekly.2012-01-27",
	"created": "2012-01-27 05:45:24.926012",
	"patchsets": [
		1,
		3001,
		1003
	],
	"modified": "2012-01-27 08:48:53.925351",
	"closed": true,
	"issue": 5577060
}