{
	"description": "gc: static implements check on typeswitches only applies to concrete case types.\n\nFixes issue 2700.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-23 14:43:57.611918",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "maybe i should add bug400.go below to typeswitch3.go\n\nOn Mon, Jan 23, 2012 at 15:43,  <lvd@google.com> wrote:\n> Reviewers: rsc,\n>\n> Message:\n> Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> gc: static implements check on typeswitches only applies to concrete\n> case types.\n>\n> Fixes issue 2700.\n>\n> Please review this at http://codereview.appspot.com/5574046/\n>\n> Affected files:\n> \u00a0M src/cmd/gc/swt.c\n> \u00a0A test/fixedbugs/bug400.go\n>\n>\n> Index: src/cmd/gc/swt.c\n> ===================================================================\n> --- a/src/cmd/gc/swt.c\n> +++ b/src/cmd/gc/swt.c\n> @@ -889,7 +889,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0yyerror(\"%lN is not a type\",\n> ll->n);\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// reset to original type\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0ll->n = n->ntest->right;\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 } else if(!implements(ll->n->type,\n> t, &missing, &have, &ptr)) {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 } else if(ll->n->type->etype !=\n> TINTER && !implements(ll->n->type, t, &missing, &have, &ptr)) {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if(have && !missing->broke &&\n> !have->broke)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0yyerror(\"impossible\n> type switch case: %lN cannot have dynamic type %T\"\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\" (wrong type\n> for %S method)\\n\\thave %S%hT\\n\\twant %S%hT\",\n> Index: test/fixedbugs/bug400.go\n> ===================================================================\n> new file mode 100644\n> --- /dev/null\n> +++ b/test/fixedbugs/bug400.go\n> @@ -0,0 +1,27 @@\n> +// $G $D/$F.go || echo \"Bug400\"\n> +\n> +// Copyright 2011 The Go Authors. \u00a0All rights reserved.\n> +// Use of this source code is governed by a BSD-style\n> +// license that can be found in the LICENSE file.\n> +\n> +// Issue 2700\n> +\n> +package main\n> +\n> +import (\n> + \u00a0 \u00a0 \u00a0 \"io\"\n> +)\n> +\n> +func main() {\n> +\n> + \u00a0 var r io.Reader\n> +\n> + \u00a0 _, _ = r.(io.Writer)\n> +\n> + \u00a0 switch r.(type) {\n> + \u00a0 case io.Writer:\n> + \u00a0 }\n> +}\n> +\n> +\n> +\n>\n>\n",
			"disapproval": false,
			"date": "2012-01-23 14:47:46.688260",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=10b075a7a9b7 ***\n\ngc: static implements check on typeswitches only applies to concrete case types.\n\nFixes issue 2700.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5574046",
			"disapproval": false,
			"date": "2012-01-24 12:53:05.131563",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nAdding to typeswtich3.go makes sense to me.\nIn general I try to put things that feel like spec\nverification tests into named test files, leaving \nthe bugs files for true bugs.",
			"disapproval": false,
			"date": "2012-01-23 17:24:45.633653",
			"approval": true
		}
	],
	"owner_email": "lvd@google.com",
	"private": false,
	"base_url": "",
	"owner": "lvd",
	"subject": "code review 5574046: gc: static implements check on typeswitches only applie...",
	"created": "2012-01-23 14:34:12.353425",
	"patchsets": [
		1,
		2001,
		5001,
		7001
	],
	"modified": "2012-01-24 12:53:05.924919",
	"closed": true,
	"issue": 5574046
}