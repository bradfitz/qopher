{
	"description": "doc: use consistent receiver names, when it makes sense.\n\nMakes for prettier docs.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"r@google.com",
		"rsc@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Jan 27, 2012, at 4:18 PM, David Symonds wrote:\n\n> On Sat, Jan 28, 2012 at 10:56 AM,  <bradfitz@golang.org> wrote:\n> \n>> cmd/goapi is updated to have a mode to print out inconsistent\n>> receiver names.  Inconsistencies aren't errors--- just notes\n>> to review.  In many cases it's more clear for the documentation\n>> to have inconsistent receiver names.\n> \n> It's a useful goal, but cmd/goapi seems the wrong place for it.\n> Receiver names don't have any impact on API compatibility. Perhaps\n> this should be in govet instead?\n\nThat would be a change of bailiwick. So far govet focuses mostly on errors, not stylistic points, although you have an in with the method check.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-01-28 01:02:18.096466",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jan 27, 2012 at 5:07 PM, David Symonds <dsymonds@golang.org> wrote:\n\n> On Sat, Jan 28, 2012 at 12:02 PM, Rob 'Commander' Pike <r@google.com>\n> wrote:\n>\n> > On Jan 27, 2012, at 4:18 PM, David Symonds wrote:\n> >\n> >> On Sat, Jan 28, 2012 at 10:56 AM,  <bradfitz@golang.org> wrote:\n> >>\n> >>> cmd/goapi is updated to have a mode to print out inconsistent\n> >>> receiver names.  Inconsistencies aren't errors--- just notes\n> >>> to review.  In many cases it's more clear for the documentation\n> >>> to have inconsistent receiver names.\n> >>\n> >> It's a useful goal, but cmd/goapi seems the wrong place for it.\n> >> Receiver names don't have any impact on API compatibility. Perhaps\n> >> this should be in govet instead?\n> >\n> > That would be a change of bailiwick. So far govet focuses mostly on\n> errors, not stylistic points, although you have an in with the method check.\n>\n> Sure, but it feels closer to govet's role than goapi's responsibility,\n> which is to make sure we don't make backward incompatible changes.\n>\n\nI agree that govet could be appropriate for this check, but I'd actually\nlike to expand the scope of goapi.  Currently it just dumps & compares the\nAPI signature files, but since it already has a global view of the API,\nthere's a lot of fun stuff it can do.  In addition to this receiver check,\nI have some other stuff coming up.\n\nI can remove the goapi changes from this CL, though, and move them to my\nnext CL, adding some more global API operations.\n\nPreferences?\n",
			"disapproval": false,
			"date": "2012-01-28 01:34:36.604302",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Jan 27, 2012, at 5:34 PM, Brad Fitzpatrick wrote:\n\n> On Fri, Jan 27, 2012 at 5:07 PM, David Symonds <dsymonds@golang.org> wrote:\n> On Sat, Jan 28, 2012 at 12:02 PM, Rob 'Commander' Pike <r@google.com> wrote:\n> \n> > On Jan 27, 2012, at 4:18 PM, David Symonds wrote:\n> >\n> >> On Sat, Jan 28, 2012 at 10:56 AM,  <bradfitz@golang.org> wrote:\n> >>\n> >>> cmd/goapi is updated to have a mode to print out inconsistent\n> >>> receiver names.  Inconsistencies aren't errors--- just notes\n> >>> to review.  In many cases it's more clear for the documentation\n> >>> to have inconsistent receiver names.\n> >>\n> >> It's a useful goal, but cmd/goapi seems the wrong place for it.\n> >> Receiver names don't have any impact on API compatibility. Perhaps\n> >> this should be in govet instead?\n> >\n> > That would be a change of bailiwick. So far govet focuses mostly on errors, not stylistic points, although you have an in with the method check.\n> \n> Sure, but it feels closer to govet's role than goapi's responsibility,\n> which is to make sure we don't make backward incompatible changes.\n> \n> I agree that govet could be appropriate for this check, but I'd actually like to expand the scope of goapi.  Currently it just dumps & compares the API signature files, but since it already has a global view of the API, there's a lot of fun stuff it can do.  In addition to this receiver check, I have some other stuff coming up.\n> \n> I can remove the goapi changes from this CL, though, and move them to my next CL, adding some more global API operations.\n> \n> Preferences?\n\nI like grouping things that belong together when deciding how to put CLs together. I'm also fine with goapi doing this check.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-01-28 02:24:05.290714",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-27 23:56:03.717843",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jan 28, 2012 at 10:56 AM,  <bradfitz@golang.org> wrote:\n\n> cmd/goapi is updated to have a mode to print out inconsistent\n> receiver names. \u00a0Inconsistencies aren't errors--- just notes\n> to review. \u00a0In many cases it's more clear for the documentation\n> to have inconsistent receiver names.\n\nIt's a useful goal, but cmd/goapi seems the wrong place for it.\nReceiver names don't have any impact on API compatibility. Perhaps\nthis should be in govet instead?\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-01-28 00:18:42.390409",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jan 28, 2012 at 12:02 PM, Rob 'Commander' Pike <r@google.com> wrote:\n\n> On Jan 27, 2012, at 4:18 PM, David Symonds wrote:\n>\n>> On Sat, Jan 28, 2012 at 10:56 AM, \u00a0<bradfitz@golang.org> wrote:\n>>\n>>> cmd/goapi is updated to have a mode to print out inconsistent\n>>> receiver names. \u00a0Inconsistencies aren't errors--- just notes\n>>> to review. \u00a0In many cases it's more clear for the documentation\n>>> to have inconsistent receiver names.\n>>\n>> It's a useful goal, but cmd/goapi seems the wrong place for it.\n>> Receiver names don't have any impact on API compatibility. Perhaps\n>> this should be in govet instead?\n>\n> That would be a change of bailiwick. So far govet focuses mostly on errors, not stylistic points, although you have an in with the method check.\n\nSure, but it feels closer to govet's role than goapi's responsibility,\nwhich is to make sure we don't make backward incompatible changes.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-01-28 01:07:56.146416",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The other side of this is that this would be useful to external package\ndevelopers who are not otherwise interested in goapi.\n\nDave.\n",
			"disapproval": false,
			"date": "2012-01-29 21:32:23.986290",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, r@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-30 16:15:40.203675",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I've updated the CL to remove the goapi tool change.\n\nThoughts on just the receiver name changes?\n\n\nOn Mon, Jan 30, 2012 at 8:15 AM, <bradfitz@golang.org> wrote:\n\n> Hello golang-dev@googlegroups.com, dsymonds@golang.org, r@google.com\n> (cc: golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**5576056/<http://codereview.appspot.com/5576056/>\n>\n",
			"disapproval": false,
			"date": "2012-01-30 16:17:02.313022",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@google.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5576056/diff/8001/src/pkg/net/http/request.go\nFile src/pkg/net/http/request.go (right):\n\nhttp://codereview.appspot.com/5576056/diff/8001/src/pkg/net/http/request.go#newcode296\nsrc/pkg/net/http/request.go:296: // Request.Host or Request.URL.Host.\ns/Request/r/ in both places.  If you're referring to a specific variable,\nyou should refer to it.",
			"disapproval": false,
			"date": "2012-01-30 16:32:09.640232",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@google.com",
				"rsc@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ec8e4c6f107d ***\n\ndoc: use consistent receiver names, when it makes sense.\n\nMakes for prettier docs.\n\nR=golang-dev, dsymonds, r, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5576056",
			"disapproval": false,
			"date": "2012-01-30 19:58:51.746033",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5576056: doc: use consistent receiver names, when it makes sense.",
	"created": "2012-01-27 23:55:46.339180",
	"patchsets": [
		1,
		2001,
		8001,
		10002
	],
	"modified": "2012-01-30 19:58:52.634520",
	"closed": true,
	"issue": 5576056
}