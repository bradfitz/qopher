{
	"description": "undo CL 9672043 / 38d1b743fd69\n\nI have had reports that this breaks user code.\n\nUpdate issue 34\n\n\u00ab\u00ab\u00ab original CL description\ngoogle-api-go-client: update generated code with new param encoding from https://codereview.appspot.com/9671043/\n\nR=adg, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/9672043\n\u00bb\u00bb\u00bb",
	"cc": [
		"campoy@google.com",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"ikai@google.com"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello campoy@google.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/google-api-go-client",
			"disapproval": false,
			"date": "2013-06-03 01:40:02.654210",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but would prefer the commit reference a bug number with more details\r\n\r\n\r\n\r\nOn Sun, Jun 2, 2013 at 6:40 PM, <adg@golang.org> wrote:\r\n\r\n> Reviewers: campoy, bradfitz,\r\n>\r\n> Message:\r\n> Hello campoy@google.com, bradfitz@golang.org (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/**google-api-go-client<https://code.google.com/p/google-api-go-client>\r\n>\r\n>\r\n> Description:\r\n> undo CL 9672043 / 38d1b743fd69\r\n>\r\n> I have had reports that this breaks user code.\r\n>\r\n> \u00ab\u00ab\u00ab original CL description\r\n> google-api-go-client: update generated code with new param encoding from\r\n> https://codereview.appspot.**com/9671043/<https://codereview.appspot.com/9671043/>\r\n>\r\n> R=adg, bradfitz\r\n> CC=golang-dev\r\n> https://codereview.appspot.**com/9672043<https://codereview.appspot.com/9672043>\r\n> \u00bb\u00bb\u00bb\r\n>\r\n> Please review this at https://codereview.appspot.**com/9958043/<https://codereview.appspot.com/9958043/>\r\n>\r\n> Affected files:\r\n>   M adexchangebuyer/v1.1/**adexchangebuyer-api.json\r\n>   M adexchangebuyer/v1.1/**adexchangebuyer-gen.go\r\n>   M adexchangebuyer/v1.2/**adexchangebuyer-api.json\r\n>   M adexchangebuyer/v1.2/**adexchangebuyer-gen.go\r\n>   M adexchangebuyer/v1/**adexchangebuyer-api.json\r\n>   M adexchangebuyer/v1/**adexchangebuyer-gen.go\r\n>   M adexchangeseller/v1/**adexchangeseller-api.json\r\n>   M adexchangeseller/v1/**adexchangeseller-gen.go\r\n>   R admin/directory_v1/admin-api.**json\r\n>   R admin/directory_v1/admin-gen.**go\r\n>   R admin/reports_v1/admin-api.**json\r\n>   R admin/reports_v1/admin-gen.go\r\n>   M adsense/v1.1/adsense-api.json\r\n>   M adsense/v1.1/adsense-gen.go\r\n>   M adsense/v1.2/adsense-api.json\r\n>   M adsense/v1.2/adsense-gen.go\r\n>   M adsense/v1/adsense-api.json\r\n>   M adsense/v1/adsense-gen.go\r\n>   M adsensehost/v4.1/adsensehost-**api.json\r\n>   M adsensehost/v4.1/adsensehost-**gen.go\r\n>   M analytics/v2.4/analytics-api.**json\r\n>   M analytics/v2.4/analytics-gen.**go\r\n>   M analytics/v3/analytics-api.**json\r\n>   M analytics/v3/analytics-gen.go\r\n>   M androidpublisher/v1/**androidpublisher-api.json\r\n>   M androidpublisher/v1/**androidpublisher-gen.go\r\n>   M audit/v1/audit-api.json\r\n>   M audit/v1/audit-gen.go\r\n>   M bigquery/v2/bigquery-api.json\r\n>   M bigquery/v2/bigquery-gen.go\r\n>   M blogger/v2/blogger-api.json\r\n>   M blogger/v2/blogger-gen.go\r\n>   M blogger/v3/blogger-api.json\r\n>   M blogger/v3/blogger-gen.go\r\n>   M books/v1/books-api.json\r\n>   M books/v1/books-gen.go\r\n>   M calendar/v3/calendar-api.json\r\n>   M calendar/v3/calendar-gen.go\r\n>   M civicinfo/us_v1/civicinfo-api.**json\r\n>   M civicinfo/us_v1/civicinfo-gen.**go\r\n>   M compute/v1beta13/compute-api.**json\r\n>   M compute/v1beta13/compute-gen.**go\r\n>   M compute/v1beta14/compute-api.**json\r\n>   M compute/v1beta14/compute-gen.**go\r\n>   R compute/v1beta15/compute-api.**json\r\n>   R compute/v1beta15/compute-gen.**go\r\n>   M coordinate/v1/coordinate-api.**json\r\n>   M coordinate/v1/coordinate-gen.**go\r\n>   M customsearch/v1/customsearch-**api.json\r\n>   M customsearch/v1/customsearch-**gen.go\r\n>   R datastore/v1beta1/datastore-**api.json\r\n>   R datastore/v1beta1/datastore-**gen.go\r\n>   M dfareporting/v1.1/**dfareporting-api.json\r\n>   M dfareporting/v1.1/**dfareporting-gen.go\r\n>   R dfareporting/v1.2/**dfareporting-api.json\r\n>   R dfareporting/v1.2/**dfareporting-gen.go\r\n>   M dfareporting/v1/dfareporting-**api.json\r\n>   M dfareporting/v1/dfareporting-**gen.go\r\n>   M discovery/v1/discovery-api.**json\r\n>   M discovery/v1/discovery-gen.go\r\n>   M drive/v1/drive-api.json\r\n>   M drive/v1/drive-gen.go\r\n>   M drive/v2/drive-api.json\r\n>   M drive/v2/drive-gen.go\r\n>   M freebase/v1/freebase-api.json\r\n>   M freebase/v1/freebase-gen.go\r\n>   M freebase/v1sandbox/freebase-**api.json\r\n>   M freebase/v1sandbox/freebase-**gen.go\r\n>   M gan/v1beta1/gan-api.json\r\n>   M gan/v1beta1/gan-gen.go\r\n>   M groupsmigration/v1/**groupsmigration-api.json\r\n>   M groupsmigration/v1/**groupsmigration-gen.go\r\n>   M groupssettings/v1/**groupssettings-api.json\r\n>   M groupssettings/v1/**groupssettings-gen.go\r\n>   M latitude/v1/latitude-api.json\r\n>   M latitude/v1/latitude-gen.go\r\n>   M licensing/v1/licensing-api.**json\r\n>   M licensing/v1/licensing-gen.go\r\n>   M mirror/v1/mirror-api.json\r\n>   M mirror/v1/mirror-gen.go\r\n>   M oauth2/v1/oauth2-api.json\r\n>   M oauth2/v1/oauth2-gen.go\r\n>   M oauth2/v2/oauth2-api.json\r\n>   M oauth2/v2/oauth2-gen.go\r\n>   M orkut/v2/orkut-api.json\r\n>   M orkut/v2/orkut-gen.go\r\n>   M pagespeedonline/v1/**pagespeedonline-api.json\r\n>   M pagespeedonline/v1/**pagespeedonline-gen.go\r\n>   M plus/v1/plus-api.json\r\n>   M plus/v1/plus-gen.go\r\n>   M prediction/v1.2/prediction-**api.json\r\n>   M prediction/v1.2/prediction-**gen.go\r\n>   M prediction/v1.3/prediction-**api.json\r\n>   M prediction/v1.3/prediction-**gen.go\r\n>   M prediction/v1.4/prediction-**api.json\r\n>   M prediction/v1.4/prediction-**gen.go\r\n>   M prediction/v1.5/prediction-**api.json\r\n>   M prediction/v1.5/prediction-**gen.go\r\n>   M reseller/v1/reseller-api.json\r\n>   M reseller/v1/reseller-gen.go\r\n>   M reseller/v1sandbox/reseller-**api.json\r\n>   M reseller/v1sandbox/reseller-**gen.go\r\n>   M shopping/v1/shopping-api.json\r\n>   M shopping/v1/shopping-gen.go\r\n>   M siteverification/v1/**siteverification-api.json\r\n>   M siteverification/v1/**siteverification-gen.go\r\n>   M storage/v1beta1/storage-api.**json\r\n>   M storage/v1beta1/storage-gen.go\r\n>   M storage/v1beta2/storage-api.**json\r\n>   M storage/v1beta2/storage-gen.go\r\n>   M taskqueue/v1beta1/taskqueue-**api.json\r\n>   M taskqueue/v1beta1/taskqueue-**gen.go\r\n>   M taskqueue/v1beta2/taskqueue-**api.json\r\n>   M taskqueue/v1beta2/taskqueue-**gen.go\r\n>   M tasks/v1/tasks-api.json\r\n>   M tasks/v1/tasks-gen.go\r\n>   M translate/v2/translate-api.**json\r\n>   M translate/v2/translate-gen.go\r\n>   M urlshortener/v1/urlshortener-**api.json\r\n>   M urlshortener/v1/urlshortener-**gen.go\r\n>   M webfonts/v1/webfonts-api.json\r\n>   M webfonts/v1/webfonts-gen.go\r\n>   M youtube/v3/youtube-api.json\r\n>   M youtube/v3/youtube-gen.go\r\n>   M youtubeanalytics/v1/**youtubeanalytics-api.json\r\n>   M youtubeanalytics/v1/**youtubeanalytics-gen.go\r\n>   M youtubeanalytics/v1beta1/**youtubeanalytics-api.json\r\n>   M youtubeanalytics/v1beta1/**youtubeanalytics-gen.go\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-03 05:20:33.076610",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Jun 2, 2013 at 10:40 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n\r\n> added \"Update issue 34\".\r\n>\r\n> https://code.google.com/p/google-api-go-client/issues/detail?id=34\r\n>\r\n\r\nIsn't that exactly what we were skeptical of during the code review?\r\n",
			"disapproval": false,
			"date": "2013-06-03 05:51:28.902490",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"campoy@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/google-api-go-client/source/detail?r=5d818df85e09 ***\n\nundo CL 9672043 / 38d1b743fd69\n\nI have had reports that this breaks user code.\n\nUpdate issue 34\n\n\u00ab\u00ab\u00ab original CL description\ngoogle-api-go-client: update generated code with new param encoding from https://codereview.appspot.com/9671043/\n\nR=adg, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/9672043\n\u00bb\u00bb\u00bb\n\nR=campoy, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/9958043",
			"disapproval": false,
			"date": "2013-06-03 06:00:35.954280",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "added \"Update issue 34\".\r\n\r\nhttps://code.google.com/p/google-api-go-client/issues/detail?id=34\r\n",
			"disapproval": false,
			"date": "2013-06-03 05:41:29.997940",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 3 June 2013 15:51, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> Isn't that exactly what we were skeptical of during the code review?\r\n\r\n\r\nYes. But Francesc reported that it works. Maybe it does work for Storage\r\n(the API he was testing), and doesn't work for Drive? I await Francesc's\r\ncommentary on this.\r\n",
			"disapproval": false,
			"date": "2013-06-03 05:53:28.328750",
			"approval": false
		},
		{
			"sender": "campoy@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I tested it with other APIs too and got emails from go nuts members\r\nconfirming it worked for their code too.\r\n\r\nCould you send the report for the error? I'm curious about it.\r\nOn Jun 2, 2013 10:53 PM, \"Andrew Gerrand\" <adg@golang.org> wrote:\r\n\r\n>\r\n> On 3 June 2013 15:51, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>\r\n>> Isn't that exactly what we were skeptical of during the code review?\r\n>\r\n>\r\n> Yes. But Francesc reported that it works. Maybe it does work for Storage\r\n> (the API he was testing), and doesn't work for Drive? I await Francesc's\r\n> commentary on this.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-05 00:43:25.885030",
			"approval": false
		},
		{
			"sender": "ikai@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I tried with the API client after the rollback and it worked. I didn't know\r\nhow to upgrade the API client using \"go get\"; it didn't seem to do\r\nanything, even with the -a flag so I just did an \"rm -rf\" in the\r\n$GOROOT/src/pkg directory.\r\n\r\nThe report from the error is in the last email I sent you. The issue is\r\nthat this is the working request (after rollback):\r\n\r\nGET /youtube/v3/channels?mine=true&alt=json&part=contentDetails HTTP/1.1\r\nHost: www.googleapis.com\r\nUser-Agent: google-api-go-client/0.5\r\nAuthorization: Bearer ya29.AHES6ZSJ1rNPH20SQtkud_aY6pNc3Tajf-ivVdquFqflgL7x\r\n\r\nHere is what the client was doing pre-rollback:\r\n\r\nPOST //\r\nwww.googleapis.com/upload/drive/v2/files?uploadType=multipart&alt=json\r\n HTTP/1.1\r\nHost: www.googleapis.com\r\nUser-Agent: google-api-go-client/0.5\r\nContent-Length: 23301\r\nAuthorization: Bearer\r\nya29.AHES6ZSzpiJ0HuHW-8B86Q96ofG5OoW6W5AMLyiN-HkvMYXo996eAg\r\n\r\nThe only difference the APIs are different is because I'm writing these\r\nreally quickly because I don't have my Drive sample open, but the key\r\ndifference is in the first line. Pre-rollback, the clients were prefixing //\r\nwww.googleapis.com/ to the URI, which was breaking the Apiary call. I think\r\nthe issue comes from here:\r\n\r\nhttps://code.google.com/p/google-api-go-client/source/diff?spec=svn5d818df85e09a157dee9e45fb74f8d6527dd3718&r=5d818df85e09a157dee9e45fb74f8d6527dd3718&format=side&path=/youtube/v3/youtube-gen.go\r\n\r\nSee line 2430. Code that doesn't work:\r\n\r\n req.URL.Opaque = \"//\" + req.URL.Host + req.URL.Path\r\nThis appears a few more times in the version that is broken. I'm using Go\r\nversion 1.0.3 and the version of Goauth recent as of a week ago.\r\n\r\n\r\n--\r\nIkai Lan | *YouTube* Developer Relations\r\nGoogle New York | 76 Ninth Ave, New York, NY, 10011 | +1 212-565-0000\r\n\r\n\r\nOn Tue, Jun 4, 2013 at 8:43 PM, Francesc Campoy Flores <campoy@google.com>wrote:\r\n\r\n> I tested it with other APIs too and got emails from go nuts members\r\n> confirming it worked for their code too.\r\n>\r\n> Could you send the report for the error? I'm curious about it.\r\n> On Jun 2, 2013 10:53 PM, \"Andrew Gerrand\" <adg@golang.org> wrote:\r\n>\r\n>>\r\n>> On 3 June 2013 15:51, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>>\r\n>>> Isn't that exactly what we were skeptical of during the code review?\r\n>>\r\n>>\r\n>> Yes. But Francesc reported that it works. Maybe it does work for Storage\r\n>> (the API he was testing), and doesn't work for Drive? I await Francesc's\r\n>> commentary on this.\r\n>>\r\n>>\r\n",
			"disapproval": false,
			"date": "2013-06-05 15:45:15.647020",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Oh, I bet the issue is Go 1.0.  I recall Opaque changes in Go 1.1 which\r\nprobably makes this work.\r\n\r\nShould we require Go 1.1 for google-api-go-client?\r\n\r\n\r\n\r\nOn Wed, Jun 5, 2013 at 8:44 AM, Ikai Lan <ikai@google.com> wrote:\r\n\r\n> I tried with the API client after the rollback and it worked. I didn't\r\n> know how to upgrade the API client using \"go get\"; it didn't seem to do\r\n> anything, even with the -a flag so I just did an \"rm -rf\" in the\r\n> $GOROOT/src/pkg directory.\r\n>\r\n> The report from the error is in the last email I sent you. The issue is\r\n> that this is the working request (after rollback):\r\n>\r\n> GET /youtube/v3/channels?mine=true&alt=json&part=contentDetails HTTP/1.1\r\n> Host: www.googleapis.com\r\n> User-Agent: google-api-go-client/0.5\r\n> Authorization: Bearer ya29.AHES6ZSJ1rNPH20SQtkud_aY6pNc3Tajf-ivVdquFqflgL7x\r\n>\r\n> Here is what the client was doing pre-rollback:\r\n>\r\n> POST //\r\n> www.googleapis.com/upload/drive/v2/files?uploadType=multipart&alt=json\r\n>  HTTP/1.1\r\n> Host: www.googleapis.com\r\n> User-Agent: google-api-go-client/0.5\r\n> Content-Length: 23301\r\n> Authorization: Bearer\r\n> ya29.AHES6ZSzpiJ0HuHW-8B86Q96ofG5OoW6W5AMLyiN-HkvMYXo996eAg\r\n>\r\n> The only difference the APIs are different is because I'm writing these\r\n> really quickly because I don't have my Drive sample open, but the key\r\n> difference is in the first line. Pre-rollback, the clients were prefixing //\r\n> www.googleapis.com/ to the URI, which was breaking the Apiary call. I\r\n> think the issue comes from here:\r\n>\r\n>\r\n> https://code.google.com/p/google-api-go-client/source/diff?spec=svn5d818df85e09a157dee9e45fb74f8d6527dd3718&r=5d818df85e09a157dee9e45fb74f8d6527dd3718&format=side&path=/youtube/v3/youtube-gen.go\r\n>\r\n> See line 2430. Code that doesn't work:\r\n>\r\n>  req.URL.Opaque = \"//\" + req.URL.Host + req.URL.Path\r\n> This appears a few more times in the version that is broken. I'm using Go\r\n> version 1.0.3 and the version of Goauth recent as of a week ago.\r\n>\r\n>\r\n> --\r\n> Ikai Lan | *YouTube* Developer Relations\r\n> Google New York | 76 Ninth Ave, New York, NY, 10011 | +1 212-565-0000\r\n>\r\n>\r\n> On Tue, Jun 4, 2013 at 8:43 PM, Francesc Campoy Flores <campoy@google.com>wrote:\r\n>\r\n>> I tested it with other APIs too and got emails from go nuts members\r\n>> confirming it worked for their code too.\r\n>>\r\n>> Could you send the report for the error? I'm curious about it.\r\n>> On Jun 2, 2013 10:53 PM, \"Andrew Gerrand\" <adg@golang.org> wrote:\r\n>>\r\n>>>\r\n>>> On 3 June 2013 15:51, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>>>\r\n>>>> Isn't that exactly what we were skeptical of during the code review?\r\n>>>\r\n>>>\r\n>>> Yes. But Francesc reported that it works. Maybe it does work for Storage\r\n>>> (the API he was testing), and doesn't work for Drive? I await Francesc's\r\n>>> commentary on this.\r\n>>>\r\n>>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-05 15:48:44.529870",
			"approval": false
		},
		{
			"sender": "ikai@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It should be your team's call. In general I'm inclined to say no, but as of\r\nright now this change will impact zero of our existing developers, and you\r\nguys have a better gauge on whether Go developers care or not that they\r\nhave to upgrade to use Apiary.\r\n\r\n\r\n--\r\nIkai Lan | *YouTube* Developer Relations\r\nGoogle New York | 76 Ninth Ave, New York, NY, 10011 | +1 212-565-0000\r\n\r\n\r\nOn Wed, Jun 5, 2013 at 11:48 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> Oh, I bet the issue is Go 1.0.  I recall Opaque changes in Go 1.1 which\r\n> probably makes this work.\r\n>\r\n> Should we require Go 1.1 for google-api-go-client?\r\n>\r\n>\r\n>\r\n> On Wed, Jun 5, 2013 at 8:44 AM, Ikai Lan <ikai@google.com> wrote:\r\n>\r\n>> I tried with the API client after the rollback and it worked. I didn't\r\n>> know how to upgrade the API client using \"go get\"; it didn't seem to do\r\n>> anything, even with the -a flag so I just did an \"rm -rf\" in the\r\n>> $GOROOT/src/pkg directory.\r\n>>\r\n>> The report from the error is in the last email I sent you. The issue is\r\n>> that this is the working request (after rollback):\r\n>>\r\n>> GET /youtube/v3/channels?mine=true&alt=json&part=contentDetails HTTP/1.1\r\n>> Host: www.googleapis.com\r\n>> User-Agent: google-api-go-client/0.5\r\n>> Authorization: Bearer\r\n>> ya29.AHES6ZSJ1rNPH20SQtkud_aY6pNc3Tajf-ivVdquFqflgL7x\r\n>>\r\n>> Here is what the client was doing pre-rollback:\r\n>>\r\n>> POST //\r\n>> www.googleapis.com/upload/drive/v2/files?uploadType=multipart&alt=json\r\n>>  HTTP/1.1\r\n>> Host: www.googleapis.com\r\n>> User-Agent: google-api-go-client/0.5\r\n>> Content-Length: 23301\r\n>> Authorization: Bearer\r\n>> ya29.AHES6ZSzpiJ0HuHW-8B86Q96ofG5OoW6W5AMLyiN-HkvMYXo996eAg\r\n>>\r\n>> The only difference the APIs are different is because I'm writing these\r\n>> really quickly because I don't have my Drive sample open, but the key\r\n>> difference is in the first line. Pre-rollback, the clients were prefixing //\r\n>> www.googleapis.com/ to the URI, which was breaking the Apiary call. I\r\n>> think the issue comes from here:\r\n>>\r\n>>\r\n>> https://code.google.com/p/google-api-go-client/source/diff?spec=svn5d818df85e09a157dee9e45fb74f8d6527dd3718&r=5d818df85e09a157dee9e45fb74f8d6527dd3718&format=side&path=/youtube/v3/youtube-gen.go\r\n>>\r\n>> See line 2430. Code that doesn't work:\r\n>>\r\n>>  req.URL.Opaque = \"//\" + req.URL.Host + req.URL.Path\r\n>> This appears a few more times in the version that is broken. I'm using Go\r\n>> version 1.0.3 and the version of Goauth recent as of a week ago.\r\n>>\r\n>>\r\n>> --\r\n>> Ikai Lan | *YouTube* Developer Relations\r\n>> Google New York | 76 Ninth Ave, New York, NY, 10011 | +1 212-565-0000\r\n>>\r\n>>\r\n>> On Tue, Jun 4, 2013 at 8:43 PM, Francesc Campoy Flores <campoy@google.com\r\n>> > wrote:\r\n>>\r\n>>> I tested it with other APIs too and got emails from go nuts members\r\n>>> confirming it worked for their code too.\r\n>>>\r\n>>> Could you send the report for the error? I'm curious about it.\r\n>>> On Jun 2, 2013 10:53 PM, \"Andrew Gerrand\" <adg@golang.org> wrote:\r\n>>>\r\n>>>>\r\n>>>> On 3 June 2013 15:51, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>>>>\r\n>>>>> Isn't that exactly what we were skeptical of during the code review?\r\n>>>>\r\n>>>>\r\n>>>> Yes. But Francesc reported that it works. Maybe it does work for\r\n>>>> Storage (the API he was testing), and doesn't work for Drive? I await\r\n>>>> Francesc's commentary on this.\r\n>>>>\r\n>>>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-05 20:00:40.290450",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "As soon as Go 1.1 is generally available on App Engine, we should require\r\nall users to run Go 1.1 to use the google-api-go-client. I would even be\r\ninclined to add a log message on startup to that effect.\r\n\r\n\r\nOn 6 June 2013 06:00, Ikai Lan <ikai@google.com> wrote:\r\n\r\n> It should be your team's call. In general I'm inclined to say no, but as\r\n> of right now this change will impact zero of our existing developers, and\r\n> you guys have a better gauge on whether Go developers care or not that they\r\n> have to upgrade to use Apiary.\r\n>\r\n>\r\n> --\r\n> Ikai Lan | *YouTube* Developer Relations\r\n> Google New York | 76 Ninth Ave, New York, NY, 10011 | +1 212-565-0000\r\n>\r\n>\r\n> On Wed, Jun 5, 2013 at 11:48 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>\r\n>> Oh, I bet the issue is Go 1.0.  I recall Opaque changes in Go 1.1 which\r\n>> probably makes this work.\r\n>>\r\n>> Should we require Go 1.1 for google-api-go-client?\r\n>>\r\n>>\r\n>>\r\n>> On Wed, Jun 5, 2013 at 8:44 AM, Ikai Lan <ikai@google.com> wrote:\r\n>>\r\n>>> I tried with the API client after the rollback and it worked. I didn't\r\n>>> know how to upgrade the API client using \"go get\"; it didn't seem to do\r\n>>> anything, even with the -a flag so I just did an \"rm -rf\" in the\r\n>>> $GOROOT/src/pkg directory.\r\n>>>\r\n>>> The report from the error is in the last email I sent you. The issue is\r\n>>> that this is the working request (after rollback):\r\n>>>\r\n>>> GET /youtube/v3/channels?mine=true&alt=json&part=contentDetails HTTP/1.1\r\n>>> Host: www.googleapis.com\r\n>>> User-Agent: google-api-go-client/0.5\r\n>>> Authorization: Bearer\r\n>>> ya29.AHES6ZSJ1rNPH20SQtkud_aY6pNc3Tajf-ivVdquFqflgL7x\r\n>>>\r\n>>> Here is what the client was doing pre-rollback:\r\n>>>\r\n>>> POST //\r\n>>> www.googleapis.com/upload/drive/v2/files?uploadType=multipart&alt=json\r\n>>>  HTTP/1.1\r\n>>> Host: www.googleapis.com\r\n>>> User-Agent: google-api-go-client/0.5\r\n>>> Content-Length: 23301\r\n>>> Authorization: Bearer\r\n>>> ya29.AHES6ZSzpiJ0HuHW-8B86Q96ofG5OoW6W5AMLyiN-HkvMYXo996eAg\r\n>>>\r\n>>> The only difference the APIs are different is because I'm writing these\r\n>>> really quickly because I don't have my Drive sample open, but the key\r\n>>> difference is in the first line. Pre-rollback, the clients were prefixing //\r\n>>> www.googleapis.com/ to the URI, which was breaking the Apiary call. I\r\n>>> think the issue comes from here:\r\n>>>\r\n>>>\r\n>>> https://code.google.com/p/google-api-go-client/source/diff?spec=svn5d818df85e09a157dee9e45fb74f8d6527dd3718&r=5d818df85e09a157dee9e45fb74f8d6527dd3718&format=side&path=/youtube/v3/youtube-gen.go\r\n>>>\r\n>>> See line 2430. Code that doesn't work:\r\n>>>\r\n>>>  req.URL.Opaque = \"//\" + req.URL.Host + req.URL.Path\r\n>>> This appears a few more times in the version that is broken. I'm using\r\n>>> Go version 1.0.3 and the version of Goauth recent as of a week ago.\r\n>>>\r\n>>>\r\n>>> --\r\n>>> Ikai Lan | *YouTube* Developer Relations\r\n>>> Google New York | 76 Ninth Ave, New York, NY, 10011 | +1 212-565-0000\r\n>>>\r\n>>>\r\n>>> On Tue, Jun 4, 2013 at 8:43 PM, Francesc Campoy Flores <\r\n>>> campoy@google.com> wrote:\r\n>>>\r\n>>>> I tested it with other APIs too and got emails from go nuts members\r\n>>>> confirming it worked for their code too.\r\n>>>>\r\n>>>> Could you send the report for the error? I'm curious about it.\r\n>>>> On Jun 2, 2013 10:53 PM, \"Andrew Gerrand\" <adg@golang.org> wrote:\r\n>>>>\r\n>>>>>\r\n>>>>> On 3 June 2013 15:51, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>>>>>\r\n>>>>>> Isn't that exactly what we were skeptical of during the code review?\r\n>>>>>\r\n>>>>>\r\n>>>>> Yes. But Francesc reported that it works. Maybe it does work for\r\n>>>>> Storage (the API he was testing), and doesn't work for Drive? I await\r\n>>>>> Francesc's commentary on this.\r\n>>>>>\r\n>>>>>\r\n>>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-05 23:31:32.554950",
			"approval": false
		},
		{
			"sender": "ikai@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "SGTM. I can even include a check for Go 1.1 if you're going to put Opaque\r\nback in. Is there a better way to check for 1.1 than\r\nhttp://golang.org/pkg/runtime/#Version?\r\n\r\n\r\n--\r\nIkai Lan | *YouTube* Developer Relations\r\nGoogle New York | 76 Ninth Ave, New York, NY, 10011 | +1 212-565-0000\r\n\r\n\r\nOn Wed, Jun 5, 2013 at 7:31 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n\r\n> As soon as Go 1.1 is generally available on App Engine, we should require\r\n> all users to run Go 1.1 to use the google-api-go-client. I would even be\r\n> inclined to add a log message on startup to that effect.\r\n>\r\n>\r\n> On 6 June 2013 06:00, Ikai Lan <ikai@google.com> wrote:\r\n>\r\n>> It should be your team's call. In general I'm inclined to say no, but as\r\n>> of right now this change will impact zero of our existing developers, and\r\n>> you guys have a better gauge on whether Go developers care or not that they\r\n>> have to upgrade to use Apiary.\r\n>>\r\n>>\r\n>> --\r\n>> Ikai Lan | *YouTube* Developer Relations\r\n>> Google New York | 76 Ninth Ave, New York, NY, 10011 | +1 212-565-0000\r\n>>\r\n>>\r\n>> On Wed, Jun 5, 2013 at 11:48 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>>\r\n>>> Oh, I bet the issue is Go 1.0.  I recall Opaque changes in Go 1.1 which\r\n>>> probably makes this work.\r\n>>>\r\n>>> Should we require Go 1.1 for google-api-go-client?\r\n>>>\r\n>>>\r\n>>>\r\n>>> On Wed, Jun 5, 2013 at 8:44 AM, Ikai Lan <ikai@google.com> wrote:\r\n>>>\r\n>>>> I tried with the API client after the rollback and it worked. I didn't\r\n>>>> know how to upgrade the API client using \"go get\"; it didn't seem to do\r\n>>>> anything, even with the -a flag so I just did an \"rm -rf\" in the\r\n>>>> $GOROOT/src/pkg directory.\r\n>>>>\r\n>>>> The report from the error is in the last email I sent you. The issue is\r\n>>>> that this is the working request (after rollback):\r\n>>>>\r\n>>>> GET /youtube/v3/channels?mine=true&alt=json&part=contentDetails HTTP/1.1\r\n>>>> Host: www.googleapis.com\r\n>>>> User-Agent: google-api-go-client/0.5\r\n>>>> Authorization: Bearer\r\n>>>> ya29.AHES6ZSJ1rNPH20SQtkud_aY6pNc3Tajf-ivVdquFqflgL7x\r\n>>>>\r\n>>>> Here is what the client was doing pre-rollback:\r\n>>>>\r\n>>>> POST //\r\n>>>> www.googleapis.com/upload/drive/v2/files?uploadType=multipart&alt=json\r\n>>>>  HTTP/1.1\r\n>>>> Host: www.googleapis.com\r\n>>>> User-Agent: google-api-go-client/0.5\r\n>>>> Content-Length: 23301\r\n>>>> Authorization: Bearer\r\n>>>> ya29.AHES6ZSzpiJ0HuHW-8B86Q96ofG5OoW6W5AMLyiN-HkvMYXo996eAg\r\n>>>>\r\n>>>> The only difference the APIs are different is because I'm writing these\r\n>>>> really quickly because I don't have my Drive sample open, but the key\r\n>>>> difference is in the first line. Pre-rollback, the clients were prefixing //\r\n>>>> www.googleapis.com/ to the URI, which was breaking the Apiary call. I\r\n>>>> think the issue comes from here:\r\n>>>>\r\n>>>>\r\n>>>> https://code.google.com/p/google-api-go-client/source/diff?spec=svn5d818df85e09a157dee9e45fb74f8d6527dd3718&r=5d818df85e09a157dee9e45fb74f8d6527dd3718&format=side&path=/youtube/v3/youtube-gen.go\r\n>>>>\r\n>>>> See line 2430. Code that doesn't work:\r\n>>>>\r\n>>>>  req.URL.Opaque = \"//\" + req.URL.Host + req.URL.Path\r\n>>>> This appears a few more times in the version that is broken. I'm using\r\n>>>> Go version 1.0.3 and the version of Goauth recent as of a week ago.\r\n>>>>\r\n>>>>\r\n>>>> --\r\n>>>> Ikai Lan | *YouTube* Developer Relations\r\n>>>> Google New York | 76 Ninth Ave, New York, NY, 10011 | +1 212-565-0000\r\n>>>>\r\n>>>>\r\n>>>> On Tue, Jun 4, 2013 at 8:43 PM, Francesc Campoy Flores <\r\n>>>> campoy@google.com> wrote:\r\n>>>>\r\n>>>>> I tested it with other APIs too and got emails from go nuts members\r\n>>>>> confirming it worked for their code too.\r\n>>>>>\r\n>>>>> Could you send the report for the error? I'm curious about it.\r\n>>>>> On Jun 2, 2013 10:53 PM, \"Andrew Gerrand\" <adg@golang.org> wrote:\r\n>>>>>\r\n>>>>>>\r\n>>>>>> On 3 June 2013 15:51, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>>>>>>\r\n>>>>>>> Isn't that exactly what we were skeptical of during the code review?\r\n>>>>>>\r\n>>>>>>\r\n>>>>>> Yes. But Francesc reported that it works. Maybe it does work for\r\n>>>>>> Storage (the API he was testing), and doesn't work for Drive? I await\r\n>>>>>> Francesc's commentary on this.\r\n>>>>>>\r\n>>>>>>\r\n>>>>\r\n>>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-06-06 14:40:09.295550",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 9958043: undo CL 9672043 / 38d1b743fd69",
	"created": "2013-06-03 01:33:35.904720",
	"patchsets": [
		1,
		2001,
		45001,
		50005
	],
	"modified": "2013-06-06 14:40:09.623620",
	"closed": true,
	"issue": 9958043
}