{
	"description": "exp/template/html: flesh out package documentation.",
	"cc": [
		"nigeltao@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "thanks, this will be great to have. i've got a couple of fairly big comments that might well be applicable throughout. i'm off to a meeting and thought i should send what i have before departing.\n\nhttp://codereview.appspot.com/4969078/diff/4001/src/pkg/exp/template/html/doc.go\nFile src/pkg/exp/template/html/doc.go (right):\n\nhttp://codereview.appspot.com/4969078/diff/4001/src/pkg/exp/template/html/doc.go#newcode32\nsrc/pkg/exp/template/html/doc.go:32: without introducing injection hazards.\nThis is a helpful example but a bit messy and distracting up top.Maybe move it to an example section later on, and here say\n\nIt rewrites the internal representation of the template to guarantee that generated HTML and JavaScript output is properly escaped to block certain classes of attack.\n\nor something like that.\n\nhttp://codereview.appspot.com/4969078/diff/4001/src/pkg/exp/template/html/doc.go#newcode38\nsrc/pkg/exp/template/html/doc.go:38: func EscapeSet(set, ...names) takes a *template.Set and the names of all\nEnglish sentences start with a capital letter. Rewrite so the issue doesn't arise. I'd even drop the signature and write prose\n\nThe function EscapeSet takes a ....\n\nhttp://codereview.appspot.com/4969078/diff/4001/src/pkg/exp/template/html/doc.go#newcode40\nsrc/pkg/exp/template/html/doc.go:40: You do not need to include the names of helper templates in names but should\nYou've changed the subject from the code to the second person. Poor style; be consistent.\n\nhttp://codereview.appspot.com/4969078/diff/4001/src/pkg/exp/template/html/doc.go#newcode49\nsrc/pkg/exp/template/html/doc.go:49: Do not use Escape if your template uses {{template}} calls.\nAgain, wrong subject.\n\nOverall, this section is hard to follow.  Introduce the approach and then describe it in more detail.",
			"disapproval": false,
			"date": "2011-09-12 20:58:26.688559",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I uploaded another snapshot that addresses your first set of quick concerns but that does not yet narrow the audience as requested in your second set of comments.\n\nhttp://codereview.appspot.com/4969078/diff/4001/src/pkg/exp/template/html/doc.go\nFile src/pkg/exp/template/html/doc.go (right):\n\nhttp://codereview.appspot.com/4969078/diff/4001/src/pkg/exp/template/html/doc.go#newcode32\nsrc/pkg/exp/template/html/doc.go:32: without introducing injection hazards.\nOn 2011/09/12 20:58:26, r wrote:\n> This is a helpful example but a bit messy and distracting up top.Maybe move it\n> to an example section later on, and here say\n> \n> It rewrites the internal representation of the template to guarantee that\n> generated HTML and JavaScript output is properly escaped to block certain\n> classes of attack.\n> \n> or something like that.\n\nMoved below to an example section after the now reduced Usage section.\n\nhttp://codereview.appspot.com/4969078/diff/4001/src/pkg/exp/template/html/doc.go#newcode38\nsrc/pkg/exp/template/html/doc.go:38: func EscapeSet(set, ...names) takes a *template.Set and the names of all\nOn 2011/09/12 20:58:26, r wrote:\n> English sentences start with a capital letter. Rewrite so the issue doesn't\n> arise. I'd even drop the signature and write prose\n> \n> The function EscapeSet takes a ....\n\nDone.\n\nhttp://codereview.appspot.com/4969078/diff/4001/src/pkg/exp/template/html/doc.go#newcode40\nsrc/pkg/exp/template/html/doc.go:40: You do not need to include the names of helper templates in names but should\nOn 2011/09/12 20:58:26, r wrote:\n> You've changed the subject from the code to the second person. Poor style; be\n> consistent.\n\nDone.\n\nhttp://codereview.appspot.com/4969078/diff/4001/src/pkg/exp/template/html/doc.go#newcode49\nsrc/pkg/exp/template/html/doc.go:49: Do not use Escape if your template uses {{template}} calls.\nOn 2011/09/12 20:58:26, r wrote:\n> Again, wrong subject.\n> \n> Overall, this section is hard to follow.  Introduce the approach and then\n> describe it in more detail.\n\nDone.",
			"disapproval": false,
			"date": "2011-09-12 21:57:29.364991",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "2011/9/12  <nigeltao@golang.org>:\n> LGTM.\n>\n> I'm happy to check this in and let r rip into it.\n>\n> One nit is that doc.go uses two spaces after an indent and the rest of\n> the package uses one (most of the time), but that's no big deal, and if\n> you were going to change it, it'd probably be easier at this point to\n> change the other .go files than change doc.go.\n\nSorry.  One of these days I'll send you a CL without that problem.  I\nneed to write my own pre-upload checks.\n",
			"disapproval": false,
			"date": "2011-09-13 00:00:52.530868",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-12 20:44:46.196798",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "i wonder how much of this needs to be in the package docs. it's a lot of detail. perhaps you could reduce it down to the essentials of usage for the package doc, and then after the package clause add more detail for implementers.\n\nyou might look at package gob and its doc.go for an example, but even it has more than you need in the doc comment. you can probably do much less.",
			"disapproval": false,
			"date": "2011-09-12 21:04:55.386857",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4969078/diff/12004/src/pkg/exp/template/html/doc.go\nFile src/pkg/exp/template/html/doc.go (right):\n\nhttp://codereview.appspot.com/4969078/diff/12004/src/pkg/exp/template/html/doc.go#newcode157\nsrc/pkg/exp/template/html/doc.go:157: Fourth, contact us.  You may have a useful pattern that EscapeSet does not\nOn 2011/09/12 23:52:00, nigeltao wrote:\n> Who is \"us\"?\n\n\"contact us\" -> \"contact the mailing list\" in 2 places.\n\nhttp://codereview.appspot.com/4969078/diff/12004/src/pkg/exp/template/html/doc.go#newcode338\nsrc/pkg/exp/template/html/doc.go:338: tmpl.Execute(out, struct{ TypedStringer TypedWorld }{safeHTML{}})\nOn 2011/09/12 23:52:00, nigeltao wrote:\n \n>   Hello, {{.}}\n> \n> can be invoked with\n> \n>   tmpl.Execute(out, safeHTML{})\n\nDone this and updated broken reference to {{.World}} below.\n\nhttp://codereview.appspot.com/4969078/diff/12004/src/pkg/exp/template/html/doc.go#newcode348\nsrc/pkg/exp/template/html/doc.go:348: which would have been produced if {{.World}} was not typed.\nOn 2011/09/12 23:52:00, nigeltao wrote:\n> s/was not typed/did not implement TypedStringer/.\n\nDone.",
			"disapproval": false,
			"date": "2011-09-13 00:07:41.394185",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "i'll toss the ball back to you. if you like, i'd be happy to do this by checking in what you have and then doing my own rewrite of the prose that you review.\n\nhttp://codereview.appspot.com/4969078/diff/16001/src/pkg/exp/template/html/doc.go\nFile src/pkg/exp/template/html/doc.go (right):\n\nhttp://codereview.appspot.com/4969078/diff/16001/src/pkg/exp/template/html/doc.go#newcode10\nsrc/pkg/exp/template/html/doc.go:10: \ntwo blank lines provide enough spacing between sections.\n\nhttp://codereview.appspot.com/4969078/diff/16001/src/pkg/exp/template/html/doc.go#newcode54\nsrc/pkg/exp/template/html/doc.go:54: Debugging\ncall this section \"Errors\"\n\ni still think you have too much detail here. perhaps the way to go is to do an introduction like the one you have, add a little detail about contexts, and then say something like \"the rest of this package comment may be skipped on first reading; it includes details necessary to understand escaping contexts and error returns.\"\n\na concise summary of the security posture might belong up top too.\n\nhttp://codereview.appspot.com/4969078/diff/16001/src/pkg/exp/template/html/doc.go#newcode56\nsrc/pkg/exp/template/html/doc.go:56: EscapeSet may return an os.Error matching one of the below.\n\"below\" is not a noun.\n\n\n\nIf EscapeSet returns an error, do not Execute the set; it is not safe against injection.\n[but isn't the returned set nil? i guess you don't overwrite the original if there's a problem, but i think you're in your rights to do so]\n\nThe particular error explains the problem with the templates:",
			"disapproval": false,
			"date": "2011-09-12 22:48:08.945358",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I restructured, and if the below looks better, I'm happy to submit so you can rip into it on your own and send me a CL.\n\nResponses inline and incremental diffs at http://codereview.appspot.com/4969078/diff2/16001:12004/src/pkg/exp/template/html/doc.go\n\nhttp://codereview.appspot.com/4969078/diff/16001/src/pkg/exp/template/html/doc.go\nFile src/pkg/exp/template/html/doc.go (right):\n\nhttp://codereview.appspot.com/4969078/diff/16001/src/pkg/exp/template/html/doc.go#newcode10\nsrc/pkg/exp/template/html/doc.go:10: \nOn 2011/09/12 22:48:09, r wrote:\n> two blank lines provide enough spacing between sections.\n\nDone 7 places.\n\nhttp://codereview.appspot.com/4969078/diff/16001/src/pkg/exp/template/html/doc.go#newcode54\nsrc/pkg/exp/template/html/doc.go:54: Debugging\nOn 2011/09/12 22:48:09, r wrote:\n> call this section \"Errors\"\n\nDone.\n\n> i still think you have too much detail here. perhaps the way to go is to do an\n> introduction like the one you have, add a little detail about contexts, and then\n> say something like \"the rest of this package comment may be skipped on first\n> reading; it includes details necessary to understand escaping contexts and error\n> returns.\"\n\nI reworked it.  The structure is now:\n\nUsage\n\nExample\n\nErrors (Caveat only)\n\nSecurity Posture (first paragraph only)\n\nContext (one paragraph only)\n\nYou can stop reading now\n\nErrors Detail\n\nContext Detail\n\nSecurity Posture Remainder\n\n\n> a concise summary of the security posture might belong up top too.\n\nhttp://codereview.appspot.com/4969078/diff/16001/src/pkg/exp/template/html/doc.go#newcode56\nsrc/pkg/exp/template/html/doc.go:56: EscapeSet may return an os.Error matching one of the below.\nOn 2011/09/12 22:48:09, r wrote:\n> \"below\" is not a noun.\n\nReworded to use \"The particular error explains the problem with the templates:\"\n\n\n\n> If EscapeSet returns an error, do not Execute the set; it is not safe against\n> injection.\n> [but isn't the returned set nil? i guess you don't overwrite the original if\n> there's a problem, but i think you're in your rights to do so]\n\nYes, I was worried about\n\n    var set template.Set\n    set.Add(...)\n    EscapeSet(&set, \"name\")  // ignoring Error, nil set does not replace set\n    set.Execute(...)\n\nIt had not occurred to me to destructively modify templates on failure.\nI can just nil out each named template's Tree.\n\nIf so, I can probably remove the first Errors section from the above.",
			"disapproval": false,
			"date": "2011-09-12 23:30:32.000283",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "how about doing the modification that the template is invalidated if there's an error, adjusting the doc as that would indicate.\n\nthen i'll do a quick review and you can check it in for me to fine tune.\n\nit's pretty good, but i'm fussy about language so i'm happy to fine-tune it. it's faster if i do that rather than type it all in and have you copy it. if only mondrian were collaborative.",
			"disapproval": false,
			"date": "2011-09-12 23:44:50.073269",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.\n\nI'm happy to check this in and let r rip into it.\n\nOne nit is that doc.go uses two spaces after an indent and the rest of the package uses one (most of the time), but that's no big deal, and if you were going to change it, it'd probably be easier at this point to change the other .go files than change doc.go.\n\nhttp://codereview.appspot.com/4969078/diff/12004/src/pkg/exp/template/html/doc.go\nFile src/pkg/exp/template/html/doc.go (right):\n\nhttp://codereview.appspot.com/4969078/diff/12004/src/pkg/exp/template/html/doc.go#newcode157\nsrc/pkg/exp/template/html/doc.go:157: Fourth, contact us.  You may have a useful pattern that EscapeSet does not\nWho is \"us\"?\n\nhttp://codereview.appspot.com/4969078/diff/12004/src/pkg/exp/template/html/doc.go#newcode338\nsrc/pkg/exp/template/html/doc.go:338: tmpl.Execute(out, struct{ TypedStringer TypedWorld }{safeHTML{}})\nSwap the order of \"TypedStringer TypedWorld\". But it's possibly clearer if the example was just\n\n  Hello, {{.}}\n\ncan be invoked with\n\n  tmpl.Execute(out, safeHTML{})\n\nhttp://codereview.appspot.com/4969078/diff/12004/src/pkg/exp/template/html/doc.go#newcode348\nsrc/pkg/exp/template/html/doc.go:348: which would have been produced if {{.World}} was not typed.\ns/was not typed/did not implement TypedStringer/.",
			"disapproval": false,
			"date": "2011-09-12 23:52:00.629758",
			"approval": true
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "2011/9/12  <r@golang.org>:\n> how about doing the modification that the template is invalidated if\n> there's an error, adjusting the doc as that would indicate.\n\nI've jumped the gun a bit.\nEscapeSet is added in http://codereview.appspot.com/4969072/ which is\nstill pending review by Nigel.  He's already commented on the\nEscapeSet contract, so I don't expect that to change, but trying to\ninvalidate templates before 4969072 would just lead to needless merge\nconflicts.\n\n\n> then i'll do a quick review and you can check it in for me to fine tune.\n>\n> it's pretty good, but i'm fussy about language so i'm happy to fine-tune\n> it. it's faster if i do that rather than type it all in and have you\n> copy it. if only mondrian were collaborative.\n\nGoogle docs is collaborative and works fine for prose.\n\nhttps://docs.google.com/document/d/123p2TQqeXEQp3jzWjt0Vd6HN8RGitKhFrNXJaOPq3Tw\n?\n",
			"disapproval": false,
			"date": "2011-09-12 23:57:19.541189",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "i've done some work on the document. let me know what you think.\n\nmy main observation is still that it's too much detail for a package\ncomment. I'm not even sure the error messages need detailed\nexplanation there as opposed to a separate reference.\n\ni wonder if the errors should be typed. that would provide once\ncontext for documenting them.\n",
			"disapproval": false,
			"date": "2011-09-13 20:06:14.548774",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4969078/diff/32001/src/pkg/exp/template/html/doc.go\nFile src/pkg/exp/template/html/doc.go (right):\n\nhttp://codereview.appspot.com/4969078/diff/32001/src/pkg/exp/template/html/doc.go#newcode370\nsrc/pkg/exp/template/html/doc.go:370: Security Posture\nOn 2011/09/14 20:13:58, r wrote:\n> s/Posture/Model/\n> to be consistent with the intro\n\nDone.",
			"disapproval": false,
			"date": "2011-09-14 21:14:46.166316",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "2011/9/13 Rob 'Commander' Pike <r@golang.org>:\n> i've done some work on the document. let me know what you think.\n>\n> my main observation is still that it's too much detail for a package\n> comment. I'm not even sure the error messages need detailed\n> explanation there as opposed to a separate reference.\n\n> i wonder if the errors should be typed. that would provide once\n> context for documenting them.\n\nIt looks fine to me and I've incorporated it into\nhttp://codereview.appspot.com/4969078/ .  I'd be happy to move the\nseparate the error stuff out of the package comment.\n\nIs there a package that has an exported API element per error type?\nio.ErrorShortBuffer and friends in os don't look like a good fit.\nWere you thinking of something like type rpc.ServerError?\n\nWould you mind if I do that in a separate CL?\n\nRe your comments in the docs:\n\n[r: why EscapeSet and not just Escape? is there another Escape\nfunction for a simple template?\nthere should be, and it should be presented here.]\n\nThere are two.\nfunc EscapeSet(s *template.Set) (*template.Set, os.Error)\nfunc Escape(t *template.Template) (*template.Template, os.Error)\n\nI have documented Escape yet but agree it should be documented.\n\n\n[i find this section hard to read and some formatting may be required,\nor at least an introduction to the layout. i\u2019ve also deleted some\nvertical space to help with grouping]\n\n[r: i think this is too much detail. i\u2019ve distilled it up top but left\nthis here for reference]\n\n[r: i suggest putting this in doc.go but after the package comment,\nand telling people to look there for more info. i believe that if most\nusers need to read and understand the rest of this document, we\nhaven\u2019t done our job.]\n\nagreed\n",
			"disapproval": false,
			"date": "2011-09-14 00:52:58.681635",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM for now\nlet's check this in and return to it when more of the package has settled out\n\nhttp://codereview.appspot.com/4969078/diff/32001/src/pkg/exp/template/html/doc.go\nFile src/pkg/exp/template/html/doc.go (right):\n\nhttp://codereview.appspot.com/4969078/diff/32001/src/pkg/exp/template/html/doc.go#newcode370\nsrc/pkg/exp/template/html/doc.go:370: Security Posture\ns/Posture/Model/\nto be consistent with the intro",
			"disapproval": false,
			"date": "2011-09-14 20:13:58.625784",
			"approval": true
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=e643e5e1d999 ***\n\nexp/template/html: flesh out package documentation.\n\nR=nigeltao, r\nCC=golang-dev\nhttp://codereview.appspot.com/4969078",
			"disapproval": false,
			"date": "2011-09-14 21:21:26.763876",
			"approval": false
		}
	],
	"owner_email": "mikesamuel@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "MikeSamuel",
	"subject": "code review 4969078: exp/template/html: flesh out package documentation.",
	"created": "2011-09-12 20:43:31.757419",
	"patchsets": [
		1,
		3,
		4001,
		8001,
		1002,
		9005,
		10002,
		12003,
		3006,
		13003,
		9010,
		16001,
		12004,
		2006,
		6005,
		24001,
		27001,
		30001,
		32001,
		35001,
		37001
	],
	"modified": "2011-09-14 21:21:27.720011",
	"closed": true,
	"issue": 4969078
}