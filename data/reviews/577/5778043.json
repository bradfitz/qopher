{
	"description": "go/build, cmd/go: add support for .syso files\n\n.syso files are system objects copied directly\ninto the package archive.\n\nFixes issue 1552.",
	"cc": [
		"alex.brainman@gmail.com",
		"iant@golang.org",
		"r@golang.org",
		"minux.ma@gmail.com",
		"remyoudompheng@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"iant@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello brainman, iant, r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-07 19:09:05.799079",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-03-07 21:23:41.223802",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Russ,\n\nGiven that go can handle extern object files, may I ask if cmd/go could\nprovide a means\nto expose the CFLAGS needed for gcc to compile the external object files?\n\nI think this ability will be useful, esp. considering misc/cgo/testso,\nwhere it must know\nwhat CFLAGS/LDFLAGS cmd/go use to compile gcc object files.\n(I don't want to repeat the logic in cmd/go in another place.)\n",
			"disapproval": false,
			"date": "2012-03-07 21:38:54.575212",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Le 7 mars 2012 22:38, minux <minux.ma@gmail.com> a \u00e9crit :\n> Hi Russ,\n>\n> Given that go can handle extern object files, may I ask if cmd/go could\n> provide a means\n> to expose the CFLAGS needed for gcc to compile the external object files?\n>\n> I think this ability will be useful, esp. considering misc/cgo/testso, where\n> it must know\n> what CFLAGS/LDFLAGS cmd/go use to compile gcc object files.\n> (I don't want to repeat the logic in cmd/go in another place.)\n\nI think objects are just linked, not compiled, what are you referring to?\n\nR\u00e9my.\n",
			"disapproval": false,
			"date": "2012-03-07 21:44:30.605739",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Mar 8, 2012 at 5:44 AM, R\u00e9my Oudompheng <remyoudompheng@gmail.com>wrote:\n\n> Le 7 mars 2012 22:38, minux <minux.ma@gmail.com> a \u00e9crit :\n> > Given that go can handle extern object files, may I ask if cmd/go could\n> > provide a means\n> > to expose the CFLAGS needed for gcc to compile the external object files?\n> >\n> > I think this ability will be useful, esp. considering misc/cgo/testso,\n> where\n> > it must know\n> > what CFLAGS/LDFLAGS cmd/go use to compile gcc object files.\n> > (I don't want to repeat the logic in cmd/go in another place.)\n>\n> I think objects are just linked, not compiled, what are you referring to?\n\nWhere does these objects eventually come from?\nEither they are from data file (e.g., resource for Windows), or compiled\nfrom source\ncode. In the latter case, you will need the appropriate CFLAGS to compile\nthem to\nbe linkable by cmd/ld, right?\n\nI ask where can I find these necessary information.\n",
			"disapproval": false,
			"date": "2012-03-07 21:49:49.650279",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 7, 2012 at 16:38, minux <minux.ma@gmail.com> wrote:\n> Given that go can handle extern object files, may I ask if cmd/go could\n> provide a means\n> to expose the CFLAGS needed for gcc to compile the external object files?\n>\n> I think this ability will be useful, esp. considering misc/cgo/testso, where\n> it must know\n> what CFLAGS/LDFLAGS cmd/go use to compile gcc object files.\n> (I don't want to repeat the logic in cmd/go in another place.)\n\nI think you are asking for something that would print\n\n-m64 -pthread -fpic\n\nif those are the flags that should be used when invoking\ngcc to generate a go-compatible .o file.\n\nI have been thinking about implementing a go env like go dist env\n(but run by the go command, which can do more).  Maybe that\nwould be a place to print this information.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-03-07 22:05:44.351504",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 7, 2012 at 20:52,  <alex.brainman@gmail.com> wrote:\n> It is not building for me on windows or linux:\n\nSorry, I think Rietveld had a slightly stale copy.\n",
			"disapproval": false,
			"date": "2012-03-08 03:08:08.867136",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Mar 8, 2012 at 6:05 AM, Russ Cox <rsc@golang.org> wrote:\n\n> On Wed, Mar 7, 2012 at 16:38, minux <minux.ma@gmail.com> wrote:\n> > Given that go can handle extern object files, may I ask if cmd/go could\n> > provide a means\n> > to expose the CFLAGS needed for gcc to compile the external object files?\n> >\n> > I think this ability will be useful, esp. considering misc/cgo/testso,\n> where\n> > it must know\n> > what CFLAGS/LDFLAGS cmd/go use to compile gcc object files.\n> > (I don't want to repeat the logic in cmd/go in another place.)\n>\n> I think you are asking for something that would print\n>\n> -m64 -pthread -fpic\n\nExactly. Once this info. is exported, misc/cgo/testso can be re-enabled.\n\n>\n\n I have been thinking about implementing a go env like go dist env\n> (but run by the go command, which can do more).  Maybe that\n> would be a place to print this information.\n\nThis will have added benefit of removing CGO_ENABLED knowledge from\ncmd/dist.\nIn run.bash, we can just 'eval $(go env)'.\n",
			"disapproval": false,
			"date": "2012-03-07 22:10:08.697574",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"iant@golang.org",
				"r@golang.org",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It is not building for me on windows or linux:\n\n...\npkg/text/template/parse\npkg/text/template\npkg/go/doc\npkg/go/build\ncmd/go\nC:\\MinGW\\go\\src\\cmd\\go\\build.go:731: a.p.SysoFiles undefined (type *Package has no field or method SysoFiles)\nC:\\MinGW\\go\\src\\cmd\\go\\pkg.go:93: p.SysoFiles undefined (type *Package has no field or method SysoFiles)\nC:\\MinGW\\go\\src\\cmd\\go\\pkg.go:491: p.SysoFiles undefined (type *Package has no field or method SysoFiles)\ngo tool dist: FAILED: C:\\MinGW\\go\\pkg\\tool\\windows_386\\8g -o C:\\DOCUME~1\\brainman\\LOCALS~1\\Temp\\go151.tmp\\_go_.8 -p main C:\\MinGW\\go\\src\\cmd\\go\\bootstrap.go C:\\\nMinGW\\go\\src\\cmd\\go\\build.go C:\\MinGW\\go\\src\\cmd\\go\\clean.go C:\\MinGW\\go\\src\\cmd\\go\\fix.go C:\\MinGW\\go\\src\\cmd\\go\\fmt.go C:\\MinGW\\go\\src\\cmd\\go\\get.go C:\\MinGW\\go\\src\\cmd\\go\\help.go C:\\MinGW\\go\\src\\cmd\\go\\list.go C:\\MinGW\\go\\src\\cmd\\go\\main.go C:\\MinGW\\go\\src\\cmd\\go\\pkg.go C:\\MinGW\\go\\src\\cmd\\go\\run.go C:\\MinGW\\go\\src\\cmd\\go\\test.go C:\\MinGW\\go\\src\\cmd\\go\\testflag.go C:\\MinGW\\go\\src\\cmd\\go\\tool.go C:\\MinGW\\go\\src\\cmd\\go\\vcs.go C:\\MinGW\\go\\src\\cmd\\go\\version.go C:\\MinGW\\go\\src\\cmd\\go\\vet.go\n\nhg id = 57211062f289+\n\nAlx",
			"disapproval": false,
			"date": "2012-03-08 01:52:04.651089",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "That sounds reasonable.  I will add this in a separate CL.\n",
			"disapproval": false,
			"date": "2012-03-07 22:12:14.660858",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"iant@golang.org",
				"r@golang.org",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 79896e3bc1f8 ***\n\ngo/build, cmd/go: add support for .syso files\n\n.syso files are system objects copied directly\ninto the package archive.\n\nFixes issue 1552.\n\nR=alex.brainman, iant, r, minux.ma, remyoudompheng\nCC=golang-dev\nhttp://codereview.appspot.com/5778043",
			"disapproval": false,
			"date": "2012-03-08 03:03:22.300663",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 7, 2012 at 16:23, Rob 'Commander' Pike <r@golang.org> wrote:\n> LGTM\n\nThanks.  Will wait to see if Ian has comments before submitting.\n",
			"disapproval": false,
			"date": "2012-03-07 22:15:42.831982",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"alex.brainman@gmail.com",
				"iant@golang.org",
				"r@golang.org",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-03-07 23:26:52.705670",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5778043: go/build, cmd/go: add support for .syso files",
	"created": "2012-03-07 19:08:43.395418",
	"patchsets": [
		1,
		3,
		9002,
		6002
	],
	"modified": "2012-03-08 03:03:24.409882",
	"closed": true,
	"issue": 5778043
}