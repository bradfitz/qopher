{
	"description": "runtime: add interface microbenchmarks\n\n2011 Mac Mini, Core i5 @ 2.3Ghz\n\nBenchmarkConvT2E        50000000                40.4 ns/op\nBenchmarkConvT2EBig     20000000               107 ns/op\nBenchmarkConvT2I        100000000               28.9 ns/op\nBenchmarkConvI2E        500000000                5.93 ns/op\nBenchmarkConvI2I        100000000               19.0 ns/op\nBenchmarkAssertE2T      100000000               14.1 ns/op\nBenchmarkAssertE2TBig   100000000               17.8 ns/op\nBenchmarkAssertE2I      100000000               21.3 ns/op\nBenchmarkAssertI2T      100000000               14.3 ns/op\nBenchmarkAssertI2I      100000000               20.8 ns/op\nBenchmarkAssertI2E      500000000                5.58 ns/op\n\nPandaboard, 2 x Omap4 @ 1.2Ghz\n\nBenchmarkConvT2E        10000000               215 ns/op\nBenchmarkConvT2EBig      1000000              3697 ns/op\nBenchmarkConvT2I         5000000               666 ns/op\nBenchmarkConvI2E        50000000                42.4 ns/op\nBenchmarkConvI2I         5000000               489 ns/op\nBenchmarkAssertE2T      20000000                90.0 ns/op\nBenchmarkAssertE2TBig   20000000                91.6 ns/op\nBenchmarkAssertE2I       5000000               515 ns/op\nBenchmarkAssertI2T      20000000               124 ns/op\nBenchmarkAssertI2I       5000000               517 ns/op\nBenchmarkAssertI2E      50000000                47.2 ns/op\nBenchmarkAssertE2E      50000000                42.7 ns/op",
	"cc": [
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"fullung@gmail.com",
		"bsiegert@gmail.com",
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "lack BenchmarkAssertE2E?\n\nhttp://codereview.appspot.com/5777048/diff/6001/src/pkg/runtime/iface_test.go\nFile src/pkg/runtime/iface_test.go (right):\n\nhttp://codereview.appspot.com/5777048/diff/6001/src/pkg/runtime/iface_test.go#newcode70\nsrc/pkg/runtime/iface_test.go:70: func BenchmarkAssertI2E(b *testing.B) {\nThis function doesn't bench runtime.assertI2E, but runtime.assertE2I.",
			"disapproval": false,
			"date": "2012-03-11 10:45:21.301353",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/11 10:45:21, minux wrote:\n> lack BenchmarkAssertE2E?\n\nI couldn't figure out how to trigger it, any suggestions ?\n\n>http://codereview.appspot.com/5777048/diff/6001/src/pkg/runtime/iface_test.go\n> File src/pkg/runtime/iface_test.go (right):\n> \n> http://codereview.appspot.com/5777048/diff/6001/src/pkg/runtime/iface_test.go#newcode70\n> src/pkg/runtime/iface_test.go:70: func BenchmarkAssertI2E(b *testing.B) {\n> This function doesn't bench runtime.assertI2E, but runtime.assertE2I.\n\nThanks, that is a duplicate, dropped.",
			"disapproval": false,
			"date": "2012-03-11 10:55:49.742161",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-11 10:56:12.279511",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is great, but not now.  It's not something that is important for\nGo 1, so let's leave it until after Go 1.\n\nThanks.\n",
			"disapproval": false,
			"date": "2012-03-12 16:31:14.800086",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-10 09:26:29.452476",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-10 21:26:25.010857",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/11 10:55:49, dfc wrote:\n> On 2012/03/11 10:45:21, minux wrote:\n> > lack BenchmarkAssertE2E?\n> I couldn't figure out how to trigger it, any suggestions ?\nI = I2.(interface{})",
			"disapproval": false,
			"date": "2012-03-11 12:40:13.151588",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thus we have some more time to write the remaining BenchmarkAssertI2E? :-)\n\nOn Tue, Mar 13, 2012 at 3:44 AM, Dave Cheney <dave@cheney.net> wrote:\n\n> Understood.\n>\n> On 13/03/2012, at 3:31, Russ Cox <rsc@golang.org> wrote:\n>\n> > This is great, but not now.  It's not something that is important for\n> > Go 1, so let's leave it until after Go 1.\n> >\n> > Thanks.\n>\n",
			"disapproval": false,
			"date": "2012-03-12 20:06:37.536624",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-11 21:43:19.016588",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Understood. \n\nOn 13/03/2012, at 3:31, Russ Cox <rsc@golang.org> wrote:\n\n> This is great, but not now.  It's not something that is important for\n> Go 1, so let's leave it until after Go 1.\n> \n> Thanks.\n",
			"disapproval": false,
			"date": "2012-03-12 19:43:36.417728",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Mar 17, 2012 at 12:20,  <fullung@gmail.com> wrote:\n> BenchmarkConvT2I \u00a0 \u00a0 \u00a0 \u00a02000000000 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.00 ns/op\n\nHow is that even possible?\n\n--Benny.\n",
			"disapproval": false,
			"date": "2012-03-17 13:18:25.320566",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello, this is the full set now. Leaving til after Go 1.",
			"disapproval": false,
			"date": "2012-03-17 09:31:14.729430",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mar 18, 2012 12:18 AM, \"Benny Siegert\" <bsiegert@gmail.com> wrote:\n\n> On Sat, Mar 17, 2012 at 12:20,  <fullung@gmail.com> wrote:\n> > BenchmarkConvT2I        2000000000               0.00 ns/op\n>\n> How is that even possible?\n\nIt's as assignment the compiler can statically check, so the runtime code\nis just a pointer assignment. I can see that being well under 1ns on a\nmodern computer; measurement rounding becomes significant down there.\n\nDave.\n",
			"disapproval": false,
			"date": "2012-03-17 14:03:45.189659",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-17 09:30:53.181312",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Glad you've found the AssertI2E case.\n\nOn Sat, Mar 17, 2012 at 5:31 PM, <dave@cheney.net> wrote:\n\n> Hello, this is the full set now. Leaving til after Go 1.\n>\n> http://codereview.appspot.com/**5777048/<http://codereview.appspot.com/5777048/>\n>\n",
			"disapproval": false,
			"date": "2012-03-17 09:50:40.661628",
			"approval": true
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Took these for a spin for fun:\n\nIntel(R) Xeon(R) CPU X5675 @ 3.07GHz\n\ngo test -test.bench=.\n\nBenchmarkConvT2E        50000000                36.4 ns/op\nBenchmarkConvT2I        100000000               22.1 ns/op\nBenchmarkConvI2E        500000000                4.93 ns/op\nBenchmarkConvI2I        100000000               13.8 ns/op\nBenchmarkAssertE2T      100000000               11.6 ns/op\nBenchmarkAssertE2I      100000000               15.7 ns/op\nBenchmarkAssertI2T      100000000               11.6 ns/op\nBenchmarkAssertI2I      100000000               16.0 ns/op\nBenchmarkAssertI2E      500000000                4.64 ns/op\nBenchmarkAssertE2E      500000000                4.35 ns/op\n\ngo test -compiler=gccgo -gccgoflags='-O2'\n\nBenchmarkConvT2E        50000000                64.7 ns/op\nBenchmarkConvT2I        2000000000               0.00 ns/op\nBenchmarkConvI2E        2000000000               0.58 ns/op\nBenchmarkConvI2I        20000000                90.8 ns/op\nBenchmarkAssertE2T      500000000                3.78 ns/op\nBenchmarkAssertE2I      20000000                87.8 ns/op\nBenchmarkAssertI2T      500000000                4.06 ns/op\nBenchmarkAssertI2I      20000000                88.4 ns/op\nBenchmarkAssertI2E      500000000                3.48 ns/op\nBenchmarkAssertE2E      500000000                3.19 ns/op",
			"disapproval": false,
			"date": "2012-03-17 11:20:00.704963",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Mar 17, 2012 at 10:03, David Symonds <dsymonds@golang.org> wrote:\n>> On Sat, Mar 17, 2012 at 12:20, \u00a0<fullung@gmail.com> wrote:\n>> > BenchmarkConvT2I \u00a0 \u00a0 \u00a0 \u00a02000000000 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.00 ns/op\n>>\n>> How is that even possible?\n>\n> It's as assignment the compiler can statically check, so the runtime code is\n> just a pointer assignment. I can see that being well under 1ns on a modern\n> computer; measurement rounding becomes significant down there.\n\nNo way is it less than 0.005 ns to do each assignment.\ngccgo is surely hoisting the assignment out of the loop.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-03-26 20:00:12.430319",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"fullung@gmail.com",
				"bsiegert@gmail.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "<ping />\n\nFor those interested, I have another CL, http://codereview.appspot.com/5798047/, which manually inlines the call to runtime\u00b7rnd which offers considerable performance improvements for the BenchmarkConv* cases.",
			"disapproval": false,
			"date": "2012-04-09 00:45:26.615950",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"fullung@gmail.com",
				"bsiegert@gmail.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please add copies of these with suffix 'Big'\nthat use [2]*int{} as the value.  Two pointers\nis too big to inline, so the numbers will be\nqualitatively different.",
			"disapproval": false,
			"date": "2012-04-09 19:04:48.414609",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Wilco. \n\nOn 10/04/2012, at 5:04, rsc@golang.org wrote:\n\n> Please add copies of these with suffix 'Big'\n> that use [2]*int{} as the value.  Two pointers\n> is too big to inline, so the numbers will be\n> qualitatively different.\n> \n> \n> \n> http://codereview.appspot.com/5777048/\n",
			"disapproval": false,
			"date": "2012-04-09 20:59:42.708356",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"fullung@gmail.com",
				"bsiegert@gmail.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Russ,\n\nPTAL, I have added 2 cases of [2]*int{} where it made sense. Unscientific results are\n\nPASS\nBenchmarkConvT2E        20000000               106 ns/op\nBenchmarkConvT2EBig      5000000               649 ns/op\nBenchmarkConvT2I        10000000               205 ns/op\nBenchmarkConvI2E        50000000                30.8 ns/op\nBenchmarkConvI2I        20000000               106 ns/op\nBenchmarkAssertE2T      50000000                69.5 ns/op\nBenchmarkAssertE2TBig   20000000                84.5 ns/op\nBenchmarkAssertE2I      20000000               129 ns/op\nBenchmarkAssertI2T      20000000                82.6 ns/op\nBenchmarkAssertI2I      20000000               129 ns/op\nBenchmarkAssertI2E      50000000                29.5 ns/op\nBenchmarkAssertE2E      50000000                28.9 ns/op\nok      runtime 27.770s\n\nWhere pprof says the majority of the time for BenchmarkConvT2EBig is spent in the allocator.",
			"disapproval": false,
			"date": "2012-04-10 11:43:47.348939",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"fullung@gmail.com",
				"bsiegert@gmail.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, rsc@golang.org, fullung@gmail.com, bsiegert@gmail.com, dsymonds@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-10 11:44:15.718140",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThank you.\nPlease put a blank line between the copyright notice and the package statement.\n",
			"disapproval": false,
			"date": "2012-04-10 19:54:52.429090",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"fullung@gmail.com",
				"bsiegert@gmail.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done, and I've also freshened the sample output in the CL description.",
			"disapproval": false,
			"date": "2012-04-10 21:11:46.419688",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"fullung@gmail.com",
				"bsiegert@gmail.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a7ca1778740e ***\n\nruntime: add interface microbenchmarks\n\n2011 Mac Mini, Core i5 @ 2.3Ghz\n\nBenchmarkConvT2E        50000000                40.4 ns/op\nBenchmarkConvT2EBig     20000000               107 ns/op\nBenchmarkConvT2I        100000000               28.9 ns/op\nBenchmarkConvI2E        500000000                5.93 ns/op\nBenchmarkConvI2I        100000000               19.0 ns/op\nBenchmarkAssertE2T      100000000               14.1 ns/op\nBenchmarkAssertE2TBig   100000000               17.8 ns/op\nBenchmarkAssertE2I      100000000               21.3 ns/op\nBenchmarkAssertI2T      100000000               14.3 ns/op\nBenchmarkAssertI2I      100000000               20.8 ns/op\nBenchmarkAssertI2E      500000000                5.58 ns/op\n\nPandaboard, 2 x Omap4 @ 1.2Ghz\n\nBenchmarkConvT2E        10000000               215 ns/op\nBenchmarkConvT2EBig      1000000              3697 ns/op\nBenchmarkConvT2I         5000000               666 ns/op\nBenchmarkConvI2E        50000000                42.4 ns/op\nBenchmarkConvI2I         5000000               489 ns/op\nBenchmarkAssertE2T      20000000                90.0 ns/op\nBenchmarkAssertE2TBig   20000000                91.6 ns/op\nBenchmarkAssertE2I       5000000               515 ns/op\nBenchmarkAssertI2T      20000000               124 ns/op\nBenchmarkAssertI2I       5000000               517 ns/op\nBenchmarkAssertI2E      50000000                47.2 ns/op\nBenchmarkAssertE2E      50000000                42.7 ns/op\n\nR=minux.ma, rsc, fullung, bsiegert, dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/5777048",
			"disapproval": false,
			"date": "2012-04-11 12:46:03.347064",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 5777048: runtime: add interface microbenchmarks",
	"created": "2012-03-10 09:24:14.591185",
	"patchsets": [
		1,
		2001,
		3001,
		5001,
		6001,
		2003,
		5002,
		3003,
		6004,
		8001,
		9003,
		12001,
		14001,
		9004,
		19001,
		21001,
		24001,
		27001,
		25002,
		29001
	],
	"modified": "2012-04-16 10:54:31.637937",
	"closed": true,
	"issue": 5777048
}