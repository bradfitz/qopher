{
	"description": "os: move Plan 9 directory marshaling code to syscall\n\nThe API additions to syscall are in dir_plan9.go.",
	"cc": [
		"seed@mail.nanosouffle.net",
		"rsc@golang.org",
		"rminnich@gmail.com",
		"mirtchovski@gmail.com",
		"dave@cheney.net",
		"golang-dev@googlegroups.com",
		"lucio.dere@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello seed@mail.nanosouffle.net, rsc@golang.org (cc: golang-dev@googlegroups.com, lucio.dere@gmail.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-10-12 20:52:24.887100",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "fine with me but please wait for another plan 9 user to sign off",
			"disapproval": false,
			"date": "2012-10-16 17:22:46.544080",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"mirtchovski@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Some minor comments.\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/os/dir_plan9.go\nFile src/pkg/os/dir_plan9.go (right):\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/os/dir_plan9.go#newcode12\nsrc/pkg/os/dir_plan9.go:12: func (file *File) readdir(n int) (fi []FileInfo, err error) {\ndrop the named return values.\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/os/dir_plan9.go#newcode23\nsrc/pkg/os/dir_plan9.go:23: fi = make([]FileInfo, 0, size) // Empty with room to grow.\nfi :=\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/os/dir_plan9.go#newcode29\nsrc/pkg/os/dir_plan9.go:29: if err == io.EOF {\nbe careful here, err was shadowed by the return value\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/syscall/dir_plan9.go\nFile src/pkg/syscall/dir_plan9.go (right):\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/syscall/dir_plan9.go#newcode55\nsrc/pkg/syscall/dir_plan9.go:55: // Null assigns special \"don't-touch\" values to members of d to\nis \"don't-touch\" a known value ? if not \"don't touch\" might be simpler.",
			"disapproval": false,
			"date": "2012-11-08 04:30:21.261480",
			"approval": false
		},
		{
			"sender": "mirtchovski@gmail.com",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"mirtchovski@gmail.com",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-11-08 04:28:27.073330",
			"approval": true
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"mirtchovski@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6157045/diff/9001/src/pkg/os/dir_plan9.go\nFile src/pkg/os/dir_plan9.go (right):\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/os/dir_plan9.go#newcode12\nsrc/pkg/os/dir_plan9.go:12: func (file *File) readdir(n int) (fi []FileInfo, err error) {\nOn 2012/11/08 04:30:21, dfc wrote:\n> drop the named return values.\n\nDone.\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/os/dir_plan9.go#newcode23\nsrc/pkg/os/dir_plan9.go:23: fi = make([]FileInfo, 0, size) // Empty with room to grow.\nOn 2012/11/08 04:30:21, dfc wrote:\n> fi :=\n\nDone.\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/os/dir_plan9.go#newcode29\nsrc/pkg/os/dir_plan9.go:29: if err == io.EOF {\nOn 2012/11/08 04:30:21, dfc wrote:\n> be careful here, err was shadowed by the return value\n\nThanks.\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/syscall/dir_plan9.go\nFile src/pkg/syscall/dir_plan9.go (right):\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/syscall/dir_plan9.go#newcode55\nsrc/pkg/syscall/dir_plan9.go:55: // Null assigns special \"don't-touch\" values to members of d to\nOn 2012/11/08 04:30:21, dfc wrote:\n> is \"don't-touch\" a known value ? if not \"don't touch\" might be simpler.\n\nYeah. I'm not happy about this comment. Any ideas for a better wording?\nThese values are documented in the stat(5) man page:\n\n    A wstat request can avoid modifying some properties of the file by\n    providing explicit \"don't touch\" values in the stat data that is sent:\n    zero-length strings for text values and the maximum unsigned value of\n    appropriate size for integral values. As a special case, if all the\n    elements of the directory entry in a Twstat message are \"don't touch\"\n    values, the server may interpret it as a request to guarantee that the\n    contents of the associated file are committed to stable storage before\n    the Rwstat message is returned. (Consider the message to mean,\n    \"make the state of the file exactly what it claims to be.\")",
			"disapproval": false,
			"date": "2012-11-08 04:55:28.575260",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Yeah. I'm not happy about this comment. Any ideas for a better wording?\r\n> These values are documented in the stat(5) man page:\r\n\r\nJust calling it \"don't touch\" rather than \"don't-touch\" might improve it a bit.\r\n",
			"disapproval": false,
			"date": "2012-11-08 04:56:28.932280",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"mirtchovski@gmail.com",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "+ rminnich, aam",
			"disapproval": false,
			"date": "2012-11-08 03:33:21.069220",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"mirtchovski@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=fc24aee70702 ***\n\nos: move Plan 9 directory marshaling code to syscall\n\nThe API additions to syscall are in dir_plan9.go.\n\nR=seed, rsc, rminnich, mirtchovski, dave\nCC=golang-dev, lucio.dere\nhttp://codereview.appspot.com/6157045",
			"disapproval": false,
			"date": "2012-11-26 23:26:53.554970",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"mirtchovski@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-11-26 22:57:34.993660",
			"approval": true
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"mirtchovski@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/syscall/dir_plan9.go\nFile src/pkg/syscall/dir_plan9.go (right):\n\nhttps://codereview.appspot.com/6157045/diff/9001/src/pkg/syscall/dir_plan9.go#newcode55\nsrc/pkg/syscall/dir_plan9.go:55: // Null assigns special \"don't-touch\" values to members of d to\nOn 2012/11/08 04:30:21, dfc wrote:\n> is \"don't-touch\" a known value ? if not \"don't touch\" might be simpler.\n\nDone.",
			"disapproval": false,
			"date": "2012-11-22 18:20:55.067230",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"mirtchovski@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6157045/diff/21001/src/pkg/os/file_plan9.go\nFile src/pkg/os/file_plan9.go (right):\n\nhttps://codereview.appspot.com/6157045/diff/21001/src/pkg/os/file_plan9.go#newcode181\nsrc/pkg/os/file_plan9.go:181: if err := syscall.Fwstat(f.fd, buf[:]); err != nil {\nThis is odd. The buffer size should be just the encoded dir, not the maximum length. The kernel is ignoring the rest I guess. The return value from d.Marshal should be assigned to n, and the Fwstat should be passed buf[:n]. Same below, about a half dozen times.",
			"disapproval": false,
			"date": "2012-11-26 16:50:42.104360",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"mirtchovski@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/6157045/diff/21001/src/pkg/os/file_plan9.go\nFile src/pkg/os/file_plan9.go (right):\n\nhttps://codereview.appspot.com/6157045/diff/21001/src/pkg/os/file_plan9.go#newcode181\nsrc/pkg/os/file_plan9.go:181: if err := syscall.Fwstat(f.fd, buf[:]); err != nil {\nOn 2012/11/26 16:50:42, rsc wrote:\n> This is odd. The buffer size should be just the encoded dir, not the maximum\n> length. The kernel is ignoring the rest I guess. The return value from d.Marshal\n> should be assigned to n, and the Fwstat should be passed buf[:n]. Same below,\n> about a half dozen times.\n\nI don't know what I was thinking. Thanks.\n\nIt works because convM2D(2) will return after\nsuccessfully parsing an entire message even if\nthe buffer length is greater than the message\nlength.",
			"disapproval": false,
			"date": "2012-11-26 17:59:19.776070",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"seed@mail.nanosouffle.net",
				"rsc@golang.org",
				"rminnich@gmail.com",
				"mirtchovski@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"lucio.dere@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nFixed a bug I introduced in a previous patchset.",
			"disapproval": false,
			"date": "2012-11-26 22:46:45.784860",
			"approval": false
		}
	],
	"owner_email": "ality@pbrane.org",
	"private": false,
	"base_url": "",
	"owner": "ality",
	"subject": "code review 6157045: os: move Plan 9 directory marshaling code to syscall",
	"created": "2012-05-02 14:40:08.785297",
	"patchsets": [
		1,
		1002,
		7001,
		9001,
		18001,
		21001,
		22006,
		28012,
		35001
	],
	"modified": "2012-11-26 23:26:56.146770",
	"closed": true,
	"issue": 6157045
}