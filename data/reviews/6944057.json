{
	"description": "net/smtp: remove data race from TestSendMail.\n\nA data race was found in TestSendMail by the race detector.\n\nFixes issue 4559.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"dave@cheney.net",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/12/17 05:22:13, dfc wrote:\n> Please also check that the test passes with\n> \n> go test -cpu=1,2,4\n> \n\nHmm. Well, looks like TestSendMail passes, but the others all fail. Do you want me to fix that as part of this CL?\n\n--- FAIL: TestBasic-2 (0.00 seconds)\nsmtp_test.go:93: \tExpected AUTH supported\n--- FAIL: TestNewClient-2 (0.00 seconds)\nsmtp_test.go:207: \tExpected AUTH supported\n--- FAIL: TestNewClient2-2 (0.00 seconds)\nsmtp_test.go:256: \tGot:\n\t\tEHLO localhost\n\t\tHELO localhost\n\t\tQUIT\n\t\t\n\t\tExpected:\n\t\tEHLO localhost\n\t\tHELO localhost\n\t\tQUIT\n--- FAIL: TestBasic-4 (0.00 seconds)\nsmtp_test.go:93: \tExpected AUTH supported\n--- FAIL: TestNewClient-4 (0.00 seconds)\nsmtp_test.go:207: \tExpected AUTH supported\n--- FAIL: TestNewClient2-4 (0.00 seconds)\nsmtp_test.go:256: \tGot:\n\t\tEHLO localhost\n\t\tHELO localhost\n\t\tQUIT\n\t\t\n\t\tExpected:\n\t\tEHLO localhost\n\t\tHELO localhost\n\t\tQUIT\nFAIL\nexit status 1\nFAIL\tnet/smtp\t0.068s",
			"disapproval": false,
			"date": "2012-12-17 05:27:19.433600",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Thanks Rick, sorry this turned into such a drama.\r\n>\r\n\r\nNo problem; I learned a lot from this. :)\r\n\r\nRick\r\n",
			"disapproval": false,
			"date": "2012-12-17 05:50:14.784360",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM with one final comment.\n\nhttps://codereview.appspot.com/6944057/diff/4002/src/pkg/net/smtp/smtp_test.go\nFile src/pkg/net/smtp/smtp_test.go (right):\n\nhttps://codereview.appspot.com/6944057/diff/4002/src/pkg/net/smtp/smtp_test.go#newcode394\nsrc/pkg/net/smtp/smtp_test.go:394: i := 0\nplease move this into the for loop\n\nhttps://codereview.appspot.com/6944057/diff/4002/src/pkg/net/smtp/smtp_test.go#newcode403\nsrc/pkg/net/smtp/smtp_test.go:403: for i < len(data) && data[i] != \"\" {\nfor i := 0 ; i < ... ; i++ {\n\nhttps://codereview.appspot.com/6944057/diff/4002/src/pkg/net/smtp/smtp_test.go#newcode425\nsrc/pkg/net/smtp/smtp_test.go:425: i++\ndrop",
			"disapproval": false,
			"date": "2012-12-17 06:56:50.216480",
			"approval": true
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nThe original tests were modifying global vars instead of making local copies.",
			"disapproval": false,
			"date": "2012-12-17 05:42:57.223680",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6944057/diff/8003/src/pkg/net/smtp/smtp_test.go\nFile src/pkg/net/smtp/smtp_test.go (right):\n\nhttps://codereview.appspot.com/6944057/diff/8003/src/pkg/net/smtp/smtp_test.go#newcode397\nsrc/pkg/net/smtp/smtp_test.go:397: t.Log(\"Accept error: %v\", err)\nOn 2012/12/17 05:02:47, dfc wrote:\n> Should this be t.Errorf ?\n\nI am counting on the later Got / Expected test to log the error. Both of the Logged errors would cause that test to fail. Is it ok to log multiple errors from a single test?",
			"disapproval": false,
			"date": "2012-12-17 05:05:56.431250",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL",
			"disapproval": false,
			"date": "2012-12-17 05:09:45.090560",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-12-17 04:46:18.809840",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I can confirm the race detector no longer complains on my host.\n\nhttps://codereview.appspot.com/6944057/diff/8003/src/pkg/net/smtp/smtp_test.go\nFile src/pkg/net/smtp/smtp_test.go (right):\n\nhttps://codereview.appspot.com/6944057/diff/8003/src/pkg/net/smtp/smtp_test.go#newcode397\nsrc/pkg/net/smtp/smtp_test.go:397: t.Log(\"Accept error: %v\", err)\nShould this be t.Errorf ?\n\nhttps://codereview.appspot.com/6944057/diff/8003/src/pkg/net/smtp/smtp_test.go#newcode418\nsrc/pkg/net/smtp/smtp_test.go:418: t.Log(\"Read error: %v\", err)\nditto",
			"disapproval": false,
			"date": "2012-12-17 05:02:47.704230",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please also check that the test passes with\r\n\r\ngo test -cpu=1,2,4\r\n\r\n\r\nOn Mon, Dec 17, 2012 at 4:09 PM,  <rickarnoldjr@gmail.com> wrote:\r\n> PTAL\r\n>\r\n>\r\n> https://codereview.appspot.com/6944057/\r\n",
			"disapproval": false,
			"date": "2012-12-17 05:22:13.866060",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-12-17 15:45:07.354850",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go\nFile src/pkg/net/smtp/smtp_test.go (right):\n\nhttps://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go#newcode389\nsrc/pkg/net/smtp/smtp_test.go:389: var mu sync.Mutex\nwhat is this guarding?  it's not obvious.  add a comment?\n\nhttps://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go#newcode426\nsrc/pkg/net/smtp/smtp_test.go:426: }(l, strings.Split(server, \"\\r\\n\"), bcmdbuf, &mu)\nno need to pass this to the goroutine.  the goroutine is a closure... it closes over the outer \"mu\".",
			"disapproval": false,
			"date": "2012-12-17 04:48:20.760950",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nThanks guys.\n\nhttps://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go\nFile src/pkg/net/smtp/smtp_test.go (right):\n\nhttps://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go#newcode389\nsrc/pkg/net/smtp/smtp_test.go:389: var mu sync.Mutex\nOn 2012/12/17 04:48:20, bradfitz wrote:\n> what is this guarding?  it's not obvious.  add a comment?\n\nDone\n\nhttps://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go#newcode389\nsrc/pkg/net/smtp/smtp_test.go:389: var mu sync.Mutex\nOn 2012/12/17 04:49:29, dfc wrote:\n> you can also use a channel to synchronise here\n> \n> var done = make(chan struct{})\n> \n> then defer(close) inside the function.\n\nDone.\n\nhttps://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go#newcode390\nsrc/pkg/net/smtp/smtp_test.go:390: go func(l net.Listener, data []string, w *bufio.Writer, mu *sync.Mutex) {\nOn 2012/12/17 04:49:29, dfc wrote:\n> you don't need to pass w and mu into the function, the closure already captures\n> them.\n\nDone. Also removed l.\n\nhttps://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go#newcode426\nsrc/pkg/net/smtp/smtp_test.go:426: }(l, strings.Split(server, \"\\r\\n\"), bcmdbuf, &mu)\nOn 2012/12/17 04:48:20, bradfitz wrote:\n> no need to pass this to the goroutine.  the goroutine is a closure... it closes\n> over the outer \"mu\".\n> \n\nDone",
			"disapproval": false,
			"date": "2012-12-17 04:57:14.340640",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go\nFile src/pkg/net/smtp/smtp_test.go (right):\n\nhttps://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go#newcode389\nsrc/pkg/net/smtp/smtp_test.go:389: var mu sync.Mutex\nyou can also use a channel to synchronise here\n\nvar done = make(chan struct{})\n\nthen defer(close) inside the function.\n\nhttps://codereview.appspot.com/6944057/diff/4001/src/pkg/net/smtp/smtp_test.go#newcode390\nsrc/pkg/net/smtp/smtp_test.go:390: go func(l net.Listener, data []string, w *bufio.Writer, mu *sync.Mutex) {\nyou don't need to pass w and mu into the function, the closure already captures them.",
			"disapproval": false,
			"date": "2012-12-17 04:49:29.209370",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I am counting on the later Got / Expected test to log the error. Both of the\n> Logged errors would cause that test to fail. Is it ok to log multiple errors\n> from a single test?\n\nyup, in fact you cannot use t.Fatalf in a goroutine.",
			"disapproval": false,
			"date": "2012-12-17 05:07:02.779660",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=9530d8bc74cb ***\n\nnet/smtp: remove data race from TestSendMail.\n\nA data race was found in TestSendMail by the race detector.\n\nFixes issue 4559.\n\nR=golang-dev, bradfitz, dave, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/6944057\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-12-17 15:45:36.322080",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If you can, otherwise fullung will raise more issues :)\r\n\r\nOn Mon, Dec 17, 2012 at 4:27 PM,  <rickarnoldjr@gmail.com> wrote:\r\n> On 2012/12/17 05:22:13, dfc wrote:\r\n>>\r\n>> Please also check that the test passes with\r\n>\r\n>\r\n>> go test -cpu=1,2,4\r\n>\r\n>\r\n>\r\n> Hmm. Well, looks like TestSendMail passes, but the others all fail. Do\r\n> you want me to fix that as part of this CL?\r\n>\r\n> --- FAIL: TestBasic-2 (0.00 seconds)\r\n> smtp_test.go:93:        Expected AUTH supported\r\n> --- FAIL: TestNewClient-2 (0.00 seconds)\r\n> smtp_test.go:207:       Expected AUTH supported\r\n> --- FAIL: TestNewClient2-2 (0.00 seconds)\r\n> smtp_test.go:256:       Got:\r\n>                 EHLO localhost\r\n>                 HELO localhost\r\n>                 QUIT\r\n>\r\n>                 Expected:\r\n>                 EHLO localhost\r\n>                 HELO localhost\r\n>                 QUIT\r\n> --- FAIL: TestBasic-4 (0.00 seconds)\r\n> smtp_test.go:93:        Expected AUTH supported\r\n> --- FAIL: TestNewClient-4 (0.00 seconds)\r\n> smtp_test.go:207:       Expected AUTH supported\r\n> --- FAIL: TestNewClient2-4 (0.00 seconds)\r\n> smtp_test.go:256:       Got:\r\n>                 EHLO localhost\r\n>                 HELO localhost\r\n>                 QUIT\r\n>\r\n>                 Expected:\r\n>                 EHLO localhost\r\n>                 HELO localhost\r\n>                 QUIT\r\n> FAIL\r\n> exit status 1\r\n> FAIL    net/smtp        0.068s\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.com/6944057/\r\n",
			"disapproval": false,
			"date": "2012-12-17 05:35:47.744650",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/12/17 05:42:57, rick wrote:\n> PTAL\n> \n> The original tests were modifying global vars instead of making local copies.\n\nThanks Rick, sorry this turned into such a drama. \n\nLeaving for bradfitz.",
			"disapproval": false,
			"date": "2012-12-17 05:46:45.042860",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/6944057/diff/4002/src/pkg/net/smtp/smtp_test.go\nFile src/pkg/net/smtp/smtp_test.go (right):\n\nhttps://codereview.appspot.com/6944057/diff/4002/src/pkg/net/smtp/smtp_test.go#newcode394\nsrc/pkg/net/smtp/smtp_test.go:394: i := 0\nOn 2012/12/17 06:56:50, dfc wrote:\n> please move this into the for loop\n\nDone. Not sure how I ended up with this. :)",
			"disapproval": false,
			"date": "2012-12-17 12:54:46.513260",
			"approval": false
		}
	],
	"owner_email": "rickarnoldjr@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rick",
	"subject": "code review 6944057: net/smtp: remove data race from TestSendMail.",
	"created": "2012-12-17 04:45:02.901430",
	"patchsets": [
		1,
		2001,
		4001,
		3,
		8003,
		6004,
		4002,
		13001
	],
	"modified": "2012-12-18 00:07:35.717430",
	"closed": true,
	"issue": 6944057
}