{
	"description": "cmd/vet: use length of output from errchk to check PASS/FAIL\nerrchk is itself a FAIL: it doesn't exit non-zero on error!",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org"
	],
	"reviewers": [
		"fullung@gmail.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-05-28 19:07:52.368470",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/9842044/diff/3001/cmd/vet/vet_test.go\nFile cmd/vet/vet_test.go (right):\n\nhttps://codereview.appspot.com/9842044/diff/3001/cmd/vet/vet_test.go#newcode64\ncmd/vet/vet_test.go:64: return false\nThis return statement is not really needed, as it will never be executed.",
			"disapproval": false,
			"date": "2013-05-28 20:09:21.487840",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3ff36be4f12a&repo=tools ***\n\ncmd/vet: use length of output from errchk to check PASS/FAIL\nerrchk is itself a FAIL: it doesn't exit non-zero on error!\n\nR=golang-dev, iant\nCC=golang-dev\nhttps://codereview.appspot.com/9842044",
			"disapproval": false,
			"date": "2013-05-28 20:51:49.472440",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"r@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Something appears to have gone awry here:\n\nhttp://build.golang.org/log/11e5d50c450373df60319ca9ae40fb95aadac472",
			"disapproval": false,
			"date": "2013-05-29 11:30:19.040560",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "errchk prints text containing \"BUG\" if there is a failure.\r\ni think you defined the convention (in the test dir).\r\n\r\nruss\r\n",
			"disapproval": false,
			"date": "2013-05-29 15:10:42.588090",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 9842044: cmd/vet: use length of output from errchk to check PASS/FAIL",
	"created": "2013-05-28 19:07:49.495790",
	"patchsets": [
		1,
		3001,
		7001
	],
	"modified": "2013-05-29 15:10:42.670270",
	"closed": true,
	"issue": 9842044
}