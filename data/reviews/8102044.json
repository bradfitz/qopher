{
	"description": "8a/8l: add PCMPEQB and PMOVMSKB to 386.\n\nUsed by CL 8056043 for fast string equals.",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://khr%40golang.org@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-29 07:05:29.701750",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nThe Google confirms the opcode on at least the first one.  I'll trust you\r\non the second one.  I assume the plan9 naming is what makes it hard to\r\nsearch for.      The \"PMOVMSKB\" at least ends in 0xd7, so I'll assume you\r\nknow what you're doing and it works.\r\n\r\n</duediligence>\r\n\r\nOn Fri, Mar 29, 2013 at 12:05 AM, <khr@golang.org> wrote:\r\n\r\n> Reviewers: bradfitz,\r\n>\r\n> Message:\r\n> Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://khr%40golang.org@code.**google.com/p/go/<http://40golang.org@code.google.com/p/go/>\r\n>\r\n>\r\n> Description:\r\n> 8a/8l: add PCMPEQB and PMOVMSKB to 386.\r\n>\r\n> Used by CL 8056043 for fast string equals.\r\n>\r\n> Please review this at https://codereview.appspot.**com/8102044/<https://codereview.appspot.com/8102044/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/8a/lex.c\r\n>   M src/cmd/8l/8.out.h\r\n>   M src/cmd/8l/optab.c\r\n>\r\n>\r\n> Index: src/cmd/8a/lex.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/8a/lex.c\r\n> +++ b/src/cmd/8a/lex.c\r\n> @@ -760,10 +760,12 @@\r\n>         \"ORPS\",         LTYPE3, AORPS,\r\n>         \"PADDQ\",        LTYPE3, APADDQ,\r\n>         \"PAND\",         LTYPE3, APAND,\r\n> +       \"PCMPEQB\",      LTYPE3, APCMPEQB,\r\n>         \"PMAXSW\",       LTYPE3, APMAXSW,\r\n>         \"PMAXUB\",       LTYPE3, APMAXUB,\r\n>         \"PMINSW\",       LTYPE3, APMINSW,\r\n>         \"PMINUB\",       LTYPE3, APMINUB,\r\n> +       \"PMOVMSKB\",     LTYPE3, APMOVMSKB,\r\n>         \"PSADBW\",       LTYPE3, APSADBW,\r\n>         \"PSHUFB\",       LTYPE3, APSHUFB,\r\n>         \"PSUBB\",        LTYPE3, APSUBB,\r\n> Index: src/cmd/8l/8.out.h\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/8l/8.out.h\r\n> +++ b/src/cmd/8l/8.out.h\r\n> @@ -534,10 +534,12 @@\r\n>         AORPS,\r\n>         APADDQ,\r\n>         APAND,\r\n> +       APCMPEQB,\r\n>         APMAXSW,\r\n>         APMAXUB,\r\n>         APMINSW,\r\n>         APMINUB,\r\n> +       APMOVMSKB,\r\n>         APSADBW,\r\n>         APSUBB,\r\n>         APSUBL,\r\n> Index: src/cmd/8l/optab.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/8l/optab.c\r\n> +++ b/src/cmd/8l/optab.c\r\n> @@ -364,6 +364,12 @@\r\n>         Ym,     Ynone,  Zm_o,   2,\r\n>         0\r\n>  };\r\n> +uchar  ymskb[] =\r\n> +{\r\n> +       Yxr,    Yrl,    Zm_r_xm,        2,\r\n> +       Ymr,    Yrl,    Zm_r_xm,        1,\r\n> +       0\r\n> +};\r\n>  uchar  yxm[] =\r\n>  {\r\n>         Yxm,    Yxr,    Zm_r_xm,        1,\r\n> @@ -950,10 +956,12 @@\r\n>         { AORPS,        yxm,    Pm, 0x56 },\r\n>         { APADDQ,       yxm,    Pe, 0xd4 },\r\n>         { APAND,        yxm,    Pe, 0xdb },\r\n> +       { APCMPEQB,     yxmq,   Pe ,0x74 },\r\n>         { APMAXSW,      yxm,    Pe, 0xee },\r\n>         { APMAXUB,      yxm,    Pe, 0xde },\r\n>         { APMINSW,      yxm,    Pe, 0xea },\r\n>         { APMINUB,      yxm,    Pe, 0xda },\r\n> +       { APMOVMSKB,    ymskb,  Px, Pe,0xd7,0xd7 },\r\n>         { APSADBW,      yxm,    Pq, 0xf6 },\r\n>         { APSUBB,       yxm,    Pe, 0xf8 },\r\n>         { APSUBL,       yxm,    Pe, 0xfa },\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-29 07:13:42.678670",
			"approval": true
		},
		{
			"sender": "khr@golang.org",
			"recipients": [
				"khr@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=7505bf6d8988 ***\n\n8a/8l: add PCMPEQB and PMOVMSKB to 386.\n\nUsed by CL 8056043 for fast string equals.\n\nR=bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/8102044",
			"disapproval": false,
			"date": "2013-03-29 07:34:07.946230",
			"approval": false
		}
	],
	"owner_email": "khr@golang.org",
	"private": false,
	"base_url": "",
	"owner": "khr",
	"subject": "code review 8102044: 8a/8l: add PCMPEQB and PMOVMSKB to 386.",
	"created": "2013-03-29 02:07:38.659150",
	"patchsets": [
		1,
		2001,
		5001,
		5002,
		10001
	],
	"modified": "2013-03-29 07:34:08.927990",
	"closed": true,
	"issue": 8102044
}