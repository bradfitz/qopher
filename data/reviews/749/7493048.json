{
	"description": "cmd/vet: diagnose unreachable code",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-22 21:26:50.925970",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but think about the name\n\nhttps://codereview.appspot.com/7493048/diff/5001/src/cmd/vet/deadcode.go\nFile src/cmd/vet/deadcode.go (right):\n\nhttps://codereview.appspot.com/7493048/diff/5001/src/cmd/vet/deadcode.go#newcode1\nsrc/cmd/vet/deadcode.go:1: package main\ncopyright and explanatory comment missing.\n\nhttps://codereview.appspot.com/7493048/diff/5001/src/cmd/vet/deadcode.go#newcode18\nsrc/cmd/vet/deadcode.go:18: // checkDead checks a function body for dead code.\nnot sure whether i like 'dead' as the adjective here, since that term\nusually covers a much larger scope, so to speak, but 'unreachable' is worse.\n'dead' is ok if nothing better comes to mind.\n\nhttps://codereview.appspot.com/7493048/diff/5001/src/cmd/vet/deadcode.go#newcode195\nsrc/cmd/vet/deadcode.go:195: if ok && name.Name == \"panic\" && name.Obj == nil {\nthere could be a local panic, but i guess this is good enough absent go/types",
			"disapproval": false,
			"date": "2013-03-22 21:33:21.250200",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7493048/diff/5001/src/cmd/vet/deadcode.go\nFile src/cmd/vet/deadcode.go (right):\n\nhttps://codereview.appspot.com/7493048/diff/5001/src/cmd/vet/deadcode.go#newcode1\nsrc/cmd/vet/deadcode.go:1: package main\nOn 2013/03/22 21:33:21, r wrote:\n> copyright and explanatory comment missing.\n\nDone.\n\nhttps://codereview.appspot.com/7493048/diff/5001/src/cmd/vet/deadcode.go#newcode18\nsrc/cmd/vet/deadcode.go:18: // checkDead checks a function body for dead code.\nOn 2013/03/22 21:33:21, r wrote:\n> not sure whether i like 'dead' as the adjective here, since that term\n> usually covers a much larger scope, so to speak, but 'unreachable' is worse.\n> 'dead' is ok if nothing better comes to mind.\n\nI called the flag -unreachable, so changed this to checkUnreachable. Leaving the other dead references that are purely within this file.\n\nhttps://codereview.appspot.com/7493048/diff/5001/src/cmd/vet/deadcode.go#newcode195\nsrc/cmd/vet/deadcode.go:195: if ok && name.Name == \"panic\" && name.Obj == nil {\nOn 2013/03/22 21:33:21, r wrote:\n> there could be a local panic, but i guess this is good enough absent go/types\n\nThis code handles that correctly. If there were a local panic, name.Obj would be non-nil.",
			"disapproval": false,
			"date": "2013-03-22 21:46:17.043830",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c61a75775ab6 ***\n\ncmd/vet: diagnose unreachable code\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/7493048",
			"disapproval": false,
			"date": "2013-03-22 21:46:49.153850",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7493048: cmd/vet: diagnose unreachable code",
	"created": "2013-03-22 21:22:06.819250",
	"patchsets": [
		1,
		2001,
		5001,
		7001,
		12001
	],
	"modified": "2013-03-22 21:46:50.596800",
	"closed": true,
	"issue": 7493048
}