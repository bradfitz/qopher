{
	"description": "encoding/json: properly handle extra objects with fixed size arrays\n\nIf a fixed size array is passed in as the decode target and the JSON\nto decode has extra array elements that are objects, then previously\nthe decoder would return a \"data changing underfoot\" error.\n\nFixes issue 3717.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-03-12 02:02:15.872110",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7490046/diff/5001/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttps://codereview.appspot.com/7490046/diff/5001/src/pkg/encoding/json/decode.go#newcode394\nsrc/pkg/encoding/json/decode.go:394: m := make(map[string]interface{})\nI couldn't find a more efficient way of doing this. I tried d.next() but that didn't work. Any ideas?",
			"disapproval": false,
			"date": "2013-03-12 02:02:47.581960",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL",
			"disapproval": false,
			"date": "2013-03-12 23:02:48.751010",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7490046/diff/14001/src/pkg/encoding/json/decode_test.go\nFile src/pkg/encoding/json/decode_test.go (right):\n\nhttps://codereview.appspot.com/7490046/diff/14001/src/pkg/encoding/json/decode_test.go#newcode1186\nsrc/pkg/encoding/json/decode_test.go:1186: json := `[\"article\",{\"category\":1}, {\"type\": \"foo\"}, 2, {\"data\": {\"bar\": \"baz\"}}, [1, 2, 3]]`\nCan you please use the reduced test case, as described here: http://play.golang.org/p/OYCGWFzZGp",
			"disapproval": false,
			"date": "2013-03-13 02:23:40.156130",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=088249126434 ***\n\nencoding/json: properly handle extra objects with fixed size arrays\n\nIf a fixed size array is passed in as the decode target and the JSON\nto decode has extra array elements that are objects, then previously\nthe decoder would return a \"data changing underfoot\" error.\n\nFixes issue 3717.\n\nR=golang-dev, adg, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7490046\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-03-13 18:53:07.252610",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/7490046/diff/14001/src/pkg/encoding/json/decode_test.go\nFile src/pkg/encoding/json/decode_test.go (right):\n\nhttps://codereview.appspot.com/7490046/diff/14001/src/pkg/encoding/json/decode_test.go#newcode1186\nsrc/pkg/encoding/json/decode_test.go:1186: json := `[\"article\",{\"category\":1}, {\"type\": \"foo\"}, 2, {\"data\": {\"bar\": \"baz\"}}, [1, 2, 3]]`\nOn 2013/03/13 02:23:40, adg wrote:\n> Can you please use the reduced test case, as described here:\n> http://play.golang.org/p/OYCGWFzZGp\n\nDone.",
			"disapproval": false,
			"date": "2013-03-13 02:50:26.706430",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7490046/diff/22001/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttps://codereview.appspot.com/7490046/diff/22001/src/pkg/encoding/json/decode.go#newcode397\nsrc/pkg/encoding/json/decode.go:397: d.value(reflect.Value{})\nI just don't see why this shouldn't work. It seems like we're papering over the actual problem.\n\nShouldn't this case be treated just like decoding into a struct field that doesn't exist?",
			"disapproval": false,
			"date": "2013-03-13 05:38:58.347700",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/7490046/diff/22001/src/pkg/encoding/json/decode.go\nFile src/pkg/encoding/json/decode.go (right):\n\nhttps://codereview.appspot.com/7490046/diff/22001/src/pkg/encoding/json/decode.go#newcode397\nsrc/pkg/encoding/json/decode.go:397: d.value(reflect.Value{})\nOn 2013/03/13 05:38:58, adg wrote:\n> I just don't see why this shouldn't work. It seems like we're papering over the\n> actual problem.\n> \n> Shouldn't this case be treated just like decoding into a struct field that\n> doesn't exist?\n\nSorry, my reasoning was that I should fix this special case locally instead of the underlying issue to reduce risk close to Go 1.1. The latest patchset has the complete fix.",
			"disapproval": false,
			"date": "2013-03-13 13:59:34.504040",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-03-13 18:51:41.024430",
			"approval": true
		}
	],
	"owner_email": "rickarnoldjr@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rick",
	"subject": "code review 7490046: encoding/json: properly handle extra objects with fixed...",
	"created": "2013-03-12 01:58:15.701980",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		14001,
		22001,
		28001
	],
	"modified": "2013-03-13 21:18:50.568330",
	"closed": true,
	"issue": 7490046
}