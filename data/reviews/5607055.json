{
	"description": "mat/big: add raw access to Int bits\n\nThis is a minimal API extension, it makes it possible\nto implement missing Int functionality externally w/o\ncompromising efficiency. It is the hope that this will\nreduce the number of feature requests going directly\ninto the big package.\n\nAlso: Fixed some naming inconsistencies: The receiver\nis only called z when it is also the result.",
	"cc": [
		"golang-dev@googlegroups.com",
		"agl@golang.org"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-02-01 19:27:06.618639",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 01196905a7d1 ***\n\nmat/big: add raw access to Int bits\n\nThis is a minimal API extension, it makes it possible\nto implement missing Int functionality externally w/o\ncompromising efficiency. It is the hope that this will\nreduce the number of feature requests going directly\ninto the big package.\n\nAlso: Fixed some naming inconsistencies: The receiver\nis only called z when it is also the result.\n\nR=golang-dev, agl\nCC=golang-dev\nhttp://codereview.appspot.com/5607055",
			"disapproval": false,
			"date": "2012-02-01 19:43:42.961222",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"agl@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. I'm not quite clear why some functions are (x *Int) and some z. Functions that use 'x' don't change the object itself?",
			"disapproval": false,
			"date": "2012-02-01 19:39:22.484464",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I tried to use x and y as incoming arguments (which don't change), and\nz as result. So if the receiver is also the result, it's z. If the\nreceiver is just an argument (say for BitLen), it's x. Maybe that's\nnot great, but it's the convention so far. There may be more cases in\nthis package that are not consistent.\n- gri\n\nOn Wed, Feb 1, 2012 at 11:39 AM,  <agl@golang.org> wrote:\n> LGTM. I'm not quite clear why some functions are (x *Int) and some z.\n> Functions that use 'x' don't change the object itself?\n>\n> http://codereview.appspot.com/5607055/\n",
			"disapproval": false,
			"date": "2012-02-01 19:42:29.059230",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please write a doc comment for Word now that it is part of\nthe public API.  (Until this CL I was about to suggest\nunexporting it.)\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-02 20:34:32.943816",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5607055: mat/big: add raw access to Int bits",
	"created": "2012-02-01 18:47:50.717071",
	"patchsets": [
		1,
		2001,
		3001,
		6001,
		10001
	],
	"modified": "2012-02-02 20:34:33.022578",
	"closed": true,
	"issue": 5607055
}