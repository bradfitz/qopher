{
	"description": "gc: put limit on size of exported recursive interface\n\nPrevents edge-case recursive types from consuming excessive memory.\n\nFixes issue 1909.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lstoakes@gmail.com",
			"recipients": [
				"lstoakes@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-01-02 22:44:51.471861",
			"approval": false
		},
		{
			"sender": "lstoakes@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Note I give a longer description of the patch/issue on the issue page\n- http://code.google.com/p/go/issues/detail?id=1909.\n\nThis feels a little cargo cult/arbitrary/icky, but certainly resolves the issue.\n\nAs I discuss on the issue, I think it's indicative of a larger\nunderlying issue with recursive interface types. Unless I've missed an\nissue, I don't think this has been broached yet, other than\nhttp://code.google.com/p/go/issues/detail?id=1814 which discusses the\ncurrently illegal type Foo interface { Foo }. I am happy to submit a\nnew issue for this larger problem.\n\nOn 2 January 2012 22:44,  <lstoakes@gmail.com> wrote:\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg\n>\n>\n> Description:\n> gc: put limit on size of exported recursive interface\n>\n> Prevents edge-case recursive types from consuming excessive memory.\n>\n> Fixes issue 1909.\n>\n> Please review this at http://codereview.appspot.com/5504108/\n>\n> Affected files:\n> \u00a0M src/cmd/gc/fmt.c\n>\n>\n> Index: src/cmd/gc/fmt.c\n> ===================================================================\n> --- a/src/cmd/gc/fmt.c\n> +++ b/src/cmd/gc/fmt.c\n> @@ -1450,7 +1450,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0if(t == T)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return fmtstrcpy(fp, \"<T>\");\n>\n> - \u00a0 \u00a0 \u00a0 if(t->trecur > 4)\n> + \u00a0 \u00a0 \u00a0 if(t->trecur > 4 || fp->nfmt > 1000)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return fmtstrcpy(fp, \"<...>\");\n>\n> \u00a0 \u00a0 \u00a0 \u00a0t->trecur++;\n>\n>\n\n\n\n-- \nLorenzo Stoakes\nhttp://www.codegrunt.co.uk\n",
			"disapproval": false,
			"date": "2012-01-02 22:51:27.861267",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jan 2, 2012 at 23:51, Lorenzo Stoakes <lstoakes@gmail.com> wrote:\n> Note I give a longer description of the patch/issue on the issue page\n> - http://code.google.com/p/go/issues/detail?id=1909.\n>\n> This feels a little cargo cult/arbitrary/icky, but certainly resolves the issue.\n>\n> As I discuss on the issue, I think it's indicative of a larger\n> underlying issue with recursive interface types. Unless I've missed an\n> issue, I don't think this has been broached yet, other than\n> http://code.google.com/p/go/issues/detail?id=1814 which discusses the\n> currently illegal type Foo interface { Foo }. I am happy to submit a\n> new issue for this larger problem.\n\nI intend to have a closer look at the underlying problem with\nrecursive interface types somewhere in the next week or two.   in the\nmeantime this would plaster over the symptom a bit, but i'd prefer it\nif that stayed visible until a real fix was in.\n\ni'm deferring to rsc on this CL\n\n/L\n",
			"disapproval": false,
			"date": "2012-01-04 07:01:17.179963",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThis does not fix issue 1909 but it does make the failure a little nicer.\n",
			"disapproval": false,
			"date": "2012-01-09 16:45:06.699294",
			"approval": true
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"lstoakes@gmail.com",
				"golang-dev@googlegroups.com",
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/09 16:45:06, rsc wrote:\n> LGTM\n> \n> This does not fix issue 1909 but it does make the failure a little nicer.\n\nmeanwhile 1909 has been fixed",
			"disapproval": false,
			"date": "2012-01-17 09:29:53.500780",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lstoakes@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-06-03 04:39:16.879365",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lstoakes@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-06-03 04:39:26.113047",
			"approval": false
		}
	],
	"owner_email": "lstoakes@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "lstoakes",
	"subject": "code review 5504108: gc: put limit on size of exported recursive interface",
	"created": "2012-01-02 22:37:57.886126",
	"patchsets": [
		1,
		1002,
		4001
	],
	"modified": "2012-06-03 04:39:26.113431",
	"closed": false,
	"issue": 5504108
}