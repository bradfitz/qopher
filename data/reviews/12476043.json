{
	"description": "net: use F_DUPFD_CLOEXEC when duping fds\n\nThis means that in the common case (modern kernel), we only\nmake 1 system call to dup instead of two, and we also avoid\ngrabbing the syscall.ForkLock.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org"
	],
	"reviewers": [
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-08-05 20:16:22.537730",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12476043/diff/3001/src/pkg/net/fd_linux.go\nFile src/pkg/net/fd_linux.go (right):\n\nhttps://codereview.appspot.com/12476043/diff/3001/src/pkg/net/fd_linux.go#newcode1\nsrc/pkg/net/fd_linux.go:1: // Copyright 2013 The Go Authors. All rights reserved.\nF_DUPFD_CLOEXEC is in POSIX.1-2008 (http://pubs.opengroup.org/onlinepubs/9699919799/) and as such also exists on at least Darwin, NetBSD, OpenBSD, and FreeBSD (although for some reason it is not defined in our syscall package for FreeBSD i386 and amd64).  So this shouldn't be in fd_linux.go.  In fact if we fix the syscall package for FreeBSD, it seems that it could go into a _unix.go file.\n\nhttps://codereview.appspot.com/12476043/diff/3001/src/pkg/net/fd_linux.go#newcode29\nsrc/pkg/net/fd_linux.go:29: return 0, e1\nPerhaps s/0/-1/ , for better behaviour for poorly written programs.",
			"disapproval": false,
			"date": "2013-08-05 20:40:55.829080",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, iant@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-05 22:00:24.906040",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, iant@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-05 21:41:49.506750",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\r\n\r\nOh, nice.  Done.\r\n\r\n\r\n\r\nOn Mon, Aug 5, 2013 at 1:40 PM, <iant@golang.org> wrote:\r\n\r\n>\r\n> https://codereview.appspot.**com/12476043/diff/3001/src/**\r\n> pkg/net/fd_linux.go<https://codereview.appspot.com/12476043/diff/3001/src/pkg/net/fd_linux.go>\r\n> File src/pkg/net/fd_linux.go (right):\r\n>\r\n> https://codereview.appspot.**com/12476043/diff/3001/src/**\r\n> pkg/net/fd_linux.go#newcode1<https://codereview.appspot.com/12476043/diff/3001/src/pkg/net/fd_linux.go#newcode1>\r\n> src/pkg/net/fd_linux.go:1: // Copyright 2013 The Go Authors. All rights\r\n> reserved.\r\n> F_DUPFD_CLOEXEC is in POSIX.1-2008\r\n> (http://pubs.opengroup.org/**onlinepubs/9699919799/<http://pubs.opengroup.org/onlinepubs/9699919799/>)\r\n> and as such also\r\n> exists on at least Darwin, NetBSD, OpenBSD, and FreeBSD (although for\r\n> some reason it is not defined in our syscall package for FreeBSD i386\r\n> and amd64).  So this shouldn't be in fd_linux.go.  In fact if we fix the\r\n> syscall package for FreeBSD, it seems that it could go into a _unix.go\r\n> file.\r\n>\r\n> https://codereview.appspot.**com/12476043/diff/3001/src/**\r\n> pkg/net/fd_linux.go#newcode29<https://codereview.appspot.com/12476043/diff/3001/src/pkg/net/fd_linux.go#newcode29>\r\n> src/pkg/net/fd_linux.go:29: return 0, e1\r\n> Perhaps s/0/-1/ , for better behaviour for poorly written programs.\r\n>\r\n> https://codereview.appspot.**com/12476043/<https://codereview.appspot.com/12476043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-05 21:42:02.808280",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/05 22:43:48, bradfitz wrote:\n> *** Submitted as https://code.google.com/p/go/source/detail?r=4b59ea60560f ***\n> \n> net: use F_DUPFD_CLOEXEC when duping fds\n> \n> This means that in the common case (modern kernel), we only\n> make 1 system call to dup instead of two, and we also avoid\n> grabbing the syscall.ForkLock.\n> \n> R=golang-dev, iant\n> CC=golang-dev\n> https://codereview.appspot.com/12476043\n\nBad news. This broken OS X 10.6. http://build.golang.org/log/4189569958ff4bea7543f302ad35e1420ede69ee. Maybe there is a bug with the fallback logic.",
			"disapproval": false,
			"date": "2013-08-06 00:17:37.374480",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-05 22:39:34.449700",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=4b59ea60560f ***\n\nnet: use F_DUPFD_CLOEXEC when duping fds\n\nThis means that in the common case (modern kernel), we only\nmake 1 system call to dup instead of two, and we also avoid\ngrabbing the syscall.ForkLock.\n\nR=golang-dev, iant\nCC=golang-dev\nhttps://codereview.appspot.com/12476043",
			"disapproval": false,
			"date": "2013-08-05 22:43:48.584830",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Aug 5, 2013 at 5:17 PM, <dave@cheney.net> wrote:\r\n\r\n> On 2013/08/05 22:43:48, bradfitz wrote:\r\n>\r\n>> *** Submitted as\r\n>>\r\n> https://code.google.com/p/go/**source/detail?r=4b59ea60560f<https://code.google.com/p/go/source/detail?r=4b59ea60560f>***\r\n>\r\n>  net: use F_DUPFD_CLOEXEC when duping fds\r\n>>\r\n>\r\n>  This means that in the common case (modern kernel), we only\r\n>> make 1 system call to dup instead of two, and we also avoid\r\n>> grabbing the syscall.ForkLock.\r\n>>\r\n>\r\n>  R=golang-dev, iant\r\n>> CC=golang-dev\r\n>> https://codereview.appspot.**com/12476043<https://codereview.appspot.com/12476043>\r\n>>\r\n>\r\n> Bad news. This broken OS X 10.6.\r\n> http://build.golang.org/log/**4189569958ff4bea7543f302ad35e1**420ede69ee<http://build.golang.org/log/4189569958ff4bea7543f302ad35e1420ede69ee>\r\n> .\r\n> Maybe there is a bug with the fallback logic.\r\n>\r\n\r\nI discovered that 14 minutes ago and sent out a CL which you could LGTM.\r\n :-)\r\n",
			"disapproval": false,
			"date": "2013-08-06 00:18:36.394370",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 12476043: net: use F_DUPFD_CLOEXEC when duping fds",
	"created": "2013-08-05 20:06:48.687610",
	"patchsets": [
		1,
		3001,
		9001,
		14001,
		13002,
		19001
	],
	"modified": "2013-08-06 00:18:36.444650",
	"closed": true,
	"issue": 12476043
}