{
	"description": "[release-branch.go1.1] cmd/gc: avoid passing unevaluated constant expressions to backends.\n\n\u00ab\u00ab\u00ab CL 11107044 / 5baf6060648e\ncmd/gc: avoid passing unevaluated constant expressions to backends.\n\nBackends do not exactly expect receiving binary operators with\nconstant operands or use workarounds to move them to\nregister/stack in order to handle them.\n\nFixes issue 5841.\n\nR=golang-dev, daniel.morsing, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/11107044\n\nCommitter: Russ Cox <rsc@golang.org>\n\u00bb\u00bb\u00bb\n\nUpdate issue 5928",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-07-25 23:38:37.845280",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. \r\n\r\nOn 26/07/2013, at 9:38, adg@golang.org wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n> \r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n> \r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n> \r\n> \r\n> Description:\r\n> [release-branch.go1.1] cmd/gc: avoid passing unevaluated constant\r\n> expressions to backends.\r\n> \r\n> \u00ab\u00ab\u00ab CL 11107044 / 5baf6060648e\r\n> cmd/gc: avoid passing unevaluated constant expressions to backends.\r\n> \r\n> Backends do not exactly expect receiving binary operators with\r\n> constant operands or use workarounds to move them to\r\n> register/stack in order to handle them.\r\n> \r\n> Fixes issue 5841.\r\n> \r\n> R=golang-dev, daniel.morsing, rsc\r\n> CC=golang-dev\r\n> https://codereview.appspot.com/11107044\r\n> \r\n> Committer: Russ Cox <rsc@golang.org>\r\n> \u00bb\u00bb\u00bb\r\n> \r\n> Update issue 5928\r\n> \r\n> Please review this at https://codereview.appspot.com/11879044/\r\n> \r\n> Affected files:\r\n>  M src/cmd/gc/walk.c\r\n>  A test/fixedbugs/issue5841.go\r\n> \r\n> \r\n> Index: src/cmd/gc/walk.c\r\n> ===================================================================\r\n> --- a/src/cmd/gc/walk.c\r\n> +++ b/src/cmd/gc/walk.c\r\n> @@ -1338,6 +1338,13 @@\r\n>    fatal(\"missing switch %O\", n->op);\r\n> \r\n> ret:\r\n> +    // Expressions that are constant at run time but not\r\n> +    // considered const by the language spec are not turned into\r\n> +    // constants until walk. For example, if n is y%1 == 0, the\r\n> +    // walk of y%1 may have replaced it by 0.\r\n> +    // Check whether n with its updated args is itself now a constant.\r\n> +    evconst(n);\r\n> +\r\n>    ullmancalc(n);\r\n> \r\n>    if(debug['w'] && n != N)\r\n> Index: test/fixedbugs/issue5841.go\r\n> ===================================================================\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/test/fixedbugs/issue5841.go\r\n> @@ -0,0 +1,16 @@\r\n> +// build\r\n> +\r\n> +// Copyright 2013 The Go Authors.  All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +// Issue 5841: 8g produces invalid CMPL $0, $0.\r\n> +// Similar to issue 5002, used to fail at link time.\r\n> +\r\n> +package main\r\n> +\r\n> +func main() {\r\n> +    var y int\r\n> +    if y%1 == 0 {\r\n> +    }\r\n> +}\r\n> \r\n> \r\n> -- \r\n> \r\n> ---You received this message because you are subscribed to the Google Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n> \r\n> \r\n",
			"disapproval": false,
			"date": "2013-07-25 23:43:20.237690",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=8c514a33ecd0 ***\n\n[release-branch.go1.1] cmd/gc: avoid passing unevaluated constant expressions to backends.\n\n\u00ab\u00ab\u00ab CL 11107044 / 5baf6060648e\ncmd/gc: avoid passing unevaluated constant expressions to backends.\n\nBackends do not exactly expect receiving binary operators with\nconstant operands or use workarounds to move them to\nregister/stack in order to handle them.\n\nFixes issue 5841.\n\nR=golang-dev, daniel.morsing, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/11107044\n\nCommitter: Russ Cox <rsc@golang.org>\n\u00bb\u00bb\u00bb\n\nUpdate issue 5928\n\nR=golang-dev, dave\nCC=golang-dev\nhttps://codereview.appspot.com/11879044",
			"disapproval": false,
			"date": "2013-07-26 00:04:41.023940",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"adg@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "For some reason all the builders decided not to build this revision. Did it commit cleanly ?",
			"disapproval": false,
			"date": "2013-07-26 07:43:13.790140",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 11879044: [release-branch.go1.1] cmd/gc: avoid passing unevaluate...",
	"created": "2013-07-25 23:38:01.447030",
	"patchsets": [
		1,
		3001,
		6001
	],
	"modified": "2013-07-26 07:43:14.222100",
	"closed": true,
	"issue": 11879044
}