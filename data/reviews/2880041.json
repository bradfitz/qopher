{
	"description": "Small addition to previous optimization of memequal as discussed here: http://groups.google.com/group/golang-nuts/browse_thread/thread/f591ba36d83723c0/9aba02d344045f38",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"r@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "graham.miller@gmail.com",
			"recipients": [
				"graham.miller@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change.",
			"disapproval": false,
			"date": "2010-11-03 20:32:15.697504",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"graham.miller@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/2880041/diff/2001/src/pkg/runtime/runtime.c\nFile src/pkg/runtime/runtime.c (right):\n\nhttp://codereview.appspot.com/2880041/diff/2001/src/pkg/runtime/runtime.c#newcode321\nsrc/pkg/runtime/runtime.c:321: if(a == b)\nthis will almost always fail, which means the branch prediction will skip it efficiently.  still, i wonder if it's really worthwhile. how often do we compare two identical arrays?",
			"disapproval": false,
			"date": "2010-11-04 18:54:04.803704",
			"approval": false
		},
		{
			"sender": "graham.miller@gmail.com",
			"recipients": [
				"graham.miller@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "> this will almost always fail, which means the branch prediction will skip it\n> efficiently.  still, i wonder if it's really worthwhile. how often do we compare\n> two identical arrays?\n\n\nWe just don't know.  There is some justification for it in the numbers posted by Sven at the bottom of the referenced discussion thread ( http://groups.google.com/group/golang-nuts/browse_thread/thread/f591ba36d83723c0/9aba02d344045f38 )\n\nThat being said, if we decide to do without it, I'm not heartbroken.",
			"disapproval": false,
			"date": "2010-11-04 19:14:48.591927",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\n",
			"disapproval": false,
			"date": "2010-11-04 19:20:25.805527",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "you need to sync and re-upload before i can submit the patch\n\n-rob\n\n",
			"disapproval": false,
			"date": "2010-11-04 19:21:06.061227",
			"approval": false
		},
		{
			"sender": "graham.miller@gmail.com",
			"recipients": [
				"graham.miller@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r, r2 (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2010-11-04 20:44:22.098375",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"graham.miller@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"r@google.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=403b3daec0f2 ***\n\nSmall addition to previous optimization of memequal as discussed here: http://groups.google.com/group/golang-nuts/browse_thread/thread/f591ba36d83723c0/9aba02d344045f38\n\nR=golang-dev, r, r2\nCC=golang-dev\nhttp://codereview.appspot.com/2880041\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2010-11-04 20:45:22.029898",
			"approval": false
		}
	],
	"owner_email": "graham.miller@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "gmiller",
	"subject": "code review 2880041: Small addition to previous optimization of memequal as ...",
	"created": "2010-11-03 20:31:43.758508",
	"patchsets": [
		1,
		2001,
		11001
	],
	"modified": "2010-11-04 20:45:22.029898",
	"closed": false,
	"issue": 2880041
}