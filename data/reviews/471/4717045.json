{
	"description": "fmt: handle precision 0 format stings in standard way\n\nThe C-stdlib heritage of printf/fprintf/sprintf has two odd\naspects for precisions of zero with integers. First, the zero\ncan be specified in any of these ways, \"%4.0d\", \"%.0d\" and\n\"%.d\" which was not previously supported here. Secondly, the\nseemingly universal interpretation of precision for integers\nis that precision==0 and value==0 means print nothing at all.\nThe code here now handles this for integers just as the code\nin big/int.c does the same for the Int type. New tests are\nadded to fmt_test.go to verify these changes.",
	"cc": [
		"r@google.com",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"mtj@google.com"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"michael.jones@gmail.com",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4717045/diff/2001/src/pkg/fmt/fmt_test.go\nFile src/pkg/fmt/fmt_test.go (right):\n\nhttp://codereview.appspot.com/4717045/diff/2001/src/pkg/fmt/fmt_test.go#newcode185\nsrc/pkg/fmt/fmt_test.go:185: {\"%.d\", 0, \"\"},\nshouldn't there be non-zero test cases, the reason for the change?",
			"disapproval": false,
			"date": "2011-07-21 06:45:15.504834",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"michael.jones@gmail.com",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "apologies, never mind. i'm a CL behind.\nLGTM",
			"disapproval": false,
			"date": "2011-07-21 06:46:00.078021",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"michael.jones@gmail.com",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=8f4c6113ed2d ***\n\nfmt: handle precision 0 format stings in standard way\n\nThe C-stdlib heritage of printf/fprintf/sprintf has two odd\naspects for precisions of zero with integers. First, the zero\ncan be specified in any of these ways, \"%4.0d\", \"%.0d\" and\n\"%.d\" which was not previously supported here. Secondly, the\nseemingly universal interpretation of precision for integers\nis that precision==0 and value==0 means print nothing at all.\nThe code here now handles this for integers just as the code\nin big/int.c does the same for the Int type. New tests are\nadded to fmt_test.go to verify these changes.\n\nR=r, r\nCC=golang-dev\nhttp://codereview.appspot.com/4717045\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2011-07-21 06:47:06.298595",
			"approval": false
		},
		{
			"sender": "mtj@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Great, thanks. One less dangling change in my tree!\n\nMichael T. Jones | Chief Technology Advocate  | mtj@google.com |  +1\n650-335-5765\n\n\n\nOn Wed, Jul 20, 2011 at 11:47 PM, <r@golang.org> wrote:\n\n> *** Submitted as\n> http://code.google.com/p/go/**source/detail?r=8f4c6113ed2d<http://code.google.com/p/go/source/detail?r=8f4c6113ed2d>***\n>\n> fmt: handle precision 0 format stings in standard way\n>\n> The C-stdlib heritage of printf/fprintf/sprintf has two odd\n> aspects for precisions of zero with integers. First, the zero\n> can be specified in any of these ways, \"%4.0d\", \"%.0d\" and\n> \"%.d\" which was not previously supported here. Secondly, the\n> seemingly universal interpretation of precision for integers\n> is that precision==0 and value==0 means print nothing at all.\n> The code here now handles this for integers just as the code\n> in big/int.c does the same for the Int type. New tests are\n> added to fmt_test.go to verify these changes.\n>\n> R=r, r\n> CC=golang-dev\n>\n> http://codereview.appspot.com/**4717045<http://codereview.appspot.com/4717045>\n>\n> Committer: Rob Pike <r@golang.org>\n>\n>\n>\n> http://codereview.appspot.com/**4717045/<http://codereview.appspot.com/4717045/>\n>\n",
			"disapproval": false,
			"date": "2011-07-21 06:51:01.554702",
			"approval": false
		}
	],
	"owner_email": "michael.jones@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mtj",
	"subject": "fmt: handle precision 0 format stings in standard way",
	"created": "2011-07-14 07:47:43.741507",
	"patchsets": [
		1,
		2001
	],
	"modified": "2011-07-21 06:51:01.554702",
	"closed": false,
	"issue": 4717045
}