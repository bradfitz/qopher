{
	"description": "go.crypto/ssh: fix panic unmarshalling channelOpenFailureMsg\n\nI introduced this problem in change set 33 when I redefined\nRejectionReason from a uint32 to an int. I have added a test\nto verify the message can be marshaled correctly.\n\nThis was a bit hard to track down as the recover in clientConn\nmainLoop would catch the panic and shutdown the connection. We\nprobably shouldn't be using panic inside marshal/unmarshal, at\nleast not without a way to let the user know why the recover\nlogic tripped.",
	"cc": [
		"agl@golang.org",
		"kardianos@gmail.com",
		"gustav.paul@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4c6e8e7b2c2c&repo=crypto ***\n\ngo.crypto/ssh: fix panic unmarshalling channelOpenFailureMsg\n\nI introduced this problem in change set 33 when I redefined\nRejectionReason from a uint32 to an int. I have added a test\nto verify the message can be marshaled correctly.\n\nThis was a bit hard to track down as the recover in clientConn\nmainLoop would catch the panic and shutdown the connection. We\nprobably shouldn't be using panic inside marshal/unmarshal, at\nleast not without a way to let the user know why the recover\nlogic tripped.\n\nR=agl, kardianos, gustav.paul\nCC=golang-dev\nhttp://codereview.appspot.com/6210063",
			"disapproval": false,
			"date": "2012-05-17 23:11:39.202054",
			"approval": false
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nI stumbled across the panic -> drop connection logic recently when my code intermittently complained that I was closing an already closed connection.\n\nI'm not sure an error in mainLoop should close the underlying tcp connection, at least not if there is no way to interrogate the ClientConn to ask whether the connection is still active.",
			"disapproval": false,
			"date": "2012-05-17 05:17:24.092008",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Let's wait for agl. If we can find another way to avoid panic'ing on a bad\r\nid supplied from the server, then the recover logic might be retired. Feel\r\nfree to propose a CL that does this.\r\n\r\n\r\nOn Thu, May 17, 2012 at 3:17 PM, <gustav.paul@gmail.com> wrote:\r\n\r\n> LGTM.\r\n>\r\n> I stumbled across the panic -> drop connection logic recently when my\r\n> code intermittently complained that I was closing an already closed\r\n> connection.\r\n>\r\n> I'm not sure an error in mainLoop should close the underlying tcp\r\n> connection, at least not if there is no way to interrogate the\r\n> ClientConn to ask whether the connection is still active.\r\n>\r\n> http://codereview.appspot.com/**6210063/<http://codereview.appspot.com/6210063/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-17 05:26:06.029045",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nI added the recover because I felt bad adding lots of error checking to the client code. However, if it's causing problems then it can certainly be replaced.",
			"disapproval": false,
			"date": "2012-05-17 14:25:24.399502",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, kardianos@gmail.com, gustav.paul@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-05-17 02:19:00.931443",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"kardianos@gmail.com",
				"gustav.paul@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-05-17 18:31:17.108762",
			"approval": true
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6210063: go.crypto/ssh: fix panic unmarshalling channelOpenFailureMsg",
	"created": "2012-05-17 02:14:37.504322",
	"patchsets": [
		1,
		2001,
		4001,
		11001
	],
	"modified": "2012-05-17 23:11:43.617114",
	"closed": true,
	"issue": 6210063
}