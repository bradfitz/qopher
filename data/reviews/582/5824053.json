{
	"description": "reflect: document PkgPath, Method, StructField",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5824053/diff/3/src/pkg/reflect/type.go\nFile src/pkg/reflect/type.go (right):\n\nhttp://codereview.appspot.com/5824053/diff/3/src/pkg/reflect/type.go#newcode72\nsrc/pkg/reflect/type.go:72: // and for predeclared types, like error or string.\n\t// PkgPath returns a named type's package path, that is, the import path\n\t// that uniquely identifies the package, such as \"encoding/base64\".\n\t// If the type was predeclared (string, error) or unnamed (*T, struct{}, []int),\n\t// the package path will be the empty string.\n\tPkgPath() string\n\nhttp://codereview.appspot.com/5824053/diff/3/src/pkg/reflect/type.go#newcode359\nsrc/pkg/reflect/type.go:359: // a lower case (unexported) name.\n\t// Name is the method name.\n\t// PkgPath is the package path that qualifies a lower case (unexported)\n\t// method name.  It is empty for upper case (exported) method names.\n\t// The combination of PkgPath and Name uniquely identifies a method\n\t// in a method set. \n\t// See http://golang.org/ref/spec#Uniqueness_of_identifiers\n\tName  string\n\tPkgPath string\n\n(For now you have to insert tip. into that URL)\n\nhttp://codereview.appspot.com/5824053/diff/3/src/pkg/reflect/type.go#newcode707\nsrc/pkg/reflect/type.go:707: // PkgPath is the package path that qualifies\n\t// Name is the field name.\n\t// PkgPath is the package path that qualifies a lower case (unexported)\n\t// field name.  It is empty for upper case (exported) field names.\n\t// See http://golang.org/ref/spec#Uniqueness_of_identifiers\n\tName  string\n\tPkgPath string",
			"disapproval": false,
			"date": "2012-03-15 19:08:36.854202",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=526b4b12be9d ***\n\nreflect: document PkgPath, Method, StructField\n\nR=golang-dev, bradfitz, r\nCC=golang-dev\nhttp://codereview.appspot.com/5824053",
			"disapproval": false,
			"date": "2012-03-15 21:16:02.499411",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Wed, Mar 14, 2012 at 12:04 PM, <rsc@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> reflect: document PkgPath, Method, StructField\n>\n> Please review this at http://codereview.appspot.com/**5824053/<http://codereview.appspot.com/5824053/>\n>\n> Affected files:\n>  M src/pkg/reflect/type.go\n>\n>\n> Index: src/pkg/reflect/type.go\n> ==============================**==============================**=======\n> --- a/src/pkg/reflect/type.go\n> +++ b/src/pkg/reflect/type.go\n> @@ -68,7 +68,8 @@\n>\n>        // PkgPath returns the type's package path.\n>        // The package path is a full package import path like\n> \"encoding/base64\".\n> -       // PkgPath returns an empty string for unnamed or predeclared\n> types.\n> +       // PkgPath returns an empty string for unnamed types, like *T or\n> struct{},\n> +       // and for predeclared types, like error or string.\n>        PkgPath() string\n>\n>        // Size returns the number of bytes needed to store\n> @@ -354,11 +355,15 @@\n>\n>  // Method represents a single method.\n>  type Method struct {\n> -       PkgPath string // empty for uppercase Name\n> -       Name    string\n> -       Type    Type\n> -       Func    Value\n> -       Index   int\n> +       // PkgPath is the package path that qualifies\n> +       // a lower case (unexported) name.\n> +       // It is empty for upper case (exported) names.\n> +       PkgPath string\n> +\n> +       Name  string // method name\n> +       Type  Type   // method type\n> +       Func  Value  // func with receiver as first argument\n> +       Index int    // index for Type.Method\n>  }\n>\n>  // High bit says whether type has\n> @@ -697,14 +702,19 @@\n>        return\n>  }\n>\n> +// A StructField describes a single field in a struct.\n>  type StructField struct {\n> -       PkgPath   string // empty for uppercase Name\n> -       Name      string\n> -       Type      Type\n> -       Tag       StructTag\n> -       Offset    uintptr\n> -       Index     []int\n> -       Anonymous bool\n> +       // PkgPath is the package path that qualifies\n> +       // a lower case (unexported) name.\n> +       // It is empty for upper case (exported) names.\n> +       PkgPath string\n> +\n> +       Name      string    // field name\n> +       Type      Type      // field type\n> +       Tag       StructTag // field tag string\n> +       Offset    uintptr   // offset within struct, in bytes\n> +       Index     []int     // index sequence for Type.FieldByIndex\n> +       Anonymous bool      // is an anonymous field\n>  }\n>\n>  // A StructTag is the tag string in a struct field.\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-14 19:06:37.091787",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-14 19:04:19.389009",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5824053/diff/3/src/pkg/reflect/type.go\nFile src/pkg/reflect/type.go (right):\n\nhttp://codereview.appspot.com/5824053/diff/3/src/pkg/reflect/type.go#newcode70\nsrc/pkg/reflect/type.go:70: // The package path is a full package import path like \"encoding/base64\".\ns/ like/: / would fix the grammar error here.\n\nbut see below\n\nhttp://codereview.appspot.com/5824053/diff/3/src/pkg/reflect/type.go#newcode71\nsrc/pkg/reflect/type.go:71: // PkgPath returns an empty string for unnamed types, like *T or struct{},\ns/, like/ such as/g\n\nhttp://codereview.appspot.com/5824053/diff/3/src/pkg/reflect/type.go#newcode72\nsrc/pkg/reflect/type.go:72: // and for predeclared types, like error or string.\nhere's a rewrite.\n\nPkgPath returns the type's package path, that is, the\npath string used to import the package, such as \"encoding/base64\".\nIf the type was predeclared (string, error) rather than imported,\nthe package path will be the empty string. It will also be empty\nfor unnamed types (*T, struct{}, []int, and so on).\n\nnot sure if you want, but rewritten this way i felt like finishing\n\nfor unnamed types (*T, struct{}, []int, and so on), since they\nare constructed rather than imported.\n\nsince it seems to be true and explains things, but i'm not sure if\nthat's just superstition.\n\nhttp://codereview.appspot.com/5824053/diff/3/src/pkg/reflect/type.go#newcode359\nsrc/pkg/reflect/type.go:359: // a lower case (unexported) name.\nneeds an example or something. is the path for the method or the type? what about the name? baffling.\n\ni think at least s/name/metho/ here and /field/ in StructField but more is needed.",
			"disapproval": false,
			"date": "2012-03-14 20:51:10.855076",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nthank you",
			"disapproval": false,
			"date": "2012-03-15 19:38:52.948799",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5824053: reflect: document PkgPath, Method, StructField",
	"created": "2012-03-14 19:03:15.590272",
	"patchsets": [
		1,
		3,
		7001,
		9002,
		9004
	],
	"modified": "2012-03-16 16:00:47.028263",
	"closed": true,
	"issue": 5824053
}