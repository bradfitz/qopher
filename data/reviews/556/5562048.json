{
	"description": "net: ListenMulticastUDP to listen concurrently across multiple listeners\n\nThis CL introduces new function ListenMulticastUDP to fix\nmulticast UDP listening across multiple listeners issue,\nto replace old multicast methods JoinGroup and LeaveGroup\non UDPConn.\n\nThis CL also enables multicast testing by default.\n\nFixes issue 2730.",
	"cc": [
		"rsc@golang.org",
		"paul.a.lalonde@gmail.com",
		"fullung@gmail.com",
		"devon.odell@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "based on our earlier email discussion,\ni believe that this will be the end of the\nmulticast CLs before Go 1.\ncan you please confirm that this is the case?\n\nalso, following up on that discussion, now\nthat we have this new ListenMulticastUDP,\nshould we delete the JoinGroup and LeaveGroup\nmethods?\n\nruss\n",
			"disapproval": false,
			"date": "2012-01-25 22:45:26.988124",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jan 26, 2012 at 7:45 AM, Russ Cox <rsc@golang.org> wrote:\n\n> based on our earlier email discussion,\n> i believe that this will be the end of the\n> multicast CLs before Go 1.\n> can you please confirm that this is the case?\n\nCertainly.\n\n> also, following up on that discussion, now\n> that we have this new ListenMulticastUDP,\n> should we delete the JoinGroup and LeaveGroup\n> methods?\n\nI've been thinking on that and I think it's a good time\nto do that.\n\n-- Mikio\n",
			"disapproval": false,
			"date": "2012-01-26 13:19:37.670493",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"paul.a.lalonde@gmail.com",
				"fullung@gmail.com",
				"devon.odell@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, paul.a.lalonde@gmail.com, fullung@gmail.com, devon.odell@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-28 14:29:37.950557",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Great.  Can you please remove the Group methods in this CL?\n",
			"disapproval": false,
			"date": "2012-01-26 15:11:48.734204",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Will do\n\n-- Mikio\n\n\nOn Jan 27, 2012, at 12:11 AM, Russ Cox <rsc@golang.org> wrote:\n\n> Great.  Can you please remove the Group methods in this CL?\n",
			"disapproval": false,
			"date": "2012-01-26 16:24:47.419715",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"paul.a.lalonde@gmail.com",
				"fullung@gmail.com",
				"devon.odell@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, paul.a.lalonde@gmail.com, fullung@gmail.com, devon.odell@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-28 18:57:44.976565",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"paul.a.lalonde@gmail.com",
				"fullung@gmail.com",
				"devon.odell@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, paul.a.lalonde@gmail.com, fullung@gmail.com, devon.odell@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-25 13:39:20.003387",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"paul.a.lalonde@gmail.com",
				"fullung@gmail.com",
				"devon.odell@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. I'll try to get it tested in our multicast app today.\n\nRe: Russ's question. I think people might want to be able to join a socket to multiple groups (ListenMulticastUDP only can only join one) to simplify certain kinds of multicast processing code, but maybe JoinGroup and LeaveGroup should go away until the more general IP options API is ready.\n\nIt might be worth it to ask golang-nuts if there are any other users of the current multicast API out there?\n\nhttp://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_bsd.go\nFile src/pkg/net/sockopt_bsd.go (right):\n\nhttp://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_bsd.go#newcode38\nsrc/pkg/net/sockopt_bsd.go:38: func setDefaultMulticastSockopts(s int) {\nRelated to my question about errors and Close from the other day: I don't know why setsockopt would fail, but I know that it could fail. Do we want to ignore those errors in functions like this one, or should errors be returned from syscall.Setsockopt* and then returned from here so that the caller can again check for and return them?\n\nhttp://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_linux.go\nFile src/pkg/net/sockopt_linux.go (right):\n\nhttp://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_linux.go#newcode34\nsrc/pkg/net/sockopt_linux.go:34: syscall.SetsockoptInt(s, syscall.SOL_SOCKET, syscall.SO_REUSEADDR, 1)\nSame thing here.\n\nhttp://codereview.appspot.com/5562048/diff/7015/src/pkg/net/udpsock_posix.go\nFile src/pkg/net/udpsock_posix.go (right):\n\nhttp://codereview.appspot.com/5562048/diff/7015/src/pkg/net/udpsock_posix.go#newcode264\nsrc/pkg/net/udpsock_posix.go:264: setIPv4MulticastInterface(c.fd, ifi)\nWhoohoo!",
			"disapproval": false,
			"date": "2012-01-26 04:20:00.812347",
			"approval": true
		},
		{
			"sender": "devon.odell@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "2012/1/25  <fullung@gmail.com>:\n> LGTM. I'll try to get it tested in our multicast app today.\n>\n> Re: Russ's question. I think people might want to be able to join a\n> socket to multiple groups (ListenMulticastUDP only can only join one) to\n> simplify certain kinds of multicast processing code, but maybe JoinGroup\n> and LeaveGroup should go away until the more general IP options API is\n> ready.\n>\n> It might be worth it to ask golang-nuts if there are any other users of\n> the current multicast API out there?\n\nI think perhaps Paul will have some input on this.\n\n> http://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_bsd.go\n> File src/pkg/net/sockopt_bsd.go (right):\n>\n> http://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_bsd.go#newcode38\n> src/pkg/net/sockopt_bsd.go:38: func setDefaultMulticastSockopts(s int) {\n> Related to my question about errors and Close from the other day: I\n> don't know why setsockopt would fail, but I know that it could fail. Do\n> we want to ignore those errors in functions like this one, or should\n> errors be returned from syscall.Setsockopt* and then returned from here\n> so that the caller can again check for and return them?\n\nI think errors should be returned. If SO_REUSEADDR fails when you're\ntrying to use it in a multicast context, it means that something else\nis listening on that socket and it is only available for unicast\nmessages. People should be able to exit from this condition\ngracefully.\n\n> http://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_linux.go\n> File src/pkg/net/sockopt_linux.go (right):\n>\n> http://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_linux.go#newcode34\n> src/pkg/net/sockopt_linux.go:34: syscall.SetsockoptInt(s,\n> syscall.SOL_SOCKET, syscall.SO_REUSEADDR, 1)\n> Same thing here.\n\nIdem to above then ;)\n\n> http://codereview.appspot.com/5562048/diff/7015/src/pkg/net/udpsock_posix.go\n> File src/pkg/net/udpsock_posix.go (right):\n>\n> http://codereview.appspot.com/5562048/diff/7015/src/pkg/net/udpsock_posix.go#newcode264\n> src/pkg/net/udpsock_posix.go:264: setIPv4MulticastInterface(c.fd, ifi)\n> Whoohoo!\n>\n> http://codereview.appspot.com/5562048/\n\n--dho\n",
			"disapproval": false,
			"date": "2012-01-26 15:09:09.207822",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"paul.a.lalonde@gmail.com",
				"fullung@gmail.com",
				"devon.odell@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5562048/diff/15054/doc/go1.tmpl\nFile doc/go1.tmpl (right):\n\nhttp://codereview.appspot.com/5562048/diff/15054/doc/go1.tmpl#newcode1116\ndoc/go1.tmpl:1116: There are also new methods\ns/methods/functions/\n\nhttp://codereview.appspot.com/5562048/diff/15054/doc/go1.tmpl#newcode1121\ndoc/go1.tmpl:1121: The <code>net.ListenMulticastUDP</code> also replaces the old\ns/also/function/",
			"disapproval": false,
			"date": "2012-01-29 17:48:28.151425",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"paul.a.lalonde@gmail.com",
				"fullung@gmail.com",
				"devon.odell@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think all comments are addressed.\n- add ListenMulticastUDP\n- remove both JoinGroup, LeaveGroup\n- add error handling for sockopts\n\nPTAL.\n\nhttp://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_bsd.go\nFile src/pkg/net/sockopt_bsd.go (right):\n\nhttp://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_bsd.go#newcode38\nsrc/pkg/net/sockopt_bsd.go:38: func setDefaultMulticastSockopts(s int) {\nOn 2012/01/26 04:20:01, albert.strasheim wrote:\n> Related to my question about errors and Close from the other day: I don't know\n> why setsockopt would fail, but I know that it could fail. Do we want to ignore\n> those errors in functions like this one, or should errors be returned from\n> syscall.Setsockopt* and then returned from here so that the caller can again\n> check for and return them?\n\nDone.\n\nhttp://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_linux.go\nFile src/pkg/net/sockopt_linux.go (right):\n\nhttp://codereview.appspot.com/5562048/diff/7015/src/pkg/net/sockopt_linux.go#newcode34\nsrc/pkg/net/sockopt_linux.go:34: syscall.SetsockoptInt(s, syscall.SOL_SOCKET, syscall.SO_REUSEADDR, 1)\nOn 2012/01/26 04:20:01, albert.strasheim wrote:\n> Same thing here.\n\nDone.",
			"disapproval": false,
			"date": "2012-01-28 14:28:40.988456",
			"approval": false
		},
		{
			"sender": "devon.odell@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Lgtm\nOn Jan 28, 2012 1:57 PM, <mikioh.mikioh@gmail.com> wrote:\n\n> Hello rsc@golang.org, paul.a.lalonde@gmail.com, fullung@gmail.com,\n> devon.odell@gmail.com (cc: golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**5562048/<http://codereview.appspot.com/5562048/>\n>\n",
			"disapproval": false,
			"date": "2012-01-28 20:22:03.081404",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"paul.a.lalonde@gmail.com",
				"fullung@gmail.com",
				"devon.odell@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=e92908c9c87d ***\n\nnet: ListenMulticastUDP to listen concurrently across multiple listeners\n\nThis CL introduces new function ListenMulticastUDP to fix\nmulticast UDP listening across multiple listeners issue,\nto replace old multicast methods JoinGroup and LeaveGroup\non UDPConn.\n\nThis CL also enables multicast testing by default.\n\nFixes issue 2730.\n\nR=rsc, paul.a.lalonde, fullung, devon.odell\nCC=golang-dev\nhttp://codereview.appspot.com/5562048",
			"disapproval": false,
			"date": "2012-01-31 16:53:32.300261",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 5562048: net: ListenMulticastUDP to listen concurrently across m...",
	"created": "2012-01-22 15:32:31.995763",
	"patchsets": [
		7015,
		17026,
		15054,
		21001,
		22013
	],
	"modified": "2012-01-31 16:53:34.224987",
	"closed": true,
	"issue": 5562048
}