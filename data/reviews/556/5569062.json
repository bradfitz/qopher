{
	"description": "gc: fix order of evaluation\n\nPulling function calls out to happen before the\nexpression being evaluated was causing illegal\nreorderings even without inlining; with inlining\nit got worse.  This CL adds a separate ordering pass\nto move things with a fixed order out of expressions\nand into the statement sequence, where they will\nnot be reordered by walk.\n\nReplaces lvd's CL 5534079.\n\nFixes issue 2740.",
	"cc": [
		"lvd@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 25, 2012 at 16:45,  <lvd@google.com> wrote:\n> do you want to keep these? they were for hunting down the weirdness, but\n> it looks exterminated.\n\nit's a serious mistake, so i decided to leave them.\n",
			"disapproval": false,
			"date": "2012-01-25 22:53:24.474137",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"lvd@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=40143842b69b ***\n\ngc: fix order of evaluation\n\nPulling function calls out to happen before the\nexpression being evaluated was causing illegal\nreorderings even without inlining; with inlining\nit got worse.  This CL adds a separate ordering pass\nto move things with a fixed order out of expressions\nand into the statement sequence, where they will\nnot be reordered by walk.\n\nReplaces lvd's CL 5534079.\n\nFixes issue 2740.\n\nR=lvd\nCC=golang-dev\nhttp://codereview.appspot.com/5569062",
			"disapproval": false,
			"date": "2012-01-25 22:53:53.227894",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"lvd@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello lvd (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-01-25 17:32:11.388978",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 25, 2012 at 16:45,  <lvd@google.com> wrote:\n> this is nice but means we cant print omake before typecheck i think.\n> but i always postponed adding other cases until they actually show up.\n\nadded a check for n->list.\n",
			"disapproval": false,
			"date": "2012-01-25 22:53:06.381321",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"rsc@golang.org",
				"lvd@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nvery nice.  only immaterial comments below.\n\nhttp://codereview.appspot.com/5569062/diff/1003/src/cmd/gc/fmt.c\nFile src/cmd/gc/fmt.c (right):\n\nhttp://codereview.appspot.com/5569062/diff/1003/src/cmd/gc/fmt.c#newcode1266\nsrc/cmd/gc/fmt.c:1266: if(n->right)\nthis is nice but means we cant print omake before typecheck i think.  but i always postponed adding other cases until they actually show up.\n\nhttp://codereview.appspot.com/5569062/diff/1003/src/cmd/gc/sinit.c\nFile src/cmd/gc/sinit.c (right):\n\nhttp://codereview.appspot.com/5569062/diff/1003/src/cmd/gc/sinit.c#newcode158\nsrc/cmd/gc/sinit.c:158: if(n->op == ONAME && n->ninit)\ndo you want to keep these? they were for hunting down the weirdness, but it looks exterminated.",
			"disapproval": false,
			"date": "2012-01-25 21:45:41.623403",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5569062: gc: fix order of evaluation",
	"created": "2012-01-25 17:23:12.256244",
	"patchsets": [
		1,
		2001,
		1002,
		1003,
		33
	],
	"modified": "2012-01-25 22:53:54.268633",
	"closed": true,
	"issue": 5569062
}