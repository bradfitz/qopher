{
	"description": "google-api-go-client: decide Opaque encoding based on net/http behaviour rather than build tags.",
	"cc": [
		"adg@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/google-api-go-client",
			"disapproval": false,
			"date": "2013-06-20 02:14:16.963530",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10373046/diff/4/googleapi/googleapi.go\nFile googleapi/googleapi.go (right):\n\nhttps://codereview.appspot.com/10373046/diff/4/googleapi/googleapi.go#newcode257\ngoogleapi/googleapi.go:257: isGo11 = bytes.HasPrefix(b.Bytes(), []byte(\"GET http\"))\nit's not isGo11. It's requestBroken or something like that",
			"disapproval": false,
			"date": "2013-06-20 02:32:18.006870",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM after rename below.\n\nhttps://codereview.appspot.com/10373046/diff/4/googleapi/googleapi.go\nFile googleapi/googleapi.go (right):\n\nhttps://codereview.appspot.com/10373046/diff/4/googleapi/googleapi.go#newcode257\ngoogleapi/googleapi.go:257: isGo11 = bytes.HasPrefix(b.Bytes(), []byte(\"GET http\"))\nOn 2013/06/20 02:32:18, adg wrote:\n> it's not isGo11. It's requestBroken or something like that\n\nThe most accurate yet concise thing I can come up with is:\n\nhas4860Fix\n\nThen give it a comment above:\n\n// has4860Fix is whether this Go environment contains the fix for http://golang.org/issue/4860\nvar has4860Fix bool",
			"disapproval": false,
			"date": "2013-06-20 14:55:45.373420",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/10373046/diff/15001/googleapi/googleapi_test.go\nFile googleapi/googleapi_test.go (right):\n\nhttps://codereview.appspot.com/10373046/diff/15001/googleapi/googleapi_test.go#newcode82\ngoogleapi/googleapi_test.go:82: const prefixTmpl = \"GET %v HTTP/1.1\\r\\nHost: %v\\r\\n\"\nI suppose this works because we do sort the response headers before we write the.  Might break in the future if we add any default request headers, but we'll deal with that then.",
			"disapproval": false,
			"date": "2013-06-20 17:03:44.545710",
			"approval": true
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL, I modified the tests to be independent of the go version by not checking UserAgent.\n\nhttps://codereview.appspot.com/10373046/diff/4/googleapi/googleapi.go\nFile googleapi/googleapi.go (right):\n\nhttps://codereview.appspot.com/10373046/diff/4/googleapi/googleapi.go#newcode257\ngoogleapi/googleapi.go:257: isGo11 = bytes.HasPrefix(b.Bytes(), []byte(\"GET http\"))\nOn 2013/06/20 02:32:18, adg wrote:\n> it's not isGo11. It's requestBroken or something like that\n\nDone.\n\nhttps://codereview.appspot.com/10373046/diff/4/googleapi/googleapi.go#newcode257\ngoogleapi/googleapi.go:257: isGo11 = bytes.HasPrefix(b.Bytes(), []byte(\"GET http\"))\nOn 2013/06/20 14:55:45, bradfitz wrote:\n> On 2013/06/20 02:32:18, adg wrote:\n> > it's not isGo11. It's requestBroken or something like that\n> \n> The most accurate yet concise thing I can come up with is:\n> \n> has4860Fix\n> \n> Then give it a comment above:\n> \n> // has4860Fix is whether this Go environment contains the fix for\n> http://golang.org/issue/4860\n> var has4860Fix bool\n> \n\nDone.",
			"disapproval": false,
			"date": "2013-06-20 16:38:36.063960",
			"approval": false
		},
		{
			"sender": "campoy@golang.org",
			"recipients": [
				"campoy@golang.org",
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/google-api-go-client/source/detail?r=8feef0f14ba9 ***\n\ngoogle-api-go-client: decide Opaque encoding based on net/http behaviour rather than build tags.\n\nR=adg, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/10373046\n\nhttps://codereview.appspot.com/10373046/diff/15001/googleapi/googleapi_test.go\nFile googleapi/googleapi_test.go (right):\n\nhttps://codereview.appspot.com/10373046/diff/15001/googleapi/googleapi_test.go#newcode82\ngoogleapi/googleapi_test.go:82: const prefixTmpl = \"GET %v HTTP/1.1\\r\\nHost: %v\\r\\n\"\nOn 2013/06/20 17:03:44, bradfitz wrote:\n> I suppose this works because we do sort the response headers before we write\n> the.  Might break in the future if we add any default request headers, but we'll\n> deal with that then.\n\nACK",
			"disapproval": false,
			"date": "2013-06-20 17:32:24.395430",
			"approval": false
		}
	],
	"owner_email": "campoy@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gocampoy",
	"subject": "code review 10373046: google-api-go-client: decide Opaque encoding based on n...",
	"created": "2013-06-20 02:06:32.086790",
	"patchsets": [
		1,
		3,
		4001,
		4,
		10001,
		13001,
		15001,
		18001
	],
	"modified": "2013-06-20 17:32:26.069490",
	"closed": true,
	"issue": 10373046
}