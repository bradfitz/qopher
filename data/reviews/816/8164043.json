{
	"description": "bytes: don't grow Buffer if capacity is available\n\nAlso added a new benchmark from the same test:\n\nbenchmark                           old ns/op    new ns/op    delta\nBenchmarkBufferNotEmptyWriteRead      2643698       709189  -73.17%\n\nFixes Issue 5154",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"gri@golang.org"
	],
	"reviewers": [
		"khr@google.com",
		"robryk@gmail.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-29 18:22:42.912260",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/8164043/diff/5001/src/pkg/bytes/export_test.go\nFile src/pkg/bytes/export_test.go (right):\n\nhttps://codereview.appspot.com/8164043/diff/5001/src/pkg/bytes/export_test.go#newcode13\nsrc/pkg/bytes/export_test.go:13: }\nfunc (b *Buffer) Cap() int {\n   return cap(b.buf)\n}",
			"disapproval": false,
			"date": "2013-03-29 18:27:49.353720",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "let gri have a look too before you submit. there may be a prettier way\r\nbut i couldn't think of one\r\n",
			"disapproval": false,
			"date": "2013-03-29 18:28:34.753330",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-29 18:30:35.071170",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8164043/diff/5001/src/pkg/bytes/export_test.go\nFile src/pkg/bytes/export_test.go (right):\n\nhttps://codereview.appspot.com/8164043/diff/5001/src/pkg/bytes/export_test.go#newcode13\nsrc/pkg/bytes/export_test.go:13: }\nOn 2013/03/29 18:27:49, r wrote:\n> func (b *Buffer) Cap() int {\n>    return cap(b.buf)\n> }\n\nDone.",
			"disapproval": false,
			"date": "2013-03-29 18:30:37.296100",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nnice!",
			"disapproval": false,
			"date": "2013-03-29 19:26:02.172030",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=7b47ca7337ca ***\n\nbytes: don't grow Buffer if capacity is available\n\nAlso added a new benchmark from the same test:\n\nbenchmark                           old ns/op    new ns/op    delta\nBenchmarkBufferNotEmptyWriteRead      2643698       709189  -73.17%\n\nFixes Issue 5154\n\nR=golang-dev, r, gri\nCC=golang-dev\nhttps://codereview.appspot.com/8164043",
			"disapproval": false,
			"date": "2013-03-29 19:39:25.146220",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I would think you'd want to make sure that you weren't copying too much.\r\n If you're asking for one byte and there's one byte available at the start\r\nof the buffer, you probably don't want to copy down N bytes only to free up\r\nthat one byte at the end.  Better to grow the buffer now so that next time\r\nthere is more space.\r\n\r\nSo copy if the buffer is at least half empty?  Something like \"m+n <=\r\ncap(b.buf) && m <= cap(b.buf)/2\"\r\n\r\n\r\nOn Fri, Mar 29, 2013 at 12:39 PM, <bradfitz@golang.org> wrote:\r\n\r\n> *** Submitted as\r\n> https://code.google.com/p/go/**source/detail?r=7b47ca7337ca<https://code.google.com/p/go/source/detail?r=7b47ca7337ca>***\r\n>\r\n>\r\n> bytes: don't grow Buffer if capacity is available\r\n>\r\n> Also added a new benchmark from the same test:\r\n>\r\n> benchmark                           old ns/op    new ns/op    delta\r\n> BenchmarkBufferNotEmptyWriteRe**ad      2643698       709189  -73.17%\r\n>\r\n> Fixes Issue 5154\r\n>\r\n> R=golang-dev, r, gri\r\n> CC=golang-dev\r\n> https://codereview.appspot.**com/8164043<https://codereview.appspot.com/8164043>\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.**com/8164043/<https://codereview.appspot.com/8164043/>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-29 19:47:49.918920",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yeah, that was my hesitation before too, and I just realized after\r\nsubmitting that the original bug report said that too.\r\n\r\nWill send a CL.\r\n\r\nOn Fri, Mar 29, 2013 at 12:47 PM, Keith Randall <khr@google.com> wrote:\r\n\r\n> I would think you'd want to make sure that you weren't copying too much.\r\n>  If you're asking for one byte and there's one byte available at the start\r\n> of the buffer, you probably don't want to copy down N bytes only to free up\r\n> that one byte at the end.  Better to grow the buffer now so that next time\r\n> there is more space.\r\n>\r\n> So copy if the buffer is at least half empty?  Something like \"m+n <=\r\n> cap(b.buf) && m <= cap(b.buf)/2\"\r\n>\r\n>\r\n> On Fri, Mar 29, 2013 at 12:39 PM, <bradfitz@golang.org> wrote:\r\n>\r\n>> *** Submitted as\r\n>> https://code.google.com/p/go/**source/detail?r=7b47ca7337ca<https://code.google.com/p/go/source/detail?r=7b47ca7337ca>***\r\n>>\r\n>>\r\n>> bytes: don't grow Buffer if capacity is available\r\n>>\r\n>> Also added a new benchmark from the same test:\r\n>>\r\n>> benchmark                           old ns/op    new ns/op    delta\r\n>> BenchmarkBufferNotEmptyWriteRe**ad      2643698       709189  -73.17%\r\n>>\r\n>> Fixes Issue 5154\r\n>>\r\n>> R=golang-dev, r, gri\r\n>> CC=golang-dev\r\n>> https://codereview.appspot.**com/8164043<https://codereview.appspot.com/8164043>\r\n>>\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/8164043/<https://codereview.appspot.com/8164043/>\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n>> .\r\n>> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n>> .\r\n>>\r\n>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-29 19:51:53.905500",
			"approval": false
		},
		{
			"sender": "robryk@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"khr@google.com",
				"robryk@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> On Fri, Mar 29, 2013 at 12:47 PM, Keith Randall <mailto:khr@google.com> wrote:\n> \n> > I would think you'd want to make sure that you weren't copying too much.\n> >  If you're asking for one byte and there's one byte available at the start\n> > of the buffer, you probably don't want to copy down N bytes only to free up\n> > that one byte at the end.  Better to grow the buffer now so that next time\n> > there is more space.\n> >\n> > So copy if the buffer is at least half empty?  Something like \"m+n <=\n> > cap(b.buf) && m <= cap(b.buf)/2\"\n\nm+n <= cap(b.buf)/2 should be ok: we will then rewrite every byte inserted into the buffer at most once (we will only copy bytes from its second half into its first half; and it never shrinks) and we will grow the buffer to at most twice the size required.",
			"disapproval": false,
			"date": "2013-03-29 20:03:23.144100",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Mar 29, 2013 at 1:03 PM, <robryk@gmail.com> wrote:\r\n\r\n> On Fri, Mar 29, 2013 at 12:47 PM, Keith Randall\r\n>>\r\n> <mailto:khr@google.com> wrote:\r\n>\r\n>  > I would think you'd want to make sure that you weren't copying too\r\n>>\r\n> much.\r\n>\r\n>> >  If you're asking for one byte and there's one byte available at the\r\n>>\r\n> start\r\n>\r\n>> > of the buffer, you probably don't want to copy down N bytes only to\r\n>>\r\n> free up\r\n>\r\n>> > that one byte at the end.  Better to grow the buffer now so that\r\n>>\r\n> next time\r\n>\r\n>> > there is more space.\r\n>> >\r\n>> > So copy if the buffer is at least half empty?  Something like \"m+n\r\n>>\r\n> <=\r\n>\r\n>> > cap(b.buf) && m <= cap(b.buf)/2\"\r\n>>\r\n>\r\n> m+n <= cap(b.buf)/2 should be ok: we will then rewrite every byte\r\n> inserted into the buffer at most once (we will only copy bytes from its\r\n> second half into its first half; and it never shrinks) and we will grow\r\n> the buffer to at most twice the size required.\r\n>\r\n\r\nyeah, that's what I went with in https://codereview.appspot.com/8173043/\r\n",
			"disapproval": false,
			"date": "2013-03-29 20:04:59.725100",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 8164043: bytes: don't grow Buffer if capacity is available",
	"created": "2013-03-29 18:22:28.273140",
	"patchsets": [
		1,
		2001,
		5001,
		12001,
		16001
	],
	"modified": "2013-03-29 20:03:23.279410",
	"closed": true,
	"issue": 8164043
}