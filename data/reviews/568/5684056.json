{
	"description": "pprof: add Profile type\n\nMakes it possible for client code to maintain its own profiles,\nand also reduces the API surface by giving us a type that\nmodels built-in profiles.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-22 06:59:59.953829",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "for a little while at least\nhttp://swtch.com:8888/debug/pprof/\n",
			"disapproval": false,
			"date": "2012-02-22 07:07:12.986908",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/net/http/pprof/pprof.go\nFile src/pkg/net/http/pprof/pprof.go (right):\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/net/http/pprof/pprof.go#newcode164\nsrc/pkg/net/http/pprof/pprof.go:164: name := r.URL.Path[len(\"/debug/pprof/\"):]\nis the path clean? pardon my ignorance about URL paths.\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go\nFile src/pkg/runtime/pprof/pprof.go (right):\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode40\nsrc/pkg/runtime/pprof/pprof.go:40: // These predefine profiles maintain themselves; they panic on an explicit\ns/predefine/&d/\n\nnot sure about the semicolon. maybe s/; they/ and/\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode55\nsrc/pkg/runtime/pprof/pprof.go:55: // profiles lists all registered profiles.\ns/lists/holds/ ?\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode168\nsrc/pkg/runtime/pprof/pprof.go:168: //\tAdd\ninvert this list to correspond to the way we see traces\nAdd, called from\nrpc.NewClient, called from\nmypkg.Run, called from\nmain.main\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode175\nsrc/pkg/runtime/pprof/pprof.go:175: panic(\"pprof: use of zero Profile\")\ns/zero/nameless/?\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode178\nsrc/pkg/runtime/pprof/pprof.go:178: panic(\"pprof: Add called on built-in Profile\")\n+ p.name\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode230\nsrc/pkg/runtime/pprof/pprof.go:230: // TODO(rsc): Add to comment above:\ndo or delete\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode261\nsrc/pkg/runtime/pprof/pprof.go:261: // printCountProfile prints a countProfile at the specified debug level.\nif it's level why not call it a level in the public api\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode324\nsrc/pkg/runtime/pprof/pprof.go:324: fmt.Fprintf(w, \"#\\t%#x\\t%s+%#x\\t%s:%d\\n\", pc, f.Name(), pc-f.Entry(), file, line)\ngo vet this directory before submitting\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode486\nsrc/pkg/runtime/pprof/pprof.go:486: if n < len(buf) || len(buf) >= 64<<20 {\n32<<20 would match the comment, i think",
			"disapproval": false,
			"date": "2012-02-22 23:42:17.947610",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5684056/diff/1002/src/pkg/net/http/pprof/pprof.go\nFile src/pkg/net/http/pprof/pprof.go (right):\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/net/http/pprof/pprof.go#newcode164\nsrc/pkg/net/http/pprof/pprof.go:164: name := r.URL.Path[len(\"/debug/pprof/\"):]\nOn 2012/02/22 23:42:18, r wrote:\n> is the path clean? pardon my ignorance about URL paths.\n\nYes.  If your handler is invoked via the ServeMux (like when using http.Handle and http.HandleFunc) then the path is clean and guaranteed to start with (or be, for non-directory patterns) the registered path.\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go\nFile src/pkg/runtime/pprof/pprof.go (right):\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode40\nsrc/pkg/runtime/pprof/pprof.go:40: // These predefine profiles maintain themselves; they panic on an explicit\nOn 2012/02/22 23:42:18, r wrote:\n> s/predefine/&d/\n> \n> not sure about the semicolon. maybe s/; they/ and/\n\nDone.\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode55\nsrc/pkg/runtime/pprof/pprof.go:55: // profiles lists all registered profiles.\nOn 2012/02/22 23:42:18, r wrote:\n> s/lists/holds/ ?\n\nDone.\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode168\nsrc/pkg/runtime/pprof/pprof.go:168: //\tAdd\nOn 2012/02/22 23:42:18, r wrote:\n> invert this list to correspond to the way we see traces\n> Add, called from\n> rpc.NewClient, called from\n> mypkg.Run, called from\n> main.main\n\nDone.\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode175\nsrc/pkg/runtime/pprof/pprof.go:175: panic(\"pprof: use of zero Profile\")\nOn 2012/02/22 23:42:18, r wrote:\n> s/zero/nameless/?\n\nchanged to uninitialized\n(didn't come from NewProfile)\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode178\nsrc/pkg/runtime/pprof/pprof.go:178: panic(\"pprof: Add called on built-in Profile\")\nOn 2012/02/22 23:42:18, r wrote:\n> + p.name\n\nDone.\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode230\nsrc/pkg/runtime/pprof/pprof.go:230: // TODO(rsc): Add to comment above:\nOn 2012/02/22 23:42:18, r wrote:\n> do or delete\n\nDone.\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode261\nsrc/pkg/runtime/pprof/pprof.go:261: // printCountProfile prints a countProfile at the specified debug level.\nOn 2012/02/22 23:42:18, r wrote:\n> if it's level why not call it a level in the public api\n\nI think it's more important that it's a debugging knob.\nLevel sounds like there is an order, and I'm not promising\nthat.  debug=2 for goroutine really has nothing to do with\ndebug=0 or debug=1.  It's just an opaque hook whose meaning\nis likely to expand.\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode324\nsrc/pkg/runtime/pprof/pprof.go:324: fmt.Fprintf(w, \"#\\t%#x\\t%s+%#x\\t%s:%d\\n\", pc, f.Name(), pc-f.Entry(), file, line)\nOn 2012/02/22 23:42:18, r wrote:\n> go vet this directory before submitting\n\nDone.\n\nhttp://codereview.appspot.com/5684056/diff/1002/src/pkg/runtime/pprof/pprof.go#newcode486\nsrc/pkg/runtime/pprof/pprof.go:486: if n < len(buf) || len(buf) >= 64<<20 {\nOn 2012/02/22 23:42:18, r wrote:\n> 32<<20 would match the comment, i think\n\nThere was a bug here.  Fixed.",
			"disapproval": false,
			"date": "2012-02-23 02:38:30.987906",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=c33517ffaf1d ***\n\npprof: add Profile type\n\nMakes it possible for client code to maintain its own profiles,\nand also reduces the API surface by giving us a type that\nmodels built-in profiles.\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5684056",
			"disapproval": false,
			"date": "2012-02-23 02:46:16.192224",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5684056: pprof: add Profile type",
	"created": "2012-02-21 23:15:25.781057",
	"patchsets": [
		1,
		3,
		6,
		1002,
		7001,
		9001,
		9002
	],
	"modified": "2012-02-23 02:46:16.945108",
	"closed": true,
	"issue": 5684056
}