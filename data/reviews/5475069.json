{
	"description": "various: a grab-bag of time.Duration cleanups.",
	"cc": [
		"adg@golang.org",
		"r@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-12 05:49:13.787698",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 12 December 2011 16:59, David Symonds <dsymonds@golang.org> wrote:\n> On Mon, Dec 12, 2011 at 4:55 PM, \u00a0<adg@golang.org> wrote:\n>\n>> But we'll need to mention the Conn API changes in the Go 1 updating notes, now.\n>\n> Yeah, I figured this would be uncontroversial enough that I would just\n> do it, but you're right that it could do with a mention in the notes.\n> Something under the time package is probably the best place for it.\n\nWell it really should be mentioned under 'net' as well as 'time', as\nthat's where people will go looking.\n\n> I'll sit on this until tomorrow in case others have input.\n\nGood idea.\n",
			"disapproval": false,
			"date": "2011-12-12 06:26:42.953030",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nBut we'll need to mention the Conn API changes in the Go 1 updating notes, now.",
			"disapproval": false,
			"date": "2011-12-12 05:55:09.947736",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"adg@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5475069/diff/3/src/pkg/net/net.go\nFile src/pkg/net/net.go (right):\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/net.go#newcode46\nsrc/pkg/net/net.go:46: SetTimeout(d time.Duration) error\nPlease revert.  Brad and I are reworking the API separately.\nI don't want to break people's code twice.\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/net.go#newcode51\nsrc/pkg/net/net.go:51: SetReadTimeout(d time.Duration) error\nPlease revert.  Brad and I are reworking the API separately.\nI don't want to break people's code twice.\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/net.go#newcode58\nsrc/pkg/net/net.go:58: SetWriteTimeout(d time.Duration) error\nPlease revert.  Brad and I are reworking the API separately.\nI don't want to break people's code twice.",
			"disapproval": false,
			"date": "2011-12-12 18:43:46.518908",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"adg@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/http/server.go#newcode958\nsrc/pkg/net/http/server.go:958: WriteTimeout   time.Duration // the net.Conn.SetWriteTimeout value for new connections\nOn 2011/12/12 18:42:07, r wrote:\n> this is a type change. does nothing break?\n\nAlmost nothing breaks. The majority of existing code uses numeric constants, which work as time.Durations.",
			"disapproval": false,
			"date": "2011-12-12 21:35:53.788946",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Dec 12, 2011 at 4:55 PM,  <adg@golang.org> wrote:\n\n> But we'll need to mention the Conn API changes in the Go 1 updating notes, now.\n\nYeah, I figured this would be uncontroversial enough that I would just\ndo it, but you're right that it could do with a mention in the notes.\nSomething under the time package is probably the best place for it.\n\nI'll sit on this until tomorrow in case others have input.\n",
			"disapproval": false,
			"date": "2011-12-12 05:59:15.218160",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"adg@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=7cc2f5ba4382 ***\n\nvarious: a grab-bag of time.Duration cleanups.\n\nR=adg, r, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5475069",
			"disapproval": false,
			"date": "2011-12-12 23:43:04.389128",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-12-12 23:00:44.347013",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "nervous about but not against the type change. someone more networky should LGTM\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/http/server.go#newcode958\nsrc/pkg/net/http/server.go:958: WriteTimeout   time.Duration // the net.Conn.SetWriteTimeout value for new connections\nthis is a type change. does nothing break?\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/iprawsock_plan9.go\nFile src/pkg/net/iprawsock_plan9.go (right):\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/iprawsock_plan9.go#newcode45\nsrc/pkg/net/iprawsock_plan9.go:45: func (c *IPConn) SetTimeout(d time.Duration) error {\nditto and throughout",
			"disapproval": false,
			"date": "2011-12-12 18:42:07.679245",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"adg@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "All the non-SetTimeout changes look good.\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/http/server.go\nFile src/pkg/net/http/server.go (right):\n\nhttp://codereview.appspot.com/5475069/diff/3/src/pkg/net/http/server.go#newcode957\nsrc/pkg/net/http/server.go:957: ReadTimeout    time.Duration // the net.Conn.SetReadTimeout value for new connections\nThese changes are good and can stay, even\nwith the net.Conn change reverted.",
			"disapproval": false,
			"date": "2011-12-12 18:46:29.422360",
			"approval": false
		}
	],
	"owner_email": "dsymonds@golang.org",
	"private": false,
	"base_url": "",
	"owner": "dsymonds",
	"subject": "code review 5475069: various: a grab-bag of time.Duration cleanups.",
	"created": "2011-12-12 05:48:34.704718",
	"patchsets": [
		1,
		3,
		9001,
		6020,
		8003,
		4005
	],
	"modified": "2011-12-12 23:43:06.612862",
	"closed": true,
	"issue": 5475069
}