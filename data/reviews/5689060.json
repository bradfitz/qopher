{
	"description": "builder: fix build",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"r@google.com",
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 22, 2012 at 8:31 PM, Rob 'Commander' Pike <r@google.com> wrote:\n\n> On 22/02/2012, at 11:09 PM, minux wrote:\n> The Success method is a reasonable, portable approximation. I am\n> unconvinced that more is necessary at this point.\n>\nFair enough. I will change the builder to give back string as process\nreturn value, and empty string as an indicator of\nsuccess, and this matches the Plan 9 convention, is this OK?\n",
			"disapproval": false,
			"date": "2012-02-22 12:45:09.419028",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-21 15:19:36.523751",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 22/02/2012, at 6:28 AM, minux wrote:\n\n> \n> On Wed, Feb 22, 2012 at 3:18 AM, Russ Cox <rsc@golang.org> wrote:\n> We should be able to do this without syscall.\n> If we can't write this without using package syscall,\n> then we haven't come up with a good API.\n> But in the current API, we can't get return value of the child process.\n> (I think this has a good reason, because Plan 9 and other OSes use different\n> conventions for process return value: string vs int).\n> \n> Maybe we should relax the builder's code a bit, and don't get the exact return\n> value but only whether the child process succeeded or not.\n\nThat's because there is no portable \"exact return value\". Unix uses integers, Plan 9 uses strings, Windows I think just gives you a boolean (I don't really know).\n\nSuccess is what matters. I considered an empty interface but that's clumsy and complex. If you know your system, dig to pull it out; otherwise the success boolean is sufficient.  Code that needs more is non-portable.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-21 20:59:00.878681",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 22, 2012 at 4:44 AM, minux <minux.ma@gmail.com> wrote:\n\n>\n> On Wed, Feb 22, 2012 at 8:31 PM, Rob 'Commander' Pike <r@google.com>wrote:\n>\n>> On 22/02/2012, at 11:09 PM, minux wrote:\n>> The Success method is a reasonable, portable approximation. I am\n>> unconvinced that more is necessary at this point.\n>>\n> Fair enough. I will change the builder to give back string as process\n> return value, and empty string as an indicator of\n> success, and this matches the Plan 9 convention, is this OK?\n>\n\nWhy not just update the code to do what the comments at the top of the\nfunction say it's supposed to do?\n\nLike this:  http://codereview.appspot.com/5687078\n\nNo update of callers, but the callers should be updated at some point.\n Most ignore the exitCode, and the others just say != 0.  The %d in error\nmessages is useless.\n",
			"disapproval": false,
			"date": "2012-02-22 13:00:38.303197",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "We should be able to do this without syscall.\nIf we can't write this without using package syscall,\nthen we haven't come up with a good API.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-21 19:18:23.867828",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 22/02/2012, at 11:09 PM, minux wrote:\n\n> \n> \n> On Wed, Feb 22, 2012 at 4:58 AM, Rob 'Commander' Pike <r@google.com> wrote:\n> On 22/02/2012, at 6:28 AM, minux wrote:\n>> On Wed, Feb 22, 2012 at 3:18 AM, Russ Cox <rsc@golang.org> wrote:\n>> We should be able to do this without syscall.\n>> If we can't write this without using package syscall,\n>> then we haven't come up with a good API.\n>> But in the current API, we can't get return value of the child process.\n>> (I think this has a good reason, because Plan 9 and other OSes use different\n>> conventions for process return value: string vs int).\n>> \n>> Maybe we should relax the builder's code a bit, and don't get the exact return\n>> value but only whether the child process succeeded or not.\n> \n> That's because there is no portable \"exact return value\". Unix uses integers, Plan 9 uses strings, Windows I think just gives you a boolean (I don't really know).\n> \n> Success is what matters. I considered an empty interface but that's clumsy and complex. If you know your system, dig to pull it out; otherwise the success boolean is sufficient.  Code that needs more is non-portable.\n> This builder problem aside. I agree there is no portable \"exact return value\", but I think most people will expect they can get the \"return value\" without using\n> the syscall pkg. Should we do something about this? (OSes except Plan 9 uses integer, so this expectation isn't that uncommon.)\n\nThe Success method is a reasonable, portable approximation. I am unconvinced that more is necessary at this point.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-02-22 12:32:03.119583",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 22, 2012 at 3:18 AM, Russ Cox <rsc@golang.org> wrote:\n\n> We should be able to do this without syscall.\n> If we can't write this without using package syscall,\n> then we haven't come up with a good API.\n\nBut in the current API, we can't get return value of the child process.\n(I think this has a good reason, because Plan 9 and other OSes use different\nconventions for process return value: string vs int).\n\nMaybe we should relax the builder's code a bit, and don't get the exact\nreturn\nvalue but only whether the child process succeeded or not.\n",
			"disapproval": false,
			"date": "2012-02-21 19:28:59.456480",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Maybe return start error, run error.\n",
			"disapproval": false,
			"date": "2012-02-21 19:42:56.899941",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Feb 22, 2012, at 10:00 AM, brainman wrote:\n\n> Windows process returns integer \"exit code\" that can be retrieved:\n> \n> http://code.google.com/p/go/source/browse/src/pkg/os/exec_windows.go#28\n\nthere are still portability issues, but for the record, what values does that code have and what do they mean?\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-21 23:07:35.835345",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This code only needs to know two things:\n1. did Start work?\n2. did the command finish without an error?\n\nReturning two errors solves that without needing syscall.\n",
			"disapproval": false,
			"date": "2012-02-21 21:10:35.518603",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 22, 2012 at 4:58 AM, Rob 'Commander' Pike <r@google.com> wrote:\n\n> On 22/02/2012, at 6:28 AM, minux wrote:\n>\n> On Wed, Feb 22, 2012 at 3:18 AM, Russ Cox <rsc@golang.org> wrote:\n>\n>> We should be able to do this without syscall.\n>> If we can't write this without using package syscall,\n>> then we haven't come up with a good API.\n>\n> But in the current API, we can't get return value of the child process.\n> (I think this has a good reason, because Plan 9 and other OSes use\n> different\n> conventions for process return value: string vs int).\n>\n> Maybe we should relax the builder's code a bit, and don't get the exact\n> return\n> value but only whether the child process succeeded or not.\n>\n> That's because there is no portable \"exact return value\". Unix uses\n> integers, Plan 9 uses strings, Windows I think just gives you a boolean (I\n> don't really know).\n>\n> Success is what matters. I considered an empty interface but that's clumsy\n> and complex. If you know your system, dig to pull it out; otherwise the\n> success boolean is sufficient.  Code that needs more is non-portable.\n>\nThis builder problem aside. I agree there is no portable \"exact return\nvalue\", but I think most people will expect they can get the \"return value\"\nwithout using\nthe syscall pkg. Should we do something about this? (OSes except Plan 9\nuses integer, so this expectation isn't that uncommon.)\n",
			"disapproval": false,
			"date": "2012-02-22 12:09:35.498677",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5689060: builder: fix build",
	"created": "2012-02-21 15:18:02.410101",
	"patchsets": [
		1,
		4001
	],
	"modified": "2012-02-22 13:26:42.875882",
	"closed": true,
	"issue": 5689060
}