{
	"description": "encoding/json: make BenchmarkSkipValue more consistent\n\nMove scanner allocation out of loop.\nIt's the only allocation in the test so it dominates\nwhen it triggers a garbage collection.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3a420e3c53eb ***\n\nencoding/json: make BenchmarkSkipValue more consistent\n\nMove scanner allocation out of loop.\nIt's the only allocation in the test so it dominates\nwhen it triggers a garbage collection.\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5369117",
			"disapproval": false,
			"date": "2011-11-15 19:00:06.722107",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nOn Tue, Nov 15, 2011 at 10:35 AM, <rsc@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> encoding/json: make BenchmarkSkipValue more consistent\n>\n> Move scanner allocation out of loop.\n> It's the only allocation in the test so it dominates\n> when it triggers a garbage collection.\n>\n> Please review this at http://codereview.appspot.com/**5369117/<http://codereview.appspot.com/5369117/>\n>\n> Affected files:\n>  M src/pkg/encoding/json/scanner_**test.go\n>\n>\n> Index: src/pkg/encoding/json/scanner_**test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/encoding/json/**scanner_test.go\n> +++ b/src/pkg/encoding/json/**scanner_test.go\n> @@ -186,11 +186,12 @@\n>        }\n>  }\n>\n> +var benchScan scanner\n> +\n>  func BenchmarkSkipValue(b *testing.B) {\n>        initBig()\n> -       var scan scanner\n>        for i := 0; i < b.N; i++ {\n> -               nextValue(jsonBig, &scan)\n> +               nextValue(jsonBig, &benchScan)\n>        }\n>        b.SetBytes(int64(len(jsonBig))**)\n>  }\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-11-15 18:45:10.904717",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-11-15 18:45:15.580742",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-15 18:35:57.368753",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5369117: encoding/json: make BenchmarkSkipValue more consistent",
	"created": "2011-11-15 18:31:18.999596",
	"patchsets": [
		1,
		3,
		4001,
		8001
	],
	"modified": "2011-11-15 19:00:08.157011",
	"closed": true,
	"issue": 5369117
}