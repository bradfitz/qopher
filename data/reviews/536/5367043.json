{
	"description": "godefs: delete, replaced by cgo -godefs\n\nGodefs was a C program that ran gcc and then parsed the\nstabs debugging information in the resulting object file to\ngenerate C or Go code for bootstrapping as part of\npackage runtime or package syscall.\n\nCgo does the same work, but using the dwarf debugging\ninformation.  Add -godefs and -cdefs options to cgo that\nmimic godefs's output, albeit with different input\n(a Go program, not a C program).\n\nThis has been a \"nice to have\" for a while but was forced\nby Apple removing stabs debugging output from their\nlatest compilers.\n\nFixes issue 835.\nFixes issue 2338.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"r@golang.org",
		"dave@cheney.net",
		"iant@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/gcc.go\nFile src/cmd/cgo/gcc.go (right):\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/gcc.go#newcode354\nsrc/cmd/cgo/gcc.go:354: // Turn decimal into hex, just for consistency\nYou may want to skip this for zero.\n\nYour other CL's diff had a lot of 0 turning into longer 0x0.\n\n*shrug*",
			"disapproval": false,
			"date": "2011-11-09 05:34:25.637729",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-09 05:25:14.111853",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Nov 9, 2011 at 00:34,  <bradfitz@golang.org> wrote:\n> Your other CL's diff had a lot of 0 turning into longer 0x0.\n\nNah, that's just a bug in ANSI C.  Glad to see it fixed.\n\n$ printf '%#x\\n' 1\n0x1\n$ printf '%#x\\n' 0\n0\n$\n",
			"disapproval": false,
			"date": "2011-11-09 05:39:37.607599",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Nov 9, 2011 at 00:49,  <r@golang.org> wrote:\n> src/cmd/cgo/godefs.go:174: fmt.Fprintf(&out, \"#pragma pack on\\n\")\n> where did this come from?\n\ni'm just matching what godefs emits now.\n#pragma pack is the former #pragma hjdicks.\n",
			"disapproval": false,
			"date": "2011-11-09 05:53:44.241158",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "This looks pretty awesome, but where does it leave Linux/arm. Will we have to regenerate the syscall z-files under qemu, or in some cross compiling environment?\n\nSent from my iPhone\n\nOn 09/11/2011, at 16:25, rsc@golang.org wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n> \n> Message:\n> Hello golang-dev@googlegroups.com,\n> \n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n> \n> \n> Description:\n> godefs: delete, replaced by cgo -godefs\n> \n> Godefs was a C program that ran gcc and then parsed the\n> stabs debugging information in the resulting object file to\n> generate C or Go code for bootstrapping as part of\n> package runtime or package syscall.\n> \n> Cgo does the same work, but using the dwarf debugging\n> information.  Add -godefs and -cdefs options to cgo that\n> mimic godefs's output, albeit with different input\n> (a Go program, not a C program).\n> \n> This has been a \"nice to have\" for a while but was forced\n> by Apple removing stabs debugging output from their\n> latest compilers.\n> \n> Fixes issue 835.\n> Fixes issue 2338.\n> \n> Please review this at http://codereview.appspot.com/5367043/\n> \n> Affected files:\n>  M src/cmd/Makefile\n>  M src/cmd/cgo/Makefile\n>  M src/cmd/cgo/ast.go\n>  M src/cmd/cgo/gcc.go\n>  A src/cmd/cgo/godefs.go\n>  M src/cmd/cgo/main.go\n>  M src/cmd/cgo/out.go\n>  R src/cmd/godefs/Makefile\n>  R src/cmd/godefs/a.h\n>  R src/cmd/godefs/doc.go\n>  R src/cmd/godefs/main.c\n>  R src/cmd/godefs/stabs.c\n>  R src/cmd/godefs/test.sh\n>  R src/cmd/godefs/testdata.c\n>  R src/cmd/godefs/testdata_darwin_386.golden\n>  R src/cmd/godefs/testdata_darwin_amd64.golden\n>  R src/cmd/godefs/testdata_linux_arm.golden\n>  R src/cmd/godefs/util.c\n> \n> \n",
			"disapproval": false,
			"date": "2011-11-09 06:00:05.926589",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "i haven't absorbed all this yet\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/gcc.go\nFile src/cmd/cgo/gcc.go (right):\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/gcc.go#newcode27\nsrc/cmd/cgo/gcc.go:27: \"utf8\"\nthese aren't right any more\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/gcc.go#newcode1448\nsrc/cmd/cgo/gcc.go:1448: // Rewrite field names for use in godefs.\nwhat happened to\n\ngodefsFields rewrites...\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/gcc.go#newcode1484\nsrc/cmd/cgo/gcc.go:1484: func fieldPrefix(fld []*ast.Field) string {\ncomment\ni don't even see why c does nothing and go does magic here\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go\nFile src/cmd/cgo/godefs.go (right):\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go#newcode29\nsrc/cmd/cgo/godefs.go:29: // like in_addr becomes [4]byte.\nthis is not english grammar.\nperhaps\n\nsuch as in_addr becoming [4]byte.\n\neven better would be to put an example into the comment because the code is intricate and the format hard to discern\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go#newcode92\nsrc/cmd/cgo/godefs.go:92: // [4]byte Go types in the typedef map.  Substitute those.\nlooks like this loop only does unions; the comment implies a more general rewriting.\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go#newcode109\nsrc/cmd/cgo/godefs.go:109: godefsOutput := p.godefs(f, srcfile)\narguably this functionality should be in cdefs.go\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go#newcode122\nsrc/cmd/cgo/godefs.go:122: // Delete package x.\ns/package x/\"&\"/\nor indent it as you do in the next example\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go#newcode144\nsrc/cmd/cgo/godefs.go:144: if inConst && line == \")\" {\nall these booleans are messy, but perhaps it's the simplest approach.\n\nalso you could fold some of these together and make it a switch statement (actually two with an interlude), with some improvement in structure. all those continues...\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go#newcode157\nsrc/cmd/cgo/godefs.go:157: // Convert const A = 1 to enum { A = 1 };\nagain, unfold\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go#newcode174\nsrc/cmd/cgo/godefs.go:174: fmt.Fprintf(&out, \"#pragma pack on\\n\")\nwhere did this come from?\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go#newcode207\nsrc/cmd/cgo/godefs.go:207: fmt.Fprintf(os.Stderr, \"cannot parse struct field: %s\\n\", line)\nthroughout: it would be nice if these errors had \"cgo: \" at the front. maybe in another CL.\n\nalso you could lighten the ink load by making printf a method of *Package. maybe error too\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go#newcode265\nsrc/cmd/cgo/godefs.go:265: func gofmt(n interface{}) string {\npeculiar function deserves a comment\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/main.go\nFile src/cmd/cgo/main.go (right):\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/main.go#newcode245\nsrc/cmd/cgo/main.go:245: // newPackage returns a new package that will invoke\ns/package/Package/\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/main.go#newcode248\nsrc/cmd/cgo/main.go:248: // Copy it to a new slice so it can grow.\ns/it/args/\ns/it/the list/\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/main.go#newcode265\nsrc/cmd/cgo/main.go:265: // Clear locale variables so gcc emits English errors [sic].\ns/Clear/Reset/",
			"disapproval": false,
			"date": "2011-11-09 05:49:04.618769",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "yay! hjdicks.\n\ni'm all teary-eyed.\n\n-rob\n",
			"disapproval": false,
			"date": "2011-11-09 05:54:45.370189",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Nov 9, 2011 at 00:59, Dave Cheney <dave@cheney.net> wrote:\n> This looks pretty awesome, but where does it leave Linux/arm.\n> Will we have to regenerate the syscall z-files under qemu, or\n> in some cross compiling environment?\n\nIt should be no different than generating with godefs.\nThe easiest way to regenerate the files is to patch this CL and\nthe other one into a standard Debian ARM installation.\nThat's how they were generated the first time.  If no one else\ndoes this I plan to do it once these CLs are checked in.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-09 15:14:39.629324",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"dave@cheney.net",
				"iant@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5367043/diff/12003/src/cmd/cgo/gcc.go\nFile src/cmd/cgo/gcc.go (right):\n\nhttp://codereview.appspot.com/5367043/diff/12003/src/cmd/cgo/gcc.go#newcode616\nsrc/cmd/cgo/gcc.go:616: // the xxx.  In *godefs mode, rewriteRef replaces the names with\ns/*godefs/*godefs or *cdefs/",
			"disapproval": false,
			"date": "2011-11-09 21:43:42.996965",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"dave@cheney.net",
				"iant@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "FYI\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go\nFile src/cmd/cgo/godefs.go (right):\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/godefs.go#newcode163\nsrc/cmd/cgo/godefs.go:163: // On first type definition, emit all the typedefs\ns/emit all the typedefs/typedef all the structs/\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/main.go\nFile src/cmd/cgo/main.go (right):\n\nhttp://codereview.appspot.com/5367043/diff/2002/src/cmd/cgo/main.go#newcode267\nsrc/cmd/cgo/main.go:267: os.Setenv(\"LC_ALL\", \"C\")\nThere is no particular reason to set both LC_ALL and LANG.  If LC_ALL is set, LANG is ignored.",
			"disapproval": false,
			"date": "2011-11-09 16:09:38.794477",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"dave@cheney.net",
				"iant@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\nthe comments definitely help\n\nhttp://codereview.appspot.com/5367043/diff/12003/src/cmd/cgo/gcc.go\nFile src/cmd/cgo/gcc.go (right):\n\nhttp://codereview.appspot.com/5367043/diff/12003/src/cmd/cgo/gcc.go#newcode1448\nsrc/cmd/cgo/gcc.go:1448: // godefsFields rewrites field names for use in godefs.\n\"godefs\" is a flag, but otherwise it's a mere echo of an old name. maybe \"Go definitions\"?\n\nhttp://codereview.appspot.com/5367043/diff/12003/src/cmd/cgo/gcc.go#newcode1461\nsrc/cmd/cgo/gcc.go:1461: n.Name = \"Pad_godefs_\" + strconv.Itoa(npad)\nshouldn't this be Pad_cgo_?\n\nhttp://codereview.appspot.com/5367043/diff/12003/src/cmd/cgo/gcc.go#newcode1478\nsrc/cmd/cgo/gcc.go:1478: *p = ast.NewIdent(\"*byte\")\nthis seems surprising.\n\nhttp://codereview.appspot.com/5367043/diff/12003/src/cmd/cgo/godefs.go\nFile src/cmd/cgo/godefs.go (right):\n\nhttp://codereview.appspot.com/5367043/diff/12003/src/cmd/cgo/godefs.go#newcode120\nsrc/cmd/cgo/godefs.go:120: func (p *Package) cdefs(f *File, srcfile string) string {\ni'd still like to see the c stuff separated from the go stuff and put in another file, since \"godefs\" is really just the old name of a now-deleted program, but i won't fight for it.",
			"disapproval": false,
			"date": "2011-11-09 21:27:41.568427",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nI have addressed Rob's and Ian's comments.\n",
			"disapproval": false,
			"date": "2011-11-09 20:36:02.097456",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Nov 9, 2011 at 16:27,  <r@golang.org> wrote:\n> i'd still like to see the c stuff separated from the go stuff and put in\n> another file, since \"godefs\" is really just the old name of a\n> now-deleted program, but i won't fight for it.\n\nSorry, I meant to reply to this comment in the first round.\nThe godefs + cdefs code are really two different variants\nof the same tool, depending in practice whether we're\ngenerating code for package syscall or package runtime.\nI think it makes sense to keep them in the same file\nbecause they are so closely related.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-09 22:18:16.967910",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@golang.org",
				"dave@cheney.net",
				"iant@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=700ff7ef684f ***\n\ngodefs: delete, replaced by cgo -godefs\n\nGodefs was a C program that ran gcc and then parsed the\nstabs debugging information in the resulting object file to\ngenerate C or Go code for bootstrapping as part of\npackage runtime or package syscall.\n\nCgo does the same work, but using the dwarf debugging\ninformation.  Add -godefs and -cdefs options to cgo that\nmimic godefs's output, albeit with different input\n(a Go program, not a C program).\n\nThis has been a \"nice to have\" for a while but was forced\nby Apple removing stabs debugging output from their\nlatest compilers.\n\nFixes issue 835.\nFixes issue 2338.\n\nR=golang-dev, bradfitz, r, dave, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5367043",
			"disapproval": false,
			"date": "2011-11-11 00:08:10.958238",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5367043: godefs: delete, replaced by cgo -godefs",
	"created": "2011-11-08 16:43:17.066609",
	"patchsets": [
		1,
		2001,
		5001,
		2002,
		12003,
		15003
	],
	"modified": "2011-11-11 00:08:14.580188",
	"closed": true,
	"issue": 5367043
}