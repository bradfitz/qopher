{
	"description": "cmd/go: add -compiler\ngo/build: add Context.Compiler\n\nFixes issue 3157.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"fullung@gmail.com",
		"minux.ma@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as dfb32d4dcab2 ***\n\ncmd/go: add -compiler\ngo/build: add Context.Compiler\n\nFixes issue 3157.\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5756047",
			"disapproval": false,
			"date": "2012-03-06 05:36:27.383140",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"fullung@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello \n\nOn 2012/03/06 05:36:27, rsc wrote:\n> *** Submitted as dfb32d4dcab2 ***\n> cmd/go: add -compiler\n> go/build: add Context.Compiler\n\nGiven this change, does it still make sense to have gccgoflags in addition to gcflags and ldflags? I can't think of any right now, but maybe there are flags that should be passed to gccgo when compiling, but not linking?\n\nRegards\n\nAlbert",
			"disapproval": false,
			"date": "2012-03-06 05:49:22.185275",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 6, 2012 at 11:17 PM, Albert Strasheim <fullung@gmail.com> wrote:\n\n> On Tue, Mar 6, 2012 at 5:10 PM, minux <minux.ma@gmail.com> wrote:\n> >> Given this change, does it still make sense to have gccgoflags in\n> >> addition to gcflags and ldflags? I can't think of any right now, but\n> >> maybe there are flags that should be passed to gccgo when compiling, but\n> >> not linking?\n> > Merging these flags only make sense if the -compiler flag is always\n> present,\n> > if it is not, the -gcflags will be ambiguous.\n>\n> I'm not quite sure I understand.\n>\n> If no compiler flag is present, -gcflags and -ldflags refer to\n> runtime.Compiler (whatever the default is, according to the tool).\n>\nOh, I suppose the -gcflags and -ldflags should always refer to [568]g and\n[568]l even\nif -compiler is provided.\nIf it is not the case after runtime.Compiler is introduced, then it is a\nissue and should\nbe addressed one way or the other.\n\n>\n> If -compiler is present, they refer to that compiler.\n>\n> Future worries:\n>\n> What's going to happen when the 3rd and 4th Go compiler show up on\n> other platforms like .NET or something on top of LLVM?\n>\n> What's going to happen when there are multiple versions of gccgo\n> (e.g., 4.x and 5.x)? Fedora ships multiple compat-gcc-* packages for\n> older versions of gcc.\n>\nThese worries could be addressed later, I think.\n",
			"disapproval": false,
			"date": "2012-03-06 15:47:18.137736",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5756047/diff/4001/src/pkg/go/build/build.go\nFile src/pkg/go/build/build.go (right):\n\nhttp://codereview.appspot.com/5756047/diff/4001/src/pkg/go/build/build.go#newcode346\nsrc/pkg/go/build/build.go:346: }\ndefault: errorf",
			"disapproval": false,
			"date": "2012-03-06 04:27:00.376761",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 6, 2012 at 00:49,  <fullung@gmail.com> wrote:\n> Given this change, does it still make sense to have gccgoflags in\n> addition to gcflags and ldflags? I can't think of any right now, but\n> maybe there are flags that should be passed to gccgo when compiling, but\n> not linking?\n\nThey are for different compilers.\ngcflags is for 6g\nldflags is for 6l\ngccgoflags is for gccgo\n(and it can use -Wl,-foo for link-only flags).\n\nI think it's a feature that you can't accidentally give flags intended for\none compiler to the other.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-03-06 18:49:05.992483",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 6, 2012 at 1:49 PM, <fullung@gmail.com> wrote:\n>\n>  On 2012/03/06 05:36:27, rsc wrote:\n>\n>> *** Submitted as dfb32d4dcab2 ***\n>> cmd/go: add -compiler\n>> go/build: add Context.Compiler\n>>\n>\n> Given this change, does it still make sense to have gccgoflags in\n> addition to gcflags and ldflags? I can't think of any right now, but\n> maybe there are flags that should be passed to gccgo when compiling, but\n> not linking?\n>\nMerging these flags only make sense if the -compiler flag is always\npresent, if\nit is not, the -gcflags will be ambiguous.\n",
			"disapproval": false,
			"date": "2012-03-06 15:10:53.803211",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-03-06 04:13:12.730357",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello\n\nOn Tue, Mar 6, 2012 at 5:10 PM, minux <minux.ma@gmail.com> wrote:\n> On Tue, Mar 6, 2012 at 1:49 PM, <fullung@gmail.com> wrote:\n>> On 2012/03/06 05:36:27, rsc wrote:\n>>> *** Submitted as dfb32d4dcab2 ***\n>>> cmd/go: add -compiler\n>>> go/build: add Context.Compiler\n>> Given this change, does it still make sense to have gccgoflags in\n>> addition to gcflags and ldflags? I can't think of any right now, but\n>> maybe there are flags that should be passed to gccgo when compiling, but\n>> not linking?\n> Merging these flags only make sense if the -compiler flag is always present,\n> if it is not, the -gcflags will be ambiguous.\n\nI'm not quite sure I understand.\n\nIf no compiler flag is present, -gcflags and -ldflags refer to\nruntime.Compiler (whatever the default is, according to the tool).\n\nIf -compiler is present, they refer to that compiler.\n\nFuture worries:\n\nWhat's going to happen when the 3rd and 4th Go compiler show up on\nother platforms like .NET or something on top of LLVM?\n\nWhat's going to happen when there are multiple versions of gccgo\n(e.g., 4.x and 5.x)? Fedora ships multiple compat-gcc-* packages for\nolder versions of gcc.\n\nRegards\n\nAlbert\n",
			"disapproval": false,
			"date": "2012-03-06 15:17:52.768071",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5756047: cmd/go: add -compiler",
	"created": "2012-03-06 04:05:56.671735",
	"patchsets": [
		1,
		2001,
		4001,
		7002
	],
	"modified": "2012-03-06 15:10:53.921117",
	"closed": true,
	"issue": 5756047
}