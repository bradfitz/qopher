{
	"description": "misc/dist: implement binary distribution scripts in go",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"alex.brainman@gmail.com",
		"r@google.com",
		"mike.rosset@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5697050/diff/5006/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5697050/diff/5006/misc/dist/bindist.go#newcode1\nmisc/dist/bindist.go:1: // This is a tool for packaging binary releases.\nOn 2012/02/24 05:01:19, r wrote:\n> copyright\n\nDone.\n\nhttp://codereview.appspot.com/5697050/diff/5006/misc/dist/bindist.go#newcode40\nmisc/dist/bindist.go:40: os.Exit(2)\nOn 2012/02/24 05:01:19, r wrote:\n> move this into Usage?\n\nDone.",
			"disapproval": false,
			"date": "2012-02-24 05:58:49.195651",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "What kind of check? What's the concern?\n\nOn 25 February 2012 10:05, Rob 'Commander' Pike <r@google.com> wrote:\n>\n> On 25/02/2012, at 10:01 AM, adg@golang.org wrote:\n>\n>>\n>> http://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go\n>> File misc/dist/bindist.go (right):\n>>\n>> http://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode112\n>> misc/dist/bindist.go:112: for _, name := range cleanFiles {\n>> On 2012/02/24 08:44:35, r wrote:\n>>> scary. instead, i'd test it's clean and stop processing if it's not,\n>> let the\n>>> user clean up. RemoveAll is not to be done lightly.\n>>\n>> This is to remove the (many megabytes of) mercurial metadata. It's not a\n>> state that we can get into any other way.\n>\n> Is there some sanity check you can put on the file name before executing the RemoveAll?\n>\n> -rob\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-25 04:49:06.460461",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-24 07:30:32.494537",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 25/02/2012, at 3:48 PM, Andrew Gerrand wrote:\n\n> What kind of check? What's the concern?\n\ni'm concerned about executing RemoveAll on a computed directory. i can convince myself the code is correct but if there's a ../ hiding somewhere it'll do very bad things.\n\nbut never mind. i don't have a good idea and it's your machine it'll be running on.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-25 04:55:10.890831",
			"approval": false
		},
		{
			"sender": "Mike.Rosset@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"r@google.com",
				"Mike.Rosset@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/24 04:47:31, adg wrote:\n> Hello mailto:golang-dev@googlegroups.com,\n> \n> I'd like you to review this change to\n> https://go.googlecode.com/hg\n\nI started hacking on something that does exactly this, so I'm glad I found this CL. Our implementations are quite close, the only thing I might suggest is possibly using an interface for Package, so you have structs like GzipPackager DarwinPackager WixPackager, with a Package  interface method.\n\nAlso in the future I know we want to be less dependant on unix based command utitlities. So if you like I could implement the tar Command in pure go. Which gets rid of a tar dependency.\n\nAlso not for Go1 but possibly later, what would people think of having one unified command line installer written in pure go, and using tarballs? this would mean less dist depends for windows. ie wix and 7zip. Also it could handle downloading, decompression, upgrading and security updates.",
			"disapproval": false,
			"date": "2012-02-25 08:01:37.771650",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode112\nmisc/dist/bindist.go:112: for _, name := range cleanFiles {\nOn 2012/02/24 08:44:35, r wrote:\n> scary. instead, i'd test it's clean and stop processing if it's not, let the\n> user clean up. RemoveAll is not to be done lightly.\n\nThis is to remove the (many megabytes of) mercurial metadata. It's not a state that we can get into any other way.",
			"disapproval": false,
			"date": "2012-02-24 23:01:56.644048",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 25/02/2012, at 10:01 AM, adg@golang.org wrote:\n\n> \n> http://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go\n> File misc/dist/bindist.go (right):\n> \n> http://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode112\n> misc/dist/bindist.go:112: for _, name := range cleanFiles {\n> On 2012/02/24 08:44:35, r wrote:\n>> scary. instead, i'd test it's clean and stop processing if it's not,\n> let the\n>> user clean up. RemoveAll is not to be done lightly.\n> \n> This is to remove the (many megabytes of) mercurial metadata. It's not a\n> state that we can get into any other way.\n\nIs there some sanity check you can put on the file name before executing the RemoveAll?\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-02-24 23:05:39.546303",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5697050/diff/5006/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5697050/diff/5006/misc/dist/bindist.go#newcode1\nmisc/dist/bindist.go:1: // This is a tool for packaging binary releases.\ncopyright\n\nhttp://codereview.appspot.com/5697050/diff/5006/misc/dist/bindist.go#newcode40\nmisc/dist/bindist.go:40: os.Exit(2)\nmove this into Usage?",
			"disapproval": false,
			"date": "2012-02-24 05:01:19.544345",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This now includes code to upload the archives to Google Code.\n",
			"disapproval": false,
			"date": "2012-02-24 06:00:10.548485",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode6\nmisc/dist/bindist.go:6: // It currently supports FreeBSD, Linux, and OS X.\ns/currently //\n\nhttp://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode30\nmisc/dist/bindist.go:30: password = flag.String(\"password\", \"\", \"Google Code upload password\")\n\ndon't do this. clear text, on the command line, visible in ps output, etc.\n\nhttp://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode69\nmisc/dist/bindist.go:69: OS, Arch string\nput on two lines\n\nhttp://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode112\nmisc/dist/bindist.go:112: for _, name := range cleanFiles {\nscary. instead, i'd test it's clean and stop processing if it's not, let the user clean up. RemoveAll is not to be done lightly.\n\nhttp://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode159\nmisc/dist/bindist.go:159: \"--target\", \"10.5\")\nis that true?",
			"disapproval": false,
			"date": "2012-02-24 08:44:35.887530",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is just a tool for the go team to use. It is fine to assume tar exists\non the Unix builders. We control them.\n\nI threw this together because I was irked by maintaining the shell scripts.\nI don't want to make it much more complex than it already is.\n\nAs for an installer, that's a separate story altogether.\n\nAndrew\nOn Feb 25, 2012 7:01 PM, <Mike.Rosset@gmail.com> wrote:\n\n> On 2012/02/24 04:47:31, adg wrote:\n>\n>> Hello mailto:golang-dev@**googlegroups.com <golang-dev@googlegroups.com>,\n>>\n>\n>  I'd like you to review this change to\n>> https://go.googlecode.com/hg\n>>\n>\n> I started hacking on something that does exactly this, so I'm glad I\n> found this CL. Our implementations are quite close, the only thing I\n> might suggest is possibly using an interface for Package, so you have\n> structs like GzipPackager DarwinPackager WixPackager, with a Package\n> interface method.\n>\n> Also in the future I know we want to be less dependant on unix based\n> command utitlities. So if you like I could implement the tar Command in\n> pure go. Which gets rid of a tar dependency.\n>\n> Also not for Go1 but possibly later, what would people think of having\n> one unified command line installer written in pure go, and using\n> tarballs? this would mean less dist depends for windows. ie wix and\n> 7zip. Also it could handle downloading, decompression, upgrading and\n> security updates.\n>\n> http://codereview.appspot.com/**5697050/<http://codereview.appspot.com/5697050/>\n>\n",
			"disapproval": false,
			"date": "2012-02-25 09:02:43.723014",
			"approval": false
		},
		{
			"sender": "mike.rosset@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> This is just a tool for the go team to use. It is fine to assume tar exists\n> on the Unix builders. We control them.\n>\n> I threw this together because I was irked by maintaining the shell scripts.\n> I don't want to make it much more complex than it already is.\n>\n> As for an installer, that's a separate story altogether.\n>\n> Andrew\n\nUnderstood.\n",
			"disapproval": false,
			"date": "2012-02-25 09:21:52.966645",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-02-24 04:47:31.078033",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5697050/diff/5006/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5697050/diff/5006/misc/dist/bindist.go#newcode173\nmisc/dist/bindist.go:173: strings.HasPrefix(e, \"GOARCH=\") {\nYou should also skip GOBIN variable. Otherwise dist bin directory will be empty, and all binaries will end-up in your GOBIN directory instead.",
			"disapproval": false,
			"date": "2012-02-24 06:10:08.911078",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode6\nmisc/dist/bindist.go:6: // It currently supports FreeBSD, Linux, and OS X.\nOn 2012/02/24 08:44:35, r wrote:\n> s/currently //\n\nDone.\n\nhttp://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode30\nmisc/dist/bindist.go:30: password = flag.String(\"password\", \"\", \"Google Code upload password\")\nOn 2012/02/24 08:44:35, r wrote:\n> \n> don't do this. clear text, on the command line, visible in ps output, etc.\n\nNow I'm using the .gobuildkey file in the same way that gobuilder does. 2nd and 3rd lines of the file are username and password\n\nhttp://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode69\nmisc/dist/bindist.go:69: OS, Arch string\nOn 2012/02/24 08:44:35, r wrote:\n> put on two lines\n\nDone.\n\nhttp://codereview.appspot.com/5697050/diff/5/misc/dist/bindist.go#newcode159\nmisc/dist/bindist.go:159: \"--target\", \"10.5\")\nOn 2012/02/24 08:44:35, r wrote:\n> is that true?\n\nYes, it's the minimum.",
			"disapproval": false,
			"date": "2012-02-25 04:47:01.536594",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5697050/diff/5006/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5697050/diff/5006/misc/dist/bindist.go#newcode173\nmisc/dist/bindist.go:173: strings.HasPrefix(e, \"GOARCH=\") {\nOn 2012/02/24 06:10:09, brainman wrote:\n> You should also skip GOBIN variable. Otherwise dist bin directory will be empty,\n> and all binaries will end-up in your GOBIN directory instead.\n\nDone.",
			"disapproval": false,
			"date": "2012-02-24 06:18:45.478340",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"r@google.com",
				"mike.rosset@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can I get an amen?",
			"disapproval": false,
			"date": "2012-03-01 03:35:04.447952",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"r@google.com",
				"mike.rosset@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-03-01 03:56:40.101502",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"r@google.com",
				"mike.rosset@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=aa80d27aef25 ***\n\nmisc/dist: implement binary distribution scripts in go\n\nR=golang-dev, r, alex.brainman, r, mike.rosset\nCC=golang-dev\nhttp://codereview.appspot.com/5697050",
			"disapproval": false,
			"date": "2012-03-01 04:49:43.655804",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5697050: misc/dist: implement binary distribution scripts in go",
	"created": "2012-02-24 03:54:00.342133",
	"patchsets": [
		1,
		2001,
		4001,
		5006,
		6007,
		4,
		5,
		1013,
		9001,
		8008,
		12001
	],
	"modified": "2012-03-05 05:18:53.979418",
	"closed": true,
	"issue": 5697050
}