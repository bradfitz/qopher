{
	"description": "test: add test case miscompiled by gccgo",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"rsc@golang.org",
		"iant@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-28 22:52:49.352610",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I thought the new naming convention for these files was issue*.go,\r\ncorresponding to an open issue, to avoid naming conflicts.\r\n\r\nOn Mon, Jan 28, 2013 at 2:52 PM, <iant@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> test: add test case miscompiled by gccgo\r\n>\r\n> Please review this at https://codereview.appspot.**com/7240043/<https://codereview.appspot.com/7240043/>\r\n>\r\n> Affected files:\r\n>   A test/fixedbugs/bug473.go\r\n>\r\n>\r\n> Index: test/fixedbugs/bug473.go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/test/fixedbugs/bug473.go\r\n> @@ -0,0 +1,69 @@\r\n> +// run\r\n> +\r\n> +// Copyright 2013 The Go Authors.  All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +// Used to be miscompiled by gccgo, due to a bug in handling\r\n> +// initialization ordering.\r\n> +\r\n> +package main\r\n> +\r\n> +func F(a ...interface{}) interface{} {\r\n> +       s := 0\r\n> +       for _, v := range a {\r\n> +               s += v.(int)\r\n> +       }\r\n> +       return s\r\n> +}\r\n> +\r\n> +var V1 = F(V10, V4, V3, V11)\r\n> +\r\n> +var V2 = F(V1)\r\n> +\r\n> +var V3 = F(1)\r\n> +\r\n> +var V4 = F(2)\r\n> +\r\n> +var V5 = F(3)\r\n> +\r\n> +var V6 = F(4)\r\n> +\r\n> +var V7 = F(5)\r\n> +\r\n> +var V8 = F(V14, V7, V3, V6, V5)\r\n> +\r\n> +var V9 = F(V4, F(V12))\r\n> +\r\n> +var V10 = F(V4, V9)\r\n> +\r\n> +var V11 = F(6)\r\n> +\r\n> +var V12 = F(V5, V3, V8)\r\n> +\r\n> +var V13 = F(7)\r\n> +\r\n> +var V14 = F(8)\r\n> +\r\n> +func expect(name string, a interface{}, b int) {\r\n> +       if a.(int) != b {\r\n> +               panic(name)\r\n> +       }\r\n> +}\r\n> +\r\n> +func main() {\r\n> +       expect(\"V1\", V1, 38)\r\n> +       expect(\"V2\", V2, 38)\r\n> +       expect(\"V3\", V3, 1)\r\n> +       expect(\"V4\", V4, 2)\r\n> +       expect(\"V5\", V5, 3)\r\n> +       expect(\"V6\", V6, 4)\r\n> +       expect(\"V7\", V7, 5)\r\n> +       expect(\"V8\", V8, 21)\r\n> +       expect(\"V9\", V9, 27)\r\n> +       expect(\"V10\", V10, 29)\r\n> +       expect(\"V11\", V11, 6)\r\n> +       expect(\"V12\", V12, 25)\r\n> +       expect(\"V13\", V13, 7)\r\n> +       expect(\"V14\", V14, 8)\r\n> +}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group, send email to golang-dev+unsubscribe@**\r\n> googlegroups.com <golang-dev%2Bunsubscribe@googlegroups.com>.\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-28 22:55:28.513160",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nYes, everyone else is avoiding conflicts with me and Ian. :-)\r\n",
			"disapproval": false,
			"date": "2013-01-28 23:26:49.237610",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jan 28, 2013 at 3:26 PM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> LGTM\r\n>\r\n> Yes, everyone else is avoiding conflicts with me and Ian. :-)\r\n>\r\n\r\nHey, conflicts have happened before... that's what started the conversation\r\nbefore to switch to issueNNNN.  I see 29 unique committers in that\r\ndirectory.\r\n\r\nBut yeah, I don't really care.\r\n",
			"disapproval": false,
			"date": "2013-01-28 23:30:02.712580",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Jan 28, 2013 at 2:55 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> I thought the new naming convention for these files was issue*.go,\r\n> corresponding to an open issue, to avoid naming conflicts.\r\n\r\nI'm following that approach when there is an open issue, but there is\r\nno issue for this.  I don't think it's wrong to use both approaches.\r\nI don't think it's necessary to open an issue just to create a test\r\ncase.\r\n\r\nIan\r\n\r\n> On Mon, Jan 28, 2013 at 2:52 PM, <iant@golang.org> wrote:\r\n>>\r\n>> Reviewers: golang-dev_googlegroups.com,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com,\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://code.google.com/p/go\r\n>>\r\n>>\r\n>> Description:\r\n>> test: add test case miscompiled by gccgo\r\n>>\r\n>> Please review this at https://codereview.appspot.com/7240043/\r\n>>\r\n>> Affected files:\r\n>>   A test/fixedbugs/bug473.go\r\n>>\r\n>>\r\n>> Index: test/fixedbugs/bug473.go\r\n>> ===================================================================\r\n>> new file mode 100644\r\n>> --- /dev/null\r\n>> +++ b/test/fixedbugs/bug473.go\r\n>> @@ -0,0 +1,69 @@\r\n>> +// run\r\n>> +\r\n>> +// Copyright 2013 The Go Authors.  All rights reserved.\r\n>> +// Use of this source code is governed by a BSD-style\r\n>> +// license that can be found in the LICENSE file.\r\n>> +\r\n>> +// Used to be miscompiled by gccgo, due to a bug in handling\r\n>> +// initialization ordering.\r\n>> +\r\n>> +package main\r\n>> +\r\n>> +func F(a ...interface{}) interface{} {\r\n>> +       s := 0\r\n>> +       for _, v := range a {\r\n>> +               s += v.(int)\r\n>> +       }\r\n>> +       return s\r\n>> +}\r\n>> +\r\n>> +var V1 = F(V10, V4, V3, V11)\r\n>> +\r\n>> +var V2 = F(V1)\r\n>> +\r\n>> +var V3 = F(1)\r\n>> +\r\n>> +var V4 = F(2)\r\n>> +\r\n>> +var V5 = F(3)\r\n>> +\r\n>> +var V6 = F(4)\r\n>> +\r\n>> +var V7 = F(5)\r\n>> +\r\n>> +var V8 = F(V14, V7, V3, V6, V5)\r\n>> +\r\n>> +var V9 = F(V4, F(V12))\r\n>> +\r\n>> +var V10 = F(V4, V9)\r\n>> +\r\n>> +var V11 = F(6)\r\n>> +\r\n>> +var V12 = F(V5, V3, V8)\r\n>> +\r\n>> +var V13 = F(7)\r\n>> +\r\n>> +var V14 = F(8)\r\n>> +\r\n>> +func expect(name string, a interface{}, b int) {\r\n>> +       if a.(int) != b {\r\n>> +               panic(name)\r\n>> +       }\r\n>> +}\r\n>> +\r\n>> +func main() {\r\n>> +       expect(\"V1\", V1, 38)\r\n>> +       expect(\"V2\", V2, 38)\r\n>> +       expect(\"V3\", V3, 1)\r\n>> +       expect(\"V4\", V4, 2)\r\n>> +       expect(\"V5\", V5, 3)\r\n>> +       expect(\"V6\", V6, 4)\r\n>> +       expect(\"V7\", V7, 5)\r\n>> +       expect(\"V8\", V8, 21)\r\n>> +       expect(\"V9\", V9, 27)\r\n>> +       expect(\"V10\", V10, 29)\r\n>> +       expect(\"V11\", V11, 6)\r\n>> +       expect(\"V12\", V12, 25)\r\n>> +       expect(\"V13\", V13, 7)\r\n>> +       expect(\"V14\", V14, 8)\r\n>> +}\r\n>>\r\n>>\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group, send email to\r\n>> golang-dev+unsubscribe@googlegroups.com.\r\n>> For more options, visit https://groups.google.com/groups/opt_out.\r\n>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-29 00:16:38.546340",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c3155f9f1bb6 ***\n\ntest: add test case miscompiled by gccgo\n\nR=golang-dev, bradfitz, rsc, iant\nCC=golang-dev\nhttps://codereview.appspot.com/7240043",
			"disapproval": false,
			"date": "2013-01-29 00:17:14.329790",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 7240043: test: add test case miscompiled by gccgo",
	"created": "2013-01-28 22:52:44.262490",
	"patchsets": [
		1,
		5001
	],
	"modified": "2013-01-29 00:17:16.536970",
	"closed": true,
	"issue": 7240043
}