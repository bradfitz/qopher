{
	"description": "    database/sql: convert SQL null values to []byte as nil.\n\nAlso allow string values to scan into []byte.\nFixes issue 2788.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5577054/diff/1002/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttp://codereview.appspot.com/5577054/diff/1002/src/pkg/database/sql/sql.go#newcode904\nsrc/pkg/database/sql/sql.go:904: if !ok || *b == nil {\nI'd put this in its own if statement following this one, just so you could put a comment in it and explain it.  it's a little subtle.\n\nif *b == nil {\n    // If the []byte is now nil (for a NULL value),\n    // don't fall through to below which would\n    // turn it into a non-nil 0-length byte slice\n    continue\n}\n\nhttp://codereview.appspot.com/5577054/diff/1002/src/pkg/database/sql/sql.go#newcode970\nsrc/pkg/database/sql/sql.go:970: // TODO(coopernurse): We do the same []byte clone in Rows.Scan()\noh, good catch!  This code used to matter when only Row.Scan was doing the copies.  But once Rows.Scan got the copying behavior, this code does seem redundant.\n\nWe do want to do a pass over dest at some point (either here, or before r.rows.Scan on line 952 above) to make sure there are no *RawBytes in Row.Scan, but we don't need the copying anymore.\n\nWant to fix that in this CL too?\n\nhttp://codereview.appspot.com/5577054/diff/1002/src/pkg/database/sql/sql_test.go\nFile src/pkg/database/sql/sql_test.go (right):\n\nhttp://codereview.appspot.com/5577054/diff/1002/src/pkg/database/sql/sql_test.go#newcode366\nsrc/pkg/database/sql/sql_test.go:366: exec(t, db, \"CREATE|t|id=int32,name=string\")\ndon't you want name=nullstring here?\n\nin fakedb_test.go:\n\n        case \"string\":\n                return driver.NotNull{driver.String}\n        case \"nullstring\":\n                return driver.Null{driver.String}\n\nhttp://codereview.appspot.com/5577054/diff/1002/src/pkg/database/sql/sql_test.go#newcode370\nsrc/pkg/database/sql/sql_test.go:370: if name != nil {\nremove this.  this is testing the language, not sql.  the language has tests elsewhere.\n\nhttp://codereview.appspot.com/5577054/diff/1002/src/pkg/database/sql/sql_test.go#newcode388\nsrc/pkg/database/sql/sql_test.go:388: t.Fatalf(\"name []byte should be bob, got: %s\", string(name))\nuse %q here instead of %s.  makes it easier to see empty strings and corrupt strings.  and if a test is failing, one of those is very likely.",
			"disapproval": false,
			"date": "2012-01-26 21:22:29.425208",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-26 17:33:14.493697",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-26 22:46:07.328493",
			"approval": false
		},
		{
			"sender": "jamespcooper@gmail.com",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-26 22:29:29.939870",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a1b77ddd6056 ***\n\n    database/sql: convert SQL null values to []byte as nil.\n\nAlso allow string values to scan into []byte.\nFixes issue 2788.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5577054\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2012-01-26 23:12:50.829885",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"jamespcooper@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5577054/diff/7001/src/pkg/database/sql/sql.go\nFile src/pkg/database/sql/sql.go (right):\n\nhttp://codereview.appspot.com/5577054/diff/7001/src/pkg/database/sql/sql.go#newcode975\nsrc/pkg/database/sql/sql.go:975: for _, dp := range dest {\ncan you move this loop up before \"defer r.rows.Close()\"?  I want this error message to be consistently returned and never shadowed by an error from lines 956 or 960.\n\n(I do want the error from line 952 coming first, though).\n\nMove the comment up too, but update it a bit:\n\n// TODO(bradfitz): for now we need to defensively clone all\n// []byte that the driver returned (not permitting *RawBytes in Rows.Scan), ...",
			"disapproval": false,
			"date": "2012-01-26 22:36:59.302905",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nthanks!\n\nOn Thu, Jan 26, 2012 at 2:46 PM, <jamespcooper@gmail.com> wrote:\n\n> Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc:\n> golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**5577054/<http://codereview.appspot.com/5577054/>\n>\n",
			"disapproval": false,
			"date": "2012-01-26 23:12:41.778113",
			"approval": true
		}
	],
	"owner_email": "jamespcooper@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "coopernurse",
	"subject": "code review 5577054:     database/sql: convert SQL null values to []byte as nil.",
	"created": "2012-01-26 17:32:56.526192",
	"patchsets": [
		1,
		2001,
		1002,
		7001,
		10002
	],
	"modified": "2012-01-26 23:58:21.793541",
	"closed": true,
	"issue": 5577054
}