{
	"description": "image/gif: tighten the checks for when the amount of an image's pixel\ndata does not agree with its bounds.",
	"cc": [
		"r@golang.org",
		"jeff.allen@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"jeff.allen@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com, jeff.allen@gmail.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-21 05:03:56.751570",
			"approval": false
		},
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7938043/diff/5001/src/pkg/image/gif/reader.go\nFile src/pkg/image/gif/reader.go (right):\n\nhttps://codereview.appspot.com/7938043/diff/5001/src/pkg/image/gif/reader.go#newcode153\nsrc/pkg/image/gif/reader.go:153: if err == io.EOF {\nWhy is it safe to continue here if err is something else? Then c will be in an unknown state. (It seems like it's probably going to be 0, but it's not guaranteed by the API.)\n\nhttps://codereview.appspot.com/7938043/diff/5001/src/pkg/image/gif/reader.go#newcode199\nsrc/pkg/image/gif/reader.go:199: return errors.New(\"gif: too much image data\")\nmake one copy of the error in global scope and return it in the three places.",
			"disapproval": false,
			"date": "2013-03-21 08:00:02.483530",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7938043/diff/5001/src/pkg/image/gif/reader.go\nFile src/pkg/image/gif/reader.go (right):\n\nhttps://codereview.appspot.com/7938043/diff/5001/src/pkg/image/gif/reader.go#newcode193\nsrc/pkg/image/gif/reader.go:193: // Both lzwr and br should be exhausted: reading from then\ns/then/them/\n\nhttps://codereview.appspot.com/7938043/diff/5001/src/pkg/image/gif/reader.go#newcode199\nsrc/pkg/image/gif/reader.go:199: return errors.New(\"gif: too much image data\")\nOn 2013/03/21 08:00:02, jeff.allen wrote:\n> make one copy of the error in global scope and return it in the three places.\n\ndo the \"not enough\" error too.",
			"disapproval": false,
			"date": "2013-03-21 16:27:24.085080",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=980d0c9ba7fd ***\n\nimage/gif: tighten the checks for when the amount of an image's pixel\ndata does not agree with its bounds.\n\nR=r, jeff.allen\nCC=golang-dev\nhttps://codereview.appspot.com/7938043",
			"disapproval": false,
			"date": "2013-03-22 03:42:16.893280",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 7938043: image/gif: tighten the checks for when the amount of an...",
	"created": "2013-03-21 05:03:36.527250",
	"patchsets": [
		1,
		2001,
		5001,
		12001
	],
	"modified": "2013-03-22 03:42:19.799120",
	"closed": true,
	"issue": 7938043
}