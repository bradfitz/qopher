{
	"description": "runtime: precise garbage collection of hashmaps",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"dave@cheney.net",
		"dvyukov@google.com",
		"minux.ma@gmail.com",
		"remyoudompheng@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: rsc, dvyukov, dfc, minux, remyoudompheng),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-02-01 16:46:38.569670",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/01 16:46:38, atom wrote:\n> Hello mailto:golang-dev@googlegroups.com (cc: rsc, dvyukov, dfc, minux,\n> remyoudompheng),\n> \n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n\nI have an implementation of garbage collection of channels (as a reaction to http://stackoverflow.com/questions/14712586/memory-consumption-skyrocket). I would like to ask how close is this CL to LGTM. The channels is just 20 lines of code, so we may want to review those 20 lines before submitting hashmaps.",
			"disapproval": false,
			"date": "2013-02-06 14:49:11.135050",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This looks pretty good. I hope to get back to code reviews this afternoon and I'll send details then. Thanks.",
			"disapproval": false,
			"date": "2013-02-07 18:49:57.521900",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"dvyukov@google.com",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1f62f613c2ce ***\n\nruntime: precise garbage collection of hashmaps\n\nR=golang-dev, rsc\nCC=dave, dvyukov, golang-dev, minux.ma, remyoudompheng\nhttps://codereview.appspot.com/7252047\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-02-08 21:00:11.139290",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nPlease fix the nits below and I'll submit it.\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c\nFile src/pkg/runtime/hashmap.c (right):\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c#newcode713\nsrc/pkg/runtime/hashmap.c:713: hash_gciter_init (Hmap *h, struct hash_gciter *it)\ns/ (/(/\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c#newcode715\nsrc/pkg/runtime/hashmap.c:715: // GC during map initialization\nDo you need to check h == nil here too?\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c#newcode732\nsrc/pkg/runtime/hashmap.c:732: hash_gciter_next (struct hash_gciter *it, struct hash_gciter_data *data)\ns/ (/(/\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c#newcode766\nsrc/pkg/runtime/hashmap.c:766: else if(e->hash != HASH_NIL) {\ndrop else\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c#newcode776\nsrc/pkg/runtime/hashmap.c:776: else {\ndrop else\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/mgc0.c\nFile src/pkg/runtime/mgc0.c (right):\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/mgc0.c#newcode560\nsrc/pkg/runtime/mgc0.c:560: bool wasnt_marked, mapkey_kind, mapval_kind;\nhow about s/wasnt_marked/didmark/?\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/mgc0.c#newcode862\nsrc/pkg/runtime/mgc0.c:862: while(true) {\nfor(;;) { please",
			"disapproval": false,
			"date": "2013-02-08 04:03:57.105900",
			"approval": true
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dvyukov@google.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c\nFile src/pkg/runtime/hashmap.c (right):\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c#newcode713\nsrc/pkg/runtime/hashmap.c:713: hash_gciter_init (Hmap *h, struct hash_gciter *it)\nOn 2013/02/08 04:03:57, rsc wrote:\n> s/ (/(/\n\nThe style \" (\" is consistent with functions already present in hashmap.c. If the style needs to be changed for the file as a whole, it should be a separate CL.\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c#newcode715\nsrc/pkg/runtime/hashmap.c:715: // GC during map initialization\nOn 2013/02/08 04:03:57, rsc wrote:\n> Do you need to check h == nil here too?\n\nmgc0.c does the check before calling hash_gciter_init().\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c#newcode766\nsrc/pkg/runtime/hashmap.c:766: else if(e->hash != HASH_NIL) {\nOn 2013/02/08 04:03:57, rsc wrote:\n> drop else\n\nDone.\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/hashmap.c#newcode776\nsrc/pkg/runtime/hashmap.c:776: else {\nOn 2013/02/08 04:03:57, rsc wrote:\n> drop else\n\nDone.\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/mgc0.c\nFile src/pkg/runtime/mgc0.c (right):\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/mgc0.c#newcode560\nsrc/pkg/runtime/mgc0.c:560: bool wasnt_marked, mapkey_kind, mapval_kind;\nOn 2013/02/08 04:03:57, rsc wrote:\n> how about s/wasnt_marked/didmark/?\n\nDone.\n\nhttps://codereview.appspot.com/7252047/diff/1/src/pkg/runtime/mgc0.c#newcode862\nsrc/pkg/runtime/mgc0.c:862: while(true) {\nOn 2013/02/08 04:03:57, rsc wrote:\n> for(;;) { please\n\nwhile(hash_gciter_next(&map_iter, &d)) {",
			"disapproval": false,
			"date": "2013-02-08 08:31:38.236430",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org (cc: dave@cheney.net, dvyukov@google.com, golang-dev@googlegroups.com, minux.ma@gmail.com, remyoudompheng@gmail.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-08 08:32:37.738320",
			"approval": false
		}
	],
	"owner_email": "0xE2.0x9A.0x9B@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "atom",
	"subject": "code review 7252047: runtime: precise garbage collection of hashmaps",
	"created": "2013-02-01 16:46:00.552070",
	"patchsets": [
		1,
		4002
	],
	"modified": "2013-02-09 06:50:22.804760",
	"closed": true,
	"issue": 7252047
}