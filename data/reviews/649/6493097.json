{
	"description": "text/scanner: skip first character if it's a BOM",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-07 23:03:43.269210",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6493097/diff/1/src/pkg/text/scanner/scanner.go\nFile src/pkg/text/scanner/scanner.go (right):\n\nhttp://codereview.appspot.com/6493097/diff/1/src/pkg/text/scanner/scanner.go#newcode9\nsrc/pkg/text/scanner/scanner.go:9: // in the source is a UTF-8 encoded byte order mark (BOM), it is ignored.\nmaybe s/ignored/discarded/ but ignored is fine too.\n\nhttp://codereview.appspot.com/6493097/diff/1/src/pkg/text/scanner/scanner.go#newcode317\nsrc/pkg/text/scanner/scanner.go:317: s.ch = s.next() // ignore BOM\ndoesn't this do it every time?",
			"disapproval": false,
			"date": "2012-09-07 23:21:00.249870",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/6493097/diff/1/src/pkg/text/scanner/scanner.go\nFile src/pkg/text/scanner/scanner.go (right):\n\nhttp://codereview.appspot.com/6493097/diff/1/src/pkg/text/scanner/scanner.go#newcode9\nsrc/pkg/text/scanner/scanner.go:9: // in the source is a UTF-8 encoded byte order mark (BOM), it is ignored.\nOn 2012/09/07 23:21:00, r wrote:\n> maybe s/ignored/discarded/ but ignored is fine too.\n\nDone.\n\nhttp://codereview.appspot.com/6493097/diff/1/src/pkg/text/scanner/scanner.go#newcode317\nsrc/pkg/text/scanner/scanner.go:317: s.ch = s.next() // ignore BOM\nOn 2012/09/07 23:21:00, r wrote:\n> doesn't this do it every time?\nadded comment",
			"disapproval": false,
			"date": "2012-09-08 00:11:28.243470",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d08a7f788d7c ***\n\ntext/scanner: skip first character if it's a BOM\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/6493097",
			"disapproval": false,
			"date": "2012-09-08 00:15:45.808160",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-08 00:13:11.300930",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 6493097: text/scanner: skip first character if it's a BOM",
	"created": "2012-09-07 23:03:40.551380",
	"patchsets": [
		1,
		5001,
		7003
	],
	"modified": "2012-09-08 00:15:46.781800",
	"closed": true,
	"issue": 6493097
}