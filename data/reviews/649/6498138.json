{
	"description": "spec: clarify expression statements\n\nFunction and method calls are valid expression statements,\nbut calling certain built-in functions is not permitted.\nEnumerate the built-ins.\n\nAlso: unsafe.Offsetof permits parenthesized selectors as\narguments.\n\nThis is simply documenting existing compiler behavior\n(both gc and gccgo agree).",
	"cc": [
		"r@golang.org",
		"rsc@golang.org",
		"iant@golang.org",
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "CL description needs refinement",
			"disapproval": false,
			"date": "2012-09-17 22:39:05.836320",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6498138/diff/5001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/6498138/diff/5001/doc/go_spec.html#newcode3803\ndoc/go_spec.html:3803: and <a href=\"#Receive_operator\">receive operations</a>\norder here is in out in. better to go in in out or out in in. plus no parens.\n\nExcept for calls of <a href=\"#Built-in_functions\">built-in functions</a>.\nfunction and method <a href=\"#Calls\">calls</a> and <a href=\"#Receive_operator\">\nreceive operations</a> may appear in statement context.\n\nhttp://codereview.appspot.com/6498138/diff/5001/doc/go_spec.html#newcode4818\ndoc/go_spec.html:4818: functions), or <a href=\"#Receive_operator\">receive operations</a>; in this\n\"does not contain ... excluding\" is hard to parse, plus the rewrite above would help. no parens.",
			"disapproval": false,
			"date": "2012-09-17 21:19:38.734750",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n- gri\n\nhttp://codereview.appspot.com/6498138/diff/5001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/6498138/diff/5001/doc/go_spec.html#newcode3803\ndoc/go_spec.html:3803: and <a href=\"#Receive_operator\">receive operations</a>\nOn 2012/09/17 21:19:38, r wrote:\n> order here is in out in. better to go in in out or out in in. plus no parens.\n> \n> Except for calls of <a href=\"#Built-in_functions\">built-in functions</a>.\n> function and method <a href=\"#Calls\">calls</a> and <a href=\"#Receive_operator\">\n> receive operations</a> may appear in statement context.\n> \n\nDone.\n\nhttp://codereview.appspot.com/6498138/diff/5001/doc/go_spec.html#newcode4818\ndoc/go_spec.html:4818: functions), or <a href=\"#Receive_operator\">receive operations</a>; in this\nOn 2012/09/17 21:19:38, r wrote:\n> \"does not contain ... excluding\" is hard to parse, plus the rewrite above would\n> help. no parens.\n\nDone.",
			"disapproval": false,
			"date": "2012-09-17 21:35:24.522840",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nmake an issue for later consideration to clean this up, maybe in the TODO list at the top",
			"disapproval": false,
			"date": "2012-09-17 22:40:43.121890",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/6498138/diff/5003/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/6498138/diff/5003/doc/go_spec.html#newcode4817\ndoc/go_spec.html:4817: \nOn 2012/09/17 21:55:24, iant wrote:\n> Odd place for a blank line.\n\nDone.\n\nhttps://codereview.appspot.com/6498138/diff/5003/doc/go_spec.html#newcode4818\ndoc/go_spec.html:4818: and the expression <code>s</code>, except for calls of <a href=\"#Built-in_functions\">built-in functions</a>,\nOn 2012/09/17 21:55:24, iant wrote:\n> This does not sound right.  If we do not ignore calls in general, we should not\n> ignore calls to copy or append.  Or recover.\n\nInteresting. This appears to be implemented in a built-in function specific way. Looks like it's more like a compiler error and we shouldn't have this\nrestriction in the first place.\n\nhttps://codereview.appspot.com/6498138/diff/5003/doc/go_spec.html#newcode4827\ndoc/go_spec.html:4827: and the expression <code>s</code> does not contain\nOn 2012/09/17 21:55:24, iant wrote:\n> Did you mean to delete this?\n\nDone.",
			"disapproval": false,
			"date": "2012-09-17 22:05:26.703040",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6498138/diff/5003/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/6498138/diff/5003/doc/go_spec.html#newcode4817\ndoc/go_spec.html:4817: \nOdd place for a blank line.\n\nhttps://codereview.appspot.com/6498138/diff/5003/doc/go_spec.html#newcode4818\ndoc/go_spec.html:4818: and the expression <code>s</code>, except for calls of <a href=\"#Built-in_functions\">built-in functions</a>,\nThis does not sound right.  If we do not ignore calls in general, we should not ignore calls to copy or append.  Or recover.\n\nhttps://codereview.appspot.com/6498138/diff/5003/doc/go_spec.html#newcode4827\ndoc/go_spec.html:4827: and the expression <code>s</code> does not contain\nDid you mean to delete this?",
			"disapproval": false,
			"date": "2012-09-17 21:55:24.547050",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org, rsc@golang.org, iant@golang.org, ken@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-17 21:15:30.304020",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org, rsc@golang.org, iant@golang.org, ken@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-17 21:19:37.484240",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/17 22:39:05, r wrote:\n> CL description needs refinement\n\nPTAL.",
			"disapproval": false,
			"date": "2012-09-17 22:43:55.408790",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-18 17:30:01.517160",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-18 17:32:39.450510",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org, rsc@golang.org, iant@golang.org, ken@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-18 16:52:41.439930",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6498138/diff/17001/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/6498138/diff/17001/doc/go_spec.html#newcode3815\ndoc/go_spec.html:3815: append cap complex imag len make new real\nFor the record, gccgo currently also rejects unsafe.Alignof, unsafe.Sizeof, and unsafe.Offsetof in statement context.",
			"disapproval": false,
			"date": "2012-09-18 16:57:08.413640",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org, rsc@golang.org, iant@golang.org, ken@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-18 17:19:39.901080",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-18 18:24:32.074940",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=eb75b492bf41 ***\n\nspec: clarify expression statements\n\nFunction and method calls are valid expression statements,\nbut calling certain built-in functions is not permitted.\nEnumerate the built-ins.\n\nAlso: unsafe.Offsetof permits parenthesized selectors as\narguments.\n\nThis is simply documenting existing compiler behavior\n(both gc and gccgo agree).\n\nR=r, rsc, iant, ken\nCC=golang-dev\nhttp://codereview.appspot.com/6498138",
			"disapproval": false,
			"date": "2012-09-18 18:26:01.478040",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 6498138: spec: clarify expression statements",
	"created": "2012-09-17 21:14:16.505980",
	"patchsets": [
		1,
		2001,
		5001,
		6002,
		5003,
		4,
		10002,
		11001,
		5005,
		14001,
		17001,
		15002,
		16002,
		24001
	],
	"modified": "2012-09-18 18:26:03.096010",
	"closed": true,
	"issue": 6498138
}