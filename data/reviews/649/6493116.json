{
	"description": "godoc: don't ignore error return from build.Import",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"rsc@golang.org",
		"gri@golang.org"
	],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6493116/diff/1/src/cmd/godoc/main.go\nFile src/cmd/godoc/main.go (right):\n\nhttp://codereview.appspot.com/6493116/diff/1/src/cmd/godoc/main.go#newcode353\nsrc/cmd/godoc/main.go:353: } else if bp, err := build.Import(path, \"\", build.FindOnly); err == nil && bp.Dir != \"\" && bp.ImportPath != \"\" {\nAgreeing w/ rsc. This change shouldn't be needed. Do you have a specific problem you're trying to solve?",
			"disapproval": false,
			"date": "2012-09-13 18:20:45.694730",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-09-13 03:20:09.369150",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6493116/diff/1/src/cmd/godoc/main.go\nFile src/cmd/godoc/main.go (right):\n\nhttp://codereview.appspot.com/6493116/diff/1/src/cmd/godoc/main.go#newcode353\nsrc/cmd/godoc/main.go:353: } else if bp, err := build.Import(path, \"\", build.FindOnly); err == nil && bp.Dir != \"\" && bp.ImportPath != \"\" {\nif you get an error, shouldn't you say something about it?",
			"disapproval": false,
			"date": "2012-09-13 03:22:33.408490",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 13 September 2012 13:22,  <r@golang.org> wrote:\r\n>\r\n> http://codereview.appspot.com/6493116/diff/1/src/cmd/godoc/main.go\r\n> File src/cmd/godoc/main.go (right):\r\n>\r\n> http://codereview.appspot.com/6493116/diff/1/src/cmd/godoc/main.go#newcode353\r\n> src/cmd/godoc/main.go:353: } else if bp, err := build.Import(path, \"\",\r\n>\r\n> build.FindOnly); err == nil && bp.Dir != \"\" && bp.ImportPath != \"\" {\r\n> if you get an error, shouldn't you say something about it?\r\n\r\nmaybe... but this whole if/else series seems to be attempting a\r\nvariety of approaches, before falling back on \"just use the cwd\". gri\r\nshould be able to say for sure.\r\n",
			"disapproval": false,
			"date": "2012-09-13 03:46:47.351570",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6493116/diff/1/src/cmd/godoc/main.go\nFile src/cmd/godoc/main.go (right):\n\nhttp://codereview.appspot.com/6493116/diff/1/src/cmd/godoc/main.go#newcode353\nsrc/cmd/godoc/main.go:353: } else if bp, err := build.Import(path, \"\", build.FindOnly); err == nil && bp.Dir != \"\" && bp.ImportPath != \"\" {\nThis code was correct as written. From the docs:\n    If an error occurs, Import returns a non-nil error and a non-nil\n    *Package containing partial information.\n\nThis code only cares about getting back a directory and import path. If those are present, any other errors don't matter.",
			"disapproval": false,
			"date": "2012-09-13 14:07:45.107480",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-09-18 22:54:15.652790",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 6493116: godoc: don't ignore error return from build.Import",
	"created": "2012-09-13 03:19:59.948100",
	"patchsets": [
		1
	],
	"modified": "2012-09-18 22:54:16.881070",
	"closed": true,
	"issue": 6493116
}