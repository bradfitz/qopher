{
	"description": "image/jpeg: fix quantization tables to be in zig-zag order, not natural\norder.\n\nJPEG images generated prior to this CL are still valid JPEGs, as the\nquantization tables used are encoded in the wire format. Such JPEGs just\ndon't use the recommended quantization tables.",
	"cc": [
		"r@golang.org",
		"dsymonds@golang.org",
		"raph@google.com",
		"adg@golang.org",
		"golang-dev@googlegroups.com",
		"tuom.larsen@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "raph@google.com",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"dsymonds@golang.org",
				"raph@google.com",
				"golang-dev@googlegroups.com",
				"tuom.larsen@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/05 04:36:38, nigeltao wrote:\n> On 5 September 2012 14:19, David Symonds <mailto:dsymonds@golang.org> wrote:\n> > I dunno. Russ looks a lot angrier in the after picture.\n> \n> PTAL.\n\nLGTM.  Note though that this puts an increased burden on future changes to allow customized quantization tables, to make sure those are transformed into zig-zag order.\n\nAlso, I noticed some tab characters - not sure what the policy is around those.",
			"disapproval": false,
			"date": "2012-09-05 05:03:06.088140",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"dsymonds@golang.org",
				"raph@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"tuom.larsen@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=292816148e44 ***\n\nimage/jpeg: fix quantization tables to be in zig-zag order, not natural\norder.\n\nJPEG images generated prior to this CL are still valid JPEGs, as the\nquantization tables used are encoded in the wire format. Such JPEGs just\ndon't use the recommended quantization tables.\n\nR=r, dsymonds, raph, adg\nCC=golang-dev, tuom.larsen\nhttp://codereview.appspot.com/6497083",
			"disapproval": false,
			"date": "2012-09-06 01:10:59.274640",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 5 September 2012 14:19, David Symonds <dsymonds@golang.org> wrote:\r\n> I dunno. Russ looks a lot angrier in the after picture.\r\n\r\nPTAL.\r\n",
			"disapproval": false,
			"date": "2012-09-05 04:36:38.748160",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"dsymonds@golang.org",
				"raph@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"tuom.larsen@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but there are a couple of cases where i'd rename k.\n\nhttp://codereview.appspot.com/6497083/diff/9002/src/pkg/image/jpeg/reader.go\nFile src/pkg/image/jpeg/reader.go (right):\n\nhttp://codereview.appspot.com/6497083/diff/9002/src/pkg/image/jpeg/reader.go#newcode290\nsrc/pkg/image/jpeg/reader.go:290: for k := 1; k < blockSize; k++ { // k is in zig-zag order.\nyou could s/k/zig/ so the loop body makes this clear",
			"disapproval": false,
			"date": "2012-09-05 12:13:20.593050",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"raph@google.com",
				"tuom.larsen@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com, raph@google.com, tuom.larsen@gmail.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-05 04:09:19.484830",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Attached is the before/after JPEG encoding of\r\n$GOROOT/src/pkg/image/testdata/video-001.png at quality 5 out of 100\r\n(i.e. extreme quantization). Before (left) is 1255 bytes, after\r\n(right) is 1286 bytes. In my opinion, the after looks better.\r\n\r\nAt more typical quality levels (75+), the difference isn't really\r\nnoticable unless you're looking for it.\r\n",
			"disapproval": false,
			"date": "2012-09-05 04:15:22.843110",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Sep 5, 2012 at 2:15 PM, Nigel Tao <nigeltao@golang.org> wrote:\r\n\r\n> Before (left) is 1255 bytes, after (right) is 1286 bytes. In my opinion, the after looks better.\r\n\r\nI dunno. Russ looks a lot angrier in the after picture.\r\n",
			"disapproval": false,
			"date": "2012-09-05 04:19:16.723680",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Sep 5, 2012 at 3:03 PM,  <raph@google.com> wrote:\r\n\r\n> Also, I noticed some tab characters - not sure what the policy is around those.\r\n\r\nThey're fine. It's Go style.\r\n",
			"disapproval": false,
			"date": "2012-09-05 05:06:14.695870",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 5 September 2012 14:36, Nigel Tao <nigeltao@golang.org> wrote:\r\n> On 5 September 2012 14:19, David Symonds <dsymonds@golang.org> wrote:\r\n>> I dunno. Russ looks a lot angrier in the after picture.\r\n>\r\n> PTAL.\r\n\r\nIn the final picture we see Russ' hidden robot form revealed.\r\n",
			"disapproval": false,
			"date": "2012-09-05 05:13:06.781960",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6497083: image/jpeg: fix quantization tables to be in zig-zag or...",
	"created": "2012-09-05 04:08:55.136310",
	"patchsets": [
		1,
		2001,
		5001,
		9002,
		10002,
		10003
	],
	"modified": "2012-09-06 01:11:01.893240",
	"closed": true,
	"issue": 6497083
}