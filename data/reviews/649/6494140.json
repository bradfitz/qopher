{
	"description": "spec: unsafe.Alignof/Sizeof also accept non-variable arguments\n\nBoth gc and gccgo permit calls such as unsafe.Sizeof(42). The\nspec only permits variable arguments. This is a (backward-compatible)\nspec change reflecting the status quo. Seems preferrable over\nrestricting the compilers.",
	"cc": [
		"r@golang.org",
		"rsc@golang.org",
		"iant@golang.org",
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d27358d77d44 ***\n\nspec: unsafe.Alignof/Sizeof also accept non-variable arguments\n\nBoth gc and gccgo permit calls such as unsafe.Sizeof(42). The\nspec only permits variable arguments. This is a (backward-compatible)\nspec change reflecting the status quo. Seems preferrable over\nrestricting the compilers.\n\nR=r, rsc, iant, ken\nCC=golang-dev\nhttp://codereview.appspot.com/6494140",
			"disapproval": false,
			"date": "2012-09-17 19:23:44.940650",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r, rsc, iant, ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-14 22:06:01.276390",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6494140/diff/3/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttps://codereview.appspot.com/6494140/diff/3/doc/go_spec.html#newcode3\ndoc/go_spec.html:3: \"Subtitle\": \"Version of September 14, 2012\",\ns/14/17/",
			"disapproval": false,
			"date": "2012-09-17 17:05:05.198870",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6494140/diff/1/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/6494140/diff/1/doc/go_spec.html#newcode5491\ndoc/go_spec.html:5491: of any type and return the alignment (or size, respectively) of a hypothetical variable <code>v</code>\nnon-parallel construction; drop the parens\n\nThe functions Alignof and Size take an expression x ... and return the alignment or size, respectively \n\nas for the merit of this: i suppose this is less work than locking down the compilers.",
			"disapproval": false,
			"date": "2012-09-14 22:20:11.562260",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/6494140/diff/1/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/6494140/diff/1/doc/go_spec.html#newcode5491\ndoc/go_spec.html:5491: of any type and return the alignment (or size, respectively) of a hypothetical variable <code>v</code>\nOn 2012/09/14 22:20:11, r wrote:\n> non-parallel construction; drop the parens\n> \n> The functions Alignof and Size take an expression x ... and return the alignment\n> or size, respectively \n> \n> as for the merit of this: i suppose this is less work than locking down the\n> compilers.\n\nDone.\n\nhttp://codereview.appspot.com/6494140/diff/1/doc/go_spec.html#newcode5491\ndoc/go_spec.html:5491: of any type and return the alignment (or size, respectively) of a hypothetical variable <code>v</code>\nOn 2012/09/14 22:20:11, r wrote:\n> non-parallel construction; drop the parens\n> \n> The functions Alignof and Size take an expression x ... and return the alignment\n> or size, respectively \n> \n> as for the merit of this: i suppose this is less work than locking down the\n> compilers.\n\nThere appear uses for this in the library, e.g.:\nhttp://tip.golang.org/src/pkg/encoding/gob/decode.go?h=unsafe.Sizeof#L367",
			"disapproval": false,
			"date": "2012-09-14 22:25:47.199530",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-14 22:27:59.875540",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"iant@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-17 18:22:32.013760",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 6494140: spec: unsafe.Alignof/Sizeof also accept non-variable ar...",
	"created": "2012-09-14 22:05:58.234560",
	"patchsets": [
		1,
		3,
		3003,
		10002
	],
	"modified": "2012-09-17 19:23:46.520690",
	"closed": true,
	"issue": 6494140
}