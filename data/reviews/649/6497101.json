{
	"description": "go.crypto/nacl: add package",
	"cc": [
		"golang-dev@googlegroups.com",
		"dchest@gmail.com",
		"r@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dchest@gmail.com",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"dchest@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hmm, I don't see any changes except for secretbox_test.go. Anyway, LGTM once you upload them.",
			"disapproval": false,
			"date": "2012-09-08 20:44:48.313590",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"dchest@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: dchest@gmail.com, golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-09-08 15:12:50.791640",
			"approval": false
		},
		{
			"sender": "dchest@gmail.com",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"dchest@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I like the API, and I think \"Seal\" is a good choice.\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/box/box.go\nFile nacl/box/box.go (right):\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/box/box.go#newcode41\nnacl/box/box.go:41: curve25519.ScalarBaseMult(privateKey, publicKey)\nOops. This should be curve25519.ScalarBaseMult(publicKey, privateKey), otherwise we'll always get all-zeros publicKey and the corresponding privateKey.\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/box/box.go#newcode50\nnacl/box/box.go:50: // processing when using the same pair of key repeatedly.\ns/pair of key/pair of keys/\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/box/box.go#newcode67\nnacl/box/box.go:67: // precomputed, shared key as generated by Precompute.\nI think comma between \"precomputed\" and \"shared\" here and in OpenWithPrecomputation doc-comment isn't needed, but I'm not a native speaker :)\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/box/box.go#newcode68\nnacl/box/box.go:68: func SealWithPrecomputation(out, message []byte, nonce *[24]byte, sharedKey *[32]byte) []byte {\nMaybe SealAfterPrecomputation or SealPrecomputed? (ditto for Open...). Not sure, though.\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/secretbox/secretbox.go\nFile nacl/secretbox/secretbox.go (right):\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/secretbox/secretbox.go#newcode97\nnacl/secretbox/secretbox.go:97: // not overlap.\nMaybe:\n\n\"Open authenticates and decrypts a box produced by Seal and appends the\nmessage to out, which must not overlap box. The output will be Overhead bytes smaller than box.\"",
			"disapproval": false,
			"date": "2012-09-08 17:04:08.718290",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"dchest@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Are Seal and Open good verbs for this? NaCl uses `box' and `open'. But box.Box seems bad.",
			"disapproval": false,
			"date": "2012-09-08 15:17:04.301770",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"dchest@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6497101/diff/1002/nacl/box/box.go\nFile nacl/box/box.go (right):\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/box/box.go#newcode41\nnacl/box/box.go:41: curve25519.ScalarBaseMult(privateKey, publicKey)\nOn 2012/09/08 17:04:08, dchest wrote:\n> Oops. This should be curve25519.ScalarBaseMult(publicKey, privateKey), otherwise\n> we'll always get all-zeros publicKey and the corresponding privateKey.\n\nIndeed! Thank you! I guess that this is a problem with passing in the output value. It can save an allocation, but it does open one up to typos like this :(\n\nI have also added the tests as you suggested.\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/box/box.go#newcode50\nnacl/box/box.go:50: // processing when using the same pair of key repeatedly.\nOn 2012/09/08 17:04:08, dchest wrote:\n> s/pair of key/pair of keys/\n\nDone.\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/box/box.go#newcode67\nnacl/box/box.go:67: // precomputed, shared key as generated by Precompute.\nOn 2012/09/08 17:04:08, dchest wrote:\n> I think comma between \"precomputed\" and \"shared\" here and in\n> OpenWithPrecomputation doc-comment isn't needed, but I'm not a native speaker :)\n\n\"precomputed\" is probably redundant since we say that it comes from Precompute, so I've removed it.\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/box/box.go#newcode68\nnacl/box/box.go:68: func SealWithPrecomputation(out, message []byte, nonce *[24]byte, sharedKey *[32]byte) []byte {\nOn 2012/09/08 17:04:08, dchest wrote:\n> Maybe SealAfterPrecomputation or SealPrecomputed? (ditto for Open...). Not sure,\n> though.\n\nSealAfter is better than SealWith. Done.\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/secretbox/secretbox.go\nFile nacl/secretbox/secretbox.go (right):\n\nhttps://codereview.appspot.com/6497101/diff/1002/nacl/secretbox/secretbox.go#newcode97\nnacl/secretbox/secretbox.go:97: // not overlap.\nOn 2012/09/08 17:04:08, dchest wrote:\n> Maybe:\n> \n> \"Open authenticates and decrypts a box produced by Seal and appends the\n> message to out, which must not overlap box. The output will be Overhead bytes\n> smaller than box.\"\n\nDone.",
			"disapproval": false,
			"date": "2012-09-08 18:41:55.872200",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"dchest@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NaCL, eh?\n\nhttps://codereview.appspot.com/6497101/diff/8002/nacl/box/box.go\nFile nacl/box/box.go (right):\n\nhttps://codereview.appspot.com/6497101/diff/8002/nacl/box/box.go#newcode16\nnacl/box/box.go:16: This package is interoperable with NaCl: http://nacl.cr.yp.to/box.html. */\nusual style is to put the */ on a line by itself\n\nhttps://codereview.appspot.com/6497101/diff/8002/nacl/box/box.go#newcode49\nnacl/box/box.go:49: // OpenAfterPrecomputation and SealAfterPrecomputation to dramatically speed up\ns/dramatically//\n\nhttps://codereview.appspot.com/6497101/diff/8002/nacl/box/box.go#newcode57\nnacl/box/box.go:57: // will be Overhead bytes longer than the original and must not overlap. nonce\ns/nonce/The nonce/\nto avoid the initial-cap problem.\n\nhttps://codereview.appspot.com/6497101/diff/8002/nacl/secretbox/secretbox.go\nFile nacl/secretbox/secretbox.go (right):\n\nhttps://codereview.appspot.com/6497101/diff/8002/nacl/secretbox/secretbox.go#newcode16\nnacl/secretbox/secretbox.go:16: This package is interoperable with NaCl: http://nacl.cr.yp.to/secretbox.html. */\nditto re: */",
			"disapproval": false,
			"date": "2012-09-09 13:57:28.000240",
			"approval": false
		},
		{
			"sender": "dchest@gmail.com",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"dchest@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This small test case for box_test.go would catch the bug:\n\n        if *publicKey1 == *publicKey2 || *privateKey1 == *privateKey2 {          \n                t.Fatalf(\"generated keys are equal\")                             \n        }",
			"disapproval": false,
			"date": "2012-09-08 17:16:42.489650",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Finally, we can tell people we support NaCl! :-)\r\n",
			"disapproval": false,
			"date": "2012-09-09 14:15:53.051380",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"dchest@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=30e766a96bf1&repo=crypto ***\n\ngo.crypto/nacl: add package\n\nR=golang-dev, dchest, r, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6497101\n\nhttp://codereview.appspot.com/6497101/diff/8002/nacl/box/box.go\nFile nacl/box/box.go (right):\n\nhttp://codereview.appspot.com/6497101/diff/8002/nacl/box/box.go#newcode16\nnacl/box/box.go:16: This package is interoperable with NaCl: http://nacl.cr.yp.to/box.html. */\nOn 2012/09/09 13:57:28, r wrote:\n> usual style is to put the */ on a line by itself\n\nDone.\n\nhttp://codereview.appspot.com/6497101/diff/8002/nacl/box/box.go#newcode49\nnacl/box/box.go:49: // OpenAfterPrecomputation and SealAfterPrecomputation to dramatically speed up\nOn 2012/09/09 13:57:28, r wrote:\n> s/dramatically//\n\nDone.\n\nhttp://codereview.appspot.com/6497101/diff/8002/nacl/box/box.go#newcode57\nnacl/box/box.go:57: // will be Overhead bytes longer than the original and must not overlap. nonce\nOn 2012/09/09 13:57:28, r wrote:\n> s/nonce/The nonce/\n> to avoid the initial-cap problem.\n\nDone.\n\nhttp://codereview.appspot.com/6497101/diff/8002/nacl/secretbox/secretbox.go\nFile nacl/secretbox/secretbox.go (right):\n\nhttp://codereview.appspot.com/6497101/diff/8002/nacl/secretbox/secretbox.go#newcode16\nnacl/secretbox/secretbox.go:16: This package is interoperable with NaCl: http://nacl.cr.yp.to/secretbox.html. */\nOn 2012/09/09 13:57:28, r wrote:\n> ditto re: */\n\nDone.",
			"disapproval": false,
			"date": "2012-09-09 15:18:17.173170",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Sep 9, 2012 at 7:15 AM, Russ Cox <rsc@golang.org> wrote:\r\n> Finally, we can tell people we support NaCl! :-)\r\n\r\nYay!\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-09-09 15:37:25.569010",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 6497101: go.crypto/nacl: add package",
	"created": "2012-09-08 15:12:40.981150",
	"patchsets": [
		1,
		2001,
		1002,
		8002,
		6008
	],
	"modified": "2012-09-09 15:18:18.174310",
	"closed": true,
	"issue": 6497101
}