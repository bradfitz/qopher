{
	"description": "exp/locale/collate/tools/colcmp: implementation of colcmp tool used for comparing\nvarious implementation of collation.  The tool provides commands for soring,\nregressing one implementation against another, and benchmarking.\nCurrently it includes collation implementations for the Go collator, ICU,\nand one using Darwin's CoreFoundation framework.\nTo avoid building this tool in the default build, the colcmp tag has been\nadded to all files. This allows other tools/colcmp in this directory (e.g. it may make\nsense to move maketables here) to be put in this directory as well.",
	"cc": [
		"r@golang.org",
		"rsc@golang.org",
		"mpvl@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-09-13 11:53:33.934710",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Sep 13, 2012 at 2:20 PM, Rob Pike <r@golang.org> wrote:\r\n> If you have a build tag that is off by default, the tools won't be built.\r\n\r\nUnfortunately, that will require turning it on go make an ordinary 'go\r\nbuild' work. I think it's okay to install the binary. We install\r\nebnflint and no one uses that either.\r\n",
			"disapproval": false,
			"date": "2012-09-13 18:25:02.607490",
			"approval": false
		},
		{
			"sender": "mpvl@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fair enough and good to know.  I'll change as you suggested.\r\n\r\nOn Fri, Sep 14, 2012 at 3:25 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> On Thu, Sep 13, 2012 at 2:20 PM, Rob Pike <r@golang.org> wrote:\r\n> > If you have a build tag that is off by default, the tools won't be built.\r\n>\r\n> Unfortunately, that will require turning it on go make an ordinary 'go\r\n> build' work. I think it's okay to install the binary. We install\r\n> ebnflint and no one uses that either.\r\n>\r\n\r\n\r\n\r\n-- \r\nTrying this for a while: http://go/OnlyCheckEmailTwiceADay.\r\nMarcel van Lohuizen -- Google Switzerland GmbH -- Identifikationsnummer:\r\nCH-020.4.028.116-1\r\n",
			"disapproval": false,
			"date": "2012-09-14 05:41:53.823820",
			"approval": false
		},
		{
			"sender": "mpvl@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Russ,\r\n\r\nI made the changes, but the tool installs into  $GOROOT/bin/colcmp, instead\r\nof  $GOROOT/pkg/tool/$GOOS_$GOARCH/colcmp.\r\n\r\nAny idea why this would be?\r\n\r\nThanks,\r\n\r\nMarcel\r\n\r\nOn Fri, Sep 14, 2012 at 2:41 PM, Marcel van Lohuizen <mpvl@google.com>wrote:\r\n\r\n> Fair enough and good to know.  I'll change as you suggested.\r\n>\r\n>\r\n> On Fri, Sep 14, 2012 at 3:25 AM, Russ Cox <rsc@golang.org> wrote:\r\n>\r\n>> On Thu, Sep 13, 2012 at 2:20 PM, Rob Pike <r@golang.org> wrote:\r\n>> > If you have a build tag that is off by default, the tools won't be\r\n>> built.\r\n>>\r\n>> Unfortunately, that will require turning it on go make an ordinary 'go\r\n>> build' work. I think it's okay to install the binary. We install\r\n>> ebnflint and no one uses that either.\r\n>>\r\n>\r\n>\r\n>\r\n> --\r\n> Trying this for a while: http://go/OnlyCheckEmailTwiceADay.\r\n> Marcel van Lohuizen -- Google Switzerland GmbH -- Identifikationsnummer:\r\n> CH-020.4.028.116-1\r\n>\r\n>\r\n>\r\n\r\n\r\n-- \r\nTrying this for a while: http://go/OnlyCheckEmailTwiceADay.\r\nMarcel van Lohuizen -- Google Switzerland GmbH -- Identifikationsnummer:\r\nCH-020.4.028.116-1\r\n",
			"disapproval": false,
			"date": "2012-09-14 11:25:52.874590",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Any idea why this would be?\r\n\r\nYes. Will fix.\r\n",
			"disapproval": false,
			"date": "2012-09-14 15:44:20.764900",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is only about the structure, not the code.\n\nPlease put each tool in its own directory. Whether you want the tools directory is up to you. It is fine to have exp/locale/collate/tools/colcmp but perhaps easier to have just exp/locale/collate/colcmp. Then you will not need all the // +build colcmp tags.\n\nYou will still need the Makefile to generate chars.go. Both the Makefile and chars.go should be in the CL.\n\nYou probably don't need the other rules in the Makefile. Once the sources are in a directory named colcmp, you can use plain\n\ngo build\ngo build -tags icu\n\nto build a colcmp binary with and without ICU.",
			"disapproval": false,
			"date": "2012-09-13 16:27:45.028370",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"mpvl@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/col.go\nFile src/pkg/exp/locale/collate/tools/col.go (right):\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/col.go#newcode3\nsrc/pkg/exp/locale/collate/tools/col.go:3: // license that can be found in the LICENSE file.\nOn 2012/09/13 15:55:35, r wrote:\n> put a blank line here and similarly in the other files\n\nDone.\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/col.go#newcode18\nsrc/pkg/exp/locale/collate/tools/col.go:18: Utf16 []uint16\nOn 2012/09/13 15:55:35, r wrote:\n> use UTF8 and UTF16\n\nDone.\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/col.go#newcode43\nsrc/pkg/exp/locale/collate/tools/col.go:43: // Compare returns -1 if a < b, 1 if a > b and 0 if a== b.\nOn 2012/09/13 15:55:35, r wrote:\n> s/==/ ==/\n\nDone.\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/col.go#newcode56\nsrc/pkg/exp/locale/collate/tools/col.go:56: // AddFactory is used to register implementations of Collator.\nOn 2012/09/13 15:55:35, r wrote:\n> AddFactory registers f as a factory for an implementation of Collator.\n\nDone.\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go\nFile src/pkg/exp/locale/collate/tools/colcmp.go (right):\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go#newcode279\nsrc/pkg/exp/locale/collate/tools/colcmp.go:279: rs = append(rs, r)\nNope, UnquoteChar parses the first \"character\" in s.  The \\' indicates which character is used for quotation.  So r can be anything, really.\n\nOn 2012/09/13 15:55:35, r wrote:\n> surely just rs = append(rs, '\\'')\n> or if you'd prefer\n> rs = append(rs, 0x27) // single quote\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go#newcode290\nsrc/pkg/exp/locale/collate/tools/colcmp.go:290: // A Command is an implemenation of a colcmp command.\nOn 2012/09/13 15:55:35, r wrote:\n> implementation\n\nDone.\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go#newcode311\nsrc/pkg/exp/locale/collate/tools/colcmp.go:311: Example: XXXXXX\nHowever nice it is, I removed it.\n\nOn 2012/09/13 15:55:35, r wrote:\n> nice example\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go#newcode405\nsrc/pkg/exp/locale/collate/tools/colcmp.go:405: %d: incorrect comparisson result for input:\nOn 2012/09/13 15:55:35, r wrote:\n> s/ss/s/\n\nDone.\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go#newcode418\nsrc/pkg/exp/locale/collate/tools/colcmp.go:418: %d: incorrect comparisson result for input:\nOn 2012/09/13 15:55:35, r wrote:\n> s/ss/s/\n\nDone.",
			"disapproval": false,
			"date": "2012-09-14 11:24:56.490750",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"mpvl@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i'm happy with this but i'd like someone more familiar with cgo to take a look at that part.\n\nhttp://codereview.appspot.com/6496118/diff/10002/src/pkg/exp/locale/collate/tools/colcmp/gen.go\nFile src/pkg/exp/locale/collate/tools/colcmp/gen.go (right):\n\nhttp://codereview.appspot.com/6496118/diff/10002/src/pkg/exp/locale/collate/tools/colcmp/gen.go#newcode29\nsrc/pkg/exp/locale/collate/tools/colcmp/gen.go:29: // rewriter is used to both unique strings and create variants of strings\n// rewrite is used both to unique strings and to create variants of strings",
			"disapproval": false,
			"date": "2012-09-14 15:58:09.544810",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"mpvl@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-14 16:11:58.483810",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/chars.go\nFile src/pkg/exp/locale/collate/tools/chars.go (right):\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/chars.go#newcode1\nsrc/pkg/exp/locale/collate/tools/chars.go:1: // Generated by running\nawesome file\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/col.go\nFile src/pkg/exp/locale/collate/tools/col.go (right):\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/col.go#newcode3\nsrc/pkg/exp/locale/collate/tools/col.go:3: // license that can be found in the LICENSE file.\nput a blank line here and similarly in the other files\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/col.go#newcode18\nsrc/pkg/exp/locale/collate/tools/col.go:18: Utf16 []uint16\nuse UTF8 and UTF16\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/col.go#newcode43\nsrc/pkg/exp/locale/collate/tools/col.go:43: // Compare returns -1 if a < b, 1 if a > b and 0 if a== b.\ns/==/ ==/\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/col.go#newcode56\nsrc/pkg/exp/locale/collate/tools/col.go:56: // AddFactory is used to register implementations of Collator.\nAddFactory registers f as a factory for an implementation of Collator.\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go\nFile src/pkg/exp/locale/collate/tools/colcmp.go (right):\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go#newcode279\nsrc/pkg/exp/locale/collate/tools/colcmp.go:279: rs = append(rs, r)\nsurely just rs = append(rs, '\\'')\nor if you'd prefer\nrs = append(rs, 0x27) // single quote\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go#newcode290\nsrc/pkg/exp/locale/collate/tools/colcmp.go:290: // A Command is an implemenation of a colcmp command.\nimplementation\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go#newcode311\nsrc/pkg/exp/locale/collate/tools/colcmp.go:311: Example: XXXXXX\nnice example\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go#newcode405\nsrc/pkg/exp/locale/collate/tools/colcmp.go:405: %d: incorrect comparisson result for input:\ns/ss/s/\n\nhttp://codereview.appspot.com/6496118/diff/3/src/pkg/exp/locale/collate/tools/colcmp.go#newcode418\nsrc/pkg/exp/locale/collate/tools/colcmp.go:418: %d: incorrect comparisson result for input:\ns/ss/s/",
			"disapproval": false,
			"date": "2012-09-13 15:55:35.480750",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "in the CL s/soring/sorting/",
			"disapproval": false,
			"date": "2012-09-13 15:40:19.337280",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Sep 13, 2012 at 1:03 PM, Marcel van Lohuizen <mpvl@google.com> wrote:\r\n> I think that would indeed be cleaner, but I wanted to prevent colcmp to be\r\n> build by default and put in the bin directory.  It is a tool that is used to\r\n> verify attributes of a collation implementation.  This will rarely be used,\r\n> I reckon.  It should be in there, but it needs not clutter the bin dir or\r\n> unnecessarily slow build performance.  Most notably, assuming collation will\r\n> end up in the core library someday, colcmp does not seem to fit well\r\n> together with the other binaries in bin.\r\n\r\nIt should end up in $GOROOT/pkg/tool/$GOOS_$GOARCH/colcmp if it gets\r\ninstalled. That doesn't bother me much. It won't be part of releases,\r\nbecause it is in exp/.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-09-13 17:37:08.714230",
			"approval": false
		},
		{
			"sender": "mpvl@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think that would indeed be cleaner, but I wanted to prevent colcmp to be\r\nbuild by default and put in the bin directory.  It is a tool that is used\r\nto verify attributes of a collation implementation.  This will rarely be\r\nused, I reckon.  It should be in there, but it needs not clutter the bin\r\ndir or unnecessarily slow build performance.  Most notably, assuming\r\ncollation will end up in the core library someday, colcmp does not seem to\r\nfit well together with the other binaries in bin.\r\n\r\nThoughts?\r\n\r\nOn Fri, Sep 14, 2012 at 1:27 AM, <rsc@golang.org> wrote:\r\n\r\n> This is only about the structure, not the code.\r\n>\r\n> Please put each tool in its own directory. Whether you want the tools\r\n> directory is up to you. It is fine to have\r\n> exp/locale/collate/tools/**colcmp but perhaps easier to have just\r\n> exp/locale/collate/colcmp. Then you will not need all the // +build\r\n> colcmp tags.\r\n>\r\n> You will still need the Makefile to generate chars.go. Both the Makefile\r\n> and chars.go should be in the CL.\r\n>\r\n> You probably don't need the other rules in the Makefile. Once the\r\n> sources are in a directory named colcmp, you can use plain\r\n>\r\n> go build\r\n> go build -tags icu\r\n>\r\n> to build a colcmp binary with and without ICU.\r\n>\r\n> http://codereview.appspot.com/**6496118/<http://codereview.appspot.com/6496118/>\r\n>\r\n\r\n\r\n\r\n-- \r\nTrying this for a while: http://go/OnlyCheckEmailTwiceADay.\r\nMarcel van Lohuizen -- Google Switzerland GmbH -- Identifikationsnummer:\r\nCH-020.4.028.116-1\r\n",
			"disapproval": false,
			"date": "2012-09-13 17:03:30.829070",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If you have a build tag that is off by default, the tools won't be built.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-09-13 18:20:11.164910",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nI fixed the install location problem. The cgo code looks good.\r\n",
			"disapproval": false,
			"date": "2012-09-14 16:07:13.795540",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"mpvl@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=7c53f5b1e1bf ***\n\nexp/locale/collate/tools/colcmp: implementation of colcmp tool used for comparing\nvarious implementation of collation.  The tool provides commands for soring,\nregressing one implementation against another, and benchmarking.\nCurrently it includes collation implementations for the Go collator, ICU,\nand one using Darwin's CoreFoundation framework.\nTo avoid building this tool in the default build, the colcmp tag has been\nadded to all files. This allows other tools/colcmp in this directory (e.g. it may make\nsense to move maketables here) to be put in this directory as well.\n\nR=r, rsc, mpvl\nCC=golang-dev\nhttp://codereview.appspot.com/6496118",
			"disapproval": false,
			"date": "2012-09-24 04:22:05.469960",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 6496118: exp/locale/collate/tools: implementation of colcmp tool...",
	"created": "2012-09-13 11:52:37.947640",
	"patchsets": [
		1,
		2001,
		3,
		10002,
		13001
	],
	"modified": "2012-09-24 04:22:07.203670",
	"closed": true,
	"issue": 6496118
}