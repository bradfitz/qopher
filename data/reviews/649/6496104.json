{
	"description": "strings: fix NewReplacer(old0, new0, old1, new1, ...) to be consistent\nwhen oldi == oldj.\n\nBenchmark numbers show no substantial change.",
	"cc": [
		"eric.d.eisner@gmail.com",
		"rogpeppe@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"eric.d.eisner@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello eric.d.eisner@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-11 07:27:31.811510",
			"approval": false
		},
		{
			"sender": "eric.d.eisner@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"eric.d.eisner@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6496104/diff/5002/src/pkg/strings/replace.go\nFile src/pkg/strings/replace.go (right):\n\nhttp://codereview.appspot.com/6496104/diff/5002/src/pkg/strings/replace.go#newcode50\nsrc/pkg/strings/replace.go:50: if bb.old[o>>5]&uint32(1<<(o&31)) != 0 {\nThis blob of logic occurs a lot now, maybe it should turn into its own method of byteBitmap?",
			"disapproval": false,
			"date": "2012-09-11 15:41:50.754560",
			"approval": false
		},
		{
			"sender": "eric.d.eisner@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"eric.d.eisner@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/11 07:27:31, nigeltao wrote:\n> Hello mailto:eric.d.eisner@gmail.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go\n\nLGTM",
			"disapproval": false,
			"date": "2012-09-11 15:18:40.976260",
			"approval": true
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"eric.d.eisner@gmail.com",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6496104/diff/5002/src/pkg/strings/replace.go\nFile src/pkg/strings/replace.go (right):\n\nhttp://codereview.appspot.com/6496104/diff/5002/src/pkg/strings/replace.go#newcode50\nsrc/pkg/strings/replace.go:50: if bb.old[o>>5]&uint32(1<<(o&31)) != 0 {\nOn 2012/09/11 15:41:51, Eric Roshan Eisner wrote:\n> This blob of logic occurs a lot now, maybe it should turn into its own method of\n> byteBitmap?\n\n+1. byteBitmap.isSet might work.",
			"disapproval": false,
			"date": "2012-09-11 16:39:30.984400",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"eric.d.eisner@gmail.com",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=cdee8bf43694 ***\n\nstrings: fix NewReplacer(old0, new0, old1, new1, ...) to be consistent\nwhen oldi == oldj.\n\nBenchmark numbers show no substantial change.\n\nR=eric.d.eisner, rogpeppe\nCC=golang-dev\nhttp://codereview.appspot.com/6496104",
			"disapproval": false,
			"date": "2012-09-12 00:41:27.668540",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6496104: strings: fix NewReplacer(old0, new0, old1, new1, ...) t...",
	"created": "2012-09-11 07:24:13.871940",
	"patchsets": [
		1,
		2001,
		5001,
		5002,
		8001
	],
	"modified": "2012-09-12 00:41:29.891990",
	"closed": true,
	"issue": 6496104
}