{
	"description": "exp/winfsnotify: fix build.",
	"cc": [
		"golang-dev@googlecode.com",
		"alex.brainman@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlecode.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttp://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-13 11:41:37.522772",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5483057/diff/1002/src/pkg/exp/winfsnotify/winfsnotify.go\nFile src/pkg/exp/winfsnotify/winfsnotify.go (right):\n\nhttp://codereview.appspot.com/5483057/diff/1002/src/pkg/exp/winfsnotify/winfsnotify.go#newcode350\nsrc/pkg/exp/winfsnotify/winfsnotify.go:350: e := syscall.CloseHandle(w.port)\nSorry, I was confused. This is correct.\n\nOn 2011/12/13 11:44:45, mattn wrote:\n> Ah, it overwrite original err. will fix",
			"disapproval": false,
			"date": "2011-12-13 11:46:40.993357",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5483057/diff/1002/src/pkg/exp/winfsnotify/winfsnotify.go\nFile src/pkg/exp/winfsnotify/winfsnotify.go (right):\n\nhttp://codereview.appspot.com/5483057/diff/1002/src/pkg/exp/winfsnotify/winfsnotify.go#newcode350\nsrc/pkg/exp/winfsnotify/winfsnotify.go:350: e := syscall.CloseHandle(w.port)\nAh, it overwrite original err. will fix",
			"disapproval": false,
			"date": "2011-12-13 11:44:45.241630",
			"approval": false
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done\n\nOn 2011/12/13 23:37:17, brainman wrote:\n> Mattn, good that you noticed that it is broken!\n> \n> Russ, can we have this package compiled and tested during build somehow?\n> \n> Alex\n> \n> http://codereview.appspot.com/5483057/diff/1002/src/pkg/exp/winfsnotify/winfsnotify.go\n> File src/pkg/exp/winfsnotify/winfsnotify.go (left):\n> \n> http://codereview.appspot.com/5483057/diff/1002/src/pkg/exp/winfsnotify/winfsnotify.go#oldcode79\n> src/pkg/exp/winfsnotify/winfsnotify.go:79: return nil,\n> os.NewSyscallError(\"CreateIoCompletionPort\", e)\n> Please, leave os.NewSyscallError(\"CreateIoCompletionPort\", e) in. When program\n> fails, it is helpful to know which API failed, then you can see where the\n> problem is. Otherwise we will see errors, like \"Access denied\". I agree that\n> your new code looks simpler, but, I feel, we need good error messages in this\n> package - when things will go wrong, it will be hard to find the culprit.\n> \n> Same everywhere else.",
			"disapproval": false,
			"date": "2011-12-14 01:25:41.509615",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Mattn, good that you noticed that it is broken!\n\nRuss, can we have this package compiled and tested during build somehow?\n\nAlex\n\nhttp://codereview.appspot.com/5483057/diff/1002/src/pkg/exp/winfsnotify/winfsnotify.go\nFile src/pkg/exp/winfsnotify/winfsnotify.go (left):\n\nhttp://codereview.appspot.com/5483057/diff/1002/src/pkg/exp/winfsnotify/winfsnotify.go#oldcode79\nsrc/pkg/exp/winfsnotify/winfsnotify.go:79: return nil, os.NewSyscallError(\"CreateIoCompletionPort\", e)\nPlease, leave os.NewSyscallError(\"CreateIoCompletionPort\", e) in. When program fails, it is helpful to know which API failed, then you can see where the problem is. Otherwise we will see errors, like \"Access denied\". I agree that your new code looks simpler, but, I feel, we need good error messages in this package - when things will go wrong, it will be hard to find the culprit.\n\nSame everywhere else.",
			"disapproval": false,
			"date": "2011-12-13 23:37:17.059453",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ea37ecc7b847 ***\n\nexp/winfsnotify: fix build.\n\nR=golang-dev, alex.brainman\nCC=golang-dev\nhttp://codereview.appspot.com/5483057\n\nCommitter: Alex Brainman <alex.brainman@gmail.com>",
			"disapproval": false,
			"date": "2011-12-14 02:17:56.176599",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"mattn.jp@gmail.com",
				"golang-dev@googlecode.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thank you.",
			"disapproval": false,
			"date": "2011-12-14 02:17:02.156661",
			"approval": true
		}
	],
	"owner_email": "mattn.jp@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mattn",
	"subject": "code review 5483057: exp/winfsnotify: fix build.",
	"created": "2011-12-13 11:41:18.770410",
	"patchsets": [
		1,
		2001,
		1002,
		4002
	],
	"modified": "2012-02-27 03:00:51.970556",
	"closed": true,
	"issue": 5483057
}