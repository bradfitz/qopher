{
	"description": "exp/ssh: Add Start(cmd string) and Signal(sig string) to Session. Rename Exec to Run.\n\nExec() has been renamed to Run() in keeping with the os/exec API.\n\nAdded func (*Session) Start(cmd string) which starts a remote process but unlike Run() doesn't wait for it to finish before returning.\n\nRun() has been refactored to use Start internally. Its really just a refactoring, no new code but some extra functionality was won.\n\nAlso added func (*Session) Signal(sig signal) which sends a UNIX signal to a remote process. This is espcially useful in conjunction with Start() as the two allow you to start a remote process, monitor its stdout/stderr, and send it a TERM/HUP/etc signal when you want it to close.",
	"cc": [
		"dave@cheney.net",
		"rsc@golang.org",
		"agl@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, rsc@golang.org, agl@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-24 14:03:16.922700",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"bradfitz@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5437058/diff/8001/src/pkg/exp/ssh/session.go\nFile src/pkg/exp/ssh/session.go (right):\n\nhttp://codereview.appspot.com/5437058/diff/8001/src/pkg/exp/ssh/session.go#newcode116\nsrc/pkg/exp/ssh/session.go:116: if validSignal(sig) == false {\nThe signals may be defined as typed consts rather than hoping the user doesn't enter a typo and catching errors at runtime. E.g.:\n\ntype signal string\n\nconst (\n    SIGALRM signal = \"ALRM\"\n    ...\n)\n\nhttp://codereview.appspot.com/5437058/diff/8001/src/pkg/exp/ssh/session.go#newcode167\nsrc/pkg/exp/ssh/session.go:167: func (s *Session) Exec(cmd string) error {\nDespite the difference in parameters, Start mimics the behavior of Cmd.Start in os/exec, and this mimics Run, so I suggest naming it as such.",
			"disapproval": false,
			"date": "2011-11-29 11:14:28.229188",
			"approval": false
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"bradfitz@golang.org",
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, rsc@golang.org, agl@golang.org, bradfitz@golang.org, n13m3y3r@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-29 14:49:48.617822",
			"approval": false
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"bradfitz@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, rsc@golang.org, agl@golang.org, bradfitz@golang.org, n13m3y3r@gmail.com, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-29 15:46:14.350947",
			"approval": false
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, rsc@golang.org, agl@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-25 07:50:30.833227",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for making those changes. Once your PeersId CL lands i'll apply this CL for review.",
			"disapproval": false,
			"date": "2011-11-25 12:52:39.954537",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, leaving for rsc and agl.\n\nConsider adding bradfitz and/or Gustavo to the list of reviewers for their feedback.\n\nhttp://codereview.appspot.com/5437058/diff/2001/src/pkg/exp/ssh/session.go\nFile src/pkg/exp/ssh/session.go (right):\n\nhttp://codereview.appspot.com/5437058/diff/2001/src/pkg/exp/ssh/session.go#newcode114\nsrc/pkg/exp/ssh/session.go:114: // It takes the name of the signal without the 'SIG' prefix.\nsig is the name of the signal ...\n\nhttp://codereview.appspot.com/5437058/diff/2001/src/pkg/exp/ssh/session.go#newcode125\nsrc/pkg/exp/ssh/session.go:125: if err := s.writePacket(marshal(msgChannelRequest, req)); err != nil {\nreturn s.writePacket(...)\n\nhttp://codereview.appspot.com/5437058/diff/2001/src/pkg/exp/ssh/session.go#newcode144\nsrc/pkg/exp/ssh/session.go:144: // when you want to monitor the remote process' Stdout and Stderr or write to its Stdin while it is running.\nI wonder at what point Exec and Start get rolled into a Command() method, similar to os/exec, however that would make Shell() an outlier. It probably isn't worth addressing this now.\n\nhttp://codereview.appspot.com/5437058/diff/2001/src/pkg/exp/ssh/session.go#newcode169\nsrc/pkg/exp/ssh/session.go:169: // A Session only accepts one call to Exec or Shell.\nExec, Start or Shell\n\nhttp://codereview.appspot.com/5437058/diff/2001/src/pkg/exp/ssh/session.go#newcode330\nsrc/pkg/exp/ssh/session.go:330: \nnit: move valid down the this line.\n\nhttp://codereview.appspot.com/5437058/diff/2001/src/pkg/exp/ssh/session.go#newcode333\nsrc/pkg/exp/ssh/session.go:333: valid = false\nvalid is already false, the zero value\n\nhttp://codereview.appspot.com/5437058/diff/2001/src/pkg/exp/ssh/session.go#newcode336\nsrc/pkg/exp/ssh/session.go:336: valid = true\nI prefer return true at this point as I find it more explicit.\n\nhttp://codereview.appspot.com/5437058/diff/2001/src/pkg/exp/ssh/session.go#newcode339\nsrc/pkg/exp/ssh/session.go:339: return\nI think using a named return value is overkill for this function, just return false at the end.",
			"disapproval": false,
			"date": "2011-11-24 15:29:58.738856",
			"approval": true
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, rsc@golang.org, agl@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-29 07:49:03.851956",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks good to me (pending comments).\n\n+bradfitz for input into the changes to Exec/Start.\n\nhttp://codereview.appspot.com/5437058/diff/8001/src/pkg/exp/ssh/session.go\nFile src/pkg/exp/ssh/session.go (right):\n\nhttp://codereview.appspot.com/5437058/diff/8001/src/pkg/exp/ssh/session.go#newcode114\nsrc/pkg/exp/ssh/session.go:114: // sig is the name of the signal without the 'SIG' prefix.\nLGTM.\n\nhttp://codereview.appspot.com/5437058/diff/8001/src/pkg/exp/ssh/session.go#newcode139\nsrc/pkg/exp/ssh/session.go:139: //\nThe Go standard for comment length is roughly 60-80 chars. If in doubt, try to keep it to the other comments in the file.\n\ngodoc will not repaginate comments, so consider how they will look on a 80x24 terminal. If in doubt you can do a godoc . in the cwd for a preview.\n\nhttp://codereview.appspot.com/5437058/diff/8001/src/pkg/exp/ssh/session.go#newcode158\nsrc/pkg/exp/ssh/session.go:158: if err := s.start(); err != nil {\nYou can just return s.start()",
			"disapproval": false,
			"date": "2011-11-29 10:01:54.340745",
			"approval": true
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks. I modified the Signal function to use constants as you suggested.\nI'm leaving the rename of Exec() to Run() for the next changeset. Anyone\nusing exp/ssh will likely be affected by that change.\n\nOn Tue, Nov 29, 2011 at 1:14 PM, <n13m3y3r@gmail.com> wrote:\n\n>\n> http://codereview.appspot.com/**5437058/diff/8001/src/pkg/exp/**\n> ssh/session.go<http://codereview.appspot.com/5437058/diff/8001/src/pkg/exp/ssh/session.go>\n> File src/pkg/exp/ssh/session.go (right):\n>\n> http://codereview.appspot.com/**5437058/diff/8001/src/pkg/exp/**\n> ssh/session.go#newcode116<http://codereview.appspot.com/5437058/diff/8001/src/pkg/exp/ssh/session.go#newcode116>\n> src/pkg/exp/ssh/session.go:**116: if validSignal(sig) == false {\n> The signals may be defined as typed consts rather than hoping the user\n> doesn't enter a typo and catching errors at runtime. E.g.:\n>\n> type signal string\n>\n> const (\n>    SIGALRM signal = \"ALRM\"\n>    ...\n> )\n>\n> http://codereview.appspot.com/**5437058/diff/8001/src/pkg/exp/**\n> ssh/session.go#newcode167<http://codereview.appspot.com/5437058/diff/8001/src/pkg/exp/ssh/session.go#newcode167>\n> src/pkg/exp/ssh/session.go:**167: func (s *Session) Exec(cmd string) error\n> {\n> Despite the difference in parameters, Start mimics the behavior of\n> Cmd.Start in os/exec, and this mimics Run, so I suggest naming it as\n> such.\n>\n> http://codereview.appspot.com/**5437058/<http://codereview.appspot.com/5437058/>\n>\n",
			"disapproval": false,
			"date": "2011-11-29 14:51:45.255464",
			"approval": false
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, rsc@golang.org, agl@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-29 11:13:05.353714",
			"approval": false
		},
		{
			"sender": "gustav.paul@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "OK. Note that the behaviour of Exec (soon to be Run() ) was not changed.\n\nOn Tue, Nov 29, 2011 at 5:25 PM, Gustavo Niemeyer <gustavo@niemeyer.net>wrote:\n\n> > Thanks. I modified the Signal function to use constants as you suggested.\n> > I'm leaving the rename of Exec() to Run() for the next changeset. Anyone\n> > using exp/ssh will likely be affected by that change.\n>\n> That's fine in exp packages, even more considering that you just\n> changed the behavior of Exec and their code is now broken anyway. Now\n> is a better time for doing that than a future CL.\n>\n> --\n> Gustavo Niemeyer\n> http://niemeyer.net\n> http://niemeyer.net/plus\n> http://niemeyer.net/twitter\n> http://niemeyer.net/blog\n>\n> -- I'm not absolutely sure of anything.\n>\n",
			"disapproval": false,
			"date": "2011-11-29 15:34:50.554434",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please change the type to Signal.\nIt is somewhat anti-social to provide a type in a\npublic API that a client must use but cannot name.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-30 20:04:10.848061",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"bradfitz@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> OK. Note that the behaviour of Exec (soon to be Run() ) was not changed.\n\nExec used to Wait, and it does not. That's a very significant\nchange, but it's fine since it's in exp.\n\nLGTM",
			"disapproval": false,
			"date": "2011-11-29 16:31:53.329966",
			"approval": true
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"bradfitz@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Exec used to Wait, and it does not. That's a very significant\n> change, but it's fine since it's in exp.\n\nSorry, my bad, you're actually right. Start was introduced, and\nExec/Run is the one that waits, and that's still the case.\n\nThanks for all the changes, anyway, and for the actual CL. This\nis definitely an improvement.",
			"disapproval": false,
			"date": "2011-11-29 16:47:09.388453",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Thanks. I modified the Signal function to use constants as you suggested.\n> I'm leaving the rename of Exec() to Run() for the next changeset. Anyone\n> using exp/ssh will likely be affected by that change.\n\nThat's fine in exp packages, even more considering that you just\nchanged the behavior of Exec and their code is now broken anyway. Now\nis a better time for doing that than a future CL.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2011-11-29 15:26:14.224548",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"bradfitz@golang.org",
				"n13m3y3r@gmail.com",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1713e0b34111 ***\n\nexp/ssh: Add Start(cmd string) and Signal(sig string) to Session. Rename Exec to Run.\n\nExec() has been renamed to Run() in keeping with the os/exec API.\n\nAdded func (*Session) Start(cmd string) which starts a remote process but unlike Run() doesn't wait for it to finish before returning.\n\nRun() has been refactored to use Start internally. Its really just a refactoring, no new code but some extra functionality was won.\n\nAlso added func (*Session) Signal(sig signal) which sends a UNIX signal to a remote process. This is espcially useful in conjunction with Start() as the two allow you to start a remote process, monitor its stdout/stderr, and send it a TERM/HUP/etc signal when you want it to close.\n\nR=dave, rsc, agl, bradfitz, n13m3y3r, gustavo\nCC=golang-dev\nhttp://codereview.appspot.com/5437058\n\nCommitter: Adam Langley <agl@golang.org>",
			"disapproval": false,
			"date": "2011-11-29 17:26:47.583535",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Taking me off cc list.",
			"disapproval": false,
			"date": "2011-12-13 21:29:54.681157",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"gustav.paul@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"agl@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2011-12-13 21:30:07.711383",
			"approval": false
		}
	],
	"owner_email": "gustav.paul@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "gpaul",
	"subject": "code review 5437058: exp/ssh: Add Start(cmd string) and Signal(sig string) t...",
	"created": "2011-11-24 14:01:50.882315",
	"patchsets": [
		1,
		2001,
		2002,
		8001,
		12001,
		14001,
		16001
	],
	"modified": "2011-12-13 21:30:07.711383",
	"closed": false,
	"issue": 5437058
}