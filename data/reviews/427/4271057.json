{
	"description": "filepath: new Abs function",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@google.com",
		"go.peter.90@gmail.com",
		"bsiegert@gmail.com",
		"r@golang.org",
		"mattn.jp@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-03-21 02:56:59.631891",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Mar 21, 2011 at 04:21, Russ Cox <rsc@google.com> wrote:\n> Not really sure this should refer to the current directory.\n\nMaybe I am biased but I would also like to prefer something like\nrel2abs in Perl:\n\nfunc Abs(path, base string) (string, os.Error)\n\nIf base is an empty string, use os.Getwd().\n\nI already ran into situations where I needed to have absolute paths\nrelative to something different than the current working directory.\n\nOne more consideration to take into account on Windows, from the\nperldoc page on File::Spec:\n\nOn systems with the concept of volume, if $path and $base appear to be\non two different volumes, we will not attempt to resolve the two\npaths, and we will instead simply return $path . Note that previous\nversions of this module ignored the volume of $base , which resulted\nin garbage results part of the time.\n\n--Benny.\n\n-- \nThe first essential in chemistry is that you should perform practical\nwork and conduct experiments, for he who performs not practical work\nnor makes experiments will never attain the least degree of mastery.\n\u00a0 \u00a0 \u00a0 \u00a0 -- Abu Musa Jabir ibn Hayyan (721-815)\n",
			"disapproval": false,
			"date": "2011-03-21 07:51:03.866957",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"go.peter.90@gmail.com",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hi Benny,\n\n> I already ran into situations where I needed to have absolute paths\n> relative to something different than the current working directory.\n\nPlease check the existing filepath.Join for that.",
			"disapproval": false,
			"date": "2011-03-21 13:18:59.467594",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Not really sure this should refer to the current directory.\n",
			"disapproval": false,
			"date": "2011-03-21 03:21:42.764579",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "> Not really sure this should refer to the current directory.\n\nUnless there's an explicit root inferred from the context,\nevery function which accepts a relative path is talking about\nsomething from the current directory.  That's the case for\nWalk, Glob, Run, and so many others.\n\nBeing able to say filepath.Abs(\"src/\") is both useful and\nhas an expected outcome, so what's the concern, more precisely?",
			"disapproval": false,
			"date": "2011-03-21 03:42:21.636611",
			"approval": false
		},
		{
			"sender": "go.peter.90@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"go.peter.90@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Russ,\n\nWindows has a GetFullPathName function, which \"merges the name of the current drive and directory with a specified file name to determine the full path and file name of a specified file.\"\n\n\"Note  The GetFullPathName function is not recommended for multithreaded applications or shared library code.\"\n\nhttp://msdn.microsoft.com/en-us/library/aa364963.aspx\n\nPeter\n\nOn 2011/03/21 03:21:42, rsc1 wrote:\n> Not really sure this should refer to the current directory.",
			"disapproval": false,
			"date": "2011-03-21 06:24:20.643261",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"go.peter.90@gmail.com",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Any chance of better input on this?\n\nOn 2011/03/21 03:42:21, niemeyer wrote:\n> > Not really sure this should refer to the current directory.\n> \n> Unless there's an explicit root inferred from the context,\n> every function which accepts a relative path is talking about\n> something from the current directory.  That's the case for\n> Walk, Glob, Run, and so many others.\n> \n> Being able to say filepath.Abs(\"src/\") is both useful and\n> has an expected outcome, so what's the concern, more precisely?",
			"disapproval": false,
			"date": "2011-04-04 14:10:22.145538",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"go.peter.90@gmail.com",
				"bsiegert@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4271057/diff/6001/src/pkg/path/filepath/path.go\nFile src/pkg/path/filepath/path.go (right):\n\nhttp://codereview.appspot.com/4271057/diff/6001/src/pkg/path/filepath/path.go#newcode235\nsrc/pkg/path/filepath/path.go:235: // If path is not absolute, it will be joined with the current\n-,.s/path/the path/\n\nhttp://codereview.appspot.com/4271057/diff/6001/src/pkg/path/filepath/path.go#newcode236\nsrc/pkg/path/filepath/path.go:236: // working directory to turn it into an absolute path.\nThe absolute path name for a given file is not guaranteed to be unique.\n\nhttp://codereview.appspot.com/4271057/diff/6001/src/pkg/path/filepath/path_test.go\nFile src/pkg/path/filepath/path_test.go (right):\n\nhttp://codereview.appspot.com/4271057/diff/6001/src/pkg/path/filepath/path_test.go#newcode507\nsrc/pkg/path/filepath/path_test.go:507: want := filepath.Clean(strings.Replace(test.result, \"$CWD\", cwd, -1))\ni think this is a test that the implementation works the way you expect.\ninstead, you should check that the resulting name is an absolute path that evaluates to the same file, verified with Stat.",
			"disapproval": false,
			"date": "2011-04-04 16:28:33.459852",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"go.peter.90@gmail.com",
				"bsiegert@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "All comments addressed. PTAL",
			"disapproval": false,
			"date": "2011-04-04 19:59:57.524273",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"go.peter.90@gmail.com",
				"bsiegert@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM but i'd like a windows reviewer to comment before i commit.",
			"disapproval": false,
			"date": "2011-04-05 00:31:58.961144",
			"approval": true
		},
		{
			"sender": "mattn.jp@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"go.peter.90@gmail.com",
				"bsiegert@gmail.com",
				"r@golang.org",
				"mattn.jp@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\nI got PASS. and I guess there is enough tests.\n\nOn 2011/04/05 00:31:58, r wrote:\n> LGTM but i'd like a windows reviewer to comment before i commit.",
			"disapproval": false,
			"date": "2011-04-05 00:48:44.796935",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@google.com",
				"go.peter.90@gmail.com",
				"bsiegert@gmail.com",
				"r@golang.org",
				"mattn.jp@gmail.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=c20415eecac9 ***\n\nfilepath: new Abs function\n\nR=golang-dev, rsc1, peterGo, bsiegert, r, mattn\nCC=golang-dev\nhttp://codereview.appspot.com/4271057\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2011-04-05 01:29:30.006446",
			"approval": false
		}
	],
	"owner_email": "n13m3y3r@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "niemeyer",
	"subject": "code review 4271057: filepath: new Abs function",
	"created": "2011-03-21 02:37:03.311112",
	"patchsets": [
		1,
		2001,
		3001,
		6001,
		15001
	],
	"modified": "2011-09-23 18:15:36.230799",
	"closed": true,
	"issue": 4271057
}