{
	"description": "runtime: prevent garbage collection during hashmap insertion\n\nInserting a key-value pair into a hashmap storing keys or values\nindirectly can cause the garbage collector to find the hashmap in\nan inconsistent\tstate.\n\nFixes issue 5074.",
	"cc": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: dave@cheney.net),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-19 20:05:05.439750",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "code looks reasonable, could we make a test for it?\r\nis channel affected by this issue?\r\n",
			"disapproval": false,
			"date": "2013-03-19 20:14:01.078560",
			"approval": false
		},
		{
			"sender": "ugorji@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"ugorji@gmail.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/19 20:05:05, atom wrote:\n> Hello mailto:golang-dev@googlegroups.com (cc: mailto:dave@cheney.net),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go/\n\nTested a few times. My benchmark finishes now without errors. I think this fixes the issue.",
			"disapproval": false,
			"date": "2013-03-19 20:23:17.027470",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"ugorji@gmail.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/19 20:14:01, minux wrote:\n> is channel affected by this issue?\n\nProbably not.",
			"disapproval": false,
			"date": "2013-03-19 20:26:53.180450",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-03-19 20:29:37.639690",
			"approval": true
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7913043/diff/10001/src/pkg/runtime/gc_test.go\nFile src/pkg/runtime/gc_test.go (right):\n\nhttps://codereview.appspot.com/7913043/diff/10001/src/pkg/runtime/gc_test.go#newcode87\nsrc/pkg/runtime/gc_test.go:87: type T struct {\nOn 2013/03/19 20:57:40, rsc wrote:\n> you might try \n> \n> defer debug.SetGCPercent(debug.SetGCPercent(1))\n> \n> to try to make the collector run a lot during the test.\n\nDone.",
			"disapproval": false,
			"date": "2013-03-19 21:16:56.573170",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"ugorji@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com, ugorji@gmail.com, rsc@golang.org (cc: dave@cheney.net, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-19 20:53:55.341280",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7913043/diff/10001/src/pkg/runtime/gc_test.go\nFile src/pkg/runtime/gc_test.go (right):\n\nhttps://codereview.appspot.com/7913043/diff/10001/src/pkg/runtime/gc_test.go#newcode87\nsrc/pkg/runtime/gc_test.go:87: type T struct {\nyou might try \n\ndefer debug.SetGCPercent(debug.SetGCPercent(1))\n\nto try to make the collector run a lot during the test.",
			"disapproval": false,
			"date": "2013-03-19 20:57:39.970570",
			"approval": true
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=53c873e9f93d ***\n\nruntime: prevent garbage collection during hashmap insertion\n\nInserting a key-value pair into a hashmap storing keys or values\nindirectly can cause the garbage collector to find the hashmap in\nan inconsistent\tstate.\n\nFixes issue 5074.\n\nR=golang-dev, minux.ma, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7913043",
			"disapproval": false,
			"date": "2013-03-19 21:17:55.238590",
			"approval": false
		}
	],
	"owner_email": "0xE2.0x9A.0x9B@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "atom",
	"subject": "code review 7913043: runtime: prevent garbage collection during hashmap insertion",
	"created": "2013-03-19 20:04:56.135780",
	"patchsets": [
		1,
		1003,
		10001,
		13001,
		15001
	],
	"modified": "2013-03-19 21:17:57.842360",
	"closed": true,
	"issue": 7913043
}