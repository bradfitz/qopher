{
	"description": "undo CL 6845121 / 79603a5e4cda\n\nThis changes the output of\n\nrand.Seed(0)\nperm := rand.Perm(100)\n\nWhen giving the same seeds to Go 1.0 and Go 1.1 programs\nI would like them to generate the same random numbers.\n\n\u00ab\u00ab\u00ab original CL description\nmath/rand: remove noop iteration in Perm\n\nThe first iteration always do `m[0], m[0] = m[0], m[0]`, because\n`rand.Intn(1)` is 0.\n\nfun note: IIRC in TAOCP version of this algorithm, `i` goes\nbackward (n-1->1), meaning that the \"already\" shuffled part of the\narray is never altered betweens iterations, while in the current\nimplementation the \"not-yet\" shuffled part of the array is\nconserved between iterations.\n\nR=golang-dev\nCC=golang-dev\nhttps://codereview.appspot.com/6845121\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>\n\u00bb\u00bb\u00bb",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-12-07 14:47:28.216300",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Fri, Dec 7, 2012 at 6:47 AM, <rsc@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> undo CL 6845121 / 79603a5e4cda\r\n>\r\n> This changes the output of\r\n>\r\n> rand.Seed(0)\r\n> perm := rand.Perm(100)\r\n>\r\n> When giving the same seeds to Go 1.0 and Go 1.1 programs\r\n> I would like them to generate the same random numbers.\r\n>\r\n> \u00ab\u00ab\u00ab original CL description\r\n> math/rand: remove noop iteration in Perm\r\n>\r\n> The first iteration always do `m[0], m[0] = m[0], m[0]`, because\r\n> `rand.Intn(1)` is 0.\r\n>\r\n> fun note: IIRC in TAOCP version of this algorithm, `i` goes\r\n> backward (n-1->1), meaning that the \"already\" shuffled part of the\r\n> array is never altered betweens iterations, while in the current\r\n> implementation the \"not-yet\" shuffled part of the array is\r\n> conserved between iterations.\r\n>\r\n> R=golang-dev\r\n> CC=golang-dev\r\n> https://codereview.appspot.**com/6845121<https://codereview.appspot.com/6845121>\r\n>\r\n> Committer: Brad Fitzpatrick <bradfitz@golang.org>\r\n> \u00bb\u00bb\u00bb\r\n>\r\n> Please review this at https://codereview.appspot.**com/6905049/<https://codereview.appspot.com/6905049/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/math/rand/rand.go\r\n>\r\n>\r\n> Index: src/pkg/math/rand/rand.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/math/rand/rand.go\r\n> +++ b/src/pkg/math/rand/rand.go\r\n> @@ -100,7 +100,7 @@\r\n>         for i := 0; i < n; i++ {\r\n>                 m[i] = i\r\n>         }\r\n> -       for i := 1; i < n; i++ {\r\n> +       for i := 0; i < n; i++ {\r\n>                 j := r.Intn(i + 1)\r\n>                 m[i], m[j] = m[j], m[i]\r\n>         }\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-12-07 16:30:56.146020",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=d636ee0a2861 ***\n\nundo CL 6845121 / 79603a5e4cda\n\nThis changes the output of\n\nrand.Seed(0)\nperm := rand.Perm(100)\n\nWhen giving the same seeds to Go 1.0 and Go 1.1 programs\nI would like them to generate the same random numbers.\n\n\u00ab\u00ab\u00ab original CL description\nmath/rand: remove noop iteration in Perm\n\nThe first iteration always do `m[0], m[0] = m[0], m[0]`, because\n`rand.Intn(1)` is 0.\n\nfun note: IIRC in TAOCP version of this algorithm, `i` goes\nbackward (n-1->1), meaning that the \"already\" shuffled part of the\narray is never altered betweens iterations, while in the current\nimplementation the \"not-yet\" shuffled part of the array is\nconserved between iterations.\n\nR=golang-dev\nCC=golang-dev\nhttps://codereview.appspot.com/6845121\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>\n\u00bb\u00bb\u00bb\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/6905049",
			"disapproval": false,
			"date": "2012-12-07 16:58:52.027430",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6905049: undo CL 6845121 / 79603a5e4cda",
	"created": "2012-12-07 14:46:14.385940",
	"patchsets": [
		1,
		2001,
		4002
	],
	"modified": "2012-12-09 05:30:17.647970",
	"closed": true,
	"issue": 6905049
}