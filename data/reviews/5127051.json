{
	"description": "testing: use panic/recover instead of runtime.Goexit",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"r@golang.org",
		"rsc@golang.org",
		"dsymonds@golang.org"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-28 22:59:53.164558",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Why?  What's there now is simpler.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-09-28 23:00:47.389648",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Sep 28, 2011 at 16:03, Andrew Gerrand <adg@golang.org> wrote:\n\n> Not code that handles panics properly.\n\n\nWhy bother?  What's there now is simpler.\n",
			"disapproval": false,
			"date": "2011-09-28 23:06:10.422400",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "This breaks any test of code that catches panics.\n",
			"disapproval": false,
			"date": "2011-09-28 23:02:55.645809",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Not code that handles panics properly.\n\nOn 28 September 2011 16:02, David Symonds <dsymonds@golang.org> wrote:\n> This breaks any test of code that catches panics.\n>\n",
			"disapproval": false,
			"date": "2011-09-28 23:03:55.068639",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Imagine you're trying to test code that has a callback model for\nwhatever reason, and you're trying to write a fake callback in your\ntest code. Currently you can write\n  f := func(x int) {\n    if x < 0 {\n      t.Fatalf(\"x = %d\", x)\n    }\n    // maybe something else\n  }\nto, say, verify that the code under test doesn't call the callback\nwith a negative x. If the code under test catches all panics, or even\nmost panics (such as the http handler) then your change will mean that\nthe t.Fatalf won't bubble all the way up, leading to a passing test\nwhen it probably should not.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2011-09-28 23:07:14.716956",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "looks meh to me. i like what's there now.",
			"disapproval": false,
			"date": "2011-09-28 23:27:07.065765",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2011-09-29 00:31:59.166530",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5127051: testing: use panic/recover instead of runtime.Goexit",
	"created": "2011-09-28 22:59:48.697134",
	"patchsets": [
		1
	],
	"modified": "2011-09-29 00:32:00.981199",
	"closed": true,
	"issue": 5127051
}