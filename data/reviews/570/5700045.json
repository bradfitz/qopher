{
	"description": "os: make Wait return on SIGSTOP on unix\n\nFixes issue 3111.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No thanks.\n\nPackage os is for portable behavior, and this is not portable.\nProcess.Wait is for waiting for a process to be gone, not\nfor it to SIGSTOP.  If you want the latter, use package\nsyscall directly.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-23 16:44:30.266474",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Process.Wait is defined to wait for the process to\nexit/be killed/never going to run again/whatever.\nIf Windows isn't doing that, that's the bug we should fix.\n",
			"disapproval": false,
			"date": "2012-02-23 16:57:15.807148",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bytbox@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Removing reviewers.",
			"disapproval": false,
			"date": "2012-02-23 20:30:07.962432",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"bytbox@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-23 09:41:22.306680",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"bytbox@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-23 10:12:44.275383",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Agreed on both; changed.\n\nOn Thu, 23 Feb 2012, minux wrote:\n\n> issue description: s/linux/unix/, this is not linux specific change.\n>\n> Why not add WCONTINUED and WUNTRACED as well?\n>\n\n-- \nScott Lawrence\n\nLinux jagadai 3.2.5-1-ARCH #1 SMP PREEMPT Tue Feb 7 08:34:36 CET 2012 x86_64 Intel(R) Core(TM)2 Duo CPU P8700 @ 2.53GHz GenuineIntel GNU/Linux\n",
			"disapproval": false,
			"date": "2012-02-23 10:13:04.898305",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"bytbox@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-02-23 20:34:47.232398",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "issue description: s/linux/unix/, this is not linux specific change.\n\nWhy not add WCONTINUED and WUNTRACED as well?\n",
			"disapproval": false,
			"date": "2012-02-23 09:52:47.761522",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Perhaps add WaitSignal with the new behavior, and leave Wait, then?\n\nOn Thu, 23 Feb 2012, Ian Lance Taylor wrote:\n\n> FYI\n>\n> I understand that it is good to be able to see whether a process has\n> stopped, but I think there has to be a way to simply wait for a process\n> to exit.  It shouldn't be necessary to call Wait() in a loop.\n>\n> Ian\n>\n>\n> bytbox@gmail.com writes:\n>\n>> Reviewers: golang-dev_googlegroups.com,\n>>\n>> Message:\n>> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>>\n>> I'd like you to review this change to\n>> https://go.googlecode.com/hg/\n>>\n>>\n>> Description:\n>> os: make Wait return on SIGSTOP on linux\n>>\n>> Fixes issue 3111.\n>>\n>> Please review this at http://codereview.appspot.com/5700045/\n>>\n>> Affected files:\n>>   M src/pkg/os/exec_unix.go\n>>\n>>\n>> Index: src/pkg/os/exec_unix.go\n>> ===================================================================\n>> --- a/src/pkg/os/exec_unix.go\n>> +++ b/src/pkg/os/exec_unix.go\n>> @@ -21,7 +21,7 @@\n>>  \t}\n>>  \tvar status syscall.WaitStatus\n>>  \tvar rusage syscall.Rusage\n>> -\tpid1, e := syscall.Wait4(p.Pid, &status, 0, &rusage)\n>> +\tpid1, e := syscall.Wait4(p.Pid, &status, syscall.WSTOPPED, &rusage)\n>>  \tif e != nil {\n>>  \t\treturn nil, NewSyscallError(\"wait\", e)\n>>  \t}\n>\n\n-- \nScott Lawrence\n\nLinux jagadai 3.2.5-1-ARCH #1 SMP PREEMPT Tue Feb 7 08:34:36 CET 2012 x86_64 Intel(R) Core(TM)2 Duo CPU P8700 @ 2.53GHz GenuineIntel GNU/Linux\n",
			"disapproval": false,
			"date": "2012-02-23 16:07:40.323896",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI\n\nI understand that it is good to be able to see whether a process has\nstopped, but I think there has to be a way to simply wait for a process\nto exit.  It shouldn't be necessary to call Wait() in a loop.\n\nIan\n\n\nbytbox@gmail.com writes:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> os: make Wait return on SIGSTOP on linux\n>\n> Fixes issue 3111.\n>\n> Please review this at http://codereview.appspot.com/5700045/\n>\n> Affected files:\n>   M src/pkg/os/exec_unix.go\n>\n>\n> Index: src/pkg/os/exec_unix.go\n> ===================================================================\n> --- a/src/pkg/os/exec_unix.go\n> +++ b/src/pkg/os/exec_unix.go\n> @@ -21,7 +21,7 @@\n>  \t}\n>  \tvar status syscall.WaitStatus\n>  \tvar rusage syscall.Rusage\n> -\tpid1, e := syscall.Wait4(p.Pid, &status, 0, &rusage)\n> +\tpid1, e := syscall.Wait4(p.Pid, &status, syscall.WSTOPPED, &rusage)\n>  \tif e != nil {\n>  \t\treturn nil, NewSyscallError(\"wait\", e)\n>  \t}\n",
			"disapproval": false,
			"date": "2012-02-23 13:10:26.085905",
			"approval": false
		},
		{
			"sender": "bytbox@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Is either behavior portable? I ask because right now, the windows \nimplementation seems more analagous to using WSTOPPED et al.\n\nOn Thu, 23 Feb 2012, Russ Cox wrote:\n\n> No thanks.\n>\n> Package os is for portable behavior, and this is not portable.\n> Process.Wait is for waiting for a process to be gone, not\n> for it to SIGSTOP.  If you want the latter, use package\n> syscall directly.\n>\n> Russ\n>\n\n-- \nScott Lawrence\n\nLinux jagadai 3.2.5-1-ARCH #1 SMP PREEMPT Tue Feb 7 08:34:36 CET 2012 x86_64 Intel(R) Core(TM)2 Duo CPU P8700 @ 2.53GHz GenuineIntel GNU/Linux\n",
			"disapproval": false,
			"date": "2012-02-23 16:51:31.400420",
			"approval": false
		}
	],
	"owner_email": "bytbox@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "bytbox",
	"subject": "code review 5700045: os: make Wait return on SIGSTOP on unix",
	"created": "2012-02-23 09:41:08.076194",
	"patchsets": [
		1,
		2001,
		2003,
		1003,
		5001
	],
	"modified": "2012-02-23 20:34:48.279521",
	"closed": true,
	"issue": 5700045
}