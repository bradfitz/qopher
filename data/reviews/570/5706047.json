{
	"description": "database/sql/driver: add a argument to sql.Open and Driver.Open.\n\nThere is a requirement that executing something after database connected.\nEg. 'SET NAMES utf8' for mysql. Currently, there is no use to execute this.\nBecause \"database/sql uses multiple simultaneous connections to database\"(mymysql, Ziutek)\n\nOption 1:\nDb.PostConn set the things, that will be executed after Db.driver.Open\nwas called.\n\ndb, err := sql.Open(\"mymysql\", \"test/testuser/TestPasswd9\")\ndb.PostConn(\"set names utf8\") // without this statment, the Chinese characters will be displayed as '0x3F'\nrows, err := db.Query(\"SELECT * FROM go\")\n\nOption 2:\nLet Driver.Open accept arguments: []Value.\nWe colud pass the arguments to the drivers,\nthen let the drivers determine what should be done.",
	"cc": [
		"golang-china@googlegroups.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"bradfitz@golang.org",
		"vcc.163@gmail.com",
		"rsc@golang.org",
		"Heresy.Mc@gmail.com",
		"ziutek@Lnet.pl"
	],
	"messages": [
		{
			"sender": "mikespook@gmail.com",
			"recipients": [
				"mikespook@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-china@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "database/sql: added the Db.PostConn for executive something after connected.\n\nThere is a requirement that executing something after database connected.\nEg. 'SET NAMES utf8' for mysql. Currently, there is no use to execute this.\nBecause \"database/sql uses multiple simultaneous connections to database\"(mymysql, Ziutek)\nDb.PostConn set the things, that will be executed after Db.driver.Open was called.\n\ndb, err := sql.Open(\"mymysql\", \"test/testuser/TestPasswd9\")\ndb.PostConn(\"set names utf8\") // without this statment, the Chinese characters will be displayed as '0x3F'\nrows, err := db.Query(\"SELECT * FROM go\")",
			"disapproval": false,
			"date": "2012-02-28 16:38:26.600410",
			"approval": false
		},
		{
			"sender": "mikespook@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It means that we must change the interface in the\ndatabase/sql/driver/driver.go:36, from:\n\nDriver.Open(name string) (Conn, error)\n\nto:\n\nDriver.Open(name string, args...Value) (Conn, error)\n\nShould we modify the interface or just add a method to the entrance?\nTo be truth, I prefer modify the interface.\n\n\n\u4e8e Wed, 29 Feb 2012 01:01:57 +0800\nWei guangjing <vcc.163@gmail.com> \u5199\u9053:\n\n> \u5728 2012\u5e742\u670829\u65e5\u661f\u671f\u4e09\uff0c \u5199\u9053\uff1a\n> \n> > Reviewers: golang-dev_googlegroups.com,\n> >\n> > Message:\n> > database/sql: added the Db.PostConn for executive something after\n> > connected.\n> > \n> \n> You can just add something to open name string, for example:\n> sql.Open(\"....\",\"db/user/password?encoding=utf-8\")\n> only need modify mymysql, don't need change database/sql, should be\n> better.\n> \n\n",
			"disapproval": false,
			"date": "2012-02-28 17:18:11.950356",
			"approval": false
		},
		{
			"sender": "Heresy.Mc@gmail.com",
			"recipients": [
				"mikespook@gmail.com",
				"bradfitz@golang.org",
				"vcc.163@gmail.com",
				"rsc@golang.org",
				"Heresy.Mc@gmail.com",
				"golang-china@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I would prefer to use Query String model, suck as: \n\ndb, err := sql.Open('mymysql', 'user=Username&passwd=Password&charset=UTF8')\n\nAnd everything should be done in driver but not interface?\n\nOn 2012/02/29 01:51:50, mikespook wrote:\n> \u4e8e Tue, 28 Feb 2012 14:39:04 -0800\n> Brad Fitzpatrick <mailto:bradfitz@golang.org> \u5199\u9053:\n> \n> > I think this is something drivers should provide.  You can pack any\n> > form of arguments into the driver.Open(name string).  That name\n> > string can be any format.\n> > \n> > In short, I don't think this requires any database/sql* changes.\n> > \n> \n> So, means do this:\n> \n> db, err := sql.Open(\"mymysql\", \"hms/root/xxiyy/set names utf8\")\n> \n> and then mymysql will explain the dns in it own codes.\n> \n> Bad smell, isn't it?\n> \n> In the Chinese or any other multi-byte character languages, do something\n> (eg. set the char-set or encoder) after connected is most likely a\n> standard action.\n> \n> IMHO. And if the interface didn't tell drivers how to do it. There will\n> be lots of tricks were done by drivers.\n> \n> I also think about this:\n> \n> db, err := sql.Open(\"mymysql\", \"hms/root/xxiyy\", []driver.Value{\"set\n> names utf8\"})",
			"disapproval": false,
			"date": "2012-02-29 02:50:16.647875",
			"approval": false
		},
		{
			"sender": "mikespook@gmail.com",
			"recipients": [
				"mikespook@gmail.com",
				"bradfitz@golang.org",
				"vcc.163@gmail.com",
				"rsc@golang.org",
				"Heresy.Mc@gmail.com",
				"golang-china@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/29 02:50:16, MC.Spring wrote:\n> I would prefer to use Query String model, suck as: \n> \n> db, err := sql.Open('mymysql', 'user=Username&passwd=Password&charset=UTF8')\n> \n> And everything should be done in driver but not interface?\n> \n\nAh, the question has changed to \"Shall we need a uniform DSN?\"\n\nShall we define some uniform dsn fields, and then drivers decide the others.\n\nuser:passwd@host:port/?charset=utf8&k1=v1&k2=v2\n\nRight?\n\nOr there's no need to have a standard like this. \nAll decided by the driver.\n\nEh... I must talk about this with ziutek.\n\nThanks all. Sorry to bother you!",
			"disapproval": false,
			"date": "2012-02-29 03:18:05.286680",
			"approval": false
		},
		{
			"sender": "mikespook@gmail.com",
			"recipients": [
				"mikespook@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-china@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Why the review didn't display in the group of golang-dev? Let me try again.\n\ndatabase/sql: added the Db.PostConn for executive something after connected.\n\nThere is a requirement that executing something after database connected.\nEg. 'SET NAMES utf8' for mysql. Currently, there is no use to execute this.\nBecause \"database/sql uses multiple simultaneous connections to\ndatabase\"(mymysql, Ziutek)\nDb.PostConn set the things, that will be executed after Db.driver.Open was\ncalled.\n\ndb, err := sql.Open(\"mymysql\", \"test/testuser/TestPasswd9\")\ndb.PostConn(\"set names utf8\") // without this statment, the Chinese characters\nwill be displayed as '0x3F'\nrows, err := db.Query(\"SELECT * FROM go\")",
			"disapproval": false,
			"date": "2012-02-28 16:56:32.776936",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mikespook@gmail.com",
				"bradfitz@golang.org",
				"vcc.163@gmail.com",
				"rsc@golang.org",
				"golang-china@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R+=bradfitz\nThis is an API change.",
			"disapproval": false,
			"date": "2012-02-28 18:04:05.407958",
			"approval": false
		},
		{
			"sender": "mikespook@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\u4e8e Tue, 28 Feb 2012 14:39:04 -0800\nBrad Fitzpatrick <bradfitz@golang.org> \u5199\u9053:\n\n> I think this is something drivers should provide.  You can pack any\n> form of arguments into the driver.Open(name string).  That name\n> string can be any format.\n> \n> In short, I don't think this requires any database/sql* changes.\n> \n\nSo, means do this:\n\ndb, err := sql.Open(\"mymysql\", \"hms/root/xxiyy/set names utf8\")\n\nand then mymysql will explain the dns in it own codes.\n\nBad smell, isn't it?\n\nIn the Chinese or any other multi-byte character languages, do something\n(eg. set the char-set or encoder) after connected is most likely a\nstandard action.\n\nIMHO. And if the interface didn't tell drivers how to do it. There will\nbe lots of tricks were done by drivers.\n\nI also think about this:\n\ndb, err := sql.Open(\"mymysql\", \"hms/root/xxiyy\", []driver.Value{\"set\nnames utf8\"})\n",
			"disapproval": false,
			"date": "2012-02-29 01:51:50.246430",
			"approval": false
		},
		{
			"sender": "ziutek@Lnet.pl",
			"recipients": [
				"mikespook@gmail.com",
				"bradfitz@golang.org",
				"vcc.163@gmail.com",
				"rsc@golang.org",
				"Heresy.Mc@gmail.com",
				"ziutek@Lnet.pl",
				"golang-china@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/29 02:50:16, MC.Spring wrote:\n> I would prefer to use Query String model, suck as: \n> \n> db, err := sql.Open('mymysql', 'user=Username&passwd=Password&charset=UTF8')\n\nPasswords can contain any char (=?/& \u5199 to) so with your model you need some escape function for it. In mymysql model password is last part of name string so it can be any string.",
			"disapproval": false,
			"date": "2012-02-29 10:36:20.621645",
			"approval": false
		},
		{
			"sender": "mikespook@gmail.com",
			"recipients": [
				"mikespook@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-china@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-china@googlegroups.com, golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-28 16:41:04.331360",
			"approval": false
		},
		{
			"sender": "ziutek@Lnet.pl",
			"recipients": [
				"mikespook@gmail.com",
				"bradfitz@golang.org",
				"vcc.163@gmail.com",
				"rsc@golang.org",
				"Heresy.Mc@gmail.com",
				"ziutek@Lnet.pl",
				"golang-china@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/28 22:39:04, bradfitz wrote:\n> I think this is something drivers should provide.  You can pack any form of\n> arguments into the driver.Open(name string).  That name string can be any\n> format.\n> \n> In short, I don't think this requires any database/sql* changes.\n\nI don't think that pass huge of initialization commands over name string is good idea. This is definitely database/sql issue resulting from the concept of implicit connections establishing.\n\nI encountered this problem a long time ago (when creating mymysql autoreconnect interface) and as a result Register method appeared (with it you can register any number of commands for connection initialization).",
			"disapproval": false,
			"date": "2012-02-29 10:17:06.818146",
			"approval": false
		},
		{
			"sender": "mikespook@gmail.com",
			"recipients": [
				"mikespook@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-china@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-china@googlegroups.com, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-28 16:44:09.256057",
			"approval": false
		},
		{
			"sender": "vcc.163@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\u5728 2012\u5e742\u670829\u65e5\u661f\u671f\u4e09\uff0c \u5199\u9053\uff1a\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> database/sql: added the Db.PostConn for executive something after\n> connected.\n>\n> There is a requirement that executing something after database\n> connected.\n> Eg. 'SET NAMES utf8' for mysql. Currently, there is no use to execute\n> this.\n\n\nYou can just add something to open name string, for example:\nsql.Open(\"....\",\"db/user/password?encoding=utf-8\")\nonly need modify mymysql, don't need change database/sql, should be better.\n\n\nBecause \"database/sql uses multiple simultaneous connections to\n> database\"(mymysql, Ziutek)\n> Db.PostConn set the things, that will be executed after Db.driver.Open\n> was called.\n>\n> db, err := sql.Open(\"mymysql\", \"test/testuser/TestPasswd9\")\n> db.PostConn(\"set names utf8\") // without this statment, the Chinese\n> characters will be displayed as '0x3F'\n> rows, err := db.Query(\"SELECT * FROM go\")\n>\n> Description:\n> database/sql: added the Db.PostConn for executive something after\n> connected.\n>\n> There is a requirement that executing something after database\n> connected.\n> Eg. 'SET NAMES utf8' for mysql. Currently, there is no use to execute\n> this.\n> Because \"database/sql uses multiple simultaneous connections to\n> database\"(mymysql, Ziutek)\n> Db.PostConn set the things, that will be executed after Db.driver.Open\n> was called.\n>\n> db, err := sql.Open(\"mymysql\", \"test/testuser/TestPasswd9\")\n> db.PostConn(\"set names utf8\") // without this statment, the Chinese\n> characters will be displayed as '0x3F'\n> rows, err := db.Query(\"SELECT * FROM go\")\n>\n> Please review this at http://codereview.appspot.com/**5706047/<http://codereview.appspot.com/5706047/>\n>\n> Affected files:\n>  M src/pkg/database/sql/sql.go\n>\n>\n> Index: src/pkg/database/sql/sql.go\n> ==============================**==============================**=======\n> --- a/src/pkg/database/sql/sql.go\n> +++ b/src/pkg/database/sql/sql.go\n> @@ -179,9 +179,11 @@\n>        driver driver.Driver\n>        dsn    string\n>\n> -       mu       sync.Mutex // protects freeConn and closed\n> -       freeConn []driver.Conn\n> -       closed   bool\n> +       mu            sync.Mutex // protects freeConn and closed\n> +       freeConn      []driver.Conn\n> +       closed        bool\n> +       postConnQuery string\n> +       postConnArgs  []interface{}\n>  }\n>\n>  // Open opens a database specified by its database driver name and a\n> @@ -198,6 +200,12 @@\n>        return &DB{driver: driver, dsn: dataSourceName}, nil\n>  }\n>\n> +// query will be executed after a conn was connected.\n> +func (db *DB) PostConn(query string, args ...interface{}) {\n> +       db.postConnQuery = query\n> +       db.postConnArgs = args\n> +}\n> +\n>  // Close closes the database, releasing any open resources.\n>  func (db *DB) Close() error {\n>        db.mu.Lock()\n> @@ -235,7 +243,29 @@\n>                return conn, nil\n>        }\n>        db.mu.Unlock()\n> -       return db.driver.Open(db.dsn)\n> +       ci, err := db.driver.Open(db.dsn)\n> +       if err != nil {\n> +               return nil, err\n> +       }\n> +\n> +       if db.postConnQuery == \"\" && db.postConnArgs == nil {\n> +               return ci, nil\n> +       }\n> +       if c, ok := ci.(driver.Conn); ok {\n> +               stmt, err := c.Prepare(db.postConnQuery)\n> +               if err != nil {\n> +                       if err != driver.ErrSkip {\n> +                               if err != nil {\n> +                                       return nil, err\n> +                               }\n> +                       }\n> +               }\n> +               _, err = stmt.Exec(db.postConnArgs)\n> +               if err != nil {\n> +                       return nil, err\n> +               }\n> +       }\n> +       return ci, nil\n>  }\n>\n>  func (db *DB) connIfFree(wanted driver.Conn) (conn driver.Conn, ok bool) {\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-28 17:01:57.485374",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think this is something drivers should provide.  You can pack any form of\narguments into the driver.Open(name string).  That name string can be any\nformat.\n\nIn short, I don't think this requires any database/sql* changes.\n\nOn Tue, Feb 28, 2012 at 8:38 AM, <mikespook@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> database/sql: added the Db.PostConn for executive something after\n> connected.\n>\n> There is a requirement that executing something after database\n> connected.\n> Eg. 'SET NAMES utf8' for mysql. Currently, there is no use to execute\n> this.\n> Because \"database/sql uses multiple simultaneous connections to\n> database\"(mymysql, Ziutek)\n> Db.PostConn set the things, that will be executed after Db.driver.Open\n> was called.\n>\n> db, err := sql.Open(\"mymysql\", \"test/testuser/TestPasswd9\")\n> db.PostConn(\"set names utf8\") // without this statment, the Chinese\n> characters will be displayed as '0x3F'\n> rows, err := db.Query(\"SELECT * FROM go\")\n>\n> Description:\n> database/sql: added the Db.PostConn for executive something after\n> connected.\n>\n> There is a requirement that executing something after database\n> connected.\n> Eg. 'SET NAMES utf8' for mysql. Currently, there is no use to execute\n> this.\n> Because \"database/sql uses multiple simultaneous connections to\n> database\"(mymysql, Ziutek)\n> Db.PostConn set the things, that will be executed after Db.driver.Open\n> was called.\n>\n> db, err := sql.Open(\"mymysql\", \"test/testuser/TestPasswd9\")\n> db.PostConn(\"set names utf8\") // without this statment, the Chinese\n> characters will be displayed as '0x3F'\n> rows, err := db.Query(\"SELECT * FROM go\")\n>\n> Please review this at http://codereview.appspot.com/**5706047/<http://codereview.appspot.com/5706047/>\n>\n> Affected files:\n>  M src/pkg/database/sql/sql.go\n>\n>\n> Index: src/pkg/database/sql/sql.go\n> ==============================**==============================**=======\n> --- a/src/pkg/database/sql/sql.go\n> +++ b/src/pkg/database/sql/sql.go\n> @@ -179,9 +179,11 @@\n>        driver driver.Driver\n>        dsn    string\n>\n> -       mu       sync.Mutex // protects freeConn and closed\n> -       freeConn []driver.Conn\n> -       closed   bool\n> +       mu            sync.Mutex // protects freeConn and closed\n> +       freeConn      []driver.Conn\n> +       closed        bool\n> +       postConnQuery string\n> +       postConnArgs  []interface{}\n>  }\n>\n>  // Open opens a database specified by its database driver name and a\n> @@ -198,6 +200,12 @@\n>        return &DB{driver: driver, dsn: dataSourceName}, nil\n>  }\n>\n> +// query will be executed after a conn was connected.\n> +func (db *DB) PostConn(query string, args ...interface{}) {\n> +       db.postConnQuery = query\n> +       db.postConnArgs = args\n> +}\n> +\n>  // Close closes the database, releasing any open resources.\n>  func (db *DB) Close() error {\n>        db.mu.Lock()\n> @@ -235,7 +243,29 @@\n>                return conn, nil\n>        }\n>        db.mu.Unlock()\n> -       return db.driver.Open(db.dsn)\n> +       ci, err := db.driver.Open(db.dsn)\n> +       if err != nil {\n> +               return nil, err\n> +       }\n> +\n> +       if db.postConnQuery == \"\" && db.postConnArgs == nil {\n> +               return ci, nil\n> +       }\n> +       if c, ok := ci.(driver.Conn); ok {\n> +               stmt, err := c.Prepare(db.postConnQuery)\n> +               if err != nil {\n> +                       if err != driver.ErrSkip {\n> +                               if err != nil {\n> +                                       return nil, err\n> +                               }\n> +                       }\n> +               }\n> +               _, err = stmt.Exec(db.postConnArgs)\n> +               if err != nil {\n> +                       return nil, err\n> +               }\n> +       }\n> +       return ci, nil\n>  }\n>\n>  func (db *DB) connIfFree(wanted driver.Conn) (conn driver.Conn, ok bool) {\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-28 22:39:04.882605",
			"approval": false
		},
		{
			"sender": "mikespook@gmail.com",
			"recipients": [
				"mikespook@gmail.com",
				"bradfitz@golang.org",
				"vcc.163@gmail.com",
				"rsc@golang.org",
				"golang-china@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org, vcc.163@gmail.com, rsc@golang.org (cc: golang-china@googlegroups.com, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-29 01:50:08.314955",
			"approval": false
		},
		{
			"sender": "mikespook@gmail.com",
			"recipients": [
				"mikespook@gmail.com",
				"bradfitz@golang.org",
				"vcc.163@gmail.com",
				"rsc@golang.org",
				"golang-china@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org, vcc.163@gmail.com, rsc@golang.org (cc: golang-china@googlegroups.com, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-29 01:45:51.526732",
			"approval": false
		}
	],
	"owner_email": "mikespook@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikespook",
	"subject": "code review 5706047: database/sql/driver: add a argument to sql.Open and Dri...",
	"created": "2012-02-28 16:29:31.648197",
	"patchsets": [
		2001,
		3004
	],
	"modified": "2012-04-28 05:36:19.257222",
	"closed": true,
	"issue": 5706047
}