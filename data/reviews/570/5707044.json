{
	"description": "net/rpc: API changes, all documentation\nexcept for hiding one type that is only used internally.\n\nFixes issue 2944.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"kevlar@google.com"
	],
	"reviewers": [
		"r@google.com"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"kevlar@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b1838c15bcfa ***\n\nnet/rpc: API changes, all documentation\nexcept for hiding one type that is only used internally.\n\nFixes issue 2944.\n\nR=golang-dev, rsc, kevlar\nCC=golang-dev\nhttp://codereview.appspot.com/5707044",
			"disapproval": false,
			"date": "2012-02-28 20:34:34.510578",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-02-28 09:28:01.991808",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 29/02/2012, at 5:13 AM, Kyle Lemons wrote:\n\n> FYI\n> \n> Could a codec not need this type to be able to encode or skip an empty message?\n> \n> On Tue, Feb 28, 2012 at 9:29 AM, <rsc@golang.org> wrote:\n> LGTM\n> \n> \n> \n> http://codereview.appspot.com/5707044/diff/2002/src/pkg/net/rpc/server.go\n> File src/pkg/net/rpc/server.go (right):\n> \n> http://codereview.appspot.com/5707044/diff/2002/src/pkg/net/rpc/server.go#newcode288\n> src/pkg/net/rpc/server.go:288: // Reply type must be exported/\n> s;/;.;\n> \n> http://codereview.appspot.com/5707044/\n> \n\nI don't understand the question.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-28 20:34:39.725172",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5707044/diff/2002/src/pkg/net/rpc/server.go\nFile src/pkg/net/rpc/server.go (right):\n\nhttp://codereview.appspot.com/5707044/diff/2002/src/pkg/net/rpc/server.go#newcode288\nsrc/pkg/net/rpc/server.go:288: // Reply type must be exported/\ns;/;.;",
			"disapproval": false,
			"date": "2012-02-28 17:29:52.328074",
			"approval": true
		},
		{
			"sender": "kevlar@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI\n\nCould a codec not need this type to be able to encode or skip an empty\nmessage?\n\nOn Tue, Feb 28, 2012 at 9:29 AM, <rsc@golang.org> wrote:\n\n> LGTM\n>\n>\n>\n> http://codereview.appspot.com/**5707044/diff/2002/src/pkg/net/**\n> rpc/server.go<http://codereview.appspot.com/5707044/diff/2002/src/pkg/net/rpc/server.go>\n> File src/pkg/net/rpc/server.go (right):\n>\n> http://codereview.appspot.com/**5707044/diff/2002/src/pkg/net/**\n> rpc/server.go#newcode288<http://codereview.appspot.com/5707044/diff/2002/src/pkg/net/rpc/server.go#newcode288>\n> src/pkg/net/rpc/server.go:288: // Reply type must be exported/\n> s;/;.;\n>\n> http://codereview.appspot.com/**5707044/<http://codereview.appspot.com/5707044/>\n>\n",
			"disapproval": false,
			"date": "2012-02-28 18:13:23.632775",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> Could a codec not need this type to be able to encode or skip an empty\n> message?\n\nno, it's fine.  only the rpc library uses that type.\n\nalso, just to confirm that *int reply does not cause a problem,\nthis program works.\n\npackage main\n\nimport (\n\t\"net\"\n\t\"log\"\n\t\"fmt\"\n\t\"net/http\"\n\t\"net/rpc\"\n)\n\ntype Args struct {\n\tA, B int\n}\n\ntype Arith int\n\nfunc (t *Arith) Multiply(args *Args, reply *int) error {\n\t*reply = args.A * args.B\n\treturn nil\n}\n\nfunc main() {\n\tarith := new(Arith)\n\trpc.Register(arith)\n\trpc.HandleHTTP()\n\tl, e := net.Listen(\"tcp\", \"localhost:1234\")\n\tif e != nil {\n\t\tlog.Fatal(\"listen error:\", e)\n\t}\n\tgo http.Serve(l, nil)\n\n\tclient, err := rpc.DialHTTP(\"tcp\", \"localhost:1234\")\n\tif err != nil {\n\t\tlog.Fatal(\"dialing:\", err)\n\t}\n\n\t// Synchronous call\n\targs := &Args{7, 8}\n\tvar reply int\n\terr = client.Call(\"Arith.Maltiply\", args, &reply)\n\tif err != nil {\n\t\tlog.Fatal(\"arith error:\", err)\n\t}\n\tfmt.Printf(\"Arith: %d*%d=%d\\n\", args.A, args.B, reply)\n}\n",
			"disapproval": false,
			"date": "2012-02-28 20:40:00.886349",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5707044: net/rpc: API changes, all documentation",
	"created": "2012-02-28 09:27:55.129470",
	"patchsets": [
		1,
		3001,
		2002,
		7001
	],
	"modified": "2012-02-28 20:34:39.874514",
	"closed": true,
	"issue": 5707044
}