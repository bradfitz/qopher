{
	"description": "cmd/dist, cmd/8g: implement GO386=387/sse to choose FPU flavour.\n\nA new environment variable GO386 is introduced to choose between\ncode generation targeting 387 or SSE2. No auto-detection is\nperformed and the setting defaults to 387 to preserve previous\nbehaviour.\n\nThe patch is a reorganization of CL6549052 by rsc.\n\nFixes issue 3912.",
	"cc": [
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The CL is a reorganization of http://codereview.appspot.com/6549052/",
			"disapproval": false,
			"date": "2012-12-19 21:18:00.461360",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "thank you. i will try to implement the auto detection part for cmd/dist.\r\n",
			"disapproval": false,
			"date": "2012-12-19 21:57:14.275150",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-12-19 21:16:53.156660",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i think you can get it from the cpuid w/ eax=1.\r\n",
			"disapproval": false,
			"date": "2012-12-20 19:23:52.312430",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can you create a global use_sse variable instead of the repeated strcmp calls? It probably doesn't matter but still...\n\nFor detecting SSE2 I think this will work with msvc and gcc (msvc provides __cpuid automatically):\n\n#include <stdio.h>\n\n#ifndef COMPILER_MSVC\nstatic void\n__cpuid(int dst[4], int ax)\n{\n\tasm volatile(\"cpuid\"\n\t\t: \"=a\" (dst[0]), \"=b\" (dst[1]), \"=c\" (dst[2]), \"=d\" (dst[3])\n\t\t: \"a\" (ax));\n}\n#endif\n\nint\nmain(void)\n{\n\tint info[4];\n\t\n\t__cpuid(info, 1);\n\tprintf(\"%#x\\n\", info[3] & (1<<26));\n\treturn 0;\n}\n\nhttps://codereview.appspot.com/6962043/diff/5002/src/cmd/8g/ggen.c\nFile src/cmd/8g/ggen.c (right):\n\nhttps://codereview.appspot.com/6962043/diff/5002/src/cmd/8g/ggen.c#newcode868\nsrc/cmd/8g/ggen.c:868: // floating-point.  387 (not SSE2) to interoperate with 8c\ns/ to interoperate with 8c//\nthat was never true, just a misunderstanding on my part (sse2 and 387 coexist, i was thinking of mmx).",
			"disapproval": false,
			"date": "2012-12-22 22:19:46.069830",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping...\r\n",
			"disapproval": false,
			"date": "2013-01-02 20:44:38.555360",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-02 21:40:23.143990",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI'd like to autodetect the default GO386 setting but we can do that in a separate CL.\n\nhttps://codereview.appspot.com/6962043/diff/5002/src/cmd/8g/ggen.c\nFile src/cmd/8g/ggen.c (right):\n\nhttps://codereview.appspot.com/6962043/diff/5002/src/cmd/8g/ggen.c#newcode868\nsrc/cmd/8g/ggen.c:868: // floating-point.  387 (not SSE2) to interoperate with 8c\nOn 2012/12/22 22:19:46, rsc wrote:\n> s/ to interoperate with 8c//\n> that was never true, just a misunderstanding on my part (sse2 and 387 coexist, i\n> was thinking of mmx).\n\nstill applies",
			"disapproval": false,
			"date": "2013-01-02 21:52:04.495330",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "thanks. i started the autodetect in CL 7035055.\r\n",
			"disapproval": false,
			"date": "2013-01-02 22:08:09.647960",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6962043/diff/5002/src/cmd/8g/ggen.c\nFile src/cmd/8g/ggen.c (right):\n\nhttps://codereview.appspot.com/6962043/diff/5002/src/cmd/8g/ggen.c#newcode868\nsrc/cmd/8g/ggen.c:868: // floating-point.  387 (not SSE2) to interoperate with 8c\nOn 2013/01/02 21:52:04, rsc wrote:\n> On 2012/12/22 22:19:46, rsc wrote:\n> > s/ to interoperate with 8c//\n> > that was never true, just a misunderstanding on my part (sse2 and 387 coexist,\n> i\n> > was thinking of mmx).\n> \n> still applies\n\nDone.",
			"disapproval": false,
			"date": "2013-01-02 21:54:58.189440",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=be005b410410 ***\n\ncmd/dist, cmd/8g: implement GO386=387/sse to choose FPU flavour.\n\nA new environment variable GO386 is introduced to choose between\ncode generation targeting 387 or SSE2. No auto-detection is\nperformed and the setting defaults to 387 to preserve previous\nbehaviour.\n\nThe patch is a reorganization of CL6549052 by rsc.\n\nFixes issue 3912.\n\nR=minux.ma, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/6962043",
			"disapproval": false,
			"date": "2013-01-02 21:56:01.047180",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 6962043: cmd/dist, cmd/8g: implement GO386=387/sse to choose FPU...",
	"created": "2012-12-18 23:47:29.125630",
	"patchsets": [
		1,
		2001,
		5001,
		5002,
		13001,
		31001,
		29003
	],
	"modified": "2013-01-02 22:05:51.658210",
	"closed": true,
	"issue": 6962043
}