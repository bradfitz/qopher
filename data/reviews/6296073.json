{
	"description": "misc/emacs: Replace replace-{string|regexp} for XEmacs compatible code\n\nUse code to be used in lisp programs as suggested in the doc strings for\nreplace-{string|regexp}. Bonus: This code works for XEmacs.",
	"cc": [
		"golang-dev@googlegroups.com",
		"sameer@golang.org",
		"jmeurin@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Jean-Marc, please review.\r\nOn Jun 13, 2012 7:52 PM, <mats.lidell@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> misc/emacs: Replace replace-{string|regexp} for XEmacs compatible code\r\n>\r\n> Use code to be used in lisp programs as suggested in the doc strings for\r\n> replace-{string|regexp}. Bonus: This code works for XEmacs.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6296073/<http://codereview.appspot.com/6296073/>\r\n>\r\n> Affected files:\r\n>  M misc/emacs/go-mode.el\r\n>\r\n>\r\n> Index: misc/emacs/go-mode.el\r\n> ==============================**==============================**=======\r\n> --- a/misc/emacs/go-mode.el\r\n> +++ b/misc/emacs/go-mode.el\r\n> @@ -819,8 +819,9 @@\r\n>   (require 'diff-mode)\r\n>   ;; apply all the patch hunks\r\n>   (with-current-buffer patchbuf\r\n> -    (replace-regexp \"^--- /tmp/gofmt[0-9]*\" (concat \"--- \" filename)\r\n> -                      nil (point-min) (point-max))\r\n> +    (goto-char (point-min))\r\n> +    (while (re-search-forward \"^--- /tmp/gofmt[0-9]*\" nil t)\r\n> +      (replace-match (concat \"--- \" filename) nil nil))\r\n>     (condition-case nil\r\n>         (while t\r\n>           (diff-hunk-next)\r\n> @@ -833,7 +834,8 @@\r\n>   (with-current-buffer errbuf\r\n>     (beginning-of-buffer)\r\n>     (insert \"gofmt errors:\\n\")\r\n> -    (replace-string gofmt-stdin-tag (file-name-nondirectory filename) nil\r\n> (point-min) (point-max))\r\n> +    (while (search-forward gofmt-stdin-tag nil t)\r\n> +      (replace-match (file-name-nondirectory filename) nil t))\r\n>     (display-buffer errbuf)\r\n>     (compilation-mode)))\r\n>\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-06-14 02:23:31.120106",
			"approval": false
		},
		{
			"sender": "jmeurin@google.com",
			"recipients": [
				"mats.lidell@gmail.com",
				"golang-dev@googlegroups.com",
				"sameer@golang.org",
				"jmeurin@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks, that was in my TODO list :-)\n\nJean-Marc\n\nhttp://codereview.appspot.com/6296073/diff/4001/misc/emacs/go-mode.el\nFile misc/emacs/go-mode.el (right):\n\nhttp://codereview.appspot.com/6296073/diff/4001/misc/emacs/go-mode.el#newcode823\nmisc/emacs/go-mode.el:823: (while (re-search-forward \"^--- /tmp/gofmt[0-9]*\" nil t)\nWe only want to replace the first instance, so you add 1 as the last argument.\n\nhttp://codereview.appspot.com/6296073/diff/4001/misc/emacs/go-mode.el#newcode824\nmisc/emacs/go-mode.el:824: (replace-match (concat \"--- \" filename) nil nil))\nLet's take full advantage of this and make a regexp group for the pseudo-filename in the search and only replace that part (IOW, get rid of the concat here)\n\nhttp://codereview.appspot.com/6296073/diff/4001/misc/emacs/go-mode.el#newcode835\nmisc/emacs/go-mode.el:835: (beginning-of-buffer)\nCan you replace this with the (goto-char (point-min)) too?\n\nhttp://codereview.appspot.com/6296073/diff/4001/misc/emacs/go-mode.el#newcode837\nmisc/emacs/go-mode.el:837: (while (search-forward gofmt-stdin-tag nil t)\nSame comment, let's just replace the first instance.",
			"disapproval": false,
			"date": "2012-06-14 04:40:13.041832",
			"approval": false
		},
		{
			"sender": "jmeurin@google.com",
			"recipients": [
				"mats.lidell@gmail.com",
				"golang-dev@googlegroups.com",
				"sameer@golang.org",
				"jmeurin@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-06-15 18:06:55.130512",
			"approval": true
		},
		{
			"sender": "mats.lidell@gmail.com",
			"recipients": [
				"mats.lidell@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-06-13 23:01:15.287113",
			"approval": false
		},
		{
			"sender": "mats.lidell@gmail.com",
			"recipients": [
				"mats.lidell@gmail.com",
				"golang-dev@googlegroups.com",
				"sameer@golang.org",
				"jmeurin@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, sameer@golang.org, jmeurin@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-15 07:42:36.158288",
			"approval": false
		},
		{
			"sender": "mats.lidell@gmail.com",
			"recipients": [
				"mats.lidell@gmail.com",
				"golang-dev@googlegroups.com",
				"sameer@golang.org",
				"jmeurin@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/06/15 18:06:55, jme wrote:\n> LGTM\n\nBeen waiting for a commit for some days now. Has this been forgotten or is there something else missing before a commit?",
			"disapproval": false,
			"date": "2012-06-21 08:50:35.467504",
			"approval": false
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "My fault, sorry. Will try to do this later today.\r\nOn Jun 21, 2012 1:50 AM, <mats.lidell@gmail.com> wrote:\r\n\r\n> On 2012/06/15 18:06:55, jme wrote:\r\n>\r\n>> LGTM\r\n>>\r\n>\r\n> Been waiting for a commit for some days now. Has this been forgotten or\r\n> is there something else missing before a commit?\r\n>\r\n>\r\n> https://codereview.appspot.**com/6296073/<https://codereview.appspot.com/6296073/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-06-21 12:52:48.142221",
			"approval": false
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"mats.lidell@gmail.com",
				"golang-dev@googlegroups.com",
				"sameer@golang.org",
				"jmeurin@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-06-21 17:01:50.447884",
			"approval": true
		},
		{
			"sender": "sameer@golang.org",
			"recipients": [
				"mats.lidell@gmail.com",
				"golang-dev@googlegroups.com",
				"sameer@golang.org",
				"jmeurin@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d730d2e4733d ***\n\nmisc/emacs: Replace replace-{string|regexp} for XEmacs compatible code\n\nUse code to be used in lisp programs as suggested in the doc strings for\nreplace-{string|regexp}. Bonus: This code works for XEmacs.\n\nR=golang-dev, sameer, jmeurin\nCC=golang-dev\nhttp://codereview.appspot.com/6296073\n\nCommitter: Sameer Ajmani <sameer@golang.org>",
			"disapproval": false,
			"date": "2012-06-21 17:03:26.253162",
			"approval": false
		}
	],
	"owner_email": "mats.lidell@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "matsl",
	"subject": "code review 6296073: misc/emacs: Replace replace-{string|regexp} for XEmacs ...",
	"created": "2012-06-13 22:59:53.555796",
	"patchsets": [
		1,
		2001,
		4001,
		3003
	],
	"modified": "2012-06-24 18:13:30.437834",
	"closed": true,
	"issue": 6296073
}