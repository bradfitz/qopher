{
	"description": "cmd/gc: must not inline panic, recover",
	"cc": [
		"lvd@google.com",
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"lvd@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello lvd (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-05 18:44:39.596471",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\n(I assume the reasons is that the stack doesn't contain the right frame?)\n\nOn Mon, Mar 5, 2012 at 10:44 AM,  <rsc@golang.org> wrote:\n> Reviewers: lvd,\n>\n> Message:\n> Hello lvd (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> cmd/gc: must not inline panic, recover\n>\n> Please review this at http://codereview.appspot.com/5731061/\n>\n> Affected files:\n> \u00a0M src/cmd/gc/inl.c\n> \u00a0M test/escape4.go\n>\n>\n> Index: src/cmd/gc/inl.c\n> ===================================================================\n> --- a/src/cmd/gc/inl.c\n> +++ b/src/cmd/gc/inl.c\n> @@ -182,6 +182,8 @@\n> \u00a0 \u00a0 \u00a0 \u00a0case OCALLFUNC:\n> \u00a0 \u00a0 \u00a0 \u00a0case OCALLINTER:\n> \u00a0 \u00a0 \u00a0 \u00a0case OCALLMETH:\n> + \u00a0 \u00a0 \u00a0 case OPANIC:\n> + \u00a0 \u00a0 \u00a0 case ORECOVER:\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if(debug['l'] < 4)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return 1;\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0break;\n> Index: test/escape4.go\n> ===================================================================\n> --- a/test/escape4.go\n> +++ b/test/escape4.go\n> @@ -31,3 +31,9 @@\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0f()\n> \u00a0}\n> +\n> +func f2() {} \u00a0// ERROR \"can inline f2\"\n> +\n> +// No inline for panic, recover.\n> +func f3() { panic(1) }\n> +func f4() { recover() }\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-05 18:47:43.816513",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"lvd@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=733971e543a2 ***\n\ncmd/gc: must not inline panic, recover\n\nR=lvd, gri\nCC=golang-dev\nhttp://codereview.appspot.com/5731061",
			"disapproval": false,
			"date": "2012-03-05 18:51:46.609541",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> (I assume the reasons is that the stack doesn't contain the right frame?)\n\nYes.  In general we don't inline things with calls;\nthese slipped through because they are special calls.\nIt is especially important not to inline recover, because\nits definition depends on the meaning of \"caller\".\n\nRuss\n",
			"disapproval": false,
			"date": "2012-03-05 18:51:32.714945",
			"approval": false
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Mon, Mar 5, 2012 at 19:51, <rsc@golang.org> wrote:\n\n> *** Submitted as\n> http://code.google.com/p/go/**source/detail?r=733971e543a2<http://code.google.com/p/go/source/detail?r=733971e543a2>***\n>\n>\n> cmd/gc: must not inline panic, recover\n>\n> R=lvd, gri\n> CC=golang-dev\n> http://codereview.appspot.com/**5731061<http://codereview.appspot.com/5731061>\n>\n>\n> http://codereview.appspot.com/**5731061/<http://codereview.appspot.com/5731061/>\n>\n",
			"disapproval": false,
			"date": "2012-03-05 19:09:18.536114",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5731061: cmd/gc: must not inline panic, recover",
	"created": "2012-03-05 18:44:16.250990",
	"patchsets": [
		1,
		1001,
		2003,
		3001,
		2004
	],
	"modified": "2012-03-05 18:51:48.339932",
	"closed": true,
	"issue": 5731061
}