{
	"description": "net/http: reduce mutex contention\nbenchmark                           old ns/op    new ns/op    delta\nBenchmarkClientServerParallel          155909       154454   -0.93%\nBenchmarkClientServerParallel-2         86012        82986   -3.52%\nBenchmarkClientServerParallel-4         70211        55168  -21.43%\nBenchmarkClientServerParallel-8         80755        47862  -40.73%\nBenchmarkClientServerParallel-12        77753        51478  -33.79%\nBenchmarkClientServerParallel-16        77920        50278  -35.47%\nThe benchmark is http://codereview.appspot.com/6441134\nThe machine is 2 x 4 HT cores (16 HW threads total).\nFixes issue 3946.\nNow contention moves to net.pollServer.AddFD().",
	"cc": [
		"bradfitz@golang.org",
		"dave@cheney.net",
		"dsymonds@golang.org",
		"gobot@golang.org",
		"golang-dev@googlegroups.com",
		"remyoudompheng@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=dsymonds (assigned by bradfitz)",
			"disapproval": false,
			"date": "2012-08-20 06:16:36.999540",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"dsymonds@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=bradfitz (assigned by bradfitz)",
			"disapproval": false,
			"date": "2012-08-20 06:21:01.544080",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: dave@cheney.net, golang-dev@googlegroups.com, remyoudompheng@gmail.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-08-13 11:31:30.501990",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/13 11:41:53, dfc wrote:\n> Looks pretty good to me. Can you post the new contention graph somewhere ?\n\nAttached to the bug\nhttp://code.google.com/p/go/issues/detail?id=3946\n\n> http://codereview.appspot.com/6454142/diff/3003/src/pkg/net/http/transport.go\n> File src/pkg/net/http/transport.go (right):\n> \n> http://codereview.appspot.com/6454142/diff/3003/src/pkg/net/http/transport.go#newcode262\n> src/pkg/net/http/transport.go:262: t.idleConn = make(map[string][]*persistConn)\n> Can this move back to the end of CloseIdleConnctions so the lock isn't held\n> during allocation?\n\nIs it expected case? I think it must be non-nil most of the time.",
			"disapproval": false,
			"date": "2012-08-13 12:01:44.275830",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you. \r\n\r\nOn 20/08/2012, at 19:24, dvyukov@google.com wrote:\r\n\r\n> *** Submitted as\r\n> http://code.google.com/p/go/source/detail?r=43568ec5cf55 ***\r\n> \r\n> net/http: reduce mutex contention\r\n> benchmark                           old ns/op    new ns/op    delta\r\n> BenchmarkClientServerParallel          155909       154454   -0.93%\r\n> BenchmarkClientServerParallel-2         86012        82986   -3.52%\r\n> BenchmarkClientServerParallel-4         70211        55168  -21.43%\r\n> BenchmarkClientServerParallel-8         80755        47862  -40.73%\r\n> BenchmarkClientServerParallel-12        77753        51478  -33.79%\r\n> BenchmarkClientServerParallel-16        77920        50278  -35.47%\r\n> The benchmark is http://codereview.appspot.com/6441134\r\n> The machine is 2 x 4 HT cores (16 HW threads total).\r\n> Fixes issue 3946.\r\n> Now contention moves to net.pollServer.AddFD().\r\n> \r\n> R=bradfitz\r\n> CC=bradfitz, dave, dsymonds, gobot, golang-dev, remyoudompheng\r\n> http://codereview.appspot.com/6454142\r\n> \r\n> \r\n> http://codereview.appspot.com/6454142/\r\n",
			"disapproval": false,
			"date": "2012-08-20 09:27:40.700270",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks pretty good to me. Can you post the new contention graph somewhere ?\n\nhttp://codereview.appspot.com/6454142/diff/3003/src/pkg/net/http/transport.go\nFile src/pkg/net/http/transport.go (right):\n\nhttp://codereview.appspot.com/6454142/diff/3003/src/pkg/net/http/transport.go#newcode262\nsrc/pkg/net/http/transport.go:262: t.idleConn = make(map[string][]*persistConn)\nCan this move back to the end of CloseIdleConnctions so the lock isn't held during allocation?",
			"disapproval": false,
			"date": "2012-08-13 11:41:53.423500",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks trivial enough to me.",
			"disapproval": false,
			"date": "2012-08-18 09:38:06.401010",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6454142/diff/3003/src/pkg/net/http/transport.go\nFile src/pkg/net/http/transport.go (right):\n\nhttp://codereview.appspot.com/6454142/diff/3003/src/pkg/net/http/transport.go#newcode136\nsrc/pkg/net/http/transport.go:136: t.altLk.Lock()\nwhy not RLock here?",
			"disapproval": false,
			"date": "2012-08-20 05:59:22.465910",
			"approval": true
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=gri (assigned by bradfitz)",
			"disapproval": false,
			"date": "2012-08-20 06:16:36.687750",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=dsymonds (assigned by bradfitz)",
			"disapproval": false,
			"date": "2012-08-20 06:16:37.999910",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"dsymonds@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6454142/diff/3003/src/pkg/net/http/transport.go\nFile src/pkg/net/http/transport.go (right):\n\nhttp://codereview.appspot.com/6454142/diff/3003/src/pkg/net/http/transport.go#newcode136\nsrc/pkg/net/http/transport.go:136: t.altLk.Lock()\nOn 2012/08/20 05:59:22, bradfitz wrote:\n> why not RLock here?\n\nDone.",
			"disapproval": false,
			"date": "2012-08-20 09:24:05.130560",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"dsymonds@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"remyoudompheng@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=43568ec5cf55 ***\n\nnet/http: reduce mutex contention\nbenchmark                           old ns/op    new ns/op    delta\nBenchmarkClientServerParallel          155909       154454   -0.93%\nBenchmarkClientServerParallel-2         86012        82986   -3.52%\nBenchmarkClientServerParallel-4         70211        55168  -21.43%\nBenchmarkClientServerParallel-8         80755        47862  -40.73%\nBenchmarkClientServerParallel-12        77753        51478  -33.79%\nBenchmarkClientServerParallel-16        77920        50278  -35.47%\nThe benchmark is http://codereview.appspot.com/6441134\nThe machine is 2 x 4 HT cores (16 HW threads total).\nFixes issue 3946.\nNow contention moves to net.pollServer.AddFD().\n\nR=bradfitz\nCC=bradfitz, dave, dsymonds, gobot, golang-dev, remyoudompheng\nhttp://codereview.appspot.com/6454142",
			"disapproval": false,
			"date": "2012-08-20 09:24:33.394700",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 6454142: net/http: reduce mutex contention",
	"created": "2012-08-13 10:51:29.351380",
	"patchsets": [
		1,
		2001,
		1004,
		5001,
		3003,
		7003,
		5003
	],
	"modified": "2012-08-20 16:49:28.600630",
	"closed": true,
	"issue": 6454142
}