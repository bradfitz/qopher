{
	"description": "cmd/gc: recognize u<<1 op u>>31 as a rotate when op is ^, not just |.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-31 13:17:31.966750",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The change is fine but it needs to be tested.\r\n    cd $GOROOT/test; ./run\r\n(but not all.bash) runs the output of test/rotate.go.\r\nPlease add ^ tests there.\r\n\r\nThanks.\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-05-31 13:42:51.355457",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 31 May 2012 23:42, Russ Cox <rsc@golang.org> wrote:\r\n> The change is fine but it needs to be tested.\r\n> \u00a0 \u00a0cd $GOROOT/test; ./run\r\n> (but not all.bash) runs the output of test/rotate.go.\r\n\r\nOn my laptop (2GB ram), running 6g on the 45KLOC output of\r\ntest/rotate.go causes so much swapping (in addition to writing a 28MB\r\n.6 file) that my X server goes unresponsive for around 3 minutes.\r\n\r\nShould this CL also change test/rotate.go to be less comprehensive?\r\n",
			"disapproval": false,
			"date": "2012-05-31 22:19:28.001419",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, May 31, 2012 at 6:19 PM, Nigel Tao <nigeltao@golang.org> wrote:\r\n> On my laptop (2GB ram), running 6g on the 45KLOC output of\r\n> test/rotate.go causes so much swapping (in addition to writing a 28MB\r\n> .6 file) that my X server goes unresponsive for around 3 minutes.\r\n>\r\n> Should this CL also change test/rotate.go to be less comprehensive?\r\n\r\nMaybe, but I'd rather not.  It has caught mistakes I would not have\r\nexpected, which makes me hesitant to throwaway tests that I think\r\naren't going to help. Does compiling with -N help at all?\r\n\r\nWe've never bothered with 6g memory usage but if you'd like to look\r\ninto that (maybe compile the C++ google-perftools and run with it)\r\nthat'd be fine.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-06-02 17:15:19.026800",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.",
			"disapproval": false,
			"date": "2012-06-03 12:01:03.949087",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6249071/diff/9001/test/rotate.go\nFile test/rotate.go (right):\n\nhttp://codereview.appspot.com/6249071/diff/9001/test/rotate.go#newcode125\ntest/rotate.go:125: uop, iop, opc := uor, ior, '|'\nNice.\n\nhttp://codereview.appspot.com/6249071/diff/9001/test/rotate.go#newcode126\ntest/rotate.go:126: if rand.Intn(2) == 0 {\nI had intended this to be an exhaustive test. Using rand here avoids creating more tests but drops the coverage by half. Instead of this, can you make a new loop above, inside the existing two:\n\nfor op := 0; op < 2; op++ {\n\nand then here if op == 1 {\n\nIf this causes memory usage problems I'd prefer to address them separately.",
			"disapproval": false,
			"date": "2012-06-03 14:35:07.969040",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-06-03 23:54:49.254653",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6249071/diff/9001/test/rotate.go\nFile test/rotate.go (right):\n\nhttp://codereview.appspot.com/6249071/diff/9001/test/rotate.go#newcode126\ntest/rotate.go:126: if rand.Intn(2) == 0 {\nOn 2012/06/03 14:35:08, rsc wrote:\n> I had intended this to be an exhaustive test. Using rand here avoids creating\n> more tests but drops the coverage by half. Instead of this, can you make a new\n> loop above, inside the existing two:\n> \n> for op := 0; op < 2; op++ {\n> \n> and then here if op == 1 {\n> \n> If this causes memory usage problems I'd prefer to address them separately.\n\nDone.",
			"disapproval": false,
			"date": "2012-06-03 23:15:26.651516",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d7bde549faa9 ***\n\ncmd/gc: recognize u<<1 op u>>31 as a rotate when op is ^, not just |.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6249071",
			"disapproval": false,
			"date": "2012-06-04 10:53:53.170590",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6249071: cmd/gc: recognize u<<1 op u>>31 as a rotate when op is ...",
	"created": "2012-05-31 13:16:44.205460",
	"patchsets": [
		1,
		1002,
		4001,
		9001,
		14001,
		18001
	],
	"modified": "2012-06-04 10:54:05.548131",
	"closed": true,
	"issue": 6249071
}