{
	"description": "encoding/json: document unmarshalling of lowercase keys\r\n\r\nFixes issue 4664.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-21 08:32:41.127300",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Should the description read: document that unexported fields are ignored ?\r\n\r\nOn 21/01/2013, at 19:32, adg@golang.org wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n> \r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n> \r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n> \r\n> \r\n> Description:\r\n> encoding/json: document unmarshalling of lowercase keys\r\n> \r\n> Fixes issue 4664.\r\n> \r\n> Please review this at https://codereview.appspot.com/7106053/\r\n> \r\n> Affected files:\r\n>  M src/pkg/encoding/json/decode.go\r\n> \r\n> \r\n> Index: src/pkg/encoding/json/decode.go\r\n> ===================================================================\r\n> --- a/src/pkg/encoding/json/decode.go\r\n> +++ b/src/pkg/encoding/json/decode.go\r\n> @@ -45,6 +45,11 @@\r\n> //    map[string]interface{}, for JSON objects\r\n> //    nil for JSON null\r\n> //\r\n> +// When unmarshalling a JSON object into a struct, each key in the JSON object\r\n> +// is matched to a struct field by struct tag (`json:\"Foo\"`), then by matching\r\n> +// the exact field name (Foo), and finally by a case-insensitive match of the\r\n> +// field name (FOO, FoO, etc). Unexported fields are ignored.\r\n> +//\r\n> // If a JSON value is not appropriate for a given target type,\r\n> // or if a JSON number overflows the target type, Unmarshal\r\n> // skips that field and completes the unmarshalling as best it can.\r\n> \r\n> \r\n",
			"disapproval": false,
			"date": "2013-01-21 08:35:09.374650",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 21 January 2013 19:35, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> Should the description read: document that unexported fields are ignored ?\r\n\r\n\r\nIt probably should. Also they're not ignored, yet. That's waiting on\r\n7139049.\r\n",
			"disapproval": false,
			"date": "2013-01-21 08:37:23.247390",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=closed\n\nFixed by a different CL already.",
			"disapproval": false,
			"date": "2013-06-04 22:00:30.787670",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 7106053: encoding/json: document unmarshalling of lowercase keys",
	"created": "2013-01-21 08:32:31.157140",
	"patchsets": [
		1
	],
	"modified": "2013-07-23 22:37:31.420920",
	"closed": true,
	"issue": 7106053
}