{
	"description": "cmd/5l: reduce the size of Prog and Sym\n\nProg\n* Remove the unused Prog* dlink\n* note that align is also unused, but removing it does not help due to alignment issues.\n\nSaves 4 bytes, sizeof(Prog): 84 => 80.\n\nSym\n* Align {u,}char fields on word boundaries\n\nSaves 4 bytes, sizeof(Sym): 136 => 132.\n\nTested on linux/arm and freebsd/arm.",
	"cc": [
		"minux.ma@gmail.com",
		"remyoudompheng@gmail.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Are you talking about the lack of proper dwarf symbols on arm ? If so,\r\ncould we add this field back at the point someone is working on that?\r\nOn 15 Jan 2013 21:30, <minux.ma@gmail.com> wrote:\r\n\r\n>\r\n> https://codereview.appspot.**com/7106050/diff/4004/src/cmd/**5l/l.h<https://codereview.appspot.com/7106050/diff/4004/src/cmd/5l/l.h>\r\n> File src/cmd/5l/l.h (left):\r\n>\r\n> https://codereview.appspot.**com/7106050/diff/4004/src/cmd/**\r\n> 5l/l.h#oldcode77<https://codereview.appspot.com/7106050/diff/4004/src/cmd/5l/l.h#oldcode77>\r\n> src/cmd/5l/l.h:77: Sym* gotype;\r\n> i think gotype is needed if we want to generate\r\n> DWARF debuginfo with correct variable typing.\r\n>\r\n> https://codereview.appspot.**com/7106050/<https://codereview.appspot.com/7106050/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-15 10:52:04.962690",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks. Maybe by that time other savings will have materialised to make the\r\nsize of Prog less important. Oh, and ponies.\r\nOn 15 Jan 2013 21:59, \"minux\" <minux.ma@gmail.com> wrote:\r\n\r\n>\r\n> On Tue, Jan 15, 2013 at 6:52 PM, Dave Cheney <dave@cheney.net> wrote:\r\n>\r\n>> Are you talking about the lack of proper dwarf symbols on arm ? If so,\r\n>> could we add this field back at the point someone is working on that?\r\n>>\r\n> Yes. Sure.\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-15 11:00:42.637870",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=9dacae220eca ***\n\ncmd/5l: reduce the size of Prog and Sym\n\nProg\n* Remove the unused Prog* dlink\n* note that align is also unused, but removing it does not help due to alignment issues.\n\nSaves 4 bytes, sizeof(Prog): 84 => 80.\n\nSym\n* Align {u,}char fields on word boundaries\n\nSaves 4 bytes, sizeof(Sym): 136 => 132.\n\nTested on linux/arm and freebsd/arm.\n\nR=minux.ma, remyoudompheng, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7106050",
			"disapproval": false,
			"date": "2013-01-20 09:14:37.254990",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, remyoudompheng@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-15 10:25:14.909760",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com, remyoudompheng@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-15 09:58:56.937100",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jan 15, 2013 at 5:58 PM, <dave@cheney.net> wrote:\r\n\r\n> Saves 4 bytes, under gcc sizeof(Sym): 136 => 132. Under clang 3.2 on\r\n> freebsd the size of Sym *increased* from 128 => 132, which I *think* is\r\n>\r\nI've tested latest version of clang on Linux/ARM, and sizeof(Sym) correctly\r\nshrink from 136 bytes to 132 bytes.\r\n\r\nI don't think FreeBSD/ARM should have any deviation from this.\r\n\r\n> due to freebsd using the armv6 model, and gcc probably using armv4t, so\r\n> will not allow unaligned shorts and words.\r\n\r\nby default, clang shouldn't use unaligned load/stores, and should align\r\nall fields to its natural alignment, so I don't understand why clang is able\r\nto pack the old Sym structure into 128 bytes while gcc can't.\r\n",
			"disapproval": false,
			"date": "2013-01-15 10:21:00.673830",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7106050/diff/4004/src/cmd/5l/l.h\nFile src/cmd/5l/l.h (left):\n\nhttps://codereview.appspot.com/7106050/diff/4004/src/cmd/5l/l.h#oldcode77\nsrc/cmd/5l/l.h:77: Sym*\tgotype;\ni think gotype is needed if we want to generate\nDWARF debuginfo with correct variable typing.",
			"disapproval": false,
			"date": "2013-01-15 10:30:56.296410",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please hold off, I think I've found an additional 8 unused bytes in Prog.\r\n\r\nOn Tue, Jan 15, 2013 at 8:58 PM,  <dave@cheney.net> wrote:\r\n> Reviewers: minux, remyoudompheng, rsc,\r\n>\r\n> Message:\r\n> Hello minux.ma@gmail.com, remyoudompheng@gmail.com, rsc@golang.org (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> cmd/5l: reduce the size of Prog and Sym\r\n>\r\n> Prog\r\n> * Remove the unused Prog* dlink\r\n> * note that align is also unused, but removing it does not help due to\r\n> alignment issues.\r\n>\r\n> Saves 4 bytes, sizeof(Prog): 84 => 80\r\n>\r\n> Sym\r\n> * Align {u,}char fields on word boundaries\r\n>\r\n> Saves 4 bytes, under gcc sizeof(Sym): 136 => 132. Under clang 3.2 on\r\n> freebsd the size of Sym *increased* from 128 => 132, which I *think* is\r\n> due to freebsd using the armv6 model, and gcc probably using armv4t, so\r\n> will not allow unaligned shorts and words. I think on balance this is\r\n> probably a fair tradeoff as unaligned access on arm is not free.\r\n>\r\n> Tested on linux/arm and freebsd/arm.\r\n>\r\n> Please review this at https://codereview.appspot.com/7106050/\r\n>\r\n> Affected files:\r\n>   M src/cmd/5l/l.h\r\n>\r\n>\r\n> Index: src/cmd/5l/l.h\r\n> ===================================================================\r\n> --- a/src/cmd/5l/l.h\r\n> +++ b/src/cmd/5l/l.h\r\n> @@ -108,7 +108,6 @@\r\n>         } u0;\r\n>         Prog*   cond;\r\n>         Prog*   link;\r\n> -       Prog*   dlink;\r\n>         int32   pc;\r\n>         int32   line;\r\n>         int32   spadj;\r\n> @@ -117,7 +116,7 @@\r\n>         uchar   as;\r\n>         uchar   scond;\r\n>         uchar   reg;\r\n> -       uchar   align;\r\n> +       uchar   align;  // unused\r\n>  };\r\n>\r\n>  #define        regused u0.u0regused\r\n> @@ -136,8 +135,6 @@\r\n>         uchar   reachable;\r\n>         uchar   dynexport;\r\n>         uchar   leaf;\r\n> -       uchar   stkcheck;\r\n> -       uchar   hide;\r\n>         int32   dynid;\r\n>         int32   plt;\r\n>         int32   got;\r\n> @@ -148,6 +145,8 @@\r\n>         int32   elfsym;\r\n>         uchar   special;\r\n>         uchar   fnptr;  // used as fn ptr\r\n> +       uchar   stkcheck;\r\n> +       uchar   hide;\r\n>         Sym*    hash;   // in hash table\r\n>         Sym*    allsym; // in all symbol list\r\n>         Sym*    next;   // in text or data list\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-15 10:07:41.109520",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I've found another 8 bytes that can be saved. Here is a before / after\r\ncomparison of 5l linking godoc.\r\n\r\nBefore:\r\n\r\n        Command being timed: \"/home/dfc/go/pkg/tool/linux_arm/5l -o\r\n/tmp/go-build464152087/cmd/godoc/_obj/a.out -L /tmp/go-build464152087\r\n/tmp/go-build464152087/cmd/godoc.a\"\r\n        User time (seconds): 4.11\r\n        System time (seconds): 0.33\r\n        Percent of CPU this job got: 99%\r\n        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:04.46\r\n        Average shared text size (kbytes): 0\r\n        Average unshared data size (kbytes): 0\r\n        Average stack size (kbytes): 0\r\n        Average total size (kbytes): 0\r\n        Maximum resident set size (kbytes): 113964\r\n        Average resident set size (kbytes): 0\r\n        Major (requiring I/O) page faults: 0\r\n        Minor (reclaiming a frame) page faults: 28684\r\n        Voluntary context switches: 1\r\n        Involuntary context switches: 186\r\n        Swaps: 0\r\n        File system inputs: 0\r\n        File system outputs: 0\r\n        Socket messages sent: 0\r\n        Socket messages received: 0\r\n        Signals delivered: 0\r\n        Page size (bytes): 4096\r\n        Exit status: 0\r\n\r\nAfter:\r\n\r\n        Command being timed: \"/home/dfc/go/pkg/tool/linux_arm/5l -o\r\n/tmp/go-build464152087/cmd/godoc/_obj/a.out -L /tmp/go-build464152087\r\n/tmp/go-build464152087/cmd/godoc.a\"\r\n        User time (seconds): 3.89\r\n        System time (seconds): 0.31\r\n        Percent of CPU this job got: 99%\r\n        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:04.20\r\n        Average shared text size (kbytes): 0\r\n        Average unshared data size (kbytes): 0\r\n        Average stack size (kbytes): 0\r\n        Average total size (kbytes): 0\r\n        Maximum resident set size (kbytes): 99432\r\n        Average resident set size (kbytes): 0\r\n        Major (requiring I/O) page faults: 0\r\n        Minor (reclaiming a frame) page faults: 25051\r\n        Voluntary context switches: 0\r\n        Involuntary context switches: 21\r\n        Swaps: 0\r\n        File system inputs: 0\r\n        File system outputs: 0\r\n        Socket messages sent: 0\r\n        Socket messages received: 0\r\n        Signals delivered: 0\r\n        Page size (bytes): 4096\r\n        Exit status: 0\r\n\r\n14mb saved, not too shabby.\r\n\r\nOn Tue, Jan 15, 2013 at 9:20 PM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n>\r\n> On Tue, Jan 15, 2013 at 5:58 PM, <dave@cheney.net> wrote:\r\n>>\r\n>> Saves 4 bytes, under gcc sizeof(Sym): 136 => 132. Under clang 3.2 on\r\n>> freebsd the size of Sym *increased* from 128 => 132, which I *think* is\r\n>\r\n> I've tested latest version of clang on Linux/ARM, and sizeof(Sym) correctly\r\n> shrink from 136 bytes to 132 bytes.\r\n>\r\n> I don't think FreeBSD/ARM should have any deviation from this.\r\n>>\r\n>> due to freebsd using the armv6 model, and gcc probably using armv4t, so\r\n>> will not allow unaligned shorts and words.\r\n>\r\n> by default, clang shouldn't use unaligned load/stores, and should align\r\n> all fields to its natural alignment, so I don't understand why clang is able\r\n> to pack the old Sym structure into 128 bytes while gcc can't.\r\n",
			"disapproval": false,
			"date": "2013-01-15 10:24:06.041730",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jan 15, 2013 at 6:52 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> Are you talking about the lack of proper dwarf symbols on arm ? If so,\r\n> could we add this field back at the point someone is working on that?\r\n>\r\nYes. Sure.\r\n",
			"disapproval": false,
			"date": "2013-01-15 10:59:33.312670",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Did you find out why clang on FreeBSD is able to pack our struct smaller\r\nthan gcc on Linux/ARM?\r\n",
			"disapproval": false,
			"date": "2013-01-15 18:45:02.266350",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/15 18:45:02, minux wrote:\n> Did you find out why clang on FreeBSD is able to pack our struct smaller\n> than gcc on Linux/ARM?\n\nI cannot replicate the original sizeof(Sym) => 128 result, I must have made a mistake originally. I have updated the description to remove this incorrect statement.",
			"disapproval": false,
			"date": "2013-01-15 23:27:06.632970",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2013-01-16 10:49:09.410960",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7106050/diff/4004/src/cmd/5l/l.h\nFile src/cmd/5l/l.h (left):\n\nhttps://codereview.appspot.com/7106050/diff/4004/src/cmd/5l/l.h#oldcode77\nsrc/cmd/5l/l.h:77: Sym*\tgotype;\nOn 2013/01/15 10:30:56, minux wrote:\n> i think gotype is needed if we want to generate\n> DWARF debuginfo with correct variable typing.\n\nplease keep gotype.",
			"disapproval": false,
			"date": "2013-01-18 21:06:17.984990",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": ">> i think gotype is needed if we want to generate\r\n>> DWARF debuginfo with correct variable typing.\r\n>\r\n>\r\n> please keep gotype.\r\n\r\nOf the 12 bytes save, dropping the pair of unused (at the moment)\r\ngotype fields is 8 bytes. I know they may be useful in the future, but\r\nright now the cost 10% of the memory footprint when linking godoc.\r\n",
			"disapproval": false,
			"date": "2013-01-18 21:18:32.177670",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I expect it to be important in the near future. I don't want to make\r\nsomething better only to have to undo it later.\r\nI have some other ideas for making the linker memory footprint go down.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-18 21:22:14.222730",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "fair enough, that is good to know.\r\n\r\nCurrently these two defines\r\n\r\n#define datasize        reg\r\n#define textflag        reg\r\n\r\nuse the otherwise unsed (I belive) Prog.reg field. If they could be\r\nmoved somewhere else, Prog.reg and Prog.align (also unused) could move\r\nremoved from the struct, which would save a word due to alignment.\r\n\r\nOn Sat, Jan 19, 2013 at 8:22 AM, Russ Cox <rsc@golang.org> wrote:\r\n> I expect it to be important in the near future. I don't want to make\r\n> something better only to have to undo it later.\r\n> I have some other ideas for making the linker memory footprint go down.\r\n>\r\n> Russ\r\n",
			"disapproval": false,
			"date": "2013-01-18 21:23:58.397680",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 7106050: cmd/5l: reduce the size of Prog and Sym",
	"created": "2013-01-15 06:26:19.956860",
	"patchsets": [
		1,
		2001,
		5001,
		6001,
		20001,
		9002
	],
	"modified": "2013-01-20 11:01:14.720800",
	"closed": true,
	"issue": 7106050
}