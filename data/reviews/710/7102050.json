{
	"description": "cmd/vet: don't complain about Error()\nFixes issue 4598.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Add a test case?\r\n",
			"disapproval": false,
			"date": "2013-01-12 01:33:58.022630",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jan 12, 2013 at 9:33 AM, David Symonds <dsymonds@golang.org> wrote:\r\n\r\n> Add a test case?\r\n>\r\nCan we make vet output this warning by default?\r\nthen I can use existing errchk to write a test case for it.\r\n\r\nOr alternatively, we add a flag to suppress the output the \"Checking file\r\nsomefile.go\"?\r\n",
			"disapproval": false,
			"date": "2013-01-12 08:23:13.340820",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\r\n\r\nOn Sat, Jan 12, 2013 at 11:45 AM, <r@golang.org> wrote:\r\n\r\n> https://codereview.appspot.**com/7102050/diff/5001/src/cmd/**\r\n> vet/print.go#newcode256<https://codereview.appspot.com/7102050/diff/5001/src/cmd/vet/print.go#newcode256>\r\n> src/cmd/vet/print.go:256: if *verbose && !isLn && name != \"Error\" {\r\n> this isn't the right fix but will almost always work correctly because\r\n>\r\nI agree. I originally think we can delay fixing this until go/types is\r\nready, however\r\nas Russ pointed out, err.Error() is too common a pattern to ignore.\r\n\r\n> calling Error() with no arguments in any other context is just bizarre.\r\n> still, add:\r\n>\r\n> // TODO: check that the receiver is of type error.\r\n>\r\nDone.\r\n\r\nI will re-open the issue after submitting and change its summary to\r\nfix this TODO.\r\n",
			"disapproval": false,
			"date": "2013-01-12 08:29:15.196100",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-12 00:47:19.290130",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7102050/diff/5001/src/cmd/vet/print.go\nFile src/cmd/vet/print.go (right):\n\nhttps://codereview.appspot.com/7102050/diff/5001/src/cmd/vet/print.go#newcode256\nsrc/cmd/vet/print.go:256: if *verbose && !isLn && name != \"Error\" {\nthis isn't the right fix but will almost always work correctly because calling Error() with no arguments in any other context is just bizarre. still, add:\n\n// TODO: check that the receiver is of type error.",
			"disapproval": false,
			"date": "2013-01-12 03:45:16.108220",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jan 12, 2013 at 7:22 PM, minux <minux.ma@gmail.com> wrote:\r\n\r\n> On Sat, Jan 12, 2013 at 9:33 AM, David Symonds <dsymonds@golang.org> wrote:\r\n>>\r\n>> Add a test case?\r\n>\r\n> Can we make vet output this warning by default?\r\n> then I can use existing errchk to write a test case for it.\r\n>\r\n> Or alternatively, we add a flag to suppress the output the \"Checking file\r\n> somefile.go\"?\r\n\r\nAah, I missed it was conditioned on *verbose. Don't worry about it then.\r\n",
			"disapproval": false,
			"date": "2013-01-12 08:43:24.875350",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?",
			"disapproval": false,
			"date": "2013-01-17 10:46:11.680520",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7102050/diff/2002/src/cmd/vet/print.go\nFile src/cmd/vet/print.go (right):\n\nhttps://codereview.appspot.com/7102050/diff/2002/src/cmd/vet/print.go#newcode257\nsrc/cmd/vet/print.go:257: if *verbose && !isLn && name != \"Error\" {\nthe *verbose on line 96 misuses the flag, and so does this.\n-v is a shortcut for enabling all the flags. it's a bad idea to also make it be more chatty because it means i can't ask for printf-checking alone and get all the output.\n\nplease flag line 96 as 'TODO: incorrect use of verbose flag' and delete the reference to it here. that will make it always print and it's then easy to write a test.\n\nin a separate CL we can sort out line 96, although i'd LGTM a CL to delete the condition right now.",
			"disapproval": false,
			"date": "2013-01-17 16:46:48.915540",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "disregard previous mail. i conflated -all and -v.\r\n\r\nlet's try again.\r\n\r\ni'm happy with dropping the verbose check here and thereby enabling a test.\r\n",
			"disapproval": false,
			"date": "2013-01-17 16:52:53.077690",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c4b848378922 ***\n\ncmd/vet: don't complain about Error()\nFixes issue 4598.\n\nR=golang-dev, dsymonds, r\nCC=golang-dev\nhttps://codereview.appspot.com/7102050",
			"disapproval": false,
			"date": "2013-01-17 18:24:26.604660",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\nRemoved the *verbose guard for this check and added a\ntest case.",
			"disapproval": false,
			"date": "2013-01-17 17:05:50.249320",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-17 18:20:45.274060",
			"approval": true
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 7102050: cmd/vet: don't complain about Error()",
	"created": "2013-01-12 00:45:21.102470",
	"patchsets": [
		1,
		2001,
		5001,
		2002,
		15001,
		24001
	],
	"modified": "2013-01-17 18:24:30.930520",
	"closed": true,
	"issue": 7102050
}