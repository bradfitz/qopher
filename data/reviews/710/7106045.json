{
	"description": "xml: Support fields not of type []byte when marshaling \",chardata\"\n\nFixes issue 4506.",
	"cc": [
		"rsc@golang.org",
		"remyoudompheng@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "vegacom@gmail.com",
			"recipients": [
				"vegacom@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The first patch lacked support for time.Time.\n\nIt's added in this latest version.",
			"disapproval": false,
			"date": "2013-01-15 13:40:29.664200",
			"approval": false
		},
		{
			"sender": "vegacom@gmail.com",
			"recipients": [
				"vegacom@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-14 13:45:25.526170",
			"approval": false
		},
		{
			"sender": "vegacom@gmail.com",
			"recipients": [
				"vegacom@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-15 13:39:30.199140",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"vegacom@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks good, thanks.\n\nhttps://codereview.appspot.com/7106045/diff/6004/src/pkg/encoding/xml/marshal.go\nFile src/pkg/encoding/xml/marshal.go (right):\n\nhttps://codereview.appspot.com/7106045/diff/6004/src/pkg/encoding/xml/marshal.go#newcode288\nsrc/pkg/encoding/xml/marshal.go:288: Escape(p, []byte(strconv.FormatFloat(vf.Float(), 'g', -1, 64)))\nThis should be two different cases. Float32 and Float64 format differently.",
			"disapproval": false,
			"date": "2013-01-18 22:13:06.291590",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"vegacom@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7106045/diff/6004/src/pkg/encoding/xml/marshal.go\nFile src/pkg/encoding/xml/marshal.go (right):\n\nhttps://codereview.appspot.com/7106045/diff/6004/src/pkg/encoding/xml/marshal.go#newcode283\nsrc/pkg/encoding/xml/marshal.go:283: case reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:\nyou should be able to save an allocation by declaring a local small buffer and using AppendInt/AppendUint/AppendFloat",
			"disapproval": false,
			"date": "2013-01-18 22:14:45.905720",
			"approval": false
		},
		{
			"sender": "vegacom@gmail.com",
			"recipients": [
				"vegacom@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, remyoudompheng@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-19 02:43:42.175100",
			"approval": false
		},
		{
			"sender": "vegacom@gmail.com",
			"recipients": [
				"vegacom@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the review.\n\nis it in the scope of this CL to fix marshalSimple?\n\ncase reflect.Float32, reflect.Float64:\n p.WriteString(strconv.FormatFloat(val.Float(), 'g', -1, 64))\n\ninstead of 64, it should be val.Type().Bits()\n\nhttps://codereview.appspot.com/7106045/diff/6004/src/pkg/encoding/xml/marshal.go\nFile src/pkg/encoding/xml/marshal.go (right):\n\nhttps://codereview.appspot.com/7106045/diff/6004/src/pkg/encoding/xml/marshal.go#newcode283\nsrc/pkg/encoding/xml/marshal.go:283: case reflect.Int, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Int64:\nOn 2013/01/18 22:14:46, remyoudompheng wrote:\n> you should be able to save an allocation by declaring a local small buffer and\n> using AppendInt/AppendUint/AppendFloat\n\nDone.\n\nhttps://codereview.appspot.com/7106045/diff/6004/src/pkg/encoding/xml/marshal.go#newcode288\nsrc/pkg/encoding/xml/marshal.go:288: Escape(p, []byte(strconv.FormatFloat(vf.Float(), 'g', -1, 64)))\nOn 2013/01/18 22:13:06, rsc wrote:\n> This should be two different cases. Float32 and Float64 format differently.\n\nDone.",
			"disapproval": false,
			"date": "2013-01-19 02:44:09.280980",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"vegacom@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI'll submit this now since it's ready but feel free to send in a separate CL fixing the marshalSimple float32 case. Thanks.",
			"disapproval": false,
			"date": "2013-01-22 22:45:47.149410",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"vegacom@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Actually, it looks like you need to complete a CLA as described at golang.org/doc/contribute.html#copyright. Thanks.",
			"disapproval": false,
			"date": "2013-01-22 22:46:31.816980",
			"approval": false
		},
		{
			"sender": "vegacom@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done\r\n",
			"disapproval": false,
			"date": "2013-01-22 23:01:43.103550",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"vegacom@gmail.com",
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=047a34a904eb ***\n\nxml: Support fields not of type []byte when marshaling \",chardata\"\n\nFixes issue 4506.\n\nR=rsc, remyoudompheng\nCC=golang-dev\nhttps://codereview.appspot.com/7106045\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-23 03:13:46.326740",
			"approval": false
		}
	],
	"owner_email": "vegacom@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "vegacom",
	"subject": "code review 7106045: xml: Support fields not of type []byte when marshaling ...",
	"created": "2013-01-14 13:43:14.444030",
	"patchsets": [
		1,
		2001,
		5001,
		6004,
		13001
	],
	"modified": "2013-01-27 00:09:57.429430",
	"closed": true,
	"issue": 7106045
}