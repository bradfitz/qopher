{
	"description": "cmd/dist: make dir check in defaulttarg() more robust\n\n1, strip last path separator from $GOROOT\n   The user might define GOROOT=/path/to/go/, but then the dir\n   check in defaulttarg() will always complain the current dir\n   is not within $GOROOT/src/.\n2, resolve symlinks in the default goroot\n   Or if getcwd() returns a fully-resolved path, the check in\n   defaulttarg() will always fail.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttp://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/build.c#newcode79\nsrc/cmd/dist/build.c:79: b.p[b.len - 1] = '\\0';\nb.len--;\nyou don't need to set the \\0.\n\nhttp://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/unix.c\nFile src/cmd/dist/unix.c (right):\n\nhttp://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/unix.c#newcode673\nsrc/cmd/dist/unix.c:673: // resolve symlinks in goroot if GOROOT is not set (to avoid memory leak)\nMemory leak?\n\nhttp://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/unix.c#newcode674\nsrc/cmd/dist/unix.c:674: if(!getenv(\"GOROOT\")) {\nPlease use == nil\n\nhttp://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/unix.c#newcode676\nsrc/cmd/dist/unix.c:676: if(!p)\nPlease use == nil",
			"disapproval": false,
			"date": "2012-02-13 03:48:07.939834",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-12 14:16:10.746753",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL. Also resolve symlinks in default goroot.",
			"disapproval": false,
			"date": "2012-02-12 14:35:21.588568",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/unix.c\nFile src/cmd/dist/unix.c (right):\n\nhttp://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/unix.c#newcode680\nsrc/cmd/dist/unix.c:680: goroot = p;\nI think this is wrong.  If I ask for GOROOT=/usr/local/go, I should get binaries with that GOROOT, even if it happens to involve a symlink.",
			"disapproval": false,
			"date": "2012-02-13 03:49:44.026750",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nFound a new way solve the problem in defaulttarg().\nAlthough stripping trailing slash on $GOROOT won't interfere\nwith the dir check in defaulttarg() anymore, I still feel the\nneed to do so, at least it won't make \"//\" appearing in gobin\n(Also more consistent on directory paths).\n\nhttp://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/unix.c\nFile src/cmd/dist/unix.c (right):\n\nhttp://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/unix.c#newcode673\nsrc/cmd/dist/unix.c:673: // resolve symlinks in goroot if GOROOT is not set (to avoid memory leak)\nOn 2012/02/13 03:48:07, rsc wrote:\n> Memory leak?\nthis is because if $GOROOT is set, the goroot is being overriding anyway, so no need to alloc memory for it here.\n\nhttp://codereview.appspot.com/5649073/diff/5001/src/cmd/dist/unix.c#newcode680\nsrc/cmd/dist/unix.c:680: goroot = p;\nOn 2012/02/13 03:49:44, rsc wrote:\n> I think this is wrong.  If I ask for GOROOT=/usr/local/go, I should get binaries\n> with that GOROOT, even if it happens to involve a symlink.\nOK, then I really should change defaulttarg() to use realpath.\nI original thought of this approach, but I thought it will need\na new xrealpath() function defined in all OS specific files, \nwhich might be overkill for this Unix-specific problem. \nNow I found xrealwd in unix.c, problem solved, and no changes\nneeded to unix.c.",
			"disapproval": false,
			"date": "2012-02-13 05:50:33.896168",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-14 18:56:17.555933",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-15 03:52:58.115246",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2dc817ab3653 ***\n\ncmd/dist: make dir check in defaulttarg() more robust\n\n1, strip last path separator from $GOROOT\n   The user might define GOROOT=/path/to/go/, but then the dir\n   check in defaulttarg() will always complain the current dir\n   is not within $GOROOT/src/.\n2, resolve symlinks in the default goroot\n   Or if getcwd() returns a fully-resolved path, the check in\n   defaulttarg() will always fail.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5649073\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-02-17 16:29:37.194966",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5649073: cmd/dist: make dir check in defaulttarg() more robust",
	"created": "2012-02-12 14:12:47.878305",
	"patchsets": [
		1,
		3001,
		5001,
		6002,
		11001,
		13001,
		14001,
		9003
	],
	"modified": "2012-02-17 17:32:29.280515",
	"closed": true,
	"issue": 5649073
}