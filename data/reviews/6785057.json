{
	"description": "syscall/exec_linux: enable changing controlling tty\n\nAs discussed in the following thread:\nhttps://groups.google.com/forum/?fromgroups=#!topic/golang-dev/emeJffxWhVo\n\nThis is required to enable applications such as `less` to use something\nother than stdin as the controlling terminal.",
	"cc": [
		"dave@cheney.net",
		"iant@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "peter.waller@gmail.com",
			"recipients": [
				"peter.waller@gmail.com",
				"dave@cheney.net",
				"iant@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes.",
			"disapproval": false,
			"date": "2012-10-30 16:22:45.501880",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"peter.waller@gmail.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6785057/diff/2001/src/pkg/syscall/exec_linux.go\nFile src/pkg/syscall/exec_linux.go (right):\n\nhttp://codereview.appspot.com/6785057/diff/2001/src/pkg/syscall/exec_linux.go#newcode21\nsrc/pkg/syscall/exec_linux.go:21: Ctty       int         // Controlling TTY fd (Linux only)\nThis file is linux only, so the comment in parenthesis is redundant.\n\nhttp://codereview.appspot.com/6785057/diff/2001/src/pkg/syscall/exec_linux.go#newcode211\nsrc/pkg/syscall/exec_linux.go:211: if sys.Setctty && sys.Ctty >= 0 {\nHow does this interact with Noctty above ?",
			"disapproval": false,
			"date": "2012-10-29 10:23:06.074070",
			"approval": false
		},
		{
			"sender": "peter.waller@gmail.com",
			"recipients": [
				"peter.waller@gmail.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6785057/diff/2001/src/pkg/syscall/exec_linux.go\nFile src/pkg/syscall/exec_linux.go (right):\n\nhttp://codereview.appspot.com/6785057/diff/2001/src/pkg/syscall/exec_linux.go#newcode21\nsrc/pkg/syscall/exec_linux.go:21: Ctty       int         // Controlling TTY fd (Linux only)\nOn 2012/10/29 10:23:06, dfc wrote:\n> This file is linux only, so the comment in parenthesis is redundant. \n\nI put the comment here in case it appears in documentation somewhere, as Pdeathsig has such a comment below. Should one or both of the \"(Linux only)\" be removed?\n\nhttp://codereview.appspot.com/6785057/diff/2001/src/pkg/syscall/exec_linux.go#newcode211\nsrc/pkg/syscall/exec_linux.go:211: if sys.Setctty && sys.Ctty >= 0 {\nOn 2012/10/29 10:23:06, dfc wrote:\n> How does this interact with Noctty above ?\n\nFrom \"man tty_ioctl\", I understand that both TIOCNOTTY and TIOCSCTTY could conceivably be useful together.",
			"disapproval": false,
			"date": "2012-10-29 10:29:25.467980",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"peter.waller@gmail.com",
				"dave@cheney.net",
				"iant@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can you give an example where it is useful to have a controlling TTY that is not standard input?  I don't see anything relevant in the linked e-mail thread.  You mention the less program but I don't see the application.  When would I want to invoke less on standard input *and* change the default controlling TTY?",
			"disapproval": false,
			"date": "2012-10-29 16:43:40.011920",
			"approval": false
		},
		{
			"sender": "peter.waller@gmail.com",
			"recipients": [
				"peter.waller@gmail.com",
				"dave@cheney.net",
				"iant@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "iant: If you run for example \"something with lots of output | less\" in bash. The stdout is fed into less, but less is still operable since  it opens /dev/tty, which is the CTTY.\n\nFrom [this thread](https://github.com/kr/pty/issues/8) on github, there are at least two others who independently want I want to do.\n\nI'm currently trying to write a small program to compose things out of other terminal applications, and it doesn't seem possible to do correctly without the ability to modify the CTTY of a subprocess.",
			"disapproval": false,
			"date": "2012-10-29 16:48:21.293400",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"peter.waller@gmail.com",
				"dave@cheney.net",
				"iant@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nHave you signed the contributor agreement?",
			"disapproval": false,
			"date": "2012-10-30 16:22:16.574920",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"peter.waller@gmail.com",
				"dave@cheney.net",
				"iant@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=202f84870a6c ***\n\nsyscall/exec_linux: enable changing controlling tty\n\nAs discussed in the following thread:\nhttps://groups.google.com/forum/?fromgroups=#!topic/golang-dev/emeJffxWhVo\n\nThis is required to enable applications such as `less` to use something\nother than stdin as the controlling terminal.\n\nR=dave, iant\nCC=bradfitz, golang-dev\nhttp://codereview.appspot.com/6785057\n\nCommitter: Ian Lance Taylor <iant@golang.org>",
			"disapproval": false,
			"date": "2012-10-31 00:36:22.300250",
			"approval": false
		}
	],
	"owner_email": "peter.waller@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Peter Waller",
	"subject": "syscall/exec_linux: enable changing controlling tty",
	"created": "2012-10-26 19:30:13.769000",
	"patchsets": [
		1,
		2001
	],
	"modified": "2012-10-31 00:36:22.300250",
	"closed": false,
	"issue": 6785057
}