{
	"description": "cmd/cgo: allow for stdcall decorated dynimport names\n\nTo allow for stdcall decorated names on Windows, two changes were needed:\n1. Change the symbol versioning delimiter '@' in cgo's dynimport output to a '#', and in cmd/ld when it parses dynimports.\n2. Remove the \"@N\" decorator from the first argument of cgo's dynimport output (PE only).\n\nFixes issue 4607.",
	"cc": [
		"minux.ma@gmail.com",
		"adg@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"james@james4k.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7047043/diff/2001/src/cmd/cgo/out.go\nFile src/cmd/cgo/out.go (right):\n\nhttps://codereview.appspot.com/7047043/diff/2001/src/cmd/cgo/out.go#newcode221\nsrc/cmd/cgo/out.go:221: name = name[:i]\nplease consider using strings.Split(name, \"@\")\nthen you don't need to do any conditionals here.",
			"disapproval": false,
			"date": "2013-01-03 10:49:43.137450",
			"approval": false
		},
		{
			"sender": "james@james4k.com",
			"recipients": [
				"james@james4k.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-03 20:52:24.198810",
			"approval": false
		},
		{
			"sender": "james@james4k.com",
			"recipients": [
				"james@james4k.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/03 20:52:24, james4k wrote:\n> Hello mailto:minux.ma@gmail.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go\n\nHmm, I just uploaded a fix for an issue I didn't see at first (should split ss[0], not s), but the side-by-side diff view doesn't seem to work anymore.",
			"disapproval": false,
			"date": "2013-01-03 21:05:52.293140",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Try\r\n\r\nhg sync\r\nhg upload 7047043\r\n",
			"disapproval": false,
			"date": "2013-01-06 21:41:43.190880",
			"approval": false
		},
		{
			"sender": "james@james4k.com",
			"recipients": [
				"james@james4k.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/06 21:41:43, adg wrote:\n> Try\n> \n> hg sync\n> hg upload 7047043\n\nThanks adg, that worked.",
			"disapproval": false,
			"date": "2013-01-07 04:49:54.755010",
			"approval": false
		},
		{
			"sender": "james@james4k.com",
			"recipients": [
				"james@james4k.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL. Do you think perhaps some sort of test would be necessary? Is there an existing test for ELF symbol versioning with cgo?\n\nhttps://codereview.appspot.com/7047043/diff/2001/src/cmd/cgo/out.go\nFile src/cmd/cgo/out.go (right):\n\nhttps://codereview.appspot.com/7047043/diff/2001/src/cmd/cgo/out.go#newcode221\nsrc/cmd/cgo/out.go:221: name = name[:i]\nOn 2013/01/03 10:49:43, minux wrote:\n> please consider using strings.Split(name, \"@\")\n> then you don't need to do any conditionals here.\n\nDone.",
			"disapproval": false,
			"date": "2013-01-07 05:07:56.916730",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"james@james4k.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "sorry for the long delay.\n\nplease add a windows-only test to call stdcall decorated symbol\nto misc/cgo/test.",
			"disapproval": false,
			"date": "2013-01-25 11:17:50.949470",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"james@james4k.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-30 16:26:40.551690",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"james@james4k.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=d8e64f78ab02 ***\n\ncmd/cgo: allow for stdcall decorated dynimport names\n\nTo allow for stdcall decorated names on Windows, two changes were needed:\n1. Change the symbol versioning delimiter '@' in cgo's dynimport output to a '#', and in cmd/ld when it parses dynimports.\n2. Remove the \"@N\" decorator from the first argument of cgo's dynimport output (PE only).\n\nFixes issue 4607.\n\nR=minux.ma, adg, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7047043\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-30 16:29:38.847980",
			"approval": false
		}
	],
	"owner_email": "james@james4k.com",
	"private": false,
	"base_url": "",
	"owner": "james4k",
	"subject": "code review 7047043: cmd/cgo: allow for stdcall decorated dynimport names",
	"created": "2013-01-03 03:05:34.149050",
	"patchsets": [
		1,
		2001,
		6001,
		8001,
		24001
	],
	"modified": "2013-01-30 16:29:38.847980",
	"closed": false,
	"issue": 7047043
}