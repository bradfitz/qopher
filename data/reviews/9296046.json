{
	"description": "testing/quick: fix for aliased types, delete duplicate uint8 test, and fix randFloat64() to give random numbers from (-math.MaxFloat64, math.MaxFloat64).",
	"cc": [
		"r@golang.org",
		"agl@golang.org",
		"agl@chromium.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "jhseu@google.com",
			"recipients": [
				"jhseu@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-05-14 22:01:57.105870",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=r\r\n\r\n\r\n\r\nOn Tue, May 14, 2013 at 3:01 PM, <jhseu@google.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> testing/quick: fix for aliased types. delete duplicate uint8 test.\r\n>\r\n> Please review this at https://codereview.appspot.**com/9296046/<https://codereview.appspot.com/9296046/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/testing/quick/quick.go\r\n>   M src/pkg/testing/quick/quick_**test.go\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-14 22:08:19.369910",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"jhseu@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=r (assigned by bradfitz)",
			"disapproval": false,
			"date": "2013-05-14 22:19:40.980150",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"jhseu@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "seems good. adding agl because of the float32/float64 thing. is there a reason for it?\n\nhttps://codereview.appspot.com/9296046/diff/3001/src/pkg/testing/quick/quick.go\nFile src/pkg/testing/quick/quick.go (right):\n\nhttps://codereview.appspot.com/9296046/diff/3001/src/pkg/testing/quick/quick.go#newcode68\nsrc/pkg/testing/quick/quick.go:68: v.SetComplex(complex(float64(randFloat32(rand)), float64(randFloat32(rand))))\nsurely randFloat64, whatever the old code said.",
			"disapproval": false,
			"date": "2013-05-14 23:20:48.117940",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"jhseu@google.com",
				"r@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nThe float64 is just a bug by me.",
			"disapproval": false,
			"date": "2013-05-14 23:40:53.407070",
			"approval": true
		},
		{
			"sender": "jhseu@google.com",
			"recipients": [
				"jhseu@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I also just noticed the bug in randFloat64 (compare with randFloat32). Fixed that too.\n\nhttps://codereview.appspot.com/9296046/diff/3001/src/pkg/testing/quick/quick.go\nFile src/pkg/testing/quick/quick.go (right):\n\nhttps://codereview.appspot.com/9296046/diff/3001/src/pkg/testing/quick/quick.go#newcode68\nsrc/pkg/testing/quick/quick.go:68: v.SetComplex(complex(float64(randFloat32(rand)), float64(randFloat32(rand))))\nOn 2013/05/14 23:20:48, r wrote:\n> surely randFloat64, whatever the old code said.\n\nrandFloat64 will cause most values to be +Inf or -Inf:\nhttp://play.golang.org/p/BX553YxCkn",
			"disapproval": false,
			"date": "2013-05-14 23:38:36.751980",
			"approval": false
		},
		{
			"sender": "jhseu@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "(If you're referring to the play.golang.org example) yes, but SetComplex\r\nwill only take a complex128.\r\n\r\n\r\nOn Tue, May 14, 2013 at 4:43 PM, <agl@golang.org> wrote:\r\n\r\n>\r\n> https://codereview.appspot.**com/9296046/diff/3001/src/pkg/**\r\n> testing/quick/quick.go<https://codereview.appspot.com/9296046/diff/3001/src/pkg/testing/quick/quick.go>\r\n> File src/pkg/testing/quick/quick.go (right):\r\n>\r\n> https://codereview.appspot.**com/9296046/diff/3001/src/pkg/**\r\n> testing/quick/quick.go#**newcode68<https://codereview.appspot.com/9296046/diff/3001/src/pkg/testing/quick/quick.go#newcode68>\r\n> src/pkg/testing/quick/quick.**go:68:\r\n> v.SetComplex(complex(float64(**randFloat32(rand)),\r\n> float64(randFloat32(rand))))\r\n> On 2013/05/14 23:38:36, jhseu wrote:\r\n>\r\n>> randFloat64 will cause most values to be +Inf or -Inf:\r\n>> http://play.golang.org/p/**BX553YxCkn<http://play.golang.org/p/BX553YxCkn>\r\n>>\r\n>\r\n> A complex64 is a pair of 32-bit values, no?\r\n>\r\n> https://codereview.appspot.**com/9296046/<https://codereview.appspot.com/9296046/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-14 23:45:28.557450",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"jhseu@google.com",
				"r@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"agl@chromium.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9296046/diff/3001/src/pkg/testing/quick/quick.go\nFile src/pkg/testing/quick/quick.go (right):\n\nhttps://codereview.appspot.com/9296046/diff/3001/src/pkg/testing/quick/quick.go#newcode68\nsrc/pkg/testing/quick/quick.go:68: v.SetComplex(complex(float64(randFloat32(rand)), float64(randFloat32(rand))))\nOn 2013/05/14 23:38:36, jhseu wrote:\n> randFloat64 will cause most values to be +Inf or -Inf:\n> http://play.golang.org/p/BX553YxCkn\n\nA complex64 is a pair of 32-bit values, no?",
			"disapproval": false,
			"date": "2013-05-14 23:43:19.152830",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"jhseu@google.com",
				"r@golang.org",
				"agl@golang.org",
				"agl@chromium.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=48c4822a1dd5 ***\n\ntesting/quick: fix for aliased types, delete duplicate uint8 test, and fix randFloat64() to give random numbers from (-math.MaxFloat64, math.MaxFloat64).\n\nR=r, agl\nCC=agl, bradfitz, golang-dev\nhttps://codereview.appspot.com/9296046\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2013-05-15 00:15:04.519250",
			"approval": false
		}
	],
	"owner_email": "jhseu@google.com",
	"private": false,
	"base_url": "",
	"owner": "jhseu",
	"subject": "code review 9296046: testing/quick: fix for aliased types. delete duplicate ...",
	"created": "2013-05-14 21:56:44.790520",
	"patchsets": [
		1,
		2001,
		3001,
		11001
	],
	"modified": "2013-05-15 00:15:04.519250",
	"closed": false,
	"issue": 9296046
}