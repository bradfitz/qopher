{
	"description": "runtime: fix LockOSThread\nFixes issue 6100.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"bradfitz@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-12 07:54:31.651070",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The comment is a little obscure. Should it say\r\n\r\n// don't split the stack as this may trigger garbage collection\r\n// which may cause this G to transition to another M by mistake. \r\n\r\n\r\n\r\nOn 12/08/2013, at 16:54, dvyukov@google.com wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n> \r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n> \r\n> I'd like you to review this change to\r\n> https://dvyukov%40google.com@code.google.com/p/go/\r\n> \r\n> \r\n> Description:\r\n> runtime: fix LockOSThread\r\n> Fixes issue 6100.\r\n> \r\n> Please review this at https://codereview.appspot.com/12703045/\r\n> \r\n> Affected files:\r\n>  M src/pkg/runtime/proc.c\r\n> \r\n> \r\n> Index: src/pkg/runtime/proc.c\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/proc.c\r\n> +++ b/src/pkg/runtime/proc.c\r\n> @@ -1847,6 +1847,7 @@\r\n>    return ret;\r\n> }\r\n> \r\n> +#pragma textflag 7  // ensure that we operate on the correct M\r\n> static void\r\n> LockOSThread(void)\r\n> {\r\n> @@ -1868,6 +1869,7 @@\r\n>    LockOSThread();\r\n> }\r\n> \r\n> +#pragma textflag 7  // ensure that we operate on the correct M\r\n> static void\r\n> UnlockOSThread(void)\r\n> {\r\n> \r\n> \r\n> -- \r\n> \r\n> ---You received this message because you are subscribed to the Google Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n> \r\n> \r\n",
			"disapproval": false,
			"date": "2013-08-12 10:22:39.026000",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Instead of \"7\", can you include cmd/ld/textflag.h and use a name now instead?",
			"disapproval": false,
			"date": "2013-08-12 15:26:46.075820",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I have no idea why this fix works. Changing m during the entry to LockOSThread should be fine. Changing m during the entry to UnlockOSThread cannot happen - the goroutine is locked to the m.",
			"disapproval": false,
			"date": "2013-08-12 15:30:41.464560",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/12 10:22:39, dfc wrote:\n> The comment is a little obscure. Should it say\n> \n> // don't split the stack as this may trigger garbage collection\n> // which may cause this G to transition to another M by mistake. \n\nUpdated the comments.",
			"disapproval": false,
			"date": "2013-08-12 17:29:29.901120",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/12 15:26:46, bradfitz wrote:\n> Instead of \"7\", can you include cmd/ld/textflag.h and use a name now instead?\n\nDone",
			"disapproval": false,
			"date": "2013-08-12 17:29:38.237400",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/12 15:30:41, rsc wrote:\n> I have no idea why this fix works. Changing m during the entry to LockOSThread\n> should be fine.\n\nIt is not quite fine. If that happens than runtime\u00b7lockOSThread/LockOSThread updates m->locked on one M, and then sets m->lockedg/lockedm on another M.\n\n\n> Changing m during the entry to UnlockOSThread cannot happen -\n> the goroutine is locked to the m.\n\nYes, this is true.\nBut I think it's better to make them \"atomic\". Otherwise if we update some code to look only at m->locked to check whether M is locked or not, that will break occasionally. If we add locking consistency checks into schedule(), that will break as well. Also it may confuse during debugging.",
			"disapproval": false,
			"date": "2013-08-12 17:33:36.957800",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL",
			"disapproval": false,
			"date": "2013-08-12 17:33:48.409300",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/12703045/diff/11001/src/pkg/runtime/proc.c\nFile src/pkg/runtime/proc.c (right):\n\nhttps://codereview.appspot.com/12703045/diff/11001/src/pkg/runtime/proc.c#newcode1851\nsrc/pkg/runtime/proc.c:1851: // Disable preemption to ensure that we update m->locked/lockedg/lockedm on the same M.\nPlease rename these to lockOSThread and unlockOSThread. That was part of my confusion: I thought this was an exported, directly-called function.\n\nThen make this:\n\n// lockOSThread is called by runtime.LockOSThread and runtime.lockOSThread below\n// after they modify m->locked. Do not allow preemption during this call, or else the\n// m might be different in this function than in the caller.\n\nhttps://codereview.appspot.com/12703045/diff/11001/src/pkg/runtime/proc.c#newcode1874\nsrc/pkg/runtime/proc.c:1874: // Disable preemption to ensure that nobody observes inconsistent values of m->locked/lockedg/lockedm.\n// unlockOSThread is called by runtime.UnlockOSThread and runtime.unlockOSThread below\n// after they update m->locked. Do not allow preemption during this call, or else the m might\n// be in different in this function than in the caller.",
			"disapproval": false,
			"date": "2013-08-13 17:50:53.381660",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=2ba38198cb81 ***\n\nruntime: fix LockOSThread\nFixes issue 6100.\n\nR=golang-dev, dave, bradfitz, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/12703045",
			"disapproval": false,
			"date": "2013-08-13 18:37:19.793930",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/08/13 17:50:53, rsc wrote:\n> LGTM\n> \n> https://codereview.appspot.com/12703045/diff/11001/src/pkg/runtime/proc.c\n> File src/pkg/runtime/proc.c (right):\n> \n> https://codereview.appspot.com/12703045/diff/11001/src/pkg/runtime/proc.c#newcode1851\n> src/pkg/runtime/proc.c:1851: // Disable preemption to ensure that we update\n> m->locked/lockedg/lockedm on the same M.\n> Please rename these to lockOSThread and unlockOSThread. That was part of my\n> confusion: I thought this was an exported, directly-called function.\n> \n> Then make this:\n> \n> // lockOSThread is called by runtime.LockOSThread and runtime.lockOSThread below\n> // after they modify m->locked. Do not allow preemption during this call, or\n> else the\n> // m might be different in this function than in the caller.\n> \n> https://codereview.appspot.com/12703045/diff/11001/src/pkg/runtime/proc.c#newcode1874\n> src/pkg/runtime/proc.c:1874: // Disable preemption to ensure that nobody\n> observes inconsistent values of m->locked/lockedg/lockedm.\n> // unlockOSThread is called by runtime.UnlockOSThread and runtime.unlockOSThread\n> below\n> // after they update m->locked. Do not allow preemption during this call, or\n> else the m might\n> // be in different in this function than in the caller.\n\nDone",
			"disapproval": false,
			"date": "2013-08-13 18:37:30.815990",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 12703045: runtime: fix LockOSThread",
	"created": "2013-08-11 14:30:18.501590",
	"patchsets": [
		1,
		3001,
		6001,
		11001,
		20001
	],
	"modified": "2013-08-13 18:37:31.366550",
	"closed": true,
	"issue": 12703045
}