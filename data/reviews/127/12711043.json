{
	"description": "go.tools/go/types: do rounding in constant numeric conversions\n\n- cleaned up surrounding code\n- adjusted error message positions for too few/many argument errors\n- added more conversion tests\n- added all tests under test/ken to std tests",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"r@golang.org",
		"adonovan@google.com"
	],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-08-10 01:02:22.339420",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=400755f06d55&repo=tools ***\n\ngo.tools/go/types: do rounding in constant numeric conversions\n\n- cleaned up surrounding code\n- adjusted error message positions for too few/many argument errors\n- added more conversion tests\n- added all tests under test/ken to std tests\n\nR=adonovan, r\nTBR=adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/12711043",
			"disapproval": false,
			"date": "2013-08-12 21:57:11.054520",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-13 01:05:18.198710",
			"approval": true
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/12711043/diff/9001/go/types/expr.go\nFile go/types/expr.go (right):\n\nhttps://codereview.appspot.com/12711043/diff/9001/go/types/expr.go#newcode166\ngo/types/expr.go:166: // We assume that float32(f) returns an Inf if f cannot be represented\nObviously this assumption is false for small finite float64 values that underflow a float32, such as 1e-52.  Can you add a test for that case?\n\nhttps://codereview.appspot.com/12711043/diff/9001/go/types/expr.go#newcode258\ngo/types/expr.go:258: r := roundFloat32(x)\nIf you like:\n  if r := roundFloat32(x); r != nil { ... } \n\nDitto below.",
			"disapproval": false,
			"date": "2013-08-14 19:17:13.903900",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 12711043: go.tools/go/types: do rounding in constant numeric conv...",
	"created": "2013-08-09 21:12:56.309010",
	"patchsets": [
		1,
		3001,
		2,
		5011,
		7001,
		9001
	],
	"modified": "2013-08-14 19:17:14.271340",
	"closed": true,
	"issue": 12711043
}