{
	"description": "exp/locale/collate: Added functionality to parse and process LDML files\nfor both locale-specific exemplar characters and tailorings to\nthe collation table.\nSome specifices:\n- Moved stringSet to the beginning of the file and added some functionality\n  to parse command line files.\n- openReader now modifies the input URL for localFiles to guarantee that\n  any http source listed in the generated file is indeed this source.\n- Note that the implementation of the Tailoring API used by maketables.go\n  is not yet checked in. So for now adding tailorings are simply no-ops.\n- The generated file of exemplar characters will be used somewhere else.\n  Here is a snippet of how the body of the generated file looks like:\n\ntype exemplarType int\nconst (\n        exCharacters exemplarType = iota\n        exContractions\n        exPunctuation\n        exAuxiliary\n        exCurrency\n        exIndex\n        exN\n)\n\nvar exemplarCharacters = map[string][exN]string{\n        \"af\": [exN]string{\n                0: \"a \u00e1 \u00e2 b c d e \u00e9 \u00e8 \u00ea \u00eb f g h i \u00ee \u00ef j k l m n o \u00f4 \u00f6 p q r s t u \u00fb v w x y z\",\n                3: \"\u00e1 \u00e0 \u00e2 \u00e4 \u00e3 \u00e6 \u00e7 \u00e9 \u00e8 \u00ea \u00eb \u00ed \u00ec \u00ee \u00ef \u00f3 \u00f2 \u00f4 \u00f6 \u00fa \u00f9 \u00fb \u00fc \u00fd\",\n                4: \"a b c d e f g h i j k l m n o p q r s t u v w x y z\",\n        },\n        ...\n}",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-08-31 21:40:32.873110",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-08-31 08:34:54.355740",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "nice\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go\nFile src/pkg/exp/locale/collate/maketables.go (right):\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode62\nsrc/pkg/exp/locale/collate/maketables.go:62: \"comma-separated list of types that should be included in addition to the standard type.\")\nsuggest putting all the flags into a single var (...) declaration for layout and grouping\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode64\nsrc/pkg/exp/locale/collate/maketables.go:64: // stringSet implements an ordered set based on a list.  It implementes flag.Value\ns/implementes/implements/\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode149\nsrc/pkg/exp/locale/collate/maketables.go:149: if ss.dirty {\nif !ss.dirty {\n  return\n}\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode179\nsrc/pkg/exp/locale/collate/maketables.go:179: }\nnice flags!\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode187\nsrc/pkg/exp/locale/collate/maketables.go:187: // openReader opens the url or file given by url and returns it as an io.ReadCloser\nmaybe s/url/URL/ (the first only)\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode387\nsrc/pkg/exp/locale/collate/maketables.go:387: var tagRe = regexp.MustCompile(\"<([a-z_]*)  */>\")\njust for good habits, s/\"/`/g here\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode446\nsrc/pkg/exp/locale/collate/maketables.go:446: `)\ni'd move the string constant outside the function so it doesn't screw up the indentation\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode455\nsrc/pkg/exp/locale/collate/maketables.go:455: var mainRe = regexp.MustCompile(\".*/main/(.*)\\\\.xml\")\nuse `` here too and you won't need to double the backslash - that's the point\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode540\nsrc/pkg/exp/locale/collate/maketables.go:540: var fileRe = regexp.MustCompile(\".*/collation/(.*)\\\\.xml\")\nagain\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode598\nsrc/pkg/exp/locale/collate/maketables.go:598: const cldrIndex = 0xFDD0\n// A Unicode-reserved sentinel value.",
			"disapproval": false,
			"date": "2012-08-31 21:40:27.167720",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go\nFile src/pkg/exp/locale/collate/maketables.go (right):\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode62\nsrc/pkg/exp/locale/collate/maketables.go:62: \"comma-separated list of types that should be included in addition to the standard type.\")\nOn 2012/08/31 21:40:27, r wrote:\n> suggest putting all the flags into a single var (...) declaration for layout and\n> grouping\n\nDone.\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode64\nsrc/pkg/exp/locale/collate/maketables.go:64: // stringSet implements an ordered set based on a list.  It implementes flag.Value\nOn 2012/08/31 21:40:27, r wrote:\n> s/implementes/implements/\n\nDone.\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode149\nsrc/pkg/exp/locale/collate/maketables.go:149: if ss.dirty {\nOn 2012/08/31 21:40:27, r wrote:\n> if !ss.dirty {\n>   return\n> }\n\nDone.\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode187\nsrc/pkg/exp/locale/collate/maketables.go:187: // openReader opens the url or file given by url and returns it as an io.ReadCloser\nOn 2012/08/31 21:40:27, r wrote:\n> maybe s/url/URL/ (the first only)\n\nDone.\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode387\nsrc/pkg/exp/locale/collate/maketables.go:387: var tagRe = regexp.MustCompile(\"<([a-z_]*)  */>\")\nOn 2012/08/31 21:40:27, r wrote:\n> just for good habits, s/\"/`/g here\n\nDone.\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode446\nsrc/pkg/exp/locale/collate/maketables.go:446: `)\nOn 2012/08/31 21:40:27, r wrote:\n> i'd move the string constant outside the function so it doesn't screw up the\n> indentation\n\nDone.\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode455\nsrc/pkg/exp/locale/collate/maketables.go:455: var mainRe = regexp.MustCompile(\".*/main/(.*)\\\\.xml\")\nOn 2012/08/31 21:40:27, r wrote:\n> use `` here too and you won't need to double the backslash - that's the point\n\nDone.\n\nhttp://codereview.appspot.com/6501070/diff/4001/src/pkg/exp/locale/collate/maketables.go#newcode540\nsrc/pkg/exp/locale/collate/maketables.go:540: var fileRe = regexp.MustCompile(\".*/collation/(.*)\\\\.xml\")\nOn 2012/08/31 21:40:27, r wrote:\n> again\n\nDone.",
			"disapproval": false,
			"date": "2012-09-01 12:14:00.021390",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4a134ae55086 ***\n\nexp/locale/collate: Added functionality to parse and process LDML files\nfor both locale-specific exemplar characters and tailorings to\nthe collation table.\nSome specifices:\n- Moved stringSet to the beginning of the file and added some functionality\n  to parse command line files.\n- openReader now modifies the input URL for localFiles to guarantee that\n  any http source listed in the generated file is indeed this source.\n- Note that the implementation of the Tailoring API used by maketables.go\n  is not yet checked in. So for now adding tailorings are simply no-ops.\n- The generated file of exemplar characters will be used somewhere else.\n  Here is a snippet of how the body of the generated file looks like:\n\ntype exemplarType int\nconst (\n        exCharacters exemplarType = iota\n        exContractions\n        exPunctuation\n        exAuxiliary\n        exCurrency\n        exIndex\n        exN\n)\n\nvar exemplarCharacters = map[string][exN]string{\n        \"af\": [exN]string{\n                0: \"a \u00e1 \u00e2 b c d e \u00e9 \u00e8 \u00ea \u00eb f g h i \u00ee \u00ef j k l m n o \u00f4 \u00f6 p q r s t u \u00fb v w x y z\",\n                3: \"\u00e1 \u00e0 \u00e2 \u00e4 \u00e3 \u00e6 \u00e7 \u00e9 \u00e8 \u00ea \u00eb \u00ed \u00ec \u00ee \u00ef \u00f3 \u00f2 \u00f4 \u00f6 \u00fa \u00f9 \u00fb \u00fc \u00fd\",\n                4: \"a b c d e f g h i j k l m n o p q r s t u v w x y z\",\n        },\n        ...\n}\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/6501070",
			"disapproval": false,
			"date": "2012-09-01 12:15:09.972880",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 6501070: exp/locale/collate: Added functionality to parse and pr...",
	"created": "2012-08-31 08:34:31.778970",
	"patchsets": [
		1,
		3,
		4001,
		9001,
		10001
	],
	"modified": "2012-09-01 12:15:10.870340",
	"closed": true,
	"issue": 6501070
}