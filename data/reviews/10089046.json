{
	"description": "go.net/ipv6: add deadline methods to PacketConn\n\nUpdate issue 5538",
	"cc": [
		"dave@cheney.net",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/07 06:11:22, mikio wrote:\n> Hello mailto:dave@cheney.net (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go.net\n\nThis looks reasonable. I have two small questions.\n\n1. Is it possible to achieve this by embedding ?\n\n2. Why are you adding these methods ? For completeness, or so ipv6.PacketConn implements net.Conn ?",
			"disapproval": false,
			"date": "2013-06-07 11:02:51.029610",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.net",
			"disapproval": false,
			"date": "2013-06-07 06:11:22.689330",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\r\n\r\nOn Fri, Jun 7, 2013 at 8:02 PM,  <dave@cheney.net> wrote:\r\n\r\n> 1. Is it possible to achieve this by embedding ?\r\n\r\nWhat do you mean by embedding?\r\n\r\n> 2. Why are you adding these methods ?\r\n\r\nDeadline would be help to make a small simple tool like network\r\nloopback or linktrace stuff w/o having read/write message pump-\r\nlike stuff.\r\n\r\n> For completeness, or so\r\n> ipv6.PacketConn implements net.Conn ?\r\n\r\nWhat you are saying is that, ah, sorry but I don't understand.\r\nipv6.PacketConn implements net.PacketConn?\r\n",
			"disapproval": false,
			"date": "2013-06-07 13:51:51.433990",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I may have the wrong package, but I believe Brad asked, reasonably, to\r\nsee a description of your plans for this work. I'm very happy to see\r\nyour contributions but it's more comfortable to have a road map in\r\nplace.\r\n\r\nIf you sent one and I missed it, I apologize; the recent mail flood\r\nhas reached the tip of Mount Ararat.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-07 15:32:41.573750",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Jun 8, 2013 at 12:32 AM, Rob Pike <r@golang.org> wrote:\r\n\r\n> I may have the wrong package, but I believe Brad asked, reasonably, to\r\n> see a description of your plans for this work. I'm very happy to see\r\n> your contributions but it's more comfortable to have a road map in\r\n> place.\r\n\r\nSure, thank you for the notice and sorry for my laziness.\r\nI forget to answer to his request (because of my laziness).\r\n\r\nFor stdlib, I now have no concrete plan except issue 5199.\r\n\r\nFor others in sub repositories, issue 5538 and 5539 are the plan.\r\n\r\nAll patches are just for adding basic network facility control as described in\r\non-line manual netintro; addressing and protocol API is already provided by\r\nstdlib, so the rest would be routing and its helpers; go.net/ipv4, go.net/ipv6\r\nand go.net/route. Almost all look boring bolierplates but once we have server\r\nstuff in go on distributed environment, then (I guess) we will also need some\r\nstuff that interfaces with infrastructures.\r\n\r\nThis CL is part of issue 5538. The API is similar to go.net/ipv4; providing\r\ncontrol knobs, toggles and its bearers ReadFrom, WriteTo methods.\r\n",
			"disapproval": false,
			"date": "2013-06-08 04:44:36.635780",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/07 13:51:51, mikio wrote:\n> PTAL\n> \n> On Fri, Jun 7, 2013 at 8:02 PM,  <mailto:dave@cheney.net> wrote:\n> \n> > 1. Is it possible to achieve this by embedding ?\n> \n> What do you mean by embedding?\n\nStruct embedding. Currently you have to manually forward these methods to c.payloadHandler because there are probably several structs embedded in ipv6.PacketConn that have Set*DeadLine methods. I wonder if it were possible to rearrange things so these forwarding methods could be made unnecessary. \n\n> \n> > 2. Why are you adding these methods ?\n> \n> Deadline would be help to make a small simple tool like network\n> loopback or linktrace stuff w/o having read/write message pump-\n> like stuff.\n\nSGTM.\n\n> \n> > For completeness, or so\n> > ipv6.PacketConn implements net.Conn ?\n> \n> What you are saying is that, ah, sorry but I don't understand.\n> ipv6.PacketConn implements net.PacketConn?\n\nipv6.PacketConn probably aims to implement both net.Conn and net.PacketConn, the Deadline methods are necessary for the former, an ReadFrom / WriteTo for the latter.",
			"disapproval": false,
			"date": "2013-06-10 01:19:15.831480",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. I've had a play with this and cannot see a straight forward way to setup the embedding. If the goal is for *ipv6.PacketConn to implement net.Conn or net.PacketConn, please add a small test, something like\n\nvar _ net.Conn = new(PacketConn)\nvar _ net.PacketConn = new(PacketConn)\n\nIf this is not your intention, please disregard this suggestion.",
			"disapproval": false,
			"date": "2013-06-11 11:08:54.440730",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> If the goal is for *ipv6.PacketConn to implement net.Conn or\n> net.PacketConn,\n\nI dropped both Read and Write methods from go.net/ipv4 a few months ago\nbecause almost apps that need this raw API are pretty binary wire-format \ndatagram protocols, and seems like there's no point to do that.",
			"disapproval": false,
			"date": "2013-06-15 02:48:48.699470",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/06/15 02:48:48, mikio wrote:\n> > If the goal is for *ipv6.PacketConn to implement net.Conn or\n> > net.PacketConn,\n> \n> I dropped both Read and Write methods from go.net/ipv4 a few months ago\n> because almost apps that need this raw API are pretty binary wire-format \n> datagram protocols, and seems like there's no point to do that.\n\nCool. LGTM.",
			"disapproval": false,
			"date": "2013-06-15 02:50:49.052330",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=8f3271ed32ca&repo=net ***\n\ngo.net/ipv6: add deadline methods to PacketConn\n\nUpdate issue 5538\n\nR=dave, r\nCC=golang-dev\nhttps://codereview.appspot.com/10089046",
			"disapproval": false,
			"date": "2013-06-15 04:05:42.433100",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 10089046: go.net/ipv6: add deadline methods to PacketConn",
	"created": "2013-06-07 05:59:20.444010",
	"patchsets": [
		1,
		2001,
		4001,
		8001,
		17001
	],
	"modified": "2013-06-15 04:05:45.210160",
	"closed": true,
	"issue": 10089046
}