{
	"description": "sql: add Tx.Stmt to use an existing prepared stmt in a transaction",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-23 19:59:08.685784",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5433059/diff/4001/src/pkg/exp/sql/sql.go\nFile src/pkg/exp/sql/sql.go (right):\n\nhttp://codereview.appspot.com/5433059/diff/4001/src/pkg/exp/sql/sql.go#newcode396\nsrc/pkg/exp/sql/sql.go:396: func (tx *Tx) With(stmt *Stmt) *Stmt {\nWhy is this called With?  Is that a standard word?\nWhat about Stmt?",
			"disapproval": false,
			"date": "2011-11-28 14:45:19.367881",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5433059/diff/4001/src/pkg/exp/sql/sql.go\nFile src/pkg/exp/sql/sql.go (right):\n\nhttp://codereview.appspot.com/5433059/diff/4001/src/pkg/exp/sql/sql.go#newcode396\nsrc/pkg/exp/sql/sql.go:396: func (tx *Tx) With(stmt *Stmt) *Stmt {\nOn 2011/11/28 14:45:19, rsc wrote:\n> Why is this called With?  Is that a standard word?\n> What about Stmt?\n\nIt's not a standard word, but like QueryRow I expect this to be chained, as in the example I gave two lines up:\n\n  res, err := tx.With(Stmt).Exec(123.45, 98293203)\n\nI considered \"With\", \"Using\", and \"Stmt\".  Stmt seemed both stuttery and not clear.  With seemed shortest, and there's already a little-used \"USING\" keyword in SQL I'd rather avoid using.\n\nI wanted to make it clear that the statement was being used in the context of that transaction.\n\nI suppose in practice statements will be named, so it'll end up looking like:\n\nres, err := tx.Stmt(updateBalanceStmt).Exec(1, 2)\n\nBut I think I like the sound of this more:\n\nres, err := tx.With(updateBalanceStmt).Exec(1, 2)\n\nI don't feel strongly.\n\nFeel free to call it either way.",
			"disapproval": false,
			"date": "2011-11-28 15:05:28.912885",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nLet's use Stmt.  It won't be Stmt(Stmt) unless\nyou are capitalizing your variable names.\n",
			"disapproval": false,
			"date": "2011-11-28 15:35:27.262664",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=9e6e956b3af1 ***\n\nsql: add Tx.Stmt to use an existing prepared stmt in a transaction\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5433059",
			"disapproval": false,
			"date": "2011-11-28 16:00:35.139414",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5433059: sql: add Tx.With to use an existing prepared stmt in a ...",
	"created": "2011-11-23 19:58:42.897483",
	"patchsets": [
		1,
		2001,
		4001,
		9001
	],
	"modified": "2011-11-28 16:00:36.247732",
	"closed": true,
	"issue": 5433059
}