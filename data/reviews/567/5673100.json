{
	"description": "go 1: add a description of the os error changes.\nI'm sure I wrote these before but they've disappeared.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"r@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nfor rietveld",
			"disapproval": false,
			"date": "2012-02-19 03:13:35.003130",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-02-19 02:40:21.132576",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I was just deleting ENOENV entirely, actually, in the process of removing\nos.Getenverror (issue 3065)\n\nOn Sat, Feb 18, 2012 at 6:40 PM, <r@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go/\n>\n>\n> Description:\n> os: rename ENOENV ErrNoEnv\n> Add a description of the error changes tto os to the go1 doc.\n> I'm sure I wrote these before but they've disappeared.\n>\n> Please review this at http://codereview.appspot.com/**5673100/<http://codereview.appspot.com/5673100/>\n>\n> Affected files:\n>  M doc/go1.html\n>  M doc/go1.tmpl\n>  M src/pkg/os/env.go\n>  M test/env.go\n>\n>\n> Index: doc/go1.html\n> ==============================**==============================**=======\n> --- a/doc/go1.html\n> +++ b/doc/go1.html\n> @@ -7,7 +7,7 @@\n>  -->\n>\n>\n> -<!-- Center the tables, and disable the 1995 3D borders -->\n> +<!-- Center the tables, and disable the 1995-era 3D borders -->\n>  <style>\n>  table { margin-left: auto; margin-right: auto; border-style: none; }\n>  hr { border-style: none; border-top: 1px solid black; }\n> @@ -1418,24 +1418,44 @@\n>\n>  <h3 id=\"os\">The os package</h3>\n>\n> -<p>The <code>Time</code> function has been removed; callers should use\n> +<p>\n> +The <code>Time</code> function has been removed; callers should use\n>  the <a href=\"/pkg/time/#Time\"><code>**Time</code></a> type from the\n> -<code>time</code> package.</p>\n> +<code>time</code> package.\n> +</p>\n>\n> -<p>The <code>Exec</code> function has been removed; callers should use\n> -<code>Exec</code> from the <code>syscall</code> package, where\n> available.</p>\n> +<p>\n> +The <code>Exec</code> function has been removed; callers should use\n> +<code>Exec</code> from the <code>syscall</code> package, where available.\n> +</p>\n>\n> -<p>The <code>ShellExpand</code> function has been renamed to <a\n> -href=\"/pkg/os/#ExpandEnv\"><**code>ExpandEnv</code></a>.</p>\n> +<p>\n> +The <code>ShellExpand</code> function has been renamed to <a\n> +href=\"/pkg/os/#ExpandEnv\"><**code>ExpandEnv</code></a>.\n> +</p>\n>\n> -<p>The <a href=\"/pkg/os/#NewFile\"><code>**NewFile</code></a> function\n> +<p>\n> +The <a href=\"/pkg/os/#NewFile\"><code>**NewFile</code></a> function\n>  now takes a <code>uintptr</code> fd, instead of an <code>int</code>.\n>  The <a href=\"/pkg/os/#File.Fd\"><code>**Fd</code></a> method on files now\n> -also returns a <code>uintptr</code>.</p>\n> +also returns a <code>uintptr</code>.\n> +</p>\n> +\n> +<p>\n> +There are no longer error constants such as <code>EINVAL</code>\n> +in the <code>os</code> package, since the set of values varied with\n> +the underlying operating system. There are new portable functions like\n> +<a href=\"/pkg/os/#IsPermission\"><**code>IsPermission</code></a>\n> +to test common error properties, plus a few new error values\n> +with more Go-like names, such as\n> +<a href=\"/pkg/os/#ErrPermission\">**<code>ErrPermission</code></a>\n> +and\n> +<a href=\"/pkg/os/#ErrNoEnv\"><**code>ErrNoEnv</code></a>.\n> +\n>\n>  <p>\n>  <em>Updating</em>:\n> -What little code is affected will be caught by the compiler and must be\n> updated by hand.\n> +Affected code will be caught by the compiler and must be updated by hand.\n>  </p>\n>\n>  <h4 id=\"os_fileinfo\">The os.FileInfo type</h4>\n> Index: doc/go1.tmpl\n> ==============================**==============================**=======\n> --- a/doc/go1.tmpl\n> +++ b/doc/go1.tmpl\n> @@ -1321,24 +1321,44 @@\n>\n>  <h3 id=\"os\">The os package</h3>\n>\n> -<p>The <code>Time</code> function has been removed; callers should use\n> +<p>\n> +The <code>Time</code> function has been removed; callers should use\n>  the <a href=\"/pkg/time/#Time\"><code>**Time</code></a> type from the\n> -<code>time</code> package.</p>\n> +<code>time</code> package.\n> +</p>\n>\n> -<p>The <code>Exec</code> function has been removed; callers should use\n> -<code>Exec</code> from the <code>syscall</code> package, where\n> available.</p>\n> +<p>\n> +The <code>Exec</code> function has been removed; callers should use\n> +<code>Exec</code> from the <code>syscall</code> package, where available.\n> +</p>\n>\n> -<p>The <code>ShellExpand</code> function has been renamed to <a\n> -href=\"/pkg/os/#ExpandEnv\"><**code>ExpandEnv</code></a>.</p>\n> +<p>\n> +The <code>ShellExpand</code> function has been renamed to <a\n> +href=\"/pkg/os/#ExpandEnv\"><**code>ExpandEnv</code></a>.\n> +</p>\n>\n> -<p>The <a href=\"/pkg/os/#NewFile\"><code>**NewFile</code></a> function\n> +<p>\n> +The <a href=\"/pkg/os/#NewFile\"><code>**NewFile</code></a> function\n>  now takes a <code>uintptr</code> fd, instead of an <code>int</code>.\n>  The <a href=\"/pkg/os/#File.Fd\"><code>**Fd</code></a> method on files now\n> -also returns a <code>uintptr</code>.</p>\n> +also returns a <code>uintptr</code>.\n> +</p>\n> +\n> +<p>\n> +There are no longer error constants such as <code>EINVAL</code>\n> +in the <code>os</code> package, since the set of values varied with\n> +the underlying operating system. There are new portable functions like\n> +<a href=\"/pkg/os/#IsPermission\"><**code>IsPermission</code></a>\n> +to test common error properties, plus a few new error values\n> +with more Go-like names, such as\n> +<a href=\"/pkg/os/#ErrPermission\">**<code>ErrPermission</code></a>\n> +and\n> +<a href=\"/pkg/os/#ErrNoEnv\"><**code>ErrNoEnv</code></a>.\n> +\n>\n>  <p>\n>  <em>Updating</em>:\n> -What little code is affected will be caught by the compiler and must be\n> updated by hand.\n> +Affected code will be caught by the compiler and must be updated by hand.\n>  </p>\n>\n>  <h4 id=\"os_fileinfo\">The os.FileInfo type</h4>\n> Index: src/pkg/os/env.go\n> ==============================**==============================**=======\n> --- a/src/pkg/os/env.go\n> +++ b/src/pkg/os/env.go\n> @@ -77,8 +77,8 @@\n>        return s[:i], i\n>  }\n>\n> -// ENOENV is the error indicating that an environment variable does not\n> exist.\n> -var ENOENV = errors.New(\"no such environment variable\")\n> +// ErrNoEnv is the error indicating that an environment variable does not\n> exist.\n> +var ErrNoEnv = errors.New(\"no such environment variable\")\n>\n>  // Getenverror retrieves the value of the environment variable named by\n> the key.\n>  // It returns the value and an error, if any.\n> @@ -88,7 +88,7 @@\n>        }\n>        val, found := syscall.Getenv(key)\n>        if !found {\n> -               return \"\", ENOENV\n> +               return \"\", ErrNoEnv\n>        }\n>        return val, nil\n>  }\n> Index: test/env.go\n> ==============================**==============================**=======\n> --- a/test/env.go\n> +++ b/test/env.go\n> @@ -22,7 +22,7 @@\n>                os.Exit(1)\n>        }\n>        xxx, e1 := os.Getenverror(\"DOES_NOT_**EXIST\")\n> -       if e1 != os.ENOENV {\n> +       if e1 != os.ErrNoEnv {\n>                print(\"$DOES_NOT_EXIST=\", xxx, \"; err = \", e1.Error(), \"\\n\")\n>                os.Exit(1)\n>        }\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-19 02:41:26.322574",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Before I finish, do you agree with removing that?\n\nOn Sat, Feb 18, 2012 at 6:41 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n> I was just deleting ENOENV entirely, actually, in the process of removing\n> os.Getenverror (issue 3065)\n>\n>\n> On Sat, Feb 18, 2012 at 6:40 PM, <r@golang.org> wrote:\n>\n>> Reviewers: golang-dev_googlegroups.com,\n>>\n>> Message:\n>> Hello golang-dev@googlegroups.com,\n>>\n>> I'd like you to review this change to\n>> https://code.google.com/p/go/\n>>\n>>\n>> Description:\n>> os: rename ENOENV ErrNoEnv\n>> Add a description of the error changes tto os to the go1 doc.\n>> I'm sure I wrote these before but they've disappeared.\n>>\n>> Please review this at http://codereview.appspot.com/**5673100/<http://codereview.appspot.com/5673100/>\n>>\n>> Affected files:\n>>  M doc/go1.html\n>>  M doc/go1.tmpl\n>>  M src/pkg/os/env.go\n>>  M test/env.go\n>>\n>>\n>> Index: doc/go1.html\n>> ==============================**==============================**=======\n>> --- a/doc/go1.html\n>> +++ b/doc/go1.html\n>> @@ -7,7 +7,7 @@\n>>  -->\n>>\n>>\n>> -<!-- Center the tables, and disable the 1995 3D borders -->\n>> +<!-- Center the tables, and disable the 1995-era 3D borders -->\n>>  <style>\n>>  table { margin-left: auto; margin-right: auto; border-style: none; }\n>>  hr { border-style: none; border-top: 1px solid black; }\n>> @@ -1418,24 +1418,44 @@\n>>\n>>  <h3 id=\"os\">The os package</h3>\n>>\n>> -<p>The <code>Time</code> function has been removed; callers should use\n>> +<p>\n>> +The <code>Time</code> function has been removed; callers should use\n>>  the <a href=\"/pkg/time/#Time\"><code>**Time</code></a> type from the\n>> -<code>time</code> package.</p>\n>> +<code>time</code> package.\n>> +</p>\n>>\n>> -<p>The <code>Exec</code> function has been removed; callers should use\n>> -<code>Exec</code> from the <code>syscall</code> package, where\n>> available.</p>\n>> +<p>\n>> +The <code>Exec</code> function has been removed; callers should use\n>> +<code>Exec</code> from the <code>syscall</code> package, where available.\n>> +</p>\n>>\n>> -<p>The <code>ShellExpand</code> function has been renamed to <a\n>> -href=\"/pkg/os/#ExpandEnv\"><**code>ExpandEnv</code></a>.</p>\n>> +<p>\n>> +The <code>ShellExpand</code> function has been renamed to <a\n>> +href=\"/pkg/os/#ExpandEnv\"><**code>ExpandEnv</code></a>.\n>> +</p>\n>>\n>> -<p>The <a href=\"/pkg/os/#NewFile\"><code>**NewFile</code></a> function\n>> +<p>\n>> +The <a href=\"/pkg/os/#NewFile\"><code>**NewFile</code></a> function\n>>  now takes a <code>uintptr</code> fd, instead of an <code>int</code>.\n>>  The <a href=\"/pkg/os/#File.Fd\"><code>**Fd</code></a> method on files now\n>> -also returns a <code>uintptr</code>.</p>\n>> +also returns a <code>uintptr</code>.\n>> +</p>\n>> +\n>> +<p>\n>> +There are no longer error constants such as <code>EINVAL</code>\n>> +in the <code>os</code> package, since the set of values varied with\n>> +the underlying operating system. There are new portable functions like\n>> +<a href=\"/pkg/os/#IsPermission\"><**code>IsPermission</code></a>\n>> +to test common error properties, plus a few new error values\n>> +with more Go-like names, such as\n>> +<a href=\"/pkg/os/#ErrPermission\">**<code>ErrPermission</code></a>\n>> +and\n>> +<a href=\"/pkg/os/#ErrNoEnv\"><**code>ErrNoEnv</code></a>.\n>> +\n>>\n>>  <p>\n>>  <em>Updating</em>:\n>> -What little code is affected will be caught by the compiler and must be\n>> updated by hand.\n>> +Affected code will be caught by the compiler and must be updated by hand.\n>>  </p>\n>>\n>>  <h4 id=\"os_fileinfo\">The os.FileInfo type</h4>\n>> Index: doc/go1.tmpl\n>> ==============================**==============================**=======\n>> --- a/doc/go1.tmpl\n>> +++ b/doc/go1.tmpl\n>> @@ -1321,24 +1321,44 @@\n>>\n>>  <h3 id=\"os\">The os package</h3>\n>>\n>> -<p>The <code>Time</code> function has been removed; callers should use\n>> +<p>\n>> +The <code>Time</code> function has been removed; callers should use\n>>  the <a href=\"/pkg/time/#Time\"><code>**Time</code></a> type from the\n>> -<code>time</code> package.</p>\n>> +<code>time</code> package.\n>> +</p>\n>>\n>> -<p>The <code>Exec</code> function has been removed; callers should use\n>> -<code>Exec</code> from the <code>syscall</code> package, where\n>> available.</p>\n>> +<p>\n>> +The <code>Exec</code> function has been removed; callers should use\n>> +<code>Exec</code> from the <code>syscall</code> package, where available.\n>> +</p>\n>>\n>> -<p>The <code>ShellExpand</code> function has been renamed to <a\n>> -href=\"/pkg/os/#ExpandEnv\"><**code>ExpandEnv</code></a>.</p>\n>> +<p>\n>> +The <code>ShellExpand</code> function has been renamed to <a\n>> +href=\"/pkg/os/#ExpandEnv\"><**code>ExpandEnv</code></a>.\n>> +</p>\n>>\n>> -<p>The <a href=\"/pkg/os/#NewFile\"><code>**NewFile</code></a> function\n>> +<p>\n>> +The <a href=\"/pkg/os/#NewFile\"><code>**NewFile</code></a> function\n>>  now takes a <code>uintptr</code> fd, instead of an <code>int</code>.\n>>  The <a href=\"/pkg/os/#File.Fd\"><code>**Fd</code></a> method on files now\n>> -also returns a <code>uintptr</code>.</p>\n>> +also returns a <code>uintptr</code>.\n>> +</p>\n>> +\n>> +<p>\n>> +There are no longer error constants such as <code>EINVAL</code>\n>> +in the <code>os</code> package, since the set of values varied with\n>> +the underlying operating system. There are new portable functions like\n>> +<a href=\"/pkg/os/#IsPermission\"><**code>IsPermission</code></a>\n>> +to test common error properties, plus a few new error values\n>> +with more Go-like names, such as\n>> +<a href=\"/pkg/os/#ErrPermission\">**<code>ErrPermission</code></a>\n>> +and\n>> +<a href=\"/pkg/os/#ErrNoEnv\"><**code>ErrNoEnv</code></a>.\n>> +\n>>\n>>  <p>\n>>  <em>Updating</em>:\n>> -What little code is affected will be caught by the compiler and must be\n>> updated by hand.\n>> +Affected code will be caught by the compiler and must be updated by hand.\n>>  </p>\n>>\n>>  <h4 id=\"os_fileinfo\">The os.FileInfo type</h4>\n>> Index: src/pkg/os/env.go\n>> ==============================**==============================**=======\n>> --- a/src/pkg/os/env.go\n>> +++ b/src/pkg/os/env.go\n>> @@ -77,8 +77,8 @@\n>>        return s[:i], i\n>>  }\n>>\n>> -// ENOENV is the error indicating that an environment variable does not\n>> exist.\n>> -var ENOENV = errors.New(\"no such environment variable\")\n>> +// ErrNoEnv is the error indicating that an environment variable does\n>> not exist.\n>> +var ErrNoEnv = errors.New(\"no such environment variable\")\n>>\n>>  // Getenverror retrieves the value of the environment variable named by\n>> the key.\n>>  // It returns the value and an error, if any.\n>> @@ -88,7 +88,7 @@\n>>        }\n>>        val, found := syscall.Getenv(key)\n>>        if !found {\n>> -               return \"\", ENOENV\n>> +               return \"\", ErrNoEnv\n>>        }\n>>        return val, nil\n>>  }\n>> Index: test/env.go\n>> ==============================**==============================**=======\n>> --- a/test/env.go\n>> +++ b/test/env.go\n>> @@ -22,7 +22,7 @@\n>>                os.Exit(1)\n>>        }\n>>        xxx, e1 := os.Getenverror(\"DOES_NOT_**EXIST\")\n>> -       if e1 != os.ENOENV {\n>> +       if e1 != os.ErrNoEnv {\n>>                print(\"$DOES_NOT_EXIST=\", xxx, \"; err = \", e1.Error(),\n>> \"\\n\")\n>>                os.Exit(1)\n>>        }\n>>\n>>\n>>\n>\n",
			"disapproval": false,
			"date": "2012-02-19 02:42:04.513866",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "this CL can still be reviewed and checked in.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-19 02:55:03.564295",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as bfdc8e2f636d ***\n\ngo 1: add a description of the os error changes.\nI'm sure I wrote these before but they've disappeared.\n\nR=golang-dev, bradfitz, r\nCC=golang-dev\nhttp://codereview.appspot.com/5673100",
			"disapproval": false,
			"date": "2012-02-19 03:15:32.255149",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 19/02/2012, at 1:42 PM, Brad Fitzpatrick wrote:\n\n> Before I finish, do you agree with removing that?\n\nyes.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-02-19 02:54:37.923808",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, r@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-19 03:04:34.243520",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5673100: go 1: add a description of the os error changes.",
	"created": "2012-02-19 02:40:13.261744",
	"patchsets": [
		1,
		3001,
		5002,
		13
	],
	"modified": "2012-02-19 03:15:34.602425",
	"closed": true,
	"issue": 5673100
}