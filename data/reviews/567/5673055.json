{
	"description": "dist: add clang specific -Wno options\n\nClang 3.1 has more warnings enabled by default than GCC.\nCombined with -Werror, they cause the build to fail\nunnecessarily.  if the name of our compiler ends in \"clang\",\nadd the necessary extra -Wno options.  Ideally we would add\nthese flags unconditionally, as GCC is supposed to ignore\nunknown -Wno flags, but apple's llvm-gcc doesn't.\n\nFixes issue 2878.",
	"cc": [
		"rsc@golang.org",
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 15, 2012 at 15:25,  <dave@cheney.net> wrote:\n> Will this work when distros start to use the version to allow multiple\n> clang installations, ie, clang-3.1, clang-4.6.1. etc.\n\nI expect that clang accepts unrecognized -Wno-* just like gcc does.\nIt is only Apple's mangled copy of gcc that does not.\n",
			"disapproval": false,
			"date": "2012-02-15 20:27:53.336386",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bobbypowers@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for adding support for clang.\n\nhttp://codereview.appspot.com/5673055/diff/6002/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttp://codereview.appspot.com/5673055/diff/6002/src/cmd/dist/build.c#newcode585\nsrc/cmd/dist/build.c:585: vadd(&gccargs, \"-Wno-dangling-else\");\nWill this work when distros start to use the version to allow multiple clang installations, ie, clang-3.1, clang-4.6.1. etc.",
			"disapproval": false,
			"date": "2012-02-15 20:25:19.266083",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bobbypowers@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks.",
			"disapproval": false,
			"date": "2012-02-16 18:31:36.926810",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fair enough, thanks for this CL.\n\nOn Thu, Feb 16, 2012 at 7:27 AM, Russ Cox <rsc@golang.org> wrote:\n> On Wed, Feb 15, 2012 at 15:25, \u00a0<dave@cheney.net> wrote:\n>> Will this work when distros start to use the version to allow multiple\n>> clang installations, ie, clang-3.1, clang-4.6.1. etc.\n>\n> I expect that clang accepts unrecognized -Wno-* just like gcc does.\n> It is only Apple's mangled copy of gcc that does not.\n",
			"disapproval": false,
			"date": "2012-02-15 20:31:01.763147",
			"approval": false
		},
		{
			"sender": "bobbypowers@gmail.com",
			"recipients": [
				"bobbypowers@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-15 15:03:12.184242",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bobbypowers@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4f0d27dab290 ***\n\ndist: add clang specific -Wno options\n\nClang 3.1 has more warnings enabled by default than GCC.\nCombined with -Werror, they cause the build to fail\nunnecessarily.  if the name of our compiler ends in \"clang\",\nadd the necessary extra -Wno options.  Ideally we would add\nthese flags unconditionally, as GCC is supposed to ignore\nunknown -Wno flags, but apple's llvm-gcc doesn't.\n\nFixes issue 2878.\n\nR=rsc, dave\nCC=golang-dev\nhttp://codereview.appspot.com/5673055\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-02-16 18:31:48.638532",
			"approval": false
		},
		{
			"sender": "bobbypowers@gmail.com",
			"recipients": [
				"bobbypowers@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-15 21:02:43.917927",
			"approval": false
		},
		{
			"sender": "bobbypowers@gmail.com",
			"recipients": [
				"bobbypowers@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-15 14:48:02.269197",
			"approval": false
		},
		{
			"sender": "bobbypowers@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 15, 2012 at 3:25 PM, <dave@cheney.net> wrote:\n\n> Thanks for adding support for clang.\n>\n>\n> http://codereview.appspot.com/**5673055/diff/6002/src/cmd/**dist/build.c<http://codereview.appspot.com/5673055/diff/6002/src/cmd/dist/build.c>\n> File src/cmd/dist/build.c (right):\n>\n> http://codereview.appspot.com/**5673055/diff/6002/src/cmd/**\n> dist/build.c#newcode585<http://codereview.appspot.com/5673055/diff/6002/src/cmd/dist/build.c#newcode585>\n> src/cmd/dist/build.c:585: vadd(&gccargs, \"-Wno-dangling-else\");\n> Will this work when distros start to use the version to allow multiple\n> clang installations, ie, clang-3.1, clang-4.6.1. etc.\n>\n> http://codereview.appspot.com/**5673055/<http://codereview.appspot.com/5673055/>\n>\n\nWell, as this CL is written, dist checks for 'clang' as a suffix of the cc\ncommand, so it won't append -Wno-dangling-else to the argument list for\nclang-3.1, meaning building with 'clang-3.1' will probably result in a\nbuild failure.  perhaps using the equivalent of strstr would be preferable\nto hassuffix?\n",
			"disapproval": false,
			"date": "2012-02-15 20:53:21.678627",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"bobbypowers@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please change the CL description to say cmd/dist instead of dist.\n\nhttp://codereview.appspot.com/5673055/diff/4002/src/cmd/dist/build.c\nFile src/cmd/dist/build.c (right):\n\nhttp://codereview.appspot.com/5673055/diff/4002/src/cmd/dist/build.c#newcode584\nsrc/cmd/dist/build.c:584: if(hassuffix(bstr(&b), \"clang\")) {\nhassuffix(gccargs.v[0], \"clang\"), I think.",
			"disapproval": false,
			"date": "2012-02-15 14:51:31.705215",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sure, using xstrstr is fine; I thought the concern was about\nolder clangs, not about clangs with different names; sorry.\n",
			"disapproval": false,
			"date": "2012-02-15 20:56:56.249790",
			"approval": false
		}
	],
	"owner_email": "bobbypowers@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "bpowers",
	"subject": "code review 5673055: dist: add clang specific -Wno options",
	"created": "2012-02-15 14:46:14.719441",
	"patchsets": [
		1,
		2001,
		4002,
		6002,
		1003
	],
	"modified": "2012-02-15 20:56:56.249790",
	"closed": false,
	"issue": 5673055
}