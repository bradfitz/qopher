{
	"description": "bytes: document Compare/Equal semantics for nil arguments, and add tests.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"r@google.com",
		"r@golang.org"
	],
	"reviewers": [
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Feb 18, 2012 at 3:36 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n\n> But strings can't be nil.\n\nThat's my point in my second email.\n\n> What's the issue, without reading through diffs\n> moving around due to whitespace? We don't document whether bytes.Equal is\n> true for nil == []byte(\"\") ?\n\nYeah. I was reviewing some code that used bytes.Equal with possibly\nnil arguments, and didn't know what the current behaviour was, or\nwhether it was specified either way. \"godoc bytes Equal\" didn't help,\nand nor did \"godoc -src bytes Equal\" because of the assembly version.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-02-18 04:40:31.679026",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 17, 2012 at 8:40 PM, David Symonds <dsymonds@golang.org> wrote:\n\n> On Sat, Feb 18, 2012 at 3:36 PM, Brad Fitzpatrick <bradfitz@golang.org>\n> wrote:\n>\n> > But strings can't be nil.\n>\n> That's my point in my second email.\n>\n> > What's the issue, without reading through diffs\n> > moving around due to whitespace? We don't document whether bytes.Equal is\n> > true for nil == []byte(\"\") ?\n>\n> Yeah. I was reviewing some code that used bytes.Equal with possibly\n> nil arguments, and didn't know what the current behaviour was, or\n> whether it was specified either way. \"godoc bytes Equal\" didn't help,\n> and nor did \"godoc -src bytes Equal\" because of the assembly version.\n>\n\nI don't care much either way, but I would like it documented.\n\nThere's always reflect.DeepEqual if you care about nil vs not, so that\nargues in favor of bytes.Equal being length + contents only.\n",
			"disapproval": false,
			"date": "2012-02-18 04:48:08.038520",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Where you going to add docs to this CL too?\n\nOn Fri, Feb 17, 2012 at 9:23 PM, <dsymonds@golang.org> wrote:\n\n> Hello golang-dev@googlegroups.com, bradfitz@golang.org, r@google.com\n> (cc: golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**5676090/<http://codereview.appspot.com/5676090/>\n>\n",
			"disapproval": false,
			"date": "2012-02-18 05:28:33.691444",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "But strings can't be nil. What's the issue, without reading through diffs\nmoving around due to whitespace? We don't document whether bytes.Equal is\ntrue for nil == []byte(\"\") ?\n\nOn Fri, Feb 17, 2012 at 8:34 PM, David Symonds <dsymonds@golang.org> wrote:\n\n> Also, perhaps other tests in bytes_test.go should be modified to check\n> the behaviour of nil values. That the arguments could be nil, as\n> opposed to empty, is a significant point of divergence between bytes\n> and strings.\n>\n>\n> Dave.\n>\n",
			"disapproval": false,
			"date": "2012-02-18 04:36:14.185268",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, r@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-18 05:31:17.766828",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, r@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-18 05:23:19.136231",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Feb 18, 2012 at 4:28 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n\n> Where you going to add docs to this CL too?\n\nErg, oops. I fail at Mercurial.\n",
			"disapproval": false,
			"date": "2012-02-18 05:31:05.165810",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Fri, Feb 17, 2012 at 9:31 PM, <dsymonds@golang.org> wrote:\n\n> Hello golang-dev@googlegroups.com, bradfitz@golang.org, r@google.com\n> (cc: golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**5676090/<http://codereview.appspot.com/5676090/>\n>\n",
			"disapproval": false,
			"date": "2012-02-18 05:34:58.595482",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-18 04:32:36.107926",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-18 06:37:06.656639",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Also, perhaps other tests in bytes_test.go should be modified to check\nthe behaviour of nil values. That the arguments could be nil, as\nopposed to empty, is a significant point of divergence between bytes\nand strings.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-02-18 04:34:39.967785",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "A nil slice is not equivalent to an empty byte slice.\nIt *is* an empty byte slice.\n",
			"disapproval": false,
			"date": "2012-02-18 20:00:42.122700",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Feb 18, 2012 at 3:48 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n\n> I don't care much either way, but I would like it documented.\n>\n> There's always reflect.DeepEqual if you care about nil vs not, so that\n> argues in favor of bytes.Equal being length + contents only.\n\nYeah, my inclination is to leave the semantics as they are (nil ==\n\"\"), and just test and document it.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-02-18 05:16:34.264776",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn 18/02/2012, at 4:16 PM, David Symonds wrote:\n\n> On Sat, Feb 18, 2012 at 3:48 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> \n>> I don't care much either way, but I would like it documented.\n>> \n>> There's always reflect.DeepEqual if you care about nil vs not, so that\n>> argues in favor of bytes.Equal being length + contents only.\n> \n> Yeah, my inclination is to leave the semantics as they are (nil ==\n> \"\"), and just test and document it.\n\nsgtm\n\n\n",
			"disapproval": false,
			"date": "2012-02-18 05:20:32.739007",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"r@google.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1fd4a645e47f ***\n\nbytes: document Compare/Equal semantics for nil arguments, and add tests.\n\nR=golang-dev, bradfitz, r, r\nCC=golang-dev\nhttp://codereview.appspot.com/5676090",
			"disapproval": false,
			"date": "2012-02-18 06:39:49.078067",
			"approval": false
		}
	],
	"owner_email": "dsymonds@golang.org",
	"private": false,
	"base_url": "",
	"owner": "dsymonds",
	"subject": "code review 5676090: bytes: document Compare/Equal semantics for nil argumen...",
	"created": "2012-02-18 04:31:46.636807",
	"patchsets": [
		1,
		2001,
		3,
		7003,
		4004,
		5006
	],
	"modified": "2012-02-18 20:00:42.182215",
	"closed": true,
	"issue": 5676090
}