{
	"description": "net/http: add some examples",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"adg@golang.org",
		"rogpeppe@gmail.com",
		"bradfitz@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "beats explaining it all the time, or having people do it without\ncomma-ok/err checking.  would rather show correct usage.\n\nOn Wed, Feb 15, 2012 at 4:54 PM, David Symonds <dsymonds@golang.org> wrote:\n\n> I wouldn't include a Hijacker example. It's a pretty advanced concept\n> that's just going to confuse people, right?\n>\n>\n> Dave.\n>\n",
			"disapproval": false,
			"date": "2012-02-15 05:59:43.754765",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5673052/diff/5001/src/pkg/net/http/example_test.go\nFile src/pkg/net/http/example_test.go (right):\n\nhttp://codereview.appspot.com/5673052/diff/5001/src/pkg/net/http/example_test.go#newcode15\nsrc/pkg/net/http/example_test.go:15: if hj, ok := w.(http.Hijacker); ok {\nsave a level of indentation?\n\nhj, ok := w.(http.Hijacker)\nif !ok {\n    return\n}",
			"disapproval": false,
			"date": "2012-02-15 11:07:32.706227",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"bradfitz@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=e9d84fc1c41a ***\n\nnet/http: add some examples\n\nR=golang-dev, dsymonds, adg, rogpeppe, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5673052",
			"disapproval": false,
			"date": "2012-02-15 23:15:16.788485",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-15 05:40:19.182238",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, adg@golang.org, rogpeppe@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-15 22:26:29.028990",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"bradfitz@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go\nFile src/pkg/net/http/example_test.go (right):\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode15\nsrc/pkg/net/http/example_test.go:15: http.Handle(\"/hijack\", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\nOn 2012/02/15 23:00:12, bradfitzgoog wrote:\n> On 2012/02/15 22:54:06, adg wrote:\n> > fn := func(...) { }\n> > \n> > http.HandleFunc(\"/hijack\", fn)\n> \n> for 80 columns?  I wouldn't write it like that normally.\n\nOk, well just use HandleFunc then.\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode39\nsrc/pkg/net/http/example_test.go:39: func ExampleGet() {\nOn 2012/02/15 23:00:12, bradfitzgoog wrote:\n> On 2012/02/15 22:54:06, adg wrote:\n> > Put this one first. I think they are listed in file order.\n> \n> Fix the tool. Strings is already all out of order now in the TOC.\n\nAlrighty.",
			"disapproval": false,
			"date": "2012-02-15 23:08:56.043461",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go\nFile src/pkg/net/http/example_test.go (right):\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode15\nsrc/pkg/net/http/example_test.go:15: http.Handle(\"/hijack\", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\nfn := func(...) { }\n\nhttp.HandleFunc(\"/hijack\", fn)\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode26\nsrc/pkg/net/http/example_test.go:26: defer conn.Close()\n// don't forget to Close the connection\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode39\nsrc/pkg/net/http/example_test.go:39: func ExampleGet() {\nPut this one first. I think they are listed in file order.\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode49\nsrc/pkg/net/http/example_test.go:49: fmt.Println(string(robots))\nfmt.Printf(\"%s\\n\", robots)",
			"disapproval": false,
			"date": "2012-02-15 22:54:06.391768",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"bradfitz@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, adg@golang.org, rogpeppe@gmail.com, bradfitz@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-15 23:00:40.076475",
			"approval": false
		},
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"bradfitz@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go\nFile src/pkg/net/http/example_test.go (right):\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode15\nsrc/pkg/net/http/example_test.go:15: http.Handle(\"/hijack\", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\nOn 2012/02/15 22:54:06, adg wrote:\n> fn := func(...) { }\n> \n> http.HandleFunc(\"/hijack\", fn)\n\nfor 80 columns?  I wouldn't write it like that normally.\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode26\nsrc/pkg/net/http/example_test.go:26: defer conn.Close()\nOn 2012/02/15 22:54:06, adg wrote:\n> // don't forget to Close the connection\n\nDone.\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode39\nsrc/pkg/net/http/example_test.go:39: func ExampleGet() {\nOn 2012/02/15 22:54:06, adg wrote:\n> Put this one first. I think they are listed in file order.\n\nFix the tool. Strings is already all out of order now in the TOC.\n\nhttp://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode49\nsrc/pkg/net/http/example_test.go:49: fmt.Println(string(robots))\nOn 2012/02/15 22:54:06, adg wrote:\n> fmt.Printf(\"%s\\n\", robots)\n\nDone.",
			"disapproval": false,
			"date": "2012-02-15 23:00:12.306880",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 15 February 2012 16:54, David Symonds <dsymonds@golang.org> wrote:\n> I wouldn't include a Hijacker example. It's a pretty advanced concept\n> that's just going to confuse people, right?\n\nBetter to just add some comments that explain when it should be used.\nWe should have examples for everything!\n\nAndrew\n",
			"disapproval": false,
			"date": "2012-02-15 06:40:07.101465",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dsymonds@golang.org, adg@golang.org, rogpeppe@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-15 22:23:18.580361",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Feb 16, 2012 at 10:08 AM, <adg@golang.org> wrote:\n\n> LGTM\n>\n>\n>\n> http://codereview.appspot.com/**5673052/diff/3003/src/pkg/net/**\n> http/example_test.go<http://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go>\n> File src/pkg/net/http/example_test.**go (right):\n>\n> http://codereview.appspot.com/**5673052/diff/3003/src/pkg/net/**\n> http/example_test.go#newcode15<http://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode15>\n> src/pkg/net/http/example_test.**go:15: http.Handle(\"/hijack\",\n> http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {\n> On 2012/02/15 23:00:12, bradfitzgoog wrote:\n>\n>> On 2012/02/15 22:54:06, adg wrote:\n>> > fn := func(...) { }\n>> >\n>> > http.HandleFunc(\"/hijack\", fn)\n>>\n>\n>  for 80 columns?  I wouldn't write it like that normally.\n>>\n>\n> Ok, well just use HandleFunc then.\n\n\ndone\n\n\n>\n>\n> http://codereview.appspot.com/**5673052/diff/3003/src/pkg/net/**\n> http/example_test.go#newcode39<http://codereview.appspot.com/5673052/diff/3003/src/pkg/net/http/example_test.go#newcode39>\n> src/pkg/net/http/example_test.**go:39: func ExampleGet() {\n> On 2012/02/15 23:00:12, bradfitzgoog wrote:\n>\n>> On 2012/02/15 22:54:06, adg wrote:\n>> > Put this one first. I think they are listed in file order.\n>>\n>\n>  Fix the tool. Strings is already all out of order now in the TOC.\n>>\n>\n> Alrighty.\n>\n> http://codereview.appspot.com/**5673052/<http://codereview.appspot.com/5673052/>\n>\n",
			"disapproval": false,
			"date": "2012-02-15 23:11:12.473935",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I wouldn't include a Hijacker example. It's a pretty advanced concept\nthat's just going to confuse people, right?\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-02-15 05:54:26.691224",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5673052: net/http: add some examples",
	"created": "2012-02-15 05:16:53.524506",
	"patchsets": [
		1,
		2001,
		5001,
		4003,
		3003,
		6,
		7002
	],
	"modified": "2012-02-15 23:15:19.950932",
	"closed": true,
	"issue": 5673052
}