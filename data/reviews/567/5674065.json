{
	"description": "net/url: regularise receiver names.\n\nUpdate issue 2946.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"bradfitz@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"bradfitz@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1a03fdfef2ab ***\n\nnet/url: regularise receiver names.\n\nUpdate issue 2946.\n\nR=golang-dev, bradfitz, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5674065",
			"disapproval": false,
			"date": "2012-02-16 04:08:00.165591",
			"approval": false
		},
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"bradfitz@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-16 03:59:42.692653",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Feb 16, 2012 at 2:27 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n\n> Base was named/kept on purpose to match the doc comment.\n\nIt's inconsistently applied, though. Parse and ResolveReference also\neffectively operate on a base URL. Are there other Go packages that\nrename the receiver in this way?\n",
			"disapproval": false,
			"date": "2012-02-16 03:46:40.264798",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-16 03:21:21.144028",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Base was named/kept on purpose to match the doc comment.\n On Feb 16, 2012 2:21 PM, <dsymonds@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> net/url: regularise receiver names.\n>\n> Update issue 2946.\n>\n> Please review this at http://codereview.appspot.com/**5674065/<http://codereview.appspot.com/5674065/>\n>\n> Affected files:\n>  M src/pkg/net/url/url.go\n>\n>\n> Index: src/pkg/net/url/url.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/url/url.go\n> +++ b/src/pkg/net/url/url.go\n> @@ -592,12 +592,12 @@\n>  // Parse parses a URL in the context of a base URL.  The URL in ref\n>  // may be relative or absolute.  Parse returns nil, err on parse\n>  // failure, otherwise its return value is the same as ResolveReference.\n> -func (base *URL) Parse(ref string) (*URL, error) {\n> +func (u *URL) Parse(ref string) (*URL, error) {\n>        refurl, err := Parse(ref)\n>        if err != nil {\n>                return nil, err\n>        }\n> -       return base.ResolveReference(refurl), nil\n> +       return u.ResolveReference(refurl), nil\n>  }\n>\n>  // ResolveReference resolves a URI reference to an absolute URI from\n> @@ -606,13 +606,13 @@\n>  // URL instance, even if the returned URL is identical to either the\n>  // base or reference. If ref is an absolute URL, then ResolveReference\n>  // ignores base and returns a copy of ref.\n> -func (base *URL) ResolveReference(ref *URL) *URL {\n> +func (u *URL) ResolveReference(ref *URL) *URL {\n>        if ref.IsAbs() {\n>                url := *ref\n>                return &url\n>        }\n>        // relativeURI = ( net_path | abs_path | rel_path ) [ \"?\" query ]\n> -       url := *base\n> +       url := *u\n>        url.RawQuery = ref.RawQuery\n>        url.Fragment = ref.Fragment\n>        if ref.Opaque != \"\" {\n> @@ -632,7 +632,7 @@\n>                url.Path = ref.Path\n>        } else {\n>                // The \"rel_path\" case.\n> -               path := resolvePath(base.Path, ref.Path)\n> +               path := resolvePath(u.Path, ref.Path)\n>                if !strings.HasPrefix(path, \"/\") {\n>                        path = \"/\" + path\n>                }\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-16 03:27:56.343686",
			"approval": false
		},
		{
			"sender": "bradfitz@google.com",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"bradfitz@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5674065/diff/2005/src/pkg/net/url/url.go\nFile src/pkg/net/url/url.go (right):\n\nhttp://codereview.appspot.com/5674065/diff/2005/src/pkg/net/url/url.go#newcode592\nsrc/pkg/net/url/url.go:592: // Parse parses a URL in the context of the URL.  The provided URL in ref\nMaybe:\n\nParse parses a URL reference in the context of the receiver URL. The URL reference may be relative or absolute.\n\n?",
			"disapproval": false,
			"date": "2012-02-16 03:55:12.111010",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-16 03:51:02.096445",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"bradfitz@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, bradfitz@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-16 03:56:34.068399",
			"approval": false
		}
	],
	"owner_email": "dsymonds@golang.org",
	"private": false,
	"base_url": "",
	"owner": "dsymonds",
	"subject": "code review 5674065: net/url: regularise receiver names.",
	"created": "2012-02-16 03:20:45.625020",
	"patchsets": [
		1,
		2001,
		5001,
		2005,
		2006,
		3
	],
	"modified": "2012-02-16 04:08:02.751439",
	"closed": true,
	"issue": 5674065
}