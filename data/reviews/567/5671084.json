{
	"description": "ssh: fix locking in channel.Write\n\nSince a lock is retaken before sync.Cond.Wait returns, this could\ndeadlock when the for loop attempts to take the lock again. (Reported\nby sanjay.m.)\n\ntheirWindow was used outside of the lock, therefore concurrent writers\ncould overrun the window.\n\ntheirWindow was never updated to reflect the data written.",
	"cc": [
		"dave@cheney.net",
		"balasanjay@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please review carefully because I may have completely misunderstood this code!",
			"disapproval": false,
			"date": "2012-02-17 16:01:57.866898",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, balasanjay@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://agl%40golang.org@code.google.com/p/go.crypto/",
			"disapproval": false,
			"date": "2012-02-18 18:49:49.065963",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 89f10772a982 ***\n\nssh: fix locking in channel.Write\n\nSince a lock is retaken before sync.Cond.Wait returns, this could\ndeadlock when the for loop attempts to take the lock again. (Reported\nby sanjay.m.)\n\ntheirWindow was used outside of the lock, therefore concurrent writers\ncould overrun the window.\n\ntheirWindow was never updated to reflect the data written.\n\nR=dave, balasanjay\nCC=golang-dev\nhttp://codereview.appspot.com/5671084",
			"disapproval": false,
			"date": "2012-02-18 18:50:13.986905",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This looks correct, but I'd like to check it again in a few hours when I'm more awake.\n\nhttp://codereview.appspot.com/5671084/diff/2001/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/5671084/diff/2001/ssh/channel.go#newcode252\nssh/channel.go:252: panic(\"unreachable\")\nnit: it may be possible (although more personal preference) to refactor this loop to not require a panic. \n\nvar taken int\nfor {\n...\nc.theirWindow -= taken\nbreak\n}\nreturn taken, nil",
			"disapproval": false,
			"date": "2012-02-17 21:34:10.358923",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, I believe this code is correct",
			"disapproval": false,
			"date": "2012-02-18 01:41:31.307644",
			"approval": true
		},
		{
			"sender": "balasanjay@gmail.com",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5671084/diff/2001/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/5671084/diff/2001/ssh/channel.go#newcode252\nssh/channel.go:252: panic(\"unreachable\")\nhow about this for the loop:\nfor {\n\tif c.dead || c.weClosed {\n\t\treturn 0, io.EOF\n\t}\n\n\tif c.theirWindow != 0 {\n\t\tbreak\n\t}\n\n\tc.cond.Wait()\n}\n\n\n\nOn 2012/02/17 21:34:10, dfc wrote:\n> nit: it may be possible (although more personal preference) to refactor this\n> loop to not require a panic. \n> \n> var taken int\n> for {\n> ...\n> c.theirWindow -= taken\n> break\n> }\n> return taken, nil",
			"disapproval": false,
			"date": "2012-02-18 07:52:20.808689",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"dave@cheney.net",
				"balasanjay@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5671084/diff/2001/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/5671084/diff/2001/ssh/channel.go#newcode252\nssh/channel.go:252: panic(\"unreachable\")\nOn 2012/02/18 07:52:21, sanjay.m wrote:\n> how about this for the loop:\n\nThanks, that's better. Will submit in a sec.",
			"disapproval": false,
			"date": "2012-02-18 18:46:58.644191",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, thanks for removing the panic logic.\n\nOn Sun, Feb 19, 2012 at 5:46 AM,  <agl@golang.org> wrote:\n>\n> http://codereview.appspot.com/5671084/diff/2001/ssh/channel.go\n> File ssh/channel.go (right):\n>\n> http://codereview.appspot.com/5671084/diff/2001/ssh/channel.go#newcode252\n> ssh/channel.go:252: panic(\"unreachable\")\n> On 2012/02/18 07:52:21, sanjay.m wrote:\n>>\n>> how about this for the loop:\n>\n>\n> Thanks, that's better. Will submit in a sec.\n>\n> http://codereview.appspot.com/5671084/\n",
			"disapproval": false,
			"date": "2012-02-18 22:21:15.563237",
			"approval": true
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 5671084: ssh: fix locking in channel.Write",
	"created": "2012-02-17 16:00:27.359324",
	"patchsets": [
		1,
		2001,
		6002
	],
	"modified": "2012-02-18 18:50:14.940069",
	"closed": true,
	"issue": 5671084
}