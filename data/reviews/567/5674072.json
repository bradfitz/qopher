{
	"description": "runtime: Permit default behaviour of SIGTSTP, SIGTTIN, SIGTTOU.\n\nFixes issue 3037.",
	"cc": [
		"rsc@golang.org",
		"minux.ma@gmail.com",
		"r@golang.org",
		"rsc@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5674072/diff/2001/src/pkg/runtime/signal_unix.c\nFile src/pkg/runtime/signal_unix.c (right):\n\nhttp://codereview.appspot.com/5674072/diff/2001/src/pkg/runtime/signal_unix.c#newcode30\nsrc/pkg/runtime/signal_unix.c:30: if((t->flags == 0) || (t->flags & SigDefault)) {\nDrop new { }",
			"disapproval": false,
			"date": "2012-02-16 19:15:09.890756",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> No, wait. It isn't. Darn.\n\nThanks for slogging through it.  Welcome to signals.\n",
			"disapproval": false,
			"date": "2012-02-16 23:44:11.448335",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"r@golang.org",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=8ff98919d8a9 ***\n\nruntime: Permit default behaviour of SIGTSTP, SIGTTIN, SIGTTOU.\n\nFixes issue 3037.\n\nR=rsc, minux.ma, r, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5674072",
			"disapproval": false,
			"date": "2012-02-17 03:36:46.801893",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 17, 2012 at 8:18 AM,  <rsc@golang.org> wrote:\n\n> Also, this is supposed to be portable, meaning not\n> Unix-specific. \u00a0Can you put this code in signal_unix.c,\n> which already has the right extern declaration?\n\nSigTab is in runtime.h, as are the flags, so it looks portable enough\nto me. But I could put these bits into new functions in signal_unix.c\nif you really want.\n",
			"disapproval": false,
			"date": "2012-02-16 21:29:08.966589",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 17, 2012 at 1:03 PM,  <r@golang.org> wrote:\n\n> Fixes issue 3037?\n\nYep.\n",
			"disapproval": false,
			"date": "2012-02-17 02:05:13.772710",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n",
			"disapproval": false,
			"date": "2012-02-16 22:11:09.118915",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I clearly don't, since this compiles just fine.  ;-)\n\nyou should put\n\nextern SigTab runtime.sigtab[]; \n\nat the top of the file.  The fact that C code compiles\nis not a guarantee that it is correct.",
			"disapproval": false,
			"date": "2012-02-16 21:14:23.425695",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No, wait. It isn't. Darn.\n",
			"disapproval": false,
			"date": "2012-02-16 23:22:40.535689",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Okay, it's good to go now.\n\nTurns out that calling runtime\u00b7setsig on a signal the second time\ncauses a mysterious panic. Rather than trying to unravel all that to\ntry to make it idempotent, I just changed runtime\u00b7sigenable(~0) to\nonly call runtime\u00b7setsig for SigDefault flags (i.e. the ones that\nweren't enabled during runtime\u00b7initsig).\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-02-17 01:55:34.159324",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-16 21:11:57.828772",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Feb 16, 2012 at 16:29, David Symonds <dsymonds@golang.org> wrote:\n> SigTab is in runtime.h, as are the flags, so it looks portable enough\n> to me. But I could put these bits into new functions in signal_unix.c\n> if you really want.\n\nsetsig is not in runtime.h, and it is not implemented on\nthe non-unix systems.  please put the code in signal_unix.c,\nmaybe runtime.sigenable(int32) with 0 meaning everything.\nyou'll need to add dummy functions to signal_windows.c\nand signal_plan9.c too.\n\nit is possible that if you run\n\nGOOS=windows GOARCH=386 make.bash\n\nit will do a windows build for you, to test that\nit builds.\n",
			"disapproval": false,
			"date": "2012-02-16 21:36:57.471216",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "wait, I'm getting a panic in the os/signal test.\n",
			"disapproval": false,
			"date": "2012-02-16 22:18:21.133579",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Okay, ready for a final review. I need to use ~0 as the sentinel to\nruntime.sigenable.\n",
			"disapproval": false,
			"date": "2012-02-16 23:20:02.620458",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5674072/diff/2001/src/pkg/runtime/sigqueue.goc\nFile src/pkg/runtime/sigqueue.goc (right):\n\nhttp://codereview.appspot.com/5674072/diff/2001/src/pkg/runtime/sigqueue.goc#newcode144\nsrc/pkg/runtime/sigqueue.goc:144: if(runtime\u00b7sigtab[i].flags & SigDefault)\nYou have to declare runtime\u00b7sigtab[] in this file, or the code won't compile.",
			"disapproval": false,
			"date": "2012-02-16 19:27:33.056673",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 17, 2012 at 8:14 AM,  <rsc@golang.org> wrote:\n\n>> I clearly don't, since this compiles just fine. \u00a0;-)\n>\n>\n> you should put\n>\n> extern SigTab runtime.sigtab[];\n>\n> at the top of the file. \u00a0The fact that C code compiles\n> is not a guarantee that it is correct.\n\nDone.\n",
			"disapproval": false,
			"date": "2012-02-16 21:15:35.371006",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-02-17 03:25:43.741446",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fixes issue 3037?",
			"disapproval": false,
			"date": "2012-02-17 02:03:48.117434",
			"approval": false
		},
		{
			"sender": "rsc@google.com",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"r@golang.org",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5674072/diff/7024/src/pkg/runtime/signal_unix.c\nFile src/pkg/runtime/signal_unix.c (right):\n\nhttp://codereview.appspot.com/5674072/diff/7024/src/pkg/runtime/signal_unix.c#newcode46\nsrc/pkg/runtime/signal_unix.c:46: if(t->flags & SigDefault)\nYou should probably clear SigDefault here so you don't setsig it twice if there are two Notify(c) calls.\n\nhttp://codereview.appspot.com/5674072/diff/7024/src/pkg/runtime/signal_unix.c#newcode52\nsrc/pkg/runtime/signal_unix.c:52: runtime\u00b7setsig(sig, runtime\u00b7sighandler, true);\nSame here: check SigDefault and only enable in that case (and clear).",
			"disapproval": false,
			"date": "2012-02-17 02:47:16.024010",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5674072/diff/2001/src/pkg/runtime/signal_unix.c\nFile src/pkg/runtime/signal_unix.c (right):\n\nhttp://codereview.appspot.com/5674072/diff/2001/src/pkg/runtime/signal_unix.c#newcode30\nsrc/pkg/runtime/signal_unix.c:30: if((t->flags == 0) || (t->flags & SigDefault)) {\nOn 2012/02/16 19:15:10, rsc wrote:\n> Drop new { }\n\nOops, dreg.\n\nhttp://codereview.appspot.com/5674072/diff/2001/src/pkg/runtime/sigqueue.goc\nFile src/pkg/runtime/sigqueue.goc (right):\n\nhttp://codereview.appspot.com/5674072/diff/2001/src/pkg/runtime/sigqueue.goc#newcode144\nsrc/pkg/runtime/sigqueue.goc:144: if(runtime\u00b7sigtab[i].flags & SigDefault)\nOn 2012/02/16 19:27:33, minux wrote:\n> You have to declare runtime\u00b7sigtab[] in this file, or the code won't compile.\n\nI clearly don't, since this compiles just fine.  ;-)",
			"disapproval": false,
			"date": "2012-02-16 21:13:17.205864",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Actually, I have no idea why the C compiler would allow\nthis code.  I can't find a forward declaration of runtime.sigtab\nanywhere, and it would need one to determine what .flags means.\n",
			"disapproval": false,
			"date": "2012-02-16 21:15:47.042757",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5674072/diff/2001/src/pkg/runtime/sigqueue.goc\nFile src/pkg/runtime/sigqueue.goc (right):\n\nhttp://codereview.appspot.com/5674072/diff/2001/src/pkg/runtime/sigqueue.goc#newcode144\nsrc/pkg/runtime/sigqueue.goc:144: if(runtime\u00b7sigtab[i].flags & SigDefault)\nOn 2012/02/16 21:13:17, dsymonds wrote:\n> On 2012/02/16 19:27:33, minux wrote:\n> > You have to declare runtime\u00b7sigtab[] in this file, or the code won't compile.\n> \n> I clearly don't, since this compiles just fine.  ;-)\n\nAlso, this is supposed to be portable, meaning not\nUnix-specific.  Can you put this code in signal_unix.c,\nwhich already has the right extern declaration?",
			"disapproval": false,
			"date": "2012-02-16 21:18:41.280789",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"r@golang.org",
				"rsc@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5674072/diff/7024/src/pkg/runtime/signal_unix.c\nFile src/pkg/runtime/signal_unix.c (right):\n\nhttp://codereview.appspot.com/5674072/diff/7024/src/pkg/runtime/signal_unix.c#newcode46\nsrc/pkg/runtime/signal_unix.c:46: if(t->flags & SigDefault)\nOn 2012/02/17 02:47:16, rsc1 wrote:\n> You should probably clear SigDefault here so you don't setsig it twice if there\n> are two Notify(c) calls.\n\nDone.\n\nhttp://codereview.appspot.com/5674072/diff/7024/src/pkg/runtime/signal_unix.c#newcode52\nsrc/pkg/runtime/signal_unix.c:52: runtime\u00b7setsig(sig, runtime\u00b7sighandler, true);\nOn 2012/02/17 02:47:16, rsc1 wrote:\n> Same here: check SigDefault and only enable in that case (and clear).\n\nThis is now called from initsig above. I guess I need to detach it again.\n\nI rewrote this function to cut down the duplication.",
			"disapproval": false,
			"date": "2012-02-17 03:23:56.867837",
			"approval": false
		}
	],
	"owner_email": "dsymonds@golang.org",
	"private": false,
	"base_url": "",
	"owner": "dsymonds",
	"subject": "code review 5674072: runtime: Permit default behaviour of SIGTSTP, SIGTTIN, ...",
	"created": "2012-02-16 11:49:18.581247",
	"patchsets": [
		1,
		2001,
		5003,
		4010,
		7002,
		3018,
		1020,
		5016,
		5017,
		7024,
		5018,
		2022
	],
	"modified": "2012-02-17 03:36:48.892379",
	"closed": true,
	"issue": 5674072
}