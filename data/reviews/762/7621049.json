{
	"description": "crypto/md5: faster amd64, 386 implementations\n\n-- amd64 --\n\nOn a MacBookPro10,2 (Core i5):\n\nbenchmark                       old ns/op    new ns/op    delta\nBenchmarkHash8Bytes                   471          524  +11.25%\nBenchmarkHash1K                      3018         2220  -26.44%\nBenchmarkHash8K                     20634        14604  -29.22%\nBenchmarkHash8BytesUnaligned          468          523  +11.75%\nBenchmarkHash1KUnaligned             3006         2212  -26.41%\nBenchmarkHash8KUnaligned            20820        14652  -29.63%\n\nbenchmark                        old MB/s     new MB/s  speedup\nBenchmarkHash8Bytes                 16.98        15.26    0.90x\nBenchmarkHash1K                    339.26       461.19    1.36x\nBenchmarkHash8K                    397.00       560.92    1.41x\nBenchmarkHash8BytesUnaligned        17.08        15.27    0.89x\nBenchmarkHash1KUnaligned           340.65       462.75    1.36x\nBenchmarkHash8KUnaligned           393.45       559.08    1.42x\n\nFor comparison, on the same machine, openssl 0.9.8r reports\nits md5 speed as 350 MB/s for 1K and 410 MB/s for 8K.\n\nOn an Intel Xeon E5520:\n\nbenchmark                       old ns/op    new ns/op    delta\nBenchmarkHash8Bytes                   565          607   +7.43%\nBenchmarkHash1K                      3753         2475  -34.05%\nBenchmarkHash8K                     25945        16250  -37.37%\nBenchmarkHash8BytesUnaligned          559          594   +6.26%\nBenchmarkHash1KUnaligned             3754         2474  -34.10%\nBenchmarkHash8KUnaligned            26011        16359  -37.11%\n\nbenchmark                        old MB/s     new MB/s  speedup\nBenchmarkHash8Bytes                 14.15        13.17    0.93x\nBenchmarkHash1K                    272.83       413.58    1.52x\nBenchmarkHash8K                    315.74       504.11    1.60x\nBenchmarkHash8BytesUnaligned        14.31        13.46    0.94x\nBenchmarkHash1KUnaligned           272.73       413.78    1.52x\nBenchmarkHash8KUnaligned           314.93       500.73    1.59x\n\nFor comparison, on the same machine, openssl 1.0.1 reports\nits md5 speed as 443 MB/s for 1K and 513 MB/s for 8K.\n\n-- 386 --\n\nOn a MacBookPro10,2 (Core i5):\n\nbenchmark                       old ns/op    new ns/op    delta\nBenchmarkHash8Bytes                   602          670  +11.30%\nBenchmarkHash1K                      4038         2549  -36.87%\nBenchmarkHash8K                     27879        16690  -40.13%\nBenchmarkHash8BytesUnaligned          602          670  +11.30%\nBenchmarkHash1KUnaligned             4025         2546  -36.75%\nBenchmarkHash8KUnaligned            27844        16692  -40.05%\n\nbenchmark                        old MB/s     new MB/s  speedup\nBenchmarkHash8Bytes                 13.28        11.93    0.90x\nBenchmarkHash1K                    253.58       401.69    1.58x\nBenchmarkHash8K                    293.83       490.81    1.67x\nBenchmarkHash8BytesUnaligned        13.27        11.94    0.90x\nBenchmarkHash1KUnaligned           254.40       402.05    1.58x\nBenchmarkHash8KUnaligned           294.21       490.77    1.67x\n\nOn an Intel Xeon E5520:\n\nbenchmark                       old ns/op    new ns/op    delta\nBenchmarkHash8Bytes                   752          716   -4.79%\nBenchmarkHash1K                      5307         2799  -47.26%\nBenchmarkHash8K                     36993        18042  -51.23%\nBenchmarkHash8BytesUnaligned          748          730   -2.41%\nBenchmarkHash1KUnaligned             5301         2795  -47.27%\nBenchmarkHash8KUnaligned            36983        18085  -51.10%\n\nbenchmark                        old MB/s     new MB/s  speedup\nBenchmarkHash8Bytes                 10.64        11.16    1.05x\nBenchmarkHash1K                    192.93       365.80    1.90x\nBenchmarkHash8K                    221.44       454.03    2.05x\nBenchmarkHash8BytesUnaligned        10.69        10.95    1.02x\nBenchmarkHash1KUnaligned           193.15       366.36    1.90x\nBenchmarkHash8KUnaligned           221.51       452.96    2.04x",
	"cc": [
		"agl@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-21 05:31:31.153700",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-03-21 11:15:30.573110",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e5620fd3ba5f ***\n\ncrypto/md5: faster amd64, 386 implementations\n\n-- amd64 --\n\nOn a MacBookPro10,2 (Core i5):\n\nbenchmark                       old ns/op    new ns/op    delta\nBenchmarkHash8Bytes                   471          524  +11.25%\nBenchmarkHash1K                      3018         2220  -26.44%\nBenchmarkHash8K                     20634        14604  -29.22%\nBenchmarkHash8BytesUnaligned          468          523  +11.75%\nBenchmarkHash1KUnaligned             3006         2212  -26.41%\nBenchmarkHash8KUnaligned            20820        14652  -29.63%\n\nbenchmark                        old MB/s     new MB/s  speedup\nBenchmarkHash8Bytes                 16.98        15.26    0.90x\nBenchmarkHash1K                    339.26       461.19    1.36x\nBenchmarkHash8K                    397.00       560.92    1.41x\nBenchmarkHash8BytesUnaligned        17.08        15.27    0.89x\nBenchmarkHash1KUnaligned           340.65       462.75    1.36x\nBenchmarkHash8KUnaligned           393.45       559.08    1.42x\n\nFor comparison, on the same machine, openssl 0.9.8r reports\nits md5 speed as 350 MB/s for 1K and 410 MB/s for 8K.\n\nOn an Intel Xeon E5520:\n\nbenchmark                       old ns/op    new ns/op    delta\nBenchmarkHash8Bytes                   565          607   +7.43%\nBenchmarkHash1K                      3753         2475  -34.05%\nBenchmarkHash8K                     25945        16250  -37.37%\nBenchmarkHash8BytesUnaligned          559          594   +6.26%\nBenchmarkHash1KUnaligned             3754         2474  -34.10%\nBenchmarkHash8KUnaligned            26011        16359  -37.11%\n\nbenchmark                        old MB/s     new MB/s  speedup\nBenchmarkHash8Bytes                 14.15        13.17    0.93x\nBenchmarkHash1K                    272.83       413.58    1.52x\nBenchmarkHash8K                    315.74       504.11    1.60x\nBenchmarkHash8BytesUnaligned        14.31        13.46    0.94x\nBenchmarkHash1KUnaligned           272.73       413.78    1.52x\nBenchmarkHash8KUnaligned           314.93       500.73    1.59x\n\nFor comparison, on the same machine, openssl 1.0.1 reports\nits md5 speed as 443 MB/s for 1K and 513 MB/s for 8K.\n\n-- 386 --\n\nOn a MacBookPro10,2 (Core i5):\n\nbenchmark                       old ns/op    new ns/op    delta\nBenchmarkHash8Bytes                   602          670  +11.30%\nBenchmarkHash1K                      4038         2549  -36.87%\nBenchmarkHash8K                     27879        16690  -40.13%\nBenchmarkHash8BytesUnaligned          602          670  +11.30%\nBenchmarkHash1KUnaligned             4025         2546  -36.75%\nBenchmarkHash8KUnaligned            27844        16692  -40.05%\n\nbenchmark                        old MB/s     new MB/s  speedup\nBenchmarkHash8Bytes                 13.28        11.93    0.90x\nBenchmarkHash1K                    253.58       401.69    1.58x\nBenchmarkHash8K                    293.83       490.81    1.67x\nBenchmarkHash8BytesUnaligned        13.27        11.94    0.90x\nBenchmarkHash1KUnaligned           254.40       402.05    1.58x\nBenchmarkHash8KUnaligned           294.21       490.77    1.67x\n\nOn an Intel Xeon E5520:\n\nbenchmark                       old ns/op    new ns/op    delta\nBenchmarkHash8Bytes                   752          716   -4.79%\nBenchmarkHash1K                      5307         2799  -47.26%\nBenchmarkHash8K                     36993        18042  -51.23%\nBenchmarkHash8BytesUnaligned          748          730   -2.41%\nBenchmarkHash1KUnaligned             5301         2795  -47.27%\nBenchmarkHash8KUnaligned            36983        18085  -51.10%\n\nbenchmark                        old MB/s     new MB/s  speedup\nBenchmarkHash8Bytes                 10.64        11.16    1.05x\nBenchmarkHash1K                    192.93       365.80    1.90x\nBenchmarkHash8K                    221.44       454.03    2.05x\nBenchmarkHash8BytesUnaligned        10.69        10.95    1.02x\nBenchmarkHash1KUnaligned           193.15       366.36    1.90x\nBenchmarkHash8KUnaligned           221.51       452.96    2.04x\n\nR=agl\nCC=golang-dev\nhttps://codereview.appspot.com/7621049",
			"disapproval": false,
			"date": "2013-03-21 15:26:04.089260",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7621049: crypto/md5: faster amd64, 386 implementations",
	"created": "2013-03-20 16:09:57.492840",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		10001,
		17001
	],
	"modified": "2013-03-21 15:26:05.197790",
	"closed": true,
	"issue": 7621049
}