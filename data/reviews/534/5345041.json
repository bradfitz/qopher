{
	"description": "http: make httputil's chunked reader/writer code a direct copy\n\nArrange the code so that it's easier to keep edits in sync.",
	"cc": [
		"golang-dev@googlegroups.com",
		"mikioh.mikioh@gmail.com",
		"bradfitz@golang.org",
		"andybalholm@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-04 03:25:32.341534",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "No that trailers are handled properly this is ready for review\n\nAny objections to the net/http/chunked package?\n\nOn Friday, 4 November 2011,  <adg@golang.org> wrote:\n> This change reveals a bug in the way trailers are handled. The behaviors\n> of the original chunkedReader and transport reader were complimentary\n> (and therefore correct when used together) but each wrong in isolation.\n>\n> I corrected the chunkedReader behavior, so the net/http/chunked tests\n> pass, but now the net/http tests do not.\n>\n>\n>\nhttp://codereview.appspot.com/5345041/diff/8003/src/pkg/net/http/transfer.go\n> File src/pkg/net/http/transfer.go (right):\n>\n>\nhttp://codereview.appspot.com/5345041/diff/8003/src/pkg/net/http/transfer.go#newcode569\n> src/pkg/net/http/transfer.go:569: // TODO(petar): Put trailer reader\n> code here\n> I think we need to absorb the trailing \\r\\n here. I tried the naive\n> approach to this (ReadBytes('\\n')) but it still caused strange warning\n> messages.\n>\n> Brad - can you take a look?\n>\n> http://codereview.appspot.com/5345041/\n>\n",
			"disapproval": false,
			"date": "2011-11-04 21:54:42.587896",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I object.\n\nWhy is this necessary?  Who uses them?\nWhat is the hacky workaround in httputil?\nWhy do we need an entire package for two\nfunctions?\n",
			"disapproval": false,
			"date": "2011-11-07 16:53:57.365160",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Nov 7, 2011 at 12:55, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> Well, until my recent trailers CL, the chunked reader in http was wrong. \u00a0I\n> especially didn't want to duplicate wrong code in two places.\n> I did duplicate the chunked writer, though, and didn't feel bad about that\n> because it was both correct and tiny. \u00a0The chunked reader isn't as tiny or\n> trivial.\n\nI only really care about the API: I'd like a solution that doesn't\ninvolve a new package.  Whether it copies code or finds a way\nto reuse http doesn't bother me.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-07 17:58:59.912580",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Nov 7, 2011 at 9:18 AM, <andybalholm@gmail.com> wrote:\n\n> On 2011/11/07 16:53:57, rsc wrote:\n>\n>> I object.\n>>\n>\n>  Why is this necessary?  Who uses them?\n>>\n>\n> I do, in go-icap.\n>\n\nAnd this is why I preserved them when we moved stuff from http to httputil.\n\nWhat adg is objecting to is my implementation of NewChunkedReader in\nhttputil:\n\n// NewChunkedReader returns a new reader that translates the data read from\nr\n// out of HTTP \"chunked\" format before returning it.\n\n// The reader returns io.EOF when the final 0-length chunk is read.\n\n//\n\n// NewChunkedReader is not needed by normal applications. The http package\n\n// automatically decodes chunking when reading response bodies.\n\nfunc NewChunkedReader(r io.Reader) io.Reader {\n        // This is a bit of a hack so we don't have to copy chunkedReader\ninto\n        // httputil.  It's a bit more complex than chunkedWriter, which is\ncopied\n        // above.\n\n        req, err := http.ReadRequest(bufio.NewReader(io.MultiReader(\n                strings.NewReader(\"POST / HTTP/1.1\\r\\nTransfer-Encoding:\nchunked\\r\\n\\r\\n\"),\n                r,\n                strings.NewReader(\"\\r\\n\"))))\n        if err != nil {\n                panic(\"bad fake request: \" + err.Error())\n        }\n        return req.Body\n}\n",
			"disapproval": false,
			"date": "2011-11-07 17:30:21.835594",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Just synced and uploaded. Try now.\n\nOn 6 November 2011 03:52,  <andybalholm@gmail.com> wrote:\n> On 2011/11/04 21:54:42, adg wrote:\n>>\n>> No that trailers are handled properly this is ready for review\n>\n>> Any objections to the net/http/chunked package?\n>\n> It sounds like a good idea.\n>\n> I would like to test my package (go-icap.googlecode.com) with the new\n> package, but I can't get this CL to apply at tip.\n>\n> http://codereview.appspot.com/5345041/\n>\n",
			"disapproval": false,
			"date": "2011-11-05 19:50:11.783594",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "This change reveals a bug in the way trailers are handled. The behaviors of the original chunkedReader and transport reader were complimentary (and therefore correct when used together) but each wrong in isolation.\n\nI corrected the chunkedReader behavior, so the net/http/chunked tests pass, but now the net/http tests do not.\n\nhttp://codereview.appspot.com/5345041/diff/8003/src/pkg/net/http/transfer.go\nFile src/pkg/net/http/transfer.go (right):\n\nhttp://codereview.appspot.com/5345041/diff/8003/src/pkg/net/http/transfer.go#newcode569\nsrc/pkg/net/http/transfer.go:569: // TODO(petar): Put trailer reader code here\nI think we need to absorb the trailing \\r\\n here. I tried the naive approach to this (ReadBytes('\\n')) but it still caused strange warning messages.\n\nBrad - can you take a look?",
			"disapproval": false,
			"date": "2011-11-04 04:54:17.794504",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"andybalholm@gmail.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/11/05 19:50:11, adg wrote:\n> Just synced and uploaded. Try now.\n\nBuilding anything right now is a real pain, since all the package renames broke goinstall, but the chunked package seems to work for me.\n\nAndy",
			"disapproval": false,
			"date": "2011-11-05 23:26:45.831064",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5345041/diff/8001/src/pkg/Makefile\nFile src/pkg/Makefile (left):\n\nhttp://codereview.appspot.com/5345041/diff/8001/src/pkg/Makefile#oldcode131\nsrc/pkg/Makefile:131: net/http/fcgi\\\nsort?\n\ne.g.,\nnet/http\\\nnet/http/chunked\\\nnet/http/cgi\\\nnet/http/fcgi\\\nnet/http/httptest\\\nnet/http/httputil\\\nnet/http/pprof\\",
			"disapproval": false,
			"date": "2011-11-04 04:12:49.076609",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "And please re-run hg sync, all.bash at go/src or gomake testshort at go/src/pkg.\nPerhaps net/http/cgi/*_test.go files require a few import pkgs modification.\n\nOn 2011/11/04 04:16:26, adg wrote:\n> http://codereview.appspot.com/5345041/diff/8001/src/pkg/Makefile\n> File src/pkg/Makefile (left):\n> \n> http://codereview.appspot.com/5345041/diff/8001/src/pkg/Makefile#oldcode131\n> src/pkg/Makefile:131: net/http/fcgi\\\n> On 2011/11/04 04:12:49, mikioh wrote:\n> > sort?\n> > \n> > e.g.,\n> > net/http\\\n> > net/http/chunked\\\n> > net/http/cgi\\\n> > net/http/fcgi\\\n> > net/http/httptest\\\n> > net/http/httputil\\\n> > net/http/pprof\\\n> \n> Done.",
			"disapproval": false,
			"date": "2011-11-04 04:28:02.740326",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5345041/diff/8001/src/pkg/Makefile\nFile src/pkg/Makefile (left):\n\nhttp://codereview.appspot.com/5345041/diff/8001/src/pkg/Makefile#oldcode131\nsrc/pkg/Makefile:131: net/http/fcgi\\\nOn 2011/11/04 04:12:49, mikioh wrote:\n> sort?\n> \n> e.g.,\n> net/http\\\n> net/http/chunked\\\n> net/http/cgi\\\n> net/http/fcgi\\\n> net/http/httptest\\\n> net/http/httputil\\\n> net/http/pprof\\\n\nDone.",
			"disapproval": false,
			"date": "2011-11-04 04:16:26.464624",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "+0, deferring to r*.\n\nI think this is cleaner, but I have no objections against small, focused\npackages.\n\nI remember once trying to add something to one of the files in io/ioutil\nbut got hit instead with circular dependency problems with the unrelated\nfile in ioutil.\n\nIf this goes in, I could also argue for os/temp.New{File,Directory}.\nBut I forgot the reason.\nJust that I retain a grudge against ioutil for some historical reason.\n\n\nOn Thu, Nov 3, 2011 at 8:25 PM, <adg@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> http: move chunked Reader and Writer to package net/http/chunked\n> http: fix target path in httptest Makefile\n>\n> This removes the need for the hacky work-around in httputil, and gives\n> chunked.Reader and chunked.Writer idiomatic names.\n>\n> Please review this at http://codereview.appspot.com/**5345041/<http://codereview.appspot.com/5345041/>\n>\n> Affected files:\n>  M src/pkg/Makefile\n>  M src/pkg/net/http/Makefile\n>  A src/pkg/net/http/chunked/**Makefile\n>  A src/pkg/net/http/chunked/**reader.go\n>  M src/pkg/net/http/chunked/**writer.go\n>  M src/pkg/net/http/client_test.**go\n>  M src/pkg/net/http/fs_test.go\n>  M src/pkg/net/http/httptest/**Makefile\n>  M src/pkg/net/http/httputil/**Makefile\n>  R src/pkg/net/http/httputil/**chunked.go\n>  R src/pkg/net/http/httputil/**chunked_test.go\n>  M src/pkg/net/http/httputil/**dump.go\n>  M src/pkg/net/http/request.go\n>  M src/pkg/net/http/request_test.**go\n>  M src/pkg/net/http/response_**test.go\n>  M src/pkg/net/http/serve_test.go\n>  M src/pkg/net/http/sniff_test.go\n>  M src/pkg/net/http/transfer.go\n>  M src/pkg/net/http/transport_**test.go\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-11-04 04:31:47.626818",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Nov 7, 2011 at 15:38, Andrew Gerrand <adg@golang.org> wrote:\n> This is what packages are for. This change resolves an awkward kludge and\n> removes >100 lines of duplicated code. What's not to like?\n\nPackages are for holding code and APIs that we want to support.\nhttp/httputil is where all the low-level 'you probably don't need\nto know about this' http stuff is, stuck in one package.\nI do not want to have a separate package for every aspect of\nhttp, and that is the road that this CL starts us down.\n\n100 lines of duplicate code is hardly a sin.\nEveryone talks about DRY like it is some inviolate commandment.\nDon't repeat yourself too often or too much, but repeating yourself\nonce in a while is fine.  Creating a new package should be done\nbecause there is an API we want to support, not to avoid duplicating\na page of code.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-07 21:57:40.287564",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"andybalholm@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nOn 2011/11/07 23:30:52, adg wrote:\n> Hello mailto:golang-dev@googlegroups.com, mailto:mikioh.mikioh@gmail.com, mailto:bradfitz@golang.org,\n> mailto:andybalholm@gmail.com, mailto:rsc@golang.org (cc: mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.",
			"disapproval": false,
			"date": "2011-11-08 22:43:01.616590",
			"approval": true
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"andybalholm@gmail.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/11/04 21:54:42, adg wrote:\n> No that trailers are handled properly this is ready for review\n> \n> Any objections to the net/http/chunked package?\n\nIt sounds like a good idea.\n\nI would like to test my package (go-icap.googlecode.com) with the new package, but I can't get this CL to apply at tip.",
			"disapproval": false,
			"date": "2011-11-05 16:52:53.179079",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Nov 7, 2011 at 9:50 AM, Russ Cox <rsc@golang.org> wrote:\n\n> Yes, the httputil implementation is a little kludgy.\n> I'd rather just copy the implementation over\n> than to create a new package.  It is sometimes\n> okay to duplicate code.\n>\n\nWell, until my recent trailers CL, the chunked reader in http was wrong.  I\nespecially didn't want to duplicate wrong code in two places.\n\nI did duplicate the chunked writer, though, and didn't feel bad about that\nbecause it was both correct and tiny.  The chunked reader isn't as tiny or\ntrivial.\n",
			"disapproval": false,
			"date": "2011-11-07 17:55:31.383469",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"andybalholm@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/11/07 16:53:57, rsc wrote:\n> I object.\n> \n> Why is this necessary?  Who uses them?\n\nI do, in go-icap.\n\nIf it is too much clutter, I can just copy and paste the code from http to my own package. But I thought having NewChunkedReader exported was a good way to avoid code duplication. See http://codereview.appspot.com/4634112\n\n(NewChunkedWriter was already exported.)",
			"disapproval": false,
			"date": "2011-11-07 17:18:31.932934",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Mon, Nov 7, 2011 at 9:36 AM, <andybalholm@gmail.com> wrote:\n\n> On 2011/11/07 17:30:21, bradfitz wrote:\n>\n>  What adg is objecting to is my implementation of NewChunkedReader in\n>> httputil:\n>>\n>\n> I can see why a new package would be better than that.\n>\n\nWe could also just copy the implementation into httputil.  I thought this\nwas the middle road between code duplication and package proliferation.\n\nI personally don't find this that gross.\n",
			"disapproval": false,
			"date": "2011-11-07 17:41:18.456716",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"andybalholm@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/11/07 17:30:21, bradfitz wrote:\n\n> What adg is objecting to is my implementation of NewChunkedReader in\n> httputil:\n\nI can see why a new package would be better than that.",
			"disapproval": false,
			"date": "2011-11-07 17:36:39.396072",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Yes, the httputil implementation is a little kludgy.\nI'd rather just copy the implementation over\nthan to create a new package.  It is sometimes\nokay to duplicate code.\n",
			"disapproval": false,
			"date": "2011-11-07 17:50:48.034832",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "What is your objection to the new package? Packages are not expensive and\nthe chunked reader and writer have no dependencies.\n\nThis is what packages are for. This change resolves an awkward kludge and\nremoves >100 lines of duplicated code. What's not to like?\n\nOn Tuesday, 8 November 2011, Russ Cox <rsc@golang.org> wrote:\n> On Mon, Nov 7, 2011 at 12:55, Brad Fitzpatrick <bradfitz@golang.org>\nwrote:\n>> Well, until my recent trailers CL, the chunked reader in http was wrong.\n I\n>> especially didn't want to duplicate wrong code in two places.\n>> I did duplicate the chunked writer, though, and didn't feel bad about\nthat\n>> because it was both correct and tiny.  The chunked reader isn't as tiny\nor\n>> trivial.\n>\n> I only really care about the API: I'd like a solution that doesn't\n> involve a new package.  Whether it copies code or finds a way\n> to reuse http doesn't bother me.\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2011-11-07 20:38:46.501507",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"andybalholm@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, mikioh.mikioh@gmail.com, bradfitz@golang.org, andybalholm@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-07 23:30:52.973711",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"andybalholm@gmail.com",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=0ca985c8186d ***\n\nhttp: make httputil's chunked reader/writer code a direct copy\n\nArrange the code so that it's easier to keep edits in sync.\n\nR=golang-dev, mikioh.mikioh, bradfitz, andybalholm, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5345041",
			"disapproval": false,
			"date": "2011-11-09 03:56:01.851633",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "*shrug*\n\nI liked it more as it was, but whatever.\n\n\nOn Tue, Nov 8, 2011 at 7:56 PM, <adg@golang.org> wrote:\n\n> *** Submitted as\n> http://code.google.com/p/go/**source/detail?r=0ca985c8186d<http://code.google.com/p/go/source/detail?r=0ca985c8186d>***\n>\n> http: make httputil's chunked reader/writer code a direct copy\n>\n> Arrange the code so that it's easier to keep edits in sync.\n>\n> R=golang-dev, mikioh.mikioh, bradfitz, andybalholm, rsc\n> CC=golang-dev\n> http://codereview.appspot.com/**5345041<http://codereview.appspot.com/5345041>\n>\n>\n> http://codereview.appspot.com/**5345041/<http://codereview.appspot.com/5345041/>\n>\n",
			"disapproval": false,
			"date": "2011-11-09 04:00:51.895942",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 5345041: http: make httputil's chunked reader/writer code a dire...",
	"created": "2011-11-04 03:25:15.793833",
	"patchsets": [
		1,
		3001,
		5001,
		8001,
		8003,
		8004,
		14021,
		1020,
		23,
		3004,
		17003
	],
	"modified": "2011-11-09 03:56:04.965973",
	"closed": true,
	"issue": 5345041
}