{
	"description": "test: add test for select with , ok clauses\n\nTurns out we don't have any such tests today.  Turns out gccgo\nmiscompiles \"case v, ok := <-c:\".",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"rsc@golang.org",
		"iant@google.com"
	],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-04 19:32:06.054192",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5344045/diff/1/test/chan/select8.go\nFile test/chan/select8.go (right):\n\nhttp://codereview.appspot.com/5344045/diff/1/test/chan/select8.go#newcode5\ntest/chan/select8.go:5: // license that can be found in the LICENSE file.\nplease add a comment saying what this test does. i'm trying to encourage new tests to include a little introduction; some of them are pretty obscure.\n\n// Test that select with \"comma ok\" clauses work.",
			"disapproval": false,
			"date": "2011-11-04 19:40:31.256421",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "not objecting to the test but test/closedchan.go\nand test/select3.go have ,ok in select cases.\nthe comment should say what is unique about\nthese.\n",
			"disapproval": false,
			"date": "2011-11-04 19:47:07.718036",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Russ Cox <rsc@golang.org> writes:\n\n> not objecting to the test but test/closedchan.go\n> and test/select3.go have ,ok in select cases.\n> the comment should say what is unique about\n> these.\n\nAh ha.  I didn't notice closedchan.go because it was not in test/chan.\nAnd closedchan.go just calls println on incorrect values, it doesn't\nchange the exit status, which means that as far as gccgo is concerned\nthe test passes.\n\nI will drop this CL and change closedchan.go instead.\n\nIan\n",
			"disapproval": false,
			"date": "2011-11-04 20:11:41.978547",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"iant@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2011-11-04 20:11:54.235504",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 5344045: test: add test for select with , ok clauses",
	"created": "2011-11-04 19:32:03.054454",
	"patchsets": [
		1
	],
	"modified": "2011-11-04 20:11:56.067141",
	"closed": true,
	"issue": 5344045
}