{
	"description": "cmd/gc: give correct line number for \"missing key in map literal\" error\n        Fixes issue 3925.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"daniel.morsing@gmail.com"
	],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-08-09 16:14:28.567580",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-08-09 07:43:31.721640",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6449118/diff/6001/src/cmd/gc/typecheck.c\nFile src/cmd/gc/typecheck.c (right):\n\nhttp://codereview.appspot.com/6449118/diff/6001/src/cmd/gc/typecheck.c#newcode2234\nsrc/cmd/gc/typecheck.c:2234: yyerror(\"missing key in map literal\");\nChanging this line to 'yyerrorl(l->lineno, \"missing key in map literal\");' would make it unnecessary to change setlineno.\n\nEven then, I don't think this is the right solution. l might be a variable or named constant. In that case, the nodes line number would be the line of it's declaration and yyerror could report something that is far removed from the actual line of the error. \n\nConsider:\n\nconst foo = \"b\" // error would be reported on this line\n\n// many unrelated lines\n\nvar k = map[string]string{\n    \"a\": \"a\",\n    foo, \"b\",\n}",
			"disapproval": false,
			"date": "2012-08-09 15:57:32.064840",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/09 15:57:32, DMorsing wrote:\nhttp://codereview.appspot.com/6449118/diff/6001/src/cmd/gc/typecheck.c#newcode2234\n> src/cmd/gc/typecheck.c:2234: yyerror(\"missing key in map literal\");\n> Changing this line to 'yyerrorl(l->lineno, \"missing key in map literal\");' would\n> make it unnecessary to change setlineno.\n> \n> Even then, I don't think this is the right solution. l might be a variable or\n> named constant. In that case, the nodes line number would be the line of it's\n> declaration and yyerror could report something that is far removed from the\n> actual line of the error. \nok, i understood setlineno() now, will abandon this CL.\nsorry for the noise.",
			"disapproval": false,
			"date": "2012-08-09 16:13:55.245830",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6449118: cmd/gc: give correct line number for \"missing key in ma...",
	"created": "2012-08-09 06:49:59.805060",
	"patchsets": [
		1,
		2001,
		4001,
		6001
	],
	"modified": "2012-08-09 16:14:31.971440",
	"closed": true,
	"issue": 6449118
}