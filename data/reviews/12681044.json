{
	"description": "encoding/gob: support new generic interfaces in package encoding",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-09 18:00:45.654760",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12681044/diff/6001/src/pkg/encoding/gob/doc.go\nFile src/pkg/encoding/gob/doc.go (right):\n\nhttps://codereview.appspot.com/12681044/diff/6001/src/pkg/encoding/gob/doc.go#newcode87\nsrc/pkg/encoding/gob/doc.go:87: by calling the corresponding method, again in that order of preference.\nminor point but these comments are formatted to a narrower line length than the others\n\nhttps://codereview.appspot.com/12681044/diff/6001/src/pkg/encoding/gob/type.go\nFile src/pkg/encoding/gob/type.go (right):\n\nhttps://codereview.appspot.com/12681044/diff/6001/src/pkg/encoding/gob/type.go#newcode31\nsrc/pkg/encoding/gob/type.go:31: encIndir            int8         // number of indirections to reach the receiver type; may be negative\nwith six booleans and the usage pattern i see, i suggest making these bits in a pair of words accessed by methods. you can then have one method per enc/dec, something like\n\nfunc (ut *userTypeInfo) externallyEncoded() bool {\n  return ut.externalEncoders != 0\n}\n\nplus\n\nconst (\n   isGobEncoder = 1 << iota\n   isBinaryMarshaler\n   isTextMarshaler\n)\n\nand the obvious getters. i don't think you need the setters.",
			"disapproval": false,
			"date": "2013-08-10 21:53:34.979820",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/12681044/diff/6001/src/pkg/encoding/gob/doc.go\nFile src/pkg/encoding/gob/doc.go (right):\n\nhttps://codereview.appspot.com/12681044/diff/6001/src/pkg/encoding/gob/doc.go#newcode87\nsrc/pkg/encoding/gob/doc.go:87: by calling the corresponding method, again in that order of preference.\nOn 2013/08/10 21:53:35, r wrote:\n> minor point but these comments are formatted to a narrower line length than the\n> others\n\ngodoc will reflow them in both text and html mode. i ran |9 fmt -l 80\n\nhttps://codereview.appspot.com/12681044/diff/6001/src/pkg/encoding/gob/type.go\nFile src/pkg/encoding/gob/type.go (right):\n\nhttps://codereview.appspot.com/12681044/diff/6001/src/pkg/encoding/gob/type.go#newcode31\nsrc/pkg/encoding/gob/type.go:31: encIndir            int8         // number of indirections to reach the receiver type; may be negative\nOn 2013/08/10 21:53:35, r wrote:\n> with six booleans and the usage pattern i see, i suggest making these bits in a\n> pair of words accessed by methods. you can then have one method per enc/dec,\n> something like\n> \n> func (ut *userTypeInfo) externallyEncoded() bool {\n>   return ut.externalEncoders != 0\n> }\n> \n> plus\n> \n> const (\n>    isGobEncoder = 1 << iota\n>    isBinaryMarshaler\n>    isTextMarshaler\n> )\n> \n> and the obvious getters. i don't think you need the setters.\n\nDone.",
			"disapproval": false,
			"date": "2013-08-13 14:24:37.625370",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-13 22:29:32.601420",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=730fafd3bf98 ***\n\nencoding/gob: support new generic interfaces in package encoding\n\nR=r\nCC=golang-dev\nhttps://codereview.appspot.com/12681044",
			"disapproval": false,
			"date": "2013-08-14 04:18:52.009460",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 12681044: encoding/gob: support new generic interfaces in package...",
	"created": "2013-08-09 18:00:14.530230",
	"patchsets": [
		1,
		2001,
		6001,
		12001,
		17001
	],
	"modified": "2013-08-14 04:18:54.964580",
	"closed": true,
	"issue": 12681044
}