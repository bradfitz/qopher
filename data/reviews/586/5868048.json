{
	"description": "test: use testlib in a few more cases\n        Introduce a new skip cmd.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"iant@golang.org",
		"iant@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nminux.ma@gmail.com writes:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go/\n>\n>\n> Description:\n> test: use testlib in a few more cases\n>         Introduce a new skip cmd.\n>\n> Please review this at http://codereview.appspot.com/5868048/\n>\n> Affected files:\n>   M test/cmplxdivide.c\n>   M test/cmplxdivide1.go\n>   M test/ddd2.go\n>   M test/fixedbugs/bug223.go\n>   M test/import2.go\n>   M test/interface/embed0.go\n>   M test/interface/private1.go\n>   M test/interface/recursive1.go\n>   M test/method4a.go\n>   M test/run.go\n>   M test/testlib\n>\n>\n> Index: test/cmplxdivide.c\n> ===================================================================\n> --- a/test/cmplxdivide.c\n> +++ b/test/cmplxdivide.c\n> @@ -51,6 +51,7 @@\n>  \tint i, j, k, l;\n>  \tdouble complex n, d, q;\n>  \t\n> +\tprintf(\"// skip\\n\");\n>  \tprintf(\"// # generated by cmplxdivide.c\\n\");\n>  \tprintf(\"\\n\");\n>  \tprintf(\"package main\\n\");\n> Index: test/cmplxdivide1.go\n> ===================================================================\n> --- a/test/cmplxdivide1.go\n> +++ b/test/cmplxdivide1.go\n> @@ -1,3 +1,4 @@\n> +// skip\n>  // # generated by cmplxdivide.c\n>\n>  package main\n> Index: test/ddd2.go\n> ===================================================================\n> --- a/test/ddd2.go\n> +++ b/test/ddd2.go\n> @@ -1,4 +1,4 @@\n> -// true\n> +// skip\n>\n>  // Copyright 2010 The Go Authors.  All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/fixedbugs/bug223.go\n> ===================================================================\n> --- a/test/fixedbugs/bug223.go\n> +++ b/test/fixedbugs/bug223.go\n> @@ -1,4 +1,4 @@\n> -// (! $G $D/$F.go) | grep 'initialization loop' >/dev/null || echo\n> BUG: bug223\n> +// errorcheck\n>\n>  // Copyright 2009 The Go Authors. All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> @@ -18,4 +18,4 @@\n>  \t}\n>  }\n>\n> -var m = map[string]F{\"f\": f}\n> +var m = map[string]F{\"f\": f} // ERROR \"initialization loop\"\n> Index: test/import2.go\n> ===================================================================\n> --- a/test/import2.go\n> +++ b/test/import2.go\n> @@ -1,4 +1,4 @@\n> -// true  # used by import3\n> +// skip # used by import3\n>\n>  // Copyright 2010 The Go Authors.  All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/interface/embed0.go\n> ===================================================================\n> --- a/test/interface/embed0.go\n> +++ b/test/interface/embed0.go\n> @@ -1,4 +1,4 @@\n> -// true\t# used by embed1.go\n> +// skip # used by embed1.go\n>\n>  // Copyright 2009 The Go Authors. All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/interface/private1.go\n> ===================================================================\n> --- a/test/interface/private1.go\n> +++ b/test/interface/private1.go\n> @@ -1,4 +1,4 @@\n> -// true  # used by private.go\n> +// skip # used by private.go\n>\n>  // Copyright 2011 The Go Authors. All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/interface/recursive1.go\n> ===================================================================\n> --- a/test/interface/recursive1.go\n> +++ b/test/interface/recursive1.go\n> @@ -1,4 +1,4 @@\n> -// true  # used by recursive2\n> +// skip # used by recursive2\n>\n>  // Copyright 2012 The Go Authors.  All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/method4a.go\n> ===================================================================\n> --- a/test/method4a.go\n> +++ b/test/method4a.go\n> @@ -1,4 +1,4 @@\n> -// true\n> +// skip\n>\n>  // Copyright 2012 The Go Authors. All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/run.go\n> ===================================================================\n> --- a/test/run.go\n> +++ b/test/run.go\n> @@ -1,4 +1,4 @@\n> -// #ignore\n> +// skip\n>\n>  // Copyright 2012 The Go Authors.  All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> @@ -172,7 +172,7 @@\n>  \tdonec       chan bool // closed when done\n>\n>  \tsrc    string\n> -\taction string // \"compile\", \"build\", \"run\", \"errorcheck\"\n> +\taction string // \"compile\", \"build\", \"run\", \"errorcheck\", \"skip\"\n>\n>  \ttempDir string\n>  \terr     error\n> @@ -253,6 +253,9 @@\n>  \t\tfallthrough\n>  \tcase \"compile\", \"build\", \"run\", \"errorcheck\":\n>  \t\tt.action = action\n> +\tcase \"skip\":\n> +\t\tt.action = \"skip\"\n> +\t\treturn\n>  \tdefault:\n>  \t\tt.err = skipError(\"skipped; unknown pattern: \" + action)\n>  \t\tt.action = \"??\"\n> Index: test/testlib\n> ===================================================================\n> --- a/test/testlib\n> +++ b/test/testlib\n> @@ -38,3 +38,7 @@\n>  errorcheck() {\n>  \terrchk $G -e $D/$F.go\n>  }\n> +\n> +skip() {\n> +\ttrue\n> +}\n",
			"disapproval": false,
			"date": "2012-03-21 17:51:08.797807",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but wait for iant to see if gccgo is cool with that new errorcheck.\n\n\nOn Wed, Mar 21, 2012 at 9:56 AM, <minux.ma@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go/\n>\n>\n> Description:\n> test: use testlib in a few more cases\n>        Introduce a new skip cmd.\n>\n> Please review this at http://codereview.appspot.com/**5868048/<http://codereview.appspot.com/5868048/>\n>\n> Affected files:\n>  M test/cmplxdivide.c\n>  M test/cmplxdivide1.go\n>  M test/ddd2.go\n>  M test/fixedbugs/bug223.go\n>  M test/import2.go\n>  M test/interface/embed0.go\n>  M test/interface/private1.go\n>  M test/interface/recursive1.go\n>  M test/method4a.go\n>  M test/run.go\n>  M test/testlib\n>\n>\n> Index: test/cmplxdivide.c\n> ==============================**==============================**=======\n> --- a/test/cmplxdivide.c\n> +++ b/test/cmplxdivide.c\n> @@ -51,6 +51,7 @@\n>        int i, j, k, l;\n>        double complex n, d, q;\n>\n> +       printf(\"// skip\\n\");\n>        printf(\"// # generated by cmplxdivide.c\\n\");\n>        printf(\"\\n\");\n>        printf(\"package main\\n\");\n> Index: test/cmplxdivide1.go\n> ==============================**==============================**=======\n> --- a/test/cmplxdivide1.go\n> +++ b/test/cmplxdivide1.go\n> @@ -1,3 +1,4 @@\n> +// skip\n>  // # generated by cmplxdivide.c\n>\n>  package main\n> Index: test/ddd2.go\n> ==============================**==============================**=======\n> --- a/test/ddd2.go\n> +++ b/test/ddd2.go\n> @@ -1,4 +1,4 @@\n> -// true\n> +// skip\n>\n>  // Copyright 2010 The Go Authors.  All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/fixedbugs/bug223.go\n> ==============================**==============================**=======\n> --- a/test/fixedbugs/bug223.go\n> +++ b/test/fixedbugs/bug223.go\n> @@ -1,4 +1,4 @@\n> -// (! $G $D/$F.go) | grep 'initialization loop' >/dev/null || echo BUG:\n> bug223\n> +// errorcheck\n>\n>  // Copyright 2009 The Go Authors. All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> @@ -18,4 +18,4 @@\n>        }\n>  }\n>\n> -var m = map[string]F{\"f\": f}\n> +var m = map[string]F{\"f\": f} // ERROR \"initialization loop\"\n> Index: test/import2.go\n> ==============================**==============================**=======\n> --- a/test/import2.go\n> +++ b/test/import2.go\n> @@ -1,4 +1,4 @@\n> -// true  # used by import3\n> +// skip # used by import3\n>\n>  // Copyright 2010 The Go Authors.  All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/interface/embed0.go\n> ==============================**==============================**=======\n> --- a/test/interface/embed0.go\n> +++ b/test/interface/embed0.go\n> @@ -1,4 +1,4 @@\n> -// true        # used by embed1.go\n> +// skip # used by embed1.go\n>\n>  // Copyright 2009 The Go Authors. All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/interface/private1.go\n> ==============================**==============================**=======\n> --- a/test/interface/private1.go\n> +++ b/test/interface/private1.go\n> @@ -1,4 +1,4 @@\n> -// true  # used by private.go\n> +// skip # used by private.go\n>\n>  // Copyright 2011 The Go Authors. All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/interface/recursive1.go\n> ==============================**==============================**=======\n> --- a/test/interface/recursive1.go\n> +++ b/test/interface/recursive1.go\n> @@ -1,4 +1,4 @@\n> -// true  # used by recursive2\n> +// skip # used by recursive2\n>\n>  // Copyright 2012 The Go Authors.  All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/method4a.go\n> ==============================**==============================**=======\n> --- a/test/method4a.go\n> +++ b/test/method4a.go\n> @@ -1,4 +1,4 @@\n> -// true\n> +// skip\n>\n>  // Copyright 2012 The Go Authors. All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> Index: test/run.go\n> ==============================**==============================**=======\n> --- a/test/run.go\n> +++ b/test/run.go\n> @@ -1,4 +1,4 @@\n> -// #ignore\n> +// skip\n>\n>  // Copyright 2012 The Go Authors.  All rights reserved.\n>  // Use of this source code is governed by a BSD-style\n> @@ -172,7 +172,7 @@\n>        donec       chan bool // closed when done\n>\n>        src    string\n> -       action string // \"compile\", \"build\", \"run\", \"errorcheck\"\n> +       action string // \"compile\", \"build\", \"run\", \"errorcheck\", \"skip\"\n>\n>        tempDir string\n>        err     error\n> @@ -253,6 +253,9 @@\n>                fallthrough\n>        case \"compile\", \"build\", \"run\", \"errorcheck\":\n>                t.action = action\n> +       case \"skip\":\n> +               t.action = \"skip\"\n> +               return\n>        default:\n>                t.err = skipError(\"skipped; unknown pattern: \" + action)\n>                t.action = \"??\"\n> Index: test/testlib\n> ==============================**==============================**=======\n> --- a/test/testlib\n> +++ b/test/testlib\n> @@ -38,3 +38,7 @@\n>  errorcheck() {\n>        errchk $G -e $D/$F.go\n>  }\n> +\n> +skip() {\n> +       true\n> +}\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-21 16:59:58.642638",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"iant@golang.org",
				"iant@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=74edd315eec5 ***\n\ntest: use testlib in a few more cases\n        Introduce a new skip cmd.\n\nR=golang-dev, bradfitz, iant, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5868048",
			"disapproval": false,
			"date": "2012-03-21 18:14:56.250450",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-03-21 16:56:59.054305",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5868048: test: use testlib in a few more cases",
	"created": "2012-03-21 16:54:13.476335",
	"patchsets": [
		1,
		2001,
		3012,
		1014
	],
	"modified": "2012-03-21 18:15:00.331936",
	"closed": true,
	"issue": 5868048
}