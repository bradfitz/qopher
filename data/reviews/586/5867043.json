{
	"description": "crypto/rsa: only enforce that de \u2261 1 mod |(\u2124/n\u2124)*| in order to load private keys generated by GnuTLS.\n\nPreviously we checked that de \u2261 1 mod \u03c6(n). Since \u03c6(n) is a multiple\nof |(\u2124/n\u2124)*|, this encompassed the new check, but it was too strict as\nkeys generated by GnuTLS would be rejected when gcd(p-1,q-1)\u22601.\n\n(Also updated the error strings in crypto/rsa to contain the package name, which some were missing.)",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [
		"remyoudompheng@gmail.com"
	],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-20 21:31:04.519067",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM for checkin after Go 1, before if it's deemed important enough. decider: agl.\n\nhttp://codereview.appspot.com/5867043/diff/6001/src/pkg/crypto/rsa/rsa_test.go\nFile src/pkg/crypto/rsa/rsa_test.go (right):\n\nhttp://codereview.appspot.com/5867043/diff/6001/src/pkg/crypto/rsa/rsa_test.go#newcode55\nsrc/pkg/crypto/rsa/rsa_test.go:55: // It's such that de \u2262 1 mod \u03c6(n), but is congrugent mod the order of\ns/congrugent/congruent/",
			"disapproval": false,
			"date": "2012-03-22 03:38:33.629034",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't think that this is critical for Go 1.\n\nWill submit after Go 1.\n\nhttp://codereview.appspot.com/5867043/diff/6001/src/pkg/crypto/rsa/rsa_test.go\nFile src/pkg/crypto/rsa/rsa_test.go (right):\n\nhttp://codereview.appspot.com/5867043/diff/6001/src/pkg/crypto/rsa/rsa_test.go#newcode55\nsrc/pkg/crypto/rsa/rsa_test.go:55: // It's such that de \u2262 1 mod \u03c6(n), but is congrugent mod the order of\nOn 2012/03/22 03:38:33, r wrote:\n> s/congrugent/congruent/\n\nDone.",
			"disapproval": false,
			"date": "2012-03-22 15:25:13.324393",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2376ffb966ed ***\n\ncrypto/rsa: only enforce that de \u2261 1 mod |(\u2124/n\u2124)*| in order to load private keys generated by GnuTLS.\n\nPreviously we checked that de \u2261 1 mod \u03c6(n). Since \u03c6(n) is a multiple\nof |(\u2124/n\u2124)*|, this encompassed the new check, but it was too strict as\nkeys generated by GnuTLS would be rejected when gcd(p-1,q-1)\u22601.\n\n(Also updated the error strings in crypto/rsa to contain the package name, which some were missing.)\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5867043",
			"disapproval": false,
			"date": "2012-04-04 16:54:06.393892",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"agl@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry for the late remarks. I just realized what the CL was about.\n\nhttp://codereview.appspot.com/5867043/diff/13001/src/pkg/crypto/rsa/rsa.go\nFile src/pkg/crypto/rsa/rsa.go (right):\n\nhttp://codereview.appspot.com/5867043/diff/13001/src/pkg/crypto/rsa/rsa.go#newcode99\nsrc/pkg/crypto/rsa/rsa.go:99: // Check that de \u2261 1 mod |\u2124/n\u2124| where |\u2124/n\u2124| = totient/gcdTotients\nIf there are more than 2 primes, it will be untrue that lcm(all the p-1) = product(all the p-1) / gcd(all the p-1)\nDid I miss something?\nHow often are there more than 2 primes?\n\nhttp://codereview.appspot.com/5867043/diff/13001/src/pkg/crypto/rsa/rsa_test.go\nFile src/pkg/crypto/rsa/rsa_test.go (right):\n\nhttp://codereview.appspot.com/5867043/diff/13001/src/pkg/crypto/rsa/rsa_test.go#newcode56\nsrc/pkg/crypto/rsa/rsa_test.go:56: // the group.\nI was wondering what was the aim of the CL. I was confused because this is usually called \"exponent\" of the group (the smallest n such that a^n = 1 mod pq for all a\u22600), whereas the order of a group is the number of elements.\n\nThe order of (Z/pqZ)* is (p-1)(q-1) (totient of pq), usually denoted by |Z/pqZ*|, and the exponent is lcm(p-1,q-1).",
			"disapproval": false,
			"date": "2012-04-04 18:49:37.263351",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 5867043: crypto/rsa: only enforce that de \u2261 1 mod |\u2124/n\u2124|",
	"created": "2012-03-20 21:30:02.722666",
	"patchsets": [
		1,
		2001,
		4001,
		6001,
		11001,
		13001
	],
	"modified": "2012-04-04 18:49:37.512024",
	"closed": true,
	"issue": 5867043
}