{
	"description": "doc: remove reference to deleted os.ENOSPC",
	"cc": [
		"golang-dev@googlegroups.com",
		"gri@golang.org",
		"r@golang.org",
		"r@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yeah, the example is pretty lame:  why would opening a file for read\n(os.Open) return ENOSPC anyway?\n\nI can't think of a better example that uses PathError.  Pretty much\neverything within PathError is a syscall error, and using os.IsNotExist\ndoesn't show off unpacking a PathError.\n\nLet me at least change that to a Create instead of an Open?\n\n\nOn Tue, Mar 20, 2012 at 4:35 PM, <r@golang.org> wrote:\n\n> LGTM but maybe there's a better solution\n>\n>\n> http://codereview.appspot.com/**5866046/diff/5001/doc/**effective_go.html<http://codereview.appspot.com/5866046/diff/5001/doc/effective_go.html>\n> File doc/effective_go.html (right):\n>\n> http://codereview.appspot.com/**5866046/diff/5001/doc/**\n> effective_go.html#newcode2718<http://codereview.appspot.com/5866046/diff/5001/doc/effective_go.html#newcode2718>\n> doc/effective_go.html:2718: if e, ok := err.(*os.PathError); ok\n>\n> &amp;&amp; e.Err == syscall.ENOSPC {\n> not thrilled about using syscall here. a more portable example would be\n> better. suggestions welcome, but this will do for now.\n>\n> http://codereview.appspot.com/**5866046/<http://codereview.appspot.com/5866046/>\n>\n",
			"disapproval": false,
			"date": "2012-03-20 23:45:13.445247",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Tue, Mar 20, 2012 at 4:30 PM,  <bradfitz@golang.org> wrote:\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> doc: remove reference to deleted os.ENOSPC\n>\n> Please review this at http://codereview.appspot.com/5866046/\n>\n> Affected files:\n> \u00a0M doc/effective_go.html\n>\n>\n> Index: doc/effective_go.html\n> ===================================================================\n> --- a/doc/effective_go.html\n> +++ b/doc/effective_go.html\n> @@ -2715,7 +2715,7 @@\n> \u00a0 \u00a0 if err == nil {\n> \u00a0 \u00a0 \u00a0 \u00a0 return\n> \u00a0 \u00a0 }\n> - \u00a0 \u00a0if e, ok := err.(*os.PathError); ok &amp;&amp; e.Err == os.ENOSPC {\n> + \u00a0 \u00a0if e, ok := err.(*os.PathError); ok &amp;&amp; e.Err == syscall.ENOSPC\n> {\n> \u00a0 \u00a0 \u00a0 \u00a0 deleteTempFiles() \u00a0// Recover some space.\n> \u00a0 \u00a0 \u00a0 \u00a0 continue\n> \u00a0 \u00a0 }\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-20 23:33:04.491392",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"r@golang.org",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=72bdb129534a ***\n\ndoc: remove reference to deleted os.ENOSPC\n\nR=golang-dev, gri, r, r\nCC=golang-dev\nhttp://codereview.appspot.com/5866046",
			"disapproval": false,
			"date": "2012-03-20 23:50:54.582498",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Actually I'll wait for further thoughts on this for a bit.\n\nOpinions welcome.\n\n\nOn Tue, Mar 20, 2012 at 4:45 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n> Yeah, the example is pretty lame:  why would opening a file for read\n> (os.Open) return ENOSPC anyway?\n>\n> I can't think of a better example that uses PathError.  Pretty much\n> everything within PathError is a syscall error, and using os.IsNotExist\n> doesn't show off unpacking a PathError.\n>\n> Let me at least change that to a Create instead of an Open?\n>\n>\n> On Tue, Mar 20, 2012 at 4:35 PM, <r@golang.org> wrote:\n>\n>> LGTM but maybe there's a better solution\n>>\n>>\n>> http://codereview.appspot.com/**5866046/diff/5001/doc/**effective_go.html<http://codereview.appspot.com/5866046/diff/5001/doc/effective_go.html>\n>> File doc/effective_go.html (right):\n>>\n>> http://codereview.appspot.com/**5866046/diff/5001/doc/**\n>> effective_go.html#newcode2718<http://codereview.appspot.com/5866046/diff/5001/doc/effective_go.html#newcode2718>\n>> doc/effective_go.html:2718: if e, ok := err.(*os.PathError); ok\n>>\n>> &amp;&amp; e.Err == syscall.ENOSPC {\n>> not thrilled about using syscall here. a more portable example would be\n>> better. suggestions welcome, but this will do for now.\n>>\n>> http://codereview.appspot.com/**5866046/<http://codereview.appspot.com/5866046/>\n>>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-20 23:45:39.999764",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-20 23:30:52.221815",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but maybe there's a better solution\n\nhttp://codereview.appspot.com/5866046/diff/5001/doc/effective_go.html\nFile doc/effective_go.html (right):\n\nhttp://codereview.appspot.com/5866046/diff/5001/doc/effective_go.html#newcode2718\ndoc/effective_go.html:2718: if e, ok := err.(*os.PathError); ok &amp;&amp; e.Err == syscall.ENOSPC {\nnot thrilled about using syscall here. a more portable example would be better. suggestions welcome, but this will do for now.",
			"disapproval": false,
			"date": "2012-03-20 23:35:17.882334",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Mar 21, 2012, at 10:45 AM, Brad Fitzpatrick wrote:\n\n> Yeah, the example is pretty lame:  why would opening a file for read (os.Open) return ENOSPC anyway?\n> \n> I can't think of a better example that uses PathError.  Pretty much everything within PathError is a syscall error, and using os.IsNotExist doesn't show off unpacking a PathError.\n> \n> Let me at least change that to a Create instead of an Open?\n\ni tried changing this to a TempFile simulation but it didn't help much.\n\ns/Open/Create/ and LGTM\n\nit makes the point even if the snippet is silly on its own.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2012-03-20 23:46:28.154167",
			"approval": true
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5866046: doc: remove reference to deleted os.ENOSPC",
	"created": "2012-03-20 23:30:38.291142",
	"patchsets": [
		1,
		2001,
		5001,
		2003
	],
	"modified": "2012-03-20 23:50:56.450302",
	"closed": true,
	"issue": 5866046
}