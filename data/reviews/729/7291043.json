{
	"description": "path/filepath: add examples for SplitList and Rel.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If you don't have access to Windows, just do one file for now, with:\r\n\r\n// +build !windows,!plan9\r\n\r\n\r\n\r\nAnd others can do Windows and Plan 9 later.\r\n\r\n\r\nOn Mon, Feb 4, 2013 at 9:57 AM, Kamil Kisiel <kamil.kisiel@gmail.com> wrote:\r\n\r\n> On Mon, Feb 4, 2013 at 9:47 AM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n>>\r\n>> On Tue, Feb 5, 2013 at 1:31 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>>\r\n>>> On Mon, Feb 4, 2013 at 9:29 AM, minux <minux.ma@gmail.com> wrote:\r\n>>>\r\n>>>>\r\n>>>> On Tue, Feb 5, 2013 at 1:27 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>>>>\r\n>>>>> Would these tests pass on Windows too?\r\n>>>>\r\n>>>> it won't.\r\n>>>>\r\n>>>\r\n>>> That's what I suspected.  That makes writing filepath example docs\r\n>>> harder.\r\n>>>\r\n>>>  Perhaps we need to +build two example files to windows and !windows?\r\n>>>\r\n>> How about using ToSlash() to convert the output to canonical path before\r\n>> output,\r\n>> and mention that the path generated will be using native path separator\r\n>> in comment?\r\n>>\r\n>>\r\n> I'm not sure that would be better than having no example, it would not be\r\n> nearly as clear.\r\n> That also doesn't help with the example for SplitList.\r\n>\r\n> I like Brad's suggestion, though I don't have a Windows machine to test on\r\n> at the moment.\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-04 18:24:16.563780",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-03 18:55:57.489840",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 5, 2013 at 1:31 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> On Mon, Feb 4, 2013 at 9:29 AM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n>>\r\n>> On Tue, Feb 5, 2013 at 1:27 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>>\r\n>>> Would these tests pass on Windows too?\r\n>>\r\n>> it won't.\r\n>>\r\n>\r\n> That's what I suspected.  That makes writing filepath example docs harder.\r\n>\r\n>  Perhaps we need to +build two example files to windows and !windows?\r\n>\r\nHow about using ToSlash() to convert the output to canonical path before\r\noutput,\r\nand mention that the path generated will be using native path separator in\r\ncomment?\r\n",
			"disapproval": false,
			"date": "2013-02-04 17:48:13.462490",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Would these tests pass on Windows too?\r\n\r\nOn Sun, Feb 3, 2013 at 10:55 AM, <kamil.kisiel@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> path/filepath: Added examples for SplitList and Rel.\r\n>\r\n> Please review this at https://codereview.appspot.**com/7291043/<https://codereview.appspot.com/7291043/>\r\n>\r\n> Affected files:\r\n>   A src/pkg/path/filepath/example_**test.go\r\n>\r\n>\r\n> Index: src/pkg/path/filepath/example_**test.go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/src/pkg/path/filepath/**example_test.go\r\n> @@ -0,0 +1,34 @@\r\n> +// Copyright 2013 The Go Authors. All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +package filepath_test\r\n> +\r\n> +import (\r\n> +       \"fmt\"\r\n> +       \"path/filepath\"\r\n> +)\r\n> +\r\n> +func ExampleSplitList() {\r\n> +       fmt.Println(filepath.**SplitList(\"/a/b/c:/usr/bin\"))\r\n> +       // Output: [/a/b/c /usr/bin]\r\n> +}\r\n> +\r\n> +func ExampleRel() {\r\n> +       paths := []string{\r\n> +               \"/a/b/c\",\r\n> +               \"/b/c\",\r\n> +               \"./b/c\",\r\n> +       }\r\n> +       base := \"/a\"\r\n> +\r\n> +       for _, p := range paths {\r\n> +               rel, err := filepath.Rel(base, p)\r\n> +               fmt.Printf(\"%q: %q %v\\n\", p, rel, err)\r\n> +       }\r\n> +\r\n> +       // Output:\r\n> +       // \"/a/b/c\": \"b/c\" <nil>\r\n> +       // \"/b/c\": \"../b/c\" <nil>\r\n> +       // \"./b/c\": \"\" Rel: can't make b/c relative to /a\r\n> +}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-04 17:27:11.574030",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 4, 2013 at 9:47 AM, minux <minux.ma@gmail.com> wrote:\r\n\r\n>\r\n> On Tue, Feb 5, 2013 at 1:31 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>\r\n>> On Mon, Feb 4, 2013 at 9:29 AM, minux <minux.ma@gmail.com> wrote:\r\n>>\r\n>>>\r\n>>> On Tue, Feb 5, 2013 at 1:27 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>>>\r\n>>>> Would these tests pass on Windows too?\r\n>>>\r\n>>> it won't.\r\n>>>\r\n>>\r\n>> That's what I suspected.  That makes writing filepath example docs harder.\r\n>>\r\n>>  Perhaps we need to +build two example files to windows and !windows?\r\n>>\r\n> How about using ToSlash() to convert the output to canonical path before\r\n> output,\r\n> and mention that the path generated will be using native path separator in\r\n> comment?\r\n>\r\n>\r\nI'm not sure that would be better than having no example, it would not be\r\nnearly as clear.\r\nThat also doesn't help with the example for SplitList.\r\n\r\nI like Brad's suggestion, though I don't have a Windows machine to test on\r\nat the moment.\r\n",
			"disapproval": false,
			"date": "2013-02-04 17:58:00.164270",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 5, 2013 at 1:27 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> Would these tests pass on Windows too?\r\n\r\nit won't.\r\n\r\n=== RUN: ExampleRel\r\n--- FAIL: ExampleRel (2.0001ms)\r\ngot:\r\n\"/a/b/c\": \"b\\\\c\" <nil>\r\n\"/b/c\": \"..\\\\b\\\\c\" <nil>\r\n\"./b/c\": \"\" Rel: can't make b\\c relative to \\a\r\nwant:\r\n\"/a/b/c\": \"b/c\" <nil>\r\n\"/b/c\": \"../b/c\" <nil>\r\n\"./b/c\": \"\" Rel: can't make b/c relative to /a\r\n=== RUN: ExampleSplitList\r\n--- FAIL: ExampleSplitList (0)\r\ngot:\r\n[/a/b/c:/usr/bin]\r\nwant:\r\n[/a/b/c /usr/bin]\r\nFAIL\r\nexit status 1\r\n",
			"disapproval": false,
			"date": "2013-02-04 17:29:37.936210",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 4, 2013 at 9:29 AM, minux <minux.ma@gmail.com> wrote:\r\n\r\n>\r\n> On Tue, Feb 5, 2013 at 1:27 AM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n>\r\n>> Would these tests pass on Windows too?\r\n>\r\n> it won't.\r\n>\r\n\r\nThat's what I suspected.  That makes writing filepath example docs harder.\r\n\r\nPerhaps we need to +build two example files to windows and !windows?\r\n",
			"disapproval": false,
			"date": "2013-02-04 17:31:45.881020",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-06 03:40:32.191920",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7291043/diff/12001/src/pkg/path/filepath/example_test.go\nFile src/pkg/path/filepath/example_test.go (right):\n\nhttps://codereview.appspot.com/7291043/diff/12001/src/pkg/path/filepath/example_test.go#newcode5\nsrc/pkg/path/filepath/example_test.go:5: // +build !windows,!plan9\nif we do this, i think it's better to rename the file to\nexample_unix_test.go\nso that latter someone could write corresponding\nexample_{plan9,windows}_test.go",
			"disapproval": false,
			"date": "2013-02-06 10:51:19.370380",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-06 16:25:49.783550",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "please don't change the \"// Output:\" line, or your example won't\nbe run by \"go test\".\n\nhttps://codereview.appspot.com/7291043/diff/24001/src/pkg/path/filepath/example_unix_test.go\nFile src/pkg/path/filepath/example_unix_test.go (right):\n\nhttps://codereview.appspot.com/7291043/diff/24001/src/pkg/path/filepath/example_unix_test.go#newcode16\nsrc/pkg/path/filepath/example_unix_test.go:16: // Output on a Unix system:\nfunc ExampleSplitList() {\n    fmt.Println(\"On Unix:\", filepath.SplitList(\"/a/b/c:/usr/bin\"))\n    // Output:\n    // On Unix: [/a/b/c /usr/bin]\n}\n\nhttps://codereview.appspot.com/7291043/diff/24001/src/pkg/path/filepath/example_unix_test.go#newcode33\nsrc/pkg/path/filepath/example_unix_test.go:33: // Output on a Unix system:\n    fmt.Println(\"On Unix:\")\n    for _, p := range paths {\n        rel, err := filepath.Rel(base, p)\n        fmt.Printf(\"%q: %q %v\\n\", p, rel, err)\n    }   \n\n    // Output:\n    // On Unix:\n    // \"/a/b/c\": \"b/c\" <nil>\n    // \"/b/c\": \"../b/c\" <nil>\n    // \"./b/c\": \"\" Rel: can't make b/c relative to /a",
			"disapproval": false,
			"date": "2013-02-13 16:08:41.743880",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm concerned that windows users reading the docs online will be misled.\r\n\r\nMaybe the example output should say \"output on a Unix system:\" or something.\r\n On Feb 6, 2013 9:10 AM, <minux.ma@gmail.com> wrote:\r\n\r\n> LGTM. brad? others?\r\n>\r\n> https://codereview.appspot.**com/7291043/<https://codereview.appspot.com/7291043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-06 19:33:28.134300",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 6, 2013 at 11:41 AM, minux <minux.ma@gmail.com> wrote:\r\n\r\n>\r\n> On Thursday, February 7, 2013, Brad Fitzpatrick wrote:\r\n>\r\n>> I'm concerned that windows users reading the docs online will be misled.\r\n>>\r\n>> Maybe the example output should say \"output on a Unix system:\" or\r\n>> something.\r\n>>\r\n> can we do something magical like this in cmd/godoc?\r\n> 1. provide a way to override GOOS for online godoc (?os=windows)\r\n> 2. infer that from user-agent string/javascript (if deployed on GAE)\r\n>\r\n> 1 alone is pretty useful.\r\n>\r\n\r\nI agree that it would be useful to be able to browse different versions of\r\nthe docs online, but it would be useful to have some way to switch between\r\nthem in the interface.\r\nThe device someone is browsing the documentation on is not necessarily the\r\nsame as the one they are developing for.\r\n\r\nI think for this CL Brad's suggestion makes sense and I can do that if\r\nothers agree.\r\n",
			"disapproval": false,
			"date": "2013-02-06 21:07:31.575930",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Of course, I should have used go test -v to double-check before submitting the last one. Sorry.\n\nPTAL",
			"disapproval": false,
			"date": "2013-02-14 07:35:29.605300",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. brad? others?",
			"disapproval": false,
			"date": "2013-02-06 17:10:35.273760",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thursday, February 7, 2013, Brad Fitzpatrick wrote:\r\n\r\n> I'm concerned that windows users reading the docs online will be misled.\r\n>\r\n> Maybe the example output should say \"output on a Unix system:\" or\r\n> something.\r\n>\r\ncan we do something magical like this in cmd/godoc?\r\n1. provide a way to override GOOS for online godoc (?os=windows)\r\n2. infer that from user-agent string/javascript (if deployed on GAE)\r\n\r\n1 alone is pretty useful.\r\n",
			"disapproval": false,
			"date": "2013-02-06 19:41:01.803070",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Go for it.  Perfect is the enemy of good, and all that.\r\n\r\nI'm not actually so keen on user-agent sniffing to show the \"right\" docs.\r\n Seems too tricky and prone to confuse people more.\r\n\r\nLet's just do the simple thing.\r\n\r\n\r\nOn Wed, Feb 6, 2013 at 1:06 PM, Kamil Kisiel <kamil.kisiel@gmail.com> wrote:\r\n\r\n> On Wed, Feb 6, 2013 at 11:41 AM, minux <minux.ma@gmail.com> wrote:\r\n>\r\n>>\r\n>> On Thursday, February 7, 2013, Brad Fitzpatrick wrote:\r\n>>\r\n>>> I'm concerned that windows users reading the docs online will be misled.\r\n>>>\r\n>>> Maybe the example output should say \"output on a Unix system:\" or\r\n>>> something.\r\n>>>\r\n>> can we do something magical like this in cmd/godoc?\r\n>> 1. provide a way to override GOOS for online godoc (?os=windows)\r\n>> 2. infer that from user-agent string/javascript (if deployed on GAE)\r\n>>\r\n>> 1 alone is pretty useful.\r\n>>\r\n>\r\n> I agree that it would be useful to be able to browse different versions of\r\n> the docs online, but it would be useful to have some way to switch between\r\n> them in the interface.\r\n> The device someone is browsing the documentation on is not necessarily the\r\n> same as the one they are developing for.\r\n>\r\n> I think for this CL Brad's suggestion makes sense and I can do that if\r\n> others agree.\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-09 01:33:22.645410",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-13 04:17:22.562860",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Leave for Brad.",
			"disapproval": false,
			"date": "2013-02-14 08:00:45.239260",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-02-19 18:41:04.575330",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=bd83fa6162f2 ***\n\npath/filepath: add examples for SplitList and Rel.\n\nR=golang-dev, bradfitz, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/7291043\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2013-02-19 18:41:39.383880",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-04-03 04:49:06.699870",
			"approval": false
		}
	],
	"owner_email": "kamil.kisiel@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "kisielk",
	"subject": "code review 7291043: path/filepath: add examples for SplitList and Rel.",
	"created": "2013-02-03 18:55:03.147390",
	"patchsets": [
		1,
		2001,
		3002,
		8001,
		12001,
		18001,
		24001,
		27001
	],
	"modified": "2013-04-03 04:49:08.097520",
	"closed": true,
	"issue": 7291043
}