{
	"description": "go spec: import path implementation restriction",
	"cc": [
		"rsc@golang.org",
		"r@golang.org",
		"r@google.com",
		"adg@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-02-22 21:34:51.134312",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think rejective is okay: I intended to allow nearly everything\nexcept problematic ASCII characters.  On that note I think\nwe have to allow ~, which I believe gets used in launchpad.net\nimport paths today.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-22 22:07:09.388409",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5688074/diff/4002/doc/go_spec.html\nFile doc/go_spec.html (right):\n\nhttp://codereview.appspot.com/5688074/diff/4002/doc/go_spec.html#newcode5102\ndoc/go_spec.html:5102: following characters:\nthe replacement char too.",
			"disapproval": false,
			"date": "2012-02-22 21:41:30.356568",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "shouldn't the definition be permissive rather than rejective?\n\nany legally utf-8-encoded printable unicode char, as defined by XXX, with the exception of\nthe ascii frog list\nspaces\nFFFD if it's printable (not sure)\n\n",
			"disapproval": false,
			"date": "2012-02-22 21:43:56.390400",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "for the discussion so far, the code is fine, but i believe it's a mistake to allow non-printable characters in a path, and it's very easy to define what printable means, just as easy as to define what space means.\n\nin short, i still prefer my form\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-22 23:46:18.548160",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\nAdded replacement char.\n\nOn Wed, Feb 22, 2012 at 1:43 PM, Rob 'Commander' Pike <r@google.com> wrote:\n> shouldn't the definition be permissive rather than rejective?\n\nNot sure. For one, \"printable\" seems less clearly defined that this\nlist (which corresponds exactly to what is implemented), and it's a\nrestriction, so \"reject\" seems fitting.\n\nI'll try to change it if you feel strongly about it.\n- gri\n\n>\n> any legally utf-8-encoded printable unicode char, as defined by XXX, with the exception of\n> the ascii frog list\n> spaces\n> FFFD if it's printable (not sure)\n>\n",
			"disapproval": false,
			"date": "2012-02-22 22:00:54.094984",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 23 February 2012 10:46, Rob 'Commander' Pike <r@google.com> wrote:\n> for the discussion so far, the code is fine, but i believe it's a mistake to allow non-printable characters in a path, and it's very easy to define what printable means, just as easy as to define what space means.\n>\n> in short, i still prefer my form\n\nI also prefer to provide a list of acceptable characters. Something we\nhaven't anticipated may bite us later.\n",
			"disapproval": false,
			"date": "2012-02-23 00:10:41.923138",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\n(Also updated: http://codereview.appspot.com/5683077)\n\nOn Wed, Feb 22, 2012 at 2:07 PM, Russ Cox <rsc@golang.org> wrote:\n> I think rejective is okay: I intended to allow nearly everything\n> except problematic ASCII characters. \u00a0On that note I think\n> we have to allow ~, which I believe gets used in launchpad.net\n> import paths today.\n>\n> Russ\n",
			"disapproval": false,
			"date": "2012-02-22 22:11:04.171603",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Implementation restriction: A compiler may restict ImportPaths to be\nnon-empty strings using only Unicode's L, M, N, P, and S categories\n(the definition of Graphic, without spaces)\nand may also exclude the ASCII characters\n<code>!\"#$%&amp;'()*,:;&lt;=&gt;?[\\]^`{|}</code>.\n",
			"disapproval": false,
			"date": "2012-02-23 03:07:03.596644",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"r@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@golang.org, r@google.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-23 07:20:06.159027",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"r@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-23 07:48:12.817622",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"r@golang.org",
				"r@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=eb997f446b2e ***\n\ngo spec: import path implementation restriction\n\nR=rsc, r, r, adg\nCC=golang-dev\nhttp://codereview.appspot.com/5688074",
			"disapproval": false,
			"date": "2012-02-23 07:51:27.870135",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5688074: go spec: import path implementation restriction",
	"created": "2012-02-22 21:34:22.099808",
	"patchsets": [
		1,
		2001,
		4002,
		4004,
		6001,
		9001,
		11001,
		11004,
		8002
	],
	"modified": "2012-02-23 16:57:36.350262",
	"closed": true,
	"issue": 5688074
}