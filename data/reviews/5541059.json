{
	"description": "net/http: export ServeFilesystemFile for serving files from custom FileSystems.\nFixes issue 2039.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mcroydon@gmail.com",
			"recipients": [
				"mcroydon@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-14 21:55:41.422975",
			"approval": false
		},
		{
			"sender": "mcroydon@gmail.com",
			"recipients": [
				"mcroydon@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/01/15 22:22:30, adg wrote:\n> I was thinking about this today and I think this might be a better approach:\n> \n> http://codereview.appspot.com/5541063\n> \n> Interested to hear what Brad has to say.\n\nI can't quantify it, but I definitely like passing a File to ServeFileSystemFile instead of a FileSystem as long as it fits Brad's use case.  I'm happy to clean up this CL if it's the right direction but I'll await further feedback.",
			"disapproval": false,
			"date": "2012-01-16 03:12:41.740253",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 17 January 2012 08:02, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> Last I recall, we couldn't think of a better name, which is why this has\n> been an open bug for months.\n\nI would prefer to make ServeFile the one that serves an http.File, and\nhave a separate helper ServeOSFile (or whatever) to serve files from\ndisk.\n\nI also think the fancy redirect behavior should be confined to the\nFileServer implementation. It annoys me that ServeFile is so complex\nand opaque. My CL goes some way to simplifying it.\n\nIs that too much churn?\n\nAndrew\n",
			"disapproval": false,
			"date": "2012-01-16 22:58:49.631507",
			"approval": false
		},
		{
			"sender": "mcroydon@gmail.com",
			"recipients": [
				"mcroydon@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ServeLocalFile perhaps?\n\nOn 2012/01/16 21:02:20, bradfitz wrote:\n> Last I recall, we couldn't think of a better name, which is why this has\n> been an open bug for months.\n> \n> On Mon, Jan 16, 2012 at 12:18 PM, Russ Cox <mailto:rsc@golang.org> wrote:\n> \n> > Better name please.\n> >",
			"disapproval": false,
			"date": "2012-01-16 21:27:29.167060",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "So the function no one will use is called ServeFile\nand the function everyone already uses gets renamed\nto ServeOSFile?  That doesn't seem like a win either.\n\nAs Brad points out, the reason this is still open is that\nwe don't have a good API.  Without a good API, I am\nhappy to close this WorkingAsIntended.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-16 23:10:27.392356",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Right now, you can already serve index.html by\ncreating a FileSystem implementation that serves\nit under some other name (say index_html) and\nrewriting the request to use that name.\n\nAs I have said from the beginning, this is helper\ncode.  It doesn't have to do everything.  Especially\nif trying to do everything makes the API worse.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-17 01:44:32.717613",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 17 January 2012 10:00, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> I like that plan.\n>\n> Gofix without type info might be hard, though.\n\nWe might have to forgo gofix in this case, because the behavior of\nServeFile will change. Some people will want to switch to using a\nFileServer instead, while others will want to switch to ServeOSFile.\n\n> On Jan 16, 2012 2:58 PM, \"Andrew Gerrand\" <adg@golang.org> wrote:\n>>\n>> On 17 January 2012 08:02, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n>> > Last I recall, we couldn't think of a better name, which is why this has\n>> > been an open bug for months.\n>>\n>> I would prefer to make ServeFile the one that serves an http.File, and\n>> have a separate helper ServeOSFile (or whatever) to serve files from\n>> disk.\n>>\n>> I also think the fancy redirect behavior should be confined to the\n>> FileServer implementation. It annoys me that ServeFile is so complex\n>> and opaque. My CL goes some way to simplifying it.\n>>\n>> Is that too much churn?\n>>\n>> Andrew\n",
			"disapproval": false,
			"date": "2012-01-16 23:02:43.541417",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I like that plan.\n\nGofix without type info might be hard, though.\n On Jan 16, 2012 2:58 PM, \"Andrew Gerrand\" <adg@golang.org> wrote:\n\n> On 17 January 2012 08:02, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> > Last I recall, we couldn't think of a better name, which is why this has\n> > been an open bug for months.\n>\n> I would prefer to make ServeFile the one that serves an http.File, and\n> have a separate helper ServeOSFile (or whatever) to serve files from\n> disk.\n>\n> I also think the fancy redirect behavior should be confined to the\n> FileServer implementation. It annoys me that ServeFile is so complex\n> and opaque. My CL goes some way to simplifying it.\n>\n> Is that too much churn?\n>\n> Andrew\n>\n",
			"disapproval": false,
			"date": "2012-01-16 23:00:22.064227",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Better name please.\n",
			"disapproval": false,
			"date": "2012-01-16 20:18:05.001005",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Last I recall, we couldn't think of a better name, which is why this has\nbeen an open bug for months.\n\nOn Mon, Jan 16, 2012 at 12:18 PM, Russ Cox <rsc@golang.org> wrote:\n\n> Better name please.\n>\n",
			"disapproval": false,
			"date": "2012-01-16 21:02:20.759500",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 17 January 2012 10:10, Russ Cox <rsc@golang.org> wrote:\n> So the function no one will use is called ServeFile\n> and the function everyone already uses gets renamed\n> to ServeOSFile? \u00a0That doesn't seem like a win either.\n>\n> As Brad points out, the reason this is still open is that\n> we don't have a good API. \u00a0Without a good API, I am\n> happy to close this WorkingAsIntended.\n\nThis is a good point, but we're just hung up on naming, now, right?\n\nI feel strongly that we should simplify ServeFile regardless of\nwhether it is renamed, and push those who need the redirect stuff\ntoward FileServer.\n\nPossible names for the new function that serves an http.File:\n  ServeFSFile\n  ServeOpenFile (the provided File is already open)\n  ServeHTTPFile (it's an http.File?)\n  ServeAnyFile\n",
			"disapproval": false,
			"date": "2012-01-16 23:17:49.461557",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"mcroydon@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5541059/diff/4001/src/pkg/net/http/fs.go\nFile src/pkg/net/http/fs.go (right):\n\nhttp://codereview.appspot.com/5541059/diff/4001/src/pkg/net/http/fs.go#newcode113\nsrc/pkg/net/http/fs.go:113: // ServeFilesystemFile replies to a request with the contents of the named file or directory using the\nhow can it response with a directory? Trying to use ServeFile with a directory should be an error, right?\n\nhttp://codereview.appspot.com/5541059/diff/4001/src/pkg/net/http/fs.go#newcode115\nsrc/pkg/net/http/fs.go:115: // redirect behavior.  Like ServeFile, name is separated with '/' and not filepath.Separator.\nThe comment doesn't explain what the \"redirect behavior\" is that's being overridden.",
			"disapproval": false,
			"date": "2012-01-15 08:51:18.503908",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I was thinking about this today and I think this might be a better approach:\n\nhttp://codereview.appspot.com/5541063\n\nInterested to hear what Brad has to say.\n",
			"disapproval": false,
			"date": "2012-01-15 22:22:30.583140",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Alternately, if we're going to rename ServeFile and you hate\nServeOSFile, we could go with ServeLocalFile ?\n",
			"disapproval": false,
			"date": "2012-01-16 23:19:19.548371",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mcroydon@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-06-03 04:39:00.156376",
			"approval": false
		}
	],
	"owner_email": "mcroydon@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mcroydon",
	"subject": "code review 5541059: net/http: export ServeFilesystemFile for serving files ...",
	"created": "2012-01-14 21:54:42.048135",
	"patchsets": [
		1,
		1002,
		4001
	],
	"modified": "2012-06-03 04:39:00.156785",
	"closed": false,
	"issue": 5541059
}