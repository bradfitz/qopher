{
	"description": "runtime: manage stack by ourselves for badcallback on windows/amd64\nThis function uses 48-byte of precious non-split stack for every callback\nfunction, and without this CL, it can easily overflow the non-split stack.\nI encountered this when trying to enable misc/cgo/test on windows/amd64.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-03-14 16:14:46.233352",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2012-03-14 17:07:33.554493",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is what I got when 'go test ../misc/cgo/test'\n_cgoexp_1ef0bc3b0091_exportuint16: nosplit stack overflow\n        120     assumed on entry to _cgoexp_1ef0bc3b0091_exportuint16\n        88      after _cgoexp_1ef0bc3b0091_exportuint16 uses 32\n        80      on entry to runtime.cgocallback\n        56      after runtime.cgocallback uses 24\n        48      on entry to runtime.badcallback\n        0       after runtime.badcallback uses 48\n        -8      on entry to function pointer\n        -16     on entry to runtime.morestack",
			"disapproval": false,
			"date": "2012-03-14 16:15:43.162481",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=af97bbdbfb02 ***\n\nruntime: manage stack by ourselves for badcallback on windows/amd64\nThis function uses 48-byte of precious non-split stack for every callback\nfunction, and without this CL, it can easily overflow the non-split stack.\nI encountered this when trying to enable misc/cgo/test on windows/amd64.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5784075",
			"disapproval": false,
			"date": "2012-03-14 18:24:59.070677",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5784075: runtime: manage stack by ourselves for badcallback on w...",
	"created": "2012-03-14 16:11:00.140151",
	"patchsets": [
		1,
		2001,
		3003
	],
	"modified": "2012-03-14 18:25:02.560659",
	"closed": true,
	"issue": 5784075
}