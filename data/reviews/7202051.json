{
	"description": "exp/ssa: (#3 of 5): Function, BasicBlock and optimisations",
	"cc": [
		"gri@google.com",
		"iant@google.com",
		"iant@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@google.com",
				"iant@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@google.com, iant@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-24 22:05:57.172530",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@google.com",
				"iant@google.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/blockopt.go\nFile src/pkg/exp/ssa/blockopt.go (right):\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/blockopt.go#newcode92\nsrc/pkg/exp/ssa/blockopt.go:92: b.Preds = nil\nOn 2013/01/25 22:19:59, iant wrote:\n> Why bother clearing Preds and Succs?  Seems like they are about to become\n> unreachable anyhow.\n\nQuite right; deleted.\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/blockopt.go#newcode92\nsrc/pkg/exp/ssa/blockopt.go:92: b.Preds = nil\nOn 2013/01/25 22:19:59, iant wrote:\n> Why bother clearing Preds and Succs?  Seems like they are about to become\n> unreachable anyhow.\n\nQuite right; both deleted.\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/blockopt.go#newcode128\nsrc/pkg/exp/ssa/blockopt.go:128: b.Succs = nil\nOn 2013/01/25 22:19:59, iant wrote:\n> Again, why bother clearing these fields?\n\nClearing b.Preds is how we make b unreachable (we can't nil out fn.Blocks[j] because we don't know the index j for b).\n\nI agree .Succs and .Instrs are overkill; I've removed them.\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/blockopt.go#newcode143\nsrc/pkg/exp/ssa/blockopt.go:143: restart:\nOn 2013/01/25 22:19:59, iant wrote:\n> It's not a big deal, but this could easily be written as\n>     changed := true\n>     for changed {\n>         changed = false\n>         ...\n>     }\n> The label and goto suggest (at least to me) that you have a more complex control\n> flow, but you don't.\n\nDone.\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/func.go\nFile src/pkg/exp/ssa/func.go (right):\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/func.go#newcode19\nsrc/pkg/exp/ssa/func.go:19: // Ask the terminal how wide it is.\nOn 2013/01/25 22:19:59, iant wrote:\n> Really doesn't seem like this belongs in this package.\n\nAgreed, but it really did make the output easier to read, and I can't think of a \"correct\" approach (plumbing in this parameter from the outside world) that is worth the effort.  \n\nI've nuked it for now.  Sigh.",
			"disapproval": false,
			"date": "2013-01-25 22:41:51.601270",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"adonovan@google.com",
				"gri@google.com",
				"iant@google.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/blockopt.go\nFile src/pkg/exp/ssa/blockopt.go (right):\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/blockopt.go#newcode92\nsrc/pkg/exp/ssa/blockopt.go:92: b.Preds = nil\nWhy bother clearing Preds and Succs?  Seems like they are about to become unreachable anyhow.\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/blockopt.go#newcode128\nsrc/pkg/exp/ssa/blockopt.go:128: b.Succs = nil\nAgain, why bother clearing these fields?\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/blockopt.go#newcode143\nsrc/pkg/exp/ssa/blockopt.go:143: restart:\nIt's not a big deal, but this could easily be written as\n    changed := true\n    for changed {\n        changed = false\n        ...\n    }\nThe label and goto suggest (at least to me) that you have a more complex control flow, but you don't.\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/func.go\nFile src/pkg/exp/ssa/func.go (right):\n\nhttps://codereview.appspot.com/7202051/diff/4001/src/pkg/exp/ssa/func.go#newcode19\nsrc/pkg/exp/ssa/func.go:19: // Ask the terminal how wide it is.\nReally doesn't seem like this belongs in this package.",
			"disapproval": false,
			"date": "2013-01-25 22:19:59.474380",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"adonovan@google.com",
				"gri@google.com",
				"iant@google.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-25 23:40:25.829650",
			"approval": true
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@google.com",
				"iant@google.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=250c03e820a7 ***\n\nexp/ssa: (#3 of 5): Function, BasicBlock and optimisations\n\nR=gri, iant, iant\nCC=golang-dev\nhttps://codereview.appspot.com/7202051",
			"disapproval": false,
			"date": "2013-01-28 23:14:13.402240",
			"approval": false
		}
	],
	"owner_email": "adonovan@google.com",
	"private": false,
	"base_url": "",
	"owner": "adonovan",
	"subject": "code review 7202051: exp/ssa: (#3 of 5): Function, BasicBlock and optimisations",
	"created": "2013-01-24 21:01:26.210290",
	"patchsets": [
		1,
		3,
		4001,
		9001,
		12001
	],
	"modified": "2013-01-28 23:14:14.511230",
	"closed": true,
	"issue": 7202051
}