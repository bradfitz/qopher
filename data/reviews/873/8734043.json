{
	"description": "go.exp/go/exact: simplified kinds, accessors",
	"cc": [
		"adonovan@google.com",
		"axwalk@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.exp",
			"disapproval": false,
			"date": "2013-04-12 23:45:59.136030",
			"approval": false
		},
		{
			"sender": "axwalk@gmail.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"axwalk@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8734043/diff/5001/go/types/expr.go\nFile go/types/expr.go (left):\n\nhttps://codereview.appspot.com/8734043/diff/5001/go/types/expr.go#oldcode331\ngo/types/expr.go:331: return 0 <= x && x <= int64(1)<<(s-1)-1\nThat should be \"x <= int64(1)<<s - 1\", iff s < 64. Then you may as well just check \"0 <= x\" for s == 64.\n\nIt might be worthwhile having the tests run with a DefaultPtrSize of 4 as well; this would fail due to alleged integer overflow when computing ^uintptr(0), among other things.",
			"disapproval": false,
			"date": "2013-04-14 02:30:34.799580",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"axwalk@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/8734043/diff/5001/go/types/expr.go\nFile go/types/expr.go (left):\n\nhttps://codereview.appspot.com/8734043/diff/5001/go/types/expr.go#oldcode331\ngo/types/expr.go:331: return 0 <= x && x <= int64(1)<<(s-1)-1\nOn 2013/04/14 02:30:34, axw wrote:\n> That should be \"x <= int64(1)<<s - 1\", iff s < 64. Then you may as well just\n> check \"0 <= x\" for s == 64.\n> \n> It might be worthwhile having the tests run with a DefaultPtrSize of 4 as well;\n> this would fail due to alleged integer overflow when computing ^uintptr(0),\n> among other things.\n\nDone.",
			"disapproval": false,
			"date": "2013-04-15 18:39:40.869700",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"axwalk@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-04-15 19:49:35.104590",
			"approval": true
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"axwalk@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-04-15 19:49:45.576440",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"axwalk@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=d51b9219e538&repo=exp ***\n\ngo.exp/go/exact: simplified kinds, accessors\n\nR=adonovan, axwalk\nCC=golang-dev\nhttps://codereview.appspot.com/8734043",
			"disapproval": false,
			"date": "2013-04-15 19:52:18.287850",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 8734043: go.exp/go/exact: simplified kinds, accessors",
	"created": "2013-04-12 23:41:19.023540",
	"patchsets": [
		1,
		2001,
		5001,
		10001,
		15001
	],
	"modified": "2013-04-15 19:52:19.894850",
	"closed": true,
	"issue": 8734043
}