{
	"description": "cmd/go: fix build -n for cgo enabled packages",
	"cc": [
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "minux.ma@gmail.com once said:\r\n> I wish the cmd/dist command also have this feature.\r\n\r\nMe too.\r\n\r\n> I wonder if it's better to do this:\r\n> cgoLibgccFile = \"$LIBGCC\"\r\n> \r\n> and write\r\n> LIBGCC=`gcc -print-libgcc-file-name`\r\n> in the buildscript?\r\n\r\nI thought about that but then I'd have to deal\r\nwith differences in how each shell does variable\r\nassignment and \"backtick\" commands. Or at the\r\nvery least modify them afterwards. Right now\r\nthe buildscripts are so simple they work in a\r\nvariety of shells.\r\n\r\n  Anthony\r\n",
			"disapproval": false,
			"date": "2013-01-21 03:04:48.027380",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-21 02:41:47.290150",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Aha, buildscripts, definitely helpful when porting Go to another platform.\nI wish the cmd/dist command also have this feature.\n\nhttps://codereview.appspot.com/7095067/diff/4001/src/cmd/go/build.go\nFile src/cmd/go/build.go (right):\n\nhttps://codereview.appspot.com/7095067/diff/4001/src/cmd/go/build.go#newcode1714\nsrc/cmd/go/build.go:1714: cgoLibGccFile, err = b.libgcc(p)\nI wonder if it's better to do this:\ncgoLibgccFile = \"$LIBGCC\"\n\nand write\nLIBGCC=`gcc -print-libgcc-file-name`\nin the buildscript?",
			"disapproval": false,
			"date": "2013-01-21 02:50:53.122580",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Please wait for rsc.",
			"disapproval": false,
			"date": "2013-01-21 04:15:54.694130",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM\r\n\r\nThe -n flag means \"do not run commands\". I think that definition trumps\r\n\"maybe generate a working script\". That may mean it cannot tell you the\r\nexact commands that are necessary in this case. I think we're going to have\r\nto live with that. If you want a true script there is always -x.\r\n\r\nRuss\r\n",
			"disapproval": true,
			"date": "2013-01-22 18:47:19.261840",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3b6b66f8267a ***\n\ncmd/go: fix build -n for cgo enabled packages\n\nR=golang-dev, minux.ma, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7095067",
			"disapproval": false,
			"date": "2013-01-30 23:09:58.566390",
			"approval": false
		},
		{
			"sender": "ality@pbrane.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\r\n\r\nI changed it to use minux's suggestion\r\ninstead of toggling the -n flag. Does\r\nthat seem reasonable?\r\n\r\n  Anthony\r\n",
			"disapproval": false,
			"date": "2013-01-30 06:29:09.850300",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"ality@pbrane.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7095067/diff/11001/src/cmd/go/build.go\nFile src/cmd/go/build.go (right):\n\nhttps://codereview.appspot.com/7095067/diff/11001/src/cmd/go/build.go#newcode1554\nsrc/cmd/go/build.go:1554: s := fmt.Sprintf(\"LIBGCC = `%s`\\n\", buf.Next(buf.Len()-1))\nplease use $(%s) instead of `%s`.",
			"disapproval": false,
			"date": "2013-01-30 16:00:31.129250",
			"approval": true
		}
	],
	"owner_email": "ality@pbrane.org",
	"private": false,
	"base_url": "",
	"owner": "ality",
	"subject": "code review 7095067: cmd/go: fix build -n for cgo enabled packages",
	"created": "2013-01-21 02:41:06.496110",
	"patchsets": [
		1,
		2001,
		4001,
		11001,
		17001
	],
	"modified": "2013-01-30 23:10:00.867640",
	"closed": true,
	"issue": 7095067
}