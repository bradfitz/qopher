{
	"description": "cmd/gc: allow registerization of temporaries created by inlining.\n\nNames beginning with a dot are ignored by optimizers.",
	"cc": [
		"rsc@golang.org",
		"lvd@gmail.com",
		"golang-dev@googlegroups.com",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Unspaghettifies things a bit for issue 4397.\n\nBefore:\n\n--- prog list \"main\" ---\n0010 (test.go:7) TEXT    main+0(SB),$24-0\n0011 (test.go:8) LEAQ    go.string.\"\"+0(SB),BX\n0012 (test.go:8) MOVQ    (BX),SI\n0013 (test.go:8) MOVQ    8(BX),DX\n0014 (test.go:9) MOVQ    (BX),CX\n0015 (test.go:9) MOVQ    8(BX),BP\n0016 (test.go:10) MOVB    $0,.anon2+-1(SP)\n0017 (test.go:10) JMP     ,20\n0018 (test.go:10) MOVQ    $1,AX\n0019 (test.go:10) JMP     ,23\n0020 (test.go:10) CMPQ    DX,BP\n0021 (test.go:10) JEQ     ,18\n0022 (test.go:10) MOVQ    $0,AX\n0023 (test.go:10) MOVB    AX,.anon2+-1(SP)\n0024 (test.go:10) MOVBQZX .anon2+-1(SP),BX\n0025 (test.go:10) CMPB    BX,$0\n0026 (test.go:10) JEQ     ,35\n0027 (test.go:11) LEAQ    go.string.\"ok\"+0(SB),BX\n0028 (test.go:11) LEAQ    (SP),BP\n0029 (test.go:11) MOVQ    BP,DI\n0030 (test.go:11) MOVQ    BX,SI\n0031 (test.go:11) MOVSQ   ,\n0032 (test.go:11) MOVSQ   ,\n0033 (test.go:11) CALL    ,runtime.printstring+0(SB)\n0034 (test.go:11) CALL    ,runtime.printnl+0(SB)\n0035 (test.go:13) RET     ,\n\nAfter:\n\n--- prog list \"main\" ---\n0010 (test.go:7) TEXT    main+0(SB),$16-0\n0011 (test.go:8) LEAQ    go.string.\"\"+0(SB),BX\n0012 (test.go:8) MOVQ    (BX),DI\n0013 (test.go:8) MOVQ    8(BX),DX\n0014 (test.go:9) MOVQ    (BX),SI\n0015 (test.go:9) MOVQ    8(BX),BP\n0016 (test.go:10) MOVQ    $0,AX\n0017 (test.go:10) JMP     ,20\n0018 (test.go:10) MOVQ    $1,AX\n0019 (test.go:10) JMP     ,23\n0020 (test.go:10) CMPQ    DX,BP\n0021 (test.go:10) JEQ     ,18\n0022 (test.go:10) MOVQ    $0,AX\n0023 (test.go:10) CMPB    AX,$0\n0024 (test.go:10) JEQ     ,33\n0025 (test.go:11) LEAQ    go.string.\"ok\"+0(SB),BX\n0026 (test.go:11) LEAQ    (SP),BP\n0027 (test.go:11) MOVQ    BP,DI\n0028 (test.go:11) MOVQ    BX,SI\n0029 (test.go:11) MOVSQ   ,\n0030 (test.go:11) MOVSQ   ,\n0031 (test.go:11) CALL    ,runtime.printstring+0(SB)\n0032 (test.go:11) CALL    ,runtime.printnl+0(SB)\n0033 (test.go:13) RET     ,\n\nIn this case the JMP spaghetti is already simplified by the linker afterwards.",
			"disapproval": false,
			"date": "2013-01-12 07:39:31.789740",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, lvd@gmail.com, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-01-12 07:37:39.538610",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ooh, I think there is an issue relating to this registered.\r\n\r\nOn Saturday, January 12, 2013, wrote:\r\n\r\n> Reviewers: rsc, lvd2, golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello rsc@golang.org, lvd@gmail.com, golang-dev@googlegroups.com (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> cmd/gc: allow registerization of temporaries created by inlining.\r\n>\r\n> Names beginning with a dot are ignored by optimizers.\r\n>\r\n> Please review this at https://codereview.appspot.**com/7098049/<https://codereview.appspot.com/7098049/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/gc/dcl.c\r\n>   M src/cmd/gc/inl.c\r\n>\r\n>\r\n> Index: src/cmd/gc/dcl.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/gc/dcl.c\r\n> +++ b/src/cmd/gc/dcl.c\r\n> @@ -638,7 +638,7 @@\r\n>\r\n>                 if(n->left == N) {\r\n>                         // give it a name so escape analysis has nodes to\r\n> work with\r\n> -                       snprint(namebuf, sizeof(namebuf), \".anon%d\",\r\n> gen++);\r\n> +                       snprint(namebuf, sizeof(namebuf), \"~anon%d\",\r\n> gen++);\r\n>                         n->left = newname(lookup(namebuf));\r\n>                         n->left->orig = N;  // signal that the original\r\n> was absent\r\n>\r\n> @@ -653,7 +653,7 @@\r\n>                         *nn = *n->left;\r\n>                         n->left = nn;\r\n>\r\n> -                       snprint(namebuf, sizeof(namebuf), \".anon%d\",\r\n> gen++);\r\n> +                       snprint(namebuf, sizeof(namebuf), \"~anon%d\",\r\n> gen++);\r\n>                         n->left->sym = lookup(namebuf);\r\n>                 }\r\n>\r\n> Index: src/cmd/gc/inl.c\r\n> ==============================**==============================**=======\r\n> --- a/src/cmd/gc/inl.c\r\n> +++ b/src/cmd/gc/inl.c\r\n> @@ -699,7 +699,7 @@\r\n>  {\r\n>         Node *n;\r\n>\r\n> -       snprint(namebuf, sizeof(namebuf), \".r%d\", i);\r\n> +       snprint(namebuf, sizeof(namebuf), \"~r%d\", i);\r\n>         n = newname(lookup(namebuf));\r\n>         n->type = t->type;\r\n>         n->class = PAUTO;\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-12 07:40:38.138480",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-01-18 20:20:02.837390",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"lvd@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3660e51167b8 ***\n\ncmd/gc: allow registerization of temporaries created by inlining.\n\nNames beginning with a dot are ignored by optimizers.\n\nR=rsc, lvd, golang-dev, dave\nCC=golang-dev\nhttps://codereview.appspot.com/7098049",
			"disapproval": false,
			"date": "2013-01-18 21:25:22.436590",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 7098049: cmd/gc: allow registerization of temporaries created by...",
	"created": "2013-01-12 07:30:48.928050",
	"patchsets": [
		1,
		2001,
		4001,
		10001
	],
	"modified": "2013-01-18 21:25:24.061850",
	"closed": true,
	"issue": 7098049
}