{
	"description": "misc/dist: include godoc from go.tools",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-08-01 01:31:20.227200",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\n\r\nOn Wed, Jul 31, 2013 at 6:31 PM, <adg@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> misc/dist: include godoc from go.tools\r\n>\r\n> Please review this at https://codereview.appspot.**com/12075045/<https://codereview.appspot.com/12075045/>\r\n>\r\n> Affected files:\r\n>   M misc/dist/bindist.go\r\n>\r\n>\r\n> Index: misc/dist/bindist.go\r\n> ==============================**==============================**=======\r\n> --- a/misc/dist/bindist.go\r\n> +++ b/misc/dist/bindist.go\r\n> @@ -31,7 +31,6 @@\r\n>  var (\r\n>         tag             = flag.String(\"tag\", \"release\", \"mercurial tag to\r\n> check out\")\r\n>         repo            = flag.String(\"repo\", \"\r\n> https://code.google.com/p/go\"**, \"repo URL\")\r\n> -       tourPath        = flag.String(\"tour\", \"code.google.com/p/go-tour\",\r\n> \"Go tour repo import path\")\r\n>         verbose         = flag.Bool(\"v\", false, \"verbose output\")\r\n>         upload          = flag.Bool(\"upload\", true, \"upload resulting\r\n> files to Google Code\")\r\n>         wxsFile         = flag.String(\"wxs\", \"\", \"path to custom\r\n> installer.wxs\")\r\n> @@ -44,6 +43,8 @@\r\n>\r\n>  const (\r\n>         uploadURL = \"https://go.googlecode.com/**files<https://go.googlecode.com/files>\r\n> \"\r\n> +       godocPath = \"code.google.com/p/go.tools/**cmd/godoc<http://code.google.com/p/go.tools/cmd/godoc>\r\n> \"\r\n> +       tourPath  = \"code.google.com/p/go-tour\"\r\n>  )\r\n>\r\n>  var preBuildCleanFiles = []string{\r\n> @@ -173,11 +174,11 @@\r\n>         b.gopath = work\r\n>\r\n>         // Clone Go distribution and update to tag.\r\n> -       _, err = b.run(work, \"hg\", \"clone\", \"-q\", *repo, b.root)\r\n> +       _, err = b.hgCmd(work, \"clone\", *repo, b.root)\r\n>         if err != nil {\r\n>                 return err\r\n>         }\r\n> -       _, err = b.run(b.root, \"hg\", \"update\", *tag)\r\n> +       _, err = b.hgCmd(b.root, \"update\", *tag)\r\n>         if err != nil {\r\n>                 return err\r\n>         }\r\n> @@ -214,7 +215,7 @@\r\n>                                 return err\r\n>                         }\r\n>                         // Re-install std without -race, so that we're not\r\n> left\r\n> -                       // with a slower, race-enabled cmd/go, cmd/godoc,\r\n> etc.\r\n> +                       // with a slower, race-enabled cmd/go, etc.\r\n>                         _, err = b.run(src, goCmd, \"install\", \"-a\", \"std\")\r\n>                         // Re-building go command leaves old versions of\r\n> go.exe as go.exe~ on windows.\r\n>                         // See (*builder).copyFile in\r\n> $GOROOT/src/cmd/go/build.go for details.\r\n> @@ -226,6 +227,10 @@\r\n>                 if err != nil {\r\n>                         return err\r\n>                 }\r\n> +               err = b.godoc()\r\n> +               if err != nil {\r\n> +                       return err\r\n> +               }\r\n>                 err = b.tour()\r\n>         }\r\n>         if err != nil {\r\n> @@ -408,6 +413,28 @@\r\n>         return err\r\n>  }\r\n>\r\n> +func (b *Build) godoc() error {\r\n> +       defer func() {\r\n> +               // Clean work files from GOPATH directory.\r\n> +               for _, d := range []string{\"bin\", \"pkg\", \"src\"} {\r\n> +                       os.RemoveAll(filepath.Join(b.**gopath, d))\r\n> +               }\r\n> +       }()\r\n> +\r\n> +       // go get the godoc package.\r\n> +       // The go tool knows to install to $GOROOT/bin.\r\n> +       _, err := b.run(b.gopath, filepath.Join(b.root, \"bin\", \"go\"),\r\n> \"get\", godocPath)\r\n> +       if err != nil {\r\n> +               return err\r\n> +       }\r\n> +\r\n> +       // Copy templates from go.tools/cmd/godoc/template to\r\n> GOROOT/lib/godoc.\r\n> +       return cpDir(\r\n> +               filepath.Join(b.root, \"lib\", \"godoc\"),\r\n> +               filepath.Join(b.gopath, \"src\",\r\n> filepath.FromSlash(godocPath), \"template\"),\r\n> +       )\r\n> +}\r\n> +\r\n>  func (b *Build) tour() error {\r\n>         defer func() {\r\n>                 // Clean work files from GOPATH directory.\r\n> @@ -417,13 +444,13 @@\r\n>         }()\r\n>\r\n>         // go get the gotour package.\r\n> -       _, err := b.run(b.gopath, filepath.Join(b.root, \"bin\", \"go\"),\r\n> \"get\", *tourPath+\"/gotour\")\r\n> +       _, err := b.run(b.gopath, filepath.Join(b.root, \"bin\", \"go\"),\r\n> \"get\", tourPath+\"/gotour\")\r\n>         if err != nil {\r\n>                 return err\r\n>         }\r\n>\r\n>         // Copy all the tour content to $GOROOT/misc/tour.\r\n> -       importPath := filepath.FromSlash(*tourPath)\r\n> +       importPath := filepath.FromSlash(tourPath)\r\n>         tourSrc := filepath.Join(b.gopath, \"src\", importPath)\r\n>         contentDir := filepath.Join(b.root, \"misc\", \"tour\")\r\n>         if err = cpAllDir(contentDir, tourSrc, tourContent...); err != nil\r\n> {\r\n> @@ -436,14 +463,21 @@\r\n>         }\r\n>\r\n>         // Copy gotour binary to tool directory as \"tour\"; invoked as \"go\r\n> tool tour\".\r\n> -       ext := \"\"\r\n> +       return cp(\r\n> +               filepath.Join(b.root, \"pkg\", \"tool\", b.OS+\"_\"+b.Arch,\r\n> \"tour\"+ext()),\r\n> +               filepath.Join(b.gopath, \"bin\", \"gotour\"+ext()),\r\n> +       )\r\n> +}\r\n> +\r\n> +func ext() string {\r\n>         if runtime.GOOS == \"windows\" {\r\n> -               ext = \".exe\"\r\n> +               return \".exe\"\r\n>         }\r\n> -       return cp(\r\n> -               filepath.Join(b.root, \"pkg\", \"tool\", b.OS+\"_\"+b.Arch,\r\n> \"tour\"+ext),\r\n> -               filepath.Join(b.gopath, \"bin\", \"gotour\"+ext),\r\n> -       )\r\n> +       return \"\"\r\n> +}\r\n> +\r\n> +func (b *Build) hgCmd(dir string, args ...string) ([]byte, error) {\r\n> +       return b.run(dir, \"hg\", append([]string{\"--config\",\r\n> \"extensions.codereview=!\"}, args...)...)\r\n>  }\r\n>\r\n>  func (b *Build) run(dir, name string, args ...string) ([]byte, error) {\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-01 06:41:00.371890",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=913b557a2151 ***\n\nmisc/dist: include godoc from go.tools\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/12075045",
			"disapproval": false,
			"date": "2013-08-01 06:48:38.690280",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 12075045: misc/dist: include godoc from go.tools",
	"created": "2013-07-30 05:03:40.285310",
	"patchsets": [
		1,
		2001,
		4001,
		7001,
		12001
	],
	"modified": "2013-08-01 06:48:40.942240",
	"closed": true,
	"issue": 12075045
}