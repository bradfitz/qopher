{
	"description": "runtime: add gctool\n\nSee documentation in gctool.go",
	"cc": [
		"rsc@golang.org"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"dvyukov@google.com",
		"cshapiro@google.com"
	],
	"messages": [
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dvyukov@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/30 06:38:17, dvyukov wrote:\n> On 2013/05/29 18:33:14, rsc wrote:\n> > The overall idea of having a tool to debug the garbage collector is fine,\n> > but we should discuss the plan, in a different thread (not in this CL) and\n> > include Carl. I have a similar tool that I never checked in because it is\n> > really not something ordinary people can use. Whatever we do should be part\n> > of a plan to benefit programmers who don't work on the garbage collector.\n> \n> I am not sure whether it will be useful for anything other than tiny programs.\n> Debugging GC issues requires really lots of information.\n\nI agree.\n\nOn the other hand, examining the log generated when mgc0.c/Tool=1 may help to reveal some inefficiencies in the GC.",
			"disapproval": false,
			"date": "2013-05-30 07:49:58.846170",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dvyukov@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/30 06:36:18, dvyukov wrote:\n> On 2013/05/29 09:53:28, atom wrote:\n> > Hello mailto:golang-dev@googlegroups.com (cc: mailto:dvyukov@google.com,\n> mailto:rsc@golang.org),\n> > \n> > I'd like you to review this change to\n> > https://code.google.com/p/go/\n> \n> Please post example log and output of the tool.\n\nThe below text has been obtained while working on code related to https://code.google.com/p/go/issues/detail?id=5584. Absolute paths in function names have been truncated to improve readability of the text. The interesting parts in the output (not in the log) are lines with stackframe(f=\"addroots\").\n\n$ head -n20 log\n#gctool gcbegin\n#gctool datasection 0 0x8303100 0x6854\n#gctool bsssection 0 0x8319ba0 0x3b6c\n#gctool mark 0 0x1847c030 where=markonly\n#gctool mark 0 0x1847c000 where=markonly\n#gctool stackframe 0 0x18471284 0x24 where=A f=\"addroots\"\n#gctool stackframe 0 0x184712ac 0x12c where=A f=\"gc\"\n#gctool stackframe 0 0x184713dc 0x4 where=C f=\"gc\"\n#gctool stackframe 0 0xb7314a1c 0x1c where=A f=\"runtime.gc\"\n#gctool stackframe 0 0xb7314a3c 0x4 where=C f=\"runtime.gc\"\n#gctool stackframe 0 0xb7314a3c 0x2c where=A f=\"runtime.mallocgc\"\n#gctool stackframe 0 0xb7314a6c 0x10 where=C f=\"runtime.mallocgc\"\n#gctool stackframe 0 0xb7314a6c 0x14 where=A f=\"runtime.new\"\n#gctool stackframe 0 0xb7314a84 0x14 where=A f=\"errors.New\"\n#gctool stackframe 0 0xb7314a9c 0x10 where=C f=\"errors.New\"\n#gctool stackframe 0 0xb7314a9c 0x10 where=A f=\"strconv.init\"\n#gctool stackframe 0 0xb7314ab0 0x10 where=A f=\"reflect.init\"\n#gctool stackframe 0 0xb7314ac4 0x20 where=A f=\"fmt.init\"\n#gctool stackframe 0 0xb7314ae8 0x10 where=A f=\"compress/gzip.init\"\n#gctool stackframe 0 0xb7314b1c 0x4a0 where=B f=\"_/home/.../test/http.init\"\n\n$ cat output\n====\n====\n====\n====\n====\n====\n====\nbacktrack main.Range{start:0x1852f000, size:0x2052efff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x1852f000 from backtrack\nbacktrack main.Range{start:0x2052f000, size:0x2852efff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x2052f000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x18521000 from backtrack\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x20521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x18521000 from backtrack\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x20521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x18521000 from backtrack\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"addroots\") 0x18471284,0x24\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x20521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x184009f8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400a20,0x8\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"gc\") 0x184712ac,0x12c\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x28521000, size:0x30520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x28521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400a90,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400ab8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400ae0,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x20521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400b50,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400b78,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400ba0,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x28521000, size:0x30520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x28521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400c10,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400c38,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400c60,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x20521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400cd0,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400cf8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400d20,0x8\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x28521000, size:0x30520fff}:\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x28521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x184001c8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400dc8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400e60,0x8\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x20521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x184004b8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x184004e0,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400510,0x8\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x28521000, size:0x30520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x28521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400580,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x184005a8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x184980c0,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x20521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400490,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18498040,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18498078,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x28521000, size:0x30520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x28521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x184001c8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400508,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400530,0x8\n\tstackframe(f=\"gc\") 0x184712ac,0x12c\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x20521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400ca8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400dc8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400e60,0x8\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x28521000, size:0x30520fff}:\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nremove 0x28521000 from backtrack\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400be8,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400d18,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400d40,0x8\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\n====\nbacktrack main.Range{start:0x18521000, size:0x20520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400b28,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400c58,0x8\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100 ->  0x18400c80,0x8\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x20521000, size:0x28520fff}:\n\tstackframe(f=\"addroots\") 0x18471284,0x24\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100\nbacktrack main.Range{start:0x28521000, size:0x30520fff}:\n\tstackframe(f=\"test/http.API\") 0xb6202d8c,0x100",
			"disapproval": false,
			"date": "2013-05-30 07:38:21.403650",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: dvyukov@google.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-05-29 09:53:28.785540",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dvyukov@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think we should discuss this idea on golang-dev.",
			"disapproval": false,
			"date": "2013-05-29 18:21:08.681930",
			"approval": false
		},
		{
			"sender": "0xe2.0x9a.0x9b@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Does the idea seem controversial or good?\r\n\r\nOn Wednesday, May 29, 2013 8:21:08 PM UTC+2, Ian Lance Taylor wrote:\r\n>\r\n> I think we should discuss this idea on golang-dev. \r\n>\r\n>\r\n> https://codereview.appspot.com/9666049/ \r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-29 18:25:39.840210",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The overall idea of having a tool to debug the garbage collector is fine,\r\nbut we should discuss the plan, in a different thread (not in this CL) and\r\ninclude Carl. I have a similar tool that I never checked in because it is\r\nreally not something ordinary people can use. Whatever we do should be part\r\nof a plan to benefit programmers who don't work on the garbage collector.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-05-29 18:33:14.375260",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dvyukov@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/29 09:53:28, atom wrote:\n> Hello mailto:golang-dev@googlegroups.com (cc: mailto:dvyukov@google.com, mailto:rsc@golang.org),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go/\n\nPlease post example log and output of the tool.",
			"disapproval": false,
			"date": "2013-05-30 06:36:18.855610",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dvyukov@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/29 18:33:14, rsc wrote:\n> The overall idea of having a tool to debug the garbage collector is fine,\n> but we should discuss the plan, in a different thread (not in this CL) and\n> include Carl. I have a similar tool that I never checked in because it is\n> really not something ordinary people can use. Whatever we do should be part\n> of a plan to benefit programmers who don't work on the garbage collector.\n\nI am not sure whether it will be useful for anything other than tiny programs. Debugging GC issues requires really lots of information.",
			"disapproval": false,
			"date": "2013-05-30 06:38:17.346820",
			"approval": false
		},
		{
			"sender": "cshapiro@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, May 31, 2013 at 4:37 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> Carl, how does this fit with what you were thinking for dumping gc\r\n> debugging information? Is there a standard format we should be using?\r\n>\r\n\r\nThis is different.\r\n\r\nWhat I am planning to provide is a tool that dumps information about the\r\nroot set and the pointers in objects.  A user or garbage collection\r\ndeveloper will invoke the tool through a function call or signal delivery.\r\n The execution of the tool is explicitly not be tied to a garbage\r\ncollection which I believe is a critical feature.  The heap information\r\nwould be written in HPROF (with adjustments for Go) or a similar format.\r\n Third party tools would be used to browse the heap content and present\r\nconnectivity information and identify possible leaks.  This would be useful\r\nfor end users and developers.\r\n\r\nThis tool requires a compile time variable to be set.  Its execution is\r\ntied to the garbage collector.  The data is written in a text file and\r\nthere is program that can compute paths to the root.   I think this could\r\nbe useful for a developer for debugging a limited set of problems.  I am\r\nnot sure if this is generally useful because it requires re-compiling and\r\nafterward is always on.\r\n\r\nI am also concerned about adding this code on top of the existing marking\r\ncode.\r\n",
			"disapproval": false,
			"date": "2013-05-31 23:33:24.552160",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dvyukov@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Is it possible to build an svg graph similar to what pprof generates for cpu/heap profile from the info in the log? It would be a great representation.\n\nType name for each block is very useful, pointer values does not provide a lot of info.\n\nAlso I find it useful to show at what offset object A contains a pointer to object B. E.g. runtime.M is about 10K in size, it's difficult to figure out where exactly it contains a pointer to some object.\n\nAlso I find it useful to show allocation stacks for each object. E.g. a string of size 16 can be allocated in any place of a program. Allocation stacks provide a good identity.\n\nAlso I think it's important to show duplicate edges. E.g. if we reach object X through objects A and B, we need to show both edges. But also it's important to emphasize the edge that we actually used to scan object X, because edges from A and B can have different type info associated with them.",
			"disapproval": false,
			"date": "2013-05-31 07:31:50.911580",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dvyukov@google.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/31 07:31:50, dvyukov wrote:\n> Is it possible to build an svg graph similar to what pprof generates for\n> cpu/heap profile from the info in the log? It would be a great representation.\n\nIn my opinion it is questionable whether graph visualization can improve understanding of the graph.\n\n> Type name for each block is very useful, pointer values does not provide a lot\n> of info.\n\nThis seems possible. I will take a look at the code.\n\n> Also I find it useful to show at what offset object A contains a pointer to\n> object B. E.g. runtime.M is about 10K in size, it's difficult to figure out\n> where exactly it contains a pointer to some object.\n\nI agree that showing the offsets would be useful.\n\n> Also I find it useful to show allocation stacks for each object. E.g. a string\n> of size 16 can be allocated in any place of a program. Allocation stacks provide\n> a good identity.\n\nThere seems to be no need for such information right now. I would need to see an example which shows the use of the stack traces.\n\n> Also I think it's important to show duplicate edges. E.g. if we reach object X\n> through objects A and B, we need to show both edges. But also it's important to\n> emphasize the edge that we actually used to scan object X, because edges from A\n> and B can have different type info associated with them.\n\nI agree.",
			"disapproval": false,
			"date": "2013-05-31 09:48:14.810270",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Carl, how does this fit with what you were thinking for dumping gc\r\ndebugging information? Is there a standard format we should be using?\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-05-31 11:37:58.075480",
			"approval": false
		}
	],
	"owner_email": "0xE2.0x9A.0x9B@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "atom",
	"subject": "runtime: add gctool",
	"created": "2013-05-29 09:53:08.964880",
	"patchsets": [
		1,
		2001,
		5001,
		4004
	],
	"modified": "2013-06-05 14:41:00.371420",
	"closed": true,
	"issue": 9666049
}