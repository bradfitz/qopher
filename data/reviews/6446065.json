{
	"description": "misc/dashboard/codereview: show first line of last message in thread\n\nThis line helps me to tell whether the CL is waiting for me or I'm waiting for the author.\n\nAlso:\n - vertical-align table cells so buttons are always aligned with CL headers.\n - add email= to show front page for someone else.\n\n Demo at http://rsc.gocodereview.appspot.com/.\n Until this is deployed for real, some recently changed CLs may be\n missing the 'first line of last message' part.",
	"cc": [
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go\nFile misc/dashboard/codereview/dashboard/cl.go (left):\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go#oldcode188\nmisc/dashboard/codereview/dashboard/cl.go:188: url := fmt.Sprintf(\"%s?cl=%s&r=%s&obo=%s\", gobotBase, n, rev, person)\nOn 2012/07/30 22:56:54, dsymonds wrote:\n> sync and undo this reversion.\n\nDone.\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go\nFile misc/dashboard/codereview/dashboard/cl.go (right):\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go#newcode336\nmisc/dashboard/codereview/dashboard/cl.go:336: lastDate := \"\"\nOn 2012/07/30 22:56:54, dsymonds wrote:\n> aren't the messages already in date order? I assumed they were, but this implies\n> you believe they aren't, in which case some of the other logic in the loop is\n> wrong. Can you sort the messages up here first?\n\nI am not sure whether they are expected to be sorted. The code that grabs them from datastore in Rietveld says\n\nfor m in models.Message.gql('WHERE ANCESTOR IS :1`, issue)\n\nand I don't know whether that is expected to come back in any kind of order. I believe I saw them out of order when reading the JSON of a few CLs, but I don't remember which CLs.\n\nI added sorting. To do that I had to pull the struct out of the var declaration.\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go#newcode347\nmisc/dashboard/codereview/dashboard/cl.go:347: if i := strings.Index(short, \"@\"); i >= 0 {\nOn 2012/07/30 22:56:54, dsymonds wrote:\n> please use the emailToPerson map to shorten only a subset. There's enough people\n> who use email addresses that aren't distinguishable by the local part (\"dave\" is\n> a good example), and this is inconsistent with what else gocodereview does.\n> \n> If it makes the UI too bad (and I don't think it will), let's do the shortening\n> at render time, with a tooltip that will display the full address.\n\nCan we please just do this? If you want to add the tooltip that's fine, but I have never been confused by the entries on build.golang.org, and I don't expect to be confused here. If another rsc or dsymonds joins the project we can revisit this. In addition to being shorter, I don't like making a big deal of who has a golang.org address and who does not.\n\nIf it were possible to show the codereview alias name here, I would, but I don't believe that information is available easily.\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/front.go\nFile misc/dashboard/codereview/dashboard/front.go (right):\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/front.go#newcode40\nmisc/dashboard/codereview/dashboard/front.go:40: if e := r.FormValue(\"email\"); e != \"\" {\nOn 2012/07/30 22:56:54, dsymonds wrote:\n> I had thought about doing this yesterday too.  ;-)\n\nDone.",
			"disapproval": false,
			"date": "2012-08-03 19:06:33.118420",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\r\n",
			"disapproval": false,
			"date": "2012-08-04 00:57:53.587340",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done.\r\n",
			"disapproval": false,
			"date": "2012-08-05 18:34:02.904280",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> strings.Index(short, \"@\"); i >= 0 {\r\n> please use the emailToPerson map to shorten only a subset. There's\r\n> enough people who use email addresses that aren't distinguishable by the\r\n> local part (\"dave\" is a good example), and this is inconsistent with\r\n> what else gocodereview does.\r\n>\r\n> If it makes the UI too bad (and I don't think it will), let's do the\r\n> shortening at render time, with a tooltip that will display the full\r\n> address.\r\n\r\ni did this, and too much of\r\nrsc.gocodereview.appspot.com/?email=rsc@golang.org was filled with\r\nemail domain noise. for LGTMs it really matters to distinguish\r\n@golang.org. here i don't think it does, and cutting the noise helps.\r\nthis is consistent with build.golang.org.\r\n",
			"disapproval": false,
			"date": "2012-07-30 23:01:25.434350",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI: I deployed this working copy to the main site so that it would\r\nknow about the new LastUpdateBy field.\r\n",
			"disapproval": false,
			"date": "2012-08-04 01:00:53.069140",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go\nFile misc/dashboard/codereview/dashboard/cl.go (left):\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go#oldcode188\nmisc/dashboard/codereview/dashboard/cl.go:188: url := fmt.Sprintf(\"%s?cl=%s&r=%s&obo=%s\", gobotBase, n, rev, person)\nsync and undo this reversion.\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go\nFile misc/dashboard/codereview/dashboard/cl.go (right):\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go#newcode52\nmisc/dashboard/codereview/dashboard/cl.go:52: LastUpdate  string\nLastUpdate string `datastore:\",noindex\"` // first line of last review message\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go#newcode336\nmisc/dashboard/codereview/dashboard/cl.go:336: lastDate := \"\"\naren't the messages already in date order? I assumed they were, but this implies you believe they aren't, in which case some of the other logic in the loop is wrong. Can you sort the messages up here first?\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/cl.go#newcode347\nmisc/dashboard/codereview/dashboard/cl.go:347: if i := strings.Index(short, \"@\"); i >= 0 {\nplease use the emailToPerson map to shorten only a subset. There's enough people who use email addresses that aren't distinguishable by the local part (\"dave\" is a good example), and this is inconsistent with what else gocodereview does.\n\nIf it makes the UI too bad (and I don't think it will), let's do the shortening at render time, with a tooltip that will display the full address.\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/front.go\nFile misc/dashboard/codereview/dashboard/front.go (right):\n\nhttp://codereview.appspot.com/6446065/diff/5002/misc/dashboard/codereview/dashboard/front.go#newcode40\nmisc/dashboard/codereview/dashboard/front.go:40: if e := r.FormValue(\"email\"); e != \"\" {\nI had thought about doing this yesterday too.  ;-)",
			"disapproval": false,
			"date": "2012-07-30 22:56:54.867880",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dsymonds (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-07-30 15:17:57.811100",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nthanks for bearing with me\n\nhttp://codereview.appspot.com/6446065/diff/14001/misc/dashboard/codereview/dashboard/cl.go\nFile misc/dashboard/codereview/dashboard/cl.go (right):\n\nhttp://codereview.appspot.com/6446065/diff/14001/misc/dashboard/codereview/dashboard/cl.go#newcode52\nmisc/dashboard/codereview/dashboard/cl.go:52: LastUpdateBy string `datastore:\",noindex\"` // author of most recent review message\ndrop the datastore tag for this one. It's small, and I could see us doing a query on it.\n\nhttp://codereview.appspot.com/6446065/diff/14001/misc/dashboard/codereview/dashboard/front.go\nFile misc/dashboard/codereview/dashboard/front.go (right):\n\nhttp://codereview.appspot.com/6446065/diff/14001/misc/dashboard/codereview/dashboard/front.go#newcode166\nmisc/dashboard/codereview/dashboard/front.go:166: \"cutdomain\": func(s string) string {\nI'd call this shortemail. Up to you.",
			"disapproval": false,
			"date": "2012-08-04 01:12:40.431850",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "just a couple of small things.\n\nhttp://codereview.appspot.com/6446065/diff/8002/misc/dashboard/codereview/dashboard/cl.go\nFile misc/dashboard/codereview/dashboard/cl.go (right):\n\nhttp://codereview.appspot.com/6446065/diff/8002/misc/dashboard/codereview/dashboard/cl.go#newcode52\nmisc/dashboard/codereview/dashboard/cl.go:52: LastUpdate  string `datastore:\",noindex\"` // first line of most recent review message\nPlease add a LastUpdateBy field, and do the (rsc) at render time. It will simplify the Replied method too.\n\nhttp://codereview.appspot.com/6446065/diff/8002/misc/dashboard/codereview/dashboard/cl.go#newcode67\nmisc/dashboard/codereview/dashboard/cl.go:67: func (cl *CL) Replied() bool {\nReviewed?",
			"disapproval": false,
			"date": "2012-08-04 00:44:25.864670",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\r\n\r\nI joined the 4 tables so that the columns line up even across sections.\r\nCompare\r\nhttp://gocodereview.appspot.com/\r\nhttp://rsc.gocodereview.appspot.com/?email=dsymonds@golang.org\r\n\r\nI also introduced a heuristic in the top section to mark CLs that\r\nprobably need attention\r\nwith a blue line on the left side of the row. Scroll down a little on\r\nhttp://rsc.gocodereview.appspot.com/?email=rsc@golang.org\r\nto see the lines. These really help me skim past the ones I've already\r\ndealt with. I tried, instead of marking the ones that need attention,\r\nfading out the ones that don't, but I couldn't find an opacity setting\r\nthat was significant enough to be noticeable yet not frustrating when\r\nyou did want to read those lines. The blue marker on the left seems\r\nto work pretty well, and it's easy to ignore when it's wrong.\r\n",
			"disapproval": false,
			"date": "2012-08-04 00:37:53.284510",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=870c00724acc ***\n\nmisc/dashboard/codereview: show first line of last message in thread\n\nThis line helps me to tell whether the CL is waiting for me or I'm waiting for the author.\n\nAlso:\n - vertical-align table cells so buttons are always aligned with CL headers.\n - add email= to show front page for someone else.\n\n Demo at http://rsc.gocodereview.appspot.com/.\n Until this is deployed for real, some recently changed CLs may be\n missing the 'first line of last message' part.\n\nR=dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/6446065",
			"disapproval": false,
			"date": "2012-08-05 18:35:38.053460",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6446065: misc/dashboard/codereview: show first line of last mess...",
	"created": "2012-07-30 04:51:55.268980",
	"patchsets": [
		1,
		2001,
		5001,
		5002,
		9002,
		8002,
		14001,
		10003
	],
	"modified": "2012-08-05 18:35:38.929350",
	"closed": true,
	"issue": 6446065
}