{
	"description": "go/exp/go/types: use new go/types/constant package",
	"cc": [
		"adonovan@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"minux.ma@gmail.com"
	],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.exp",
			"disapproval": false,
			"date": "2013-04-12 02:00:38.974300",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nNice.  But shouldn't this CL include the deletion of const.go?\n\nhttps://codereview.appspot.com/8579044/diff/21001/go/types/gcimporter.go\nFile go/types/gcimporter.go (right):\n\nhttps://codereview.appspot.com/8579044/diff/21001/go/types/gcimporter.go#newcode749\ngo/types/gcimporter.go:749: x.val = constants.MakeBool(p.lit == \"true\")\nYou could eliminate the check on line 745 by using MakeBoolFromLiteral here and checking its result.\n\nhttps://codereview.appspot.com/8579044/diff/21001/go/types/objects.go\nFile go/types/objects.go (right):\n\nhttps://codereview.appspot.com/8579044/diff/21001/go/types/objects.go#newcode175\ngo/types/objects.go:175: panic(\"unreachable\")\nHow about just:\n  iota := astObj.Data.(int)\n?\nThe runtime gives a better error message that your panic string, since it tells you what the actual type was.\n\nhttps://codereview.appspot.com/8579044/diff/21001/go/types/objects.go#newcode177\ngo/types/objects.go:177: return &Const{Pkg: pkg, Name: name, Type: typ, Val: constants.MakeInt64(int64(iota)), spec: astObj.Decl.(*ast.ValueSpec)}\nNewlines after commas would make this more readable.\nDitto below.",
			"disapproval": false,
			"date": "2013-04-12 02:22:15.601840",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8579044/diff/21001/go/types/gcimporter.go\nFile go/types/gcimporter.go (right):\n\nhttps://codereview.appspot.com/8579044/diff/21001/go/types/gcimporter.go#newcode749\ngo/types/gcimporter.go:749: x.val = constants.MakeBool(p.lit == \"true\")\nOn 2013/04/12 02:22:15, adonovan wrote:\n> You could eliminate the check on line 745 by using MakeBoolFromLiteral here and\n> checking its result.\n\nMakeBoolFromLiteral only accepts literals, not identifiers (such as: true)\n\nhttps://codereview.appspot.com/8579044/diff/21001/go/types/objects.go\nFile go/types/objects.go (right):\n\nhttps://codereview.appspot.com/8579044/diff/21001/go/types/objects.go#newcode175\ngo/types/objects.go:175: panic(\"unreachable\")\nOn 2013/04/12 02:22:15, adonovan wrote:\n> How about just:\n>   iota := astObj.Data.(int)\n> ?\n> The runtime gives a better error message that your panic string, since it tells\n> you what the actual type was.\n\nDone. Residue from a find/manual replace session.\n\nhttps://codereview.appspot.com/8579044/diff/21001/go/types/objects.go#newcode177\ngo/types/objects.go:177: return &Const{Pkg: pkg, Name: name, Type: typ, Val: constants.MakeInt64(int64(iota)), spec: astObj.Decl.(*ast.ValueSpec)}\nOn 2013/04/12 02:22:15, adonovan wrote:\n> Newlines after commas would make this more readable.\n> Ditto below.\n\nThis code will go away once we resolve objects in go/types.",
			"disapproval": false,
			"date": "2013-04-12 16:54:11.629980",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Apr 13, 2013 at 3:12 AM,  <gri@golang.org> wrote:\r\n> *** Submitted as\r\n> https://code.google.com/p/go/source/detail?r=c19015015986&repo=exp ***\r\n>\r\n> go/exp/go/types: use new go/types/constant package\r\nWe need to update go.exp/ssa package after this CL.\r\n",
			"disapproval": false,
			"date": "2013-04-12 19:24:22.841460",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-04-12 18:58:20.869220",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-04-12 19:08:57.965510",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c19015015986&repo=exp ***\n\ngo/exp/go/types: use new go/types/constant package\n\nR=adonovan\nCC=golang-dev\nhttps://codereview.appspot.com/8579044",
			"disapproval": false,
			"date": "2013-04-12 19:12:37.191260",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 8579044: go/exp/go/types: use new go/types/constant package",
	"created": "2013-04-09 20:35:45.056710",
	"patchsets": [
		1,
		2001,
		4001,
		6001,
		9001,
		12001,
		15001,
		18001,
		21001,
		27001,
		31001,
		34001,
		36001,
		31002,
		40001,
		44001
	],
	"modified": "2013-04-12 19:24:22.960330",
	"closed": true,
	"issue": 8579044
}