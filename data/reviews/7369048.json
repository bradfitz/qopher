{
	"description": "cmd/gc: avoid runtime code generation for closures\n\nChange ARM context register to R7, to get out of the way\nof the register allocator during the compilation of the\nprologue statements (it wants to use R0 as a temporary).\n\nStep 2 of http://golang.org/s/go11func.",
	"cc": [
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"remyoudompheng@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-02-22 19:25:49.297350",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=51f7d979c6e8 ***\n\ncmd/gc: avoid runtime code generation for closures\n\nChange ARM context register to R7, to get out of the way\nof the register allocator during the compilation of the\nprologue statements (it wants to use R0 as a temporary).\n\nStep 2 of http://golang.org/s/go11func.\n\nR=ken2\nCC=golang-dev\nhttps://codereview.appspot.com/7369048",
			"disapproval": false,
			"date": "2013-02-22 19:25:54.718320",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This broke Windows, as usual. I am looking into it.\r\n",
			"disapproval": false,
			"date": "2013-02-22 20:24:54.520120",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/2/22  <rsc@golang.org> wrote:\r\n> Description:\r\n> cmd/gc: avoid runtime code generation for closures\r\n>\r\n> Change ARM context register to R7, to get out of the way\r\n> of the register allocator during the compilation of the\r\n> prologue statements (it wants to use R0 as a temporary).\r\n>\r\n> Step 2 of http://golang.org/s/go11func.\r\n>\r\n> Please review this at https://codereview.appspot.com/7369048/\r\n\r\nDoes it already make closure blobs eligible for escape analysis or do\r\nwe need a bit more work?\r\n\r\nR\u00e9my.\r\n",
			"disapproval": false,
			"date": "2013-02-23 08:32:12.128310",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7369048: cmd/gc: avoid runtime code generation for closures",
	"created": "2013-02-22 04:32:46.735040",
	"patchsets": [
		1,
		1001,
		4001,
		7001,
		6019,
		4002
	],
	"modified": "2013-02-23 08:32:12.229030",
	"closed": true,
	"issue": 7369048
}