{
	"description": "net/http/client.go: fix cookie handling on (*Client) Do()\n\nFix the problem with no cookie handling when sending\nother than GET or HEAD request through\n(*Client) Do(*Request) (*Resposne, error).\nhttps://code.google.com/p/go/issues/detail?id=3985\n\nAdds a function (*Client) send(*Request) (*Reponse, error):\n- sets cookies from CookieJar to request,\n- sends request\n- parses a reply cookies and updates CookieJar",
	"cc": [
		"gobot@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"serbaut@gmail.com",
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "filemon@google.com",
			"recipients": [
				"filemon@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-10-12 15:36:09.158970",
			"approval": false
		},
		{
			"sender": "filemon@google.com",
			"recipients": [
				"filemon@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ping,\n\nhttps://codereview.appspot.com/6653049/",
			"disapproval": false,
			"date": "2012-10-18 08:47:20.195590",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"filemon@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=bradfitz (assigned by bradfitz)",
			"disapproval": false,
			"date": "2012-10-22 21:41:54.629380",
			"approval": false
		},
		{
			"sender": "filemon@google.com",
			"recipients": [
				"filemon@google.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6653049/diff/2001/src/pkg/net/http/client.go\nFile src/pkg/net/http/client.go (right):\n\nhttps://codereview.appspot.com/6653049/diff/2001/src/pkg/net/http/client.go#newcode90\nsrc/pkg/net/http/client.go:90: func handleCookiesAndSend(jar CookieJar, req *Request, transport RoundTripper) (resp *Response, err error) {\nOn 2012/10/29 11:31:51, bradfitz wrote:\n> since CookieJar and RoundTripper both always come from the Client anyway, maybe\n> just make this a private method on *Client?\n> \n> func (c *Client) cookieSend(req *Request) (*Response, error)\n> \n> (and I have a slight preference for not naming the result parameters, for\n> clarity in the return statements below)\n\nThanks for pointing that.\n\nhttps://codereview.appspot.com/6653049/diff/2001/src/pkg/net/http/client.go#newcode97\nsrc/pkg/net/http/client.go:97: if err == nil && jar != nil {\nOn 2012/10/29 11:31:51, bradfitz wrote:\n> more idiomatic would be to return early on error.\n> \n> if err != nil {\n>     return nil, err\n> }\n\nDone.\n\nhttps://codereview.appspot.com/6653049/diff/2001/src/pkg/net/http/client.go#newcode98\nsrc/pkg/net/http/client.go:98: jar.SetCookies(req.URL, resp.Cookies())\nOn 2012/10/29 11:31:51, bradfitz wrote:\n> most the time this jar will be a blackHoleJar, which means we waste time parsing\n> cookies in resp.Cookies() just to throw them away, so maybe we should ditch\n> blackHoleJar, once this is a method on Client and we have the jar == nil checks\n> anyway\n\nDone.\n\nhttps://codereview.appspot.com/6653049/diff/2001/src/pkg/net/http/client.go#newcode233\nsrc/pkg/net/http/client.go:233: jar = blackHoleJar{}\nOn 2012/10/29 11:31:51, bradfitz wrote:\n> perhaps we should get rid of this now\n\nDone.\n\nhttps://codereview.appspot.com/6653049/diff/13001/src/pkg/net/http/client.go\nFile src/pkg/net/http/client.go (left):\n\nhttps://codereview.appspot.com/6653049/diff/13001/src/pkg/net/http/client.go#oldcode220\nsrc/pkg/net/http/client.go:220: jar = blackHoleJar{}\nOn 2012/10/29 14:46:57, bradfitz wrote:\n> this was the only use of blackHoleJar, so you can delete it from jar.go now.\n> \n> be sure to add jar.go to this CL, with \"hg change nnnnnn\" and then add it to the\n> file list and save before you hg mail again.\n\nDone.\n\nhttps://codereview.appspot.com/6653049/diff/13001/src/pkg/net/http/client.go\nFile src/pkg/net/http/client.go (right):\n\nhttps://codereview.appspot.com/6653049/diff/13001/src/pkg/net/http/client.go#newcode90\nsrc/pkg/net/http/client.go:90: func (c *Client) handleCookiesAndSend(req *Request) (resp *Response, err error) {\nSo there will be 2 methods called \"send\". One on *Client and a stand alone one. That can be quite misleading?\n\nDone.\n \nOn 2012/10/29 14:46:57, bradfitz wrote:\n> let's just call this method \"send\".  it's internal.  no need to have the callers\n> list out everything it does.\n> \n> also, drop the named result parameters.  just (*Response, error)",
			"disapproval": false,
			"date": "2012-10-29 16:39:00.451680",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"filemon@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry for the slow review.  Kick me in the future if you want my attention.\n\nhttps://codereview.appspot.com/6653049/diff/2001/src/pkg/net/http/client.go\nFile src/pkg/net/http/client.go (right):\n\nhttps://codereview.appspot.com/6653049/diff/2001/src/pkg/net/http/client.go#newcode90\nsrc/pkg/net/http/client.go:90: func handleCookiesAndSend(jar CookieJar, req *Request, transport RoundTripper) (resp *Response, err error) {\nsince CookieJar and RoundTripper both always come from the Client anyway, maybe just make this a private method on *Client?\n\nfunc (c *Client) cookieSend(req *Request) (*Response, error)\n\n(and I have a slight preference for not naming the result parameters, for clarity in the return statements below)\n\nhttps://codereview.appspot.com/6653049/diff/2001/src/pkg/net/http/client.go#newcode97\nsrc/pkg/net/http/client.go:97: if err == nil && jar != nil {\nmore idiomatic would be to return early on error.\n\nif err != nil {\n    return nil, err\n}\n\nhttps://codereview.appspot.com/6653049/diff/2001/src/pkg/net/http/client.go#newcode98\nsrc/pkg/net/http/client.go:98: jar.SetCookies(req.URL, resp.Cookies())\nmost the time this jar will be a blackHoleJar, which means we waste time parsing cookies in resp.Cookies() just to throw them away, so maybe we should ditch blackHoleJar, once this is a method on Client and we have the jar == nil checks anyway\n\nhttps://codereview.appspot.com/6653049/diff/2001/src/pkg/net/http/client.go#newcode233\nsrc/pkg/net/http/client.go:233: jar = blackHoleJar{}\nperhaps we should get rid of this now",
			"disapproval": false,
			"date": "2012-10-29 11:31:51.052790",
			"approval": false
		},
		{
			"sender": "filemon@google.com",
			"recipients": [
				"filemon@google.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: gobot@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-29 14:38:36.867330",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nThanks!\r\n\r\nOn Mon, Oct 29, 2012 at 5:39 PM, <filemon@google.com> wrote:\r\n\r\n> Hello bradfitz@golang.org (cc: gobot@golang.org,\r\n> golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> http://codereview.appspot.com/**6653049/<http://codereview.appspot.com/6653049/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-10-29 16:41:40.390540",
			"approval": true
		},
		{
			"sender": "filemon@google.com",
			"recipients": [
				"filemon@google.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: gobot@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-29 14:41:23.725090",
			"approval": false
		},
		{
			"sender": "filemon@google.com",
			"recipients": [
				"filemon@google.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: gobot@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-29 16:39:41.193910",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"filemon@google.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d2f3c74b9998 ***\n\nnet/http/client.go: fix cookie handling on (*Client) Do()\n\nFix the problem with no cookie handling when sending\nother than GET or HEAD request through\n(*Client) Do(*Request) (*Resposne, error).\nhttps://code.google.com/p/go/issues/detail?id=3985\n\nAdds a function (*Client) send(*Request) (*Reponse, error):\n- sets cookies from CookieJar to request,\n- sends request\n- parses a reply cookies and updates CookieJar\n\nFixes issue 3985\n\nR=bradfitz\nCC=gobot, golang-dev\nhttp://codereview.appspot.com/6653049\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2012-10-29 16:56:35.049650",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"filemon@google.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6653049/diff/13001/src/pkg/net/http/client.go\nFile src/pkg/net/http/client.go (left):\n\nhttps://codereview.appspot.com/6653049/diff/13001/src/pkg/net/http/client.go#oldcode220\nsrc/pkg/net/http/client.go:220: jar = blackHoleJar{}\nthis was the only use of blackHoleJar, so you can delete it from jar.go now.\n\nbe sure to add jar.go to this CL, with \"hg change nnnnnn\" and then add it to the file list and save before you hg mail again.\n\nhttps://codereview.appspot.com/6653049/diff/13001/src/pkg/net/http/client.go\nFile src/pkg/net/http/client.go (right):\n\nhttps://codereview.appspot.com/6653049/diff/13001/src/pkg/net/http/client.go#newcode90\nsrc/pkg/net/http/client.go:90: func (c *Client) handleCookiesAndSend(req *Request) (resp *Response, err error) {\nlet's just call this method \"send\".  it's internal.  no need to have the callers list out everything it does.\n\nalso, drop the named result parameters.  just (*Response, error)",
			"disapproval": false,
			"date": "2012-10-29 14:46:57.352630",
			"approval": false
		},
		{
			"sender": "filemon@google.com",
			"recipients": [
				"filemon@google.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: gobot@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-29 16:38:26.184140",
			"approval": false
		},
		{
			"sender": "filemon@google.com",
			"recipients": [
				"filemon@google.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: gobot@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-29 16:39:58.292650",
			"approval": false
		},
		{
			"sender": "serbaut@gmail.com",
			"recipients": [
				"filemon@google.com",
				"serbaut@gmail.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6653049/diff/12002/src/pkg/net/http/client.go\nFile src/pkg/net/http/client.go (right):\n\nhttps://codereview.appspot.com/6653049/diff/12002/src/pkg/net/http/client.go#newcode101\nsrc/pkg/net/http/client.go:101: c.Jar.SetCookies(req.URL, resp.Cookies())\nSetCookies is always called here, even if there are no cookies in resp. Shouldn't it be (as before):\n\nif c.Jar != nil {\n    if rc := resp.Cookies(); len(rc) > 0 {\n        c.Jar.SetCookies(req.URL, rc)\n    }\n}\n\n?",
			"disapproval": false,
			"date": "2012-12-19 16:45:19.457910",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"filemon@google.com",
				"serbaut@gmail.com",
				"bradfitz@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6653049/diff/12002/src/pkg/net/http/client.go\nFile src/pkg/net/http/client.go (right):\n\nhttps://codereview.appspot.com/6653049/diff/12002/src/pkg/net/http/client.go#newcode101\nsrc/pkg/net/http/client.go:101: c.Jar.SetCookies(req.URL, resp.Cookies())\nOn 2012/12/19 16:45:19, serbaut wrote:\n> SetCookies is always called here, even if there are no cookies in resp.\n> Shouldn't it be (as before):\n> \n> if c.Jar != nil {\n>     if rc := resp.Cookies(); len(rc) > 0 {\n>         c.Jar.SetCookies(req.URL, rc)\n>     }\n> }\n> \n> ?\n\nThat would also be fine.  Feel free to send a CL.",
			"disapproval": false,
			"date": "2012-12-19 17:04:02.352390",
			"approval": false
		}
	],
	"owner_email": "filemon@google.com",
	"private": false,
	"base_url": "",
	"owner": "pawelszczur",
	"subject": "code review 6653049: net/http/client.go: fix cookie handling on (*Client) Do()",
	"created": "2012-10-12 15:33:08.733540",
	"patchsets": [
		1,
		2001,
		6002,
		13001,
		9004,
		17004,
		12002
	],
	"modified": "2012-12-19 17:04:02.352390",
	"closed": false,
	"issue": 6653049
}