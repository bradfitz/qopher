{
	"description": "testing: use flag.Duration for -timeout flag.",
	"cc": [
		"golang-dev@googlegroups.com",
		"gustavo@niemeyer.net",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Dec 24, 2011 at 1:16 AM, Gustavo Niemeyer <gustavo@niemeyer.net> wrote:\n\n> As for the change in the CL, please try this in the tree:\n>\n> \u00a0 \u00a0$ grep -r -- '-\\(test\\.\\)\\?timeout' *\n>\n> There are a few other things that will need touching.\n\nThanks, done.\n",
			"disapproval": false,
			"date": "2011-12-23 23:17:45.460059",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-23 08:07:52.278690",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"gustavo@niemeyer.net",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5498077/diff/2003/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttp://codereview.appspot.com/5498077/diff/2003/src/cmd/go/test.go#newcode122\nsrc/cmd/go/test.go:122: If a test runs longer than n, panic.\nOn 2011/12/24 16:48:56, r wrote:\n> -,.s/n/t/\n\nDone.\n\nhttp://codereview.appspot.com/5498077/diff/2003/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttp://codereview.appspot.com/5498077/diff/2003/src/pkg/testing/testing.go#newcode66\nsrc/pkg/testing/testing.go:66: timeout        = flag.Duration(\"test.timeout\", 0, \"if > 0, sets time limit for tests\")\nOn 2011/12/24 16:48:56, r wrote:\n> > 0 implies a pure numeric value. also it's not clear what the limit applies to.\n> maybe\n> \n> if positive, sets an aggregate time limit for all tests\n\nDone.",
			"disapproval": false,
			"date": "2011-12-25 05:01:59.646818",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"gustavo@niemeyer.net",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5498077/diff/2003/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttp://codereview.appspot.com/5498077/diff/2003/src/cmd/go/test.go#newcode122\nsrc/cmd/go/test.go:122: If a test runs longer than n, panic.\n-,.s/n/t/\n\nhttp://codereview.appspot.com/5498077/diff/2003/src/pkg/testing/testing.go\nFile src/pkg/testing/testing.go (right):\n\nhttp://codereview.appspot.com/5498077/diff/2003/src/pkg/testing/testing.go#newcode66\nsrc/pkg/testing/testing.go:66: timeout        = flag.Duration(\"test.timeout\", 0, \"if > 0, sets time limit for tests\")\n> 0 implies a pure numeric value. also it's not clear what the limit applies to. maybe\n\nif positive, sets an aggregate time limit for all tests",
			"disapproval": false,
			"date": "2011-12-24 16:48:56.282279",
			"approval": true
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> It seems like Set should return an error so we can present a useful\n> message. That's important for flag.Duration, but I'd imagine it's also\n> important for even things like flag.Int32 (try passing something too\n> big for an int32), and for anyone else who writes a custom flag type.\n\nAgreed, and interestingly most standard Set methods are already\ndoing \"return err == nil\", which means they'd easily benefit from\nthis change as well, so +1 on modifying the interface to return error.\n\nAs for the change in the CL, please try this in the tree:\n\n    $ grep -r -- '-\\(test\\.\\)\\?timeout' *\n\nThere are a few other things that will need touching.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2011-12-23 14:16:25.784420",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I thought I'd give the new flag a go. This was the only place in the\ntree I could find that used a duration flag.\n\nI'm not thrilled by the error message if you pass it a plain number:\n\n$ gotest -timeout=2\n[...]\ninvalid value \"2\" for flag: -test.timeout\n\n\nThe flag package's interface looks like\n  type Value interface {\n      String() string\n      Set(string) bool\n  }\nIt seems like Set should return an error so we can present a useful\nmessage. That's important for flag.Duration, but I'd imagine it's also\nimportant for even things like flag.Int32 (try passing something too\nbig for an int32), and for anyone else who writes a custom flag type.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2011-12-23 08:11:13.552538",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"gustavo@niemeyer.net",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=fd6bc51eae9b ***\n\ntesting: use flag.Duration for -timeout flag.\n\nR=golang-dev, gustavo, r\nCC=golang-dev\nhttp://codereview.appspot.com/5498077",
			"disapproval": false,
			"date": "2011-12-25 05:07:26.014797",
			"approval": false
		}
	],
	"owner_email": "dsymonds@golang.org",
	"private": false,
	"base_url": "",
	"owner": "dsymonds",
	"subject": "code review 5498077: testing: use flag.Duration for -timeout flag.",
	"created": "2011-12-23 08:07:18.246617",
	"patchsets": [
		1,
		2001,
		4001,
		2003,
		1004
	],
	"modified": "2011-12-25 05:07:27.940324",
	"closed": true,
	"issue": 5498077
}