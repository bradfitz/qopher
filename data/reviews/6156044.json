{
	"description": "leveldb: add a FileSystem MkdirAll method. Redo memfs directories to be\nexplicit, not implicit.",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/leveldb-go",
			"disapproval": false,
			"date": "2012-05-02 08:17:39.087582",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6156044/diff/5001/leveldb/memfs/memfs.go\nFile leveldb/memfs/memfs.go (right):\n\nhttp://codereview.appspot.com/6156044/diff/5001/leveldb/memfs/memfs.go#newcode53\nleveldb/memfs/memfs.go:53: // dir is the directory at that step, frag is the name fragment, and final is\ns/name fragment/base name/?\n\nhttp://codereview.appspot.com/6156044/diff/5001/leveldb/memfs/memfs.go#newcode77\nleveldb/memfs/memfs.go:77: i := strings.IndexRune(fullname, os.PathSeparator)\nseems weird that an in-memory filesystem would have a separator that's dependent on the current operating system.  \n\nI guess because you want to be able to use filepath on these things?\n\nIn any case, all this manual splitting seems like you could use {file,}path.Split instead.  I guess that splits on the wrong side.\n\nhttp://codereview.appspot.com/6156044/diff/5001/leveldb/memfs/memfs.go#newcode145\nleveldb/memfs/memfs.go:145: return errors.New(\"leveldb/memfs: empty file name\")\nseems like a weird error\n\nhttp://codereview.appspot.com/6156044/diff/5001/leveldb/memfs/memfs.go#newcode149\nleveldb/memfs/memfs.go:149: return errors.New(\"leveldb/memfs: no such file or directory\")\ncould also just be os.ErrNotExist",
			"disapproval": false,
			"date": "2012-05-02 22:59:13.524709",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Submitting...\n\nhttp://codereview.appspot.com/6156044/diff/5001/leveldb/memfs/memfs.go\nFile leveldb/memfs/memfs.go (right):\n\nhttp://codereview.appspot.com/6156044/diff/5001/leveldb/memfs/memfs.go#newcode53\nleveldb/memfs/memfs.go:53: // dir is the directory at that step, frag is the name fragment, and final is\nOn 2012/05/02 22:59:13, bradfitz wrote:\n> s/name fragment/base name/?\n\nIIUC, for a name like \"/foo/bar/x.txt\", the base name is always \"x.txt\", but I want fragment to be things like \"foo\", \"bar\" and \"x.txt\".\n\nhttp://codereview.appspot.com/6156044/diff/5001/leveldb/memfs/memfs.go#newcode77\nleveldb/memfs/memfs.go:77: i := strings.IndexRune(fullname, os.PathSeparator)\nOn 2012/05/02 22:59:13, bradfitz wrote:\n> seems weird that an in-memory filesystem would have a separator that's dependent\n> on the current operating system.  \n> \n> I guess because you want to be able to use filepath on these things?\n\nThe motivation is that people just pass an OS-specific filename to leveldb.Open, and that just propagates through.\n\nIt is a little awkward, though. Memfs using os.PathSeparator is not set in stone yet.\n\n\n> In any case, all this manual splitting seems like you could use\n> {file,}path.Split instead.  I guess that splits on the wrong side.\n\nYeah, path.Split splits from the end. I need to split from the start.",
			"disapproval": false,
			"date": "2012-05-02 23:58:07.492825",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/leveldb-go/source/detail?r=71c77a1a0c42 ***\n\nleveldb: add a FileSystem MkdirAll method. Redo memfs directories to be\nexplicit, not implicit.\n\nR=bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6156044",
			"disapproval": false,
			"date": "2012-05-03 00:23:50.040020",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6156044: leveldb: add a FileSystem MkdirAll method. Redo memfs d...",
	"created": "2012-05-02 08:17:12.337263",
	"patchsets": [
		1,
		2001,
		5001,
		8001
	],
	"modified": "2012-05-03 00:23:52.474189",
	"closed": true,
	"issue": 6156044
}