{
	"description": "html: parse <select> tags.\n\nThe additional test case in parse_test.go is:\n<select><b><option><select><option></b></select>X",
	"cc": [
		"andybalholm@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello andybalholm@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-20 03:52:07.315859",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL.\n\nhttp://codereview.appspot.com/5293051/diff/4001/src/pkg/html/parse.go\nFile src/pkg/html/parse.go (right):\n\nhttp://codereview.appspot.com/5293051/diff/4001/src/pkg/html/parse.go#newcode53\nsrc/pkg/html/parse.go:53: const invertStopTags = \"\\xff\"\nOn 2011/10/20 15:32:02, andybalholm wrote:\n> This is ugly.\n> \n> Instead, we could replace\n> \n> p.popUntil(selectScopeStopTags, \"select\")\n> return p.resetInsertionMode(), true\n> \n> with\n> \n> for i := len(p.oe) - 1; i >= 0; i-- {\n> \tswitch p.oe[i].Data {\n> \tcase \"select\":\n> \t\tp.oe = p.oe[:i]\n> \t\treturn p.resetInsertionMode(), true\n> \tcase \"option\", \"optgroup\":\n> \t\tcontinue\n> \tdefault:\n> \t\treturn inSelectIM, true\n> \t}\n> }\n\nDone.",
			"disapproval": false,
			"date": "2011-10-21 00:54:56.227956",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "It looks good except for how the inverted stop tags are handled.\n\nhttp://codereview.appspot.com/5293051/diff/4001/src/pkg/html/parse.go\nFile src/pkg/html/parse.go (right):\n\nhttp://codereview.appspot.com/5293051/diff/4001/src/pkg/html/parse.go#newcode53\nsrc/pkg/html/parse.go:53: const invertStopTags = \"\\xff\"\nThis is ugly.\n\nInstead, we could replace\n\np.popUntil(selectScopeStopTags, \"select\")\nreturn p.resetInsertionMode(), true\n\nwith\n\nfor i := len(p.oe) - 1; i >= 0; i-- {\n\tswitch p.oe[i].Data {\n\tcase \"select\":\n\t\tp.oe = p.oe[:i]\n\t\treturn p.resetInsertionMode(), true\n\tcase \"option\", \"optgroup\":\n\t\tcontinue\n\tdefault:\n\t\treturn inSelectIM, true\n\t}\n}\n\nOr if you want to keep using popUntil, you could define a stopTags type with a flag:\n\ntype stopTags struct {\n    tags []string\n    inverted bool\n}\n\nso that the flag won't be mixed in with the tag names.",
			"disapproval": false,
			"date": "2011-10-20 15:32:02.428104",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=60d08510dc91 ***\n\nhtml: parse <select> tags.\n\nThe additional test case in parse_test.go is:\n<select><b><option><select><option></b></select>X\n\nR=andybalholm\nCC=golang-dev\nhttp://codereview.appspot.com/5293051",
			"disapproval": false,
			"date": "2011-10-22 09:18:20.585703",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2011-10-21 21:39:35.415533",
			"approval": true
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 5293051: html: parse <select> tags.",
	"created": "2011-10-20 03:51:23.563735",
	"patchsets": [
		1,
		2001,
		4001,
		10001,
		12001
	],
	"modified": "2011-10-22 09:18:25.153248",
	"closed": true,
	"issue": 5293051
}