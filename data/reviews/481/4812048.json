{
	"description": "archive/zip: handle zip files with more than 65535 files",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"serbaut@gmail.com"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-07-22 04:48:11.579136",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-07-22 04:52:35.185030",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-07-22 04:50:01.442986",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f04f95825b5a ***\n\narchive/zip: handle zip files with more than 65535 files\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/4812048",
			"disapproval": false,
			"date": "2011-07-22 04:57:22.745437",
			"approval": false
		},
		{
			"sender": "serbaut@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I'm adding ZIP64 support to archive/zip and this looks very fishy to me.\r\n\r\nFor 32 bit zip files there is a limit of 65k files in the spec. I believe \r\nsome tool mistakenly created archives with more files in it and wrapped the \r\ncount at 65k. Java and windows xp are primary suspects:  \r\nhttps://issues.apache.org/bugzilla/show_bug.cgi?id=53503   \r\nhttp://help.lockergnome.com/windows/65536-item-limit-bug-Compressed-zipped-Folder--ftopict424140.html\r\n \r\n\r\nIt is probably good to be able read these files but we should not create \r\nmore broken zip files (as the writer does now).\r\n\r\nOn Friday, July 22, 2011 6:57:22 AM UTC+2, Andrew Gerrand wrote:\r\n>\r\n> *** Submitted as\r\n> http://code.google.com/p/go/source/detail?r=f04f95825b5a ***\r\n>\r\n> archive/zip: handle zip files with more than 65535 files\r\n>\r\n> R=r\r\n> CC=golang-dev\r\n> http://codereview.appspot.com/4812048\r\n>\r\n>\r\n> http://codereview.appspot.com/4812048/\r\n>\r\n>",
			"disapproval": false,
			"date": "2012-08-09 21:05:32.341320",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "You're suggesting we fail when trying to create files with greater than 64k\r\nfiles?\r\nOn 10 Aug 2012 07:05, \"Joakim Sernbrant\" <serbaut@gmail.com> wrote:\r\n\r\n> I'm adding ZIP64 support to archive/zip and this looks very fishy to me.\r\n>\r\n> For 32 bit zip files there is a limit of 65k files in the spec. I believe\r\n> some tool mistakenly created archives with more files in it and wrapped the\r\n> count at 65k. Java and windows xp are primary suspects:\r\n> https://issues.apache.org/bugzilla/show_bug.cgi?id=53503\r\n> http://help.lockergnome.com/windows/65536-item-limit-bug-Compressed-zipped-Folder--ftopict424140.html\r\n>\r\n>\r\n> It is probably good to be able read these files but we should not create\r\n> more broken zip files (as the writer does now).\r\n>\r\n> On Friday, July 22, 2011 6:57:22 AM UTC+2, Andrew Gerrand wrote:\r\n>>\r\n>> *** Submitted as\r\n>> http://code.google.com/p/go/**source/detail?r=f04f95825b5a<http://code.google.com/p/go/source/detail?r=f04f95825b5a>***\r\n>>\r\n>> archive/zip: handle zip files with more than 65535 files\r\n>>\r\n>> R=r\r\n>> CC=golang-dev\r\n>> http://codereview.appspot.com/**4812048<http://codereview.appspot.com/4812048>\r\n>>\r\n>>\r\n>> http://codereview.appspot.com/**4812048/<http://codereview.appspot.com/4812048/>\r\n>>\r\n>>\r\n",
			"disapproval": false,
			"date": "2012-08-10 04:02:00.960960",
			"approval": false
		},
		{
			"sender": "serbaut@gmail.com",
			"recipients": [
				"adg@golang.org",
				"serbaut@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/10 04:02:00, adg wrote:\n> You're suggesting we fail when trying to create files with greater than 64k\n> files?\n\nThat would be the sane thing to do. However I looked at the source for zip 2.32 and it happily creates broken files. zip 3.0 complains about them though:\n\nzip warning: expected 4464 entries but found 70000\nzip error: Zip file structure invalid (test.zip)\n\nThey can be fixed with zip --fixfix test.zip --out fixed.zip.\n\nI will try to make sure both can be read but that zip64 files will be written when needed. Must read up on how to submit a patch for review first :)",
			"disapproval": false,
			"date": "2012-08-10 09:00:14.524690",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 4812048: archive/zip: handle zip files with more than 65535 files",
	"created": "2011-07-22 04:48:04.172832",
	"patchsets": [
		1,
		2001,
		4001,
		4002
	],
	"modified": "2012-08-10 09:00:14.832060",
	"closed": true,
	"issue": 4812048
}