{
	"description": "runtime: fix memclr and impove memcopy.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"r@google.com",
		"dsymonds@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "qyzhai@gmail.com",
			"recipients": [
				"qyzhai@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-07-21 12:26:18.335237",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"qyzhai@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "Have you seen a bug that this fixes?",
			"disapproval": false,
			"date": "2011-07-22 05:44:53.764910",
			"approval": false
		},
		{
			"sender": "qyzhai@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": ">\n> If you're not sure, why do you want to fix it?\n>\n> -rob\n>\nI mean \"is it intended to do so?\"\n",
			"disapproval": false,
			"date": "2011-07-22 17:50:26.878425",
			"approval": false
		},
		{
			"sender": "qyzhai@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Fri, Jul 22, 2011 at 6:13 PM, Rob 'Commander' Pike <r@google.com> wrote:\n\n> Let me put it another way. Do you have a test that fails before this fix\n> and succeeds after it?  Semantic changes to core libraries are not lightly\n> made.\n\n\nI have not found any tests fails before this \"fix\", the memset(memclr) is\njust a little  not reasonable to me\uff0cI found it some days ago, and hesitate a\nwhile before send a changeset.\n\nI hope it will avoid some  bugs in the future.\n\nsorry for my poor english.\n",
			"disapproval": false,
			"date": "2011-07-22 16:57:17.117081",
			"approval": false
		},
		{
			"sender": "qyzhai@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Fri, Jul 22, 2011 at 1:44 PM, <r@golang.org> wrote:\n\n> Have you seen a bug that this fixes?\n\nPlease look at the memclr. if argument count == 1, it clear 8  bytes on\namd64, or 4 bytes on 386.\nNot sure it's intend to do so.\n",
			"disapproval": false,
			"date": "2011-07-22 08:20:41.131576",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Fri, Jul 22, 2011 at 6:20 PM, zhai <qyzhai@gmail.com> wrote:\n\n> Please look at the memclr. if argument count == 1, it clear 8 \u00a0bytes on\n> amd64, or 4 bytes on 386.\n\nIn addition to Rob's comments, I think you've got this around the\nwrong way. The current amd64 code has\n  MOVQ\t16(SP), CX // puts the count in CX\n  SHRQ\t$3, CX // count >> 3\nThat means that, for count=1, CX will hold zero, so the \"REP; STOSQ\"\nwill not write anything. In effect, the existing memclr under-clears\nbut never over-clears.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2011-07-22 14:20:01.490054",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nOn 22/07/2011, at 6:20 PM, zhai wrote:\n\n> On Fri, Jul 22, 2011 at 1:44 PM, <r@golang.org> wrote:\n> Have you seen a bug that this fixes?\n> Please look at the memclr. if argument count == 1, it clear 8  bytes on amd64, or 4 bytes on 386.\n> Not sure it's intend to do so.\n\nIf you're not sure, why do you want to fix it?\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-07-22 09:49:24.885954",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Let me put it another way. Do you have a test that fails before this fix and succeeds after it?  Semantic changes to core libraries are not lightly made.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-07-22 10:13:25.147238",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "the existing code overclears.\nit clears up to the next word boundary.\nbut it is only called from places where\nthat is okay.\n\nthis CL replaces a C byte-clearing loop\nin a context where that is not okay with a\ncall to memclr, so it also fixes memclr\nnot to overclear, or else the switch would\nnot be okay.\n\neverything about this CL looks good to me.\n",
			"disapproval": false,
			"date": "2011-07-23 00:57:58.768561",
			"approval": false
		},
		{
			"sender": "qyzhai@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": ">\n>  so it also fixes memclr\n> not to overclear, or else the switch would\n> not be okay.\n>\n\nIt still pass all tests without changing the memclr asm code on 386.\n",
			"disapproval": false,
			"date": "2011-07-23 03:50:17.698409",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Oh, duh. Somehow I completely missed the\n  ADDQ\t$7, CX\n\nYes, the existing one does overclear.\n\nServes me right for reading assembly code after midnight.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2011-07-23 03:52:36.801839",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nDon't seem to be any more objections, so submitting...\n",
			"disapproval": false,
			"date": "2011-07-23 19:45:01.983245",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"qyzhai@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"r@google.com",
				"dsymonds@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=79cb8647dd5a ***\n\nruntime: replace byte-at-a-time zeroing loop with memclr\n\nR=golang-dev, r, r, dsymonds, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/4813043\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2011-07-23 19:47:04.300607",
			"approval": false
		}
	],
	"owner_email": "qyzhai@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "zhai",
	"subject": "code review 4813043: runtime: fix memclr and impove memcopy.",
	"created": "2011-07-21 12:19:04.986542",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2011-07-23 19:47:04.300607",
	"closed": false,
	"issue": 4813043
}