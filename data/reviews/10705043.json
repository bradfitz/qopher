{
	"description": "cmd/go: add -coverpkg\n\nThe new -coverpkg flag allows computing coverage in\none set of packages while running the tests of a different set.\n\nAlso clean up some of the previous CL's recompileForTest,\nusing packageList to avoid the clumsy recursion.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-06-27 18:59:09.426940",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\ndid you verify that the html output works with multiple packages?\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.bash\nFile src/cmd/go/test.bash (right):\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.bash#newcode327\nsrc/cmd/go/test.bash:327: # Check that it works at all.\ns/it/coverage analysis/\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.go#newcode147\nsrc/cmd/go/test.go:147: the package being tested. Packages are specified as import paths.\nApply coverage analysis in each test to the given list of packages.\nThe default is to analyze only the packages being tested.\nPackages are specified as import paths.\nImplies -cover.\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.go#newcode482\nsrc/cmd/go/test.go:482: fmt.Fprintf(os.Stderr, \"\\t%s %p\\n\", a.p.ImportPath, a.p)\n%p?\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.go#newcode658\nsrc/cmd/go/test.go:658: if ptest.ImportPath != \"testing\" {\nthis is ugly. let's generalize it into a loop. easier to maintain.\n\ndeps := []string{\"regexp\", \"testing\"}\nfor _, dep := range deps {\n   ptesting := loadImport(dep, \"\", &stk, nil)\n   if ...\n   pmain.imports = append(...)\n}\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/testflag.go\nFile src/cmd/go/testflag.go (right):\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/testflag.go#newcode32\nsrc/cmd/go/testflag.go:32: -coverpkg=\"\": specify package for coverage analysis\nit's comma separated, so maybe\n\n-coverpkg=\"\": comma-separated list of packages for coverage analysis",
			"disapproval": false,
			"date": "2013-06-27 20:27:04.286840",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes, the html output still works, since it just sees more files.\nOne nit: from the usage message I did not expect \n\ngo tool cover -html=x.prof >x.html\n\nto open a web browser.\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.bash\nFile src/cmd/go/test.bash (right):\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.bash#newcode327\nsrc/cmd/go/test.bash:327: # Check that it works at all.\nOn 2013/06/27 20:27:04, r wrote:\n> s/it/coverage analysis/\n\nDone.\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.go\nFile src/cmd/go/test.go (right):\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.go#newcode147\nsrc/cmd/go/test.go:147: the package being tested. Packages are specified as import paths.\nOn 2013/06/27 20:27:04, r wrote:\n> Apply coverage analysis in each test to the given list of packages.\n> The default is to analyze only the packages being tested.\n> Packages are specified as import paths.\n> Implies -cover.\n\nDone.\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.go#newcode482\nsrc/cmd/go/test.go:482: fmt.Fprintf(os.Stderr, \"\\t%s %p\\n\", a.p.ImportPath, a.p)\nOn 2013/06/27 20:27:04, r wrote:\n> %p?\n\nAwful debugging. Gone.\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/test.go#newcode658\nsrc/cmd/go/test.go:658: if ptest.ImportPath != \"testing\" {\nOn 2013/06/27 20:27:04, r wrote:\n> this is ugly. let's generalize it into a loop. easier to maintain.\n> \n> deps := []string{\"regexp\", \"testing\"}\n> for _, dep := range deps {\n>    ptesting := loadImport(dep, \"\", &stk, nil)\n>    if ...\n>    pmain.imports = append(...)\n> }\n\nDone. I found a list with \"regexp\" and \"testing\" in it a ways up to reuse.\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/testflag.go\nFile src/cmd/go/testflag.go (right):\n\nhttps://codereview.appspot.com/10705043/diff/3001/src/cmd/go/testflag.go#newcode32\nsrc/cmd/go/testflag.go:32: -coverpkg=\"\": specify package for coverage analysis\nOn 2013/06/27 20:27:04, r wrote:\n> it's comma separated, so maybe\n> \n> -coverpkg=\"\": comma-separated list of packages for coverage analysis\n> \n\nDone.",
			"disapproval": false,
			"date": "2013-06-27 20:47:50.598370",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=70a7a4257467 ***\n\ncmd/go: add -coverpkg\n\nThe new -coverpkg flag allows computing coverage in\none set of packages while running the tests of a different set.\n\nAlso clean up some of the previous CL's recompileForTest,\nusing packageList to avoid the clumsy recursion.\n\nR=golang-dev, r\nCC=golang-dev\nhttps://codereview.appspot.com/10705043",
			"disapproval": false,
			"date": "2013-06-27 21:04:42.173880",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "   One nit: from the usage message I did not expect\r\n\r\n   go tool cover -html=x.prof >x.html\r\n\r\n   to open a web browser.\r\n\r\nThe usage message does say \"display\" but I guess that's not clear. I'll adjust.\r\n\r\nThanks for doing this CL.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-06-27 21:28:19.144870",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 10705043: cmd/go: add -coverpkg",
	"created": "2013-06-27 18:55:36.081460",
	"patchsets": [
		1,
		3001,
		12001
	],
	"modified": "2013-06-27 21:28:19.257250",
	"closed": true,
	"issue": 10705043
}