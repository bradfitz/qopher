{
	"description": "freetype/truetype: vector set/gets, store ops, roll/max/min ops.",
	"cc": [
		"bsiegert@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bsiegert@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/freetype-go",
			"disapproval": false,
			"date": "2012-07-06 11:25:14.994170",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/freetype-go/source/detail?r=33f1aeb76b1a ***\n\nfreetype/truetype: vector set/gets, store ops, roll/max/min ops.\n\nR=bsiegert\nCC=golang-dev\nhttp://codereview.appspot.com/6354080",
			"disapproval": false,
			"date": "2012-07-09 13:19:46.692630",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6354080/diff/1005/freetype/truetype/hint.go\nFile freetype/truetype/hint.go (right):\n\nhttp://codereview.appspot.com/6354080/diff/1005/freetype/truetype/hint.go#newcode17\nfreetype/truetype/hint.go:17: store [128]int32\nShould the size of this depend on the number of storage locations given in the font file header?\n\nhttp://codereview.appspot.com/6354080/diff/1005/freetype/truetype/hint.go#newcode32\nfreetype/truetype/hint.go:32: // The default vectors are along the X axis.\nThere is more and more initialization of state here. Should this be done in a NewHinter function instead? Or is the purpose to start each run with a clean stack?\n\nhttp://codereview.appspot.com/6354080/diff/1005/freetype/truetype/hint.go#newcode359\nfreetype/truetype/hint.go:359: return errors.New(\"truetype: hinting: unsupported IDEF instruction\")\nIs this really an error, or should this just emit a warning and skip until the corresponding ENDF?",
			"disapproval": false,
			"date": "2012-07-06 14:08:13.834500",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6354080/diff/1005/freetype/truetype/hint.go\nFile freetype/truetype/hint.go (right):\n\nhttp://codereview.appspot.com/6354080/diff/1005/freetype/truetype/hint.go#newcode17\nfreetype/truetype/hint.go:17: store [128]int32\nOn 2012/07/06 14:08:13, bsiegert wrote:\n> Should the size of this depend on the number of storage locations given in the\n> font file header?\n\nMaybe. The easiest thing to do for now is a fixed size storage area. I'll add a TODO.\n\nhttp://codereview.appspot.com/6354080/diff/1005/freetype/truetype/hint.go#newcode32\nfreetype/truetype/hint.go:32: // The default vectors are along the X axis.\nOn 2012/07/06 14:08:13, bsiegert wrote:\n> There is more and more initialization of state here. Should this be done in a\n> NewHinter function instead? Or is the purpose to start each run with a clean\n> stack?\n\nEach run has to start with a clean slate. This initialization will probably separate out when I implement function calls, but that's for a future CL.\n\nhttp://codereview.appspot.com/6354080/diff/1005/freetype/truetype/hint.go#newcode359\nfreetype/truetype/hint.go:359: return errors.New(\"truetype: hinting: unsupported IDEF instruction\")\nOn 2012/07/06 14:08:13, bsiegert wrote:\n> Is this really an error, or should this just emit a warning and skip until the\n> corresponding ENDF?\n\nI prefer an error over a warning.",
			"disapproval": false,
			"date": "2012-07-08 00:38:10.804930",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-07-08 08:49:06.683370",
			"approval": true
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6354080: freetype/truetype: vector set/gets, store ops, roll/max...",
	"created": "2012-07-06 11:24:51.434930",
	"patchsets": [
		1,
		2001,
		1005,
		7002,
		8002
	],
	"modified": "2012-07-09 13:19:51.663070",
	"closed": true,
	"issue": 6354080
}