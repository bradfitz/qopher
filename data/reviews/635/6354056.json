{
	"description": "api: update next.txt\n\nSome accumulated changes from the past few weeks.\n\nJust cleans up all.bash output.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\nOn 29 June 2012 07:46, <bradfitz@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> api: update next.txt\r\n>\r\n> Some accumulated changes from the past few weeks.\r\n>\r\n> Just cleans up all.bash output.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6354056/<http://codereview.appspot.com/6354056/>\r\n>\r\n> Affected files:\r\n>  M api/next.txt\r\n>\r\n>\r\n> Index: api/next.txt\r\n> ==============================**==============================**=======\r\n> --- a/api/next.txt\r\n> +++ b/api/next.txt\r\n> @@ -6,13 +6,33 @@\r\n>  pkg crypto/x509, const ECDSAWithSHA256 SignatureAlgorithm\r\n>  pkg crypto/x509, const ECDSAWithSHA384 SignatureAlgorithm\r\n>  pkg crypto/x509, const ECDSAWithSHA512 SignatureAlgorithm\r\n> +pkg crypto/x509, const ExtKeyUsageIPSECEndSystem ExtKeyUsage\r\n> +pkg crypto/x509, const ExtKeyUsageIPSECTunnel ExtKeyUsage\r\n> +pkg crypto/x509, const ExtKeyUsageIPSECUser ExtKeyUsage\r\n> +pkg crypto/x509, const IncompatibleUsage InvalidReason\r\n> +pkg crypto/x509, type VerifyOptions struct, KeyUsages []ExtKeyUsage\r\n>  pkg debug/elf, type FileHeader struct, Entry uint64\r\n> +pkg encoding/json, method (*Decoder) UseNumber()\r\n> +pkg encoding/json, method (Number) Float64() (float64, error)\r\n> +pkg encoding/json, method (Number) Int64() (int64, error)\r\n> +pkg encoding/json, method (Number) String() string\r\n> +pkg encoding/json, type Number string\r\n> +pkg go/ast, func NewCommentMap(*token.FileSet, Node, []*CommentGroup)\r\n> CommentMap\r\n> +pkg go/ast, method (CommentMap) Comments() []*CommentGroup\r\n> +pkg go/ast, method (CommentMap) Filter(Node) CommentMap\r\n> +pkg go/ast, method (CommentMap) String() string\r\n> +pkg go/ast, method (CommentMap) Update(Node) Node\r\n> +pkg go/ast, type CommentMap map[Node][]*CommentGroup\r\n>  pkg go/doc, var IllegalPrefixes []string\r\n> +pkg image, const YCbCrSubsampleRatio440 YCbCrSubsampleRatio\r\n>  pkg math/big, method (*Int) MarshalJSON() ([]byte, error)\r\n>  pkg math/big, method (*Int) UnmarshalJSON([]byte) error\r\n>  pkg net, method (*UnixConn) CloseRead() error\r\n>  pkg net, method (*UnixConn) CloseWrite() error\r\n> -pkg regexp/syntax, const ErrUnexpectedParen ErrorCode\r\n> +pkg net/http, method (*Request) PostFormValue(string) string\r\n> +pkg net/http, type Request struct, PostForm url.Values\r\n> +pkg net/textproto, func TrimBytes([]byte) []byte\r\n> +pkg net/textproto, func TrimString(string) string\r\n>  pkg syscall (darwin-386), const B0 ideal-int\r\n>  pkg syscall (darwin-386), const B110 ideal-int\r\n>  pkg syscall (darwin-386), const B115200 ideal-int\r\n> @@ -419,15 +439,14 @@\r\n>  pkg syscall (darwin-amd64-cgo), type Termios struct, Oflag uint64\r\n>  pkg syscall (darwin-amd64-cgo), type Termios struct, Ospeed uint64\r\n>  pkg syscall (darwin-amd64-cgo), type Termios struct, Pad_cgo_0 [4]byte\r\n> +pkg syscall (freebsd-amd64), func Syscall9(uintptr) (uintptr, Errno)\r\n>  pkg syscall (windows-386), const CREATE_NEW_PROCESS_GROUP ideal-int\r\n>  pkg syscall (windows-386), const CTRL_BREAK_EVENT ideal-int\r\n>  pkg syscall (windows-386), const CTRL_C_EVENT ideal-int\r\n> -pkg syscall (windows-386), func GetCurrentProcessId() uint32\r\n>  pkg syscall (windows-386), func Getsockopt(Handle, int32, int32, *byte,\r\n> *int32) error\r\n>  pkg syscall (windows-386), type SysProcAttr struct, CreationFlags uint32\r\n>  pkg syscall (windows-amd64), const CREATE_NEW_PROCESS_GROUP ideal-int\r\n>  pkg syscall (windows-amd64), const CTRL_BREAK_EVENT ideal-int\r\n>  pkg syscall (windows-amd64), const CTRL_C_EVENT ideal-int\r\n> -pkg syscall (windows-amd64), func GetCurrentProcessId() uint32\r\n>  pkg syscall (windows-amd64), func Getsockopt(Handle, int32, int32, *byte,\r\n> *int32) error\r\n>  pkg syscall (windows-amd64), type SysProcAttr struct, CreationFlags uint32\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-06-30 18:02:44.728634",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-06-29 14:46:42.964028",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=aee6a01a9f9e ***\n\napi: update next.txt\n\nSome accumulated changes from the past few weeks.\n\nJust cleans up all.bash output.\n\nR=golang-dev, adg\nCC=golang-dev\nhttp://codereview.appspot.com/6354056",
			"disapproval": false,
			"date": "2012-06-30 19:25:43.954248",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6354056: api: update next.txt",
	"created": "2012-06-29 14:46:32.209209",
	"patchsets": [
		1,
		2001,
		5001,
		5002
	],
	"modified": "2012-06-30 19:25:44.914806",
	"closed": true,
	"issue": 6354056
}