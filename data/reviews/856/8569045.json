{
	"description": "go/doc/example: Fix bug causing false negatives for Example playability.\n\nAllows Examples with KeyValue expressions to be playable in godoc.\n\nDuring the traversal of the abstract syntax tree any KeyValueExpr Key.Name was incorrectly being added as an unresolved identifier.\nSince this identifier could not be provided the Example was marked as unplayable.\nThis updates the AST traversal to skip Keys (but continue traversing the Values).\n\nExample of problematic AST now fixed (see L99 where \"UpperBound\" was being added as a missing identifier):\n\n 81  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {\n 82  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {\n 83  .  .  .  .  .  .  .  .  .  .  .  OpPos: 12:19\n 84  .  .  .  .  .  .  .  .  .  .  .  Op: &\n 85  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {\n 86  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {\n 87  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n 88  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:20\n 89  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t_proto\"\n 90  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n 91  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n 92  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:41\n 93  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"BConfig\"\n 94  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n 95  .  .  .  .  .  .  .  .  .  .  .  .  }\n 96  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: 12:79\n 97  .  .  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 2) {\n 98  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {\n 99  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {\n100  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 13:3\n101  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"UpperBound\"\n102  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n103  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: 13:13\n104  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.CallExpr {\n105  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 13:15\n108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"proto\"\n109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n111  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 13:21\n112  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Float32\"\n113  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }",
	"cc": [
		"adg@golang.org",
		"gobot@golang.org",
		"golang-dev@googlegroups.com",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"jeremiah@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please also s/absract/abstract/ in the CL description.\n- gri\n\nhttps://codereview.appspot.com/8569045/diff/6001/src/pkg/go/doc/example.go\nFile src/pkg/go/doc/example.go (right):\n\nhttps://codereview.appspot.com/8569045/diff/6001/src/pkg/go/doc/example.go#newcode170\nsrc/pkg/go/doc/example.go:170: // the key should be resolved by the parent.\nplease rephrase this to:\n\n... by the type of the composite literal.\n\nhttps://codereview.appspot.com/8569045/diff/6001/src/pkg/go/doc/example_test.go\nFile src/pkg/go/doc/example_test.go (right):\n\nhttps://codereview.appspot.com/8569045/diff/6001/src/pkg/go/doc/example_test.go#newcode40\nsrc/pkg/go/doc/example_test.go:40: v := struct {\nCan you add two examples, one where the map type is defined outside, in the same package, and one where it's imported? (you can probably use some map type from some std. library). Does it still work?",
			"disapproval": false,
			"date": "2013-04-26 19:55:50.041890",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"jeremiah@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=adg (assigned by adg)",
			"disapproval": false,
			"date": "2013-04-29 07:58:57.142000",
			"approval": false
		},
		{
			"sender": "jeremiah@google.com",
			"recipients": [
				"jeremiah@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-04-26 18:40:13.746940",
			"approval": false
		},
		{
			"sender": "jeremiah@google.com",
			"recipients": [
				"jeremiah@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the review.  Changes made and tests all pass.  Also fixed description spelling issues.  Please take a look.\n\nhttps://codereview.appspot.com/8569045/diff/6001/src/pkg/go/doc/example.go\nFile src/pkg/go/doc/example.go (right):\n\nhttps://codereview.appspot.com/8569045/diff/6001/src/pkg/go/doc/example.go#newcode170\nsrc/pkg/go/doc/example.go:170: // the key should be resolved by the parent.\nOn 2013/04/26 19:55:50, gri wrote:\n> please rephrase this to:\n> \n> ... by the type of the composite literal.\n\nDone.\n\nhttps://codereview.appspot.com/8569045/diff/6001/src/pkg/go/doc/example_test.go\nFile src/pkg/go/doc/example_test.go (right):\n\nhttps://codereview.appspot.com/8569045/diff/6001/src/pkg/go/doc/example_test.go#newcode40\nsrc/pkg/go/doc/example_test.go:40: v := struct {\nOn 2013/04/26 19:55:50, gri wrote:\n> Can you add two examples, one where the map type is defined outside, in the same\n> package, and one where it's imported? (you can probably use some map type from\n> some std. library). Does it still work?\n\nUsing the flag.Flag{Name: \"play\"} import does work.\n\nUsing the top level decl does not work (see example.go L186 / \"usesTopDecl\").  It looks like only the imports can be added to make an example self-contained.\n\nI've added tests for these positive and negative cases respectively.",
			"disapproval": false,
			"date": "2013-04-26 21:25:41.715000",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jeremiah@google.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-05-06 17:04:26.978030",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jeremiah@google.com",
				"adg@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=17c26220ac96 ***\n\ngo/doc/example: Fix bug causing false negatives for Example playability.\n\nAllows Examples with KeyValue expressions to be playable in godoc.\n\nDuring the traversal of the abstract syntax tree any KeyValueExpr Key.Name was incorrectly being added as an unresolved identifier.\nSince this identifier could not be provided the Example was marked as unplayable.\nThis updates the AST traversal to skip Keys (but continue traversing the Values).\n\nExample of problematic AST now fixed (see L99 where \"UpperBound\" was being added as a missing identifier):\n\n 81  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {\n 82  .  .  .  .  .  .  .  .  .  .  0: *ast.UnaryExpr {\n 83  .  .  .  .  .  .  .  .  .  .  .  OpPos: 12:19\n 84  .  .  .  .  .  .  .  .  .  .  .  Op: &\n 85  .  .  .  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {\n 86  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {\n 87  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n 88  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:20\n 89  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"t_proto\"\n 90  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n 91  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n 92  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 12:41\n 93  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"BConfig\"\n 94  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n 95  .  .  .  .  .  .  .  .  .  .  .  .  }\n 96  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: 12:79\n 97  .  .  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 2) {\n 98  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {\n 99  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {\n100  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 13:3\n101  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"UpperBound\"\n102  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n103  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: 13:13\n104  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.CallExpr {\n105  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {\n106  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {\n107  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 13:15\n108  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"proto\"\n109  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n110  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {\n111  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 13:21\n112  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: \"Float32\"\n113  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }\n\nR=adg\nCC=gobot, golang-dev, gri\nhttps://codereview.appspot.com/8569045\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2013-05-06 17:15:20.093940",
			"approval": false
		}
	],
	"owner_email": "jeremiah@google.com",
	"private": false,
	"base_url": "",
	"owner": "jeremiah",
	"subject": "code review 8569045: go/doc/example: Fix bug causing false negatives for Exa...",
	"created": "2013-04-26 04:39:02.003940",
	"patchsets": [
		1,
		2001,
		2002,
		6001,
		11001,
		17001
	],
	"modified": "2013-05-06 17:22:04.573050",
	"closed": true,
	"issue": 8569045
}