{
	"description": "fmt: fix test relying on map iteration order.\n\nThis fixes the 386 builds.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-18 00:21:32.318481",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I thought I saw this fly by this morning, but I can't find it now.\nEither way, the 386 builds are currently broken because of this.\n",
			"disapproval": false,
			"date": "2011-10-18 00:22:14.707256",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5293043/diff/4001/src/pkg/fmt/fmt_test.go\nFile src/pkg/fmt/fmt_test.go (right):\n\nhttp://codereview.appspot.com/5293043/diff/4001/src/pkg/fmt/fmt_test.go#newcode353\nsrc/pkg/fmt/fmt_test.go:353: {\"%#v\", map[string]B{\"a\": {1, 2}}, `map[string] fmt_test.B{\"a\":fmt_test.B{I:1, j:2}}`},\nThis works but it makes the test a lot less rigorous.\n\nMaybe put in a TODO to implement a map test that checks against all permutations.",
			"disapproval": false,
			"date": "2011-10-18 00:45:19.493168",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-10-18 00:45:28.911792",
			"approval": true
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ba08f59ca300 ***\n\nfmt: fix test relying on map iteration order.\n\nThis fixes the 386 builds.\n\nR=golang-dev, adg, r\nCC=golang-dev\nhttp://codereview.appspot.com/5293043",
			"disapproval": false,
			"date": "2011-10-18 00:47:17.605962",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"r@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5293043/diff/4001/src/pkg/fmt/fmt_test.go\nFile src/pkg/fmt/fmt_test.go (right):\n\nhttp://codereview.appspot.com/5293043/diff/4001/src/pkg/fmt/fmt_test.go#newcode353\nsrc/pkg/fmt/fmt_test.go:353: {\"%#v\", map[string]B{\"a\": {1, 2}}, `map[string] fmt_test.B{\"a\":fmt_test.B{I:1, j:2}}`},\nOn 2011/10/18 00:45:19, adg wrote:\n> This works but it makes the test a lot less rigorous.\n> \n> Maybe put in a TODO to implement a map test that checks against all\n> permutations.\n\nThere's already a test lower down that covers that, TestMapPrinter.",
			"disapproval": false,
			"date": "2011-10-18 00:46:51.856852",
			"approval": false
		}
	],
	"owner_email": "dsymonds@golang.org",
	"private": false,
	"base_url": "",
	"owner": "dsymonds",
	"subject": "code review 5293043: fmt: fix test relying on map iteration order.",
	"created": "2011-10-18 00:20:38.052858",
	"patchsets": [
		1,
		2001,
		4001,
		9001
	],
	"modified": "2011-10-18 00:47:19.519989",
	"closed": true,
	"issue": 5293043
}