{
	"description": "gofix: add go1pkgrename\nThis will do the package import renamings for Go 1.",
	"cc": [
		"rsc@golang.org",
		"r@google.com",
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\ni think i wrote what you were asking, but you had a much more complex expression, which means either you misspoke or i misunderstood. the test passes with this code.\n\ni can refactor once i understand your approach.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-11-04 00:19:28.188532",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-03 22:20:54.170128",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "I can't say I'm enamoured by the name, though. It seems awfully generic. What about \"go1pkgrename\"?",
			"disapproval": false,
			"date": "2011-11-04 00:30:44.712077",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5316078/diff/8001/src/cmd/gofix/fix.go\nFile src/cmd/gofix/fix.go (right):\n\nhttp://codereview.appspot.com/5316078/diff/8001/src/cmd/gofix/fix.go#newcode66\nsrc/cmd/gofix/fix.go:66: go1renameFix,\nSync. David changed this around and this array is gone.\n\nhttp://codereview.appspot.com/5316078/diff/8001/src/cmd/gofix/go1rename.go\nFile src/cmd/gofix/go1rename.go (right):\n\nhttp://codereview.appspot.com/5316078/diff/8001/src/cmd/gofix/go1rename.go#newcode63\nsrc/cmd/gofix/go1rename.go:63: \nif !fixed {\n   return false\n}\n\nOtherwise, the renaming will happen even on code\nthat was already using the new imports.\n\nhttp://codereview.appspot.com/5316078/diff/8001/src/cmd/gofix/go1rename.go#newcode71\nsrc/cmd/gofix/go1rename.go:71: if imp.Path.Value == rename.newPath {\nI don't expect this to fire.  Path.Value is a quoted string.\nI think you want if importPath(imp) == rename.newPath.\n\nThe test is passing because isPkgRef does not handling\nrenamed imports correctly.  If an import is renamed,\nthe parser knows that name, so the name can be resolved.\nisTopName only recognizes unresolved names.\n\nAnother way to write this would be to drop this loop\nand look for n.(*ast.SelectorExpr) in the walk,\nand then check isTopName(sel.X) && sel.X.(*ast.Ident).Name == rename.old.  That's justified by something like\n\n// This is old.Foo for an unresolved identifier old.\n// Assume old refers to the package we renamed.\n\nAnd then we could drop isPkgRef.  We could keep it,\nbut implementing it to handle renames is a little harder.\n\nIt might also be good to move this up into the loop above.\nIf you just rewrote the import from old to new, then\nthat's the best time to do the rename.  Could look\nat the final element (path.Split) of the paths involved\ninstead of a separate table.",
			"disapproval": false,
			"date": "2011-11-03 22:38:14.702971",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nOn Nov 3, 2011, at 3:38 PM, rsc@golang.org wrote:\n> \n> Another way to write this would be to drop this loop\n> and look for n.(*ast.SelectorExpr) in the walk,\n> and then check isTopName(sel.X) && sel.X.(*ast.Ident).Name ==\n> rename.old.\n\nyou don't mean isTopName(sel.X) but I'm not sure what you do mean.\n\n-rob\n\n\n",
			"disapproval": false,
			"date": "2011-11-04 00:13:49.963427",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Thu, Nov 3, 2011 at 20:13, Rob 'Commander' Pike <r@google.com> wrote:\n> Another way to write this would be to drop this loop\n> and look for n.(*ast.SelectorExpr) in the walk,\n> and then check isTopName(sel.X) && sel.X.(*ast.Ident).Name ==\n> rename.old.\n>\n> you don't mean isTopName(sel.X) but I'm not sure what you do mean.\n\nsorry, looks like i meant isTopName(sel.X, rename.old)\n",
			"disapproval": false,
			"date": "2011-11-04 00:17:35.375861",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nOn Nov 3, 2011, at 5:17 PM, Russ Cox wrote:\n\n> On Thu, Nov 3, 2011 at 20:13, Rob 'Commander' Pike <r@google.com> wrote:\n>> Another way to write this would be to drop this loop\n>> and look for n.(*ast.SelectorExpr) in the walk,\n>> and then check isTopName(sel.X) && sel.X.(*ast.Ident).Name ==\n>> rename.old.\n>> \n>> you don't mean isTopName(sel.X) but I'm not sure what you do mean.\n> \n> sorry, looks like i meant isTopName(sel.X, rename.old)\n\nright, but that's mostly the same as the rest of that line. see my CL.\n\n",
			"disapproval": false,
			"date": "2011-11-04 00:20:00.251386",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, r@google.com, dsymonds@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-04 20:18:51.568930",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5316078/diff/18001/src/cmd/gofix/go1rename.go\nFile src/cmd/gofix/go1rename.go (right):\n\nhttp://codereview.appspot.com/5316078/diff/18001/src/cmd/gofix/go1rename.go#newcode80\nsrc/cmd/gofix/go1rename.go:80: fixed = true\nfixed is already true",
			"disapproval": false,
			"date": "2011-11-04 00:23:02.875593",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "sure\n\n",
			"disapproval": false,
			"date": "2011-11-04 00:31:50.569009",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Now called go1pkgrename, and asn1 is on the list - missed it last time.\nWith this version I've built a working renamed tree.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-11-04 20:19:44.118304",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"rsc@golang.org",
				"r@google.com",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a0b71f0eb12f ***\n\ngofix: add go1pkgrename\nThis will do the package import renamings for Go 1.\n\nR=rsc, r, dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/5316078",
			"disapproval": false,
			"date": "2011-11-08 23:34:29.794492",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5316078: gofix: add go1pkgrename",
	"created": "2011-11-03 22:20:50.508576",
	"patchsets": [
		1,
		3001,
		6001,
		8001,
		14002,
		18001,
		13002,
		22001,
		25001,
		26001,
		28001,
		32001
	],
	"modified": "2011-11-08 23:34:31.753698",
	"closed": true,
	"issue": 5316078
}