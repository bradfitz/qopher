{
	"description": "graphics: gofix for recent error and package renames.",
	"cc": [
		"crawshaw@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"crawshaw@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello crawshaw@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/graphics-go/",
			"disapproval": false,
			"date": "2011-11-17 12:39:26.784825",
			"approval": false
		},
		{
			"sender": "crawshaw@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nOn Thu, Nov 17, 2011 at 4:39 AM,  <nigeltao@golang.org> wrote:\n> Reviewers: crawshaw1,\n>\n> Message:\n> Hello crawshaw@google.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://code.google.com/p/graphics-go/\n>\n>\n> Description:\n> graphics: gofix for recent error and package renames.\n>\n> Please review this at http://codereview.appspot.com/5407041/\n>\n> Affected files:\n> \u00a0M graphics/affine.go\n> \u00a0M graphics/blur.go\n> \u00a0M graphics/convolve.go\n> \u00a0M graphics/detect/opencv_parser.go\n> \u00a0M graphics/rotate.go\n> \u00a0M graphics/scale.go\n> \u00a0M graphics/shared_test.go\n>\n>\n> Index: graphics/affine.go\n> ===================================================================\n> --- a/graphics/affine.go\n> +++ b/graphics/affine.go\n> @@ -5,10 +5,10 @@\n> \u00a0package graphics\n>\n> \u00a0import (\n> + \u00a0 \u00a0 \u00a0 \"errors\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image/draw\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"math\"\n> - \u00a0 \u00a0 \u00a0 \"os\"\n> \u00a0)\n>\n> \u00a0// I is the identity Affine transform matrix.\n> @@ -38,12 +38,12 @@\n> \u00a0}\n>\n> \u00a0// Transform applies the affine transform to src and produces dst.\n> -func (a Affine) Transform(dst draw.Image, src image.Image) os.Error {\n> +func (a Affine) Transform(dst draw.Image, src image.Image) error {\n> \u00a0 \u00a0 \u00a0 \u00a0if dst == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(\"graphics: dst is nil\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"graphics: dst is nil\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0if src == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(\"graphics: src is nil\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"graphics: src is nil\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> \u00a0 \u00a0 \u00a0 \u00a0srcb := src.Bounds()\n> @@ -96,12 +96,12 @@\n> \u00a0// TransformCenter applies the affine transform to src and produces dst.\n> \u00a0// Equivalent to\n> \u00a0// \u00a0 a.CenterFit(dst, src).Transform(dst, src).\n> -func (a Affine) TransformCenter(dst draw.Image, src image.Image) os.Error {\n> +func (a Affine) TransformCenter(dst draw.Image, src image.Image) error {\n> \u00a0 \u00a0 \u00a0 \u00a0if dst == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(\"graphics: dst is nil\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"graphics: dst is nil\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0if src == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(\"graphics: src is nil\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"graphics: src is nil\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> \u00a0 \u00a0 \u00a0 \u00a0return a.CenterFit(dst.Bounds(), src.Bounds()).Transform(dst, src)\n> Index: graphics/blur.go\n> ===================================================================\n> --- a/graphics/blur.go\n> +++ b/graphics/blur.go\n> @@ -5,10 +5,10 @@\n> \u00a0package graphics\n>\n> \u00a0import (\n> + \u00a0 \u00a0 \u00a0 \"errors\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image/draw\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"math\"\n> - \u00a0 \u00a0 \u00a0 \"os\"\n> \u00a0)\n>\n> \u00a0// DefaultStdDev is the default blurring parameter.\n> @@ -23,12 +23,12 @@\n> \u00a0}\n>\n> \u00a0// Blur produces a blurred version of the image, using a Gaussian blur.\n> -func Blur(dst draw.Image, src image.Image, opt *BlurOptions) os.Error {\n> +func Blur(dst draw.Image, src image.Image, opt *BlurOptions) error {\n> \u00a0 \u00a0 \u00a0 \u00a0if dst == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(\"graphics: dst is nil\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"graphics: dst is nil\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0if src == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(\"graphics: src is nil\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"graphics: src is nil\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> \u00a0 \u00a0 \u00a0 \u00a0sd := DefaultStdDev\n> Index: graphics/convolve.go\n> ===================================================================\n> --- a/graphics/convolve.go\n> +++ b/graphics/convolve.go\n> @@ -5,11 +5,11 @@\n> \u00a0package graphics\n>\n> \u00a0import (\n> + \u00a0 \u00a0 \u00a0 \"errors\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"fmt\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image/draw\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"math\"\n> - \u00a0 \u00a0 \u00a0 \"os\"\n> \u00a0)\n>\n> \u00a0// clamp clamps x to the range [x0, x1].\n> @@ -57,26 +57,26 @@\n>\n> \u00a0func (k fullKernel) Weights() []float64 { return k }\n>\n> -func kernelSize(w []float64) (size int, err os.Error) {\n> +func kernelSize(w []float64) (size int, err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0size = int(math.Sqrt(float64(len(w))))\n> \u00a0 \u00a0 \u00a0 \u00a0if size*size != len(w) {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return 0, os.NewError(\"graphics: kernel is not square\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return 0, errors.New(\"graphics: kernel is not square\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0if size%2 != 1 {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return 0, os.NewError(\"graphics: kernel size is not odd\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return 0, errors.New(\"graphics: kernel size is not odd\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0return size, nil\n> \u00a0}\n>\n> \u00a0// NewKernel returns a square convolution kernel.\n> -func NewKernel(w []float64) (Kernel, os.Error) {\n> +func NewKernel(w []float64) (Kernel, error) {\n> \u00a0 \u00a0 \u00a0 \u00a0if _, err := kernelSize(w); err != nil {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return nil, err\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0return fullKernel(w), nil\n> \u00a0}\n>\n> -func convolveRGBASep(dst *image.RGBA, src image.Image, k *SeparableKernel)\n> os.Error {\n> +func convolveRGBASep(dst *image.RGBA, src image.Image, k *SeparableKernel)\n> error {\n> \u00a0 \u00a0 \u00a0 \u00a0if len(k.X) != len(k.Y) {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return fmt.Errorf(\"graphics: kernel not square (x %d, y %d)\",\n> len(k.X), len(k.Y))\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> @@ -193,7 +193,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0return nil\n> \u00a0}\n>\n> -func convolveRGBA(dst *image.RGBA, src image.Image, k Kernel) os.Error {\n> +func convolveRGBA(dst *image.RGBA, src image.Image, k Kernel) error {\n> \u00a0 \u00a0 \u00a0 \u00a0b := dst.Bounds()\n> \u00a0 \u00a0 \u00a0 \u00a0bs := src.Bounds()\n> \u00a0 \u00a0 \u00a0 \u00a0w := k.Weights()\n> @@ -245,7 +245,7 @@\n> \u00a0}\n>\n> \u00a0// Convolve produces dst by applying the convolution kernel k to src.\n> -func Convolve(dst draw.Image, src image.Image, k Kernel) (err os.Error) {\n> +func Convolve(dst draw.Image, src image.Image, k Kernel) (err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0if dst == nil || src == nil || k == nil {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return nil\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> Index: graphics/detect/opencv_parser.go\n> ===================================================================\n> --- a/graphics/detect/opencv_parser.go\n> +++ b/graphics/detect/opencv_parser.go\n> @@ -6,14 +6,14 @@\n>\n> \u00a0import (\n> \u00a0 \u00a0 \u00a0 \u00a0\"bytes\"\n> + \u00a0 \u00a0 \u00a0 \"encoding/xml\"\n> + \u00a0 \u00a0 \u00a0 \"errors\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"fmt\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"io\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"io/ioutil\"\n> - \u00a0 \u00a0 \u00a0 \"os\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"strconv\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"strings\"\n> - \u00a0 \u00a0 \u00a0 \"xml\"\n> \u00a0)\n>\n> \u00a0type xmlFeature struct {\n> @@ -40,7 +40,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0}\n>\n> -func buildFeature(r string) (f Feature, err os.Error) {\n> +func buildFeature(r string) (f Feature, err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0var x, y, w, h int\n> \u00a0 \u00a0 \u00a0 \u00a0var weight float64\n> \u00a0 \u00a0 \u00a0 \u00a0_, err = fmt.Sscanf(r, \"%d %d %d %d %f\", &x, &y, &w, &h, &weight)\n> @@ -52,7 +52,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0return\n> \u00a0}\n>\n> -func buildCascade(s *opencv_storage) (c *Cascade, name string, err\n> os.Error) {\n> +func buildCascade(s *opencv_storage) (c *Cascade, name string, err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0if s.Any.Type_id != \"opencv-haar-classifier\" {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0err = fmt.Errorf(\"got %s want opencv-haar-classifier\",\n> s.Any.Type_id)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return\n> @@ -79,7 +79,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0for _, tree := range stage.Trees {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if tree.Tilted != 0 {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 err = os.NewError(\"Cascade does not support\n> tilted features\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 err = errors.New(\"Cascade does not support\n> tilted features\")\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> @@ -107,7 +107,7 @@\n> \u00a0}\n>\n> \u00a0// ParseOpenCV produces a detection Cascade from an OpenCV XML file.\n> -func ParseOpenCV(r io.Reader) (cascade *Cascade, name string, err os.Error)\n> {\n> +func ParseOpenCV(r io.Reader) (cascade *Cascade, name string, err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0// BUG(crawshaw): tag-based parsing doesn't seem to work with <_>\n> \u00a0 \u00a0 \u00a0 \u00a0buf, err := ioutil.ReadAll(r)\n> \u00a0 \u00a0 \u00a0 \u00a0if err != nil {\n> Index: graphics/rotate.go\n> ===================================================================\n> --- a/graphics/rotate.go\n> +++ b/graphics/rotate.go\n> @@ -5,9 +5,9 @@\n> \u00a0package graphics\n>\n> \u00a0import (\n> + \u00a0 \u00a0 \u00a0 \"errors\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image/draw\"\n> - \u00a0 \u00a0 \u00a0 \"os\"\n> \u00a0)\n>\n> \u00a0// RotateOptions are the rotation parameters.\n> @@ -17,12 +17,12 @@\n> \u00a0}\n>\n> \u00a0// Rotate produces a rotated version of src, drawn onto dst.\n> -func Rotate(dst draw.Image, src image.Image, opt *RotateOptions) os.Error {\n> +func Rotate(dst draw.Image, src image.Image, opt *RotateOptions) error {\n> \u00a0 \u00a0 \u00a0 \u00a0if dst == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(\"graphics: dst is nil\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"graphics: dst is nil\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0if src == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(\"graphics: src is nil\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"graphics: src is nil\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> \u00a0 \u00a0 \u00a0 \u00a0angle := 0.0\n> Index: graphics/scale.go\n> ===================================================================\n> --- a/graphics/scale.go\n> +++ b/graphics/scale.go\n> @@ -5,18 +5,18 @@\n> \u00a0package graphics\n>\n> \u00a0import (\n> + \u00a0 \u00a0 \u00a0 \"errors\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image/draw\"\n> - \u00a0 \u00a0 \u00a0 \"os\"\n> \u00a0)\n>\n> \u00a0// Scale produces a scaled version of the image using bilinear\n> interpolation.\n> -func Scale(dst draw.Image, src image.Image) os.Error {\n> +func Scale(dst draw.Image, src image.Image) error {\n> \u00a0 \u00a0 \u00a0 \u00a0if dst == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(\"graphics: dst is nil\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"graphics: dst is nil\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0if src == nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(\"graphics: src is nil\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"graphics: src is nil\")\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> \u00a0 \u00a0 \u00a0 \u00a0b := dst.Bounds()\n> Index: graphics/shared_test.go\n> ===================================================================\n> --- a/graphics/shared_test.go\n> +++ b/graphics/shared_test.go\n> @@ -6,6 +6,7 @@\n>\n> \u00a0import (\n> \u00a0 \u00a0 \u00a0 \u00a0\"bytes\"\n> + \u00a0 \u00a0 \u00a0 \"errors\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"fmt\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"image/color\"\n> @@ -69,7 +70,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0return true\n> \u00a0}\n>\n> -func loadImage(path string) (img image.Image, err os.Error) {\n> +func loadImage(path string) (img image.Image, err error) {\n> \u00a0 \u00a0 \u00a0 \u00a0file, err := os.Open(path)\n> \u00a0 \u00a0 \u00a0 \u00a0if err != nil {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return\n> @@ -97,11 +98,11 @@\n> \u00a0 \u00a0 \u00a0 \u00a0return r <= tol && g <= tol && b <= tol && a <= tol\n> \u00a0}\n>\n> -func imageWithinTolerance(m0, m1 image.Image, tol int) os.Error {\n> +func imageWithinTolerance(m0, m1 image.Image, tol int) error {\n> \u00a0 \u00a0 \u00a0 \u00a0b0 := m0.Bounds()\n> \u00a0 \u00a0 \u00a0 \u00a0b1 := m1.Bounds()\n> \u00a0 \u00a0 \u00a0 \u00a0if !b0.Eq(b1) {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(fmt.Sprintf(\"got bounds %v want %v\", b0,\n> b1))\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(fmt.Sprintf(\"got bounds %v want %v\", b0,\n> b1))\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n> \u00a0 \u00a0 \u00a0 \u00a0for y := b0.Min.Y; y < b0.Max.Y; y++ {\n> @@ -110,7 +111,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0c1 := m1.At(x, y)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if !withinTolerance(c0, c1, tol) {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0e := fmt.Sprintf(\"got %v want %v at (%d,\n> %d)\", c0, c1, x, y)\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return os.NewError(e)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(e)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0}\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-11-17 15:11:25.609941",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"crawshaw@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 9a6eb915f43d ***\n\ngraphics: gofix for recent error and package renames.\n\nR=crawshaw\nCC=golang-dev\nhttp://codereview.appspot.com/5407041",
			"disapproval": false,
			"date": "2011-11-20 10:58:30.650154",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 5407041: graphics: gofix for recent error and package renames.",
	"created": "2011-11-17 12:38:57.582134",
	"patchsets": [
		1,
		1002,
		4001,
		5008
	],
	"modified": "2011-11-20 10:58:32.611648",
	"closed": true,
	"issue": 5407041
}