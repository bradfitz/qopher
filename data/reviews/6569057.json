{
	"description": "runtime: store types of allocated objects",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-26 14:35:55.184720",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "looks good. just a few tiny things\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/iface.c\nFile src/pkg/runtime/iface.c (right):\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/iface.c#newcode718\nsrc/pkg/runtime/iface.c:718: if(n == 0) {\nDo you want to move this down a few lines and use if(size == 0)? That will handle the case of 0-length array elements.\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/mgc0.go\nFile src/pkg/runtime/mgc0.go (right):\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/mgc0.go#newcode10\nsrc/pkg/runtime/mgc0.go:10: *ret = a\n*ret = (*m)(nil)\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/proc.c\nFile src/pkg/runtime/proc.c (right):\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/proc.c#newcode831\nsrc/pkg/runtime/proc.c:831: static Type *mtype;  // The Go type *M\nThe Go type M (no star)\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/slice.c\nFile src/pkg/runtime/slice.c (right):\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/slice.c#newcode52\nsrc/pkg/runtime/slice.c:52: if(cap == 0)\nsize == 0 ?",
			"disapproval": false,
			"date": "2012-10-06 22:08:36.037090",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-12 16:00:32.809740",
			"approval": false
		},
		{
			"sender": "0xE2.0x9A.0x9B@gmail.com",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/iface.c\nFile src/pkg/runtime/iface.c (right):\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/iface.c#newcode718\nsrc/pkg/runtime/iface.c:718: if(n == 0) {\nOn 2012/10/06 22:08:36, rsc wrote:\n> Do you want to move this down a few lines and use if(size == 0)? That will\n> handle the case of 0-length array elements.\n\nDone.\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/mgc0.go\nFile src/pkg/runtime/mgc0.go (right):\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/mgc0.go#newcode10\nsrc/pkg/runtime/mgc0.go:10: *ret = a\nOn 2012/10/06 22:08:36, rsc wrote:\n> *ret = (*m)(nil)\n\nDone.\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/proc.c\nFile src/pkg/runtime/proc.c (right):\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/proc.c#newcode831\nsrc/pkg/runtime/proc.c:831: static Type *mtype;  // The Go type *M\nOn 2012/10/06 22:08:36, rsc wrote:\n> The Go type M (no star)\n\nDone.\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/slice.c\nFile src/pkg/runtime/slice.c (right):\n\nhttps://codereview.appspot.com/6569057/diff/1/src/pkg/runtime/slice.c#newcode52\nsrc/pkg/runtime/slice.c:52: if(cap == 0)\nOn 2012/10/06 22:08:36, rsc wrote:\n> size == 0 ?\n\nDone.",
			"disapproval": false,
			"date": "2012-10-12 16:00:40.405290",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-10-21 21:33:46.471140",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"0xE2.0x9A.0x9B@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=731e3ce78fcb ***\n\nruntime: store types of allocated objects\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6569057\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-10-21 21:41:52.812110",
			"approval": false
		}
	],
	"owner_email": "0xE2.0x9A.0x9B@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "atom",
	"subject": "code review 6569057: runtime: store types of allocated objects",
	"created": "2012-09-26 14:35:51.386540",
	"patchsets": [
		1,
		7001
	],
	"modified": "2012-10-23 06:53:38.964690",
	"closed": true,
	"issue": 6569057
}