{
	"description": "exp/locale/collate: Added skeleton for the higher-level types to provide\ncontext for change lists of lower-level types. The public APIs are defined\nin builder.go and collate.go. Type table is the glue between the lower and\nhigher level code and might be a good starting point for understanding the\ncollation code.",
	"cc": [
		"r@google.com",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-04-17 07:45:36.246967",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/build/table.go\nFile src/pkg/exp/locale/collate/build/table.go (right):\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/build/table.go#newcode13\nsrc/pkg/exp/locale/collate/build/table.go:13: // table is an intermittend structure that roughly resembles the table in collate.\nintermittend is not a word.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/build/table.go#newcode53\nsrc/pkg/exp/locale/collate/build/table.go:53: // and the size of the resulting table size.\nsee comment in other CL about how to rewrite this.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/build/table.go#newcode101\nsrc/pkg/exp/locale/collate/build/table.go:101: p(\"\\n// Block %d, offset 0x%x\\n\", i/64, i)\nagain we want leading tabs on inner elements\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go\nFile src/pkg/exp/locale/collate/collate.go (right):\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode5\nsrc/pkg/exp/locale/collate/collate.go:5: // package collate contains types for comparing and sorting Unicode strings\ns/p/P/\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode7\nsrc/pkg/exp/locale/collate/collate.go:7: // interface to collation. Users should typically this package instead.\ns/this/that/ :)\ns/typically/& use/\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode14\nsrc/pkg/exp/locale/collate/collate.go:14: // Level identifies the collation comparisson level.\ns/ss/s/\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode18\nsrc/pkg/exp/locale/collate/collate.go:18: // The quatenary level is mainly induced from the other levels by the\ns/quatenary/quaternary/\n\n\"induced\"?\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode60\nsrc/pkg/exp/locale/collate/collate.go:60: // Strength sets the maximum level to use in comparisson.\ns/ss/s/ check for other occurrences; that's two so far.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode90\nsrc/pkg/exp/locale/collate/collate.go:90: // strength of r to be variable and thus effected by alternate handling.\ns/effected/affected/\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode100\nsrc/pkg/exp/locale/collate/collate.go:100: // unnecessary memory allocations.\ncan you make the zero value ready for use?\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode119\nsrc/pkg/exp/locale/collate/collate.go:119: // Reset clears the buffers and prepares them for reuse.\ns/buffers/buffer/\ns/them/it/\n\nagain, it would be nice if the zero value worked.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode126\nsrc/pkg/exp/locale/collate/collate.go:126: // The result will be 0 if a==b, -1 if a < b, and +1 if a > b.\nshould mark these TODO\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/export_test.go\nFile src/pkg/exp/locale/collate/export_test.go (right):\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/export_test.go#newcode5\nsrc/pkg/exp/locale/collate/export_test.go:5: package collate\nwhy is this file necessary?\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/table.go\nFile src/pkg/exp/locale/collate/table.go (right):\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/table.go#newcode28\nsrc/pkg/exp/locale/collate/table.go:28: // appended as well.  It returns a new slice that includes the appened\ns/appened/appended/\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/table.go#newcode49\nsrc/pkg/exp/locale/collate/table.go:49: }\nthat's a pretty loop\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/table_test.go\nFile src/pkg/exp/locale/collate/table_test.go (right):\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/table_test.go#newcode5\nsrc/pkg/exp/locale/collate/table_test.go:5: package collate_test\nwhy can't this be package collate?\nthen you wouldn't need export_test.go.",
			"disapproval": false,
			"date": "2012-04-24 04:29:48.296065",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/build/table.go\nFile src/pkg/exp/locale/collate/build/table.go (right):\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/build/table.go#newcode13\nsrc/pkg/exp/locale/collate/build/table.go:13: // table is an intermittend structure that roughly resembles the table in collate.\nOn 2012/04/24 04:29:48, r wrote:\n> intermittend is not a word.\n\nDone.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/build/table.go#newcode53\nsrc/pkg/exp/locale/collate/build/table.go:53: // and the size of the resulting table size.\nOn 2012/04/24 04:29:48, r wrote:\n> see comment in other CL about how to rewrite this.\n\nDone by removing the n and the trailing size.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/build/table.go#newcode101\nsrc/pkg/exp/locale/collate/build/table.go:101: p(\"\\n// Block %d, offset 0x%x\\n\", i/64, i)\nOn 2012/04/24 04:29:48, r wrote:\n> again we want leading tabs on inner elements\n\nDone.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go\nFile src/pkg/exp/locale/collate/collate.go (right):\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode5\nsrc/pkg/exp/locale/collate/collate.go:5: // package collate contains types for comparing and sorting Unicode strings\nOn 2012/04/24 04:29:48, r wrote:\n> s/p/P/\n\nDone.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode7\nsrc/pkg/exp/locale/collate/collate.go:7: // interface to collation. Users should typically this package instead.\nOn 2012/04/24 04:29:48, r wrote:\n> s/this/that/ :)\n:)\n\n> s/typically/& use/\nDone\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode14\nsrc/pkg/exp/locale/collate/collate.go:14: // Level identifies the collation comparisson level.\nOn 2012/04/24 04:29:48, r wrote:\n> s/ss/s/\n\nDone.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode18\nsrc/pkg/exp/locale/collate/collate.go:18: // The quatenary level is mainly induced from the other levels by the\nOn 2012/04/24 04:29:48, r wrote:\n> s/quatenary/quaternary/\n> \n> \"induced\"?\n\nDone.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode60\nsrc/pkg/exp/locale/collate/collate.go:60: // Strength sets the maximum level to use in comparisson.\nOn 2012/04/24 04:29:48, r wrote:\n> s/ss/s/ check for other occurrences; that's two so far.\n\nDone.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode100\nsrc/pkg/exp/locale/collate/collate.go:100: // unnecessary memory allocations.\nOn 2012/04/24 04:29:48, r wrote:\n> can you make the zero value ready for use?\nI used buf.init() to initialized the Buffer if need be. This is one if statement once for every API method to a Collator.  This allows the zero value to be used.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode119\nsrc/pkg/exp/locale/collate/collate.go:119: // Reset clears the buffers and prepares them for reuse.\nOn 2012/04/24 04:29:48, r wrote:\n> s/buffers/buffer/\n> s/them/it/\n> \n> again, it would be nice if the zero value worked.\nThe zero value works on first use.  However, keys that are generated are accumulated in the buffer.  This allows a single buffer to be used for all keys that need to be generated for a sort.  The aim here is to reduce memory allocations.\nMaybe it is clearer if I call it ResetKeys to make clear it only clears the key buffer (and is not needed otherwise).  I've done so as an experiment.  I can revert if needed.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/collate.go#newcode126\nsrc/pkg/exp/locale/collate/collate.go:126: // The result will be 0 if a==b, -1 if a < b, and +1 if a > b.\nOn 2012/04/24 04:29:48, r wrote:\n> should mark these TODO\n\nDone.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/export_test.go\nFile src/pkg/exp/locale/collate/export_test.go (right):\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/export_test.go#newcode5\nsrc/pkg/exp/locale/collate/export_test.go:5: package collate\nOn 2012/04/24 04:29:48, r wrote:\n> why is this file necessary?\nWas this a real question or a rhetorical request for a comment?\nAdded a comment.\nNote that collate_test.go cannot be in package collate. It imports collate/build for generating test tables.  Leaving it in package collate would cause an import cycle.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/table.go\nFile src/pkg/exp/locale/collate/table.go (right):\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/table.go#newcode28\nsrc/pkg/exp/locale/collate/table.go:28: // appended as well.  It returns a new slice that includes the appened\nOn 2012/04/24 04:29:48, r wrote:\n> s/appened/appended/\n\nDone.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/table.go#newcode49\nsrc/pkg/exp/locale/collate/table.go:49: }\nOn 2012/04/24 04:29:48, r wrote:\n> that's a pretty loop\nthanks :)  Now I look at it again, the p < len(nfkd) condition is more complicated than it needs to be.  I replaced it by len(nfkd) > 0.\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/table_test.go\nFile src/pkg/exp/locale/collate/table_test.go (right):\n\nhttp://codereview.appspot.com/5999053/diff/22008/src/pkg/exp/locale/collate/table_test.go#newcode5\nsrc/pkg/exp/locale/collate/table_test.go:5: package collate_test\nOn 2012/04/24 04:29:48, r wrote:\n> why can't this be package collate?\n> then you wouldn't need export_test.go.\nIt includes collate/build (to generate test tables), which includes collate.  So using package collate would lead to an import cycle.",
			"disapproval": false,
			"date": "2012-04-24 11:44:19.930120",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM as a checkpoint",
			"disapproval": false,
			"date": "2012-04-25 00:35:58.259670",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=df5212800021 ***\n\nexp/locale/collate: Added skeleton for the higher-level types to provide\ncontext for change lists of lower-level types. The public APIs are defined\nin builder.go and collate.go. Type table is the glue between the lower and\nhigher level code and might be a good starting point for understanding the\ncollation code.\n\nR=r, r\nCC=golang-dev\nhttp://codereview.appspot.com/5999053",
			"disapproval": false,
			"date": "2012-04-25 11:19:06.255903",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 5999053: exp/locale/collate: Added skeleton for the higher-level...",
	"created": "2012-04-11 14:50:50.411970",
	"patchsets": [
		1,
		2001,
		3004,
		6001,
		11002,
		14001,
		18001,
		21001,
		22008,
		31001,
		29002
	],
	"modified": "2012-04-25 11:19:07.859749",
	"closed": true,
	"issue": 5999053
}