{
	"description": "crypto/rsa: fix Verify for multi-prime keys.\n\nThe least common multiple is not totient/gcd.",
	"cc": [
		"remyoudompheng@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"agl@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5990045/diff/2001/src/pkg/crypto/rsa/rsa.go\nFile src/pkg/crypto/rsa/rsa.go (right):\n\nhttp://codereview.appspot.com/5990045/diff/2001/src/pkg/crypto/rsa/rsa.go#newcode78\nsrc/pkg/crypto/rsa/rsa.go:78: // Check that e and exponent(\u2124/n\u2124) are coprime, where exponent(\u2124/n\u2124)=lcm(p-1,q-1,r-1,...).\nwhy not check that de=1 mod (p-1) for each prime ?\n\n* It implies that e is coprime to each p-1, hence to the lcm(p-1...)\n* It implies that for all a coprime to n, a^de = 1 mod p, hence a^de =1 mod n.\n\nThe converse is also true. It would make the code mush easier to read, I think.",
			"disapproval": false,
			"date": "2012-04-05 20:31:37.706900",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 5, 2012 at 1:31 PM,  <remyoudompheng@gmail.com> wrote:\n> * It implies that e is coprime to each p-1, hence to the lcm(p-1...)\n\nAgreed.\n\n> * It implies that for all a coprime to n, a^de = 1 mod p, hence a^de =1\n> mod n.\n\nI'm afraid that I don't follow that.\n\nSince we know that de \u2261 1 mod p-1, de = x*(p-1)+1, for some x.\nTherefore a^de mod p = (a^(de-1) mod p) * a = (a^(x*(p-1)) mod p) * a\n= 1 * a = a.\n\nAnd so a^de \u2261 a mod n\n\nBut, with that tweak, it does make the code easier to read, thanks!\nSee if you think that my comment is sufficient.\n\n\nCheers\n\nAGL\n",
			"disapproval": false,
			"date": "2012-04-06 16:41:11.531240",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5990045/diff/4/src/pkg/crypto/rsa/rsa.go\nFile src/pkg/crypto/rsa/rsa.go (right):\n\nhttp://codereview.appspot.com/5990045/diff/4/src/pkg/crypto/rsa/rsa.go#newcode81\nsrc/pkg/crypto/rsa/rsa.go:81: // inverse. Therefore e is coprime to lcm(p-1,q-1,r-1,...) =\nOn 2012/04/06 19:53:26, remyoudompheng wrote:\n> I actaully think the story about the lcm is superfluous. It's enough to say that\n> a^de = a mod p for each p (hence mod n for a coprime to n).\n\nYou're right that this is superfluous in some sense, but the requirement that e be coprime to lcm(p-1,q-1,...) is explicitly called out in PKCS#1 so I think I'd like to leave this in here for completeness.\n\nhttp://codereview.appspot.com/5990045/diff/4/src/pkg/crypto/rsa/rsa.go#newcode89\nsrc/pkg/crypto/rsa/rsa.go:89: gcd.GCD(nil, nil, de, pminus1)\nOn 2012/04/06 19:53:26, remyoudompheng wrote:\n> checking that de is coprime to p-1 doesn't seem correct.\n\n(facepalm). Yep, I changed the argument and forgot to change the function. Done, thanks.",
			"disapproval": false,
			"date": "2012-04-06 21:48:20.394946",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"agl@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Nice to see the code getting simpler :)\n\nhttp://codereview.appspot.com/5990045/diff/4/src/pkg/crypto/rsa/rsa.go\nFile src/pkg/crypto/rsa/rsa.go (right):\n\nhttp://codereview.appspot.com/5990045/diff/4/src/pkg/crypto/rsa/rsa.go#newcode81\nsrc/pkg/crypto/rsa/rsa.go:81: // inverse. Therefore e is coprime to lcm(p-1,q-1,r-1,...) =\nI actaully think the story about the lcm is superfluous. It's enough to say that a^de = a mod p for each p (hence mod n for a coprime to n).\n\nhttp://codereview.appspot.com/5990045/diff/4/src/pkg/crypto/rsa/rsa.go#newcode89\nsrc/pkg/crypto/rsa/rsa.go:89: gcd.GCD(nil, nil, de, pminus1)\nare you sure you don't want gcd.Mod(de, pminus1) here (and call gcd differently)?\nchecking that de is coprime to p-1 doesn't seem correct.",
			"disapproval": false,
			"date": "2012-04-06 19:53:26.088717",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello remyoudompheng@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-11 16:57:06.962931",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b9cbd32246e3 ***\n\ncrypto/rsa: fix Verify for multi-prime keys.\n\nThe least common multiple is not totient/gcd.\n\nR=remyoudompheng\nCC=golang-dev\nhttp://codereview.appspot.com/5990045",
			"disapproval": false,
			"date": "2012-04-11 16:57:48.520880",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 5990045: crypto/rsa: fix Verify for multi-prime keys.",
	"created": "2012-04-05 17:35:52.911340",
	"patchsets": [
		1,
		2001,
		2002,
		4,
		1004,
		6001,
		10001
	],
	"modified": "2012-04-11 16:57:49.841734",
	"closed": true,
	"issue": 5990045
}