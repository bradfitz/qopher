{
	"description": "cmd/5l, cmd/ld: dynamic linking library support\n        Part 1 of CL 5601044 (cgo: Linux/ARM support)\n        Limitation: doesn't support thumb library yet.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM - testing on Pandaboard ARMv7",
			"disapproval": false,
			"date": "2012-04-09 08:09:41.771454",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-04-07 19:24:13.070792",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/09 08:09:41, dfc wrote:\n> LGTM - testing on Pandaboard ARMv7\n\nLooks good on ARMv5 as well",
			"disapproval": false,
			"date": "2012-04-09 10:31:36.293923",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI am still confused about TLS but I assume there will be other CLs about that.\n\nhttp://codereview.appspot.com/5991065/diff/5002/src/cmd/5l/asm.c\nFile src/cmd/5l/asm.c (right):\n\nhttp://codereview.appspot.com/5991065/diff/5002/src/cmd/5l/asm.c#newcode114\nsrc/cmd/5l/asm.c:114: static int32 braddoff(int32 a, int32 b)\nPlease put braddoff... on the next line.\n\nhttp://codereview.appspot.com/5991065/diff/5002/src/cmd/5l/asm.c#newcode116\nsrc/cmd/5l/asm.c:116: return (((uint32)a) & 0xff000000U) | 0x00ffffffU & (uint32)(a + b);\nPlease put ( ) around the second & expression.\nThey're not required but gcc will whine.\n\nhttp://codereview.appspot.com/5991065/diff/5002/src/cmd/5l/obj.c\nFile src/cmd/5l/obj.c (right):\n\nhttp://codereview.appspot.com/5991065/diff/5002/src/cmd/5l/obj.c#newcode216\nsrc/cmd/5l/obj.c:216: tlsoffset = -8; // hardcoded number, first 4-byte word for g, and then 4-byte word for m\nI don't understand this comment.\nThe ARM toolchain uses dedicated registers instead of TLS,\nso this shouldn't matter at all right now.\n\nPart of making cgo work with ARM is going to be making\nit not use dedicated registers, though.",
			"disapproval": false,
			"date": "2012-04-10 20:22:56.506977",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Apr 11, 2012 at 4:22 AM, <rsc@golang.org> wrote:\n\n> I am still confused about TLS but I assume there will be other CLs about\n> that.\n>\n> http://codereview.appspot.com/**5991065/diff/5002/src/cmd/5l/**\n> asm.c#newcode114<http://codereview.appspot.com/5991065/diff/5002/src/cmd/5l/asm.c#newcode114>\n> src/cmd/5l/asm.c:114: static int32 braddoff(int32 a, int32 b)\n> Please put braddoff... on the next line.\n>\nDone.\n\n> http://codereview.appspot.com/**5991065/diff/5002/src/cmd/5l/**\n> asm.c#newcode116<http://codereview.appspot.com/5991065/diff/5002/src/cmd/5l/asm.c#newcode116>\n> src/cmd/5l/asm.c:116: return (((uint32)a) & 0xff000000U) | 0x00ffffffU &\n> (uint32)(a + b);\n> Please put ( ) around the second & expression.\n> They're not required but gcc will whine.\n>\nDone.\n\nhttp://codereview.appspot.com/**5991065/diff/5002/src/cmd/5l/**\n> obj.c#newcode216<http://codereview.appspot.com/5991065/diff/5002/src/cmd/5l/obj.c#newcode216>\n> src/cmd/5l/obj.c:216: tlsoffset = -8; // hardcoded number, first 4-byte\n> word for g, and then 4-byte word for m\n> I don't understand this comment.\n> The ARM toolchain uses dedicated registers instead of TLS,\n> so this shouldn't matter at all right now.\n>\n> Part of making cgo work with ARM is going to be making\n> it not use dedicated registers, though.\n>\nIt still uses dedicated registers for Go; I need TLS to backup m & g after\nentering C world.\n386 and amd64 port always uses TLS, so there is no problem getting back m &\ng when\nreturned from C world.\n\nIt's used especially for runtime.sigtramp and signals triggered by the C\nworld.\n",
			"disapproval": false,
			"date": "2012-04-10 20:32:49.533463",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f91c7d6a195b ***\n\ncmd/5l, cmd/ld: dynamic linking library support\n        Part 1 of CL 5601044 (cgo: Linux/ARM support)\n        Limitation: doesn't support thumb library yet.\n\nR=golang-dev, dave, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5991065",
			"disapproval": false,
			"date": "2012-05-04 10:15:04.786460",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5991065: cmd/5l, cmd/ld: dynamic linking library support",
	"created": "2012-04-07 18:47:51.319613",
	"patchsets": [
		1,
		2001,
		3001,
		5001,
		1020,
		5002,
		11001,
		16001
	],
	"modified": "2012-05-04 10:15:13.051142",
	"closed": true,
	"issue": 5991065
}