{
	"description": "net/http: allow clients to disable keep-alive\n\nFixes issue 3540.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"gustavo@niemeyer.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 12, 2012 at 23:49, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> Read the spec to answer your TODO question, then fix the other spot where\n> you did ==.\n\nThe spec says 1#(token), which means separated by comma and optional\nwhitespace. That's not what Contains does.\n\nEither way, I dropped the TODO and replicated the bug. PTAL\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I'm not absolutely sure of anything.\n",
			"disapproval": false,
			"date": "2012-04-13 03:19:11.579259",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Read the spec to answer your TODO question, then fix the other spot where\nyou did ==.\nOn Apr 12, 2012 7:42 PM, <n13m3y3r@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> net/http: allow clients to disable keep-alive\n>\n> Please review this at http://codereview.appspot.com/**5996044/<http://codereview.appspot.com/5996044/>\n>\n> Affected files:\n>  M src/pkg/net/http/request.go\n>  M src/pkg/net/http/serve_test.go\n>  M src/pkg/net/http/server.go\n>\n>\n> Index: src/pkg/net/http/request.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/http/request.go\n> +++ b/src/pkg/net/http/request.go\n> @@ -739,5 +739,10 @@\n>        if r.ProtoMajor != 1 || r.ProtoMinor != 0 {\n>                return false\n>        }\n> +       // TODO(gustavo): Why Contains here?\n>        return strings.Contains(strings.**ToLower(r.Header.Get(\"**Connection\")),\n> \"keep-alive\")\n>  }\n> +\n> +func (r *Request) wantsClose() bool {\n> +       return strings.ToLower(r.Header.Get(\"**Connection\")) == \"close\"\n> +}\n> Index: src/pkg/net/http/serve_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/http/serve_test.**go\n> +++ b/src/pkg/net/http/serve_test.**go\n> @@ -415,6 +415,13 @@\n>        }))\n>  }\n>\n> +// TestClientCanClose verifies that clients can also force a connection\n> to close.\n> +func TestClientCanClose(t *testing.T) {\n> +       testTcpConnectionCloses(t, \"GET / HTTP/1.1\\r\\nConnection:\n> close\\r\\n\\r\\n\", HandlerFunc(func(w ResponseWriter, r *Request) {\n> +               // Nothing.\n> +       }))\n> +}\n> +\n>  // TestHandlersCanSetConnectionCl**ose verifies that handlers can force\n> a connection to close,\n>  // even for HTTP/1.1 requests.\n>  func TestHandlersCanSetConnectionCl**ose11(t *testing.T) {\n> Index: src/pkg/net/http/server.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/http/server.go\n> +++ b/src/pkg/net/http/server.go\n> @@ -303,8 +303,7 @@\n>                if !connectionHeaderSet {\n>                        w.header.Set(\"Connection\", \"keep-alive\")\n>                }\n> -       } else if !w.req.ProtoAtLeast(1, 1) {\n> -               // Client did not ask to keep connection alive.\n> +       } else if !w.req.ProtoAtLeast(1, 1) || w.req.wantsClose() {\n>                w.closeAfterReply = true\n>        }\n>\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-04-13 02:49:38.981877",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-13 02:42:41.020194",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 12, 2012 at 8:18 PM, Gustavo Niemeyer <gustavo@niemeyer.net>wrote:\n\n> On Thu, Apr 12, 2012 at 23:49, Brad Fitzpatrick <bradfitz@golang.org>\n> wrote:\n> > Read the spec to answer your TODO question, then fix the other spot where\n> > you did ==.\n>\n> The spec says 1#(token), which means separated by comma and optional\n> whitespace. That's not what Contains does.\n>\n> Either way, I dropped the TODO and replicated the bug. PTAL\n>\n\nYou could add a function:\n\nfunc containsToken(tokens, token string) bool {\n   // TODO: do this right.  Issue nnnn.  Close approximation for now:\n   return strings.Contains(tokens, token)\n}\n\nand we can fix them all later by fixing that one spot.\n",
			"disapproval": false,
			"date": "2012-04-13 04:46:24.946011",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org, gustavo@niemeyer.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-15 14:56:12.327988",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nSorry for the delay.\n\nhttp://codereview.appspot.com/5996044/diff/12001/src/pkg/net/http/serve_test.go\nFile src/pkg/net/http/serve_test.go (right):\n\nhttp://codereview.appspot.com/5996044/diff/12001/src/pkg/net/http/serve_test.go#newcode420\nsrc/pkg/net/http/serve_test.go:420: testTcpConnectionCloses(t, \"GET / HTTP/1.1\\r\\nConnection: close\\r\\n\\r\\n\", HandlerFunc(func(w ResponseWriter, r *Request) {\ninitials should all be the same case.  testTCPConnectionCloses.\n\nI know you're just copying this from below, so feel free to not fix it.  Or fix it if you'd like.",
			"disapproval": false,
			"date": "2012-04-18 01:50:17.386263",
			"approval": true
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gustavo@niemeyer.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=97d027b3aa68 ***\n\nnet/http: allow clients to disable keep-alive\n\nFixes issue 3540.\n\nR=golang-dev, bradfitz, gustavo\nCC=golang-dev\nhttp://codereview.appspot.com/5996044\n\nhttp://codereview.appspot.com/5996044/diff/12001/src/pkg/net/http/serve_test.go\nFile src/pkg/net/http/serve_test.go (right):\n\nhttp://codereview.appspot.com/5996044/diff/12001/src/pkg/net/http/serve_test.go#newcode420\nsrc/pkg/net/http/serve_test.go:420: testTcpConnectionCloses(t, \"GET / HTTP/1.1\\r\\nConnection: close\\r\\n\\r\\n\", HandlerFunc(func(w ResponseWriter, r *Request) {\nOn 2012/04/18 01:50:17, bradfitz wrote:\n> initials should all be the same case.  testTCPConnectionCloses.\n> \n> I know you're just copying this from below, so feel free to not fix it.  Or fix\n> it if you'd like.\n\nDone.",
			"disapproval": false,
			"date": "2012-04-24 01:00:29.736296",
			"approval": false
		}
	],
	"owner_email": "n13m3y3r@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "niemeyer",
	"subject": "code review 5996044: net/http: allow clients to disable keep-alive",
	"created": "2012-04-13 02:28:39.504288",
	"patchsets": [
		1,
		2001,
		5001,
		7001,
		10001,
		12001,
		18001
	],
	"modified": "2012-04-24 01:00:32.884540",
	"closed": true,
	"issue": 5996044
}