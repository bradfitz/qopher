{
	"description": "cmd/ld: don't generate DW_AT_type attr for unsafe.Pointer to match gcc behavior\ngcc generates only attr DW_AT_byte_size for DW_TAG_pointer_type of \"void *\",\nbut we used to also generate DW_AT_type pointing to imaginary unspecified\ntype \"void\", which confuses some gdb.\nThis change makes old Apple gdb 6.x (specifically, Apple version gdb-1515)\naccepts our binary without issue like this:\n(gdb) b 'main.main'\nDie: DW_TAG_unspecified_type (abbrev = 10, offset = 47079)\n    has children: FALSE\n    attributes:\n        DW_AT_name (DW_FORM_string) string: \"void\"\nDwarf Error: Cannot find type of die [in module /Users/minux/go/go2.hg/bin/go]\n\nSpecial thanks to Russ Cox for pointing out the problem in comment #6 of\nCL 7891044.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2013-03-20 21:39:29.978670",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-20 21:33:25.770830",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=2cc9547000b0 ***\n\ncmd/ld: don't generate DW_AT_type attr for unsafe.Pointer to match gcc behavior\ngcc generates only attr DW_AT_byte_size for DW_TAG_pointer_type of \"void *\",\nbut we used to also generate DW_AT_type pointing to imaginary unspecified\ntype \"void\", which confuses some gdb.\nThis change makes old Apple gdb 6.x (specifically, Apple version gdb-1515)\naccepts our binary without issue like this:\n(gdb) b 'main.main'\nDie: DW_TAG_unspecified_type (abbrev = 10, offset = 47079)\n    has children: FALSE\n    attributes:\n        DW_AT_name (DW_FORM_string) string: \"void\"\nDwarf Error: Cannot find type of die [in module /Users/minux/go/go2.hg/bin/go]\n\nSpecial thanks to Russ Cox for pointing out the problem in comment #6 of\nCL 7891044.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7744051",
			"disapproval": false,
			"date": "2013-03-21 19:58:48.364700",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 7744051: cmd/ld: don't generate DW_AT_type attr for unsafe.Point...",
	"created": "2013-03-20 21:28:44.571940",
	"patchsets": [
		1,
		1001,
		4001,
		13001,
		15002
	],
	"modified": "2013-03-21 19:58:53.110680",
	"closed": true,
	"issue": 7744051
}