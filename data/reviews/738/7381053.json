{
	"description": "runtime: fix racefuncenter argument corruption.\n\nRevision 6a88e1893941 corrupts the argument to\nracefuncenter by pushing the data block pointer\nto the stack.\n\nFixes issue 4885.",
	"cc": [
		"dvyukov@google.com",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"r@golang.org"
	],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7381053/diff/5001/src/pkg/runtime/race_amd64.s\nFile src/pkg/runtime/race_amd64.s (right):\n\nhttps://codereview.appspot.com/7381053/diff/5001/src/pkg/runtime/race_amd64.s#newcode7\nsrc/pkg/runtime/race_amd64.s:7: TEXT\truntime\u00b7racefuncenter(SB),7,$0\nOn 2013/02/25 21:51:49, rsc wrote:\n> I think the pushes and pops are causing the unwinding problem here. Instead of\n> adding more, can you try changing the $0 to $8 and then make the body\n> \n> MOVQ DX saved+0(SP)\n> CALL runtime.racefuncenter1(SB)\n> MOVQ saved+0(SP), DX\n> RET\n> \n> Then I believe callers will be able to unwind past this call.\n\nThe issue is that racefuncenter1 needs its argument.\n\nAlso I noticed something weird, when I tried x+0(SP), it translates to 8(SP) instead of (SP), is it expected?",
			"disapproval": false,
			"date": "2013-02-26 06:07:08.112130",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dvyukov@google.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-02-23 16:44:28.239800",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7381053/diff/5001/src/pkg/runtime/race_amd64.s\nFile src/pkg/runtime/race_amd64.s (right):\n\nhttps://codereview.appspot.com/7381053/diff/5001/src/pkg/runtime/race_amd64.s#newcode7\nsrc/pkg/runtime/race_amd64.s:7: TEXT\truntime\u00b7racefuncenter(SB),7,$0\nI think the pushes and pops are causing the unwinding problem here. Instead of adding more, can you try changing the $0 to $8 and then make the body\n\nMOVQ DX saved+0(SP)\nCALL runtime.racefuncenter1(SB)\nMOVQ saved+0(SP), DX\nRET\n\nThen I believe callers will be able to unwind past this call.",
			"disapproval": false,
			"date": "2013-02-25 21:51:48.832490",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dvyukov@google.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-26 05:46:11.425480",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Feb 26, 2013 at 1:07 AM, <remyoudompheng@gmail.com> wrote:\r\n\r\n> The issue is that racefuncenter1 needs its argument.\r\n>\r\n\r\nOkay, then the body should look like:\r\n\r\nTEXT racefuncenter, 7, $16\r\nMOVQ DX, saved-8(SP)\r\nMOVQ pc+0(SP), DX\r\nMOVQ DX, arg-16(SP)\r\nCALL racefuncenter1\r\nMOVQ saved-8(SP), DX\r\nRET\r\n\r\n\r\nAlso I noticed something weird, when I tried x+0(SP), it translates to\r\n> 8(SP) instead of (SP), is it expected?\r\n>\r\n\r\nYes. The SP line is a virtual register with 0 at the top of the locals and\r\nnegative offsets growing down. That is, SP == %rsp+localsize (the 16 in\r\n$16, or the 0 in $0). I always forget that too.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-02-26 17:17:15.826580",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dvyukov@google.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-27 07:07:13.127970",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-02-27 16:39:00.062760",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=bf745ac63e19 ***\n\nruntime: fix racefuncenter argument corruption.\n\nRevision 6a88e1893941 corrupts the argument to\nracefuncenter by pushing the data block pointer\nto the stack.\n\nFixes issue 4885.\n\nR=dvyukov, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7381053",
			"disapproval": false,
			"date": "2013-02-28 06:32:49.526170",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The race fun center sounds like a blast. Go karts and bumper cars galore!\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-02-28 06:37:30.412390",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 7381053: runtime: fix racefuncenter argument corruption.",
	"created": "2013-02-23 16:44:16.848730",
	"patchsets": [
		1,
		2001,
		5001,
		1002,
		13001,
		18001
	],
	"modified": "2013-02-28 06:37:30.482960",
	"closed": true,
	"issue": 7381053
}