{
	"description": "syscall: Ensure AF_UNIX addresses are NUL-terminated\n\nSince the code below this change expects a NUL-terminated\nstring, make it so.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "jeff.allen@gmail.com",
			"recipients": [
				"jeff.allen@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttp://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-20 12:56:30.689660",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "not lgtm\r\n\r\nSorry, but this is wrong. An \"abstract\" Unix domain socket is a Linuxism\r\nwhere the name is spelled like @foo but the actual fixed-size address\r\nstring buffer given to the kernel is '\\x00foo\\x00\\x00\\x00...'. This code is\r\nputting the @ down in place of the first \\x00 and then letting the rest of\r\nthe name get treated by finding the next \\x00. The CL would truncate every\r\nabstract @foo into just @.\r\n\r\nRuss\r\n",
			"disapproval": true,
			"date": "2013-02-20 13:30:07.009200",
			"approval": false
		}
	],
	"owner_email": "jeff.allen@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "jeff.allen",
	"subject": "code review 7383043: syscall: Ensure AF_UNIX addresses are NUL-terminated",
	"created": "2013-02-20 12:55:47.612830",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2013-02-27 08:34:52.461930",
	"closed": true,
	"issue": 7383043
}