{
	"description": "time: handle very large sleep durations\n\nFixes issue 4903.",
	"cc": [
		"golang-dev@googlegroups.com",
		"daniel.morsing@gmail.com",
		"dave@cheney.net",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-25 06:51:05.954970",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=a7ea286f5569 ***\n\ntime: handle very large sleep durations\n\nFixes issue 4903.\n\nR=golang-dev, daniel.morsing, dave, r\nCC=golang-dev\nhttps://codereview.appspot.com/7388056",
			"disapproval": false,
			"date": "2013-02-25 22:24:06.872810",
			"approval": false
		},
		{
			"sender": "daniel.morsing@gmail.com",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Code LGTM, but are there any instances of this that is not a bug in the calling code? Maybe a panic would be better.\n\nhttps://codereview.appspot.com/7388056/diff/2001/src/pkg/time/sleep.go\nFile src/pkg/time/sleep.go (right):\n\nhttps://codereview.appspot.com/7388056/diff/2001/src/pkg/time/sleep.go#newcode35\nsrc/pkg/time/sleep.go:35: t = 1<<63 - 1\nA comment here explaining that this is math.MaxInt64, but the math package cannot be pulled into time.",
			"disapproval": false,
			"date": "2013-02-25 08:04:55.377880",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 25 Feb 2013 19:04, <daniel.morsing@gmail.com> wrote:\r\n>\r\n> Code LGTM, but are there any instances of this that is not a bug in the\r\n> calling code? Maybe a panic would be better.\r\n\r\nI thought of that but I think that might break backward compatibility\r\npotentially. Certainly this at least does the right thing functionally, if\r\nnot theoretically.\r\n\r\n>\r\n> https://codereview.appspot.com/7388056/diff/2001/src/pkg/time/sleep.go\r\n> File src/pkg/time/sleep.go (right):\r\n>\r\n>\r\nhttps://codereview.appspot.com/7388056/diff/2001/src/pkg/time/sleep.go#newcode35\r\n> src/pkg/time/sleep.go:35: t = 1<<63 - 1\r\n> A comment here explaining that this is math.MaxInt64, but the math\r\n> package cannot be pulled into time.\r\n>\r\n> https://codereview.appspot.com/7388056/\r\n",
			"disapproval": false,
			"date": "2013-02-25 08:40:36.203050",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Fixes issue 4903.\r\n\r\nOn Mon, Feb 25, 2013 at 7:40 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n>\r\n> On 25 Feb 2013 19:04, <daniel.morsing@gmail.com> wrote:\r\n>>\r\n>> Code LGTM, but are there any instances of this that is not a bug in the\r\n>> calling code? Maybe a panic would be better.\r\n>\r\n> I thought of that but I think that might break backward compatibility\r\n> potentially. Certainly this at least does the right thing functionally, if\r\n> not theoretically.\r\n>\r\n>>\r\n>> https://codereview.appspot.com/7388056/diff/2001/src/pkg/time/sleep.go\r\n>> File src/pkg/time/sleep.go (right):\r\n>>\r\n>>\r\n>> https://codereview.appspot.com/7388056/diff/2001/src/pkg/time/sleep.go#newcode35\r\n>> src/pkg/time/sleep.go:35: t = 1<<63 - 1\r\n>> A comment here explaining that this is math.MaxInt64, but the math\r\n>> package cannot be pulled into time.\r\n>>\r\n>> https://codereview.appspot.com/7388056/\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-25 09:12:46.465110",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7388056/diff/2001/src/pkg/time/sleep.go\nFile src/pkg/time/sleep.go (right):\n\nhttps://codereview.appspot.com/7388056/diff/2001/src/pkg/time/sleep.go#newcode25\nsrc/pkg/time/sleep.go:25: // when returns the time in unix nanos plus d. If d is less than zero,\n\"the time\" doesn't mean much in \"the time package\".\nyou mean current time, right?\n\nwhen is a helper function for setting the 'when' field of a runtimeTimer.\nIt returns what the time will be, in nanoseconds, Duration d in the future.\nIf d is negative, it is ignored. If the returned ....",
			"disapproval": false,
			"date": "2013-02-25 17:40:38.039010",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, daniel.morsing@gmail.com, dave@cheney.net, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-25 21:34:47.199920",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"daniel.morsing@gmail.com",
				"dave@cheney.net",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7388056/diff/10001/src/pkg/time/sleep_test.go\nFile src/pkg/time/sleep_test.go (right):\n\nhttps://codereview.appspot.com/7388056/diff/10001/src/pkg/time/sleep_test.go#newcode297\nsrc/pkg/time/sleep_test.go:297: func TestBadSleeps(t *testing.T) {\n// Test that sleeping for an interval so large it overflows does not\n// result in a short sleep duration.\nTestOverflowSleep",
			"disapproval": false,
			"date": "2013-02-25 21:36:41.206540",
			"approval": true
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 7388056: time: handle very large sleep durations",
	"created": "2013-02-25 06:50:55.100040",
	"patchsets": [
		1,
		2001,
		10001,
		16001
	],
	"modified": "2013-02-25 22:24:09.791980",
	"closed": true,
	"issue": 7388056
}