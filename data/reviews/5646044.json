{
	"description": "6g,8g: make constant propagation inlining-friendly.\n\nThis changes makes constant propagation compare 'from' values using node\npointers rather than symbol names when checking to see whether a set\noperation is redundant. When a function is inlined multiple times in a\ncalling function its arguments will share symbol names even though the values\nare different. Prior to this fix the bug409 test would hit a case with 6g\nwhere an LEAQ instruction was incorrectly eliminated from the second inlined\nfunction call. 8g appears to have had the same bug, but the test did not fail\nthere.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks very much for finding this!\n\nI grepped through the rest of the optimizer and\nconfirmed that this is the only use of .sym in\nan inappropriate context.\n",
			"disapproval": false,
			"date": "2012-02-08 13:40:22.831521",
			"approval": true
		},
		{
			"sender": "jgennis@gmail.com",
			"recipients": [
				"jgennis@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-08 07:28:47.536659",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jgennis@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as c46561b27b39 ***\n\n6g,8g: make constant propagation inlining-friendly.\n\nThis changes makes constant propagation compare 'from' values using node\npointers rather than symbol names when checking to see whether a set\noperation is redundant. When a function is inlined multiple times in a\ncalling function its arguments will share symbol names even though the values\nare different. Prior to this fix the bug409 test would hit a case with 6g\nwhere an LEAQ instruction was incorrectly eliminated from the second inlined\nfunction call. 8g appears to have had the same bug, but the test did not fail\nthere.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5646044\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-02-08 15:25:18.827282",
			"approval": false
		}
	],
	"owner_email": "jgennis@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "jgennis",
	"subject": "code review 5646044: 6g,8g: make constant propagation inlining-friendly.",
	"created": "2012-02-07 09:22:37.280844",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2012-02-08 15:25:18.827282",
	"closed": false,
	"issue": 5646044
}