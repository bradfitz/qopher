{
	"description": "cmd/go: prevent packages from being cleaned more than once\n\nIf a package was listed as a dependency from multiple places, it\ncould have been cleaned repeatedly.",
	"cc": [
		"golang-dev@googlecode.com",
		"dave@cheney.net",
		"rsc@golang.org",
		"seed@mail.nanosouffle.net",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"lucio.dere@gmail.com",
				"golang-dev@googlecode.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlecode.com (cc: golang-dev@googlegroups.com, minux.ma@gmail.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-03-05 14:57:29.550700",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I feel inclined to ask for a test for this, or at least an explanation\r\nof what was broken before, and how it is fixed now.\r\n\r\nOn Tue, Mar 5, 2013 at 11:12 AM, minux <minux.ma@gmail.com> wrote:\r\n> LGTM. Will wait some time before submission.\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-05 16:16:32.617600",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lucio.dere@gmail.com",
				"golang-dev@googlecode.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7482043/diff/4001/src/cmd/go/clean.go\nFile src/cmd/go/clean.go (right):\n\nhttps://codereview.appspot.com/7482043/diff/4001/src/cmd/go/clean.go#newcode212\nsrc/cmd/go/clean.go:212: cleaned[p] = true\nPlease move this to right after the check.",
			"disapproval": false,
			"date": "2013-03-05 17:17:40.157560",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Will wait some time before submission.\r\n",
			"disapproval": false,
			"date": "2013-03-05 16:12:31.349970",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 6, 2013 at 12:16 AM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> I feel inclined to ask for a test for this, or at least an explanation\r\n> of what was broken before, and how it is fixed now.\r\n\r\nhttps://groups.google.com/forum/?fromgroups=#!topic/golang-dev/j9iaupWMeeQ\r\n\r\nLucio, please add some background info to the description, and for the\r\nfirst line,\r\nwrite what is fixed, not how it's fixed.\r\n",
			"disapproval": false,
			"date": "2013-03-05 16:37:47.202930",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 3/5/13, rsc@golang.org <rsc@golang.org> wrote:\r\n>\r\n> https://codereview.appspot.com/7482043/diff/4001/src/cmd/go/clean.go\r\n> File src/cmd/go/clean.go (right):\r\n>\r\n> https://codereview.appspot.com/7482043/diff/4001/src/cmd/go/clean.go#newcode212\r\n> src/cmd/go/clean.go:212: cleaned[p] = true\r\n> Please move this to right after the check.\r\n>\r\nRuss,\r\n\r\nI presume you mean after the very early test in the function where it\r\nchecks if the package has already been cleaned?  If so, there are\r\nchecks further along that may cause error returns,should we really\r\nhave set the package flag if these error returns are taken?\r\n\r\nIf you envisage a different place, please be more explicit.\r\n\r\nAs for requests for clarification, I could not find any assignments to\r\n\"cleaned[]\" in the cmd/go directory, in fact not even a mention\r\noutside of clean.go.  Given that it is tested, one assumes it ought to\r\nbe set somewhere, not simply initialised.\r\n\r\nWhat alerted me was the amount of time it took to run a recursive \"go\r\nclean -i\" even in a small directory.  When I tried it in a bigger\r\ncontext with debug output, it just looked totally wrong.  I let it run\r\na long time and then eventually crashed it.  That's when I inspected\r\nthe source for possible errors.\r\n\r\nMy original intention was to set the flag just before the end of the\r\nfunction, given that recursive imports are not permitted, but Minux\r\nsuggested the current location.\r\n\r\nThere may well be other places where we escape from the function\r\nwithout setting the flag when we ought to do so and Russ' suggestion\r\nwould deal with that, I suppose, but some care seems required; the\r\nauthor of the code would certainly know best.\r\n\r\nI've also been asked to change the description, which will start a new\r\nmail thread, so maybe I ought to abandon this CL and submit a new one?\r\n\r\nLucio.\r\n\r\n> https://codereview.appspot.com/7482043/\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-07 08:54:27.017830",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"lucio.dere@gmail.com",
				"golang-dev@googlecode.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"seed@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I believe he means to move it to just after\nthe check for the recursive flag:\n\n         if cleanR {\n                  for _, p1 := range p.imports {\n                          clean(p1)\n                  }\n         }\n         cleaned[p] = true\n\nOtherwise (if you look at func clean), the\nrecursive flag won't be honoured.",
			"disapproval": false,
			"date": "2013-03-08 16:41:29.160540",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sat, Mar 9, 2013 at 12:41 AM,  <seed@mail.nanosouffle.net> wrote:\r\n> I believe he means to move it to just after\r\n> the check for the recursive flag:\r\n>\r\n>          if cleanR {\r\n>                   for _, p1 := range p.imports {\r\n>                           clean(p1)\r\n>                   }\r\n>          }\r\n>          cleaned[p] = true\r\n>\r\n> Otherwise (if you look at func clean), the\r\n> recursive flag won't be honoured.\r\nare you sure?\r\nthe for loop ranges over p.imports, and p.imports shouldn't contain p.\r\n\r\ni believe russ means to put the assignment at line 109:\r\n105 func clean(p *Package) {\r\n106         if cleaned[p] {\r\n107                 return\r\n108         }\r\n109         cleaned[p] = true\r\n\r\ni think it's ok and will ease reasoning about the code.\r\n",
			"disapproval": false,
			"date": "2013-03-08 16:57:27.546560",
			"approval": false
		},
		{
			"sender": "seed@mail.nanosouffle.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ah, you're right, sorry, I didn't look carefully enough.\r\nAgreed with the new proposal.\r\n\r\n\r\nThanks.\r\n\r\nOn 8 March 2013 08:57, minux <minux.ma@gmail.com> wrote:\r\n> On Sat, Mar 9, 2013 at 12:41 AM,  <seed@mail.nanosouffle.net> wrote:\r\n>> I believe he means to move it to just after\r\n>> the check for the recursive flag:\r\n>>\r\n>>          if cleanR {\r\n>>                   for _, p1 := range p.imports {\r\n>>                           clean(p1)\r\n>>                   }\r\n>>          }\r\n>>          cleaned[p] = true\r\n>>\r\n>> Otherwise (if you look at func clean), the\r\n>> recursive flag won't be honoured.\r\n> are you sure?\r\n> the for loop ranges over p.imports, and p.imports shouldn't contain p.\r\n>\r\n> i believe russ means to put the assignment at line 109:\r\n> 105 func clean(p *Package) {\r\n> 106         if cleaned[p] {\r\n> 107                 return\r\n> 108         }\r\n> 109         cleaned[p] = true\r\n>\r\n> i think it's ok and will ease reasoning about the code.\r\n",
			"disapproval": false,
			"date": "2013-03-08 19:26:55.756670",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "There was a request for a test harness, but maybe I misunderstood\r\nbecause I fail to see how one would test this.\r\n\r\nFurther, the CL description is probably still inadequate.  Any suggestions?\r\n\r\nLucio.\r\n\r\nOn 3/8/13, Akshat Kumar <seed@mail.nanosouffle.net> wrote:\r\n> Ah, you're right, sorry, I didn't look carefully enough.\r\n> Agreed with the new proposal.\r\n>\r\n>\r\n> Thanks.\r\n>\r\n> On 8 March 2013 08:57, minux <minux.ma@gmail.com> wrote:\r\n>> On Sat, Mar 9, 2013 at 12:41 AM,  <seed@mail.nanosouffle.net> wrote:\r\n>>> I believe he means to move it to just after\r\n>>> the check for the recursive flag:\r\n>>>\r\n>>>          if cleanR {\r\n>>>                   for _, p1 := range p.imports {\r\n>>>                           clean(p1)\r\n>>>                   }\r\n>>>          }\r\n>>>          cleaned[p] = true\r\n>>>\r\n>>> Otherwise (if you look at func clean), the\r\n>>> recursive flag won't be honoured.\r\n>> are you sure?\r\n>> the for loop ranges over p.imports, and p.imports shouldn't contain p.\r\n>>\r\n>> i believe russ means to put the assignment at line 109:\r\n>> 105 func clean(p *Package) {\r\n>> 106         if cleaned[p] {\r\n>> 107                 return\r\n>> 108         }\r\n>> 109         cleaned[p] = true\r\n>>\r\n>> i think it's ok and will ease reasoning about the code.\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-09 05:05:46.006940",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"lucio.dere@gmail.com",
				"golang-dev@googlecode.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"seed@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I am not worried about the test but please update the CL with my suggested change.",
			"disapproval": false,
			"date": "2013-03-11 15:24:20.820000",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Drop the filename from the subject and don't discuss implementation.  Let's\r\ngo with just:\r\n\r\ncmd/go: prevent packages from being cleaned twice\r\n\r\nIf a package was listed as a dependency from multiple places, it\r\ncould have been cleaned twice.\r\n\r\n\r\n\r\nOn Sun, Mar 31, 2013 at 9:39 PM, Lucio De Re <lucio.dere@gmail.com> wrote:\r\n\r\n> I hope I understood what you're asking and that the new description\r\n> matches.\r\n>\r\n> Lucio.\r\n>\r\n> On 3/31/13, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> > Commit message should start with just:\r\n> >\r\n> > \"cmd/go: ......\"\r\n> >\r\n> > Where .... describes what it fixes, not how it fixes it.\r\n> >\r\n> > The commit message currently reads like:\r\n> >\r\n> > \"cmd/go/filename.go: assign a variable to a value so the variable is the\r\n> > value I updated it to\"\r\n> >\r\n> > But why would one care?\r\n> >\r\n> > Explain at a higher level.\r\n> >\r\n> >\r\n> > On Sun, Mar 31, 2013 at 1:02 PM, <lucio.dere@gmail.com> wrote:\r\n> >\r\n> >> Hello golang-dev@googlecode.com, dave@cheney.net, rsc@golang.org,\r\n> >> seed@mail.nanosouffle.net (cc: golang-dev@googlegroups.com,\r\n> >> minux.ma@gmail.com),\r\n> >>\r\n> >> Please take another look.\r\n> >>\r\n> >>\r\n> >> https://codereview.appspot.**com/7482043/<\r\n> https://codereview.appspot.com/7482043/>\r\n> >>\r\n> >> --\r\n> >>\r\n> >> ---You received this message because you are subscribed to the Google\r\n> >> Groups \"golang-dev\" group.\r\n> >> To unsubscribe from this group and stop receiving emails from it, send\r\n> an\r\n> >> email to\r\n> >> golang-dev+unsubscribe@**googlegroups.com<\r\n> golang-dev%2Bunsubscribe@googlegroups.com>\r\n> >> .\r\n> >> For more options, visit\r\n> >> https://groups.google.com/**groups/opt_out<\r\n> https://groups.google.com/groups/opt_out>\r\n> >> .\r\n> >>\r\n> >>\r\n> >>\r\n> >\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-01 15:49:51.070960",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"lucio.dere@gmail.com",
				"golang-dev@googlecode.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"seed@mail.nanosouffle.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlecode.com, dave@cheney.net, rsc@golang.org, seed@mail.nanosouffle.net (cc: golang-dev@googlegroups.com, minux.ma@gmail.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-31 20:02:17.676330",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Commit message should start with just:\r\n\r\n\"cmd/go: ......\"\r\n\r\nWhere .... describes what it fixes, not how it fixes it.\r\n\r\nThe commit message currently reads like:\r\n\r\n\"cmd/go/filename.go: assign a variable to a value so the variable is the\r\nvalue I updated it to\"\r\n\r\nBut why would one care?\r\n\r\nExplain at a higher level.\r\n\r\n\r\nOn Sun, Mar 31, 2013 at 1:02 PM, <lucio.dere@gmail.com> wrote:\r\n\r\n> Hello golang-dev@googlecode.com, dave@cheney.net, rsc@golang.org,\r\n> seed@mail.nanosouffle.net (cc: golang-dev@googlegroups.com,\r\n> minux.ma@gmail.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> https://codereview.appspot.**com/7482043/<https://codereview.appspot.com/7482043/>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-03-31 20:29:39.990600",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I hope I understood what you're asking and that the new description matches.\r\n\r\nLucio.\r\n\r\nOn 3/31/13, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> Commit message should start with just:\r\n>\r\n> \"cmd/go: ......\"\r\n>\r\n> Where .... describes what it fixes, not how it fixes it.\r\n>\r\n> The commit message currently reads like:\r\n>\r\n> \"cmd/go/filename.go: assign a variable to a value so the variable is the\r\n> value I updated it to\"\r\n>\r\n> But why would one care?\r\n>\r\n> Explain at a higher level.\r\n>\r\n>\r\n> On Sun, Mar 31, 2013 at 1:02 PM, <lucio.dere@gmail.com> wrote:\r\n>\r\n>> Hello golang-dev@googlecode.com, dave@cheney.net, rsc@golang.org,\r\n>> seed@mail.nanosouffle.net (cc: golang-dev@googlegroups.com,\r\n>> minux.ma@gmail.com),\r\n>>\r\n>> Please take another look.\r\n>>\r\n>>\r\n>> https://codereview.appspot.**com/7482043/<https://codereview.appspot.com/7482043/>\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to\r\n>> golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n>> .\r\n>> For more options, visit\r\n>> https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n>> .\r\n>>\r\n>>\r\n>>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-01 04:39:55.822730",
			"approval": false
		},
		{
			"sender": "lucio.dere@gmail.com",
			"recipients": [
				"lucio.dere@gmail.com",
				"golang-dev@googlecode.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"seed@mail.nanosouffle.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlecode.com, dave@cheney.net, rsc@golang.org, seed@mail.nanosouffle.net, bradfitz@golang.org (cc: golang-dev@googlegroups.com, minux.ma@gmail.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-04-01 16:34:26.921330",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"lucio.dere@gmail.com",
				"golang-dev@googlecode.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"seed@mail.nanosouffle.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-04-01 17:00:30.258930",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"lucio.dere@gmail.com",
				"golang-dev@googlecode.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"seed@mail.nanosouffle.net",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=fb78cf8fd5b5 ***\n\ncmd/go: prevent packages from being cleaned more than once\n\nIf a package was listed as a dependency from multiple places, it\ncould have been cleaned repeatedly.\n\nR=golang-dev, dave, rsc, seed, bradfitz\nCC=golang-dev, minux.ma\nhttps://codereview.appspot.com/7482043\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2013-04-01 17:01:20.243120",
			"approval": false
		}
	],
	"owner_email": "lucio.dere@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "lucio",
	"subject": "code review 7482043: cmd/go: prevent packages from being cleaned more than once",
	"created": "2013-03-05 14:56:27.053450",
	"patchsets": [
		1,
		2001,
		4001,
		16001,
		19001,
		25001
	],
	"modified": "2013-04-02 08:22:57.201960",
	"closed": true,
	"issue": 7482043
}