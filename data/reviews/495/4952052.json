{
	"description": "http: always include Content-Length header, even for 0\n\nfixes issue 2221",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-03 00:59:20.063992",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Tue, Sep 6, 2011 at 11:29 AM, <dgrijalva@ngmoco.com> wrote:\n\n> This looks fishy to me:\n> || t.ResponseToHEAD ||\n>\n> I think the current implementation is wrong.  HEAD requests forbid a\n> response body, so there should not be a content length.  There are no\n> tests in requestwrite_test around HEAD requests.\n>\n> Should I add a couple or is that better done in a separate patch?\n>\n\nFeel free to add more tests in this CL.\n\nI may not be able to look until tomorrow, though.\n",
			"disapproval": false,
			"date": "2011-09-06 21:08:51.457522",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-06 18:49:20.803343",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Just a few nits.\n\nAlso, CL description should look like:\n\nhttp: always include Content-Length header, even for 0\n\nFixes issue 2221\n\nhttp://codereview.appspot.com/4952052/diff/5001/src/pkg/http/transfer.go\nFile src/pkg/http/transfer.go (right):\n\nhttp://codereview.appspot.com/4952052/diff/5001/src/pkg/http/transfer.go#newcode21\nsrc/pkg/http/transfer.go:21: Method           string\ntransferWriter is used for both requests and responses but you only set it for Request below, making this field here misleading.\n\neither set it in both places or document here that it's set just for requests.  the former's probably better.\n\nhttp://codereview.appspot.com/4952052/diff/5001/src/pkg/http/transfer.go#newcode126\nsrc/pkg/http/transfer.go:126: } else if t.ContentLength > 0 || t.ResponseToHEAD || t.Method == \"POST\" || t.Method == \"PUT\" || (t.ContentLength == 0 && isIdentity(t.TransferEncoding)) {\nIf it didn't before, this has now crossed the promotion-to-method threshold.\n\nif t.shouldSendContentLength() {\n    ....\n} else if chunked(t.TransferEncoding) {\n   ....\n}\n\nmake the function start with:\n\n   if chunked(t.TransferEncoding) {\n      return false\n   }\n\nIt's redundant with the previous if, but at least the function will be correct by itself, without knowing its context.\n \nThen you could have a switch or a bunch of ifs and comments.\n\nAre POST and PUT the only methods expected to have a body?",
			"disapproval": false,
			"date": "2011-09-03 03:31:17.917623",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "This looks fishy to me:\n|| t.ResponseToHEAD ||\n\nI think the current implementation is wrong.  HEAD requests forbid a response body, so there should not be a content length.  There are no tests in requestwrite_test around HEAD requests.\n\nShould I add a couple or is that better done in a separate patch?\n\n-dave\n\nOn 2011/09/03 03:31:17, bradfitz wrote:\n> Just a few nits.\n> \n> Also, CL description should look like:\n> \n> http: always include Content-Length header, even for 0\n> \n> Fixes issue 2221\n> \n> http://codereview.appspot.com/4952052/diff/5001/src/pkg/http/transfer.go\n> File src/pkg/http/transfer.go (right):\n> \n> http://codereview.appspot.com/4952052/diff/5001/src/pkg/http/transfer.go#newcode21\n> src/pkg/http/transfer.go:21: Method           string\n> transferWriter is used for both requests and responses but you only set it for\n> Request below, making this field here misleading.\n> \n> either set it in both places or document here that it's set just for requests. \n> the former's probably better.\n> \n> http://codereview.appspot.com/4952052/diff/5001/src/pkg/http/transfer.go#newcode126\n> src/pkg/http/transfer.go:126: } else if t.ContentLength > 0 || t.ResponseToHEAD\n> || t.Method == \"POST\" || t.Method == \"PUT\" || (t.ContentLength == 0 &&\n> isIdentity(t.TransferEncoding)) {\n> If it didn't before, this has now crossed the promotion-to-method threshold.\n> \n> if t.shouldSendContentLength() {\n>     ....\n> } else if chunked(t.TransferEncoding) {\n>    ....\n> }\n> \n> make the function start with:\n> \n>    if chunked(t.TransferEncoding) {\n>       return false\n>    }\n> \n> It's redundant with the previous if, but at least the function will be correct\n> by itself, without knowing its context.\n>  \n> Then you could have a switch or a bunch of ifs and comments.\n> \n> Are POST and PUT the only methods expected to have a body?",
			"disapproval": false,
			"date": "2011-09-06 18:29:12.950166",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-14 21:41:24.889584",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I added a simple test for HEAD requests.  I think this patch is ready for another review volley.  Thanks\n\n-dave\n\nOn Sep 6, 2011, at 11:49 AM, dgrijalva@ngmoco.com wrote:\n\n> Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc:\n> golang-dev@googlegroups.com),\n> \n> Please take another look.\n> \n> \n> http://codereview.appspot.com/4952052/\n\n",
			"disapproval": false,
			"date": "2011-09-14 21:42:45.553621",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Your HEAD change isn't right.  (nor is it documented in the CL description)\n\nProof by Apache:\n\n$ telnet bradfitz.com 80\nTrying 207.7.148.198...\nConnected to bradfitz.com.\nEscape character is '^]'.\nHEAD /pics/brad-peru-cropped.jpg HTTP/1.1\nHost: bradfitz.com\n\nHTTP/1.0 200 OK\nDate: Wed, 14 Sep 2011 23:16:05 GMT\nServer: Apache\nLast-Modified: Mon, 13 Dec 2010 16:51:02 GMT\nETag: \"5005159-6384-4d064ef6\"\nAccept-Ranges: bytes\nContent-Length: 25476\nKeep-Alive: timeout=30, max=100\nConnection: keep-alive\nContent-Type: image/jpeg\n\n^]q\n\n\nOn Wed, Sep 14, 2011 at 2:42 PM, Dave Grijalva <dgrijalva@ngmoco.com> wrote:\n\n> I added a simple test for HEAD requests.  I think this patch is ready for\n> another review volley.  Thanks\n>\n> -dave\n>\n> On Sep 6, 2011, at 11:49 AM, dgrijalva@ngmoco.com wrote:\n>\n> Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc:\n> golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/4952052/\n>\n>\n>\n",
			"disapproval": false,
			"date": "2011-09-14 23:17:33.006476",
			"approval": false
		},
		{
			"sender": "dgrijalva@ngmoco.com",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-19 17:50:28.972106",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nOn Mon, Sep 19, 2011 at 10:50 AM, <dgrijalva@ngmoco.com> wrote:\n\n> Hello golang-dev@googlegroups.com, bradfitz@golang.org (cc:\n> golang-dev@googlegroups.com),\n>\n> Please take another look.\n>\n>\n> http://codereview.appspot.com/**4952052/<http://codereview.appspot.com/4952052/>\n>\n",
			"disapproval": false,
			"date": "2011-09-19 18:40:08.133368",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dgrijalva@ngmoco.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4d792b5bea35 ***\n\nhttp: always include Content-Length header, even for 0\n\nfixes issue 2221\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/4952052\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2011-09-19 18:41:15.191345",
			"approval": false
		}
	],
	"owner_email": "dgrijalva@ngmoco.com",
	"private": false,
	"base_url": "",
	"owner": "dgrijalva",
	"subject": "code review 4952052: http: always include Content-Length header, even for 0",
	"created": "2011-09-03 00:56:54.227668",
	"patchsets": [
		1,
		2001,
		5001,
		10001,
		12001,
		17001
	],
	"modified": "2011-09-19 18:41:15.191345",
	"closed": false,
	"issue": 4952052
}