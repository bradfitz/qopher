{
	"description": "sync/atomic: add Store functions",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-09-07 17:30:53.258917",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4950060/diff/3008/src/pkg/sync/atomic/asm_386.s\nFile src/pkg/sync/atomic/asm_386.s (right):\n\nhttp://codereview.appspot.com/4950060/diff/3008/src/pkg/sync/atomic/asm_386.s#newcode113\nsrc/pkg/sync/atomic/asm_386.s:113: XCHGL\tAX, 0(BP)\nWhy does this need to be XCHGL\nbut LoadUint32 is just a MOVL?",
			"disapproval": false,
			"date": "2011-09-02 20:42:34.907081",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Sat, Sep 3, 2011 at 12:42 AM, <rsc@golang.org> wrote:\n\n> http://codereview.appspot.com/**4950060/diff/3008/src/pkg/**\n> sync/atomic/asm_386.s#**newcode113<http://codereview.appspot.com/4950060/diff/3008/src/pkg/sync/atomic/asm_386.s#newcode113>\n> src/pkg/sync/atomic/asm_386.s:**113: XCHGL        AX, 0(BP)\n> Why does this need to be XCHGL\n> but LoadUint32 is just a MOVL?\n\n\n\nOn IA-32/Intel64 plain MOV acts as load-acquire and store-release. But it's\nnot enough to provide full sequential consistency. In particular, a MOV\nstore can sink below a subsequent MOV load. That is, the so called\nDekker/Peterson (http://en.wikipedia.org/wiki/Peterson's_algorithm) mutual\nexclusion algorithm:\n\nX = Y = 0\n\n// goroutine 1\nX = 1\nr1 = Y\n\n// goroutine 2\nY = 1\nr2 = X\n\nif implemented with plain MOVs can yield r1 == r2 == 0 (that is, fails to\nprovide mutual exclusion).\nIn order to provide sequential consistency, stores must be implemented\neither by means of a LOCKed instruction or by a MOV followed by MFENCE\n(alternatively, loads may be implemented either by means of a LOCKed\ninstruction or MOV preceded by MFENCE, however it's generally a bad idea).\n\nInitially I implemented stores by means of MOVs (due to copy-paste), after\nrealizing that and the fact that all tests are still passing, I've added\nTestStoreLoadSeqCst. You may try to replace XCHGs with MOVs and run it, on\nmy machine it fails on 2-10th iteration (which means that the store and the\nload are indeed reordered by a processor).\n",
			"disapproval": false,
			"date": "2011-09-02 21:42:25.975508",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-02 20:02:10.021056",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-09-02 20:05:51.356022",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=e1682be5162b ***\n\nsync/atomic: add Store functions\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/4950060",
			"disapproval": false,
			"date": "2011-09-07 17:51:00.534737",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 4950060: sync/atomic: add Store functions",
	"created": "2011-09-02 09:04:54.846935",
	"patchsets": [
		1,
		2001,
		5001,
		6001,
		8001,
		11001,
		12001,
		6017,
		3008,
		20001
	],
	"modified": "2011-09-07 17:51:03.956458",
	"closed": true,
	"issue": 4950060
}