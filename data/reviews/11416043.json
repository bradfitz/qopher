{
	"description": "go.tools/cmd/godoc: use go.talks playground package",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-17 05:10:21.960100",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\n\r\nOn Wed, Jul 17, 2013 at 3:10 PM, <adg@golang.org> wrote:\r\n\r\n> Reviewers: bradfitz,\r\n>\r\n> Message:\r\n> Hello bradfitz (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go.**tools <https://code.google.com/p/go.tools>\r\n>\r\n>\r\n> Description:\r\n> go.tools/cmd/godoc: use go.talks playground package\r\n>\r\n> Please review this at https://codereview.appspot.**com/11416043/<https://codereview.appspot.com/11416043/>\r\n>\r\n> Affected files:\r\n>   M cmd/godoc/appinit.go\r\n>   M cmd/godoc/main.go\r\n>   R cmd/godoc/play-appengine.go\r\n>   R cmd/godoc/play-local.go\r\n>   M cmd/godoc/play.go\r\n>\r\n>\r\n> Index: cmd/godoc/appinit.go\r\n> ==============================**==============================**=======\r\n> --- a/cmd/godoc/appinit.go\r\n> +++ b/cmd/godoc/appinit.go\r\n> @@ -52,7 +52,6 @@\r\n>         readTemplates()\r\n>         initHandlers()\r\n>         registerPublicHandlers(http.**DefaultServeMux)\r\n> -       registerPlaygroundHandlers(**http.DefaultServeMux)\r\n>\r\n>         // initialize default directory tree with corresponding timestamp.\r\n>         initFSTree()\r\n> Index: cmd/godoc/main.go\r\n> ==============================**==============================**=======\r\n> --- a/cmd/godoc/main.go\r\n> +++ b/cmd/godoc/main.go\r\n> @@ -287,7 +287,6 @@\r\n>                 }\r\n>\r\n>                 registerPublicHandlers(http.**DefaultServeMux)\r\n> -               registerPlaygroundHandlers(**http.DefaultServeMux)\r\n>\r\n>                 // Initialize default directory tree with corresponding\r\n> timestamp.\r\n>                 // (Do it in a goroutine so that launch is quick.)\r\n> Index: cmd/godoc/play-appengine.go\r\n> ==============================**==============================**=======\r\n> deleted file mode 100644\r\n> --- a/cmd/godoc/play-appengine.go\r\n> +++ /dev/null\r\n> @@ -1,35 +0,0 @@\r\n> -// Copyright 2012 The Go Authors.  All rights reserved.\r\n> -// Use of this source code is governed by a BSD-style\r\n> -// license that can be found in the LICENSE file.\r\n> -\r\n> -// App Engine godoc Playground functionality.\r\n> -\r\n> -// +build appengine\r\n> -\r\n> -package main\r\n> -\r\n> -import (\r\n> -       \"io\"\r\n> -       \"net/http\"\r\n> -\r\n> -       \"appengine\"\r\n> -       \"appengine/urlfetch\"\r\n> -)\r\n> -\r\n> -func bounceToPlayground(w http.ResponseWriter, req *http.Request) {\r\n> -       c := appengine.NewContext(req)\r\n> -       client := urlfetch.Client(c)\r\n> -       url := playgroundBaseURL + req.URL.Path\r\n> -       defer req.Body.Close()\r\n> -       resp, err := client.Post(url, req.Header.Get(\"Content-type\")**,\r\n> req.Body)\r\n> -       if err != nil {\r\n> -               http.Error(w, \"Internal Server Error\", 500)\r\n> -               c.Errorf(\"making POST request: %v\", err)\r\n> -               return\r\n> -       }\r\n> -       defer resp.Body.Close()\r\n> -       if _, err := io.Copy(w, resp.Body); err != nil {\r\n> -               http.Error(w, \"Internal Server Error\", 500)\r\n> -               c.Errorf(\"making POST request: %v\", err)\r\n> -       }\r\n> -}\r\n> Index: cmd/godoc/play-local.go\r\n> ==============================**==============================**=======\r\n> deleted file mode 100644\r\n> --- a/cmd/godoc/play-local.go\r\n> +++ /dev/null\r\n> @@ -1,41 +0,0 @@\r\n> -// Copyright 2012 The Go Authors. All rights reserved.\r\n> -// Use of this source code is governed by a BSD-style\r\n> -// license that can be found in the LICENSE file.\r\n> -\r\n> -// Stand-alone godoc Playground functionality.\r\n> -\r\n> -// +build !appengine\r\n> -\r\n> -package main\r\n> -\r\n> -import (\r\n> -       \"io\"\r\n> -       \"net/http\"\r\n> -       \"net/url\"\r\n> -)\r\n> -\r\n> -var playgroundScheme, playgroundHost string\r\n> -\r\n> -func init() {\r\n> -       u, err := url.Parse(playgroundBaseURL)\r\n> -       if err != nil {\r\n> -               panic(err)\r\n> -       }\r\n> -       playgroundScheme = u.Scheme\r\n> -       playgroundHost = u.Host\r\n> -}\r\n> -\r\n> -// bounceToPlayground forwards the request to play.golang.org.\r\n> -func bounceToPlayground(w http.ResponseWriter, req *http.Request) {\r\n> -       defer req.Body.Close()\r\n> -       req.URL.Scheme = playgroundScheme\r\n> -       req.URL.Host = playgroundHost\r\n> -       resp, err := http.Post(req.URL.String(),\r\n> req.Header.Get(\"Content-type\")**, req.Body)\r\n> -       if err != nil {\r\n> -               http.Error(w, err.Error(), 500)\r\n> -               return\r\n> -       }\r\n> -       w.WriteHeader(resp.StatusCode)\r\n> -       io.Copy(w, resp.Body)\r\n> -       resp.Body.Close()\r\n> -}\r\n> Index: cmd/godoc/play.go\r\n> ==============================**==============================**=======\r\n> --- a/cmd/godoc/play.go\r\n> +++ b/cmd/godoc/play.go\r\n> @@ -11,19 +11,11 @@\r\n>         \"fmt\"\r\n>         \"go/format\"\r\n>         \"net/http\"\r\n> +\r\n> +       _ \"code.google.com/p/go.talks/**pkg/playground<http://code.google.com/p/go.talks/pkg/playground>\r\n> \"\r\n>  )\r\n>\r\n> -// The server that will service compile and share requests.\r\n> -const playgroundBaseURL = \"http://play.golang.org\"\r\n> -\r\n> -func registerPlaygroundHandlers(mux *http.ServeMux) {\r\n> -       if *showPlayground {\r\n> -               mux.HandleFunc(\"/compile\", bounceToPlayground)\r\n> -               mux.HandleFunc(\"/share\", bounceToPlayground)\r\n> -       } else {\r\n> -               mux.HandleFunc(\"/compile\", disabledHandler)\r\n> -               mux.HandleFunc(\"/share\", disabledHandler)\r\n> -       }\r\n> +func registerPlaygroundHandlers() {\r\n>         http.HandleFunc(\"/fmt\", fmtHandler)\r\n>  }\r\n>\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-17 05:14:26.957940",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=381c44c143a5&repo=tools ***\n\ngo.tools/cmd/godoc: use go.talks playground package\n\nR=bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/11416043",
			"disapproval": false,
			"date": "2013-07-17 05:17:10.901020",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 11416043: go.tools/cmd/godoc: use go.talks playground package",
	"created": "2013-07-17 05:10:14.068370",
	"patchsets": [
		1,
		4001,
		7001
	],
	"modified": "2013-07-17 05:17:13.819320",
	"closed": true,
	"issue": 11416043
}