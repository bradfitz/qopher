{
	"description": "runtime: hide mheap from GC\nIt contains pointers to first blocks of lots of spans.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org"
	],
	"reviewers": [
		"khr@google.com",
		"cshapiro@google.com"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-07-19 11:52:33.836990",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-07-19 13:25:59.927280",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=733ddbe54c1d ***\n\nruntime: hide mheap from GC\nIt contains pointers to first blocks of lots of spans.\n\nR=golang-dev, iant\nCC=golang-dev\nhttps://codereview.appspot.com/11416046",
			"disapproval": false,
			"date": "2013-07-19 13:47:49.148790",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think Carl was looking at globals that needed to be scanned and decided\r\nthat there were only a very few, few enough that a scanning whitelist would\r\nprobably be much more succinct than a scanning blacklist.  I'll let him\r\nchime in on where he is with that.\r\n\r\n\r\nOn Fri, Jul 19, 2013 at 6:47 AM, <dvyukov@google.com> wrote:\r\n\r\n> *** Submitted as\r\n> https://code.google.com/p/go/**source/detail?r=733ddbe54c1d<https://code.google.com/p/go/source/detail?r=733ddbe54c1d>***\r\n>\r\n>\r\n> runtime: hide mheap from GC\r\n> It contains pointers to first blocks of lots of spans.\r\n>\r\n> R=golang-dev, iant\r\n> CC=golang-dev\r\n> https://codereview.appspot.**com/11416046<https://codereview.appspot.com/11416046>\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.**com/11416046/<https://codereview.appspot.com/11416046/>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-07-19 14:33:57.379260",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jul 19, 2013 at 7:33 AM, Keith Randall <khr@google.com> wrote:\r\n> I think Carl was looking at globals that needed to be scanned and decided\r\n> that there were only a very few, few enough that a scanning whitelist would\r\n> probably be much more succinct than a scanning blacklist.  I'll let him\r\n> chime in on where he is with that.\r\n\r\nThat would be pending a separation of Go global variables from C\r\nglobal variables, though.  We can use a whitelist for the C global\r\nvariables if we like--that's what gccgo does.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2013-07-19 16:09:01.573790",
			"approval": false
		},
		{
			"sender": "cshapiro@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jul 19, 2013 at 9:08 AM, Ian Lance Taylor <iant@golang.org> wrote:\r\n\r\n> That would be pending a separation of Go global variables from C\r\n> global variables, though.  We can use a whitelist for the C global\r\n> variables if we like--that's what gccgo does.\r\n>\r\n\r\nIt does not require such a separation.  At the moment I mark all untyped\r\nglobals as ignorable and explicitly add as roots the few locations in\r\nvariables that need to be scanned.\r\n\r\nThat aside, I would like to separate the data as it will compact the\r\nexisting GC information and allow for other good things.\r\n",
			"disapproval": false,
			"date": "2013-07-19 17:10:07.493330",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Jul 19, 2013 at 10:09 AM, Carl Shapiro <cshapiro@google.com> wrote:\r\n> On Fri, Jul 19, 2013 at 9:08 AM, Ian Lance Taylor <iant@golang.org> wrote:\r\n>>\r\n>> That would be pending a separation of Go global variables from C\r\n>> global variables, though.  We can use a whitelist for the C global\r\n>> variables if we like--that's what gccgo does.\r\n>\r\n>\r\n> It does not require such a separation.  At the moment I mark all untyped\r\n> globals as ignorable and explicitly add as roots the few locations in\r\n> variables that need to be scanned.\r\n\r\nAh, yes, sorry.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2013-07-19 18:18:57.951290",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 11416046: runtime: hide mheap from GC",
	"created": "2013-07-19 11:46:53.943290",
	"patchsets": [
		1,
		3001,
		5002,
		10001
	],
	"modified": "2013-07-19 18:18:57.993450",
	"closed": true,
	"issue": 11416046
}