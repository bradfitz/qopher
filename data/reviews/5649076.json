{
	"description": "net: avoid Shutdown during Close\n\nOnce we've evicted all the blocked I/O, the ref count\nshould go to zero quickly, so it should be safe to\npostpone the close(2) until then.\n\nFixes issue 1898.\nFixes issue 2116.\nFixes issue 2122.",
	"cc": [
		"golang-dev@googlegroups.com",
		"mikioh.mikioh@gmail.com",
		"bradfitz@golang.org",
		"fullung@gmail.com",
		"iant@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nOn Sun, Feb 12, 2012 at 23:07,  <bradfitz@golang.org> wrote:\n> could you make this look less scary when people are running test -v?\n\nDone.\n",
			"disapproval": false,
			"date": "2012-02-13 04:29:36.871328",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "almost looks fine except:\n- what about fd_windows? another CL?\n- oops, test doesn't work well on OpenBSD\n   I'll dive into it later\n\nhttp://codereview.appspot.com/5649076/diff/3007/src/pkg/net/fd.go\nFile src/pkg/net/fd.go (right):\n\nhttp://codereview.appspot.com/5649076/diff/3007/src/pkg/net/fd.go#newcode396\nsrc/pkg/net/fd.go:396: _, err = syscall.Dup2(d, fd.sysfd)\nDup2 returns only error.",
			"disapproval": false,
			"date": "2012-02-13 05:02:06.269006",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Feb 13, 2012 at 00:02,  <mikioh.mikioh@gmail.com> wrote:\n> almost looks fine except:\n> - what about fd_windows? another CL?\n> - oops, test doesn't work well on OpenBSD\n> \u00a0 I'll dive into it later\n\nfd_windows will be a different fix at least, since Dup2\nis not a windows concept.  i have an idea about that.\n\n> http://codereview.appspot.com/5649076/diff/3007/src/pkg/net/fd.go#newcode396\n> src/pkg/net/fd.go:396: _, err = syscall.Dup2(d, fd.sysfd)\n> Dup2 returns only error.\n\non every system but linux, sure.  :-)\n",
			"disapproval": false,
			"date": "2012-02-13 05:06:39.626528",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-13 03:33:13.949396",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5649076/diff/4001/src/pkg/net/udp_test.go\nFile src/pkg/net/udp_test.go (right):\n\nhttp://codereview.appspot.com/5649076/diff/4001/src/pkg/net/udp_test.go#newcode44\nsrc/pkg/net/udp_test.go:44: t.Log(err)\ncould you make this look less scary when people are running test -v?\n\nt.Logf(\"expected non-nil error: %v\", err)\n\nhttp://codereview.appspot.com/5649076/diff/4001/src/pkg/net/udp_test.go#newcode72\nsrc/pkg/net/udp_test.go:72: t.Log(err)\nlikewise",
			"disapproval": false,
			"date": "2012-02-13 04:07:05.195423",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "shutdown_test.go or close_test.go?\n\nOn Mon, Feb 13, 2012 at 1:28 PM, Russ Cox <rsc@golang.org> wrote:\n> On Sun, Feb 12, 2012 at 22:57, \u00a0<mikioh.mikioh@gmail.com> wrote:\n>> I'd rather see a separate test file: tcp_test.go.\n>\n> I'd really like to keep this right next to the other code\n> that it is a copy of.\n",
			"disapproval": false,
			"date": "2012-02-13 04:51:36.467317",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5649076/diff/4001/src/pkg/net/udp_test.go\nFile src/pkg/net/udp_test.go (right):\n\nhttp://codereview.appspot.com/5649076/diff/4001/src/pkg/net/udp_test.go#newcode28\nsrc/pkg/net/udp_test.go:28: func TestTCPListenClose(t *testing.T) {\nI'd rather see a separate test file: tcp_test.go.",
			"disapproval": false,
			"date": "2012-02-13 03:57:23.459580",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Feb 12, 2012 at 22:57,  <mikioh.mikioh@gmail.com> wrote:\n> I'd rather see a separate test file: tcp_test.go.\n\nI'd really like to keep this right next to the other code\nthat it is a copy of.\n",
			"disapproval": false,
			"date": "2012-02-13 04:28:19.534275",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTALMoved the new tests into net_test.go.\n",
			"disapproval": false,
			"date": "2012-02-13 04:54:01.364990",
			"approval": false
		},
		{
			"sender": "fullung@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"fullung@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello\n\nNot sure if this works with this new dup2 approach, but how about opening /dev/null once and keeping it open, with a devNull var pointing to the open file? Cuts down on the relatively strange syscalls people will see when stracing a Go process that opens and closes a lot of sockets.\n\nAlso, I wonder if a println and a fallback to Shutdown is really the best option. Maybe it's better to just panic if /dev/null can't be opened. Is there any sane machine that doesn't have /dev/null? Maybe chroots... will have to stay away from a combination of systemd's socket activation and RootDirectory= options.\n\nRegards\n\nAlbert\n\nOn 2012/02/13 04:29:36, rsc wrote:\n> PTAL\n> \n> On Sun, Feb 12, 2012 at 23:07,  <mailto:bradfitz@golang.org> wrote:\n> > could you make this look less scary when people are running test -v?\n> \n> Done.",
			"disapproval": false,
			"date": "2012-02-13 18:12:26.913028",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"fullung@gmail.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5649076/diff/8001/src/pkg/net/fd.go\nFile src/pkg/net/fd.go (right):\n\nhttp://codereview.appspot.com/5649076/diff/8001/src/pkg/net/fd.go#newcode23\nsrc/pkg/net/fd.go:23: closing bool // protected by both sysmu and pollServer.Mutex\nThe comment says \"protected by both\" but that seems incomplete.  I think you mean that both mutexes must be held before changing the field, and that either (or both) must be held before reading the field.  This comment is too terse to convey that to me.\n\nhttp://codereview.appspot.com/5649076/diff/8001/src/pkg/net/fd.go#newcode341\nsrc/pkg/net/fd.go:341: // Returns an error if the fd cannot be used.\nPerhaps add comment saying that if closing==true, the poll server lock must be held.\n\nhttp://codereview.appspot.com/5649076/diff/8001/src/pkg/net/fd.go#newcode355\nsrc/pkg/net/fd.go:355: closing = fd.closing\nThis line \"closing = fd.closing\" seems useless.\n\nhttp://codereview.appspot.com/5649076/diff/8001/src/pkg/net/fd.go#newcode377\nsrc/pkg/net/fd.go:377: pollserver.Lock()\nPerhaps add comment saying that the pollserver Lock must be acquired here before calling fd.incref(true).",
			"disapproval": false,
			"date": "2012-02-14 01:22:41.454478",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"fullung@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5649076/diff/8001/src/pkg/net/dial_test.go\nFile src/pkg/net/dial_test.go (right):\n\nhttp://codereview.appspot.com/5649076/diff/8001/src/pkg/net/dial_test.go#newcode110\nsrc/pkg/net/dial_test.go:110: if runtime.GOOS == \"darwin\" {\nswitch runtime.GOOS {\ncase \"darwin\", \"freebsd\", \"openbsd\":\n\nall BSDs are not good for quick draw.",
			"disapproval": false,
			"date": "2012-02-13 22:51:31.521902",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"mikioh.mikioh@gmail.com",
				"bradfitz@golang.org",
				"fullung@gmail.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=a5b623616453 ***\n\nnet: avoid Shutdown during Close\n\nOnce we've evicted all the blocked I/O, the ref count\nshould go to zero quickly, so it should be safe to\npostpone the close(2) until then.\n\nFixes issue 1898.\nFixes issue 2116.\nFixes issue 2122.\n\nR=golang-dev, mikioh.mikioh, bradfitz, fullung, iant\nCC=golang-dev\nhttp://codereview.appspot.com/5649076",
			"disapproval": false,
			"date": "2012-02-14 05:40:40.385250",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nI took the dup of /dev/null out.  Since everything is non-blocking,\nit should suffice to wait until the ref counts drop to zero to do the\nclose, as long as we still evict any pending I/O from the pollserver\n(not previously done).\n",
			"disapproval": false,
			"date": "2012-02-13 21:00:35.111612",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5649076: net: avoid Shutdown during Close",
	"created": "2012-02-12 23:16:35.130965",
	"patchsets": [
		1,
		2001,
		4001,
		3005,
		3007,
		8001,
		14001,
		14002
	],
	"modified": "2012-02-14 05:40:41.431973",
	"closed": true,
	"issue": 5649076
}