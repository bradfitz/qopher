{
	"description": "cmd/gc: faster code, mainly for rotate\n\n* Eliminate bounds check on known small shifts.\n* Rewrite x<<s | x>>(32-s) as a rotate (constant s).\n* More aggressive (but still minimal) range analysis.",
	"cc": [
		"ken@golang.org",
		"dave@cheney.net",
		"iant@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"remyoudompheng@gmail.com"
	],
	"messages": [
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "dave@cheney.net writes:\r\n\r\n> /home/dfc/go/src/cmd/gc/walk.c:870:8: error: self-comparison always\r\n> evaluates to false [-Werror,-Wtautological-compare]\r\n>                 if(t != t && isptr[t->etype])\r\n\r\nShould be t != T.\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2012-05-18 05:51:01.319863",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Russ,\n\nThere is a compile error under clang-3.0.\n\npando(~/go/src) % export CC=clang\npando(~/go/src) % ./all.bash\n# Building C bootstrap tool.\ncmd/dist\n\n# Building compilers and Go bootstrap tool for host, linux/arm.\nlib9\nlibbio\nlibmach\nmisc/pprof\ncmd/addr2line\ncmd/cov\ncmd/nm\ncmd/objdump\ncmd/pack\ncmd/prof\ncmd/cc\ncmd/gc\n/home/dfc/go/src/cmd/gc/walk.c:870:8: error: self-comparison always evaluates to false [-Werror,-Wtautological-compare]\n                if(t != t && isptr[t->etype])\n                     ^\n1 error generated.\ngo tool dist: FAILED: clang -Wall -Wno-sign-compare -Wno-missing-braces -Wno-parentheses -Wno-unknown-pragmas -Wno-switch -Wno-comment -Werror -fno-common -ggdb -O2 -Wno-dangling-else -Wno-unused-value -c -I /home/dfc/go/include -I /home/dfc/go/src/cmd/gc -o $WORK/walk.o /home/dfc/go/src/cmd/gc/walk.c",
			"disapproval": false,
			"date": "2012-05-18 04:42:16.922351",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-18 00:27:06.908711",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks Ian,\r\n\r\nNow I'm getting another error on crypto/sha512.\r\n\r\npando(~/go/src) % go build -x crypto/sha512\r\nWORK=/tmp/go-build170658554\r\nmkdir -p $WORK/crypto/sha512/_obj/\r\ncd /home/dfc/go/src/pkg/crypto/sha512\r\n/home/dfc/go/pkg/tool/linux_arm/5g -o $WORK/crypto/sha512/_obj/_go_.5\r\n-p crypto/sha512 -D _/home/dfc/go/src/pkg/crypto/sha512 -I $WORK\r\n./sha512.go ./sha512block.go\r\n# crypto/sha512\r\npkg/crypto/sha512/sha512block.go:115: internal compiler error: cgen64 LROT\r\n\r\nOn Fri, May 18, 2012 at 3:50 PM, Ian Lance Taylor <iant@google.com> wrote:\r\n> dave@cheney.net writes:\r\n>\r\n>> /home/dfc/go/src/cmd/gc/walk.c:870:8: error: self-comparison always\r\n>> evaluates to false [-Werror,-Wtautological-compare]\r\n>> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if(t != t && isptr[t->etype])\r\n>\r\n> Should be t != T.\r\n>\r\n> Ian\r\n",
			"disapproval": false,
			"date": "2012-05-18 06:03:59.357792",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"remyoudompheng@gmail.com",
				"ken@golang.org",
				"dave@cheney.net",
				"iant@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Impressive: (Core 2 Quad 2.33 GHz)\n\ncrypto/md5\nbenchmark           old MB/s     new MB/s  speedup\nBenchmarkHash1K       190.89       266.47    1.40x\nBenchmarkHash8K       196.35       289.04    1.47x",
			"disapproval": false,
			"date": "2012-05-25 00:01:02.856014",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"dave@cheney.net",
				"iant@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=67c0b8c8fb29 ***\n\ncmd/gc: faster code, mainly for rotate\n\n* Eliminate bounds check on known small shifts.\n* Rewrite x<<s | x>>(32-s) as a rotate (constant s).\n* More aggressive (but still minimal) range analysis.\n\nR=ken, dave, iant\nCC=golang-dev\nhttp://codereview.appspot.com/6209077",
			"disapproval": false,
			"date": "2012-05-24 21:20:12.045829",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, May 24, 2012 at 8:01 PM,  <remyoudompheng@gmail.com> wrote:\r\n> Impressive: (Core 2 Quad 2.33 GHz)\r\n>\r\n> crypto/md5\r\n> benchmark \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 old MB/s \u00a0 \u00a0 new MB/s \u00a0speedup\r\n> BenchmarkHash1K \u00a0 \u00a0 \u00a0 190.89 \u00a0 \u00a0 \u00a0 266.47 \u00a0 \u00a01.40x\r\n> BenchmarkHash8K \u00a0 \u00a0 \u00a0 196.35 \u00a0 \u00a0 \u00a0 289.04 \u00a0 \u00a01.47x\r\n\r\nThis 1.4x was included in the 3x the earlier CL was claiming.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-05-25 02:28:02.363911",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6209077: cmd/gc: faster code, mainly for rotate",
	"created": "2012-05-17 23:06:16.835652",
	"patchsets": [
		1,
		2001,
		5001,
		11001,
		14001
	],
	"modified": "2012-05-25 00:01:03.024630",
	"closed": true,
	"issue": 6209077
}