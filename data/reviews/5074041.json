{
	"description": "exp/template/html: simplify transition functions\n\nThis simplifies transition functions to make it easier to reliably\nelide comments in a later CL.\n\nBefore:\n- transition functions are responsible for detecting special end tags.\nAfter:\n- the code to detect special end tags is done in one place.\n\nWe were relying on end tags being skipped which meant we were\nnot noticing comments inside script/style elements that contain no\nsubstitutions.\nThis change means we will notice all such comments where necessary,\nbut stripTags will notice none since it does not need to.  This speeds\nup stripTags.",
	"cc": [
		"nigeltao@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-19 20:57:40.104230",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5074041/diff/22001/src/pkg/exp/template/html/html.go\nFile src/pkg/exp/template/html/html.go (right):\n\nhttp://codereview.appspot.com/5074041/diff/22001/src/pkg/exp/template/html/html.go#newcode175\nsrc/pkg/exp/template/html/html.go:175: if st > stateRCDATA && c.element != elementNone {\nAgain, type state in context.go needs comments to say that order matters, and what the constraints are for any future maintainer that wants to define additional states.\n\nIt may be worth defining a state.isJSOrCSS method in context.go.",
			"disapproval": false,
			"date": "2011-09-21 07:47:45.731626",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Can we spin the \"noticing comments inside script/style elements\" change into a separate CL? I'd be happier if a \"refactor transitionFuncs to return ints instead of slices\" CL resulted in no changes to the test code at all, and a tighter CL would be less noise for picking out bugs like the \"s = s[i+1:]\" should be \"k = i + 1\" thing.\n\nhttp://codereview.appspot.com/5074041/diff/11001/src/pkg/exp/template/html/html.go\nFile src/pkg/exp/template/html/html.go (right):\n\nhttp://codereview.appspot.com/5074041/diff/11001/src/pkg/exp/template/html/html.go#newcode186\nsrc/pkg/exp/template/html/html.go:186: if st > stateRCDATA && c.element != elementNone {\nThe fact that states are now ordered should be called out in the commentary on the state constants in context.go.\n\nhttp://codereview.appspot.com/5074041/diff/11001/src/pkg/exp/template/html/transition.go\nFile src/pkg/exp/template/html/transition.go (right):\n\nhttp://codereview.appspot.com/5074041/diff/11001/src/pkg/exp/template/html/transition.go#newcode426\nsrc/pkg/exp/template/html/transition.go:426: s = s[i+1:]\nk = i + 1",
			"disapproval": false,
			"date": "2011-09-20 01:48:54.213186",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/09/20 01:48:54, nigeltao wrote:\n> Can we spin the \"noticing comments inside script/style elements\" change into a\n> separate CL? I'd be happier if a \"refactor transitionFuncs to return ints\n> instead of slices\" CL resulted in no changes to the test code at all, and a\n> tighter CL would be less noise for picking out bugs like the \"s = s[i+1:]\"\n> should be \"k = i + 1\" thing.\n\nhttp://codereview.appspot.com/5091041/",
			"disapproval": false,
			"date": "2011-09-20 02:34:49.930393",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5074041/diff/22001/src/pkg/exp/template/html/html.go\nFile src/pkg/exp/template/html/html.go (right):\n\nhttp://codereview.appspot.com/5074041/diff/22001/src/pkg/exp/template/html/html.go#newcode175\nsrc/pkg/exp/template/html/html.go:175: if st > stateRCDATA && c.element != elementNone {\nOn 2011/09/21 07:47:45, nigeltao wrote:\n> Again, type state in context.go needs comments to say that order matters, and\n> what the constraints are for any future maintainer that wants to define\n> additional states.\n> \n> It may be worth defining a state.isJSOrCSS method in context.go.\n\nSorry, I forgot about that.  I defined an isInTag and used that since that covers fewer states.",
			"disapproval": false,
			"date": "2011-09-21 08:02:53.672299",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Uploaded a new snapshot.",
			"disapproval": false,
			"date": "2011-09-20 15:56:57.461104",
			"approval": false
		},
		{
			"sender": "mikesamuel@gmail.com",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1b91cb2a8f58 ***\n\nexp/template/html: simplify transition functions\n\nThis simplifies transition functions to make it easier to reliably\nelide comments in a later CL.\n\nBefore:\n- transition functions are responsible for detecting special end tags.\nAfter:\n- the code to detect special end tags is done in one place.\n\nWe were relying on end tags being skipped which meant we were\nnot noticing comments inside script/style elements that contain no\nsubstitutions.\nThis change means we will notice all such comments where necessary,\nbut stripTags will notice none since it does not need to.  This speeds\nup stripTags.\n\nR=nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/5074041",
			"disapproval": false,
			"date": "2011-09-22 02:04:47.258717",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"mikesamuel@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.\n\nPlease update the CL description. For example, \"Instead of back-computing indices by subtracting lengths, we now\njust keep track of indices\" was done in a separate CL.",
			"disapproval": false,
			"date": "2011-09-22 01:29:54.252247",
			"approval": true
		}
	],
	"owner_email": "mikesamuel@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "MikeSamuel",
	"subject": "code review 5074041: exp/template/html: simplify transition functions",
	"created": "2011-09-19 20:38:06.267379",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		11001,
		15001,
		22001,
		17007,
		20002,
		27007,
		26008,
		20010
	],
	"modified": "2011-09-22 02:04:48.576412",
	"closed": true,
	"issue": 5074041
}