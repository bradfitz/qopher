{
	"description": "debug/elf: handle missing shstrndx in core files\n\nFixes issue 4481.\n\nhello-world-core.gz was generated with a simple hello world c program and core dumped as suggested in the issue. \n\nAlso: add support for gz compressed test fixtures.",
	"cc": [
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"iant@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-12-16 01:11:55.005930",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=c2a84616b24e ***\n\ndebug/elf: handle missing shstrndx in core files\n\nFixes issue 4481.\n\nhello-world-core.gz was generated with a simple hello world c program and core dumped as suggested in the issue. \n\nAlso: add support for gz compressed test fixtures.\n\nR=minux.ma, rsc, iant\nCC=golang-dev\nhttps://codereview.appspot.com/6936058",
			"disapproval": false,
			"date": "2012-12-17 20:59:27.807390",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "do we really need to create a tmp file?\n\ni think just use bytes.Reader + bytes.Buffer and\nelf.NewFile is acceptable for this case (elf.Open\nis tested by others files and it merely open the\nfile and then invokes NewFile).\n\ni'd like to avoid creating temporary files for this,\nwhat do you think?",
			"disapproval": false,
			"date": "2012-12-16 01:22:33.146030",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6936058/diff/8001/src/pkg/debug/elf/file_test.go\nFile src/pkg/debug/elf/file_test.go (right):\n\nhttps://codereview.appspot.com/6936058/diff/8001/src/pkg/debug/elf/file_test.go#newcode168\nsrc/pkg/debug/elf/file_test.go:168: f, err := os.Open(tt.file)\nwell i mean we keep using elf.Open for normal files\nso that we still test elf.Open and only use elf.NewFile\nfor gz compressed elf files.",
			"disapproval": false,
			"date": "2012-12-16 02:01:15.111530",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> src/pkg/debug/elf/file_test.go:168: f, err := os.Open(tt.file)\n> well i mean we keep using elf.Open for normal files\n> so that we still test elf.Open and only use elf.NewFile\n> for gz compressed elf files.\n\nGotcha. Done.",
			"disapproval": false,
			"date": "2012-12-16 02:23:08.456300",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6936058/diff/4005/src/pkg/debug/elf/file.go\nFile src/pkg/debug/elf/file.go (right):\n\nhttps://codereview.appspot.com/6936058/diff/4005/src/pkg/debug/elf/file.go#newcode275\nsrc/pkg/debug/elf/file.go:275: if shstrndx < 0 || shstrndx > shnum {\nOn 2012/12/16 02:32:02, minux wrote:\n> if shnum > 0 i think shstrndx should not be allowed to be\n> equal to shnum.\n> \n> i think the correct condition is:\n>   if shstrndx < 0 || shstrndx != 0 && shstrndx >= shnum\n\nPTAL. According to the freebsd man page on elf, \n\n\"If a file has no section header table, both the e_shnum and the e_shoff fields of the ELF \t\t\theader will be zero.\"",
			"disapproval": false,
			"date": "2012-12-16 04:56:59.523990",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6936058/diff/8006/src/pkg/debug/elf/file.go\nFile src/pkg/debug/elf/file.go (right):\n\nhttps://codereview.appspot.com/6936058/diff/8006/src/pkg/debug/elf/file.go#newcode276\nsrc/pkg/debug/elf/file.go:276: if shnum > 0 && shoff > 0 && (shstrndx < 0 || shstrndx >= shnum) {\nFor the record, a value of shstrndx == SHN_XINDEX (0xffff) is valid and means that the real shstrndx does not fit in 32 bits, and can be found in the sh_link field of section header 0.  But that should be addressed separately at some time.",
			"disapproval": false,
			"date": "2012-12-17 20:50:36.436310",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done. PTAL.",
			"disapproval": false,
			"date": "2012-12-16 01:33:53.388060",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-16 02:25:05.069210",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-12-17 14:51:32.938720",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> For the record, a value of shstrndx == SHN_XINDEX (0xffff) is valid and means\n> that the real shstrndx does not fit in 32 bits, and can be found in the sh_link\n> field of section header 0.  But that should be addressed separately at some\n> time.\n\nYup - there was a note about an extended segment header (probably not its name), but you are probably right that we can cross that bridge when we come to it.",
			"disapproval": false,
			"date": "2012-12-17 20:56:44.079390",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6936058/diff/4005/src/pkg/debug/elf/file.go\nFile src/pkg/debug/elf/file.go (right):\n\nhttps://codereview.appspot.com/6936058/diff/4005/src/pkg/debug/elf/file.go#newcode275\nsrc/pkg/debug/elf/file.go:275: if shstrndx < 0 || shstrndx > shnum {\nif shnum > 0 i think shstrndx should not be allowed to be\nequal to shnum.\n\ni think the correct condition is:\n  if shstrndx < 0 || shstrndx != 0 && shstrndx >= shnum",
			"disapproval": false,
			"date": "2012-12-16 02:32:02.810280",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6936058: debug/elf: handle missing shstrndx in core files",
	"created": "2012-12-15 06:23:30.219520",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		4004,
		13001,
		8002,
		4005,
		8006,
		8009
	],
	"modified": "2012-12-18 00:18:31.310900",
	"closed": true,
	"issue": 6936058
}