{
	"description": "exp/template: ensure that a valid Set is returned even on error.",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": ">> not return nil?\n>> what's the use of half a set?\n>\n> the thinking behind returning the set plus an error is the regularity of the signature and the way that lets us collapse, somewhat clumsily but effectively, the scaffolding of helper functions. \u00a0in cases where it used to return an error, it now makes sense for it to return the set, if defined, and the error, so that some operations can continue. for instance, the test setup got noticeably clumsier before i returned the set rather than nil in error cases.\n\ncan you point to that test setup code?\ni am curious about the details.\n\nas written, the caller of ParseSetFile\n(just to pick one) cannot tell which file\ncontained a syntax error, which means\nthe set is in an unspecified state.\n\nmy suggestion would be to make it all\nor nothing (nil on error) but i might change\nmy mind on seeing the test code.\n\nruss\n",
			"disapproval": false,
			"date": "2011-08-02 02:29:05.546711",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-08-01 11:15:01.834383",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "\nOn Aug 1, 2011, at 6:29 PM, Russ Cox wrote:\n\n> not return nil?\n> what's the use of half a set?\n\nthe thinking behind returning the set plus an error is the regularity of the signature and the way that lets us collapse, somewhat clumsily but effectively, the scaffolding of helper functions.  in cases where it used to return an error, it now makes sense for it to return the set, if defined, and the error, so that some operations can continue. for instance, the test setup got noticeably clumsier before i returned the set rather than nil in error cases.\n\nhowever, i'm still thinking about the details and, until it moves out of exp, i still feel considerable freedom to futz around with it. i'm open to suggestions. the last burst of changes was triggered by one.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-08-02 02:24:16.491069",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-08-01 11:03:16.375323",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "something was gnawing at me. you didn't put your finger on it but you pointed at it.\n\nCL coming.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2011-08-02 02:49:54.675097",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-08-01 16:01:17.990385",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4f3f7fb32bfa ***\n\nexp/template: ensure that a valid Set is returned even on error.\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/4838044\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2011-08-01 16:02:05.346113",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "not return nil?\nwhat's the use of half a set?\n",
			"disapproval": false,
			"date": "2011-08-02 01:29:50.304415",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "removing reviewers",
			"disapproval": false,
			"date": "2012-06-03 04:29:48.721387",
			"approval": false
		}
	],
	"owner_email": "rogpeppe@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rog",
	"subject": "code review 4838044: exp/template: ensure that a valid Set is returned even ...",
	"created": "2011-08-01 11:02:30.251282",
	"patchsets": [
		1,
		2001,
		3,
		1002,
		5,
		6
	],
	"modified": "2012-06-03 04:29:48.721387",
	"closed": false,
	"issue": 4838044
}