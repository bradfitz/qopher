{
	"description": "doc: add The Laws of Reflection article\n\nOriginally published on The Go Programming Language Blog, September 6, 2011.\n\nhttp://blog.golang.org/2011/09/laws-of-reflection.html\n\nUpdate issue 2547",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"adg@golang.org"
	],
	"reviewers": [
		"mpimenov@google.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html\nFile doc/articles/laws_of_reflection.html (right):\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode105\ndoc/articles/laws_of_reflection.html:105: value at all, since any value has zero or more methods.</p>\nnewline before and after </p>, and add opening <p>\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode110\ndoc/articles/laws_of_reflection.html:110: type, that value will always satisfy the interface.</p>\nditto\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode127\ndoc/articles/laws_of_reflection.html:127: assigned to the variable, and that value&rsquo;s type descriptor.\nplease change &rsquo; to ' throughout. It needn't be a fancy quote\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode188\ndoc/articles/laws_of_reflection.html:188: subset of <code>Reader</code>&rsquo;s.)</p>\npara\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode199\ndoc/articles/laws_of_reflection.html:199: <p><b>The first law of reflection</b></p>\nline break\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode205\ndoc/articles/laws_of_reflection.html:205: started, there are two types we need to know about in <a href=\nplease put each of these links on its own line, beginning with\n<a href=\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode358\ndoc/articles/laws_of_reflection.html:358: <p><b>The second law of reflection</b></p></p>\nline breaks above and below\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode359\ndoc/articles/laws_of_reflection.html:359: <p><b>2. Reflection goes from reflection object to interface\nline break\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode362\ndoc/articles/laws_of_reflection.html:362: inverse.</p>\nlbr\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode437\ndoc/articles/laws_of_reflection.html:437: <p><b>The third law of reflection</b></p\nunclosed </p\nlbr\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode637\ndoc/articles/laws_of_reflection.html:637: straightforward method calls (see <a href=\nlbr before <a\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode676\ndoc/articles/laws_of_reflection.html:676: settable.</p>\nlbr\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode729\ndoc/articles/laws_of_reflection.html:729: <i>By Rob Pike, September 2011</i>\nd",
			"disapproval": false,
			"date": "2012-02-22 07:00:47.692645",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 21 February 2012 12:48,  <r@golang.org> wrote:\n> i believe there are some other links to it that could be updated.\n>\n> here's one\n> src/pkg/reflect/type.go:14://\n> http://blog.golang.org/2011/09/laws-of-reflection.html\n>\n\nYep, and link from docs.html too.\n",
			"disapproval": false,
			"date": "2012-02-21 03:26:24.541480",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for looking at this in details.\n\nI believe I adressed all your comments, I also ran `tidy -e` on it to make sure I haven't forgot anything:\n\ntidy -e articles/laws_of_reflection.html\nne 10 column 1 - Warning: missing <!DOCTYPE> declaration\nline 10 column 1 - Warning: inserting implicit <body>\nline 10 column 1 - Warning: inserting missing 'title' element\nInfo: Document content looks like HTML 4.01 Strict\nInfo: No system identifier in emitted doctype\n3 warnings, 0 errors were found!\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html\nFile doc/articles/laws_of_reflection.html (right):\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode105\ndoc/articles/laws_of_reflection.html:105: value at all, since any value has zero or more methods.</p>\nOn 2012/02/22 07:00:47, adg wrote:\n> newline before and after </p>, and add opening <p>\n\nDone.\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode110\ndoc/articles/laws_of_reflection.html:110: type, that value will always satisfy the interface.</p>\nOn 2012/02/22 07:00:47, adg wrote:\n> ditto\n\nDone.\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode127\ndoc/articles/laws_of_reflection.html:127: assigned to the variable, and that value&rsquo;s type descriptor.\nOn 2012/02/22 07:00:47, adg wrote:\n> please change &rsquo; to ' throughout. It needn't be a fancy quote\n\nDone.\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode188\ndoc/articles/laws_of_reflection.html:188: subset of <code>Reader</code>&rsquo;s.)</p>\nOn 2012/02/22 07:00:47, adg wrote:\n> para\n\nDone.\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode205\ndoc/articles/laws_of_reflection.html:205: started, there are two types we need to know about in <a href=\nOn 2012/02/22 07:00:47, adg wrote:\n> please put each of these links on its own line, beginning with\n> <a href=\n\nDone.\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode359\ndoc/articles/laws_of_reflection.html:359: <p><b>2. Reflection goes from reflection object to interface\nOn 2012/02/22 07:00:47, adg wrote:\n> line break\n\nDone.\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode362\ndoc/articles/laws_of_reflection.html:362: inverse.</p>\nOn 2012/02/22 07:00:47, adg wrote:\n> lbr\n\nDone.\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode437\ndoc/articles/laws_of_reflection.html:437: <p><b>The third law of reflection</b></p\nOn 2012/02/22 07:00:47, adg wrote:\n> unclosed </p\n> lbr\n\nDone.\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode637\ndoc/articles/laws_of_reflection.html:637: straightforward method calls (see <a href=\nOn 2012/02/22 07:00:47, adg wrote:\n> lbr before <a\n\nDone.\n\nhttp://codereview.appspot.com/5689054/diff/7001/doc/articles/laws_of_reflection.html#newcode729\ndoc/articles/laws_of_reflection.html:729: <i>By Rob Pike, September 2011</i>\nOn 2012/02/22 07:00:47, adg wrote:\n> d\n\nDone.",
			"disapproval": false,
			"date": "2012-02-22 15:41:26.343895",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i believe there are some other links to it that could be updated.\n\nhere's one\nsrc/pkg/reflect/type.go:14:// http://blog.golang.org/2011/09/laws-of-reflection.html",
			"disapproval": false,
			"date": "2012-02-21 01:48:55.735472",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: adg@golang.org, golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-21 01:30:26.625548",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: adg@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-21 03:51:31.164661",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looking good. Two final nits\n\nhttp://codereview.appspot.com/5689054/diff/7003/doc/progs/interface2.go\nFile doc/progs/interface2.go (right):\n\nhttp://codereview.appspot.com/5689054/diff/7003/doc/progs/interface2.go#newcode8\ndoc/progs/interface2.go:8: func main() {\nadd a TODO to test the output of these functions.\n\nhttp://codereview.appspot.com/5689054/diff/7003/src/pkg/reflect/type.go\nFile src/pkg/reflect/type.go (right):\n\nhttp://codereview.appspot.com/5689054/diff/7003/src/pkg/reflect/type.go#newcode15\nsrc/pkg/reflect/type.go:15: // $GOROOT/doc/articles/laws_of_reflection.html\nhttp://golang.org/",
			"disapproval": false,
			"date": "2012-02-23 01:13:32.369858",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5689054/diff/7003/doc/progs/interface2.go\nFile doc/progs/interface2.go (right):\n\nhttp://codereview.appspot.com/5689054/diff/7003/doc/progs/interface2.go#newcode8\ndoc/progs/interface2.go:8: func main() {\nOn 2012/02/23 01:13:32, adg wrote:\n> add a TODO to test the output of these functions.\n\nDone.\n\nhttp://codereview.appspot.com/5689054/diff/7003/src/pkg/reflect/type.go\nFile src/pkg/reflect/type.go (right):\n\nhttp://codereview.appspot.com/5689054/diff/7003/src/pkg/reflect/type.go#newcode15\nsrc/pkg/reflect/type.go:15: // $GOROOT/doc/articles/laws_of_reflection.html\nOn 2012/02/23 01:13:32, adg wrote:\n> http://golang.org/\n\nDone.",
			"disapproval": false,
			"date": "2012-02-24 01:20:22.378988",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-29 22:59:24.022793",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=9c480054e50a ***\n\ndoc: add The Laws of Reflection article\n\nOriginally published on The Go Programming Language Blog, September 6, 2011.\n\nhttp://blog.golang.org/2011/09/laws-of-reflection.html\n\nUpdate issue 2547\n\nR=golang-dev, r, adg\nCC=golang-dev\nhttp://codereview.appspot.com/5689054\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2012-02-29 23:05:57.547691",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-03-06 12:41:12.590066",
			"approval": false
		},
		{
			"sender": "proppy@google.com",
			"recipients": [
				"proppy@google.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/06 12:41:12, proppy wrote:\n> *** Abandoned ***\n\nNot abandoned, but rather already submitted by adg@.",
			"disapproval": false,
			"date": "2012-03-06 12:44:32.133230",
			"approval": false
		},
		{
			"sender": "mpimenov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It probably is an error in codereview.py that it sometimes\nasks you to abandon changes that have already been submitted\n(and if you don't they just remain there in `hg ps`).\n\n\nOn Tue, Mar 6, 2012 at 4:44 PM, <proppy@google.com> wrote:\n\n> On 2012/03/06 12:41:12, proppy wrote:\n>\n>> *** Abandoned ***\n>>\n>\n> Not abandoned, but rather already submitted by adg@.\n>\n>\n> http://codereview.appspot.com/**5689054/<http://codereview.appspot.com/5689054/>\n>\n",
			"disapproval": false,
			"date": "2012-03-06 13:11:06.049435",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Mar 6, 2012 at 08:11, Maxim Pimenov <mpimenov@google.com> wrote:\n> It probably is an error in codereview.py that it sometimes\n> asks you to abandon changes that have already been submitted\n> (and if you don't they just remain there in `hg ps`).\n\nWhen you run hg sync, it looks to see if your CL has been\nclosed, but it only looks through the last N changes, for\nsome N that I don't remember.  If you are not syncing often\n(adg submitted this 6 days ago) then N can be too small.\nSo be it.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-03-06 14:28:38.512233",
			"approval": false
		},
		{
			"sender": "mpimenov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the explanation.\nFor the record, N=100 and can be varied in\ncodereview.py:/^def sync_changes(ui, repo)\n\n\nOn Tue, Mar 6, 2012 at 6:28 PM, Russ Cox <rsc@golang.org> wrote:\n\n> On Tue, Mar 6, 2012 at 08:11, Maxim Pimenov <mpimenov@google.com> wrote:\n> > It probably is an error in codereview.py that it sometimes\n> > asks you to abandon changes that have already been submitted\n> > (and if you don't they just remain there in `hg ps`).\n>\n> When you run hg sync, it looks to see if your CL has been\n> closed, but it only looks through the last N changes, for\n> some N that I don't remember.  If you are not syncing often\n> (adg submitted this 6 days ago) then N can be too small.\n> So be it.\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2012-03-06 14:41:44.398169",
			"approval": false
		}
	],
	"owner_email": "proppy@google.com",
	"private": false,
	"base_url": "",
	"owner": "proppy",
	"subject": "code review 5689054: doc: add The Laws of Reflection article",
	"created": "2012-02-21 01:28:53.882438",
	"patchsets": [
		1,
		2001,
		1007,
		6001,
		7001,
		7003,
		8002,
		8010,
		14001
	],
	"modified": "2012-03-06 14:28:38.676505",
	"closed": true,
	"issue": 5689054
}