{
	"description": "html: improve parsing of comments and \"bogus comments\"",
	"cc": [
		"nigeltao@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-14 03:55:33.627856",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "This revision of the CL applies cleanly after CL 5262044.",
			"disapproval": false,
			"date": "2011-10-14 04:27:59.532900",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5279044/diff/4001/src/pkg/html/token_test.go\nFile src/pkg/html/token_test.go (right):\n\nhttp://codereview.appspot.com/5279044/diff/4001/src/pkg/html/token_test.go#newcode234\nsrc/pkg/html/token_test.go:234: // DOCTYPE tests.\nOn 2011/10/14 04:03:49, nigeltao wrote:\n> I'd move the DOCTYPE and XML tests up to be just after the comment tests.\n\nDone.",
			"disapproval": false,
			"date": "2011-10-14 04:29:41.023849",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "This CL was written simultaneously with 5262044 and will require some adjustment in order to merge correctly.",
			"disapproval": false,
			"date": "2011-10-14 03:56:45.761613",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5279044/diff/4001/src/pkg/html/token_test.go\nFile src/pkg/html/token_test.go (right):\n\nhttp://codereview.appspot.com/5279044/diff/4001/src/pkg/html/token_test.go#newcode234\nsrc/pkg/html/token_test.go:234: // DOCTYPE tests.\nI'd move the DOCTYPE and XML tests up to be just after the comment tests.",
			"disapproval": false,
			"date": "2011-10-14 04:03:49.873689",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-14 15:02:56.503009",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=dd81822c18a9 ***\n\nhtml: improve parsing of comments and \"bogus comments\"\n\nR=nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/5279044\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2011-10-15 01:22:14.778715",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Can you take the \"malformed tag #5-8\" tests out and revert the change\nfrom \"z.tt, z.err = ErrorToken, os.NewError(\"html: TODO: handle\nmalformed tags\")\" to \"z.nextText()\"? I think that that will minimize\nthe upcoming merge conflict.\n",
			"disapproval": false,
			"date": "2011-10-14 04:02:28.235060",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-14 04:26:45.451689",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go\nFile src/pkg/html/token.go (right):\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode231\nsrc/pkg/html/token.go:231: //   z.raw.start + 4 <= z.raw.end.\nJoin this line with the previous one, now that there's room.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode243\nsrc/pkg/html/token.go:243: dashCount++\nI'd put a \"continue\" after this, and move all the \"dashCount = 0\" lines from the end of the other case blocks to after the \"switch c\" block.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode248\nsrc/pkg/html/token.go:248: z.data.end = z.data.start // For comments like <!-->, with no data.\nI normally put the comment above, not to the right. Same at line 326.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode250\nsrc/pkg/html/token.go:250: z.tt = CommentToken\nThis line should no longer be necessary.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode261\nsrc/pkg/html/token.go:261: if c == '>' {\nIt may be easier to track a \"var exclamation bool\" instead of copy/pasting the \"c == '>'\" case.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode277\nsrc/pkg/html/token.go:277: // Pre-condition: z.err == nil && z.raw.end points at the first byte to be ignored.\n80 chars for doc comments, or s/byte to be ignored/comment byte/.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode305\nsrc/pkg/html/token.go:305: break\nI don't think \"break\" is the right thing to do. It's not written down (but should be), but the idea is that you don't call z.readByte if z.err != nil. By breaking here, you call readByte at line 315.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode338\nsrc/pkg/html/token.go:338: z.skipWhiteSpace()\nAgain, don't call z.readByte later if z.skipWhiteSpace results in an error. Lines 338-340 should be:\n----\nz.tt = DoctypeToken\nif z.skipWhiteSpace(); z.err != nil {\n  z.data.start = z.raw.end\n  z.data.end = z.raw.end\n  return\n}\nz.data.start = z.raw.end\n----\n\nAlso, please add a test that is \"<!DOCtype\".",
			"disapproval": false,
			"date": "2011-10-14 06:10:34.353361",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go\nFile src/pkg/html/token.go (right):\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode231\nsrc/pkg/html/token.go:231: //   z.raw.start + 4 <= z.raw.end.\nOn 2011/10/14 06:10:34, nigeltao wrote:\n> Join this line with the previous one, now that there's room.\n\nDone.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode243\nsrc/pkg/html/token.go:243: dashCount++\nOn 2011/10/14 06:10:34, nigeltao wrote:\n> I'd put a \"continue\" after this, and move all the \"dashCount = 0\" lines from the\n> end of the other case blocks to after the \"switch c\" block.\n\nDone.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode248\nsrc/pkg/html/token.go:248: z.data.end = z.data.start // For comments like <!-->, with no data.\nOn 2011/10/14 06:10:34, nigeltao wrote:\n> I normally put the comment above, not to the right. Same at line 326.\n\nDone.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode250\nsrc/pkg/html/token.go:250: z.tt = CommentToken\nOn 2011/10/14 06:10:34, nigeltao wrote:\n> This line should no longer be necessary.\n\nDone.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode261\nsrc/pkg/html/token.go:261: if c == '>' {\nOn 2011/10/14 06:10:34, nigeltao wrote:\n> It may be easier to track a \"var exclamation bool\" instead of copy/pasting the\n> \"c == '>'\" case.\nI think that would make the control flow harder to follow. I'd have to label the loop and add a break statement. A goto would almost be cleaner. But this is Go, so I can use defer. \n\nI like the semantics of defer here. It says, \"No matter what, make sure that you don't return data with a negative length.\" But it probably slows things down a little. If you think that's a problem, I can go back to having the if statement in two places.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode277\nsrc/pkg/html/token.go:277: // Pre-condition: z.err == nil && z.raw.end points at the first byte to be ignored.\nOn 2011/10/14 06:10:34, nigeltao wrote:\n> 80 chars for doc comments, or s/byte to be ignored/comment byte/.\n\nDone.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode305\nsrc/pkg/html/token.go:305: break\nOn 2011/10/14 06:10:34, nigeltao wrote:\n> I don't think \"break\" is the right thing to do. It's not written down (but\n> should be), but the idea is that you don't call z.readByte if z.err != nil. By\n> breaking here, you call readByte at line 315.\n\nDone.\n\nhttp://codereview.appspot.com/5279044/diff/9001/src/pkg/html/token.go#newcode338\nsrc/pkg/html/token.go:338: z.skipWhiteSpace()\nOn 2011/10/14 06:10:34, nigeltao wrote:\n> Again, don't call z.readByte later if z.skipWhiteSpace results in an error.\n> Lines 338-340 should be:\n> ----\n> z.tt = DoctypeToken\n> if z.skipWhiteSpace(); z.err != nil {\n>   z.data.start = z.raw.end\n>   z.data.end = z.raw.end\n>   return\n> }\n> z.data.start = z.raw.end\n> ----\n> \n> Also, please add a test that is \"<!DOCtype\".\n\nDone. (with slightly different order to avoid repetition)",
			"disapproval": false,
			"date": "2011-10-14 15:03:07.948057",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"andybalholm@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM.\n\nThere are a couple of little nits to fix, but I'll do them when I submit this.",
			"disapproval": false,
			"date": "2011-10-15 00:44:34.632431",
			"approval": true
		}
	],
	"owner_email": "andybalholm@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "andybalholm",
	"subject": "code review 5279044: html: improve parsing of comments and \"bogus comments\"",
	"created": "2011-10-14 03:54:55.686568",
	"patchsets": [
		1,
		1002,
		4001,
		9001,
		8002
	],
	"modified": "2011-10-15 14:47:01.030377",
	"closed": true,
	"issue": 5279044
}