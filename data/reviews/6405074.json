{
	"description": "net: make Addr or LocalAddr on TCPListener or UDPConn return proper bound address\n\nAlso this CL makes LocalAddr on multicast UDPConn returns\na proper bound address, not a pair of group address and\nbound port or others for the case when we join to multiple\ngroup addresses.\n\nFixes issue 3847.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"rsc@golang.org",
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-07-22 13:47:43.880710",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6405074/diff/7006/src/pkg/net/iprawsock_posix.go\nFile src/pkg/net/iprawsock_posix.go (left):\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/iprawsock_posix.go#oldcode137\nsrc/pkg/net/iprawsock_posix.go:137: switch net {\nWhy remove this? parseDialNetwork checked that it's some recognized network but has not checked that it is \"ip\". It could be \"tcp4\".\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/iprawsock_posix.go#oldcode161\nsrc/pkg/net/iprawsock_posix.go:161: switch net {\nWhy remove this?\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/tcpsock_posix.go\nFile src/pkg/net/tcpsock_posix.go (right):\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/tcpsock_posix.go#newcode146\nsrc/pkg/net/tcpsock_posix.go:146: if raddr == nil {\nHmm. Where is the network string checking code?\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/tcpsock_posix.go#newcode209\nsrc/pkg/net/tcpsock_posix.go:209: // internetSocket with nil laddr makes an unbound, unnamed socket.\nHmm. Where is the network string checking code?\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/udpsock_posix.go\nFile src/pkg/net/udpsock_posix.go (left):\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/udpsock_posix.go#oldcode126\nsrc/pkg/net/udpsock_posix.go:126: switch net {\nWhy remove this?\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/udpsock_posix.go#oldcode146\nsrc/pkg/net/udpsock_posix.go:146: switch net {\nWhy remove this?\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/udpsock_posix.go#oldcode166\nsrc/pkg/net/udpsock_posix.go:166: switch net {\nWhy remove this?",
			"disapproval": false,
			"date": "2012-08-06 19:42:42.429480",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6405074/diff/7006/src/pkg/net/iprawsock_posix.go\nFile src/pkg/net/iprawsock_posix.go (left):\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/iprawsock_posix.go#oldcode137\nsrc/pkg/net/iprawsock_posix.go:137: switch net {\nOn 2012/08/06 19:42:42, rsc wrote:\n> Why remove this? parseDialNetwork checked that it's some recognized network but\n> has not checked that it is \"ip\". It could be \"tcp4\".\n\nouch, thx.\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/iprawsock_posix.go#oldcode137\nsrc/pkg/net/iprawsock_posix.go:137: switch net {\nOn 2012/08/06 19:42:42, rsc wrote:\n> Why remove this? parseDialNetwork checked that it's some recognized network but\n> has not checked that it is \"ip\". It could be \"tcp4\".\n\nDone.\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/iprawsock_posix.go#oldcode161\nsrc/pkg/net/iprawsock_posix.go:161: switch net {\nOn 2012/08/06 19:42:42, rsc wrote:\n> Why remove this?\n\nDone.\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/tcpsock_posix.go\nFile src/pkg/net/tcpsock_posix.go (right):\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/tcpsock_posix.go#newcode209\nsrc/pkg/net/tcpsock_posix.go:209: // internetSocket with nil laddr makes an unbound, unnamed socket.\nOn 2012/08/06 19:42:42, rsc wrote:\n> Hmm. Where is the network string checking code?\n\nthat makes me confused, did i remove it before go 1 release?\nanyway will add the same as other ProtocolConn methods.\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/udpsock_posix.go\nFile src/pkg/net/udpsock_posix.go (left):\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/udpsock_posix.go#oldcode126\nsrc/pkg/net/udpsock_posix.go:126: switch net {\nOn 2012/08/06 19:42:42, rsc wrote:\n> Why remove this?\n\nwill revert.\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/udpsock_posix.go#oldcode126\nsrc/pkg/net/udpsock_posix.go:126: switch net {\nOn 2012/08/06 19:42:42, rsc wrote:\n> Why remove this?\n\nDone.\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/udpsock_posix.go#oldcode146\nsrc/pkg/net/udpsock_posix.go:146: switch net {\nOn 2012/08/06 19:42:42, rsc wrote:\n> Why remove this?\n\nDone.\n\nhttp://codereview.appspot.com/6405074/diff/7006/src/pkg/net/udpsock_posix.go#oldcode166\nsrc/pkg/net/udpsock_posix.go:166: switch net {\nOn 2012/08/06 19:42:42, rsc wrote:\n> Why remove this?\n\nDone.",
			"disapproval": false,
			"date": "2012-08-12 04:01:19.866430",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for your comments.\r\n\r\nOn Sun, Aug 12, 2012 at 3:03 PM,  <dave@cheney.net> wrote:\r\n\r\n> Thank you for this proposal. Some general comments. I think the changes\r\n> to {tcp,udp}_posix.go are unrelated and go into another CL,\r\n\r\nNope, the core of this CL is changes to those two files and related tests.\r\n\r\n> probably sneak the var name change into iprawsock_posix.go in there as\r\n> well.\r\n\r\nMakes sense.\r\n\r\n> The changes to sock.go are covered by 6395055.\r\n\r\nAgreed, but almost same but slightly different sock.go for each CL\r\nneeds to run new test code.\r\n",
			"disapproval": false,
			"date": "2012-08-12 06:18:56.968280",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-12 07:27:25.344200",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-12 04:01:40.674060",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for this proposal. Some general comments. I think the changes to {tcp,udp}_posix.go are unrelated and go into another CL, you can probably sneak the var name change into iprawsock_posix.go in there as well. The changes to sock.go are covered by 6395055. This should make this CL much smaller.",
			"disapproval": false,
			"date": "2012-08-12 06:03:07.011530",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-08-23 12:50:22.356530",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I suspect the missing nil check (and error) in ListenTCP was an oversight. It did make it into the tcpsock_plan9.go code somehow. Are you sure we need to support a nil argument as a non-error? Whichever we choose, we should document what happens with a nil argument to ListenTCP and ListenUDP.\n\nhttp://codereview.appspot.com/6405074/diff/20001/src/pkg/net/multicast_test.go\nFile src/pkg/net/multicast_test.go (right):\n\nhttp://codereview.appspot.com/6405074/diff/20001/src/pkg/net/multicast_test.go#newcode131\nsrc/pkg/net/multicast_test.go:131: if a, ok := la.(*UDPAddr); !ok || a.Port == 0 {\nThis is a good example of code that will crash with the new nullProtocolAddress.\n\nhttp://codereview.appspot.com/6405074/diff/20001/src/pkg/net/tcpsock_posix.go\nFile src/pkg/net/tcpsock_posix.go (right):\n\nhttp://codereview.appspot.com/6405074/diff/20001/src/pkg/net/tcpsock_posix.go#newcode231\nsrc/pkg/net/tcpsock_posix.go:231: // The caller can use l.Addr() to retrieve the chosen address.\nWhile you are here please change \"l.Addr()\" to \"the TCPListener's Addr method\"\n\nhttp://codereview.appspot.com/6405074/diff/20001/src/pkg/net/udpsock_posix.go\nFile src/pkg/net/udpsock_posix.go (left):\n\nhttp://codereview.appspot.com/6405074/diff/20001/src/pkg/net/udpsock_posix.go#oldcode152\nsrc/pkg/net/udpsock_posix.go:152: return nil, &OpError{\"listen\", net, nil, errMissingAddress}\nNot making this an error anymore seems like an API change. Is it a necessary one? Maybe the right fix over in TCP is to put this check there too.",
			"disapproval": false,
			"date": "2012-08-31 11:17:18.680880",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Aug 31, 2012 at 8:17 PM,  <rsc@golang.org> wrote:\r\n\r\n> I suspect the missing nil check (and error) in ListenTCP was an\r\n> oversight. It did make it into the tcpsock_plan9.go code somehow. Are\r\n> you sure we need to support a nil argument as a non-error? Whichever we\r\n> choose, we should document what happens with a nil argument to ListenTCP\r\n> and ListenUDP.\r\n\r\nSure, vague literal address format causes a series of CLs.\r\nHow about this:\r\n\r\nLiteral IPv4/6 address format in string:\r\n- ParseIP accepts \"::\" or \"0.0.0.0\" as a wildcard address, rejects \"\"\r\n- ResolveIPAddr accepts \"::\", \"::%lo0\" or \"0.0.0.0\" as a wildcard\r\naddress, rejects \"\" (*)\r\n- Resolve{UDP,TCP}Addr accept  \":\", \"0.0.0.0:\", \"[::]:\", \"[::%lo0]:\",\r\n\":0\" as a pair of wildcard address and port, rejects \"\" (**)\r\n- Dial rejects any literal wildcard address\r\n- Listen for \"ip\" accepts \"::\", \"::%lo0\" or \"0.0.0.0\" as a wildcard\r\naddress, rejects \"\"\r\n- Listen for \"udp\" or \"tcp\" accept  \":\", \"0.0.0.0:\", \"[::]:\",\r\n\"[::%lo0]:\" or \":0\" as a pair of wildcard address and port, rejects \"\"\r\n\r\nIPv4/6 ProtocolAddr object:\r\n- Dial{IP,UDP,TCP} accept nil as a wildcard address for local endpoint\r\n- Listen{IP,UDP,TCP} reject nil as a wildcard address for local endpoint\r\n\r\n*) with consideration for IPv6 scoped address format\r\n**) or being more strictly even if we see \":0\" everywhere\r\n",
			"disapproval": false,
			"date": "2012-08-31 13:28:52.584060",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-10-04 07:25:47.706880",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 6405074: net: make Addr or LocalAddr on TCPListener or UDPConn r...",
	"created": "2012-07-22 10:01:34.027590",
	"patchsets": [
		7006,
		14001,
		13002,
		20001
	],
	"modified": "2012-10-04 07:25:50.044430",
	"closed": true,
	"issue": 6405074
}