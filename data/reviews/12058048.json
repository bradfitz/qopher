{
	"description": "go.tools/ssa: add test of SSA construction on $GOROOT/src/pkg/...\n\nstdlib_test runs the builder (in sanity-checking mode) over\nthe Go standard library.  It also prints some stats about\nthe time and memory usage.\n\nAlso:\n- importer.LoadPackage too (not just doImport) must consult\n  the cache to avoid creating duplicate Package instances for\n  the same import path when called serially from a test.\n- importer: skip empty directories without an error.\n- importer: print all errors, not just the first.\n- visit.go: added AllFunctions utility for enumerating all \n  Functions in a Program.\n- ssa.MethodSet is not safe to expose from the package since\n  it must be accessed under an (inaccessible) lock.  (!!!)\n  This CL makes it unexported and restricts its use to the\n  single function Program.LookupMethod().\n- Program.MethodSet() has gone.\n  Clients should instead iterate over the types.MethodSet\n  and call LookupMethod.\n- Package.DumpTo(): improved efficiency of methodset printing\n  (by not creating wrappers) and accuracy (by showing * on\n  receiver type only when necessary).\n- Program.CreatePackage: documented precondition and added\n  assertion.",
	"cc": [
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello gri@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-30 17:34:23.420370",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/stdlib_test.go\nFile ssa/stdlib_test.go (right):\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/stdlib_test.go#newcode34\nssa/stdlib_test.go:34: switch pkg {\ninfo.Name() ?\n\nthen there's no need for root?\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/stdlib_test.go#newcode97\nssa/stdlib_test.go:97: allFuncs := ssa.AllFunctions(prog)\nadd a comment to this section, say\n\n// dumping some statistics\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/visit.go\nFile ssa/visit.go (right):\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/visit.go#newcode3\nssa/visit.go:3: import (\nno ()'s ?\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/visit.go#newcode7\nssa/visit.go:7: // This file defines utilities for visiting the SSA representation of\nmove this comment before the imports - maybe even before the package clause\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/visit.go#newcode68\nssa/visit.go:68: var buf [10]*Value // preallocate\nthis comment could be a bit more elaborate (I assume Operands is using the underlying array?)",
			"disapproval": false,
			"date": "2013-07-30 18:18:25.037420",
			"approval": true
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12058048/diff/11013/ssa/stdlib_test.go\nFile ssa/stdlib_test.go (right):\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/stdlib_test.go#newcode34\nssa/stdlib_test.go:34: switch pkg {\nOn 2013/07/30 18:18:25, gri wrote:\n> info.Name() ?\n> \n> then there's no need for root?\n\nName is just the base name whereas pkg is the suffix after root+\"/\".\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/stdlib_test.go#newcode97\nssa/stdlib_test.go:97: allFuncs := ssa.AllFunctions(prog)\nOn 2013/07/30 18:18:25, gri wrote:\n> add a comment to this section, say\n> \n> // dumping some statistics\n\nDone.\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/visit.go\nFile ssa/visit.go (right):\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/visit.go#newcode3\nssa/visit.go:3: import (\nOn 2013/07/30 18:18:25, gri wrote:\n> no ()'s ?\n\nDone.\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/visit.go#newcode7\nssa/visit.go:7: // This file defines utilities for visiting the SSA representation of\nOn 2013/07/30 18:18:25, gri wrote:\n> move this comment before the imports - maybe even before the package clause\n\nDone (after 'package' clause since it's file---not package---documentation).\n\nhttps://codereview.appspot.com/12058048/diff/11013/ssa/visit.go#newcode68\nssa/visit.go:68: var buf [10]*Value // preallocate\nOn 2013/07/30 18:18:25, gri wrote:\n> this comment could be a bit more elaborate (I assume Operands is using the\n> underlying array?)\n\nYep. Done:\n\n  // avoid alloc in common case",
			"disapproval": false,
			"date": "2013-07-30 18:25:07.699400",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=54458ddda3b9&repo=tools ***\n\ngo.tools/ssa: add test of SSA construction on $GOROOT/src/pkg/...\n\nstdlib_test runs the builder (in sanity-checking mode) over\nthe Go standard library.  It also prints some stats about\nthe time and memory usage.\n\nAlso:\n- importer.LoadPackage too (not just doImport) must consult\n  the cache to avoid creating duplicate Package instances for\n  the same import path when called serially from a test.\n- importer: skip empty directories without an error.\n- importer: print all errors, not just the first.\n- visit.go: added AllFunctions utility for enumerating all \n  Functions in a Program.\n- ssa.MethodSet is not safe to expose from the package since\n  it must be accessed under an (inaccessible) lock.  (!!!)\n  This CL makes it unexported and restricts its use to the\n  single function Program.LookupMethod().\n- Program.MethodSet() has gone.\n  Clients should instead iterate over the types.MethodSet\n  and call LookupMethod.\n- Package.DumpTo(): improved efficiency of methodset printing\n  (by not creating wrappers) and accuracy (by showing * on\n  receiver type only when necessary).\n- Program.CreatePackage: documented precondition and added\n  assertion.\n\nR=gri\nCC=golang-dev\nhttps://codereview.appspot.com/12058048",
			"disapproval": false,
			"date": "2013-07-30 18:28:16.050580",
			"approval": false
		}
	],
	"owner_email": "adonovan@google.com",
	"private": false,
	"base_url": "",
	"owner": "adonovan",
	"subject": "code review 12058048: go.tools/ssa: add test of SSA construction on $GOROOT/s...",
	"created": "2013-07-29 23:14:41.492310",
	"patchsets": [
		1,
		3001,
		6001,
		9001,
		11013,
		9002
	],
	"modified": "2013-07-30 18:28:16.892260",
	"closed": true,
	"issue": 12058048
}