{
	"description": "runtime: fix arm preemption\n\nPreemption during the software floating point code\ncould cause m (R9) to change, so that when the\noriginal registers were restored at the end of the\nfloating point handler, the changed and correct m\nwould be replaced by the old and incorrect m.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"dave@cheney.net",
		"dvyukov@google.com",
		"remyoudompheng@gmail.com"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dvyukov (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-01 04:16:29.390240",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=0e50ba9a0494 ***\n\nruntime: fix arm preemption\n\nPreemption during the software floating point code\ncould cause m (R9) to change, so that when the\noriginal registers were restored at the end of the\nfloating point handler, the changed and correct m\nwould be replaced by the old and incorrect m.\n\nTBR=dvyukov\nCC=golang-dev\nhttps://codereview.appspot.com/11883045",
			"disapproval": false,
			"date": "2013-08-01 04:16:35.632800",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"rsc@golang.org",
				"dave@cheney.net",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11883045/diff/4001/src/pkg/runtime/vlop_arm.s\nFile src/pkg/runtime/vlop_arm.s (right):\n\nhttps://codereview.appspot.com/11883045/diff/4001/src/pkg/runtime/vlop_arm.s#newcode70\nsrc/pkg/runtime/vlop_arm.s:70: MOVM.IA.W\t(R0), [R11-R12]\nThanks rsc. Could this also be written as\n\nMOVM.IA.W (R0), [R1,R2,R3,R4,R5,R6,R7,R8,R11,R12] ?\n\nIt probably doesn't matter that much",
			"disapproval": false,
			"date": "2013-08-01 04:21:17.094410",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"rsc@golang.org",
				"dave@cheney.net",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "rubber stamp LGTM",
			"disapproval": false,
			"date": "2013-08-01 10:40:42.641960",
			"approval": true
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The linux arm builders seem to still complain about numeric\r\ncorruptions, not sure what is the reason.\r\n\r\nR\u00e9my.\r\n\r\n2013/8/1, dvyukov@google.com <dvyukov@google.com>:\r\n> rubber stamp LGTM\r\n>\r\n> https://codereview.appspot.com/11883045/\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-01 10:52:02.555910",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"dave@cheney.net",
				"dvyukov@google.com",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/11883045/diff/4001/src/pkg/runtime/vlop_arm.s\nFile src/pkg/runtime/vlop_arm.s (right):\n\nhttps://codereview.appspot.com/11883045/diff/4001/src/pkg/runtime/vlop_arm.s#newcode70\nsrc/pkg/runtime/vlop_arm.s:70: MOVM.IA.W\t(R0), [R11-R12]\nOn 2013/08/01 04:21:17, dfc wrote:\n> Thanks rsc. Could this also be written as\n> \n> MOVM.IA.W (R0), [R1,R2,R3,R4,R5,R6,R7,R8,R11,R12] ?\n> \n> It probably doesn't matter that much \n\nNo, it can't, because I need to skip over the R9 and R10 values that are on the stack. I didn't change the form of the struct being passed to _sfloat, because it assumes it can index into the list using the register number.\n\nIt's possible that if R0 is being updated that I could have done ADD $8, R0 instead of MOVW $52(R13), R0, but both are a single instruction and I was more sure of the latter.",
			"disapproval": false,
			"date": "2013-08-01 14:50:57.268860",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 11883045: runtime: fix arm preemption",
	"created": "2013-08-01 04:05:12.570370",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2013-08-01 15:26:57.469170",
	"closed": true,
	"issue": 11883045
}