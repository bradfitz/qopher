{
	"description": "go.talks/present: use Playground API when served by App Engine",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.talks",
			"disapproval": false,
			"date": "2012-12-17 00:20:07.978700",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6945067/diff/6006/present/appengine.go\nFile present/appengine.go (right):\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/appengine.go#newcode20\npresent/appengine.go:20: const runUrl = \"http://golang.org/compile\"\nOn 2012/12/17 02:59:35, dsymonds wrote:\n> runURL\n\nDone.\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/appengine.go#newcode43\npresent/appengine.go:43: c.Errorf(\"making POST request:\", err)\nOn 2012/12/17 02:59:35, dsymonds wrote:\n> I'd probably hoist the error logging into compile, and just return annotated\n> errors down here.\n\nDone.\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/play.go\nFile present/play.go (right):\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/play.go#newcode22\npresent/play.go:22: fmt.Fprintf(&buf, `document.write(unescape(\"%%3Cscript src='%s' type='text/javascript'%%3E%%3C/script%%3E\"));`, p)\nOn 2012/12/17 02:59:35, dsymonds wrote:\n> ugh, this is awful. There should really be some proper escaping going on around\n> here. TODO?\n\nAdded a todo. It's not *that* bad.\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/play.js\nFile present/static/play.js (right):\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/play.js#newcode39\npresent/static/play.js:39: if (stopFunc)\nOn 2012/12/17 02:59:35, dsymonds wrote:\n> add braces\n\nDone.\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/play.js#newcode40\npresent/static/play.js:40: stopFunc();\nOn 2012/12/17 02:59:35, dsymonds wrote:\n> should this also set stopFunc to null?\n\nnah\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/play.js#newcode99\npresent/static/play.js:99: console.log(\"No playground transport available.\");\nOn 2012/12/17 02:59:35, dsymonds wrote:\n> is this going to be visible enough? should it be an alert?\n\nIt's really just for me. If I'm like \"why isn't this working?\" the console will tell me. End users will just see a graceful degradation to no playground support.\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/playground.js\nFile present/static/playground.js (right):\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/playground.js#newcode11\npresent/static/playground.js:11: while (r ) {\nOn 2012/12/17 02:59:35, dsymonds wrote:\n> s/r /r/\n\nDone.",
			"disapproval": false,
			"date": "2012-12-17 03:13:29.450720",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6945067/diff/8024/present/appengine.go\nFile present/appengine.go (right):\n\nhttps://codereview.appspot.com/6945067/diff/8024/present/appengine.go#newcode39\npresent/appengine.go:39: b.WriteTo(w)\nio.Copy(w, b) is probably the most efficient; I can never remember who sniffs for what, except I know io.Copy sniffs everything.",
			"disapproval": false,
			"date": "2012-12-17 03:24:49.858940",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=23a6d0a397e8&repo=talks ***\n\ngo.talks/present: use Playground API when served by App Engine\n\nR=golang-dev, dsymonds\nCC=golang-dev\nhttps://codereview.appspot.com/6945067\n\nhttps://codereview.appspot.com/6945067/diff/8024/present/appengine.go\nFile present/appengine.go (right):\n\nhttps://codereview.appspot.com/6945067/diff/8024/present/appengine.go#newcode39\npresent/appengine.go:39: b.WriteTo(w)\nOn 2012/12/17 03:24:49, dsymonds wrote:\n> io.Copy(w, b) is probably the most efficient; I can never remember who sniffs\n> for what, except I know io.Copy sniffs everything.\n\nDone.",
			"disapproval": false,
			"date": "2012-12-17 03:30:51.688290",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6945067/diff/6005/present/static/playground.js\nFile present/static/playground.js (right):\n\nhttps://codereview.appspot.com/6945067/diff/6005/present/static/playground.js#newcode1\npresent/static/playground.js:1: // Copyright 2012 The Go Authors. All rights reserved.\nThis is just copying playground.js from the go-playground repo.\nThe existing playground.js was renamed to play.js.\n\nhttps://codereview.appspot.com/6945067/diff/6005/present/static/socket.js\nFile present/static/socket.js (right):\n\nhttps://codereview.appspot.com/6945067/diff/6005/present/static/socket.js#newcode1\npresent/static/socket.js:1: // Copyright 2012 The Go Authors. All rights reserved.\nThis code was moved out of play.js (n\u00e9e playground.js).",
			"disapproval": false,
			"date": "2012-12-17 02:20:21.478810",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6945067/diff/6006/present/appengine.go\nFile present/appengine.go (right):\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/appengine.go#newcode20\npresent/appengine.go:20: const runUrl = \"http://golang.org/compile\"\nrunURL\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/appengine.go#newcode43\npresent/appengine.go:43: c.Errorf(\"making POST request:\", err)\nI'd probably hoist the error logging into compile, and just return annotated errors down here.\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/play.go\nFile present/play.go (right):\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/play.go#newcode22\npresent/play.go:22: fmt.Fprintf(&buf, `document.write(unescape(\"%%3Cscript src='%s' type='text/javascript'%%3E%%3C/script%%3E\"));`, p)\nugh, this is awful. There should really be some proper escaping going on around here. TODO?\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/play.js\nFile present/static/play.js (right):\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/play.js#newcode39\npresent/static/play.js:39: if (stopFunc)\nadd braces\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/play.js#newcode40\npresent/static/play.js:40: stopFunc();\nshould this also set stopFunc to null?\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/play.js#newcode99\npresent/static/play.js:99: console.log(\"No playground transport available.\");\nis this going to be visible enough? should it be an alert?\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/playground.js\nFile present/static/playground.js (right):\n\nhttps://codereview.appspot.com/6945067/diff/6006/present/static/playground.js#newcode11\npresent/static/playground.js:11: while (r ) {\ns/r /r/",
			"disapproval": false,
			"date": "2012-12-17 02:59:35.732070",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 6945067: go.talks/present: abstract websocket code from playground UI",
	"created": "2012-12-17 00:18:21.240590",
	"patchsets": [
		1,
		2001,
		3,
		7001,
		7006,
		6005,
		6006,
		14001,
		8024,
		13003
	],
	"modified": "2012-12-17 03:30:54.920660",
	"closed": true,
	"issue": 6945067
}