{
	"description": "cmd/go: remove $GOROOT as a go get target\n\nFixes issue 4186.\n\nBack in the day, before the Go 1.0 release, $GOROOT was mandatory for building from source. Fast forward to now and $GOPATH is mandatory and $GOROOT is optional, and mainly used by those who use the binary distribution in uncommon places.\n\nFor example, most novices at least know about `sudo` as they would have used it to install the binary tarball into /usr/local. It is logical they would use the `sudo` hammer to `go get` other Go packages when faced with a permission error talking about the path they just had to use `sudo` on last time.\n\nEven if they had read the documentation and set $GOPATH, go get will not work as expected as `sudo` masks most environment variables.\n\nllucky(~) % ~/go/bin/go env | grep GOPATH\nGOPATH=\"/home/dfc\"\nlucky(~) % sudo ~/go/bin/go env | grep GOPATH\nGOPATH=\"\"\n\nThis CL therefore proposes to remove support for using `go get` to download source into $GOROOT.\n\nThis CL also proposes an error when GOPATH=$GOROOT, as this is another place where new Go users can get stuck.\n\nFurther discussion: https://groups.google.com/d/topic/golang-nuts/VIg3fjHiHRI/discussion",
	"cc": [
		"rsc@golang.org",
		"adg@golang.org",
		"minux.ma@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for your comments. PTAL.\n\nFor the moment, can we keep the discussion on the golang-nuts email thread, as some may not subscribe to golang-dev.\n\nhttps://codereview.appspot.com/6941058/diff/2001/src/cmd/go/get.go\nFile src/cmd/go/get.go (right):\n\nhttps://codereview.appspot.com/6941058/diff/2001/src/cmd/go/get.go#newcode256\nsrc/cmd/go/get.go:256: return fmt.Errorf(\"cannot download, $GOPATH not set. For more details see: go help gopath\")\nOn 2012/12/15 01:14:25, kamil.kisiel wrote:\n> This message doesn't make sense in the case where list[0] == goroot, I think you\n> should add a separate if clause and message for that.\n\nDone.",
			"disapproval": false,
			"date": "2012-12-15 01:35:43.209450",
			"approval": false
		},
		{
			"sender": "dsallings@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I agree with the change, but I think it should include a tl;dr to onramp people rapidly.\n\nhttps://codereview.appspot.com/6941058/diff/2001/src/cmd/go/get.go\nFile src/cmd/go/get.go (right):\n\nhttps://codereview.appspot.com/6941058/diff/2001/src/cmd/go/get.go#newcode256\nsrc/cmd/go/get.go:256: return fmt.Errorf(\"cannot download, $GOPATH not set. For more details see: go help gopath\")\nIMO, it'd be quite friendly to recommend someone set GOPATH to $HOME/go if they're unsure, or similar right here.  Something quick such that they don't believe $PWD is right and can get them going quickly, but without making an awful mess.",
			"disapproval": false,
			"date": "2012-12-15 01:13:41.030750",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6941058/diff/2001/src/cmd/go/get.go\nFile src/cmd/go/get.go (right):\n\nhttps://codereview.appspot.com/6941058/diff/2001/src/cmd/go/get.go#newcode256\nsrc/cmd/go/get.go:256: return fmt.Errorf(\"cannot download, $GOPATH not set. For more details see: go help gopath\")\nThis message doesn't make sense in the case where list[0] == goroot, I think you should add a separate if clause and message for that.",
			"disapproval": false,
			"date": "2012-12-15 01:14:25.729330",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> IMO, it'd be quite friendly to recommend someone set GOPATH to $HOME/go\r\n> if they're unsure, or similar right here.  Something quick such that\r\n\r\nI'm loath to recommend any $GOPATH setting because it will be highly\r\ncontroversial.\r\n",
			"disapproval": false,
			"date": "2012-12-15 01:15:12.451920",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I don't understand the GOPATH in this sentence quoted from the description.\n\nBack in the day, before the Go 1.0 release, $GOPATH was mandatory for building\nfrom source.\n\nhttps://codereview.appspot.com/6941058/diff/8001/src/cmd/go/test.bash\nFile src/cmd/go/test.bash (right):\n\nhttps://codereview.appspot.com/6941058/diff/8001/src/cmd/go/test.bash#newcode189\nsrc/cmd/go/test.bash:189: echo 'go get get code.google.com/p/go.codereview/cmd/hgpatch should not succeed with $GOPATH unset'\ngo get get?\n\nhttps://codereview.appspot.com/6941058/diff/8001/src/cmd/go/test.bash#newcode197\nsrc/cmd/go/test.bash:197: echo 'go get get code.google.com/p/go.codereview/cmd/hgpatch should not succeed with GOPATH=$GOROOT'\nditto.",
			"disapproval": false,
			"date": "2012-12-15 13:21:29.191550",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Awww heck, it is so hard to keep these too straight. PTAL.\r\nOn 16 Dec 2012 00:21, <minux.ma@gmail.com> wrote:\r\n\r\n> I don't understand the GOPATH in this sentence quoted from the\r\n> description.\r\n>\r\n> Back in the day, before the Go 1.0 release, $GOPATH was mandatory for\r\n> building\r\n> from source.\r\n>\r\n>\r\n> https://codereview.appspot.**com/6941058/diff/8001/src/cmd/**go/test.bash<https://codereview.appspot.com/6941058/diff/8001/src/cmd/go/test.bash>\r\n> File src/cmd/go/test.bash (right):\r\n>\r\n> https://codereview.appspot.**com/6941058/diff/8001/src/cmd/**\r\n> go/test.bash#newcode189<https://codereview.appspot.com/6941058/diff/8001/src/cmd/go/test.bash#newcode189>\r\n> src/cmd/go/test.bash:189: echo 'go get get\r\n> code.google.com/p/go.**codereview/cmd/hgpatch<http://code.google.com/p/go.codereview/cmd/hgpatch>should not succeed with\r\n> $GOPATH unset'\r\n> go get get?\r\n>\r\n> https://codereview.appspot.**com/6941058/diff/8001/src/cmd/**\r\n> go/test.bash#newcode197<https://codereview.appspot.com/6941058/diff/8001/src/cmd/go/test.bash#newcode197>\r\n> src/cmd/go/test.bash:197: echo 'go get get\r\n> code.google.com/p/go.**codereview/cmd/hgpatch<http://code.google.com/p/go.codereview/cmd/hgpatch>should not succeed with\r\n> GOPATH=$GOROOT'\r\n> ditto.\r\n>\r\n> https://codereview.appspot.**com/6941058/<https://codereview.appspot.com/6941058/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-12-15 13:22:44.135070",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dsallings@gmail.com, kamil.kisiel@gmail.com, minux.ma@gmail.com, bradfitz@golang.org, rsc@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-20 05:26:01.315140",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please take another look.",
			"disapproval": false,
			"date": "2012-12-19 11:04:11.898090",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dsallings@gmail.com, kamil.kisiel@gmail.com, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-12-19 11:05:55.637280",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "+ {rsc,adg}\n\nThank you for your comments, PTAL.\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/doc.go\nFile src/cmd/go/doc.go (right):\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/doc.go#newcode450\nsrc/cmd/go/doc.go:450: GOPATH must be set to get, build and install packages outside the\nOn 2012/12/19 17:19:43, minux wrote:\n> this is wrong, because even the package is in the standard Go tree,\n> go get can't be used without GOPATH being set.\n> \n> Or, are you intentionally leaving that possibility?\n\nI think this might be a wording issue, not a surreptitious choice. go build builds, go install installs, go get, downloads, so technically you don't need $GOPATH to be set if go get does not need to download anything (ie, the pkg is already presented locally).\n\nWhat would you suggest ? Remove the 'get', change it to 'download', or something else ?\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/help.go\nFile src/cmd/go/help.go (right):\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/help.go#newcode189\nsrc/cmd/go/help.go:189: GOPATH must be set to get, build and install packages outside the\nOn 2012/12/19 17:19:43, minux wrote:\n> ditto.\n\nSee previous\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/test.bash\nFile src/cmd/go/test.bash (right):\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/test.bash#newcode187\nsrc/cmd/go/test.bash:187: mkdir -p $d/src/pkg\nOn 2012/12/19 17:13:20, bradfitz wrote:\n> why src/pkg and not just src?\n> \n> Or do you want $d/{src,pkg,bin} ?\n\nyes, that was what I intended, but thinking about it, neither are needed. PTAL.\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/test.bash#newcode195\nsrc/cmd/go/test.bash:195: mkdir -p $d/src/pkg\nOn 2012/12/19 17:13:20, bradfitz wrote:\n> likewise\n\nDone.",
			"disapproval": false,
			"date": "2012-12-20 01:05:05.348280",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry, forgot the go1.1.html change, please hold off on reviews for the moment.",
			"disapproval": false,
			"date": "2012-12-20 01:46:59.985110",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/test.bash\nFile src/cmd/go/test.bash (right):\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/test.bash#newcode187\nsrc/cmd/go/test.bash:187: mkdir -p $d/src/pkg\nwhy src/pkg and not just src?\n\nOr do you want $d/{src,pkg,bin} ?\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/test.bash#newcode195\nsrc/cmd/go/test.bash:195: mkdir -p $d/src/pkg\nlikewise",
			"disapproval": false,
			"date": "2012-12-19 17:13:20.526490",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think you will need to document this change in doc/go1.1.html.\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/doc.go\nFile src/cmd/go/doc.go (right):\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/doc.go#newcode450\nsrc/cmd/go/doc.go:450: GOPATH must be set to get, build and install packages outside the\nthis is wrong, because even the package is in the standard Go tree,\ngo get can't be used without GOPATH being set.\n\nOr, are you intentionally leaving that possibility?\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/help.go\nFile src/cmd/go/help.go (right):\n\nhttps://codereview.appspot.com/6941058/diff/18001/src/cmd/go/help.go#newcode189\nsrc/cmd/go/help.go:189: GOPATH must be set to get, build and install packages outside the\nditto.",
			"disapproval": false,
			"date": "2012-12-19 17:19:43.746890",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "the gobuilder assumes the old 'go get' behavior, please fix the gobuilder\r\nand make sure every builder is updated before submitting this CL.\r\n",
			"disapproval": false,
			"date": "2012-12-21 19:21:34.025820",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html#newcode65\ndoc/go1.1.html:65: <p>The <code>go</code> tool has acquired several improvements which are intended to improve the experience for new Go users.</p>\nThe go tool has been made more user friendly.\n\nhttps://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html#newcode67\ndoc/go1.1.html:67: <p>Firstly, when compiling, testing, or running Go code, the <code>go</code> tool will now give more detailed errors messages, including a list of paths searched, when a package cannot be located.\nFirstly isn't a word.\n\nhttps://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html#newcode67\ndoc/go1.1.html:67: <p>Firstly, when compiling, testing, or running Go code, the <code>go</code> tool will now give more detailed errors messages, including a list of paths searched, when a package cannot be located.\nThe go tool now gives more detailed error messages. For example:\n\nhttps://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html#newcode78\ndoc/go1.1.html:78: Secondly, the <code>go get</code> command no longer allows <code>$GOROOT</code> as the default destination when downloading package source. To use <code>go get</code> command, a valid <code>$GOPATH</code> is now required.\nThe go get command will no longer install to $GOROOT. To use...\n\nhttps://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html#newcode86\ndoc/go1.1.html:86: <p>Finally, as a result of the previous change, the <code>go get</code> command will also fail when <code>$GOPATH</code> and <code>$GOROOT</code> are set to the same value.\nBecause of these changes, the go get command will fail when $GOPATH and $GOROOT are set to the same value.\n\nhttps://codereview.appspot.com/6941058/diff/24006/src/cmd/go/get.go\nFile src/cmd/go/get.go (right):\n\nhttps://codereview.appspot.com/6941058/diff/24006/src/cmd/go/get.go#newcode257\nsrc/cmd/go/get.go:257: return fmt.Errorf(\"cannot download, $GOPATH must not be set to $GOROOT. For more details see: go help gopath\")\ns/For more details s/S/",
			"disapproval": false,
			"date": "2013-01-02 03:37:24.465770",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi adg,\n\nThank you for your comments. I will address them and address the issue of the dashboard builders relying on the old behaviour soon. \n\nApart from my poor word smithing, do you have any high level objections to this proposal ?\n\nCheers\n\nDave",
			"disapproval": false,
			"date": "2013-01-03 00:56:00.159520",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7034049/ addresses the changes required to the dashboard builder.",
			"disapproval": false,
			"date": "2013-01-03 22:28:32.917350",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No objections. I'm pretty happy with this.\r\nOn 3 Jan 2013 11:56, <dave@cheney.net> wrote:\r\n\r\n> Hi adg,\r\n>\r\n> Thank you for your comments. I will address them and address the issue\r\n> of the dashboard builders relying on the old behaviour soon.\r\n>\r\n> Apart from my poor word smithing, do you have any high level objections\r\n> to this proposal ?\r\n>\r\n> Cheers\r\n>\r\n> Dave\r\n>\r\n> https://codereview.appspot.**com/6941058/<https://codereview.appspot.com/6941058/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-01-03 01:03:16.452070",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Done, thank you for your comments.\n\nhttps://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html#newcode65\ndoc/go1.1.html:65: <p>The <code>go</code> tool has acquired several improvements which are intended to improve the experience for new Go users.</p>\nOn 2013/01/02 03:37:24, adg wrote:\n> The go tool has been made more user friendly.\n\nDone.\n\nhttps://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html#newcode67\ndoc/go1.1.html:67: <p>Firstly, when compiling, testing, or running Go code, the <code>go</code> tool will now give more detailed errors messages, including a list of paths searched, when a package cannot be located.\nOn 2013/01/02 03:37:24, adg wrote:\n> The go tool now gives more detailed error messages. For example:\n\nDone.\n\nhttps://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html#newcode78\ndoc/go1.1.html:78: Secondly, the <code>go get</code> command no longer allows <code>$GOROOT</code> as the default destination when downloading package source. To use <code>go get</code> command, a valid <code>$GOPATH</code> is now required.\nOn 2013/01/02 03:37:24, adg wrote:\n> The go get command will no longer install to $GOROOT. To use...\n\nDone.\n\nhttps://codereview.appspot.com/6941058/diff/24006/doc/go1.1.html#newcode86\ndoc/go1.1.html:86: <p>Finally, as a result of the previous change, the <code>go get</code> command will also fail when <code>$GOPATH</code> and <code>$GOROOT</code> are set to the same value.\nOn 2013/01/02 03:37:24, adg wrote:\n> Because of these changes, the go get command will fail when $GOPATH and $GOROOT\n> are set to the same value.\n\nDone.\n\nhttps://codereview.appspot.com/6941058/diff/24006/src/cmd/go/get.go\nFile src/cmd/go/get.go (right):\n\nhttps://codereview.appspot.com/6941058/diff/24006/src/cmd/go/get.go#newcode257\nsrc/cmd/go/get.go:257: return fmt.Errorf(\"cannot download, $GOPATH must not be set to $GOROOT. For more details see: go help gopath\")\nOn 2013/01/02 03:37:24, adg wrote:\n> s/For more details s/S/\n\nDone.",
			"disapproval": false,
			"date": "2013-01-03 22:51:46.619540",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"dsallings@gmail.com",
				"kamil.kisiel@gmail.com",
				"minux.ma@gmail.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dsallings@gmail.com, kamil.kisiel@gmail.com, minux.ma@gmail.com, bradfitz@golang.org, rsc@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-03 22:54:52.884590",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nBut wait for rsc, too.",
			"disapproval": false,
			"date": "2013-01-06 21:32:00.535020",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Of course. The next step is to work with the builder owners to get their builders updated to the new version. Then we can return to this CL. \r\n\r\nOn 07/01/2013, at 8:32, adg@golang.org wrote:\r\n\r\n> LGTM\r\n> \r\n> But wait for rsc, too.\r\n> \r\n> https://codereview.appspot.com/6941058/\r\n",
			"disapproval": false,
			"date": "2013-01-06 21:37:46.726520",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-08 23:31:36.284240",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/08 23:31:36, dfc wrote:\n> Hello mailto:rsc@golang.org, mailto:adg@golang.org (cc: mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nWith two exceptions the new builder code has been rolled out. \n\n@rsc, can I ask for some of your time to review this CL acknowledging that I would not submit until the remaining builders have been updated.",
			"disapproval": false,
			"date": "2013-01-08 23:35:01.853990",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jan 10, 2013 at 4:58 AM, <rsc@golang.org> wrote:\r\n\r\n> I will leave the code review to adg. The new behavior is fine with me.\r\n> I'm a little sad that we can't have nice things but I understand the\r\n> reason.\r\n>\r\nOut of curiosity, what do you mean by saying \"we can't have nice things\"?\r\n",
			"disapproval": false,
			"date": "2013-01-09 21:15:01.427390",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you. Please accept my apologies for making the go tool a little\r\nless awesome.\r\n\r\nOn Thu, Jan 10, 2013 at 9:05 AM,  <adg@golang.org> wrote:\r\n> LGTM\r\n>\r\n> https://codereview.appspot.com/6941058/\r\n",
			"disapproval": false,
			"date": "2013-01-09 22:08:26.651830",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I will leave the code review to adg. The new behavior is fine with me. I'm a little sad that we can't have nice things but I understand the reason.",
			"disapproval": false,
			"date": "2013-01-09 20:58:10.358090",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 10 January 2013 08:55, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> I am not sure where the phrase comes from. Typically it is like \"This\r\n> is why we can't have nice things\", said after someone has broken\r\n> something, actually or metaphorically. The internet is failing me for\r\n> finding a page explaining it better.\r\n>\r\n\r\nhttp://knowyourmeme.com/memes/this-is-why-we-cant-have-nice-things\r\n",
			"disapproval": false,
			"date": "2013-01-09 22:05:09.856010",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": ">> I will leave the code review to adg. The new behavior is fine with me.\r\n>> I'm a little sad that we can't have nice things but I understand the\r\n>> reason.\r\n>\r\n> Out of curiosity, what do you mean by saying \"we can't have nice things\"?\r\n\r\nI am not sure where the phrase comes from. Typically it is like \"This\r\nis why we can't have nice things\", said after someone has broken\r\nsomething, actually or metaphorically. The internet is failing me for\r\nfinding a page explaining it better.\r\n\r\nIn this case, I meant that I regret that we cannot provide the ability\r\nto install into GOROOT. We are being forced to take it out because it\r\nconfuses users, even though it helps (some) core developers. It's not\r\na big deal. I agree with taking it out, I'm just a little sad to see\r\nit go.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-09 21:55:25.410080",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-09 22:05:14.934520",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"rsc@golang.org",
				"adg@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=adf4e96e9aa4 ***\n\ncmd/go: remove $GOROOT as a go get target\n\nFixes issue 4186.\n\nBack in the day, before the Go 1.0 release, $GOROOT was mandatory for building from source. Fast forward to now and $GOPATH is mandatory and $GOROOT is optional, and mainly used by those who use the binary distribution in uncommon places.\n\nFor example, most novices at least know about `sudo` as they would have used it to install the binary tarball into /usr/local. It is logical they would use the `sudo` hammer to `go get` other Go packages when faced with a permission error talking about the path they just had to use `sudo` on last time.\n\nEven if they had read the documentation and set $GOPATH, go get will not work as expected as `sudo` masks most environment variables.\n\nllucky(~) % ~/go/bin/go env | grep GOPATH\nGOPATH=\"/home/dfc\"\nlucky(~) % sudo ~/go/bin/go env | grep GOPATH\nGOPATH=\"\"\n\nThis CL therefore proposes to remove support for using `go get` to download source into $GOROOT.\n\nThis CL also proposes an error when GOPATH=$GOROOT, as this is another place where new Go users can get stuck.\n\nFurther discussion: https://groups.google.com/d/topic/golang-nuts/VIg3fjHiHRI/discussion\n\nR=rsc, adg, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/6941058",
			"disapproval": false,
			"date": "2013-01-09 22:57:23.071990",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6941058: cmd/go: remove $GOROOT as a go get target",
	"created": "2012-12-15 00:58:20.966510",
	"patchsets": [
		1,
		2001,
		8001,
		13001,
		14001,
		18001,
		16002,
		24006,
		32001,
		34001,
		36001,
		38001,
		43001,
		46001,
		51001,
		50002
	],
	"modified": "2013-01-11 05:58:24.929920",
	"closed": true,
	"issue": 6941058
}