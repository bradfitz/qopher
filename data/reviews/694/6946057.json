{
	"description": "net/smtp: add optional Hello method\n\nAdd a Hello method that allows clients to set the server sent in the EHLO/HELO exchange; the default remains localhost.\nBased on CL 5555045 by rsc.\n\nFixes issue 4219.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=d68fadb4593f ***\n\nnet/smtp: add optional Hello method\n\nAdd a Hello method that allows clients to set the server sent in the EHLO/HELO exchange; the default remains localhost.\nBased on CL 5555045 by rsc.\n\nFixes issue 4219.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/6946057\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-12-17 01:19:29.630120",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Rick,\r\n\r\nWould you be able to look into this issue,\r\nhttps://code.google.com/p/go/issues/detail?id=4559, which I think is\r\nrelated to the tests that you added in this CL.\r\n\r\nCheers\r\n\r\nDave\r\n\r\nOn Mon, Dec 17, 2012 at 12:19 PM,  <rsc@golang.org> wrote:\r\n> *** Submitted as\r\n> https://code.google.com/p/go/source/detail?r=d68fadb4593f ***\r\n>\r\n>\r\n> net/smtp: add optional Hello method\r\n>\r\n> Add a Hello method that allows clients to set the server sent in the\r\n> EHLO/HELO exchange; the default remains localhost.\r\n> Based on CL 5555045 by rsc.\r\n>\r\n> Fixes issue 4219.\r\n>\r\n> R=golang-dev, rsc\r\n> CC=golang-dev\r\n> https://codereview.appspot.com/6946057\r\n>\r\n> Committer: Russ Cox <rsc@golang.org>\r\n>\r\n>\r\n> https://codereview.appspot.com/6946057/\r\n",
			"disapproval": false,
			"date": "2012-12-17 04:00:27.409680",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I fixed that with this CL: https://codereview.appspot.com/6944057\r\n\r\nOn Monday, December 17, 2012 10:35:27 AM UTC-5, rsc wrote:\r\n>\r\n> I tried this: \r\n>\r\n> diff -r d2c79fccab13 src/pkg/net/smtp/smtp_test.go \r\n> --- a/src/pkg/net/smtp/smtp_test.go Mon Dec 17 23:01:36 2012 +0800 \r\n> +++ b/src/pkg/net/smtp/smtp_test.go Mon Dec 17 10:34:35 2012 -0500 \r\n> @@ -385,7 +385,11 @@ \r\n>   } \r\n>   defer l.Close() \r\n>\r\n> + doneWriting := make(chan bool, 1) \r\n>   go func(l net.Listener, data []string, w *bufio.Writer) { \r\n> + defer func() { \r\n> + doneWriting <- true \r\n> + }() \r\n>   i := 0 \r\n>   conn, err := l.Accept() \r\n>   if err != nil { \r\n> @@ -429,10 +433,11 @@ \r\n>   t.Errorf(\"%v\", err) \r\n>   } \r\n>\r\n> + <-doneWriting \r\n>   bcmdbuf.Flush() \r\n>   actualcmds := cmdbuf.String() \r\n>   if client != actualcmds { \r\n> - t.Errorf(\"Got:\\n%s\\nExpected:\\n%s\", actualcmds, client) \r\n> + t.Errorf(\"Got:\\n%q\\nExpected:\\n%q\", actualcmds, client) \r\n>   } \r\n>  } \r\n>\r\n> but now I get (from GOMAXPROCS=2 go test -race): \r\n>\r\n> smtp_test.go:440: Got: \r\n> \"EHLO localhost\\r\\nHELO localhost\\r\\nMAIL \r\n> FROM:<te...@example.com <javascript:>>\\r\\nRCPT \r\n> TO:<ot...@example.com <javascript:>>\\r\\nDATA\\r\\nFrom: te...@example.com<javascript:>\\r\\nTo: \r\n>\r\n> ot...@example.com <javascript:>\\r\\nSubject: SendMail test\\r\\n\\r\\nSendMail \r\n> is working \r\n> for me.\\r\\n.\\r\\nQUIT\\r\\n\\r\\n\" \r\n> Expected: \r\n> \"EHLO localhost\\r\\nHELO localhost\\r\\nMAIL \r\n> FROM:<te...@example.com <javascript:>>\\r\\nRCPT \r\n> TO:<ot...@example.com <javascript:>>\\r\\nDATA\\r\\nFrom: te...@example.com<javascript:>\\r\\nTo: \r\n>\r\n> ot...@example.com <javascript:>\\r\\nSubject: SendMail test\\r\\n\\r\\nSendMail \r\n> is working \r\n> for me.\\r\\n.\\r\\nQUIT\\r\\n\" \r\n>\r\n> The difference between the two strings is the doubled \\r\\n after QUIT \r\n> in the 'Got' string. \r\n>\r\n> Russ \r\n>\r\n",
			"disapproval": false,
			"date": "2012-12-17 15:37:57.168940",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL",
			"disapproval": false,
			"date": "2012-12-17 01:16:30.400530",
			"approval": false
		},
		{
			"sender": "rickarnoldjr@gmail.com",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-12-14 22:34:27.515820",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rickarnoldjr@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6946057/diff/4001/src/pkg/net/smtp/smtp.go\nFile src/pkg/net/smtp/smtp.go (right):\n\nhttps://codereview.appspot.com/6946057/diff/4001/src/pkg/net/smtp/smtp.go#newcode85\nsrc/pkg/net/smtp/smtp.go:85: return errors.New(\"Hello called after other SMTP exchanges\")\n\"smtp: Hello called after other methods\"",
			"disapproval": false,
			"date": "2012-12-17 00:08:04.970960",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I tried this:\r\n\r\ndiff -r d2c79fccab13 src/pkg/net/smtp/smtp_test.go\r\n--- a/src/pkg/net/smtp/smtp_test.go Mon Dec 17 23:01:36 2012 +0800\r\n+++ b/src/pkg/net/smtp/smtp_test.go Mon Dec 17 10:34:35 2012 -0500\r\n@@ -385,7 +385,11 @@\r\n  }\r\n  defer l.Close()\r\n\r\n+ doneWriting := make(chan bool, 1)\r\n  go func(l net.Listener, data []string, w *bufio.Writer) {\r\n+ defer func() {\r\n+ doneWriting <- true\r\n+ }()\r\n  i := 0\r\n  conn, err := l.Accept()\r\n  if err != nil {\r\n@@ -429,10 +433,11 @@\r\n  t.Errorf(\"%v\", err)\r\n  }\r\n\r\n+ <-doneWriting\r\n  bcmdbuf.Flush()\r\n  actualcmds := cmdbuf.String()\r\n  if client != actualcmds {\r\n- t.Errorf(\"Got:\\n%s\\nExpected:\\n%s\", actualcmds, client)\r\n+ t.Errorf(\"Got:\\n%q\\nExpected:\\n%q\", actualcmds, client)\r\n  }\r\n }\r\n\r\nbut now I get (from GOMAXPROCS=2 go test -race):\r\n\r\nsmtp_test.go:440: Got:\r\n\"EHLO localhost\\r\\nHELO localhost\\r\\nMAIL\r\nFROM:<test@example.com>\\r\\nRCPT\r\nTO:<other@example.com>\\r\\nDATA\\r\\nFrom: test@example.com\\r\\nTo:\r\nother@example.com\\r\\nSubject: SendMail test\\r\\n\\r\\nSendMail is working\r\nfor me.\\r\\n.\\r\\nQUIT\\r\\n\\r\\n\"\r\nExpected:\r\n\"EHLO localhost\\r\\nHELO localhost\\r\\nMAIL\r\nFROM:<test@example.com>\\r\\nRCPT\r\nTO:<other@example.com>\\r\\nDATA\\r\\nFrom: test@example.com\\r\\nTo:\r\nother@example.com\\r\\nSubject: SendMail test\\r\\n\\r\\nSendMail is working\r\nfor me.\\r\\n.\\r\\nQUIT\\r\\n\"\r\n\r\nThe difference between the two strings is the doubled \\r\\n after QUIT\r\nin the 'Got' string.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-12-17 15:35:30.107480",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-12-17 01:18:37.474030",
			"approval": true
		}
	],
	"owner_email": "rickarnoldjr@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rick",
	"subject": "code review 6946057: net/smtp: add optional Hello method",
	"created": "2012-12-14 22:32:36.795420",
	"patchsets": [
		1,
		2001,
		4001,
		8001
	],
	"modified": "2012-12-17 04:00:27.484210",
	"closed": true,
	"issue": 6946057
}