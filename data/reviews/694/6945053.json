{
	"description": "runtime: use mp instead of m for local variable name in favour of the convention.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm not sure such cleanups are worth it.\r\n\r\nIt's okay to clean up code if you're near it in an existing CL (sometimes),\r\nor if it cleans things up for the end user (improves docs, etc), but just\r\nrenaming internal variables has very little benefit for the review overhead.\r\n\r\n\r\nOn Fri, Dec 14, 2012 at 7:46 PM, <diogin@gmail.com> wrote:\r\n\r\n> Thanks, after a search on package runtime, I found more. I'll update the\r\n> CL later.\r\n>\r\n>\r\n> On 2012/12/14 17:15:33, bradfitz wrote:\r\n>\r\n>> CgoThreadStart also uses m instead of mp, FWIW.\r\n>>\r\n>\r\n>\r\n>  On Thu, Dec 13, 2012 at 6:57 PM, <mailto:diogin@gmail.com> wrote:\r\n>>\r\n>\r\n>  > Reviewers: http://golang-dev_**googlegroups.com<http://golang-dev_googlegroups.com>\r\n>> ,\r\n>> >\r\n>> > Message:\r\n>> > Hello mailto:golang-dev@**googlegroups.com<golang-dev@googlegroups.com>(cc:\r\n>>\r\n> mailto:golang-dev@**googlegroups.com <golang-dev@googlegroups.com>),\r\n>\r\n>  >\r\n>> > I'd like you to review this change to\r\n>> > https://code.google.com/p/go\r\n>> >\r\n>> >\r\n>> > Description:\r\n>> > runtime: use mp instead of m for local variable name in favour of\r\n>>\r\n> the\r\n>\r\n>> > convention.\r\n>> >\r\n>> > Please review this at\r\n>>\r\n>\r\n> https://codereview.appspot.****com/6945053/%3Chttps://coderev**\r\n> iew.appspot.com/6945053/ <http://codereview.appspot.com/6945053/>>\r\n>\r\n>  >\r\n>> > Affected files:\r\n>> >   M src/pkg/runtime/proc.c\r\n>> >\r\n>> >\r\n>> > Index: src/pkg/runtime/proc.c\r\n>> >\r\n>>\r\n> ==============================****============================**\r\n> ==**=======\r\n>\r\n>> > --- a/src/pkg/runtime/proc.c\r\n>> > +++ b/src/pkg/runtime/proc.c\r\n>> > @@ -264,13 +264,13 @@\r\n>> >  static void\r\n>> >  schedunlock(void)\r\n>> >  {\r\n>> > -       M *m;\r\n>> > +       M *mp;\r\n>> >\r\n>> > -       m = mwakeup;\r\n>> > +       mp = mwakeup;\r\n>> >         mwakeup = nil;\r\n>> >         runtime\u00b7unlock(&runtime\u00b7sched)****;\r\n>> > -       if(m != nil)\r\n>> > -               runtime\u00b7notewakeup(&m->****havenextg);\r\n>> > +       if(mp != nil)\r\n>> > +               runtime\u00b7notewakeup(&mp->****havenextg);\r\n>> >  }\r\n>> >\r\n>> >  void\r\n>> >\r\n>> >\r\n>> >\r\n>>\r\n>\r\n>\r\n>\r\n> https://codereview.appspot.**com/6945053/<https://codereview.appspot.com/6945053/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-12-15 03:55:31.952200",
			"approval": false
		},
		{
			"sender": "diogin@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Russ,\r\n\r\nI'm still working on it, looks there are a lot of changes. The cleanup\r\nshould be careful enough as \"m\" or \"g\" may occasionally refer to the global\r\nm and g.\r\n\r\nShould be finished in many hours (two days for having weekend :) )\r\n\r\nThanks!\r\n \u5728 2012-12-17 AM9:15\uff0c <rsc@golang.org>\u5199\u9053\uff1a\r\n\r\n> looks good. let us know when you've updated the CL.\r\n>\r\n>\r\n> https://codereview.appspot.**com/6945053/<https://codereview.appspot.com/6945053/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-12-17 02:08:54.955420",
			"approval": false
		},
		{
			"sender": "diogin@gmail.com",
			"recipients": [
				"diogin@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-12-17 03:21:56.317960",
			"approval": false
		},
		{
			"sender": "diogin@gmail.com",
			"recipients": [
				"diogin@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-12-14 02:57:07.561830",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"diogin@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "looks good. let us know when you've updated the CL.",
			"disapproval": false,
			"date": "2012-12-17 01:15:32.615670",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "CgoThreadStart also uses m instead of mp, FWIW.\r\n\r\n\r\nOn Thu, Dec 13, 2012 at 6:57 PM, <diogin@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> runtime: use mp instead of m for local variable name in favour of the\r\n> convention.\r\n>\r\n> Please review this at https://codereview.appspot.**com/6945053/<https://codereview.appspot.com/6945053/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/proc.c\r\n>\r\n>\r\n> Index: src/pkg/runtime/proc.c\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/proc.c\r\n> +++ b/src/pkg/runtime/proc.c\r\n> @@ -264,13 +264,13 @@\r\n>  static void\r\n>  schedunlock(void)\r\n>  {\r\n> -       M *m;\r\n> +       M *mp;\r\n>\r\n> -       m = mwakeup;\r\n> +       mp = mwakeup;\r\n>         mwakeup = nil;\r\n>         runtime\u00b7unlock(&runtime\u00b7sched)**;\r\n> -       if(m != nil)\r\n> -               runtime\u00b7notewakeup(&m->**havenextg);\r\n> +       if(mp != nil)\r\n> +               runtime\u00b7notewakeup(&mp->**havenextg);\r\n>  }\r\n>\r\n>  void\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-12-14 17:15:33.519730",
			"approval": false
		},
		{
			"sender": "diogin@gmail.com",
			"recipients": [
				"diogin@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks, after a search on package runtime, I found more. I'll update the CL later.\n\nOn 2012/12/14 17:15:33, bradfitz wrote:\n> CgoThreadStart also uses m instead of mp, FWIW.\n> \n> \n> On Thu, Dec 13, 2012 at 6:57 PM, <mailto:diogin@gmail.com> wrote:\n> \n> > Reviewers: http://golang-dev_googlegroups.com,\n> >\n> > Message:\n> > Hello mailto:golang-dev@googlegroups.com (cc: mailto:golang-dev@googlegroups.com),\n> >\n> > I'd like you to review this change to\n> > https://code.google.com/p/go\n> >\n> >\n> > Description:\n> > runtime: use mp instead of m for local variable name in favour of the\n> > convention.\n> >\n> > Please review this at\n> https://codereview.appspot.**com/6945053/%3Chttps://codereview.appspot.com/6945053/>\n> >\n> > Affected files:\n> >   M src/pkg/runtime/proc.c\n> >\n> >\n> > Index: src/pkg/runtime/proc.c\n> > ==============================**==============================**=======\n> > --- a/src/pkg/runtime/proc.c\n> > +++ b/src/pkg/runtime/proc.c\n> > @@ -264,13 +264,13 @@\n> >  static void\n> >  schedunlock(void)\n> >  {\n> > -       M *m;\n> > +       M *mp;\n> >\n> > -       m = mwakeup;\n> > +       mp = mwakeup;\n> >         mwakeup = nil;\n> >         runtime\u00b7unlock(&runtime\u00b7sched)**;\n> > -       if(m != nil)\n> > -               runtime\u00b7notewakeup(&m->**havenextg);\n> > +       if(mp != nil)\n> > +               runtime\u00b7notewakeup(&mp->**havenextg);\n> >  }\n> >\n> >  void\n> >\n> >\n> >",
			"disapproval": false,
			"date": "2012-12-15 03:46:48.213000",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "In general I agree with Brad. However, for the specific case of mp and\r\ngp for local variables, I am happy to accept CLs that clean that up.\r\nIt's too easy to get confused.\r\n",
			"disapproval": false,
			"date": "2012-12-15 18:17:57.518740",
			"approval": false
		}
	],
	"owner_email": "diogin@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "diogin",
	"subject": "code review 6945053: runtime: use mp instead of m for local variable name in...",
	"created": "2012-12-14 02:54:43.901600",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2012-12-17 03:21:57.978960",
	"closed": true,
	"issue": 6945053
}