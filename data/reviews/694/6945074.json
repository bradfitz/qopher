{
	"description": "gotour: automatically open browser window if possible\nFixes issue 51.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-18 16:58:48.597780",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go-tour/",
			"disapproval": false,
			"date": "2012-12-18 14:36:15.015240",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6945074/diff/3004/gotour/local.go\nFile gotour/local.go (right):\n\nhttps://codereview.appspot.com/6945074/diff/3004/gotour/local.go#newcode199\ngotour/local.go:199: for {\nIf someone runs gotour -http=:8080, this loop will run forever. Please add a maximum number of iterations.\n\nThere should be some logic to detect whether a hostname is provided, and if not it should substitute 127.0.0.1 (I guess).\n\nhttps://codereview.appspot.com/6945074/diff/3004/gotour/local.go#newcode205\ngotour/local.go:205: time.Sleep(10 * time.Millisecond)\ndo we really want to try 100 times per second? 100 milliseconds should be ok.\n\nhttps://codereview.appspot.com/6945074/diff/3004/gotour/local.go#newcode221\ngotour/local.go:221: log.Printf(\"A browser window should open, if not, please visit %s manually\", url)\ns/ manually//\n\nhttps://codereview.appspot.com/6945074/diff/3004/gotour/local.go#newcode221\ngotour/local.go:221: log.Printf(\"A browser window should open, if not, please visit %s manually\", url)\ns/, if/. If/",
			"disapproval": false,
			"date": "2012-12-18 22:22:04.088550",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go-tour/source/detail?r=680e321d81fd ***\n\ngotour: automatically open browser window if possible\nFixes issue 51.\n\nR=golang-dev, adg\nCC=golang-dev\nhttps://codereview.appspot.com/6945074",
			"disapproval": false,
			"date": "2012-12-20 18:52:34.082300",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM\n\nWe should add a flag -openbrowser=true so that you can run the tour without opening a browser.",
			"disapproval": true,
			"date": "2012-12-18 23:19:49.065480",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6945074/diff/3004/gotour/local.go\nFile gotour/local.go (right):\n\nhttps://codereview.appspot.com/6945074/diff/3004/gotour/local.go#newcode199\ngotour/local.go:199: for {\nOn 2012/12/18 22:22:04, adg wrote:\n> If someone runs gotour -http=:8080, this loop will run forever. Please add a\n> maximum number of iterations.\nDone\n> There should be some logic to detect whether a hostname is provided, and if not\n> it should substitute 127.0.0.1 (I guess).\nDone. Actually, this change makes it impossible to bind on wildcard address,\nhowever, i think it is correct due to security implications (if the user wants, he can\nalways bind to a specific network address).\n\nhttps://codereview.appspot.com/6945074/diff/3004/gotour/local.go#newcode205\ngotour/local.go:205: time.Sleep(10 * time.Millisecond)\nOn 2012/12/18 22:22:04, adg wrote:\n> do we really want to try 100 times per second? 100 milliseconds should be ok.\nDone.\n\nhttps://codereview.appspot.com/6945074/diff/3004/gotour/local.go#newcode221\ngotour/local.go:221: log.Printf(\"A browser window should open, if not, please visit %s manually\", url)\nOn 2012/12/18 22:22:04, adg wrote:\n> s/, if/. If/\nBoth done.",
			"disapproval": false,
			"date": "2012-12-18 23:07:08.579630",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-18 23:07:37.431690",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6945074/diff/20001/gotour/local.go\nFile gotour/local.go (right):\n\nhttps://codereview.appspot.com/6945074/diff/20001/gotour/local.go#newcode215\ngotour/local.go:215: if tries != 0 && startBrowser(url) == nil {\ns/!=/>/",
			"disapproval": false,
			"date": "2012-12-18 23:19:07.938050",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Dec 19, 2012 at 7:19 AM, <adg@golang.org> wrote:\r\n\r\n> We should add a flag -openbrowser=true so that you can run the tour\r\n> without opening a browser.\r\n>\r\nin fact, my local version had just that option to facilitate the testing of\r\nvarious -http\r\nparameters.\r\n",
			"disapproval": false,
			"date": "2012-12-18 23:21:41.284100",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.",
			"disapproval": false,
			"date": "2012-12-18 23:24:25.812140",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.",
			"disapproval": false,
			"date": "2012-12-19 16:20:10.465510",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6945074/diff/30001/gotour/local.go\nFile gotour/local.go (right):\n\nhttps://codereview.appspot.com/6945074/diff/30001/gotour/local.go#newcode84\ngotour/local.go:84: go waitAndStartBrowser(\"http://\" + host + \":\" + port)\nthis is kind of nitpicky, but I would prefer these two new functions weren't intermingled\n\nurl := ...\ngo func() {\n  if *openBrowser && waitForServer(url) && startBrowser(url) {\n        log.Printf(\"A browser window...\")\n        return\n  }\n  log.Printf(\"Please open your...\")\n}()\n\nhttps://codereview.appspot.com/6945074/diff/30001/gotour/local.go#newcode204\ngotour/local.go:204: func waitAndStartBrowser(url string) {\nreturn a bool\n\nhttps://codereview.appspot.com/6945074/diff/30001/gotour/local.go#newcode206\ngotour/local.go:206: tries := 100\n10 seconds seems a long time to wait. reduce to 20 tries? or even 10?\n\nhttps://codereview.appspot.com/6945074/diff/30001/gotour/local.go#newcode224\ngotour/local.go:224: func startBrowser(url string) error {\nwe don't use the error, so just return a bool",
			"disapproval": false,
			"date": "2012-12-19 00:28:01.312560",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks!",
			"disapproval": false,
			"date": "2012-12-19 20:53:44.031610",
			"approval": true
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6945074: gotour: automatically open browser window if possible",
	"created": "2012-12-18 14:15:40.716340",
	"patchsets": [
		1,
		2001,
		5001,
		6002,
		8001,
		7003,
		8003,
		2002,
		3004,
		20001,
		30001,
		30002,
		35004
	],
	"modified": "2012-12-20 18:52:38.728780",
	"closed": true,
	"issue": 6945074
}