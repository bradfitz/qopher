{
	"description": "exp/types: completed typechecking of parameter passing\n\nDetails:\n- fixed variadic parameter passing and calls of the form f(g())\n- fixed implementation of ^x for unsigned constants x\n- fixed assignability of untyped booleans\n- resolved a few TODOs, various minor fixes\n- enabled many more tests (only 6 std packages don't typecheck)",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-12-12 06:27:37.161860",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/gotype/gotype_test.go\nFile src/pkg/exp/gotype/gotype_test.go (right):\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/gotype/gotype_test.go#newcode155\nsrc/pkg/exp/gotype/gotype_test.go:155: // \"net\", // src/pkg/net/lookup_unix.go:56:20: undeclared name: cgoLookupHost\nFWIW if you set up your build.Context with CgoEnabled=false you should be able to compile net.\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/gotype/gotype_test.go#newcode200\nsrc/pkg/exp/gotype/gotype_test.go:200: // \"time\", // local const decls without initialization expressions\nWhat does this mean? Just curious.\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/types/expr.go\nFile src/pkg/exp/types/expr.go (right):\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/types/expr.go#newcode1085\nsrc/pkg/exp/types/expr.go:1085: // is the case without evaluating the argument.\ns/evaluating/checking/?\nOr else I'm not sure what kind of evaluating you mean. Constant evaluation?\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/types/predicates.go\nFile src/pkg/exp/types/predicates.go (right):\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/types/predicates.go#newcode247\nsrc/pkg/exp/types/predicates.go:247: // case UntypedNil:\nIf you put this at the top of the switch maybe gofmt will not indent it?",
			"disapproval": false,
			"date": "2012-12-17 16:30:12.025000",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/gotype/gotype_test.go\nFile src/pkg/exp/gotype/gotype_test.go (right):\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/gotype/gotype_test.go#newcode155\nsrc/pkg/exp/gotype/gotype_test.go:155: // \"net\", // src/pkg/net/lookup_unix.go:56:20: undeclared name: cgoLookupHost\nOn 2012/12/17 16:30:12, rsc wrote:\n> FWIW if you set up your build.Context with CgoEnabled=false you should be able\n> to compile net.\n\nok. will do going forward.\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/gotype/gotype_test.go#newcode200\nsrc/pkg/exp/gotype/gotype_test.go:200: // \"time\", // local const decls without initialization expressions\nOn 2012/12/17 16:30:12, rsc wrote:\n> What does this mean? Just curious.\n\nThere's an initial phase which determines the initialization expressions for declarations such as:\n\nconst (\n   c1 = some_expr(iota)\n   c2\n   c3\n)\n\ni.e., the expressions for c2, c3, etc. It doesn't do it if the declaration is local (inside a function) and so those expressions are missing.\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/types/expr.go\nFile src/pkg/exp/types/expr.go (right):\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/types/expr.go#newcode1085\nsrc/pkg/exp/types/expr.go:1085: // is the case without evaluating the argument.\nOn 2012/12/17 16:30:12, rsc wrote:\n> s/evaluating/checking/?\n> Or else I'm not sure what kind of evaluating you mean. Constant evaluation?\n\nyes. fixed.\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/types/predicates.go\nFile src/pkg/exp/types/predicates.go (right):\n\nhttps://codereview.appspot.com/6930053/diff/6026/src/pkg/exp/types/predicates.go#newcode247\nsrc/pkg/exp/types/predicates.go:247: // case UntypedNil:\nOn 2012/12/17 16:30:12, rsc wrote:\n> If you put this at the top of the switch maybe gofmt will not indent it?\n\nDone.",
			"disapproval": false,
			"date": "2012-12-17 19:33:23.529750",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=72474df5cf47 ***\n\nexp/types: completed typechecking of parameter passing\n\nDetails:\n- fixed variadic parameter passing and calls of the form f(g())\n- fixed implementation of ^x for unsigned constants x\n- fixed assignability of untyped booleans\n- resolved a few TODOs, various minor fixes\n- enabled many more tests (only 6 std packages don't typecheck)\n\nR=rsc\nCC=golang-dev\nhttps://codereview.appspot.com/6930053",
			"disapproval": false,
			"date": "2012-12-17 19:36:06.550180",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 6930053: exp/types: completed typechecking of parameter passing",
	"created": "2012-12-12 01:30:00.001520",
	"patchsets": [
		1,
		2001,
		5001,
		7001,
		8012,
		16,
		4013,
		2015,
		6026,
		14001,
		18001
	],
	"modified": "2012-12-17 20:50:25.518840",
	"closed": true,
	"issue": 6930053
}