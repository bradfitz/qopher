{
	"description": "encoding/xml: Marshal \",any\" fields\n\nFixes issue 3559.\n\nThis makes Marshal handle fields marked \",any\" instead of ignoring\nthem. That makes Marshal more symmetrical with Unmarshal, which seems\nto have been a design goal.\n\nNote some test cases were changed, because this patch changes\nmarshalling behavior. I think the previous behavior was buggy, but\nthere's still a backward-compatibility question to consider.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com",
		"n13m3y3r@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"chris.jones.yar@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please add a test with an AnyHolder and \",any,omitempty\". That should behave like in your test cases but not add the new fields.\n\nPlease add a test with a []AnyHolder and \",any\". It should be able to handle multiple unknown blocks and reproduce them during Marshal. It should also not generate any XML if there was nothing in it, because the loop over the slice will execute 0 times.\n\nGustavo, any thoughts?",
			"disapproval": false,
			"date": "2012-12-17 15:04:03.833530",
			"approval": false
		},
		{
			"sender": "chris.jones.yar@gmail.com",
			"recipients": [
				"chris.jones.yar@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-12-16 04:19:56.049390",
			"approval": false
		},
		{
			"sender": "chris.jones.yar@gmail.com",
			"recipients": [
				"chris.jones.yar@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com, n13m3y3r@gmail.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-12-18 05:15:15.176000",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"chris.jones.yar@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=7ea16cd2859c ***\n\nencoding/xml: Marshal \",any\" fields\n\nFixes issue 3559.\n\nThis makes Marshal handle fields marked \",any\" instead of ignoring\nthem. That makes Marshal more symmetrical with Unmarshal, which seems\nto have been a design goal.\n\nNote some test cases were changed, because this patch changes\nmarshalling behavior. I think the previous behavior was buggy, but\nthere's still a backward-compatibility question to consider.\n\nR=rsc\nCC=golang-dev, n13m3y3r\nhttps://codereview.appspot.com/6938068\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2012-12-22 15:00:44.316260",
			"approval": false
		}
	],
	"owner_email": "chris.jones.yar@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "cjyar",
	"subject": "code review 6938068: encoding/xml: Marshal \",any\" fields",
	"created": "2012-12-16 04:17:07.688090",
	"patchsets": [
		1,
		2001,
		7002
	],
	"modified": "2012-12-22 15:00:44.316260",
	"closed": false,
	"issue": 6938068
}