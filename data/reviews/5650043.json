{
	"description": "net: make parseProcNetIGMP robust\n\nFixes issue 2826.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"borman@google.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 10, 2012 at 12:57 AM,  <borman@google.com> wrote:\n\n> Yes, this appears it should work, but is still not testable and is still\n> fragile. \u00a0The real difference between an interface line and its\n> following lines is if the line is indented or not.\n\nSorry, I don't get it.\n\nigmp_mc_seq_show() in net/ipv4/igmp.c\nseq_printf(seq, \"%d\\t%-10s: %5d %7s\\n\", ...); // 4 verbs\nseq_printf(seq, \"\\t\\t\\t\\t%08X %5d %d:%08lX\\t\\t%d\\n\", ...); // 5 verbs\n\nI think the number of verbs is enough to distinguish lines, isn't it?\n",
			"disapproval": false,
			"date": "2012-02-09 17:26:25.968207",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Feb 9, 2012 at 13:00, Paul Borman <borman@google.com> wrote:\n> As I said. \u00a0It should work, but seems fragile. \u00a0There still is no test case\n> for this issue because it is always parsing an unknown live file. \u00a0This\n> seems more like a band-aid (which maybe the correct short term fix),\n\nThis is not really feedback that can be acted upon.  Do you have a link\nto the specification for this file, or specific examples that should be used\nas test cases?\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-09 18:38:04.934145",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Oh, sorry, that is the wrong link.  It was in the issue:\n\nhttp://code.google.com/p/go/**issues/detail?id=2826<http://code.google.com/p/go/issues/detail?id=2826>\n\n\nOn Thu, Feb 9, 2012 at 12:03 PM, Paul Borman <borman@google.com> wrote:\n\n> Yes.  From my first comment:\n>\n> http://codereview.appspot.com/**5650043/<http://codereview.appspot.com/5650043/>\n>\n> The code as written is terribly difficult to test.  It reads live system\n> information so it only sees a subset of possibilities.\n>\n> I am uncomfortable with using the number of fields (it used to be 5 fields\n> for the interface and 4 for the address, now it is 4 for the interface and\n> 5 for the address) when the better indicator is that the line with the\n> address starts with whitespace.\n>\n> On Thu, Feb 9, 2012 at 10:38 AM, Russ Cox <rsc@golang.org> wrote:\n>\n>> On Thu, Feb 9, 2012 at 13:00, Paul Borman <borman@google.com> wrote:\n>> > As I said.  It should work, but seems fragile.  There still is no test\n>> case\n>> > for this issue because it is always parsing an unknown live file.  This\n>> > seems more like a band-aid (which maybe the correct short term fix),\n>>\n>> This is not really feedback that can be acted upon.  Do you have a link\n>> to the specification for this file, or specific examples that should be\n>> used\n>> as test cases?\n>>\n>> Russ\n>>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-09 20:05:05.003456",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Would you like to send a CL for Mikio to review?\n",
			"disapproval": false,
			"date": "2012-02-09 20:42:35.979215",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 10, 2012 at 5:59 AM, Paul Borman <borman@google.com> wrote:\n\n> it used to be in\u00a05617051. \u00a0I just looked and it did not appear there anymore\n> :-/\n\nAha ;) I thought, imagined that the empty CL is kinda message from\nyou that indicates:\n- here we have three options as you described like following\n  a) apply quick and a bit fragile patch\n  b) apply a bit robust string handling patch\n  c) replace, improve net internal string handling stuff\n- unfortunately you didn't make your space time to work on this issus\n- consequently you unwillingly admit to take (a), to postpone (b) and (c)\n\n> I have re-uploaded it:\n>\n> http://codereview.appspot.com/5617051\n>\n> I will go find it again. \u00a0I didn't \"publish\" it (I just uploaded) as I was\n> using it to give Mikoh an example.\n\nI'm happy to see CL 5617051, I will abandon CL 5650043.\n",
			"disapproval": false,
			"date": "2012-02-10 00:55:08.508475",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"borman@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-02-10 01:17:14.526005",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"borman@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello borman@google.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-09 15:07:11.267172",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"borman@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes, this appears it should work, but is still not testable and is still fragile.  The real difference between an interface line and its following lines is if the line is indented or not.",
			"disapproval": false,
			"date": "2012-02-09 15:57:24.603149",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "As I said.  It should work, but seems fragile.  There still is no test case\nfor this issue because it is always parsing an unknown live file.  This\nseems more like a band-aid (which maybe the correct short term fix),\n\nOn Thu, Feb 9, 2012 at 9:26 AM, Mikio Hara <mikioh.mikioh@gmail.com> wrote:\n\n> On Fri, Feb 10, 2012 at 12:57 AM,  <borman@google.com> wrote:\n>\n> > Yes, this appears it should work, but is still not testable and is still\n> > fragile.  The real difference between an interface line and its\n> > following lines is if the line is indented or not.\n>\n> Sorry, I don't get it.\n>\n> igmp_mc_seq_show() in net/ipv4/igmp.c\n> seq_printf(seq, \"%d\\t%-10s: %5d %7s\\n\", ...); // 4 verbs\n> seq_printf(seq, \"\\t\\t\\t\\t%08X %5d %d:%08lX\\t\\t%d\\n\", ...); // 5 verbs\n>\n> I think the number of verbs is enough to distinguish lines, isn't it?\n>\n",
			"disapproval": false,
			"date": "2012-02-09 18:00:53.620830",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes.  From my first comment:\n\nhttp://codereview.appspot.com/**5650043/<http://codereview.appspot.com/5650043/>\n\nThe code as written is terribly difficult to test.  It reads live system\ninformation so it only sees a subset of possibilities.\n\nI am uncomfortable with using the number of fields (it used to be 5 fields\nfor the interface and 4 for the address, now it is 4 for the interface and\n5 for the address) when the better indicator is that the line with the\naddress starts with whitespace.\n\nOn Thu, Feb 9, 2012 at 10:38 AM, Russ Cox <rsc@golang.org> wrote:\n\n> On Thu, Feb 9, 2012 at 13:00, Paul Borman <borman@google.com> wrote:\n> > As I said.  It should work, but seems fragile.  There still is no test\n> case\n> > for this issue because it is always parsing an unknown live file.  This\n> > seems more like a band-aid (which maybe the correct short term fix),\n>\n> This is not really feedback that can be acted upon.  Do you have a link\n> to the specification for this file, or specific examples that should be\n> used\n> as test cases?\n>\n> Russ\n>\n",
			"disapproval": false,
			"date": "2012-02-09 20:03:55.892335",
			"approval": false
		},
		{
			"sender": "borman@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "it used to be in 5617051.  I just looked and it did not appear there\nanymore :-/\n\nI have re-uploaded it:\n\nhttp://codereview.appspot.com/5617051\n\nI will go find it again.  I didn't \"publish\" it (I just uploaded) as I was\nusing it to give Mikoh an example.\n\nOn Thu, Feb 9, 2012 at 12:42 PM, Russ Cox <rsc@golang.org> wrote:\n\n> Would you like to send a CL for Mikio to review?\n>\n",
			"disapproval": false,
			"date": "2012-02-09 20:59:17.282553",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 5650043: net: make parseProcNetIGMP robust",
	"created": "2012-02-09 15:04:33.509200",
	"patchsets": [
		4001
	],
	"modified": "2012-02-10 01:17:16.158656",
	"closed": true,
	"issue": 5650043
}