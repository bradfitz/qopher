{
	"description": "cmd/dist: sse auto-detect",
	"cc": [
		"golang-dev@googlegroups.com",
		"dsymonds@golang.org",
		"minux.ma@gmail.com",
		"iant@golang.org",
		"alex.brainman@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-02 23:33:33.216260",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "should probably say which version of SSE you are checking for here.\r\nhttp://software.intel.com/en-us/articles/using-cpuid-to-detect-the-presence-of-sse-41-and-sse-42-instruction-sets\r\nsays that bits 19 and 20 specify SSE 4.1 and 4.2 respectively. This\r\nlooks like you are checking for SSE2?\r\n",
			"disapproval": false,
			"date": "2013-01-02 23:56:52.157460",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "yes, i'm checking for SSE2. added comments.\r\n",
			"disapproval": false,
			"date": "2013-01-02 23:58:01.548650",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI\n\nhttps://codereview.appspot.com/7035055/diff/8001/src/cmd/dist/unix.c\nFile src/cmd/dist/unix.c (right):\n\nhttps://codereview.appspot.com/7035055/diff/8001/src/cmd/dist/unix.c#newcode776\nsrc/cmd/dist/unix.c:776: : \"a\" (ax));\nDon't use both \"=a\" and \"a\".  Change the \"a\" to \"0\", as in\n\n        asm volatile(\"cpuid\"\n               : \"=a\" (dst[0]), \"=b\" (dst[1]), \"=c\" (dst[2]), \"=d\" (dst[3])\n                : \"0\" (ax));",
			"disapproval": false,
			"date": "2013-01-03 17:53:05.755240",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI'd prefer s/cansse/cansse2/ to be explicit, but not too fussed.",
			"disapproval": false,
			"date": "2013-01-03 00:00:37.893050",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7035055/diff/2012/src/cmd/dist/a.h\nFile src/cmd/dist/a.h (right):\n\nhttps://codereview.appspot.com/7035055/diff/2012/src/cmd/dist/a.h#newcode126\nsrc/cmd/dist/a.h:126: bool\tcansse(void);\nI am second to call new function cansse2.\n\nhttps://codereview.appspot.com/7035055/diff/2012/src/cmd/dist/windows.c\nFile src/cmd/dist/windows.c (right):\n\nhttps://codereview.appspot.com/7035055/diff/2012/src/cmd/dist/windows.c#newcode991\nsrc/cmd/dist/windows.c:991: {\nYour version works fine, so feel free to ignore my suggestion. But, perhaps, we can just ask windows instead (http://goo.gl/UYc5p):\n\ndiff -r d0d76b7fb219 src/cmd/dist/windows.c\n--- a/src/cmd/dist/windows.c\tThu Jan 03 10:06:04 2013 -0800\n+++ b/src/cmd/dist/windows.c\tFri Jan 04 10:27:40 2013 +1100\n@@ -971,4 +971,10 @@\n \treturn 0; // suffice for now\n }\n \n+bool\n+cansse(void)\n+{\n+\treturn IsProcessorFeaturePresent(PF_XMMI64_INSTRUCTIONS_AVAILABLE);\n+}\n+\n #endif // __WINDOWS__\n\nIt says that PF_XMMI64_INSTRUCTIONS_AVAILABLE feature is not supported on Windows 2000, but who cares about w2k :-)",
			"disapproval": false,
			"date": "2013-01-03 23:35:44.032880",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7035055/diff/8001/src/cmd/dist/windows.c\nFile src/cmd/dist/windows.c (right):\n\nhttps://codereview.appspot.com/7035055/diff/8001/src/cmd/dist/windows.c#newcode980\nsrc/cmd/dist/windows.c:980: __cpuid(info, 1);\nare you sure that this version of __cpuid is provided by mingw gcc?\n(I think it's only provided by msvc)\n\nGoogle shows that when you include <cpuid.h>, it will get a version\nof __cpuid with 5 arguments:\n__cpuid(level, a, b, c, d)\n\nI suggest that we play safe and just use the inline assembly version\nhere.",
			"disapproval": false,
			"date": "2013-01-03 00:02:49.706270",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> are you sure that this version of __cpuid is provided by mingw gcc?\r\n\r\nSorry, I forgot we use mingw on Windows. That code is for MSVC.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-03 17:22:16.586930",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dsymonds@golang.org",
				"minux.ma@gmail.com",
				"iant@golang.org",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b877b884d565 ***\n\ncmd/dist: sse auto-detect\n\nR=golang-dev, dsymonds, minux.ma, iant, alex.brainman\nCC=golang-dev\nhttps://codereview.appspot.com/7035055",
			"disapproval": false,
			"date": "2013-01-04 15:59:14.260490",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks. I think I'll keep the asm, which is shared between the two.\r\n\r\nAs for cansse vs cansse2, the function name matches the environment\r\nvariable setting.\r\nI will send out a CL changing them all separately.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-04 15:55:41.826040",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7035055: cmd/dist: sse auto-detect",
	"created": "2013-01-02 22:07:51.875070",
	"patchsets": [
		1,
		3,
		4001,
		8001,
		16001,
		2012,
		5011
	],
	"modified": "2013-01-04 15:59:16.192910",
	"closed": true,
	"issue": 7035055
}