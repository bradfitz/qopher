{
	"description": "spec: an initial BOM can be ignored\nAfter further deliberation, let's back down to the Unicode proposal.\nIgnoring aBOMinations anywhere means that things like\n        grep unsafe *.go\nmight fail because there's a BOM in the middle: unBOMsafe.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"0xjnml@gmail.com",
		"gri@golang.org",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-09-07 16:10:52.583670",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It bothers me that 'grep unsafe *.go' might fail because it has been\r\nwritten un<BOM>safe. Maybe we should pull back to what Unicode\r\nsuggests: BOM at beginning of file is okay, and then anywhere else is\r\nan error.\r\n\r\nThe argument for allowing it in other places was file concatenation,\r\nbut Go programs in general are not concatenatable (cannot duplicate\r\nthe package clause) so I'm not sure this is very likely. If that came\r\nup we could expand to 'beginning of line' instead of 'beginning of\r\nfile', but again I don't think it will.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-09-07 16:22:46.721990",
			"approval": false
		},
		{
			"sender": "0xjnml@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Works for me, AFAICS.\r\n\r\n-j\r\n",
			"disapproval": false,
			"date": "2012-09-07 17:14:18.092920",
			"approval": false
		},
		{
			"sender": "0xjnml@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm with Russ on this one.\r\n\r\n-j\r\n",
			"disapproval": false,
			"date": "2012-09-07 16:27:25.414210",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "We're about to visit the last unvisited point in the design space for\r\nthese little fuckers, pardon my surrogates.\r\n\r\nAny other votes?\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-09-07 16:33:11.812830",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"0xjnml@gmail.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/07 16:33:11, r wrote:\n> We're about to visit the last unvisited point in the design space for\n> these little fuckers, pardon my surrogates.\n> \n> Any other votes?\n> \n> -rob\n\nI'm ok with BOMs BOMbing anywhere but the file start. No surprises.\n- gri",
			"disapproval": false,
			"date": "2012-09-07 16:40:48.680610",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"0xjnml@gmail.com",
				"gri@golang.org",
				"bradfitz@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-07 17:28:02.803450",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Only because you're soliciting votes:\r\n\r\nI also think BOM only at beginning of file or line boundary.  The grep\r\n\"unsafe\" argument is compelling.  Windows notepad.exe users don't cat two\r\nfiles together anyway, so beginning seems fine for now.\r\n\r\nOn Fri, Sep 7, 2012 at 9:33 AM, Rob Pike <r@golang.org> wrote:\r\n\r\n> We're about to visit the last unvisited point in the design space for\r\n> these little fuckers, pardon my surrogates.\r\n>\r\n> Any other votes?\r\n>\r\n> -rob\r\n>\r\n",
			"disapproval": false,
			"date": "2012-09-07 16:41:12.058280",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It's the \"for now\" part that bugs me. I'd prefer \"forever\".\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-09-07 16:50:02.432940",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"0xjnml@gmail.com",
				"gri@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=6887692cc272 ***\n\nspec: an initial BOM can be ignored\nAfter further deliberation, let's back down to the Unicode proposal.\nIgnoring aBOMinations anywhere means that things like\n        grep unsafe *.go\nmight fail because there's a BOM in the middle: unBOMsafe.\n\nR=golang-dev, rsc, 0xjnml, gri, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6490091",
			"disapproval": false,
			"date": "2012-09-07 17:28:27.894910",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"0xjnml@gmail.com",
				"gri@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, 0xjnml@gmail.com, gri@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-09-07 17:08:31.839790",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"0xjnml@gmail.com",
				"gri@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-09-07 17:24:59.856610",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"0xjnml@gmail.com",
				"gri@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but update the description.",
			"disapproval": false,
			"date": "2012-09-07 17:26:45.230140",
			"approval": true
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 6490091: spec: BOMs can be ignored everywhere",
	"created": "2012-09-07 16:10:49.489130",
	"patchsets": [
		1,
		6001,
		11001
	],
	"modified": "2012-09-07 17:28:29.011390",
	"closed": true,
	"issue": 6490091
}