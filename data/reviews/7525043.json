{
	"description": "runtime: change amd64 startup convention\n\nNow the default startup is that the program begins at _rt0_amd64_$GOOS,\nwhich sets DI = argc, SI = argv and jumps to _rt0_amd64.\n\nThis makes the _rt0_amd64 entry match the expected semantics for\nthe standard C \"main\" function, which we can now provide for use when\nlinking against a standard C library.",
	"cc": [
		"golang-dev@googlegroups.com",
		"devon.odell@gmail.com",
		"minux.ma@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-06 19:23:01.481870",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-06 19:22:14.068140",
			"approval": false
		},
		{
			"sender": "devon.odell@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"devon.odell@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/06 19:23:01, rsc wrote:\n> Hello mailto:golang-dev@googlegroups.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nLGTM",
			"disapproval": false,
			"date": "2013-03-06 19:54:58.662730",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"devon.odell@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7525043/diff/8010/src/pkg/runtime/rt0_darwin_amd64.s\nFile src/pkg/runtime/rt0_darwin_amd64.s (right):\n\nhttps://codereview.appspot.com/7525043/diff/8010/src/pkg/runtime/rt0_darwin_amd64.s#newcode8\nsrc/pkg/runtime/rt0_darwin_amd64.s:8: MOVQ\t$main(SB), AX\nwhy use an indirect jump here?\nif executions follows this route, it will always go to the same main,\nisn't it?\n\nhttps://codereview.appspot.com/7525043/diff/8010/src/pkg/runtime/rt0_freebsd_amd64.s\nFile src/pkg/runtime/rt0_freebsd_amd64.s (right):\n\nhttps://codereview.appspot.com/7525043/diff/8010/src/pkg/runtime/rt0_freebsd_amd64.s#newcode5\nsrc/pkg/runtime/rt0_freebsd_amd64.s:5: // Darwin and Linux use the same linkage to main\nthis comment is out-of-date.\nand it seems darwin and freebsd are not using the same linkage to main?\nwhy on FreeBSD, DI saves the SP, while on Darwin, it's not?",
			"disapproval": false,
			"date": "2013-03-06 19:55:24.792680",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"devon.odell@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7525043/diff/8010/src/pkg/runtime/rt0_darwin_amd64.s\nFile src/pkg/runtime/rt0_darwin_amd64.s (right):\n\nhttps://codereview.appspot.com/7525043/diff/8010/src/pkg/runtime/rt0_darwin_amd64.s#newcode8\nsrc/pkg/runtime/rt0_darwin_amd64.s:8: MOVQ\t$main(SB), AX\nOn 2013/03/06 19:55:24, minux wrote:\n> why use an indirect jump here?\n> if executions follows this route, it will always go to the same main,\n> isn't it?\n\nI use an indirect jmp because the old code did. \nI jump to main first and then to _rt0_amd64, instead of to _rt0_amd64 directly, only to force the symbol 'main' to be present in the binary.\n\nhttps://codereview.appspot.com/7525043/diff/8010/src/pkg/runtime/rt0_freebsd_amd64.s\nFile src/pkg/runtime/rt0_freebsd_amd64.s (right):\n\nhttps://codereview.appspot.com/7525043/diff/8010/src/pkg/runtime/rt0_freebsd_amd64.s#newcode5\nsrc/pkg/runtime/rt0_freebsd_amd64.s:5: // Darwin and Linux use the same linkage to main\nOn 2013/03/06 19:55:24, minux wrote:\n> this comment is out-of-date.\n> and it seems darwin and freebsd are not using the same linkage to main?\n> why on FreeBSD, DI saves the SP, while on Darwin, it's not?\n\nYes, I tried to remove all those comments. Missed that one. Will delete.\n\nI don't know why FreeBSD uses DI directly while the others use SP, but this is what was there before (unless I am misreading the old assembly), and I didn't want to change the semantics. Perhaps on FreeBSD it would work just as well to use SP and the use of DI only works accidentally. The OpenBSD and NetBSD code does use SP.",
			"disapproval": false,
			"date": "2013-03-06 20:02:31.886500",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"devon.odell@gmail.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=84423de5053e ***\n\nruntime: change amd64 startup convention\n\nNow the default startup is that the program begins at _rt0_amd64_$GOOS,\nwhich sets DI = argc, SI = argv and jumps to _rt0_amd64.\n\nThis makes the _rt0_amd64 entry match the expected semantics for\nthe standard C \"main\" function, which we can now provide for use when\nlinking against a standard C library.\n\nR=golang-dev, devon.odell, minux.ma\nCC=golang-dev\nhttps://codereview.appspot.com/7525043",
			"disapproval": false,
			"date": "2013-03-06 20:03:09.753570",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 7525043: runtime: change amd64 startup convention",
	"created": "2013-03-06 19:09:23.972340",
	"patchsets": [
		1,
		2001,
		4001,
		2002,
		8001,
		8010,
		8019
	],
	"modified": "2013-03-06 20:53:34.938120",
	"closed": true,
	"issue": 7525043
}