{
	"description": "leveldb: allow more than one memory-backed file system.",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/leveldb-go",
			"disapproval": false,
			"date": "2012-05-01 05:37:47.221607",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Tue, May 1, 2012 at 3:37 PM, <nigeltao@golang.org> wrote:\r\n\r\n> Reviewers: bradfitz,\r\n>\r\n> Message:\r\n> Hello bradfitz@golang.org (cc: golang-dev@googlegroups.com),\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/**leveldb-go<https://code.google.com/p/leveldb-go>\r\n>\r\n>\r\n> Description:\r\n> leveldb: allow more than one memory-backed file system.\r\n>\r\n> Please review this at http://codereview.appspot.com/**6136055/<http://codereview.appspot.com/6136055/>\r\n>\r\n> Affected files:\r\n>  M leveldb/db/file.go\r\n>  M leveldb/db/file_test.go\r\n>  M leveldb/table/table_test.go\r\n>\r\n>\r\n> Index: leveldb/db/file.go\r\n> ==============================**==============================**=======\r\n> --- a/leveldb/db/file.go\r\n> +++ b/leveldb/db/file.go\r\n> @@ -63,8 +63,10 @@\r\n>        return f.Readdirnames(-1)\r\n>  }\r\n>\r\n> -// MemFileSystem is a memory-backed FileSystem implementation.\r\n> -var MemFileSystem FileSystem = &memFS{}\r\n> +// NewMemFileSystem returns a new memory-backed FileSystem implementation.\r\n> +func NewMemFileSystem() FileSystem {\r\n> +       return new(memFS)\r\n> +}\r\n>\r\n>  type memFS struct {\r\n>        mu sync.Mutex\r\n> Index: leveldb/db/file_test.go\r\n> ==============================**==============================**=======\r\n> --- a/leveldb/db/file_test.go\r\n> +++ b/leveldb/db/file_test.go\r\n> @@ -19,7 +19,7 @@\r\n>  }\r\n>\r\n>  func TestMemFSList(t *testing.T) {\r\n> -       var fs memFS\r\n> +       fs := NewMemFileSystem()\r\n>\r\n>        fullNames := []string{\r\n>                \"/a\",\r\n> Index: leveldb/table/table_test.go\r\n> ==============================**==============================**=======\r\n> --- a/leveldb/table/table_test.go\r\n> +++ b/leveldb/table/table_test.go\r\n> @@ -123,7 +123,10 @@\r\n>        return r.Close()\r\n>  }\r\n>\r\n> -var tmpFileCount int\r\n> +var (\r\n> +       memFS        = db.NewMemFileSystem()\r\n> +       tmpFileCount int\r\n> +)\r\n>\r\n>  func build(compression db.Compression) (db.File, error) {\r\n>        // Create a sorted list of wordCount's keys.\r\n> @@ -136,7 +139,7 @@\r\n>        sort.Strings(keys)\r\n>\r\n>        // Write the key/value pairs to a new table, in increasing key\r\n> order.\r\n> -       f, err := db.MemFileSystem.Create(fmt.**\r\n> Sprintf(\"/tmp/leveldb/table/**table_test/%d\", tmpFileCount))\r\n> +       f, err := memFS.Create(fmt.Sprintf(\"/**\r\n> tmp/leveldb/table/table_test/%**d\", tmpFileCount))\r\n>        if err != nil {\r\n>                return nil, err\r\n>        }\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-01 05:56:27.499496",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/leveldb-go/source/detail?r=96d636977e1e ***\n\nleveldb: allow more than one memory-backed file system.\n\nR=bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/6136055",
			"disapproval": false,
			"date": "2012-05-01 06:00:31.211633",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6136055: leveldb: allow more than one memory-backed file system.",
	"created": "2012-05-01 05:37:20.941968",
	"patchsets": [
		1,
		2001,
		3,
		5004
	],
	"modified": "2012-05-01 06:00:35.317386",
	"closed": true,
	"issue": 6136055
}