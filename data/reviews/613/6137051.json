{
	"description": "runtime: fix hashmap code for large key size\n\nFixes issue 3573.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"rsc@golang.org",
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-30 22:06:34.082590",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Apr 30, 2012 at 22:24, Russ Cox <rsc@golang.org> wrote:\r\n> This is so weird. \u00a0When I added support for arbitrary equality, I\r\n> implemented support for indirect keys, along with logic to decide when\r\n> to indirect the key+value, when to indirect just the key, and when to\r\n> indirect just the value, and tests. \u00a0And it is clearly not here, but I\r\n> can't figure out where it went.\r\n\r\nLooks like one of the other Russes reverted hashmap.c\r\n(and, conveniently, test/bigmap.go) before submitting the CL.\r\nThe changes are in patch 9 but not in patch 10 (submitted).\r\n\r\nhttp://codereview.appspot.com/5451105/diff/12001/src/pkg/runtime/hashmap.c\r\n\r\nI'd like to try putting them in instead of this CL, both because the\r\ntests are quite a bit more extensive and because Mike Burrows\r\nalready signed off on that delta (his mail is how I found the link),\r\nbut I wonder whether they were omitted for a good reason.\r\nI wonder if I realized a problem and meant to come back.\r\nI'll take a closer look tomorrow.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-05-01 02:34:01.955724",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Ian,\n\nThank you for fixing this issue. Just an observation on the performance cost of this change\n\ncore i5, darwin/amd64\n\nodessa(~/go/src/pkg/runtime) % ~/go/misc/benchcmp {old,new}.txt\nbenchmark                old ns/op    new ns/op    delta\nBenchmarkMapUint8Get            46           49   +5.98%\nBenchmarkMapUint16Get           65           62   -5.49%\nBenchmarkMapUint32Get           66           67   +1.05%\nBenchmarkMapUint64Get           78           80   +2.80%\n\nFrom http://codereview.appspot.com/6129057/",
			"disapproval": false,
			"date": "2012-04-30 22:16:10.298203",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is so weird.  When I added support for arbitrary equality, I\r\nimplemented support for indirect keys, along with logic to decide when\r\nto indirect the key+value, when to indirect just the key, and when to\r\nindirect just the value, and tests.  And it is clearly not here, but I\r\ncan't figure out where it went.\r\n",
			"disapproval": false,
			"date": "2012-05-01 02:25:11.364513",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Did you ask the other Russes?\r\n\r\nOn Tue, May 1, 2012 at 12:24 PM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> This is so weird.  When I added support for arbitrary equality, I\r\n> implemented support for indirect keys, along with logic to decide when\r\n> to indirect the key+value, when to indirect just the key, and when to\r\n> indirect just the value, and tests.  And it is clearly not here, but I\r\n> can't figure out where it went.\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-01 02:30:02.056390",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I submitted my earlier copy of these files, finally.\r\n",
			"disapproval": false,
			"date": "2012-05-25 03:02:49.834535",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-05-29 19:29:01.130436",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 6137051: runtime: fix hashmap code for large key size",
	"created": "2012-04-29 05:01:30.546142",
	"patchsets": [
		1,
		1002,
		4001,
		7001,
		8001
	],
	"modified": "2012-05-29 19:29:05.011832",
	"closed": true,
	"issue": 6137051
}