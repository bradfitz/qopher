{
	"description": "doc/go1.1.html: return requirements",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"jeremyjackins@gmail.com",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7838045/diff/1/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/7838045/diff/1/doc/go1.1.html#newcode58\ndoc/go1.1.html:58: or call to <code>panic</code> at\nor goto, but you're welcome not to mention that\n\nhttps://codereview.appspot.com/7838045/diff/1/doc/go1.1.html#newcode67\ndoc/go1.1.html:67: If a function can be shown <em>syntactically</em> to have no path\n\"If the final statement of a function can be shown ...\"\n\nIt's important that the definition is not about paths to the end of the function from the beginning. It only looks at the final statement.\n\nhttps://codereview.appspot.com/7838045/diff/1/doc/go1.1.html#newcode68\ndoc/go1.1.html:68: to the end of the function, the final \"return\" statement is unnecessary.\ns/the final/no final/\n\nhttps://codereview.appspot.com/7838045/diff/1/doc/go1.1.html#newcode78\ndoc/go1.1.html:78: In Go 1.1, if a\nThis paragraph and the next seem like they are repeating the previous one.\nPerhaps the <em>terminating statements</em> above should have the link and these this paragraph can be dropped.\n\nhttps://codereview.appspot.com/7838045/diff/1/doc/go1.1.html#newcode80\ndoc/go1.1.html:80: The full details are spell out in the\ns/spell/&ed/\n\nhttps://codereview.appspot.com/7838045/diff/1/doc/go1.1.html#newcode92\ndoc/go1.1.html:92: be simplified manually.\nTODO: Such code can be identified using 'go vet'.",
			"disapproval": false,
			"date": "2013-03-22 19:55:24.733380",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-22 16:29:42.640780",
			"approval": false
		},
		{
			"sender": "jeremyjackins@gmail.com",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7838045/diff/1/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/7838045/diff/1/doc/go1.1.html#newcode85\ndoc/go1.1.html:85: Note that the rule is purly syntactic: it pays no attention to the values in the\npurely",
			"disapproval": false,
			"date": "2013-03-22 20:57:39.409060",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM with at least my 2nd comment addressed\n\nhttps://codereview.appspot.com/7838045/diff/14001/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/7838045/diff/14001/doc/go1.1.html#newcode62\ndoc/go1.1.html:62: only an infinite \"for\" loop.\nfine for this document but really it's only for loops w/o a condition.\n\nfor true {}\n\nis infinite but not terminating per the spec. Also, it's mentioned again below. Maybe just:\n\nBut there are many cases where a final \"return\" is clearly unnecessary.\n\nhttps://codereview.appspot.com/7838045/diff/14001/doc/go1.1.html#newcode74\ndoc/go1.1.html:74: be a terminating statement, no final \"return\" statement is unnecessary.\ns/unnecessary/necessary/.",
			"disapproval": false,
			"date": "2013-03-22 21:48:24.451650",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI.\n\nBut perhaps the last few paragraphs can be trimmed per rsc' suggestion.\n\nhttps://codereview.appspot.com/7838045/diff/1/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/7838045/diff/1/doc/go1.1.html#newcode85\ndoc/go1.1.html:85: Note that the rule is purly syntactic: it pays no attention to the values in the\ns/purly/purely/\n\nhttps://codereview.appspot.com/7838045/diff/1/doc/go1.1.html#newcode86\ndoc/go1.1.html:86: code and therefore requires no semantic analysis.\ns/semantic/complex/\n\n(the analysis is semantic, in my mind)",
			"disapproval": false,
			"date": "2013-03-22 20:59:44.896230",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, jeremyjackins@gmail.com, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-22 21:02:48.070820",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7838045/diff/6001/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/7838045/diff/6001/doc/go1.1.html#newcode61\ndoc/go1.1.html:61: where a terminal \"return\" is clearly unnecessary, such as a function with\ns/terminal/final/ ?\n\nhttps://codereview.appspot.com/7838045/diff/6001/doc/go1.1.html#newcode66\ndoc/go1.1.html:66: In Go 1.1, the rule about terminal \"return\" statements is more permissive.\ns/terminal/final/ ?\n\nBelow you refer to \"final returns\". Also, it's fewer terminating terminal thingies.\n\nhttps://codereview.appspot.com/7838045/diff/6001/doc/go1.1.html#newcode67\ndoc/go1.1.html:67: It introduces the concept of a\ns/concept/notion/ ?\n\nhttps://codereview.appspot.com/7838045/diff/6001/doc/go1.1.html#newcode73\ndoc/go1.1.html:73: If a function can be shown <em>syntactically</em> to have no path\nI think this sentence introduces again the idea of a path of control flow which I think we want to avoid: only the last statement matters. How about:\n\nIf the last statement in a function can be shown <em>syntactically</em> to be a terminating statement, no final \"return\" is required.",
			"disapproval": false,
			"date": "2013-03-22 21:39:32.322900",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, jeremyjackins@gmail.com, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-22 21:43:01.317080",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7838045/diff/6001/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/7838045/diff/6001/doc/go1.1.html#newcode61\ndoc/go1.1.html:61: where a terminal \"return\" is clearly unnecessary, such as a function with\nOn 2013/03/22 21:39:32, gri wrote:\n> s/terminal/final/ ?\n\nDone.\n\nhttps://codereview.appspot.com/7838045/diff/6001/doc/go1.1.html#newcode66\ndoc/go1.1.html:66: In Go 1.1, the rule about terminal \"return\" statements is more permissive.\nOn 2013/03/22 21:39:32, gri wrote:\n> s/terminal/final/ ?\n> \n> Below you refer to \"final returns\". Also, it's fewer terminating terminal\n> thingies.\n\nDone.\n\nhttps://codereview.appspot.com/7838045/diff/6001/doc/go1.1.html#newcode67\ndoc/go1.1.html:67: It introduces the concept of a\nno\n\nhttps://codereview.appspot.com/7838045/diff/6001/doc/go1.1.html#newcode73\ndoc/go1.1.html:73: If a function can be shown <em>syntactically</em> to have no path\nOn 2013/03/22 21:39:32, gri wrote:\n> I think this sentence introduces again the idea of a path of control flow which\n> I think we want to avoid: only the last statement matters. How about:\n> \n> If the last statement in a function can be shown <em>syntactically</em> to be a\n> terminating statement, no final \"return\" is required.\n\nDone.",
			"disapproval": false,
			"date": "2013-03-22 21:44:11.616450",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7838045/diff/14001/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/7838045/diff/14001/doc/go1.1.html#newcode74\ndoc/go1.1.html:74: be a terminating statement, no final \"return\" statement is unnecessary.\ns/unnecessary/necessary/\n(or needed)\n\nhttps://codereview.appspot.com/7838045/diff/14001/doc/go1.1.html#newcode86\ndoc/go1.1.html:86: TODO: Such code can be identified by <code>go vet</code>.\nvet is in",
			"disapproval": false,
			"date": "2013-03-22 21:48:59.934160",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7838045/diff/14001/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/7838045/diff/14001/doc/go1.1.html#newcode62\ndoc/go1.1.html:62: only an infinite \"for\" loop.\ni think at this level of explanation the example is fine. this isn't the spec and doesn't need to be precise or all-inclusive.\n\nhttps://codereview.appspot.com/7838045/diff/14001/doc/go1.1.html#newcode74\ndoc/go1.1.html:74: be a terminating statement, no final \"return\" statement is unnecessary.\nOn 2013/03/22 21:48:24, gri wrote:\n> s/unnecessary/necessary/.\n\nDone.",
			"disapproval": false,
			"date": "2013-03-22 21:50:29.502520",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, jeremyjackins@gmail.com, gri@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-03-22 21:50:41.291450",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"jeremyjackins@gmail.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=61dd0f95b763 ***\n\ndoc/go1.1.html: return requirements\n\nR=golang-dev, rsc, jeremyjackins, gri\nCC=golang-dev\nhttps://codereview.appspot.com/7838045",
			"disapproval": false,
			"date": "2013-03-22 21:51:24.768140",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 7838045: doc/go1.1.html: return requirements",
	"created": "2013-03-22 16:29:36.865370",
	"patchsets": [
		1,
		6001,
		10001,
		14001,
		21001,
		25001
	],
	"modified": "2013-03-23 15:28:04.758110",
	"closed": true,
	"issue": 7838045
}