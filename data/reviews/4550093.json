{
	"description": "netchan: added drain method to importer.\n\nFixes issue 1868.",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4550093/diff/8001/src/pkg/netchan/import.go\nFile src/pkg/netchan/import.go (right):\n\nhttp://codereview.appspot.com/4550093/diff/8001/src/pkg/netchan/import.go#newcode38\nsrc/pkg/netchan/import.go:38: seqLock  sync.Mutex\nthese are not properly commented. also i'm surprised it takes four new fields including two mutexes to do something so simple. at the very least, you could use one (mutexed) integer to store the difference, because that's all you care about: it's the count of unacked messages.\n\nhttp://codereview.appspot.com/4550093/diff/8001/src/pkg/netchan/import.go#newcode274\nsrc/pkg/netchan/import.go:274: for {\nfor imp.unackedCount() > 0 {",
			"disapproval": false,
			"date": "2011-06-05 11:27:31.130962",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-06-06 06:45:24.885279",
			"approval": true
		},
		{
			"sender": "david.jakob.fritz@gmail.com",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-06 01:28:38.161394",
			"approval": false
		},
		{
			"sender": "david.jakob.fritz@gmail.com",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-01 23:54:23.499116",
			"approval": false
		},
		{
			"sender": "david.jakob.fritz@gmail.com",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-05-30 21:07:50.234149",
			"approval": false
		},
		{
			"sender": "david.jakob.fritz@gmail.com",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL. I'll toss an update to the netchan test in another ticket.\n\nhttp://codereview.appspot.com/4550093/diff/2001/src/pkg/netchan/import.go\nFile src/pkg/netchan/import.go (right):\n\nhttp://codereview.appspot.com/4550093/diff/2001/src/pkg/netchan/import.go#newcode277\nsrc/pkg/netchan/import.go:277: //Any unacknowledged messages?\nOn 2011/06/01 02:58:29, r wrote:\n> s/A/ A/\n\nDone.\n\nhttp://codereview.appspot.com/4550093/diff/2001/src/pkg/netchan/import.go#newcode284\nsrc/pkg/netchan/import.go:284: }\nOn 2011/06/01 02:58:29, r wrote:\n> if imp.unackedCount() <= 0 {\n>   break\n> }\n> \n> is all you need, and i'm not even sure i'd bother making unackedCount a\n> function, although it's not a problem to do so.\n\nDone. I'm leaving unackedCount() to accommodate a Sync() function.",
			"disapproval": false,
			"date": "2011-06-01 23:54:57.597435",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "this will need a test\n\nhttp://codereview.appspot.com/4550093/diff/2001/src/pkg/netchan/import.go\nFile src/pkg/netchan/import.go (right):\n\nhttp://codereview.appspot.com/4550093/diff/2001/src/pkg/netchan/import.go#newcode277\nsrc/pkg/netchan/import.go:277: //Any unacknowledged messages?\ns/A/ A/\n\nhttp://codereview.appspot.com/4550093/diff/2001/src/pkg/netchan/import.go#newcode284\nsrc/pkg/netchan/import.go:284: }\nif imp.unackedCount() <= 0 {\n  break\n}\n\nis all you need, and i'm not even sure i'd bother making unackedCount a function, although it's not a problem to do so.",
			"disapproval": false,
			"date": "2011-06-01 02:58:29.524261",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4550093/diff/1002/src/pkg/netchan/import.go\nFile src/pkg/netchan/import.go (right):\n\nhttp://codereview.appspot.com/4550093/diff/1002/src/pkg/netchan/import.go#newcode35\nsrc/pkg/netchan/import.go:35: unackedNum   int64\t\t// number of unacknowledged messages. < 0 is in error.\n\"Num\" is one of those meaningless suffixes. \"unacked\" is fine.\nthe comment should mention it's only sent messages that we count.\nyou say <0 is an error but don't check that\n\nunacked int64 // number of unacknowledged sends.\n\nhttp://codereview.appspot.com/4550093/diff/1002/src/pkg/netchan/import.go#newcode36\nsrc/pkg/netchan/import.go:36: mu       sync.Mutex\t\t// protects access to unackedNum\nmove this up one line. see the usage in export.go",
			"disapproval": false,
			"date": "2011-06-05 21:48:32.930525",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "You can put the test in the same CL.\nChange the files and then run \"hg change 4550093\"\nand add them to the list.\n\nOn Wed, Jun 1, 2011 at 19:54,  <david.jakob.fritz@gmail.com> wrote:\n> PTAL. I'll toss an update to the netchan test in another ticket.\n>\n>\n> http://codereview.appspot.com/4550093/diff/2001/src/pkg/netchan/import.go\n> File src/pkg/netchan/import.go (right):\n>\n> http://codereview.appspot.com/4550093/diff/2001/src/pkg/netchan/import.go#newcode277\n> src/pkg/netchan/import.go:277: //Any unacknowledged messages?\n> On 2011/06/01 02:58:29, r wrote:\n>>\n>> s/A/ A/\n>\n> Done.\n>\n> http://codereview.appspot.com/4550093/diff/2001/src/pkg/netchan/import.go#newcode284\n> src/pkg/netchan/import.go:284: }\n> On 2011/06/01 02:58:29, r wrote:\n>>\n>> if imp.unackedCount() <= 0 {\n>> \u00a0 break\n>> }\n>\n>> is all you need, and i'm not even sure i'd bother making unackedCount\n>\n> a\n>>\n>> function, although it's not a problem to do so.\n>\n> Done. I'm leaving unackedCount() to accommodate a Sync() function.\n>\n> http://codereview.appspot.com/4550093/\n>\n",
			"disapproval": false,
			"date": "2011-06-02 02:17:02.361691",
			"approval": false
		},
		{
			"sender": "david.jakob.fritz@gmail.com",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4550093/diff/1002/src/pkg/netchan/import.go\nFile src/pkg/netchan/import.go (right):\n\nhttp://codereview.appspot.com/4550093/diff/1002/src/pkg/netchan/import.go#newcode35\nsrc/pkg/netchan/import.go:35: unackedNum   int64\t\t// number of unacknowledged messages. < 0 is in error.\nOn 2011/06/05 21:48:33, r wrote:\n> \"Num\" is one of those meaningless suffixes. \"unacked\" is fine.\n> the comment should mention it's only sent messages that we count.\n> you say <0 is an error but don't check that\n> \n> unacked int64 // number of unacknowledged sends.\n\nDone.\n\nhttp://codereview.appspot.com/4550093/diff/1002/src/pkg/netchan/import.go#newcode36\nsrc/pkg/netchan/import.go:36: mu       sync.Mutex\t\t// protects access to unackedNum\nOn 2011/06/05 21:48:33, r wrote:\n> move this up one line. see the usage in export.go\n\nDone.",
			"disapproval": false,
			"date": "2011-06-06 01:27:55.830936",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=80bef554c8df ***\n\nnetchan: added drain method to importer.\n\nFixes issue 1868.\n\nR=golang-dev, r, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/4550093\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2011-06-06 06:55:36.795087",
			"approval": false
		},
		{
			"sender": "david.jakob.fritz@gmail.com",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-02 23:22:44.904917",
			"approval": false
		},
		{
			"sender": "david.jakob.fritz@gmail.com",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-06-05 15:09:02.558587",
			"approval": false
		},
		{
			"sender": "david.jakob.fritz@gmail.com",
			"recipients": [
				"david.jakob.fritz@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/4550093/diff/8001/src/pkg/netchan/import.go\nFile src/pkg/netchan/import.go (right):\n\nhttp://codereview.appspot.com/4550093/diff/8001/src/pkg/netchan/import.go#newcode38\nsrc/pkg/netchan/import.go:38: seqLock  sync.Mutex\nFixed comments. \n\nRemoved seqNum, changed ackNum to unackedNum, and made changes below.\n\nI've left the seqLock mutex in, as the exporter guarantees that messages are sent in order, and I assumed the same behavior would be wanted on the importer side.\n\nOn 2011/06/05 11:27:31, r wrote:\n> these are not properly commented. also i'm surprised it takes four new fields\n> including two mutexes to do something so simple. at the very least, you could\n> use one (mutexed) integer to store the difference, because that's all you care\n> about: it's the count of unacked messages.\n\nhttp://codereview.appspot.com/4550093/diff/8001/src/pkg/netchan/import.go#newcode274\nsrc/pkg/netchan/import.go:274: for {\nOn 2011/06/05 11:27:31, r wrote:\n> for imp.unackedCount() > 0 {\n\nDone.",
			"disapproval": false,
			"date": "2011-06-05 15:11:51.722295",
			"approval": false
		}
	],
	"owner_email": "david.jakob.fritz@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "fritz",
	"subject": "code review 4550093: netchan: added drain method to importer.",
	"created": "2011-05-30 21:04:54.227391",
	"patchsets": [
		1,
		2001,
		6001,
		8001,
		1002,
		5005
	],
	"modified": "2011-06-05 15:11:51.722295",
	"closed": false,
	"issue": 4550093
}