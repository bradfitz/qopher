{
	"description": "net: detect bad F_DUPFD_CLOEXEC on OS X 10.6\n\nOn 10.6, OS X's fcntl returns EBADF instead of EINVAL.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Maybe. But I don't want a real EBADF to neuter it for the lifetime of the\r\nprocess, especially on systems that aren't OS X 10.6.\r\n\r\nBut maybe that can't happen.\r\n\r\n\r\n\r\nOn Mon, Aug 5, 2013 at 5:23 PM, <iant@golang.org> wrote:\r\n\r\n> According to build.golang.org the call is failing with EBADF, so suppose\r\n> we just try handling that the same way we handle EINVAL.\r\n>\r\n> https://codereview.appspot.**com/12493043/<https://codereview.appspot.com/12493043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-06 00:25:25.267550",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-08-06 00:04:10.613840",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm getting off the bus soon here, so somebody else can fix this if it's\r\nurgent.\r\n\r\n\r\n\r\nOn Mon, Aug 5, 2013 at 5:25 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> Maybe. But I don't want a real EBADF to neuter it for the lifetime of the\r\n> process, especially on systems that aren't OS X 10.6.\r\n>\r\n> But maybe that can't happen.\r\n>\r\n>\r\n>\r\n> On Mon, Aug 5, 2013 at 5:23 PM, <iant@golang.org> wrote:\r\n>\r\n>> According to build.golang.org the call is failing with EBADF, so suppose\r\n>> we just try handling that the same way we handle EINVAL.\r\n>>\r\n>> https://codereview.appspot.**com/12493043/<https://codereview.appspot.com/12493043/>\r\n>>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-06 00:26:00.817940",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I just booted my 10.6 machine.  It was running pre-Go 1 go from Dec 21,\r\n2011.\r\n\r\nBut I can reproduce the failure now too.\r\n\r\n\r\n\r\nOn Mon, Aug 5, 2013 at 6:29 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> I have a darwin/386 system here, let me test.\r\n>\r\n>\r\n>\r\n> On 06/08/2013, at 10:25, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>\r\n> Maybe. But I don't want a real EBADF to neuter it for the lifetime of the\r\n> process, especially on systems that aren't OS X 10.6.\r\n>\r\n> But maybe that can't happen.\r\n>\r\n>\r\n>\r\n> On Mon, Aug 5, 2013 at 5:23 PM, <iant@golang.org> wrote:\r\n>\r\n>> According to build.golang.org the call is failing with EBADF, so suppose\r\n>> we just try handling that the same way we handle EINVAL.\r\n>>\r\n>> https://codereview.appspot.**com/12493043/<https://codereview.appspot.com/12493043/>\r\n>>\r\n>\r\n>  --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-06 01:33:12.301640",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Aug 5, 2013 at 5:25 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> Maybe. But I don't want a real EBADF to neuter it for the lifetime of the\r\n> process, especially on systems that aren't OS X 10.6.\r\n>\r\n> But maybe that can't happen.\r\n\r\nI don't think it can happen in a normal program that isn't doing\r\nsomething broken like calling File() on a net.TCPListener that was\r\nclosed.\r\n\r\nIan\r\n\r\n> On Mon, Aug 5, 2013 at 5:23 PM, <iant@golang.org> wrote:\r\n>>\r\n>> According to build.golang.org the call is failing with EBADF, so suppose\r\n>> we just try handling that the same way we handle EINVAL.\r\n>>\r\n>> https://codereview.appspot.com/12493043/\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-06 00:28:33.219670",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "According to build.golang.org the call is failing with EBADF, so suppose we just try handling that the same way we handle EINVAL.",
			"disapproval": false,
			"date": "2013-08-06 00:23:10.877040",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I have a darwin/386 system here, let me test.\r\n\r\n\r\n\r\nOn 06/08/2013, at 10:25, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> Maybe. But I don't want a real EBADF to neuter it for the lifetime of the process, especially on systems that aren't OS X 10.6.\r\n> \r\n> But maybe that can't happen.\r\n> \r\n> \r\n> \r\n> On Mon, Aug 5, 2013 at 5:23 PM, <iant@golang.org> wrote:\r\n>> According to build.golang.org the call is failing with EBADF, so suppose\r\n>> we just try handling that the same way we handle EINVAL.\r\n>> \r\n>> https://codereview.appspot.com/12493043/\r\n> \r\n> -- \r\n>  \r\n> --- \r\n> You received this message because you are subscribed to the Google Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>  \r\n>  \r\n",
			"disapproval": false,
			"date": "2013-08-06 01:30:16.333460",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Passes on my darwin/386 machine.",
			"disapproval": false,
			"date": "2013-08-06 02:18:40.673070",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I downloaded\r\nhttp://www.opensource.apple.com/tarballs/xnu/xnu-1504.15.3.tar.gz (the\r\nkernel for 10.6 on my machine at least) and read\r\nbsd/kern/kern_descrip.c's fcntl_nocancel.\r\n\r\nLooks like we're hitting:\r\n\r\ndefault:\r\n                /*\r\n                 * This is an fcntl() that we d not recognize at this level;\r\n                 * if this is a vnode, we send it down into the VNOP_IOCTL\r\n                 * for this vnode; this can include special devices, and\r\nwill\r\n                 * effectively overload fcntl() to send ioctl()'s.\r\n                 */\r\n                if((uap->cmd & IOC_VOID) && (uap->cmd & IOC_INOUT)){\r\n                        error = EINVAL;\r\n                        goto out;\r\n                }\r\n\r\n                if (fp->f_type != DTYPE_VNODE) {\r\n                        error = EBADF;\r\n                        goto out;\r\n                }\r\n\r\n\r\nAnd sure enough, in xnu-1699 (for 10.7) and xnu-2050 (for 10.8), I see:\r\n\r\n        switch (uap->cmd) {\r\n\r\n        case F_DUPFD:\r\n        case F_DUPFD_CLOEXEC:\r\n\r\nIn any case, at least I understand the EBADF now.  The 10.6 fcntl(2)\r\nmanpage says nothing about that fallback-to-ioctl behavior, of course, nor\r\nthe EBADF-on-bogus-cmd.\r\n\r\n\r\n\r\n\r\nOn Mon, Aug 5, 2013 at 7:18 PM, <dave@cheney.net> wrote:\r\n\r\n> LGTM. Passes on my darwin/386 machine.\r\n>\r\n> https://codereview.appspot.**com/12493043/<https://codereview.appspot.com/12493043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-06 03:39:54.140010",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-06 05:14:38.038830",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, iant@golang.org, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-08-06 03:58:35.412100",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.  Slightly tweaked, no more init func, and better comment.\r\n\r\n\r\n\r\nOn Mon, Aug 5, 2013 at 8:58 PM, <bradfitz@golang.org> wrote:\r\n\r\n> Hello golang-dev@googlegroups.com, iant@golang.org, dave@cheney.net (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> https://codereview.appspot.**com/12493043/<https://codereview.appspot.com/12493043/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-06 03:59:07.970430",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Testing now. \r\n\r\nOn 06/08/2013, at 13:59, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n\r\n> PTAL.  Slightly tweaked, no more init func, and better comment.\r\n> \r\n> \r\n> \r\n> On Mon, Aug 5, 2013 at 8:58 PM, <bradfitz@golang.org> wrote:\r\n>> Hello golang-dev@googlegroups.com, iant@golang.org, dave@cheney.net (cc:\r\n>> golang-dev@googlegroups.com),\r\n>> \r\n>> Please take another look.\r\n>> \r\n>> \r\n>> https://codereview.appspot.com/12493043/\r\n> \r\n",
			"disapproval": false,
			"date": "2013-08-06 04:27:11.268220",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Thanks.",
			"disapproval": false,
			"date": "2013-08-06 05:32:13.142130",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=2585605c42c0 ***\n\nnet: detect bad F_DUPFD_CLOEXEC on OS X 10.6\n\nOn 10.6, OS X's fcntl returns EBADF instead of EINVAL.\n\nR=golang-dev, iant, dave\nCC=golang-dev\nhttps://codereview.appspot.com/12493043",
			"disapproval": false,
			"date": "2013-08-06 14:18:21.456610",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 12493043: net: detect bad F_DUPFD_CLOEXEC on OS X 10.6",
	"created": "2013-08-06 00:03:24.249590",
	"patchsets": [
		1,
		3001,
		6001,
		10001,
		13001,
		19001,
		26001
	],
	"modified": "2013-08-06 14:18:28.412450",
	"closed": true,
	"issue": 12493043
}