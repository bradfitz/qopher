{
	"description": "exp/html: simplify some of the parser's internal methods.\n\nbenchmark          old ns/op    new ns/op    delta\nBenchmarkParser      4006888      3950604   -1.40%",
	"cc": [
		"r@golang.org",
		"andybalholm@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-06-12 12:46:24.834429",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d2a010b34c0c ***\n\nexp/html: simplify some of the parser's internal methods.\n\nbenchmark          old ns/op    new ns/op    delta\nBenchmarkParser      4006888      3950604   -1.40%\n\nR=r, andybalholm\nCC=golang-dev\nhttp://codereview.appspot.com/6301070",
			"disapproval": false,
			"date": "2012-06-13 00:14:25.900052",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: andybalholm@gmail.com, golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-06-12 07:50:57.184446",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Submitting...\n\nhttp://codereview.appspot.com/6301070/diff/5001/src/pkg/exp/html/parse.go\nFile src/pkg/exp/html/parse.go (right):\n\nhttp://codereview.appspot.com/6301070/diff/5001/src/pkg/exp/html/parse.go#newcode1945\nsrc/pkg/exp/html/parse.go:1945: func (p *parser) parseImpliedToken(t TokenType, dataAtom a.Atom, data string) {\nOn 2012/06/12 14:57:06, andybalholm wrote:\n> While you're simplifying the signature of parseImpliedToken, you could probably\n> eliminate the third parameter too. Is data always equal to dataAtom.String()?\n\nNot if it's a self-closing tag that isn't a known tag. For something like <tagfromthefuture/>, the implied end token has dataAtom == 0 && data == \"tagfromthefuture\", but dataAtom.String() is \"\".",
			"disapproval": false,
			"date": "2012-06-12 23:47:37.626065",
			"approval": false
		},
		{
			"sender": "andybalholm@gmail.com",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6301070/diff/5001/src/pkg/exp/html/parse.go\nFile src/pkg/exp/html/parse.go (right):\n\nhttp://codereview.appspot.com/6301070/diff/5001/src/pkg/exp/html/parse.go#newcode1945\nsrc/pkg/exp/html/parse.go:1945: func (p *parser) parseImpliedToken(t TokenType, dataAtom a.Atom, data string) {\nWhile you're simplifying the signature of parseImpliedToken, you could probably eliminate the third parameter too. Is data always equal to dataAtom.String()?",
			"disapproval": false,
			"date": "2012-06-12 14:57:05.962611",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6301070: exp/html: simplify some of the parser's internal methods.",
	"created": "2012-06-12 07:50:36.683431",
	"patchsets": [
		1,
		2001,
		5001,
		8002
	],
	"modified": "2012-06-13 00:14:27.519334",
	"closed": true,
	"issue": 6301070
}