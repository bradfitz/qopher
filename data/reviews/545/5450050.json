{
	"description": "gofix: add time+fileinfo fix",
	"cc": [
		"adg@golang.org",
		"rogpeppe@gmail.com",
		"r@golang.org",
		"cw@f00f.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-11-30 04:07:22.713033",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Nov 30, 2011 at 12:18,  <r@golang.org> wrote:\n> this module will require better public explanation that most of the\n> others. there's a belief that gofix fixes, but it only tries to fix. in\n> this one, it fails much more often than the others, and the changes are\n> more sweeping. we will need citable documentation\n\nmore generally, we need documentation like this for all\nthe major changes in Go 1.\n",
			"disapproval": false,
			"date": "2011-11-30 17:20:25.295090",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nI will draft some text for Andrew to include in the weekly notes.\n",
			"disapproval": false,
			"date": "2011-11-30 17:28:42.618592",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5450050/diff/2001/src/cmd/gofix/timefileinfo_test.go\nFile src/cmd/gofix/timefileinfo_test.go (right):\n\nhttp://codereview.appspot.com/5450050/diff/2001/src/cmd/gofix/timefileinfo_test.go#newcode114\nsrc/cmd/gofix/timefileinfo_test.go:114: _ = time.Now()\nshouldn't these be\n  _ = time.Now().Unix()\n  _ = time.Now().UnixNano()\n?",
			"disapproval": false,
			"date": "2011-11-30 04:56:18.873960",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5450050/diff/2001/src/cmd/gofix/timefileinfo_test.go\nFile src/cmd/gofix/timefileinfo_test.go (right):\n\nhttp://codereview.appspot.com/5450050/diff/2001/src/cmd/gofix/timefileinfo_test.go#newcode114\nsrc/cmd/gofix/timefileinfo_test.go:114: _ = time.Now()\nOn 2011/11/30 04:56:18, adg wrote:\n> shouldn't these be\n>   _ = time.Now().Unix()\n>   _ = time.Now().UnixNano()\n> ?\n\nIf you were trying to keep existing code compiling, yes.\nBut I am trying instead to convert expressions to what\npeople should be writing using the new API.  There will\nbe type errors for people to fix.\n\nGofix is about helping to convert code to use the new API,\nnot preserving the exact semantics of existing code.",
			"disapproval": false,
			"date": "2011-11-30 14:30:43.653640",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"cw@f00f.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=7299b8a26342 ***\n\ngofix: add time+fileinfo fix\n\nR=adg, rogpeppe, r, cw\nCC=golang-dev\nhttp://codereview.appspot.com/5450050",
			"disapproval": false,
			"date": "2011-12-01 18:59:59.749062",
			"approval": false
		},
		{
			"sender": "rogpeppe@gmail.com",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5450050/diff/2001/src/cmd/gofix/timefileinfo_test.go\nFile src/cmd/gofix/timefileinfo_test.go (right):\n\nhttp://codereview.appspot.com/5450050/diff/2001/src/cmd/gofix/timefileinfo_test.go#newcode114\nsrc/cmd/gofix/timefileinfo_test.go:114: _ = time.Now()\nOn 2011/11/30 14:30:43, rsc wrote:\n> On 2011/11/30 04:56:18, adg wrote:\n> > shouldn't these be\n> >   _ = time.Now().Unix()\n> >   _ = time.Now().UnixNano()\n> > ?\n> \n> If you were trying to keep existing code compiling, yes.\n> But I am trying instead to convert expressions to what\n> people should be writing using the new API.  There will\n> be type errors for people to fix.\n> \n> Gofix is about helping to convert code to use the new API,\n> not preserving the exact semantics of existing code.\n\nthe problem i have with this is that on looking at the gofixed code, it's not obvious what units the original file was expecting - it could be awkward and error prone to match the gofixed Nows with the original Seconds or Nanoseconds calls.\ni think i'd convert Nanoseconds (the more common call) to Now, but Seconds to Now().Unix.",
			"disapproval": false,
			"date": "2011-11-30 15:29:53.484581",
			"approval": false
		},
		{
			"sender": "cw@f00f.org",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"cw@f00f.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nHaving just updated a few things, I'd like to see a draft of the release notes / docs explaining how to update things.\n\nI have cases where I did a quick pass to make things build and work (ie. time.Now.UnixNano() with math) but cleaner options exist now and having those explained would be useful).",
			"disapproval": false,
			"date": "2011-11-30 19:25:20.815473",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Nov 30, 2011 at 10:29,  <rogpeppe@gmail.com> wrote:\n> the problem i have with this is that on looking at the gofixed code,\n> it's not obvious what units the original file was expecting - it could\n> be awkward and error prone to match the gofixed Nows with the original\n> Seconds or Nanoseconds calls.\n> i think i'd convert Nanoseconds (the more common call) to Now, but\n> Seconds to Now().Unix.\n\nI expect people to check the diffs after running gofix.\nThere were many examples of code in the tree where\nthe correct rewrite for time.Seconds() was time.Now().\nIf we rewrite to time.Now().Unix() then we will end up\nwith clunky code that compiles instead of clean code\nthat doesn't compile.  I am going for the latter, so\nthat the developer can do the rest (which usually involves\nthought about data types).\n\nRuss\n",
			"disapproval": false,
			"date": "2011-11-30 15:44:20.087977",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "this module will require better public explanation that most of the others. there's a belief that gofix fixes, but it only tries to fix. in this one, it fails much more often than the others, and the changes are more sweeping. we will need citable documentation\n\nhttp://codereview.appspot.com/5450050/diff/2001/src/cmd/gofix/timefileinfo.go\nFile src/cmd/gofix/timefileinfo.go (right):\n\nhttp://codereview.appspot.com/5450050/diff/2001/src/cmd/gofix/timefileinfo.go#newcode72\nsrc/cmd/gofix/timefileinfo.go:72: called := make(map[interface{}]bool)\nthis variable's purpose 's mysterious enough to deserve a comment. it took me a couple of readthroughs to convince myself what it was doing and another that it would work. also the doc comment doesn't mention explicitly enough the test it does.\n\nhttp://codereview.appspot.com/5450050/diff/2001/src/cmd/gofix/timefileinfo.go#newcode80\nsrc/cmd/gofix/timefileinfo.go:80: return\nthis is fine but early out would obviously speed things up. not a recommendation, just a suggestion: use panic/recover to avoid the full walk, if only to have the pattern available in this tool.\n\nhttp://codereview.appspot.com/5450050/diff/2001/src/cmd/gofix/timefileinfo.go#newcode162\nsrc/cmd/gofix/timefileinfo.go:162: // The types might not work anymore, but the compiler will catch that.\ns/anymore/any more/\n\nbut really you mean\n\ns/any more/after this edit/",
			"disapproval": false,
			"date": "2011-11-30 17:18:36.287115",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"adg@golang.org",
				"rogpeppe@gmail.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but fix comment\n\nhttp://codereview.appspot.com/5450050/diff/1005/src/cmd/gofix/timefileinfo.go\nFile src/cmd/gofix/timefileinfo.go (right):\n\nhttp://codereview.appspot.com/5450050/diff/1005/src/cmd/gofix/timefileinfo.go#newcode68\nsrc/cmd/gofix/timefileinfo.go:68: //\tan attempt to call\nan attempt to call what?\n\nhttp://codereview.appspot.com/5450050/diff/1005/src/cmd/gofix/timefileinfo.go#newcode73\nsrc/cmd/gofix/timefileinfo.go:73: // called records the expression that appear as\ns/expression/&s/",
			"disapproval": false,
			"date": "2011-11-30 17:35:17.276951",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5450050: gofix: add time+fileinfo fix",
	"created": "2011-11-30 04:04:10.191112",
	"patchsets": [
		1,
		2001,
		1005,
		1007,
		4004
	],
	"modified": "2011-12-01 19:00:01.747134",
	"closed": true,
	"issue": 5450050
}