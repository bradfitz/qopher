{
	"description": "syscall: return error, not uintptr, when function returns error",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5450119/diff/3/src/pkg/syscall/syscall_windows.go\nFile src/pkg/syscall/syscall_windows.go (right):\n\nhttp://codereview.appspot.com/5450119/diff/3/src/pkg/syscall/syscall_windows.go#newcode83\nsrc/pkg/syscall/syscall_windows.go:83: // deal with special go errors\nI would not complain if the special Go errors had a\ndifferent type, like GoError.",
			"disapproval": false,
			"date": "2011-12-07 18:40:49.298413",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-07 04:25:37.801951",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5450119/diff/3/src/pkg/syscall/syscall_windows.go\nFile src/pkg/syscall/syscall_windows.go (right):\n\nhttp://codereview.appspot.com/5450119/diff/3/src/pkg/syscall/syscall_windows.go#newcode83\nsrc/pkg/syscall/syscall_windows.go:83: // deal with special go errors\nAre you talking about E2BIG, EACCES, EADDRINUSE, EADDRNOTAVAIL and so on? If yes, then they are Errno at the moment, and I see no problem with that. Windows allows applications to create their own specific errors (as long as their errno is greater then APPLICATION_ERROR), and that is what these are. Why would you want to see them separate from Errno?\n\nRegardless, I would like to submit this CL as is and worry about GoErrors in the future CL.",
			"disapproval": false,
			"date": "2011-12-08 00:16:54.665755",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=fafcd328da73 ***\n\nsyscall: return error, not uintptr, when function returns error\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5450119",
			"disapproval": false,
			"date": "2011-12-08 01:07:31.284297",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5450119: syscall: return error, not uintptr, when function retur...",
	"created": "2011-12-07 04:03:55.609356",
	"patchsets": [
		1,
		2001,
		3,
		8001
	],
	"modified": "2011-12-08 01:07:33.428929",
	"closed": true,
	"issue": 5450119
}