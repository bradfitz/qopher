{
	"description": "regexp: avoid allocation of input interface\n\nMatters most for small inputs, because there is no real work\nto amortize the allocation effort against.\n\nbenchmark                                old ns/op    new ns/op    delta\nBenchmarkLiteral                               613          473  -22.84%\nBenchmarkNotLiteral                           4981         4931   -1.00%\nBenchmarkMatchClass                           7289         7122   -2.29%\nBenchmarkMatchClass_InRange                   6618         6663   +0.68%\nBenchmarkReplaceAll                           7843         7233   -7.78%\nBenchmarkAnchoredLiteralShortNonMatch          329          228  -30.70%\nBenchmarkAnchoredLiteralLongNonMatch           322          228  -29.19%\nBenchmarkAnchoredShortMatch                    838          715  -14.68%\nBenchmarkAnchoredLongMatch                     824          715  -13.23%\n\nbenchmark                                 old MB/s     new MB/s  speedup\nBenchmarkMatchEasy0_32                      119.73       196.61    1.64x\nBenchmarkMatchEasy0_1K                      540.58       538.33    1.00x\nBenchmarkMatchEasy0_32K                     732.57       714.00    0.97x\nBenchmarkMatchEasy0_1M                      726.44       708.36    0.98x\nBenchmarkMatchEasy0_32M                     707.77       691.45    0.98x\nBenchmarkMatchEasy1_32                      102.12       136.11    1.33x\nBenchmarkMatchEasy1_1K                      298.31       307.04    1.03x\nBenchmarkMatchEasy1_32K                     273.56       274.43    1.00x\nBenchmarkMatchEasy1_1M                      268.42       269.23    1.00x\nBenchmarkMatchEasy1_32M                     266.15       267.34    1.00x\nBenchmarkMatchMedium_32                       2.53         3.38    1.34x\nBenchmarkMatchMedium_1K                       9.37         9.57    1.02x\nBenchmarkMatchMedium_32K                      9.29         9.67    1.04x\nBenchmarkMatchMedium_1M                       9.42         9.66    1.03x\nBenchmarkMatchMedium_32M                      9.41         9.62    1.02x\nBenchmarkMatchHard_32                         6.66         6.75    1.01x\nBenchmarkMatchHard_1K                         6.81         6.85    1.01x\nBenchmarkMatchHard_32K                        6.79         6.85    1.01x\nBenchmarkMatchHard_1M                         6.82         6.83    1.00x\nBenchmarkMatchHard_32M                        6.80         6.80    1.00x",
	"cc": [
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-12-07 16:35:36.119133",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2a3612bd134b ***\n\nregexp: avoid allocation of input interface\n\nMatters most for small inputs, because there is no real work\nto amortize the allocation effort against.\n\nbenchmark                                old ns/op    new ns/op    delta\nBenchmarkLiteral                               613          473  -22.84%\nBenchmarkNotLiteral                           4981         4931   -1.00%\nBenchmarkMatchClass                           7289         7122   -2.29%\nBenchmarkMatchClass_InRange                   6618         6663   +0.68%\nBenchmarkReplaceAll                           7843         7233   -7.78%\nBenchmarkAnchoredLiteralShortNonMatch          329          228  -30.70%\nBenchmarkAnchoredLiteralLongNonMatch           322          228  -29.19%\nBenchmarkAnchoredShortMatch                    838          715  -14.68%\nBenchmarkAnchoredLongMatch                     824          715  -13.23%\n\nbenchmark                                 old MB/s     new MB/s  speedup\nBenchmarkMatchEasy0_32                      119.73       196.61    1.64x\nBenchmarkMatchEasy0_1K                      540.58       538.33    1.00x\nBenchmarkMatchEasy0_32K                     732.57       714.00    0.97x\nBenchmarkMatchEasy0_1M                      726.44       708.36    0.98x\nBenchmarkMatchEasy0_32M                     707.77       691.45    0.98x\nBenchmarkMatchEasy1_32                      102.12       136.11    1.33x\nBenchmarkMatchEasy1_1K                      298.31       307.04    1.03x\nBenchmarkMatchEasy1_32K                     273.56       274.43    1.00x\nBenchmarkMatchEasy1_1M                      268.42       269.23    1.00x\nBenchmarkMatchEasy1_32M                     266.15       267.34    1.00x\nBenchmarkMatchMedium_32                       2.53         3.38    1.34x\nBenchmarkMatchMedium_1K                       9.37         9.57    1.02x\nBenchmarkMatchMedium_32K                      9.29         9.67    1.04x\nBenchmarkMatchMedium_1M                       9.42         9.66    1.03x\nBenchmarkMatchMedium_32M                      9.41         9.62    1.02x\nBenchmarkMatchHard_32                         6.66         6.75    1.01x\nBenchmarkMatchHard_1K                         6.81         6.85    1.01x\nBenchmarkMatchHard_32K                        6.79         6.85    1.01x\nBenchmarkMatchHard_1M                         6.82         6.83    1.00x\nBenchmarkMatchHard_32M                        6.80         6.80    1.00x\n\nR=golang-dev, r\nCC=golang-dev\nhttp://codereview.appspot.com/5453076",
			"disapproval": false,
			"date": "2011-12-07 20:03:08.961775",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-12-07 17:10:52.588726",
			"approval": true
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5453076: regexp: avoid allocation of input interface",
	"created": "2011-12-07 15:53:44.469605",
	"patchsets": [
		1,
		2001,
		2002,
		6001,
		2009
	],
	"modified": "2011-12-07 20:03:09.456984",
	"closed": true,
	"issue": 5453076
}