{
	"description": "runtime: make LockOSThread nestable\n\nThis change makes calling LockOSThread and UnlockOSThread safe\nin library code, which is important when making syscalls that\nreturn pointers to per-thread data. Without this change it is\nunsafe to call UnlockOSThread in such cases, since if user\nalready called LockOSThread then UnlockOSThread would unlock\nit unconditionally.\n\nFixes issue 3775.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"remyoudompheng@gmail.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-23 19:42:42.601040",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/23 20:39:01, dfc wrote:\n> Could we say reenterent rather than nestable ?\n\nI'm not sure, according to wikipedia:\n\nhttp://en.wikipedia.org/wiki/Reentrancy_(computing)\n\nReentrancy is about interruption and unfinished calls. And acconding to that definition LockOSThread is not reentrant, since it cannot be interrupted and re-entered. That's why I said nestable. :)",
			"disapproval": false,
			"date": "2013-01-23 20:43:13.620190",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/23 21:50:05, rsc wrote:\n> NOT LGTM sorry\n> \n> I believe this is an API change and therefore not something we should do.\n\nOK, what about exporting runtime.LockedOSThread? It's already there, it's only used for tests at the moment, but having would make this possible:\n\nif !runtime.LockedOSThread() {\n    runtime.LockOSThread()\n    defer runtime.UnlockOSThread()\n}\n\nI think launching new goroutine just for locking (and then sending the result back) is an overkill in this case.",
			"disapproval": false,
			"date": "2013-01-24 05:54:10.246050",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/23 19:42:42, snaury wrote:\n> Hello mailto:golang-dev@googlegroups.com,\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go/\n\nOoops, now init() may unlock os thread, which shouldn't happen. Will fix shortly.",
			"disapproval": false,
			"date": "2013-01-23 20:03:28.499000",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-23 20:16:15.488570",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-23 20:30:07.435070",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/1/23  <snaury@gmail.com> wrote:\r\n> On 2013/01/23 20:39:01, dfc wrote:\r\n>>\r\n>> Could we say reenterent rather than nestable ?\r\n>\r\n>\r\n> I'm not sure, according to wikipedia:\r\n>\r\n> http://en.wikipedia.org/wiki/Reentrancy_(computing)\r\n>\r\n> Reentrancy is about interruption and unfinished calls. And acconding to\r\n> that definition LockOSThread is not reentrant, since it cannot be\r\n> interrupted and re-entered. That's why I said nestable. :)\r\n>\r\n> https://codereview.appspot.com/7197050/\r\n\r\nMaybe you could say this patch makes it a semaphore.\r\n\r\nR\u00e9my.\r\n",
			"disapproval": false,
			"date": "2013-01-23 21:12:30.471600",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "NOT LGTM sorry\r\n\r\nI believe this is an API change and therefore not something we should do.\r\nIt is easy to simulate what you need by launching a new goroutine, having\r\nit lock, and then waiting for it to finish. It's probably not even that\r\nmuch more expensive.\r\n\r\nRuss\r\n",
			"disapproval": true,
			"date": "2013-01-23 21:50:05.852750",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-23 20:30:30.287990",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Could we say reenterent rather than nestable ?\r\n\r\nOn 24/01/2013, at 7:16, snaury@gmail.com wrote:\r\n\r\n> Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\r\n> \r\n> Please take another look.\r\n> \r\n> \r\n> https://codereview.appspot.com/7197050/\r\n",
			"disapproval": false,
			"date": "2013-01-23 20:39:01.293200",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I believe we've found a better solution in the Windows case.\r\n\r\nIn general runtime.LockOSThread is so ugly it should not exist. I don't\r\nwant to add more ugliness. Making it easier to use is not the answer.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-30 17:04:37.775520",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/30 17:04:37, rsc wrote:\n> I believe we've found a better solution in the Windows case.\n\nGlad to hear that, I'll abandon these CLs then.",
			"disapproval": false,
			"date": "2013-01-30 17:13:41.871300",
			"approval": false
		},
		{
			"sender": "snaury@gmail.com",
			"recipients": [
				"snaury@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-01-30 17:15:21.967720",
			"approval": false
		}
	],
	"owner_email": "snaury@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "snaury",
	"subject": "code review 7197050: runtime: make LockOSThread nestable",
	"created": "2013-01-23 19:42:21.388640",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		2003,
		13001
	],
	"modified": "2013-01-30 17:15:23.366410",
	"closed": true,
	"issue": 7197050
}