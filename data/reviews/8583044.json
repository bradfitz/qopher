{
	"description": "encoding/json: fix handling of anonymous fields\nThe old code was incorrect and also broken. It passed the tests by accident.\nThe new algorithm is:\n        1) Sort the fields in order of names.\n        2) For all fields with the same name, sort in increasing depth.\n        3) Choose the single field with shortest depth.\nIf any of the fields of a given name has a tag, do the above using\ntagged fields of that name only.\nFixes issue 5245.",
	"cc": [
		"iant@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello iant (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-04-09 21:04:40.946160",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"r@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nMuch easier to understand.\n\nhttps://codereview.appspot.com/8583044/diff/1/src/pkg/encoding/json/encode.go\nFile src/pkg/encoding/json/encode.go (right):\n\nhttps://codereview.appspot.com/8583044/diff/1/src/pkg/encoding/json/encode.go#newcode658\nsrc/pkg/encoding/json/encode.go:658: // except that fields with JSON tags are promoted.\nIs there a test for the promotion of tags?\n\nhttps://codereview.appspot.com/8583044/diff/1/src/pkg/encoding/json/encode.go#newcode697\nsrc/pkg/encoding/json/encode.go:697: // will be false: This condition is an error in Go and we skip all\nCan we have a test for this: a case in which a field is ambiguous and is therefore skipped?",
			"disapproval": false,
			"date": "2013-04-09 21:31:29.972650",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8583044/diff/1/src/pkg/encoding/json/encode.go\nFile src/pkg/encoding/json/encode.go (right):\n\nhttps://codereview.appspot.com/8583044/diff/1/src/pkg/encoding/json/encode.go#newcode658\nsrc/pkg/encoding/json/encode.go:658: // except that fields with JSON tags are promoted.\nOn 2013/04/09 21:31:30, iant wrote:\n> Is there a test for the promotion of tags?\n\ncase #59 in decode_test.go, the one with type Top.\n\nhttps://codereview.appspot.com/8583044/diff/1/src/pkg/encoding/json/encode.go#newcode697\nsrc/pkg/encoding/json/encode.go:697: // will be false: This condition is an error in Go and we skip all\nOn 2013/04/09 21:31:30, iant wrote:\n> Can we have a test for this: a case in which a field is ambiguous and is\n> therefore skipped?\nDone",
			"disapproval": false,
			"date": "2013-04-09 21:59:55.766340",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=4a712e80e9b1 ***\n\nencoding/json: fix handling of anonymous fields\nThe old code was incorrect and also broken. It passed the tests by accident.\nThe new algorithm is:\n        1) Sort the fields in order of names.\n        2) For all fields with the same name, sort in increasing depth.\n        3) Choose the single field with shortest depth.\nIf any of the fields of a given name has a tag, do the above using\ntagged fields of that name only.\nFixes issue 5245.\n\nR=iant\nCC=golang-dev\nhttps://codereview.appspot.com/8583044",
			"disapproval": false,
			"date": "2013-04-09 22:00:25.240160",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 8583044: encoding/json: fix handling of anonymous fields",
	"created": "2013-04-09 21:04:36.371070",
	"patchsets": [
		1,
		5001
	],
	"modified": "2013-04-09 22:00:26.902740",
	"closed": true,
	"issue": 8583044
}