{
	"description": "compress/testdata: change {e,pi}.txt from 10k to 100k digits.\n\nThese files change from exactly 10003 bytes long to 100003: a digit,\na '.', 100k digits, and a '\\n'.\n\nThe magic constants in compress/flate/deflate_test.go change since\ndeflateInflateStringTests checks that the compressed form of e.txt\nis not 'too large'. I'm not exactly sure how these numbers were\noriginally calculated (they were introduced in codereview 5554066\n\"make lazy matching work\"); perhaps krasin@golang.org can comment.\nMy change was to increase the first one (no compression) to a tight\nbound, and multiply all the others by 10.\n\nBenchcmp numbers for compress/flate and compress/lzw below. LZW's\nwindow size of 4096 is less than 10k, so shows no significant change.\nFlate's window size is 32768, between 10k and 100k, and so the .*1e5\nand .*1e6 benchmarks show a dramatic drop, since the compressed forms\nare no longer a trivial forward copy of 10k digits repeated over and\nover, but should now be more representative of real world usage.\n\ncompress/flate:\nbenchmark                            old MB/s     new MB/s  speedup\nBenchmarkDecodeDigitsSpeed1e4           16.58        16.52    1.00x\nBenchmarkDecodeDigitsSpeed1e5           68.09        18.10    0.27x\nBenchmarkDecodeDigitsSpeed1e6          124.63        18.35    0.15x\nBenchmarkDecodeDigitsDefault1e4         17.21        17.12    0.99x\nBenchmarkDecodeDigitsDefault1e5        118.28        19.19    0.16x\nBenchmarkDecodeDigitsDefault1e6        295.62        20.52    0.07x\nBenchmarkDecodeDigitsCompress1e4        17.22        17.17    1.00x\nBenchmarkDecodeDigitsCompress1e5       118.19        19.21    0.16x\nBenchmarkDecodeDigitsCompress1e6       295.59        20.55    0.07x\nBenchmarkEncodeDigitsSpeed1e4            8.18         8.19    1.00x\nBenchmarkEncodeDigitsSpeed1e5           43.22        12.84    0.30x\nBenchmarkEncodeDigitsSpeed1e6           80.76        13.48    0.17x\nBenchmarkEncodeDigitsDefault1e4          6.29         6.19    0.98x\nBenchmarkEncodeDigitsDefault1e5         31.63         3.60    0.11x\nBenchmarkEncodeDigitsDefault1e6         52.97         3.24    0.06x\nBenchmarkEncodeDigitsCompress1e4         6.20         6.19    1.00x\nBenchmarkEncodeDigitsCompress1e5        31.59         3.59    0.11x\nBenchmarkEncodeDigitsCompress1e6        53.18         3.25    0.06x\n\ncompress/lzw:\nbenchmark               old MB/s     new MB/s  speedup\nBenchmarkDecoder1e4        21.99        22.09    1.00x\nBenchmarkDecoder1e5        22.77        22.71    1.00x\nBenchmarkDecoder1e6        22.90        22.90    1.00x\nBenchmarkEncoder1e4        21.04        21.19    1.01x\nBenchmarkEncoder1e5        22.06        22.06    1.00x\nBenchmarkEncoder1e6        22.16        22.28    1.01x",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com",
		"krasin@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-05-08 23:58:36.560662",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"krasin@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com, krasin@golang.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-08 23:52:18.279107",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"krasin@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=fc36a482fea3 ***\n\ncompress/testdata: change {e,pi}.txt from 10k to 100k digits.\n\nThese files change from exactly 10003 bytes long to 100003: a digit,\na '.', 100k digits, and a '\\n'.\n\nThe magic constants in compress/flate/deflate_test.go change since\ndeflateInflateStringTests checks that the compressed form of e.txt\nis not 'too large'. I'm not exactly sure how these numbers were\noriginally calculated (they were introduced in codereview 5554066\n\"make lazy matching work\"); perhaps krasin@golang.org can comment.\nMy change was to increase the first one (no compression) to a tight\nbound, and multiply all the others by 10.\n\nBenchcmp numbers for compress/flate and compress/lzw below. LZW's\nwindow size of 4096 is less than 10k, so shows no significant change.\nFlate's window size is 32768, between 10k and 100k, and so the .*1e5\nand .*1e6 benchmarks show a dramatic drop, since the compressed forms\nare no longer a trivial forward copy of 10k digits repeated over and\nover, but should now be more representative of real world usage.\n\ncompress/flate:\nbenchmark                            old MB/s     new MB/s  speedup\nBenchmarkDecodeDigitsSpeed1e4           16.58        16.52    1.00x\nBenchmarkDecodeDigitsSpeed1e5           68.09        18.10    0.27x\nBenchmarkDecodeDigitsSpeed1e6          124.63        18.35    0.15x\nBenchmarkDecodeDigitsDefault1e4         17.21        17.12    0.99x\nBenchmarkDecodeDigitsDefault1e5        118.28        19.19    0.16x\nBenchmarkDecodeDigitsDefault1e6        295.62        20.52    0.07x\nBenchmarkDecodeDigitsCompress1e4        17.22        17.17    1.00x\nBenchmarkDecodeDigitsCompress1e5       118.19        19.21    0.16x\nBenchmarkDecodeDigitsCompress1e6       295.59        20.55    0.07x\nBenchmarkEncodeDigitsSpeed1e4            8.18         8.19    1.00x\nBenchmarkEncodeDigitsSpeed1e5           43.22        12.84    0.30x\nBenchmarkEncodeDigitsSpeed1e6           80.76        13.48    0.17x\nBenchmarkEncodeDigitsDefault1e4          6.29         6.19    0.98x\nBenchmarkEncodeDigitsDefault1e5         31.63         3.60    0.11x\nBenchmarkEncodeDigitsDefault1e6         52.97         3.24    0.06x\nBenchmarkEncodeDigitsCompress1e4         6.20         6.19    1.00x\nBenchmarkEncodeDigitsCompress1e5        31.59         3.59    0.11x\nBenchmarkEncodeDigitsCompress1e6        53.18         3.25    0.06x\n\ncompress/lzw:\nbenchmark               old MB/s     new MB/s  speedup\nBenchmarkDecoder1e4        21.99        22.09    1.00x\nBenchmarkDecoder1e5        22.77        22.71    1.00x\nBenchmarkDecoder1e6        22.90        22.90    1.00x\nBenchmarkEncoder1e4        21.04        21.19    1.01x\nBenchmarkEncoder1e5        22.06        22.06    1.00x\nBenchmarkEncoder1e6        22.16        22.28    1.01x\n\nR=rsc\nCC=golang-dev, krasin\nhttp://codereview.appspot.com/6207043",
			"disapproval": false,
			"date": "2012-05-09 00:02:52.678925",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6207043: compress/testdata: change {e,pi}.txt from 10k to 100k d...",
	"created": "2012-05-08 23:51:19.907524",
	"patchsets": [
		1,
		2001,
		5001,
		5002
	],
	"modified": "2012-05-09 00:02:55.769392",
	"closed": true,
	"issue": 6207043
}