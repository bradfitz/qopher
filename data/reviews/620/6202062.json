{
	"description": "exp/locale/collate: implementation of main collation functionality for\nkey and simple comparisson. Search is not yet implemented in this CL.\nChanged some of the types of table_test.go to allow reuse in the new test.\nAlso reduced number of primary values for illegal runes to 1 (both map to\nthe same).",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-05-09 13:10:20.001675",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=0581aafd0aaf ***\n\nexp/locale/collate: implementation of main collation functionality for\nkey and simple comparisson. Search is not yet implemented in this CL.\nChanged some of the types of table_test.go to allow reuse in the new test.\nAlso reduced number of primary values for illegal runes to 1 (both map to\nthe same).\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/6202062\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate.go\nFile src/pkg/exp/locale/collate/collate.go (right):\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate.go#newcode127\nsrc/pkg/exp/locale/collate/collate.go:127: // Compares calls ResetKeys, thereby invalidating keys\nOn 2012/05/10 18:59:17, r wrote:\n> s/Compares/Compare/\n\nDone.\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate.go#newcode143\nsrc/pkg/exp/locale/collate/collate.go:143: // Compares calls ResetKeys, thereby invalidating keys\nOn 2012/05/10 18:59:17, r wrote:\n> s/Compares/CompareString/\n\nDone.\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate.go#newcode171\nsrc/pkg/exp/locale/collate/collate.go:171: // The returned slice will point to an allocation in Buffer and will retain\nOn 2012/05/10 18:59:17, r wrote:\n> s/retain/remain/\n\nDone.\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go\nFile src/pkg/exp/locale/collate/collate_test.go (right):\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode33\nsrc/pkg/exp/locale/collate/collate_test.go:33: }\nOn 2012/05/10 18:59:17, r wrote:\n> add blank line\n\nDone.\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode202\nsrc/pkg/exp/locale/collate/collate_test.go:202: t.Errorf(\"%d: len(ws) was %d; want %d (%v vs %v)\", i, len(res), len(tt.out), res, tt.out)\nOn 2012/05/10 18:59:17, r wrote:\n> s/vs/should be/\n\nDone.\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode307\nsrc/pkg/exp/locale/collate/collate_test.go:307: t.Errorf(\"%d: len(ws) was %d; want %d (%X vs %X)\", i, len(res), len(tt.out), res, tt.out)\nOn 2012/05/10 18:59:17, r wrote:\n> ditto\n\nDone.\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode319\nsrc/pkg/exp/locale/collate/collate_test.go:319: fmt.Printf(\"\\n\")\nOn 2012/05/10 18:59:17, r wrote:\n> d\n\nDone.\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode417\nsrc/pkg/exp/locale/collate/collate_test.go:417: t.Errorf(`%d: Compare(\"%s\", \"%s\") == %d; want %d`, i, tt.a, tt.b, res, tt.res)\nOn 2012/05/10 18:59:17, r wrote:\n> use %q on these string args?\n\nDone.\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode420\nsrc/pkg/exp/locale/collate/collate_test.go:420: t.Errorf(`%d: CompareString(\"%s\", \"%s\") == %d; want %d`, i, tt.a, tt.b, res, tt.res)\nOn 2012/05/10 18:59:17, r wrote:\n> ditto\n\nDone.",
			"disapproval": false,
			"date": "2012-05-17 17:49:04.592507",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nnice\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate.go\nFile src/pkg/exp/locale/collate/collate.go (right):\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate.go#newcode127\nsrc/pkg/exp/locale/collate/collate.go:127: // Compares calls ResetKeys, thereby invalidating keys\ns/Compares/Compare/\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate.go#newcode143\nsrc/pkg/exp/locale/collate/collate.go:143: // Compares calls ResetKeys, thereby invalidating keys\ns/Compares/CompareString/\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate.go#newcode171\nsrc/pkg/exp/locale/collate/collate.go:171: // The returned slice will point to an allocation in Buffer and will retain\ns/retain/remain/\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go\nFile src/pkg/exp/locale/collate/collate_test.go (right):\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode33\nsrc/pkg/exp/locale/collate/collate_test.go:33: }\nadd blank line\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode202\nsrc/pkg/exp/locale/collate/collate_test.go:202: t.Errorf(\"%d: len(ws) was %d; want %d (%v vs %v)\", i, len(res), len(tt.out), res, tt.out)\ns/vs/should be/\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode307\nsrc/pkg/exp/locale/collate/collate_test.go:307: t.Errorf(\"%d: len(ws) was %d; want %d (%X vs %X)\", i, len(res), len(tt.out), res, tt.out)\nditto\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode319\nsrc/pkg/exp/locale/collate/collate_test.go:319: fmt.Printf(\"\\n\")\nd\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode417\nsrc/pkg/exp/locale/collate/collate_test.go:417: t.Errorf(`%d: Compare(\"%s\", \"%s\") == %d; want %d`, i, tt.a, tt.b, res, tt.res)\nuse %q on these string args?\n\nhttp://codereview.appspot.com/6202062/diff/4001/src/pkg/exp/locale/collate/collate_test.go#newcode420\nsrc/pkg/exp/locale/collate/collate_test.go:420: t.Errorf(`%d: CompareString(\"%s\", \"%s\") == %d; want %d`, i, tt.a, tt.b, res, tt.res)\nditto",
			"disapproval": false,
			"date": "2012-05-10 18:59:17.582982",
			"approval": true
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 6202062: exp/locale/collate: implementation of main collation fu...",
	"created": "2012-05-09 13:09:46.503083",
	"patchsets": [
		1,
		2001,
		4001,
		9001
	],
	"modified": "2012-05-17 17:49:06.150956",
	"closed": true,
	"issue": 6202062
}