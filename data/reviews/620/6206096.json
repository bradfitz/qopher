{
	"description": "go/ast: document CommentGroup.Text and add test case.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-05-21 22:24:37.919158",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-05-22 17:26:50.475491",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hold your horses on this one - it causes all kinds of (testing) trouble.\r\n- gri\r\n\r\nOn Mon, May 21, 2012 at 3:24 PM,  <gri@golang.org> wrote:\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> go/ast: Remove irregularity from CommentGroup.Text.\r\n>\r\n> Also:\r\n> - more precise documentation\r\n> - added corresponding test case\r\n>\r\n> Please review this at http://codereview.appspot.com/6206096/\r\n>\r\n> Affected files:\r\n> \u00a0M src/pkg/go/ast/ast.go\r\n> \u00a0A src/pkg/go/ast/ast_test.go\r\n>\r\n>\r\n> Index: src/pkg/go/ast/ast.go\r\n> ===================================================================\r\n> --- a/src/pkg/go/ast/ast.go\r\n> +++ b/src/pkg/go/ast/ast.go\r\n> @@ -87,8 +87,11 @@\r\n> \u00a0 \u00a0 \u00a0 \u00a0return s[0:i]\r\n> \u00a0}\r\n>\r\n> -// Text returns the text of the comment,\r\n> -// with the comment markers - //, /*, and */ - removed.\r\n> +// Text returns the text of the comment.\r\n> +// Comment markers (//, /*, and */), leading and trailing empty lines are\r\n> +// removed, multiple empty lines are reduced to one, and trailing space on\r\n> +// lines is trimmed. Unless the result is empty, it is newline-terminated.\r\n> +//\r\n> \u00a0func (g *CommentGroup) Text() string {\r\n> \u00a0 \u00a0 \u00a0 \u00a0if g == nil {\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return \"\"\r\n> @@ -104,14 +107,8 @@\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// The parser has given us exactly the comment text.\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0switch c[1] {\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0case '/':\r\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //-style comment\r\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 //-style comment (no newline at the end)\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0c = c[2:]\r\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // Remove leading space after //, if there is one.\r\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // TODO(gri) This appears to be necessary in\r\n> isolated\r\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 // \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cases (bignum.RatFromString) - why?\r\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if len(c) > 0 && c[0] == ' ' {\r\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 c = c[1:]\r\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0case '*':\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0/*-style comment */\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0c = c[2 : len(c)-2]\r\n> Index: src/pkg/go/ast/ast_test.go\r\n> ===================================================================\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/src/pkg/go/ast/ast_test.go\r\n> @@ -0,0 +1,50 @@\r\n> +// Copyright 2012 The Go Authors. All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +package ast\r\n> +\r\n> +import (\r\n> + \u00a0 \u00a0 \u00a0 \"testing\"\r\n> +)\r\n> +\r\n> +var comments = []struct {\r\n> + \u00a0 \u00a0 \u00a0 list []string\r\n> + \u00a0 \u00a0 \u00a0 text string\r\n> +}{\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"//\"}, \"\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"// \u00a0 \"}, \"\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"//\", \"//\", \"// \u00a0 \"}, \"\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"// foo \u00a0 \"}, \" foo\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"//\", \"//\", \"// foo\"}, \" foo\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"// foo \u00a0bar \u00a0\"}, \" foo \u00a0bar\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"// foo\", \"// bar\"}, \" foo\\n bar\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"// foo\", \"//\", \"//\", \"//\", \"// bar\"}, \" foo\\n\\n bar\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"// foo\", \"/* bar */\"}, \" foo\\n bar\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"//\", \"//\", \"//\", \"// foo\", \"//\", \"//\", \"//\"}, \" foo\\n\"},\r\n> +\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"/**/\"}, \"\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"/* \u00a0 */\"}, \"\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"/**/\", \"/**/\", \"/* \u00a0 */\"}, \"\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"/* Foo \u00a0 */\"}, \" Foo\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"/* Foo \u00a0Bar \u00a0*/\"}, \" Foo \u00a0Bar\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"/* Foo*/\", \"/* Bar*/\"}, \" Foo\\n Bar\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"/* Foo*/\", \"/**/\", \"/**/\", \"/**/\", \"// Bar\"}, \" Foo\\n\\n\r\n> Bar\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"/* Foo*/\", \"/*\\n*/\", \"//\", \"/*\\n*/\", \"// Bar\"}, \" Foo\\n\\n\r\n> Bar\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"/* Foo*/\", \"// Bar\"}, \" Foo\\n Bar\\n\"},\r\n> + \u00a0 \u00a0 \u00a0 {[]string{\"/* Foo\\n Bar*/\"}, \" Foo\\n Bar\\n\"},\r\n> +}\r\n> +\r\n> +func TestCommentText(t *testing.T) {\r\n> + \u00a0 \u00a0 \u00a0 for i, c := range comments {\r\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 list := make([]*Comment, len(c.list))\r\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 for i, s := range c.list {\r\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 list[i] = &Comment{Text: s}\r\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n> +\r\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 text := (&CommentGroup{list}).Text()\r\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if text != c.text {\r\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 t.Errorf(\"case %d: got %q; expected %q\", i, text,\r\n> c.text)\r\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\r\n> + \u00a0 \u00a0 \u00a0 }\r\n> +}\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-22 01:03:49.685908",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-22 16:59:12.118748",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3446429f1ec4 ***\n\ngo/ast: document CommentGroup.Text and add test case.\n\nR=golang-dev, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6206096",
			"disapproval": false,
			"date": "2012-05-22 17:30:38.331480",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 6206096: go/ast: document CommentGroup.Text and add test case.",
	"created": "2012-05-21 22:21:16.510633",
	"patchsets": [
		1,
		2001,
		5001,
		5002,
		3003,
		7005,
		11001,
		11002
	],
	"modified": "2012-05-22 17:30:40.617952",
	"closed": true,
	"issue": 6206096
}