{
	"description": "net/http: clarify ErrBodyNotAllowed error message\n\nIt's usually due to writing on HEAD requests.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"r@google.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-23 15:58:16.808989",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\r\nOn May 23, 2012, at 9:09 AM, Brad Fitzpatrick wrote:\r\n\r\n> Even shorter would be \"bad\", which is also not helpful in diagnosing the problem.\r\n> \r\n> If you can suggest something both short and helpful, I'm all ears.\r\n> \r\n> On Wed, May 23, 2012 at 8:59 AM, Russ Cox <rsc@golang.org> wrote:\r\n> \"http: body not allowed\" ?\r\n> \r\n\r\nEPERM is shorter than \"Permission denied\", which is shorter than a proper error message with good context, like \"cannot open /tmp/precious: Permission denied\".\r\n\r\nWhat makes good error messages is the context more than the message itself. With good context, \"http: body not allowed\" is enough. If you can't give context, the proposed replacement is probably better. If you have context and the original, the message will be logorrheic.\r\n\r\n-rob\r\n\r\n",
			"disapproval": false,
			"date": "2012-05-23 16:19:31.718714",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\"http: body not allowed\" ?\r\n",
			"disapproval": false,
			"date": "2012-05-23 16:06:44.340728",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Even shorter would be \"bad\", which is also not helpful in diagnosing the\r\nproblem.\r\n\r\nIf you can suggest something both short and helpful, I'm all ears.\r\n\r\nOn Wed, May 23, 2012 at 8:59 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> \"http: body not allowed\" ?\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-23 16:09:33.778835",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, May 23, 2012 at 9:19 AM, Rob 'Commander' Pike <r@google.com> wrote:\r\n\r\n>\r\n> On May 23, 2012, at 9:09 AM, Brad Fitzpatrick wrote:\r\n>\r\n> Even shorter would be \"bad\", which is also not helpful in diagnosing the\r\n> problem.\r\n>\r\n> If you can suggest something both short and helpful, I'm all ears.\r\n>\r\n> On Wed, May 23, 2012 at 8:59 AM, Russ Cox <rsc@golang.org> wrote:\r\n>\r\n>> \"http: body not allowed\" ?\r\n>>\r\n>\r\n>\r\n> EPERM is shorter than \"Permission denied\", which is shorter than a proper\r\n> error message with good context, like \"cannot open /tmp/precious:\r\n> Permission denied\".\r\n>\r\n> What makes good error messages is the context more than the message\r\n> itself. With good context, \"http: body not allowed\" is enough. If you can't\r\n> give context, the proposed replacement is probably better. If you have\r\n> context and the original, the message will be logorrheic.\r\n>\r\n\r\nI have context but can't return it without breaking Go1 compatibility.\r\n ErrBodyNotAllowed is part of the API and what we normally return.  I can't\r\nstart returning a new type.\r\n",
			"disapproval": false,
			"date": "2012-05-23 16:25:54.563946",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"r@google.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-05-23 16:29:11.704124",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I have context but can't return it without breaking Go1 compatibility.\r\n> \u00a0ErrBodyNotAllowed is part of the API and what we normally return. \u00a0I can't\r\n> start returning a new type.\r\n\r\nIn the example I gave it wasn't the lowest level that provides the\r\ncontext, but in Go we're trying to push good error reporting further\r\ndown where the context is known. Executive decision: This bike shed\r\nwill be painted with your colors.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2012-05-23 16:28:43.913617",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"r@google.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=fe8549b7050a ***\n\nnet/http: clarify ErrBodyNotAllowed error message\n\nIt's usually due to writing on HEAD requests.\n\nR=golang-dev, rsc, r, r\nCC=golang-dev\nhttp://codereview.appspot.com/6206106",
			"disapproval": false,
			"date": "2012-05-23 16:31:32.903696",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 6206106: net/http: clarify ErrBodyNotAllowed error message",
	"created": "2012-05-23 15:57:56.187986",
	"patchsets": [
		1,
		3,
		4001,
		6002
	],
	"modified": "2012-05-23 16:31:34.489949",
	"closed": true,
	"issue": 6206106
}