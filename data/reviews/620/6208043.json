{
	"description": "go.crypto/ssh: make {client,server}Chan use common window management",
	"cc": [
		"agl@golang.org",
		"gustav.paul@gmail.com",
		"kardianos@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, gustav.paul@gmail.com, kardianos@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-09 16:58:09.602493",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, gustav.paul@gmail.com, kardianos@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-10 19:24:32.837785",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> ssh/channel.go:326: // TODO(dfc) This lock and check of c.weClosed is\r\n> necessary because unlike\r\n> Good comment. Why is it a TODO?\r\n\r\nBecause I intend to remove this requirement.\r\n",
			"disapproval": false,
			"date": "2012-05-10 19:35:47.472053",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, gustav.paul@gmail.com, kardianos@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-09 19:14:55.742171",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/channel.go#newcode163\nssh/channel.go:163: func (c *serverChan) check() error {\ncheck seems like a very generic name. isClosed? isDead?",
			"disapproval": false,
			"date": "2012-05-09 16:23:28.500063",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello agl@golang.org, gustav.paul@gmail.com, kardianos@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-05-09 16:18:59.636977",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This is the last change to this CL. PTAL.",
			"disapproval": false,
			"date": "2012-05-10 19:25:35.322173",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d59e35c8940f&repo=crypto ***\n\ngo.crypto/ssh: make {client,server}Chan use common window management\n\nR=agl, gustav.paul, kardianos\nCC=golang-dev\nhttp://codereview.appspot.com/6208043\n\nhttp://codereview.appspot.com/6208043/diff/9002/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/6208043/diff/9002/ssh/channel.go#newcode326\nssh/channel.go:326: // TODO(dfc) This lock and check of c.weClosed is necessary because unlike\nOn 2012/05/10 19:33:05, kardia wrote:\n> Good comment. Why is it a TODO?\n\nDone.",
			"disapproval": false,
			"date": "2012-05-10 19:56:54.989488",
			"approval": false
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6208043/diff/9002/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/6208043/diff/9002/ssh/channel.go#newcode326\nssh/channel.go:326: // TODO(dfc) This lock and check of c.weClosed is necessary because unlike\nGood comment. Why is it a TODO?",
			"disapproval": false,
			"date": "2012-05-10 19:33:05.506610",
			"approval": true
		},
		{
			"sender": "kardianos@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/common.go\nFile ssh/common.go (right):\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/common.go#newcode300\nssh/common.go:300: return false\nreturn true // Requesting 0 bytes be added is a noop, but not a failure.\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/server.go\nFile ssh/server.go (right):\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/server.go#newcode548\nssh/server.go:548: remoteWin: window{Cond: sync.NewCond(new(sync.Mutex))},\n3rd time I've seen this code + c.remoteWin.add(msg.PeersWindow).\nSeems possible to have a newWindow(size uint) func that creates a new mutex and sets the size. But this is just as clear and no harm here.",
			"disapproval": false,
			"date": "2012-05-09 16:37:24.696465",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-05-09 17:04:06.396597",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"agl@golang.org",
				"gustav.paul@gmail.com",
				"kardianos@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you for your comments. PTAL.\n\nhttp://codereview.appspot.com/6208043/diff/5001/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/6208043/diff/5001/ssh/channel.go#newcode163\nssh/channel.go:163: func (c *serverChan) check() error {\ncheck replicates the checking of c.dead and c.weClosed that used to exist in c.GetWindowSize. Their may be a better way to do this (or elide it completely).\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/channel.go\nFile ssh/channel.go (right):\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/channel.go#newcode163\nssh/channel.go:163: func (c *serverChan) check() error {\nOn 2012/05/09 16:23:28, agl1 wrote:\n> check seems like a very generic name. isClosed? isDead?\n\nMaybe I should just move this code into the two Write methods? It's not a lot of code.\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/common.go\nFile ssh/common.go (right):\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/common.go#newcode300\nssh/common.go:300: return false\nI'd rather not change this at this point. It's been working so far. I will add a TODO to investigate.\n\nOn 2012/05/09 16:37:24, kardia wrote:\n> return true // Requesting 0 bytes be added is a noop, but not a failure.\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/server.go\nFile ssh/server.go (right):\n\nhttp://codereview.appspot.com/6208043/diff/3005/ssh/server.go#newcode548\nssh/server.go:548: remoteWin: window{Cond: sync.NewCond(new(sync.Mutex))},\nYes, I'm sad that there is no zero value form of sync.Cond.\n\nOn 2012/05/09 16:37:24, kardia wrote:\n> 3rd time I've seen this code + c.remoteWin.add(msg.PeersWindow).\n> Seems possible to have a newWindow(size uint) func that creates a new mutex and\n> sets the size. But this is just as clear and no harm here.",
			"disapproval": false,
			"date": "2012-05-09 17:01:05.035009",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6208043: go.crypto/ssh: make {client,server}Chan use common wind...",
	"created": "2012-05-09 15:46:48.467657",
	"patchsets": [
		1,
		2001,
		5001,
		3005,
		7005,
		5007,
		4007,
		9002,
		4008
	],
	"modified": "2012-05-10 19:56:58.253925",
	"closed": true,
	"issue": 6208043
}