{
	"description": "net, cmd/fix: add IPv6 scoped addressing zone to INET, INET6 address structs\n\nThis CL starts to introduce IPv6 scoped addressing capability\ninto the net package.\n\nThe Public API changes are:\n+pkg net, type IPAddr struct, Zone string\n+pkg net, type IPNet struct, Zone string\n+pkg net, type TCPAddr struct, Zone string\n+pkg net, type UDPAddr struct, Zone string\n\nUpdate issue 4234.",
	"cc": [
		"rsc@golang.org",
		"bradfitz@golang.org",
		"iant@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6849045/diff/7001/src/pkg/net/ip.go\nFile src/pkg/net/ip.go (right):\n\nhttps://codereview.appspot.com/6849045/diff/7001/src/pkg/net/ip.go#newcode39\nsrc/pkg/net/ip.go:39: Zone string // IPv6 scoped addressing zone\ncan we get a gofix for this change?  a lot of code exists (unfortunately) which uses untagged struct literals for IPNet, assuming there are only two fields.",
			"disapproval": false,
			"date": "2012-11-13 20:39:08.847610",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-11-13 12:10:48.269470",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6849045/diff/4002/src/cmd/fix/netipv6zone.go\nFile src/cmd/fix/netipv6zone.go (right):\n\nhttps://codereview.appspot.com/6849045/diff/4002/src/cmd/fix/netipv6zone.go#newcode38\nsrc/cmd/fix/netipv6zone.go:38: x, ok := se.X.(*ast.Ident)\nPlease use isTopName(se.X, \"net\"). That will avoid misinterpreting local variables named net.",
			"disapproval": false,
			"date": "2012-11-26 15:23:13.407340",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nCL 6816116 is now into 3 pieces.\nThis CL, upcoming CL that do host/port parser consolidation\nand zone delimiter \"%\" parsing one.\n\nhttps://codereview.appspot.com/6849045/diff/7001/src/pkg/net/ip.go\nFile src/pkg/net/ip.go (right):\n\nhttps://codereview.appspot.com/6849045/diff/7001/src/pkg/net/ip.go#newcode39\nsrc/pkg/net/ip.go:39: Zone string // IPv6 scoped addressing zone\nOn 2012/11/13 20:39:08, bradfitz wrote:\n> can we get a gofix for this change?  a lot of code exists (unfortunately) which\n> uses untagged struct literals for IPNet, assuming there are only two fields.\n\nDone.",
			"disapproval": false,
			"date": "2012-11-15 03:02:40.257560",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM but please wait for rsc",
			"disapproval": false,
			"date": "2012-11-21 14:25:27.760370",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ZoneId sounds like ZoneName or ZoneString. Why not just Zone?\r\n",
			"disapproval": false,
			"date": "2012-11-13 17:34:36.517490",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-13 20:27:16.253360",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/13 17:34:36, rsc wrote:\n> ZoneId sounds like ZoneName or ZoneString. Why not just Zone?\n\nNice, thx.",
			"disapproval": false,
			"date": "2012-11-13 20:27:40.744320",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/11/13 20:39:08, bradfitz wrote:\n\n> can we get a gofix for this change?  a lot of code exists (unfortunately) which\n> uses untagged struct literals for IPNet, assuming there are only two fields.\n\nWill do.",
			"disapproval": false,
			"date": "2012-11-13 20:52:30.544210",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-11-14 04:35:43.403920",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping",
			"disapproval": false,
			"date": "2012-11-21 07:47:56.697740",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=61dc42e35948 ***\n\nnet, cmd/fix: add IPv6 scoped addressing zone to INET, INET6 address structs\n\nThis CL starts to introduce IPv6 scoped addressing capability\ninto the net package.\n\nThe Public API changes are:\n+pkg net, type IPAddr struct, Zone string\n+pkg net, type IPNet struct, Zone string\n+pkg net, type TCPAddr struct, Zone string\n+pkg net, type UDPAddr struct, Zone string\n\nUpdate issue 4234.\n\nR=rsc, bradfitz, iant\nCC=golang-dev\nhttp://codereview.appspot.com/6849045\n\nhttp://codereview.appspot.com/6849045/diff/4002/src/cmd/fix/netipv6zone.go\nFile src/cmd/fix/netipv6zone.go (right):\n\nhttp://codereview.appspot.com/6849045/diff/4002/src/cmd/fix/netipv6zone.go#newcode38\nsrc/cmd/fix/netipv6zone.go:38: x, ok := se.X.(*ast.Ident)\nOn 2012/11/26 15:23:15, rsc wrote:\n> Please use isTopName(se.X, \"net\"). That will avoid misinterpreting local\n> variables named net.\n\nDone.",
			"disapproval": false,
			"date": "2012-11-26 15:45:54.668220",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 6849045: net, cmd/fix: add IPv6 scoped addressing zone to INET, ...",
	"created": "2012-11-13 12:09:32.038100",
	"patchsets": [
		2001,
		4001,
		7001,
		8002,
		6018,
		4002,
		13001
	],
	"modified": "2012-11-26 15:45:58.003820",
	"closed": true,
	"issue": 6849045
}