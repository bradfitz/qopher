{
	"description": "net: prepare connect() for new network poller\nThe problem is that new network poller can have spurious\nrediness notifications. This implementation ensures that\nthe socket is actually connected.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"akumar@mail.nanosouffle.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-13 15:21:00.618560",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7785043/diff/5001/src/pkg/net/fd_unix.go\nFile src/pkg/net/fd_unix.go (right):\n\nhttps://codereview.appspot.com/7785043/diff/5001/src/pkg/net/fd_unix.go#newcode84\nsrc/pkg/net/fd_unix.go:84: fd.wio.Lock()\nbtw, why it does not incref/decred?\nWhat if fd is closed and reused concurrently, I guess it can connect another fd to a wrong addr:port.",
			"disapproval": false,
			"date": "2013-03-13 15:22:28.543270",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7785043/diff/5001/src/pkg/net/fd_unix.go\nFile src/pkg/net/fd_unix.go (right):\n\nhttps://codereview.appspot.com/7785043/diff/5001/src/pkg/net/fd_unix.go#newcode84\nsrc/pkg/net/fd_unix.go:84: fd.wio.Lock()\nOn 2013/03/13 15:22:28, dvyukov wrote:\n> btw, why it does not incref/decred?\n> What if fd is closed and reused concurrently, I guess it can connect another fd\n> to a wrong addr:port.\n\nThat's impossible. This connect method is only called following newFD (see func socket). The only way the fd is closed concurrently is if there is some other goroutine calling syscall.Close on file descriptors it does not own. (And if so, too bad.)",
			"disapproval": false,
			"date": "2013-03-13 16:57:20.896910",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Tested on darwin -- the code also needs to handle EISCONN and EINTR.",
			"disapproval": false,
			"date": "2013-03-14 04:18:03.309460",
			"approval": false
		},
		{
			"sender": "akumar@mail.nanosouffle.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Will we need to also check, in Plan 9's dial functions, for\r\nthe \"Established\" string in the corresponding status file?\r\n",
			"disapproval": false,
			"date": "2013-03-14 04:45:55.556240",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No. Plan 9 dial is blocking, so none of this is relevant.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-03-14 05:04:46.414580",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"akumar@mail.nanosouffle.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Added EINTR/EISCONN handling",
			"disapproval": false,
			"date": "2013-03-14 06:32:30.952600",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"akumar@mail.nanosouffle.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=fed789ce8072 ***\n\nnet: prepare connect() for new network poller\nThe problem is that new network poller can have spurious\nrediness notifications. This implementation ensures that\nthe socket is actually connected.\n\nR=golang-dev, rsc, akumar\nCC=golang-dev\nhttps://codereview.appspot.com/7785043",
			"disapproval": false,
			"date": "2013-03-14 06:32:54.505780",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 7785043: net: prepare connect() for new network poller",
	"created": "2013-03-13 15:12:35.832830",
	"patchsets": [
		1,
		2001,
		5001,
		13001,
		18001
	],
	"modified": "2013-03-14 06:32:55.826590",
	"closed": true,
	"issue": 7785043
}