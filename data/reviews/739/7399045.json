{
	"description": "cmd/5g, cmd/5l, cmd/6l, cmd/8l, cmd/gc, cmd/ld, runtime: accurate args and locals information\n\nPreviously, the func structure contained an inaccurate value for\nthe args member and a 0 value for the locals member.\n\nThis change populates the func structure with args and locals\nvalues computed by the compiler.  The number of args was\nalready available in the ATEXT instruction.  The number of\nlocals is now passed through in the new ALOCALS instruction.\n\nThis change also switches the unit of args and locals to be\nbytes, just like the frame member, instead of 32-bit words.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"cshapiro@google.com",
		"dave@cheney.net",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "cshapiro@golang.org",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-21 01:17:45.039800",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 20, 2013 at 5:17 PM, <cshapiro@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> cmd/5g, cmd/5l, cmd/6l, cmd/8l, cmd/gc, cmd/ld, runtime: accurate args\r\n> and locals information\r\n>\r\n> Previously, the func structure contained an inaccurate value for\r\n> the args member and a 0 value for the locals member.\r\n>\r\n> This change populates the func structure with args and locals\r\n> values computed by the compiler.  The number of args was\r\n> already available in the ATEXT instruction.  The number of\r\n> locals is not passed through in the new ALOCALS instruction.\r\n>\r\n\r\ns/not/now/ ?\r\n",
			"disapproval": false,
			"date": "2013-02-21 01:21:46.414370",
			"approval": false
		},
		{
			"sender": "cshapiro@google.com",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"cshapiro@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/21 01:21:46, bradfitz wrote:\n> s/not/now/ ?\n\nFixed.",
			"disapproval": false,
			"date": "2013-02-21 01:25:02.822390",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Adding more members to {5,6,8}l.Sym makes me worry about the RSS of\r\nthe linker. Are there any options to use a union to reduce the cost of\r\nadding those members to Sym ?\r\n\r\nOn Thu, Feb 21, 2013 at 12:21 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n>\r\n>\r\n> On Wed, Feb 20, 2013 at 5:17 PM, <cshapiro@golang.org> wrote:\r\n>>\r\n>> Reviewers: golang-dev_googlegroups.com,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com,\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://code.google.com/p/go\r\n>>\r\n>>\r\n>> Description:\r\n>> cmd/5g, cmd/5l, cmd/6l, cmd/8l, cmd/gc, cmd/ld, runtime: accurate args\r\n>> and locals information\r\n>>\r\n>> Previously, the func structure contained an inaccurate value for\r\n>> the args member and a 0 value for the locals member.\r\n>>\r\n>> This change populates the func structure with args and locals\r\n>> values computed by the compiler.  The number of args was\r\n>> already available in the ATEXT instruction.  The number of\r\n>> locals is not passed through in the new ALOCALS instruction.\r\n>\r\n>\r\n> s/not/now/ ?\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-21 01:25:59.708260",
			"approval": false
		},
		{
			"sender": "cshapiro@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Feb 20, 2013 at 5:25 PM, Dave Cheney <dave@cheney.net> wrote:\r\n\r\n> Adding more members to {5,6,8}l.Sym makes me worry about the RSS of\r\n> the linker. Are there any options to use a union to reduce the cost of\r\n> adding those members to Sym ?\r\n>\r\n\r\nThis sounds like a valid concern.  However, there appear to be preexisting\r\nlimited use members in the Sym structure.\r\n\r\nAre you suggesting that the new should overlap their storage with\r\npreexisting members?  (That would not be hard to do but it would touch a\r\nlot of unrelated code.)\r\n",
			"disapproval": false,
			"date": "2013-02-21 01:38:05.567010",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm always concerned about memory usage by the compiler/linker, but\r\nyou shouldn't let that be a blocker :)\r\n\r\nIf you want to tackle rearranging the fields in a followup CL that\r\nwould be fantastic.\r\n\r\nOn Thu, Feb 21, 2013 at 12:37 PM, Carl Shapiro <cshapiro@golang.org> wrote:\r\n> On Wed, Feb 20, 2013 at 5:25 PM, Dave Cheney <dave@cheney.net> wrote:\r\n>>\r\n>> Adding more members to {5,6,8}l.Sym makes me worry about the RSS of\r\n>> the linker. Are there any options to use a union to reduce the cost of\r\n>> adding those members to Sym ?\r\n>\r\n>\r\n> This sounds like a valid concern.  However, there appear to be preexisting\r\n> limited use members in the Sym structure.\r\n>\r\n> Are you suggesting that the new should overlap their storage with\r\n> preexisting members?  (That would not be hard to do but it would touch a lot\r\n> of unrelated code.)\r\n",
			"disapproval": false,
			"date": "2013-02-21 01:39:52.717290",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"cshapiro@google.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nWe typically add new instructions to the end of the enumeration.\nPlease move ALOCALS to the end of the instruction lists, just before ALAST.\nThat will require moving the line in the optab tables too.\n\nhttps://codereview.appspot.com/7399045/diff/9001/src/pkg/runtime/symtab.c\nFile src/pkg/runtime/symtab.c (right):\n\nhttps://codereview.appspot.com/7399045/diff/9001/src/pkg/runtime/symtab.c#newcode132\nsrc/pkg/runtime/symtab.c:132: func[nfunc-1].locals = sym->value/4;\nCan we drop the /4 and just store as bytes all the time?",
			"disapproval": false,
			"date": "2013-02-21 02:37:29.311830",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please don't worry about the size of Sym in the linker. It's not the\r\nbottleneck today.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-02-21 02:38:25.363600",
			"approval": false
		},
		{
			"sender": "cshapiro@google.com",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"cshapiro@google.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7399045/diff/9001/src/pkg/runtime/symtab.c\nFile src/pkg/runtime/symtab.c (right):\n\nhttps://codereview.appspot.com/7399045/diff/9001/src/pkg/runtime/symtab.c#newcode132\nsrc/pkg/runtime/symtab.c:132: func[nfunc-1].locals = sym->value/4;\nGladly.  Fixed.",
			"disapproval": false,
			"date": "2013-02-21 20:47:29.733160",
			"approval": false
		},
		{
			"sender": "cshapiro@golang.org",
			"recipients": [
				"cshapiro@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"cshapiro@google.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=ad69f53ba310 ***\n\ncmd/5g, cmd/5l, cmd/6l, cmd/8l, cmd/gc, cmd/ld, runtime: accurate args and locals information\n\nPreviously, the func structure contained an inaccurate value for\nthe args member and a 0 value for the locals member.\n\nThis change populates the func structure with args and locals\nvalues computed by the compiler.  The number of args was\nalready available in the ATEXT instruction.  The number of\nlocals is now passed through in the new ALOCALS instruction.\n\nThis change also switches the unit of args and locals to be\nbytes, just like the frame member, instead of 32-bit words.\n\nR=golang-dev, bradfitz, cshapiro, dave, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7399045",
			"disapproval": false,
			"date": "2013-02-21 20:52:29.816700",
			"approval": false
		}
	],
	"owner_email": "cshapiro@golang.org",
	"private": false,
	"base_url": "",
	"owner": "cshapiro",
	"subject": "code review 7399045: cmd/5g, cmd/5l, cmd/6l, cmd/8l, cmd/gc, cmd/ld, runtime...",
	"created": "2013-02-21 01:15:00.514630",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		17001,
		12002,
		20001
	],
	"modified": "2013-02-21 20:52:31.017670",
	"closed": true,
	"issue": 7399045
}