{
	"description": "      OSX Package Installer: handle previous installation\n\nThe installer package will now detect a previous installation and warn the user that the previous installation will be deleted. If the user continues, the installer will delete the previous installation and install the package as usual.\n\nFixes issue 4293.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"mccoyst@gmail.com"
	],
	"messages": [
		{
			"sender": "tyler@voicetutorapp.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Actually, a better question:\r\n\r\nUsing bindist, what is the proper way to build a package for OSX from my currently cloned repository. Arguments, flags, etc?\r\n\r\nThanks!\r\n\r\nOn Feb 27, 2013, at 4:55 PM, Tyler Bunnell <tyler@voicetutorapp.com> wrote:\r\n\r\n> It seems bindist does a fresh hg clone of the repo and builds the package from there.\r\n> \r\n> Is is possible to have it use the repo I already have, inside which I am running bindist? My changes won't be incorporated otherwise.\r\n> \r\n> On Feb 27, 2013, at 4:38 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n> \r\n>> \r\n>> On 28 February 2013 10:37, <tyler@stretchr.com> wrote:\r\n>> 2. Would you like me to remove the old distribution stuff as part of my patch?\r\n>> \r\n>> I just mailed out: https://codereview.appspot.com/7420044\r\n> \r\n\r\n",
			"disapproval": false,
			"date": "2013-02-28 00:02:14.914980",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-26 04:49:23.221060",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "We can't just hose /usr/local/go if it already exists... Can we bail out with a helpful error message instead?\n\nhttps://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash\nFile misc/osx/package.bash (right):\n\nhttps://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71\nmisc/osx/package.bash:71: --version \"0.2\" \\\nshould we make the version \"1.1\" ?\n\nhttps://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall\nFile misc/osx/scripts/preinstall (right):\n\nhttps://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6\nmisc/osx/scripts/preinstall:6: rm -rf $GOROOT\nI really don't want to do this without notifying the user first.",
			"disapproval": false,
			"date": "2013-02-26 05:50:25.706470",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Great! I'll give this a bit more work and see what I can come up with. :)\n\nOn 2013/02/26 05:50:25, adg wrote:\n> We can't just hose /usr/local/go if it already exists... Can we bail out with a\n> helpful error message instead?\n> \n> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash\n> File misc/osx/package.bash (right):\n> \n> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71\n> misc/osx/package.bash:71: --version \"0.2\" \\\n> should we make the version \"1.1\" ?\n> \n> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall\n> File misc/osx/scripts/preinstall (right):\n> \n> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6\n> misc/osx/scripts/preinstall:6: rm -rf $GOROOT\n> I really don't want to do this without notifying the user first.",
			"disapproval": false,
			"date": "2013-02-26 14:54:07.183740",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "According to my research and discussions with members of the Mac developer \r\ncommunity, Package Maker is a rather lousy application all around. It's \r\ninflexible and requires plugins to accomplish anything but the most basic \r\ntasks. I see no straightforward way of prompting the user to remove a \r\ndirectory. There appears to be a method to detect an existing file and bail \r\nin that case, but all my attempts to make it function have failed.\r\n\r\nI feel it is a bad idea to depend on Package Maker for the installer \r\npackage. In fact, I feel it is a bad idea to have an installer package at \r\nall. It would seem much easier and more straightforward for us to create a \r\nscript that installs Go from the command line. As we are targeting \r\ndevelopers, it is reasonable to assume they will be competent enough to \r\nenter a command in Terminal.\r\n\r\nA perfect example is the installation process for Homebrew:\r\n\r\n  ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\r\n\r\nIf we were to create a similar script, be it bash, perl, python or ruby, we \r\nwould have full control of the installation process and could easily prompt \r\nthe user when input is needed. In addition, an installation script would be \r\nfar easier to maintain and update, as well as not having dependencies on \r\nanother program.\r\n\r\nThoughts?\r\n\r\nOn Monday, February 25, 2013 10:50:25 PM UTC-7, Andrew Gerrand wrote:\r\n>\r\n> We can't just hose /usr/local/go if it already exists... Can we bail out \r\n> with a helpful error message instead? \r\n>\r\n>\r\n> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash \r\n> File misc/osx/package.bash (right): \r\n>\r\n> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71 \r\n>\r\n> misc/osx/package.bash:71<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71misc/osx/package.bash:71>: \r\n> --version \"0.2\" \\ \r\n> should we make the version \"1.1\" ? \r\n>\r\n>\r\n> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall \r\n> File misc/osx/scripts/preinstall (right): \r\n>\r\n> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6 \r\n>\r\n> misc/osx/scripts/preinstall:6<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6misc/osx/scripts/preinstall:6>: \r\n> rm -rf $GOROOT \r\n> I really don't want to do this without notifying the user first. \r\n>\r\n> https://codereview.appspot.com/7390054/ \r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-26 16:42:48.488160",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I've taken the liberty of putting together a simple bash script to handle \r\nthe installation process automatically in a future-proof way.\r\n\r\nThe script gets a list of all files, downloads the latest one for your \r\narchitecture and installs go. It also prompts for the user to remove the \r\nprevious version and bails if they say no. The script is tested and working \r\nagainst the current list of files located \r\nhere: https://code.google.com/p/go/downloads/list\r\n\r\nPlease note: I only have an i386 machine on which to test this, so I would \r\nappreciate if someone could test it on a machine whose `arch` command does \r\nnot return 'i386'.\r\n\r\nIt would be simple to use curl to pull the raw file down from a hosted \r\nlocation and execute it with bash, thus making the installation a simple \r\ncopy and paste of a single command.\r\n\r\nThe file in question can be found here (because google groups won't let me \r\nattach it): http://cl.ly/code/0O2N352a0Y12\r\n\r\nLet me know your thoughts!\r\n\r\n-Tyler\r\n\r\nOn Tuesday, February 26, 2013 9:42:46 AM UTC-7, ty...@stretchr.com wrote:\r\n>\r\n> According to my research and discussions with members of the Mac developer \r\n> community, Package Maker is a rather lousy application all around. It's \r\n> inflexible and requires plugins to accomplish anything but the most basic \r\n> tasks. I see no straightforward way of prompting the user to remove a \r\n> directory. There appears to be a method to detect an existing file and bail \r\n> in that case, but all my attempts to make it function have failed.\r\n>\r\n> I feel it is a bad idea to depend on Package Maker for the installer \r\n> package. In fact, I feel it is a bad idea to have an installer package at \r\n> all. It would seem much easier and more straightforward for us to create a \r\n> script that installs Go from the command line. As we are targeting \r\n> developers, it is reasonable to assume they will be competent enough to \r\n> enter a command in Terminal.\r\n>\r\n> A perfect example is the installation process for Homebrew:\r\n>\r\n>   ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\r\n>\r\n> If we were to create a similar script, be it bash, perl, python or ruby, \r\n> we would have full control of the installation process and could easily \r\n> prompt the user when input is needed. In addition, an installation script \r\n> would be far easier to maintain and update, as well as not having \r\n> dependencies on another program.\r\n>\r\n> Thoughts?\r\n>\r\n> On Monday, February 25, 2013 10:50:25 PM UTC-7, Andrew Gerrand wrote:\r\n>>\r\n>> We can't just hose /usr/local/go if it already exists... Can we bail out \r\n>> with a helpful error message instead? \r\n>>\r\n>>\r\n>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash \r\n>> File misc/osx/package.bash (right): \r\n>>\r\n>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71 \r\n>>\r\n>> misc/osx/package.bash:71<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71misc/osx/package.bash:71>: \r\n>> --version \"0.2\" \\ \r\n>> should we make the version \"1.1\" ? \r\n>>\r\n>>\r\n>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall \r\n>> File misc/osx/scripts/preinstall (right): \r\n>>\r\n>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6 \r\n>>\r\n>> misc/osx/scripts/preinstall:6<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6misc/osx/scripts/preinstall:6>: \r\n>> rm -rf $GOROOT \r\n>> I really don't want to do this without notifying the user first. \r\n>>\r\n>> https://codereview.appspot.com/7390054/ \r\n>>\r\n>",
			"disapproval": false,
			"date": "2013-02-26 21:19:21.339200",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I've updated https://codereview.appspot.com/7390054/ \r\n\r\nThe preinstall script will now mv /usr/local/go to /usr/local/go-bak\r\n\r\nThis is a bit of a bandaid as I haven't been able to figure out how to make \r\nthe package creator do what I'd like it to do. This change to the \r\npreinstall script will allow the user to have a backup of their go \r\ndirectory in case they need it.\r\n\r\nIt would be possible to inform the user of this fact by explaining it in \r\nthe installation or welcome screen of the installer itself.\r\n\r\nHowever, I would advocate dropping the package installer in favor of a \r\nsimple terminal installation line, either using the bash script I posted or \r\nanother script/program.\r\n\r\nIf you would like me to continue working on getting the package manager to \r\ndo what we want, please let me know. I'll do what I can in my spare time. :)\r\n\r\n-Tyler\r\n\r\n\r\n\r\nOn Tuesday, February 26, 2013 2:19:19 PM UTC-7, ty...@stretchr.com wrote:\r\n>\r\n> I've taken the liberty of putting together a simple bash script to handle \r\n> the installation process automatically in a future-proof way.\r\n>\r\n> The script gets a list of all files, downloads the latest one for your \r\n> architecture and installs go. It also prompts for the user to remove the \r\n> previous version and bails if they say no. The script is tested and working \r\n> against the current list of files located here: \r\n> https://code.google.com/p/go/downloads/list\r\n>\r\n> Please note: I only have an i386 machine on which to test this, so I would \r\n> appreciate if someone could test it on a machine whose `arch` command does \r\n> not return 'i386'.\r\n>\r\n> It would be simple to use curl to pull the raw file down from a hosted \r\n> location and execute it with bash, thus making the installation a simple \r\n> copy and paste of a single command.\r\n>\r\n> The file in question can be found here (because google groups won't let me \r\n> attach it): http://cl.ly/code/0O2N352a0Y12\r\n>\r\n> Let me know your thoughts!\r\n>\r\n> -Tyler\r\n>\r\n> On Tuesday, February 26, 2013 9:42:46 AM UTC-7, ty...@stretchr.com wrote:\r\n>>\r\n>> According to my research and discussions with members of the Mac \r\n>> developer community, Package Maker is a rather lousy application all \r\n>> around. It's inflexible and requires plugins to accomplish anything but the \r\n>> most basic tasks. I see no straightforward way of prompting the user to \r\n>> remove a directory. There appears to be a method to detect an existing file \r\n>> and bail in that case, but all my attempts to make it function have failed.\r\n>>\r\n>> I feel it is a bad idea to depend on Package Maker for the installer \r\n>> package. In fact, I feel it is a bad idea to have an installer package at \r\n>> all. It would seem much easier and more straightforward for us to create a \r\n>> script that installs Go from the command line. As we are targeting \r\n>> developers, it is reasonable to assume they will be competent enough to \r\n>> enter a command in Terminal.\r\n>>\r\n>> A perfect example is the installation process for Homebrew:\r\n>>\r\n>>   ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\r\n>>\r\n>> If we were to create a similar script, be it bash, perl, python or ruby, \r\n>> we would have full control of the installation process and could easily \r\n>> prompt the user when input is needed. In addition, an installation script \r\n>> would be far easier to maintain and update, as well as not having \r\n>> dependencies on another program.\r\n>>\r\n>> Thoughts?\r\n>>\r\n>> On Monday, February 25, 2013 10:50:25 PM UTC-7, Andrew Gerrand wrote:\r\n>>>\r\n>>> We can't just hose /usr/local/go if it already exists... Can we bail out \r\n>>> with a helpful error message instead? \r\n>>>\r\n>>>\r\n>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash \r\n>>> File misc/osx/package.bash (right): \r\n>>>\r\n>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71 \r\n>>>\r\n>>> misc/osx/package.bash:71<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71misc/osx/package.bash:71>: \r\n>>> --version \"0.2\" \\ \r\n>>> should we make the version \"1.1\" ? \r\n>>>\r\n>>>\r\n>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall \r\n>>> File misc/osx/scripts/preinstall (right): \r\n>>>\r\n>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6 \r\n>>>\r\n>>> misc/osx/scripts/preinstall:6<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6misc/osx/scripts/preinstall:6>: \r\n>>> rm -rf $GOROOT \r\n>>> I really don't want to do this without notifying the user first. \r\n>>>\r\n>>> https://codereview.appspot.com/7390054/ \r\n>>>\r\n>>",
			"disapproval": false,
			"date": "2013-02-27 02:12:04.560470",
			"approval": false
		},
		{
			"sender": "mccoyst@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "To bail out early, you can probably add something like this to the \r\nDistribution file's installCheck function (there's one under \r\nmisc/dist/darwin; I can't figure out if this is related to the stuff under \r\nosx):\r\n\r\nif(!system.files.fileExistsAtPath('/usr/local/go/bin/go')){\r\nmy.result.title = 'Unable to install';\r\nmy.result.message = 'An Go installation currently exists under \r\n/usr/local/go. Please delete it if you want to update blah blah blah.';\r\nmy.result.type = 'Fatal';\r\nreturn false;\r\n}\r\n\r\n\r\nArchaeology:\r\n\r\nhttps://developer.apple.com/library/mac/#documentation/DeveloperTools/Reference/DistributionDefinitionRef/Chapters/Distribution_XML_Ref.html#//apple_ref/doc/uid/TP40005370-CH100-SW21\r\nhttps://developer.apple.com/library/mac/#documentation/DeveloperTools/Reference/InstallerJavaScriptRef/index.html#//apple_ref/doc/uid/TP40005137\r\n\r\n\r\nOn Tuesday, February 26, 2013 9:12:03 PM UTC-5, ty...@stretchr.com wrote:\r\n>\r\n> I've updated https://codereview.appspot.com/7390054/ \r\n>\r\n> The preinstall script will now mv /usr/local/go to /usr/local/go-bak\r\n>\r\n> This is a bit of a bandaid as I haven't been able to figure out how to \r\n> make the package creator do what I'd like it to do. This change to the \r\n> preinstall script will allow the user to have a backup of their go \r\n> directory in case they need it.\r\n>\r\n> It would be possible to inform the user of this fact by explaining it in \r\n> the installation or welcome screen of the installer itself.\r\n>\r\n> However, I would advocate dropping the package installer in favor of a \r\n> simple terminal installation line, either using the bash script I posted or \r\n> another script/program.\r\n>\r\n> If you would like me to continue working on getting the package manager to \r\n> do what we want, please let me know. I'll do what I can in my spare time. :)\r\n>\r\n> -Tyler\r\n>\r\n>\r\n>\r\n> On Tuesday, February 26, 2013 2:19:19 PM UTC-7, ty...@stretchr.com wrote:\r\n>>\r\n>> I've taken the liberty of putting together a simple bash script to handle \r\n>> the installation process automatically in a future-proof way.\r\n>>\r\n>> The script gets a list of all files, downloads the latest one for your \r\n>> architecture and installs go. It also prompts for the user to remove the \r\n>> previous version and bails if they say no. The script is tested and working \r\n>> against the current list of files located here: \r\n>> https://code.google.com/p/go/downloads/list\r\n>>\r\n>> Please note: I only have an i386 machine on which to test this, so I \r\n>> would appreciate if someone could test it on a machine whose `arch` command \r\n>> does not return 'i386'.\r\n>>\r\n>> It would be simple to use curl to pull the raw file down from a hosted \r\n>> location and execute it with bash, thus making the installation a simple \r\n>> copy and paste of a single command.\r\n>>\r\n>> The file in question can be found here (because google groups won't let \r\n>> me attach it): http://cl.ly/code/0O2N352a0Y12\r\n>>\r\n>> Let me know your thoughts!\r\n>>\r\n>> -Tyler\r\n>>\r\n>> On Tuesday, February 26, 2013 9:42:46 AM UTC-7, ty...@stretchr.com wrote:\r\n>>>\r\n>>> According to my research and discussions with members of the Mac \r\n>>> developer community, Package Maker is a rather lousy application all \r\n>>> around. It's inflexible and requires plugins to accomplish anything but the \r\n>>> most basic tasks. I see no straightforward way of prompting the user to \r\n>>> remove a directory. There appears to be a method to detect an existing file \r\n>>> and bail in that case, but all my attempts to make it function have failed.\r\n>>>\r\n>>> I feel it is a bad idea to depend on Package Maker for the installer \r\n>>> package. In fact, I feel it is a bad idea to have an installer package at \r\n>>> all. It would seem much easier and more straightforward for us to create a \r\n>>> script that installs Go from the command line. As we are targeting \r\n>>> developers, it is reasonable to assume they will be competent enough to \r\n>>> enter a command in Terminal.\r\n>>>\r\n>>> A perfect example is the installation process for Homebrew:\r\n>>>\r\n>>>   ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\r\n>>>\r\n>>> If we were to create a similar script, be it bash, perl, python or ruby, \r\n>>> we would have full control of the installation process and could easily \r\n>>> prompt the user when input is needed. In addition, an installation script \r\n>>> would be far easier to maintain and update, as well as not having \r\n>>> dependencies on another program.\r\n>>>\r\n>>> Thoughts?\r\n>>>\r\n>>> On Monday, February 25, 2013 10:50:25 PM UTC-7, Andrew Gerrand wrote:\r\n>>>>\r\n>>>> We can't just hose /usr/local/go if it already exists... Can we bail \r\n>>>> out \r\n>>>> with a helpful error message instead? \r\n>>>>\r\n>>>>\r\n>>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash \r\n>>>> File misc/osx/package.bash (right): \r\n>>>>\r\n>>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71 \r\n>>>>\r\n>>>> misc/osx/package.bash:71<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71misc/osx/package.bash:71>: \r\n>>>> --version \"0.2\" \\ \r\n>>>> should we make the version \"1.1\" ? \r\n>>>>\r\n>>>>\r\n>>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall \r\n>>>> File misc/osx/scripts/preinstall (right): \r\n>>>>\r\n>>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6 \r\n>>>>\r\n>>>> misc/osx/scripts/preinstall:6<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6misc/osx/scripts/preinstall:6>: \r\n>>>> rm -rf $GOROOT \r\n>>>> I really don't want to do this without notifying the user first. \r\n>>>>\r\n>>>> https://codereview.appspot.com/7390054/ \r\n>>>>\r\n>>>",
			"disapproval": false,
			"date": "2013-02-27 02:51:30.948120",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for putting so much effort into this.\r\n\r\nThe reason we chose to go with the pkg installer in the first place is that\r\nit's what OS X users expect. I am generally wary of installation by bash\r\nscript, even though I recognize it is roughly equivalent to running a\r\npackage. At least I can sign the package with Google's developer key.\r\n\r\nDo you want to try Steve's trick to see if you can report a reasonable\r\nmessage and bail?\r\n\r\n\r\nOn 27 February 2013 13:12, <tyler@stretchr.com> wrote:\r\n\r\n> I've updated https://codereview.appspot.**com/7390054/<https://codereview.appspot.com/7390054/>\r\n>\r\n>\r\n> The preinstall script will now mv /usr/local/go to /usr/local/go-bak\r\n>\r\n> This is a bit of a bandaid as I haven't been able to figure out how to\r\n> make the package creator do what I'd like it to do. This change to the\r\n> preinstall script will allow the user to have a backup of their go\r\n> directory in case they need it.\r\n>\r\n> It would be possible to inform the user of this fact by explaining it in\r\n> the installation or welcome screen of the installer itself.\r\n>\r\n> However, I would advocate dropping the package installer in favor of a\r\n> simple terminal installation line, either using the bash script I posted or\r\n> another script/program.\r\n>\r\n> If you would like me to continue working on getting the package manager to\r\n> do what we want, please let me know. I'll do what I can in my spare time. :)\r\n>\r\n> -Tyler\r\n>\r\n>\r\n>\r\n> On Tuesday, February 26, 2013 2:19:19 PM UTC-7, ty...@stretchr.com wrote:\r\n>>\r\n>> I've taken the liberty of putting together a simple bash script to handle\r\n>> the installation process automatically in a future-proof way.\r\n>>\r\n>> The script gets a list of all files, downloads the latest one for your\r\n>> architecture and installs go. It also prompts for the user to remove the\r\n>> previous version and bails if they say no. The script is tested and working\r\n>> against the current list of files located here: https://code.google.com/*\r\n>> *p/go/downloads/list <https://code.google.com/p/go/downloads/list>\r\n>>\r\n>> Please note: I only have an i386 machine on which to test this, so I\r\n>> would appreciate if someone could test it on a machine whose `arch` command\r\n>> does not return 'i386'.\r\n>>\r\n>> It would be simple to use curl to pull the raw file down from a hosted\r\n>> location and execute it with bash, thus making the installation a simple\r\n>> copy and paste of a single command.\r\n>>\r\n>> The file in question can be found here (because google groups won't let\r\n>> me attach it): http://cl.ly/code/**0O2N352a0Y12<http://cl.ly/code/0O2N352a0Y12>\r\n>>\r\n>> Let me know your thoughts!\r\n>>\r\n>> -Tyler\r\n>>\r\n>> On Tuesday, February 26, 2013 9:42:46 AM UTC-7, ty...@stretchr.com wrote:\r\n>>>\r\n>>> According to my research and discussions with members of the Mac\r\n>>> developer community, Package Maker is a rather lousy application all\r\n>>> around. It's inflexible and requires plugins to accomplish anything but the\r\n>>> most basic tasks. I see no straightforward way of prompting the user to\r\n>>> remove a directory. There appears to be a method to detect an existing file\r\n>>> and bail in that case, but all my attempts to make it function have failed.\r\n>>>\r\n>>> I feel it is a bad idea to depend on Package Maker for the installer\r\n>>> package. In fact, I feel it is a bad idea to have an installer package at\r\n>>> all. It would seem much easier and more straightforward for us to create a\r\n>>> script that installs Go from the command line. As we are targeting\r\n>>> developers, it is reasonable to assume they will be competent enough to\r\n>>> enter a command in Terminal.\r\n>>>\r\n>>> A perfect example is the installation process for Homebrew:\r\n>>>\r\n>>>   ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/**homebrew/go<https://raw.github.com/mxcl/homebrew/go>\r\n>>> )\"\r\n>>>\r\n>>> If we were to create a similar script, be it bash, perl, python or ruby,\r\n>>> we would have full control of the installation process and could easily\r\n>>> prompt the user when input is needed. In addition, an installation script\r\n>>> would be far easier to maintain and update, as well as not having\r\n>>> dependencies on another program.\r\n>>>\r\n>>> Thoughts?\r\n>>>\r\n>>> On Monday, February 25, 2013 10:50:25 PM UTC-7, Andrew Gerrand wrote:\r\n>>>>\r\n>>>> We can't just hose /usr/local/go if it already exists... Can we bail\r\n>>>> out\r\n>>>> with a helpful error message instead?\r\n>>>>\r\n>>>>\r\n>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**\r\n>>>> osx/package.bash<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash>\r\n>>>> File misc/osx/package.bash (right):\r\n>>>>\r\n>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**osx/package.bash#newcode71\r\n>>>>\r\n>>>> misc/osx/package.bash:71<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71misc/osx/package.bash:71>:\r\n>>>> --version \"0.2\" \\\r\n>>>> should we make the version \"1.1\" ?\r\n>>>>\r\n>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**\r\n>>>> osx/scripts/preinstall<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall>\r\n>>>> File misc/osx/scripts/preinstall (right):\r\n>>>>\r\n>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**\r\n>>>> osx/scripts/preinstall#**newcode6\r\n>>>> misc/osx/scripts/preinstall:6<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6misc/osx/scripts/preinstall:6>:\r\n>>>> rm -rf $GOROOT\r\n>>>> I really don't want to do this without notifying the user first.\r\n>>>>\r\n>>>> https://codereview.appspot.**com/7390054/<https://codereview.appspot.com/7390054/>\r\n>>>>\r\n>>>\r\n",
			"disapproval": false,
			"date": "2013-02-27 22:28:45.768470",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Steve:\r\n\r\nThanks for the info! I'll give this a shot this evening!\r\n\r\nThe majority of my googling has thus far proved fruitless and I've been \r\npulling my hair out trying to figure out how to make it all work properly.\r\n\r\nI'll post here with my results.\r\n\r\nOn Tuesday, February 26, 2013 7:51:29 PM UTC-7, Steve McCoy wrote:\r\n>\r\n> To bail out early, you can probably add something like this to the \r\n> Distribution file's installCheck function (there's one under \r\n> misc/dist/darwin; I can't figure out if this is related to the stuff under \r\n> osx):\r\n>\r\n> if(!system.files.fileExistsAtPath('/usr/local/go/bin/go')){\r\n> my.result.title = 'Unable to install';\r\n> my.result.message = 'An Go installation currently exists under \r\n> /usr/local/go. Please delete it if you want to update blah blah blah.';\r\n> my.result.type = 'Fatal';\r\n> return false;\r\n> }\r\n>\r\n>\r\n> Archaeology:\r\n>\r\n>\r\n> https://developer.apple.com/library/mac/#documentation/DeveloperTools/Reference/DistributionDefinitionRef/Chapters/Distribution_XML_Ref.html#//apple_ref/doc/uid/TP40005370-CH100-SW21\r\n>\r\n> https://developer.apple.com/library/mac/#documentation/DeveloperTools/Reference/InstallerJavaScriptRef/index.html#//apple_ref/doc/uid/TP40005137\r\n>\r\n>\r\n> On Tuesday, February 26, 2013 9:12:03 PM UTC-5, ty...@stretchr.com wrote:\r\n>>\r\n>> I've updated https://codereview.appspot.com/7390054/ \r\n>>\r\n>> The preinstall script will now mv /usr/local/go to /usr/local/go-bak\r\n>>\r\n>> This is a bit of a bandaid as I haven't been able to figure out how to \r\n>> make the package creator do what I'd like it to do. This change to the \r\n>> preinstall script will allow the user to have a backup of their go \r\n>> directory in case they need it.\r\n>>\r\n>> It would be possible to inform the user of this fact by explaining it in \r\n>> the installation or welcome screen of the installer itself.\r\n>>\r\n>> However, I would advocate dropping the package installer in favor of a \r\n>> simple terminal installation line, either using the bash script I posted or \r\n>> another script/program.\r\n>>\r\n>> If you would like me to continue working on getting the package manager \r\n>> to do what we want, please let me know. I'll do what I can in my spare \r\n>> time. :)\r\n>>\r\n>> -Tyler\r\n>>\r\n>>\r\n>>\r\n>> On Tuesday, February 26, 2013 2:19:19 PM UTC-7, ty...@stretchr.com wrote:\r\n>>>\r\n>>> I've taken the liberty of putting together a simple bash script to \r\n>>> handle the installation process automatically in a future-proof way.\r\n>>>\r\n>>> The script gets a list of all files, downloads the latest one for your \r\n>>> architecture and installs go. It also prompts for the user to remove the \r\n>>> previous version and bails if they say no. The script is tested and working \r\n>>> against the current list of files located here: \r\n>>> https://code.google.com/p/go/downloads/list\r\n>>>\r\n>>> Please note: I only have an i386 machine on which to test this, so I \r\n>>> would appreciate if someone could test it on a machine whose `arch` command \r\n>>> does not return 'i386'.\r\n>>>\r\n>>> It would be simple to use curl to pull the raw file down from a hosted \r\n>>> location and execute it with bash, thus making the installation a simple \r\n>>> copy and paste of a single command.\r\n>>>\r\n>>> The file in question can be found here (because google groups won't let \r\n>>> me attach it): http://cl.ly/code/0O2N352a0Y12\r\n>>>\r\n>>> Let me know your thoughts!\r\n>>>\r\n>>> -Tyler\r\n>>>\r\n>>> On Tuesday, February 26, 2013 9:42:46 AM UTC-7, ty...@stretchr.comwrote:\r\n>>>>\r\n>>>> According to my research and discussions with members of the Mac \r\n>>>> developer community, Package Maker is a rather lousy application all \r\n>>>> around. It's inflexible and requires plugins to accomplish anything but the \r\n>>>> most basic tasks. I see no straightforward way of prompting the user to \r\n>>>> remove a directory. There appears to be a method to detect an existing file \r\n>>>> and bail in that case, but all my attempts to make it function have failed.\r\n>>>>\r\n>>>> I feel it is a bad idea to depend on Package Maker for the installer \r\n>>>> package. In fact, I feel it is a bad idea to have an installer package at \r\n>>>> all. It would seem much easier and more straightforward for us to create a \r\n>>>> script that installs Go from the command line. As we are targeting \r\n>>>> developers, it is reasonable to assume they will be competent enough to \r\n>>>> enter a command in Terminal.\r\n>>>>\r\n>>>> A perfect example is the installation process for Homebrew:\r\n>>>>\r\n>>>>   ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)\"\r\n>>>>\r\n>>>> If we were to create a similar script, be it bash, perl, python or \r\n>>>> ruby, we would have full control of the installation process and could \r\n>>>> easily prompt the user when input is needed. In addition, an installation \r\n>>>> script would be far easier to maintain and update, as well as not having \r\n>>>> dependencies on another program.\r\n>>>>\r\n>>>> Thoughts?\r\n>>>>\r\n>>>> On Monday, February 25, 2013 10:50:25 PM UTC-7, Andrew Gerrand wrote:\r\n>>>>>\r\n>>>>> We can't just hose /usr/local/go if it already exists... Can we bail \r\n>>>>> out \r\n>>>>> with a helpful error message instead? \r\n>>>>>\r\n>>>>>\r\n>>>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash \r\n>>>>> File misc/osx/package.bash (right): \r\n>>>>>\r\n>>>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71 \r\n>>>>>\r\n>>>>> misc/osx/package.bash:71<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71misc/osx/package.bash:71>: \r\n>>>>> --version \"0.2\" \\ \r\n>>>>> should we make the version \"1.1\" ? \r\n>>>>>\r\n>>>>>\r\n>>>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall \r\n>>>>> File misc/osx/scripts/preinstall (right): \r\n>>>>>\r\n>>>>> https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6 \r\n>>>>>\r\n>>>>> misc/osx/scripts/preinstall:6<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6misc/osx/scripts/preinstall:6>: \r\n>>>>> rm -rf $GOROOT \r\n>>>>> I really don't want to do this without notifying the user first. \r\n>>>>>\r\n>>>>> https://codereview.appspot.com/7390054/ \r\n>>>>>\r\n>>>>",
			"disapproval": false,
			"date": "2013-02-27 22:35:50.438920",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Andrew:\r\n\r\nYou're quite welcome! Go is rapidly becoming the source of \r\nmy livelihood and I'm hoping to be able to contribute more to Go itself in \r\nthe future. \r\n\r\nI can definitely see what you mean regarding the package. It was the first \r\nthing I looked for myself. I've been seeing more and more single line \r\nterminal installation commands and I really like them, so I figured it \r\nmight be a good fit for Go also. :)\r\n\r\nI'm going to give Steve's trick a go and see what I can figure out.\r\n\r\nOn Wednesday, February 27, 2013 3:28:15 PM UTC-7, Andrew Gerrand wrote:\r\n>\r\n> Thanks for putting so much effort into this.\r\n>\r\n> The reason we chose to go with the pkg installer in the first place is \r\n> that it's what OS X users expect. I am generally wary of installation by \r\n> bash script, even though I recognize it is roughly equivalent to running a \r\n> package. At least I can sign the package with Google's developer key.\r\n>\r\n> Do you want to try Steve's trick to see if you can report a reasonable \r\n> message and bail?\r\n>\r\n>\r\n> On 27 February 2013 13:12, <ty...@stretchr.com <javascript:>> wrote:\r\n>\r\n>> I've updated https://codereview.appspot.**com/7390054/<https://codereview.appspot.com/7390054/>\r\n>>  \r\n>>\r\n>> The preinstall script will now mv /usr/local/go to /usr/local/go-bak\r\n>>\r\n>> This is a bit of a bandaid as I haven't been able to figure out how to \r\n>> make the package creator do what I'd like it to do. This change to the \r\n>> preinstall script will allow the user to have a backup of their go \r\n>> directory in case they need it.\r\n>>\r\n>> It would be possible to inform the user of this fact by explaining it in \r\n>> the installation or welcome screen of the installer itself.\r\n>>\r\n>> However, I would advocate dropping the package installer in favor of a \r\n>> simple terminal installation line, either using the bash script I posted or \r\n>> another script/program.\r\n>>\r\n>> If you would like me to continue working on getting the package manager \r\n>> to do what we want, please let me know. I'll do what I can in my spare \r\n>> time. :)\r\n>>\r\n>> -Tyler\r\n>>\r\n>>\r\n>>\r\n>> On Tuesday, February 26, 2013 2:19:19 PM UTC-7, ty...@stretchr.com wrote:\r\n>>>\r\n>>> I've taken the liberty of putting together a simple bash script to \r\n>>> handle the installation process automatically in a future-proof way.\r\n>>>\r\n>>> The script gets a list of all files, downloads the latest one for your \r\n>>> architecture and installs go. It also prompts for the user to remove the \r\n>>> previous version and bails if they say no. The script is tested and working \r\n>>> against the current list of files located here: https://code.google.com/\r\n>>> **p/go/downloads/list <https://code.google.com/p/go/downloads/list>\r\n>>>\r\n>>> Please note: I only have an i386 machine on which to test this, so I \r\n>>> would appreciate if someone could test it on a machine whose `arch` command \r\n>>> does not return 'i386'.\r\n>>>\r\n>>> It would be simple to use curl to pull the raw file down from a hosted \r\n>>> location and execute it with bash, thus making the installation a simple \r\n>>> copy and paste of a single command.\r\n>>>\r\n>>> The file in question can be found here (because google groups won't let \r\n>>> me attach it): http://cl.ly/code/**0O2N352a0Y12<http://cl.ly/code/0O2N352a0Y12>\r\n>>>\r\n>>> Let me know your thoughts!\r\n>>>\r\n>>> -Tyler\r\n>>>\r\n>>> On Tuesday, February 26, 2013 9:42:46 AM UTC-7, ty...@stretchr.comwrote:\r\n>>>>\r\n>>>> According to my research and discussions with members of the Mac \r\n>>>> developer community, Package Maker is a rather lousy application all \r\n>>>> around. It's inflexible and requires plugins to accomplish anything but the \r\n>>>> most basic tasks. I see no straightforward way of prompting the user to \r\n>>>> remove a directory. There appears to be a method to detect an existing file \r\n>>>> and bail in that case, but all my attempts to make it function have failed.\r\n>>>>\r\n>>>> I feel it is a bad idea to depend on Package Maker for the installer \r\n>>>> package. In fact, I feel it is a bad idea to have an installer package at \r\n>>>> all. It would seem much easier and more straightforward for us to create a \r\n>>>> script that installs Go from the command line. As we are targeting \r\n>>>> developers, it is reasonable to assume they will be competent enough to \r\n>>>> enter a command in Terminal.\r\n>>>>\r\n>>>> A perfect example is the installation process for Homebrew:\r\n>>>>\r\n>>>>   ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/**homebrew/go<https://raw.github.com/mxcl/homebrew/go>\r\n>>>> )\"\r\n>>>>\r\n>>>> If we were to create a similar script, be it bash, perl, python or \r\n>>>> ruby, we would have full control of the installation process and could \r\n>>>> easily prompt the user when input is needed. In addition, an installation \r\n>>>> script would be far easier to maintain and update, as well as not having \r\n>>>> dependencies on another program.\r\n>>>>\r\n>>>> Thoughts?\r\n>>>>\r\n>>>> On Monday, February 25, 2013 10:50:25 PM UTC-7, Andrew Gerrand wrote:\r\n>>>>>\r\n>>>>> We can't just hose /usr/local/go if it already exists... Can we bail \r\n>>>>> out \r\n>>>>> with a helpful error message instead? \r\n>>>>>\r\n>>>>>\r\n>>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**\r\n>>>>> osx/package.bash<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash> \r\n>>>>> File misc/osx/package.bash (right): \r\n>>>>>\r\n>>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**osx/package.bash#newcode71 \r\n>>>>>\r\n>>>>> misc/osx/package.bash:71<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71misc/osx/package.bash:71>: \r\n>>>>> --version \"0.2\" \\ \r\n>>>>> should we make the version \"1.1\" ? \r\n>>>>>\r\n>>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**\r\n>>>>> osx/scripts/preinstall<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall> \r\n>>>>> File misc/osx/scripts/preinstall (right): \r\n>>>>>\r\n>>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**\r\n>>>>> osx/scripts/preinstall#**newcode6 \r\n>>>>> misc/osx/scripts/preinstall:6<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6misc/osx/scripts/preinstall:6>: \r\n>>>>> rm -rf $GOROOT \r\n>>>>> I really don't want to do this without notifying the user first. \r\n>>>>>\r\n>>>>> https://codereview.appspot.**com/7390054/<https://codereview.appspot.com/7390054/> \r\n>>>>>\r\n>>>>\r\n>",
			"disapproval": false,
			"date": "2013-02-27 22:37:48.702650",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes I just figured that out myself. :)\r\n\r\nNo worries! I'm on the right track now and I think things are going to work \r\nout just great.\r\n\r\nI'm currently attempting to get bindist to build me a package. Once I have \r\nthat I can test the additions I've made and I'll submit a new CR.\r\n\r\nTwo questions:\r\n\r\n1. How do I delete my previous CR? Or should I just update it with the \r\nlatest stuff?\r\n2. Would you like me to remove the old distribution stuff as part of my \r\npatch?\r\n\r\nOn Wednesday, February 27, 2013 4:34:19 PM UTC-7, Andrew Gerrand wrote:\r\n>\r\n>\r\n> On 28 February 2013 09:42, <ty...@stretchr.com <javascript:>> wrote:\r\n>\r\n>> There seems to be some duplication of files between these two \r\n>> directories. In misc/dist/darwin, there is also not a package.bash script \r\n>> for creating the installer package.\r\n>>\r\n>> Andrew, can you shed some light on this? Is package.bash no longer used? \r\n>> Is there some left over stuff that should have been removed? Or do these \r\n>> two directories work together in some way?\r\n>>\r\n>\r\n> Oh, sorry I didn't notice this earlier.\r\n>\r\n> It's been a while, but I believe misc/osx is now unused and should be \r\n> removed. The tool at misc/dist/bindist.go replaces package.bash, and also \r\n> does packaging for Linux and Windows.\r\n>\r\n> I apologize for the confusion!\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-27 23:37:19.106150",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ok I just took a quick look at what Steve suggested.\r\n\r\nThe reason I didn't see this before was because I was looking under \r\nmisc/osx instead of misc/dist/darwin.\r\n\r\nThere seems to be some duplication of files between these two directories. \r\nIn misc/dist/darwin, there is also not a package.bash script for creating \r\nthe installer package.\r\n\r\nAndrew, can you shed some light on this? Is package.bash no longer used? Is \r\nthere some left over stuff that should have been removed? Or do these two \r\ndirectories work together in some way?\r\n\r\nOn Wednesday, February 27, 2013 3:28:15 PM UTC-7, Andrew Gerrand wrote:\r\n>\r\n> Thanks for putting so much effort into this.\r\n>\r\n> The reason we chose to go with the pkg installer in the first place is \r\n> that it's what OS X users expect. I am generally wary of installation by \r\n> bash script, even though I recognize it is roughly equivalent to running a \r\n> package. At least I can sign the package with Google's developer key.\r\n>\r\n> Do you want to try Steve's trick to see if you can report a reasonable \r\n> message and bail?\r\n>\r\n>\r\n> On 27 February 2013 13:12, <ty...@stretchr.com <javascript:>> wrote:\r\n>\r\n>> I've updated https://codereview.appspot.**com/7390054/<https://codereview.appspot.com/7390054/>\r\n>>  \r\n>>\r\n>> The preinstall script will now mv /usr/local/go to /usr/local/go-bak\r\n>>\r\n>> This is a bit of a bandaid as I haven't been able to figure out how to \r\n>> make the package creator do what I'd like it to do. This change to the \r\n>> preinstall script will allow the user to have a backup of their go \r\n>> directory in case they need it.\r\n>>\r\n>> It would be possible to inform the user of this fact by explaining it in \r\n>> the installation or welcome screen of the installer itself.\r\n>>\r\n>> However, I would advocate dropping the package installer in favor of a \r\n>> simple terminal installation line, either using the bash script I posted or \r\n>> another script/program.\r\n>>\r\n>> If you would like me to continue working on getting the package manager \r\n>> to do what we want, please let me know. I'll do what I can in my spare \r\n>> time. :)\r\n>>\r\n>> -Tyler\r\n>>\r\n>>\r\n>>\r\n>> On Tuesday, February 26, 2013 2:19:19 PM UTC-7, ty...@stretchr.com wrote:\r\n>>>\r\n>>> I've taken the liberty of putting together a simple bash script to \r\n>>> handle the installation process automatically in a future-proof way.\r\n>>>\r\n>>> The script gets a list of all files, downloads the latest one for your \r\n>>> architecture and installs go. It also prompts for the user to remove the \r\n>>> previous version and bails if they say no. The script is tested and working \r\n>>> against the current list of files located here: https://code.google.com/\r\n>>> **p/go/downloads/list <https://code.google.com/p/go/downloads/list>\r\n>>>\r\n>>> Please note: I only have an i386 machine on which to test this, so I \r\n>>> would appreciate if someone could test it on a machine whose `arch` command \r\n>>> does not return 'i386'.\r\n>>>\r\n>>> It would be simple to use curl to pull the raw file down from a hosted \r\n>>> location and execute it with bash, thus making the installation a simple \r\n>>> copy and paste of a single command.\r\n>>>\r\n>>> The file in question can be found here (because google groups won't let \r\n>>> me attach it): http://cl.ly/code/**0O2N352a0Y12<http://cl.ly/code/0O2N352a0Y12>\r\n>>>\r\n>>> Let me know your thoughts!\r\n>>>\r\n>>> -Tyler\r\n>>>\r\n>>> On Tuesday, February 26, 2013 9:42:46 AM UTC-7, ty...@stretchr.comwrote:\r\n>>>>\r\n>>>> According to my research and discussions with members of the Mac \r\n>>>> developer community, Package Maker is a rather lousy application all \r\n>>>> around. It's inflexible and requires plugins to accomplish anything but the \r\n>>>> most basic tasks. I see no straightforward way of prompting the user to \r\n>>>> remove a directory. There appears to be a method to detect an existing file \r\n>>>> and bail in that case, but all my attempts to make it function have failed.\r\n>>>>\r\n>>>> I feel it is a bad idea to depend on Package Maker for the installer \r\n>>>> package. In fact, I feel it is a bad idea to have an installer package at \r\n>>>> all. It would seem much easier and more straightforward for us to create a \r\n>>>> script that installs Go from the command line. As we are targeting \r\n>>>> developers, it is reasonable to assume they will be competent enough to \r\n>>>> enter a command in Terminal.\r\n>>>>\r\n>>>> A perfect example is the installation process for Homebrew:\r\n>>>>\r\n>>>>   ruby -e \"$(curl -fsSL https://raw.github.com/mxcl/**homebrew/go<https://raw.github.com/mxcl/homebrew/go>\r\n>>>> )\"\r\n>>>>\r\n>>>> If we were to create a similar script, be it bash, perl, python or \r\n>>>> ruby, we would have full control of the installation process and could \r\n>>>> easily prompt the user when input is needed. In addition, an installation \r\n>>>> script would be far easier to maintain and update, as well as not having \r\n>>>> dependencies on another program.\r\n>>>>\r\n>>>> Thoughts?\r\n>>>>\r\n>>>> On Monday, February 25, 2013 10:50:25 PM UTC-7, Andrew Gerrand wrote:\r\n>>>>>\r\n>>>>> We can't just hose /usr/local/go if it already exists... Can we bail \r\n>>>>> out \r\n>>>>> with a helpful error message instead? \r\n>>>>>\r\n>>>>>\r\n>>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**\r\n>>>>> osx/package.bash<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash> \r\n>>>>> File misc/osx/package.bash (right): \r\n>>>>>\r\n>>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**osx/package.bash#newcode71 \r\n>>>>>\r\n>>>>> misc/osx/package.bash:71<https://codereview.appspot.com/7390054/diff/5001/misc/osx/package.bash#newcode71misc/osx/package.bash:71>: \r\n>>>>> --version \"0.2\" \\ \r\n>>>>> should we make the version \"1.1\" ? \r\n>>>>>\r\n>>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**\r\n>>>>> osx/scripts/preinstall<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall> \r\n>>>>> File misc/osx/scripts/preinstall (right): \r\n>>>>>\r\n>>>>> https://codereview.appspot.**com/7390054/diff/5001/misc/**\r\n>>>>> osx/scripts/preinstall#**newcode6 \r\n>>>>> misc/osx/scripts/preinstall:6<https://codereview.appspot.com/7390054/diff/5001/misc/osx/scripts/preinstall#newcode6misc/osx/scripts/preinstall:6>: \r\n>>>>> rm -rf $GOROOT \r\n>>>>> I really don't want to do this without notifying the user first. \r\n>>>>>\r\n>>>>> https://codereview.appspot.**com/7390054/<https://codereview.appspot.com/7390054/> \r\n>>>>>\r\n>>>>\r\n>",
			"disapproval": false,
			"date": "2013-02-27 22:42:38.612410",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 28 February 2013 09:42, <tyler@stretchr.com> wrote:\r\n\r\n> There seems to be some duplication of files between these two directories.\r\n> In misc/dist/darwin, there is also not a package.bash script for creating\r\n> the installer package.\r\n>\r\n> Andrew, can you shed some light on this? Is package.bash no longer used?\r\n> Is there some left over stuff that should have been removed? Or do these\r\n> two directories work together in some way?\r\n>\r\n\r\nOh, sorry I didn't notice this earlier.\r\n\r\nIt's been a while, but I believe misc/osx is now unused and should be\r\nremoved. The tool at misc/dist/bindist.go replaces package.bash, and also\r\ndoes packaging for Linux and Windows.\r\n\r\nI apologize for the confusion!\r\n",
			"disapproval": false,
			"date": "2013-02-27 23:34:51.223500",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 28 February 2013 10:37, <tyler@stretchr.com> wrote:\r\n\r\n> 2. Would you like me to remove the old distribution stuff as part of my\r\n> patch?\r\n\r\n\r\nI just mailed out: https://codereview.appspot.com/7420044\r\n",
			"disapproval": false,
			"date": "2013-02-27 23:38:47.678190",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 28 February 2013 10:37, <tyler@stretchr.com> wrote:\r\n\r\n> 1. How do I delete my previous CR? Or should I just update it with the\r\n> latest stuff?\r\n\r\n\r\nYou should just update this CL with your new changes.\r\n\r\nThank you!\r\n",
			"disapproval": false,
			"date": "2013-02-27 23:39:06.266200",
			"approval": false
		},
		{
			"sender": "MccoyST@gmail.com",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"mccoyst@gmail.com",
				"MccoyST@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I just built and tested with the CL and the warning pops up first as a modal message. If I then quit the installer, nothing changes. If I continue as usual, anything under /usr/local/go is deleted before placing the new files (confirmed by adding a dummy file beforehand). This is typical .pkg installer behavior, in my experience. But yeah, -r should be sufficient.\n\nAnother thing I noticed is that the postinstall script potentially adds some Xcode files, so maybe those should also be trashed by the preinstall script. However, my install of Xcode doesn't have the directory that the script tests for, and looking at the files, it seems there are additional manual steps associated with them, so maybe it's better to leave them alone? A real Go crewmember probably knows better than me.\n\n\nOn 2013/02/28 02:20:15, adg wrote:\n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/Distribution\n> File misc/dist/darwin/Distribution (right):\n> \n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/Distribution#newcode19\n> misc/dist/darwin/Distribution:19: my.result.type = 'Warning';\n> So what happens here? They are given an option to abort the installation at this\n> point?\n> \n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/scripts/preinstall\n> File misc/dist/darwin/scripts/preinstall (right):\n> \n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/scripts/preinstall#newcode7\n> misc/dist/darwin/scripts/preinstall:7: rm -rf $GOROOT\n> I think that, instead of doing this automatically, we should instruct the user\n> to do it.\n> \n> Or, if we do it this way, we should at least use \"-r\" not \"-rf\".",
			"disapproval": false,
			"date": "2013-02-28 02:46:51.307520",
			"approval": false
		},
		{
			"sender": "tyler@voicetutorapp.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It seems bindist does a fresh hg clone of the repo and builds the package from there.\r\n\r\nIs is possible to have it use the repo I already have, inside which I am running bindist? My changes won't be incorporated otherwise.\r\n\r\nOn Feb 27, 2013, at 4:38 PM, Andrew Gerrand <adg@golang.org> wrote:\r\n\r\n> \r\n> On 28 February 2013 10:37, <tyler@stretchr.com> wrote:\r\n> 2. Would you like me to remove the old distribution stuff as part of my patch?\r\n> \r\n> I just mailed out: https://codereview.appspot.com/7420044\r\n\r\n",
			"disapproval": false,
			"date": "2013-02-27 23:55:28.880340",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"mccoyst@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, mccoyst@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-28 01:36:37.335580",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I can switch it to -r and update the CL. \r\n\r\nAs for the other things mentioned, Andrew do you have any input on that?\r\n\r\nSent from my iPhone\r\n\r\nOn Feb 27, 2013, at 7:46 PM, MccoyST@gmail.com wrote:\r\n\r\n> I just built and tested with the CL and the warning pops up first as a\r\n> modal message. If I then quit the installer, nothing changes. If I\r\n> continue as usual, anything under /usr/local/go is deleted before\r\n> placing the new files (confirmed by adding a dummy file beforehand).\r\n> This is typical .pkg installer behavior, in my experience. But yeah, -r\r\n> should be sufficient.\r\n> \r\n> Another thing I noticed is that the postinstall script potentially adds\r\n> some Xcode files, so maybe those should also be trashed by the\r\n> preinstall script. However, my install of Xcode doesn't have the\r\n> directory that the script tests for, and looking at the files, it seems\r\n> there are additional manual steps associated with them, so maybe it's\r\n> better to leave them alone? A real Go crewmember probably knows better\r\n> than me.\r\n> \r\n> \r\n> On 2013/02/28 02:20:15, adg wrote:\r\n> \r\n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/Distribution\r\n>> File misc/dist/darwin/Distribution (right):\r\n> \r\n> \r\n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/Distribution#newcode19\r\n>> misc/dist/darwin/Distribution:19: my.result.type = 'Warning';\r\n>> So what happens here? They are given an option to abort the\r\n> installation at this\r\n>> point?\r\n> \r\n> \r\n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/scripts/preinstall\r\n>> File misc/dist/darwin/scripts/preinstall (right):\r\n> \r\n> \r\n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/scripts/preinstall#newcode7\r\n>> misc/dist/darwin/scripts/preinstall:7: rm -rf $GOROOT\r\n>> I think that, instead of doing this automatically, we should instruct\r\n> the user\r\n>> to do it.\r\n> \r\n>> Or, if we do it this way, we should at least use \"-r\" not \"-rf\".\r\n> \r\n> \r\n> https://codereview.appspot.com/7390054/\r\n",
			"disapproval": false,
			"date": "2013-02-28 03:04:10.490950",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I figured out how to do the steps manually. I will be updating the CL soon.\r\n\r\nOn Wednesday, February 27, 2013 5:02:11 PM UTC-7, Tyler wrote:\r\n>\r\n> Actually, a better question: \r\n>\r\n> Using bindist, what is the proper way to build a package for OSX from my \r\n> currently cloned repository. Arguments, flags, etc? \r\n>\r\n> Thanks! \r\n>\r\n> On Feb 27, 2013, at 4:55 PM, Tyler Bunnell <ty...@voicetutorapp.com<javascript:>> \r\n> wrote: \r\n>\r\n> > It seems bindist does a fresh hg clone of the repo and builds the \r\n> package from there. \r\n> > \r\n> > Is is possible to have it use the repo I already have, inside which I am \r\n> running bindist? My changes won't be incorporated otherwise. \r\n> > \r\n> > On Feb 27, 2013, at 4:38 PM, Andrew Gerrand <a...@golang.org<javascript:>> \r\n> wrote: \r\n> > \r\n> >> \r\n> >> On 28 February 2013 10:37, <ty...@stretchr.com <javascript:>> wrote: \r\n> >> 2. Would you like me to remove the old distribution stuff as part of my \r\n> patch? \r\n> >> \r\n> >> I just mailed out: https://codereview.appspot.com/7420044 \r\n> > \r\n>\r\n>",
			"disapproval": false,
			"date": "2013-02-28 01:23:07.638160",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"mccoyst@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-02-28 03:26:41.373710",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Could you please sign the CLA as described here?\r\nhttp://golang.org/doc/contribute.html#Copyright\r\n",
			"disapproval": false,
			"date": "2013-02-28 03:29:22.771370",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"mccoyst@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, mccoyst@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-28 01:34:18.128450",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"mccoyst@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/Distribution\nFile misc/dist/darwin/Distribution (right):\n\nhttps://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/Distribution#newcode19\nmisc/dist/darwin/Distribution:19: my.result.type = 'Warning';\nSo what happens here? They are given an option to abort the installation at this point?\n\nhttps://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/scripts/preinstall\nFile misc/dist/darwin/scripts/preinstall (right):\n\nhttps://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/scripts/preinstall#newcode7\nmisc/dist/darwin/scripts/preinstall:7: rm -rf $GOROOT\nI think that, instead of doing this automatically, we should instruct the user to do it.\n\nOr, if we do it this way, we should at least use \"-r\" not \"-rf\".",
			"disapproval": false,
			"date": "2013-02-28 02:20:15.213590",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Warning means that a message will be shown to the user with an \"ok\" button. They can click ok and then continue with the installation. \r\n\r\nIt seems much more clean to inform them of the conflict so they can take action if they would like, then take care of the conflict automatically. Forcing them to remove it manually is just a bunch of extra unnecessary steps. \r\n\r\nMy concern with dropping the -f is that if rm prompts for some reason, the script will hang an there is no way to interact with it. \r\n\r\nThoughts?\r\n\r\nSent from my iPhone\r\n\r\nOn Feb 27, 2013, at 7:20 PM, adg@golang.org wrote:\r\n\r\n> \r\n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/Distribution\r\n> File misc/dist/darwin/Distribution (right):\r\n> \r\n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/Distribution#newcode19\r\n> misc/dist/darwin/Distribution:19: my.result.type = 'Warning';\r\n> So what happens here? They are given an option to abort the installation\r\n> at this point?\r\n> \r\n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/scripts/preinstall\r\n> File misc/dist/darwin/scripts/preinstall (right):\r\n> \r\n> https://codereview.appspot.com/7390054/diff/27002/misc/dist/darwin/scripts/preinstall#newcode7\r\n> misc/dist/darwin/scripts/preinstall:7: rm -rf $GOROOT\r\n> I think that, instead of doing this automatically, we should instruct\r\n> the user to do it.\r\n> \r\n> Or, if we do it this way, we should at least use \"-r\" not \"-rf\".\r\n> \r\n> https://codereview.appspot.com/7390054/\r\n",
			"disapproval": false,
			"date": "2013-02-28 02:37:46.093940",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 28 February 2013 14:04, Tyler <tyler@stretchr.com> wrote:\r\n\r\n> I can switch it to -r and update the CL.\r\n>\r\n\r\nPlease do.\r\n\r\nAs for the other things mentioned, Andrew do you have any input on that?\r\n>\r\n\r\nNo, I think we're fine on that front, for now at least.\r\n",
			"disapproval": false,
			"date": "2013-02-28 03:18:44.425410",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"mccoyst@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, mccoyst@gmail.com, MccoyST@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-28 03:25:06.066460",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you!\r\n\r\n\r\nOn 28 February 2013 14:25, <tyler@stretchr.com> wrote:\r\n\r\n> Hello golang-dev@googlegroups.com, adg@golang.org, mccoyst@gmail.com,\r\n> MccoyST@gmail.com (cc: golang-dev@googlegroups.com),\r\n>\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> https://codereview.appspot.**com/7390054/<https://codereview.appspot.com/7390054/>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-28 03:27:39.384840",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"mccoyst@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "My pleasure!\n\nSorry it's been such a long process with so many emails. :)\n\nAlso, forgive my ignorance, but what is \"LGTM\"?\n\nNow I need to find another issue to work on!\n\nOn 2013/02/28 03:27:39, adg wrote:\n> Thank you!\n> \n> \n> On 28 February 2013 14:25, <mailto:tyler@stretchr.com> wrote:\n> \n> > Hello mailto:golang-dev@googlegroups.com, mailto:adg@golang.org, mailto:mccoyst@gmail.com,\n> > mailto:MccoyST@gmail.com (cc: mailto:golang-dev@googlegroups.com),\n> >\n> >\n> > Please take another look.\n> >\n> >\n> >\n> https://codereview.appspot.**com/7390054/%3Chttps://codereview.appspot.com/7390054/>\n> >",
			"disapproval": false,
			"date": "2013-02-28 03:30:01.831800",
			"approval": false
		},
		{
			"sender": "tyler@stretchr.com",
			"recipients": [
				"tyler@stretchr.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"mccoyst@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-02-28 03:51:16.411390",
			"approval": false
		}
	],
	"owner_email": "tyler@stretchr.com",
	"private": false,
	"base_url": "",
	"owner": "TylerB_Stretchr",
	"subject": "code review 7390054:       OSX Package Installer: handle previous installation",
	"created": "2013-02-26 04:45:21.636860",
	"patchsets": [
		1,
		2001,
		5001,
		24001,
		27002,
		23002
	],
	"modified": "2013-02-28 03:51:17.819250",
	"closed": true,
	"issue": 7390054
}