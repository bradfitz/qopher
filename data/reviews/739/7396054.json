{
	"description": "cmd/vet: use types to test Error methods correctly.\nWe need go/types to discriminate the Error method from\nthe error interface and the Error method of the testing package.\nFixes issue 4753.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"gri@golang.org"
	],
	"reviewers": [
		"kamil.kisiel@gmail.com"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-22 23:52:35.400270",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Is this the first dependency on go/types?\r\n\r\n\r\nOn Fri, Feb 22, 2013 at 3:52 PM, <r@golang.org> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> cmd/vet: use types to test Error methods correctly.\r\n> We need go/types to discriminate the Error method from\r\n> the error interface and the Error method of the testing package.\r\n> Fixes issue 4753.\r\n>\r\n> Please review this at https://codereview.appspot.**com/7396054/<https://codereview.appspot.com/7396054/>\r\n>\r\n> Affected files:\r\n>   M src/cmd/vet/main.go\r\n>   M src/cmd/vet/print.go\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-23 00:10:54.407920",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If we don't use it, we won't know if it can be part of go1.1\r\n\r\nIf it isn't part of go1.1, go vet in go1.1 won't use it.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-02-23 00:51:13.857500",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "exp/ssa is another.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-02-23 00:30:57.109580",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "That's exp, though.\r\n\r\nIs go/types actually going into go1.1 for sure?\r\n\r\nIf not, govet can't use it.\r\n On Feb 22, 2013 4:30 PM, \"Rob Pike\" <r@golang.org> wrote:\r\n\r\n> exp/ssa is another.\r\n>\r\n> -rob\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-23 00:31:54.888720",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7396054/diff/2001/src/cmd/vet/print.go\nFile src/cmd/vet/print.go (right):\n\nhttps://codereview.appspot.com/7396054/diff/2001/src/cmd/vet/print.go#newcode321\nsrc/cmd/vet/print.go:321: return 0 // Can this happen?\nyes, if there's bugs in the vetted code (it can be an invalid type). and also if there's bugs in the typechecker...\n\nIf the package type-checked ok, it should not happen.\n\nhttps://codereview.appspot.com/7396054/diff/2001/src/cmd/vet/print.go#newcode348\nsrc/cmd/vet/print.go:348: return false // Can this happen?\nsee above",
			"disapproval": false,
			"date": "2013-02-23 01:10:56.182080",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go\nFile src/cmd/vet/print.go (right):\n\nhttps://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go#newcode327\nsrc/cmd/vet/print.go:327: //\tfunc Error() error\nyup, although it's just a comment. my brain does this a lot. the code gets it right (string)\n\nhttps://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go#newcode328\nsrc/cmd/vet/print.go:328: // where \"error\" is the universe's error type. We know the method is called \"Error\"\nOn 2013/02/24 09:15:10, kisielk wrote:\n> where \"string\" is the universe's string type\n\nDone.\n\nhttps://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go#newcode336\nsrc/cmd/vet/print.go:336: // The package is type-checked, so if there are no arguments, we're done.\nOn 2013/02/24 09:15:10, kisielk wrote:\n> if there are arguments?\n\nDone.\n\nhttps://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go#newcode369\nsrc/cmd/vet/print.go:369: return true\nouch\n\nhttps://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go#newcode369\nsrc/cmd/vet/print.go:369: return true\nyes, but it has little effect since all it means is that we have a niladic Error function. the purpose of this function is to suppress false positives; this case is suppressed by the caller: see the code after isErrorMethodCall is called.\n\nbut yes, this is wrong.",
			"disapproval": false,
			"date": "2013-02-24 18:53:21.407260",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e00da5e201e5 ***\n\ncmd/vet: use types to test Error methods correctly.\nWe need go/types to discriminate the Error method from\nthe error interface and the Error method of the testing package.\nFixes issue 4753.\n\nR=golang-dev, bradfitz, gri\nCC=golang-dev\nhttps://codereview.appspot.com/7396054",
			"disapproval": false,
			"date": "2013-02-23 01:16:35.799710",
			"approval": false
		},
		{
			"sender": "kamil.kisiel@gmail.com",
			"recipients": [
				"r@golang.org",
				"kamil.kisiel@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I know this is already submitted but I was just reading over the code to figure out how to use go/types\n\nAnyway, came across these bits that don't seem to be correct.\n\nhttps://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go\nFile src/cmd/vet/print.go (right):\n\nhttps://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go#newcode327\nsrc/cmd/vet/print.go:327: //\tfunc Error() error\nShouldn't this be\n\nfunc Error() string\n\n?\n\nhttps://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go#newcode328\nsrc/cmd/vet/print.go:328: // where \"error\" is the universe's error type. We know the method is called \"Error\"\nwhere \"string\" is the universe's string type\n\nhttps://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go#newcode336\nsrc/cmd/vet/print.go:336: // The package is type-checked, so if there are no arguments, we're done.\nif there are arguments?\n\nhttps://codereview.appspot.com/7396054/diff/3003/src/cmd/vet/print.go#newcode369\nsrc/cmd/vet/print.go:369: return true\nreturn false if the return type is not string?",
			"disapproval": false,
			"date": "2013-02-24 09:15:10.332750",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 7396054: cmd/vet: use types to test Error methods correctly.",
	"created": "2013-02-22 23:52:31.753850",
	"patchsets": [
		1,
		2001,
		3003
	],
	"modified": "2013-02-24 18:53:21.646570",
	"closed": true,
	"issue": 7396054
}