{
	"description": "archive/tar: add Header.FileInfo method. Add more cases to FileInfoHeader.\n\nFileInfoHeader can now handle fifo, setuid, setgid and sticky bits.\n\nFixes issue 4695.",
	"cc": [
		"golang-dev@googlegroups.com",
		"donovanhide@gmail.com",
		"minux.ma@gmail.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Looks good, but what about the roundtrip test that I suggested?",
			"disapproval": false,
			"date": "2013-02-12 03:43:15.986760",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=de92672228d3 ***\n\narchive/tar: add Header.FileInfo method. Add more cases to FileInfoHeader.\n\nFileInfoHeader can now handle fifo, setuid, setgid and sticky bits.\n\nFixes issue 4695.\n\nR=golang-dev, donovanhide, r.eklind.87, minux.ma, adg\nCC=golang-dev\nhttps://codereview.appspot.com/7305072\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2013-02-14 06:36:10.502150",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/10 11:14:48, Donovan wrote:\n> https://codereview.appspot.com/7305072/diff/7001/src/pkg/archive/tar/common.go\n> File src/pkg/archive/tar/common.go (right):\n> \n> https://codereview.appspot.com/7305072/diff/7001/src/pkg/archive/tar/common.go#newcode75\n> src/pkg/archive/tar/common.go:75: mode = os.FileMode(fi.h.Mode) & os.ModePerm\n> It's a bit obscure, but the mask 1777 allows for the preservation of the sticky\n> bit:\n> http://en.wikipedia.org/wiki/Sticky_bit\n> https://codereview.appspot.com/7203050\n\nThank you Donovan. I've updated the code to handle the sticky, setid and setgid bits. We can't copy them directly since Go uses other bits to represent these platform independently.",
			"disapproval": false,
			"date": "2013-02-10 18:47:17.052890",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/10 18:22:17, minux wrote:\n> tests?\n\nI want to include test but don't know yet which way to do it. Should we extend the previous test and add more members the the struct so it can also test Header.FileInfo or should we create a new struct and duplicate some of the data?\n\nEither way we should probably add at least one more tar testdata file, which includes FIFO, socket, device and other special files.\n\n> https://codereview.appspot.com/7305072/diff/7001/src/pkg/archive/tar/common.go\n> File src/pkg/archive/tar/common.go (right):\n> \n> https://codereview.appspot.com/7305072/diff/7001/src/pkg/archive/tar/common.go#newcode75\n> src/pkg/archive/tar/common.go:75: mode = os.FileMode(fi.h.Mode) & os.ModePerm\n> On 2013/02/10 11:14:48, Donovan wrote:\n> > It's a bit obscure, but the mask 1777 allows for the preservation of the\n> sticky\n> tar supports setuid and setgid, so perhaps you need 07777.\n\nIt now handles sticky bit, setuid and setgid properly. We can't copy them directly since Go uses other bits to represent these platform independently.\n\n> https://codereview.appspot.com/7305072/diff/7001/src/pkg/archive/tar/common.go#newcode98\n> src/pkg/archive/tar/common.go:98: case '0', '\\x00':\n> please use TypeReg, TypeRegA here.\n\nThe code has been updated to use Type*.\n\nDid you see my first message? https://codereview.appspot.com/7305072/#msg1\n\nIs there a way to differentiate a hard link from a symbolic link using\nos.FileMode? Is os.ModeSymlink correct for hard links?\n\nShould we remove nop cases (TypeReg, TypeRegA, TypeCont, TypeXHeader and TypeXGlobalHeader)?",
			"disapproval": false,
			"date": "2013-02-10 18:45:00.095680",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Updated to reflect changes in rev d4024b084e0c.",
			"disapproval": false,
			"date": "2013-02-13 11:48:53.103900",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/10 18:45:00, u wrote:\n> On 2013/02/10 18:22:17, minux wrote:\n> > tests?\n> \n> I want to include test but don't know yet which way to do it. \n\nTake a look at testHeaderRoundTrip from archive/zip",
			"disapproval": false,
			"date": "2013-02-11 01:10:53.292550",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, donovanhide@gmail.com, r.eklind.87@gmail.com, minux.ma@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-13 06:12:35.218720",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7305072/diff/2001/src/pkg/archive/tar/common.go\nFile src/pkg/archive/tar/common.go (right):\n\nhttps://codereview.appspot.com/7305072/diff/2001/src/pkg/archive/tar/common.go#newcode83\nsrc/pkg/archive/tar/common.go:83: mode |= os.ModeNamedPipe\nCould someone please verify that os.ModeNamedPipe is correct for c_ISFIFO.\n\nhttps://codereview.appspot.com/7305072/diff/2001/src/pkg/archive/tar/common.go#newcode85\nsrc/pkg/archive/tar/common.go:85: // regular file\nShould we remove this nop case?\n\nhttps://codereview.appspot.com/7305072/diff/2001/src/pkg/archive/tar/common.go#newcode99\nsrc/pkg/archive/tar/common.go:99: // regular file\nShould we remove nop cases ('0', '\\x00', '7', 'x', 'g')?\n\nhttps://codereview.appspot.com/7305072/diff/2001/src/pkg/archive/tar/common.go#newcode102\nsrc/pkg/archive/tar/common.go:102: mode |= os.ModeSymlink\nIs there a way to differentiate a hard link from a symbolic link using os.FileMode? Is os.ModeSymlink correct for hard links?\n\nhttps://codereview.appspot.com/7305072/diff/2001/src/pkg/archive/tar/common.go#newcode115\nsrc/pkg/archive/tar/common.go:115: mode |= os.ModeNamedPipe\nCould someone please verify that os.ModeNamedPipe is correct for '6'.",
			"disapproval": false,
			"date": "2013-02-09 20:21:11.507330",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "TestHeaderRoundTrip has now been implemented.\n\nFileInfoHeader has also been extended to fifo, setuid, setgid and sticky bits.\nBefore FileInfoHeader could fail with the following error:\n\"archive/tar: unknown file mode prw-------\"\n\nThe Go implementation of tar differs from the GNU tar command line tool, and I\nwould like to make sure that Go is doing the right thing. When creating tar\narchives the GNU tar command line tool doesn't include all Header.Mode bits. As\nfar as I can tell it only includes c_ISUID, c_ISGID and c_ISVTX while ignoring\nc_ISREG, c_ISDIR, etc.\n\nSince Header.Typeflag can represent most of these it never seems to be an issue\nwith GNU tar.\n\nI only want to verify that Go is doing the correct thing when including all of\nthese mode constants in Header.Mode. It does seem logical, but does anyone know\nfor sure?\n\nCheers /robin",
			"disapproval": false,
			"date": "2013-02-13 06:13:36.084900",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: adg@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-09 20:22:44.820640",
			"approval": false
		},
		{
			"sender": "DonovanHide@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7305072/diff/7001/src/pkg/archive/tar/common.go\nFile src/pkg/archive/tar/common.go (right):\n\nhttps://codereview.appspot.com/7305072/diff/7001/src/pkg/archive/tar/common.go#newcode75\nsrc/pkg/archive/tar/common.go:75: mode = os.FileMode(fi.h.Mode) & os.ModePerm\nIt's a bit obscure, but the mask 1777 allows for the preservation of the sticky bit:\nhttp://en.wikipedia.org/wiki/Sticky_bit\nhttps://codereview.appspot.com/7203050",
			"disapproval": false,
			"date": "2013-02-10 11:14:48.714050",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nGreat work, thanks.",
			"disapproval": false,
			"date": "2013-02-13 22:36:54.060360",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "tests?\n\nhttps://codereview.appspot.com/7305072/diff/7001/src/pkg/archive/tar/common.go\nFile src/pkg/archive/tar/common.go (right):\n\nhttps://codereview.appspot.com/7305072/diff/7001/src/pkg/archive/tar/common.go#newcode75\nsrc/pkg/archive/tar/common.go:75: mode = os.FileMode(fi.h.Mode) & os.ModePerm\nOn 2013/02/10 11:14:48, Donovan wrote:\n> It's a bit obscure, but the mask 1777 allows for the preservation of the sticky\ntar supports setuid and setgid, so perhaps you need 07777.\n\nhttps://codereview.appspot.com/7305072/diff/7001/src/pkg/archive/tar/common.go#newcode98\nsrc/pkg/archive/tar/common.go:98: case '0', '\\x00':\nplease use TypeReg, TypeRegA here.",
			"disapproval": false,
			"date": "2013-02-10 18:22:17.049600",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, donovanhide@gmail.com, r.eklind.87@gmail.com, minux.ma@gmail.com (cc: adg@golang.org, golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-10 18:43:07.913760",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, donovanhide@gmail.com, r.eklind.87@gmail.com, minux.ma@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-11 11:12:47.818300",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, donovanhide@gmail.com, r.eklind.87@gmail.com, minux.ma@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-13 11:48:11.034290",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"r.eklind.87@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/02/13 22:36:54, adg wrote:\n> LGTM\n> \n> Great work, thanks.\n\nThank you. The work was inspired by Donovan who started it in issue 4695 and CL 7203050. Thanks Donovan!",
			"disapproval": false,
			"date": "2013-02-14 05:30:16.796250",
			"approval": false
		},
		{
			"sender": "r.eklind.87@gmail.com",
			"recipients": [
				"r.eklind.87@gmail.com",
				"golang-dev@googlegroups.com",
				"donovanhide@gmail.com",
				"minux.ma@gmail.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-02-22 08:14:52.865450",
			"approval": false
		}
	],
	"owner_email": "r.eklind.87@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "u",
	"subject": "code review 7305072: archive/tar: add Header.FileInfo method. Add more cases...",
	"created": "2013-02-09 19:59:33.576620",
	"patchsets": [
		1,
		2001,
		7001,
		4002,
		8002,
		6003,
		5005,
		8005,
		14001,
		3004
	],
	"modified": "2013-02-22 08:14:57.534830",
	"closed": true,
	"issue": 7305072
}