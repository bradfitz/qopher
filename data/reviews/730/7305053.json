{
	"description": "os/exec: LookPath on Unix shouldn't look in cwd when PATH is empty",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net",
		"bradfitz@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Thu, Feb 7, 2013 at 4:33 AM, <speter.go1@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> os/exec: LookPath on Unix shouldn't look in cwd when PATH is empty\r\n>\r\n> Please review this at https://codereview.appspot.**com/7305053/<https://codereview.appspot.com/7305053/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/os/exec/lp_unix.go\r\n>   A src/pkg/os/exec/lp_unix_test.**go\r\n>\r\n>\r\n> Index: src/pkg/os/exec/lp_unix.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/os/exec/lp_unix.go\r\n> +++ b/src/pkg/os/exec/lp_unix.go\r\n> @@ -42,6 +42,9 @@\r\n>                 return \"\", &Error{file, err}\r\n>         }\r\n>         pathenv := os.Getenv(\"PATH\")\r\n> +       if pathenv == \"\" {\r\n> +               return \"\", &Error{file, ErrNotFound}\r\n> +       }\r\n>         for _, dir := range strings.Split(pathenv, \":\") {\r\n>                 if dir == \"\" {\r\n>                         // Unix shell semantics: path element \"\" means \".\"\r\n> Index: src/pkg/os/exec/lp_unix_test.**go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/src/pkg/os/exec/lp_unix_**test.go\r\n> @@ -0,0 +1,52 @@\r\n> +// Copyright 2013 The Go Authors.  All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +// +build darwin freebsd linux netbsd openbsd\r\n> +\r\n> +package exec\r\n> +\r\n> +import (\r\n> +       \"io/ioutil\"\r\n> +       \"os\"\r\n> +       \"testing\"\r\n> +)\r\n> +\r\n> +func TestLookPathUnixEmptyPath(t *testing.T) {\r\n> +       tmp, err := ioutil.TempDir(\"\", \"TestLookPathUnixEmptyPath\")\r\n> +       if err != nil {\r\n> +               t.Fatal(\"TempDir failed: \", err)\r\n> +       }\r\n> +       defer os.RemoveAll(tmp)\r\n> +       wd, err := os.Getwd()\r\n> +       if err != nil {\r\n> +               t.Fatal(\"Getwd failed: \", err)\r\n> +       }\r\n> +       err = os.Chdir(tmp)\r\n> +       if err != nil {\r\n> +               t.Fatal(\"Chdir failed: \", err)\r\n> +       }\r\n> +       defer os.Chdir(wd)\r\n> +\r\n> +       f, err := os.OpenFile(\"exec_me\", os.O_CREATE|os.O_EXCL, 0700)\r\n> +       if err != nil {\r\n> +               t.Fatal(\"OpenFile failed: \", err)\r\n> +       }\r\n> +       defer f.Close()\r\n> +\r\n> +       pathenv := os.Getenv(\"PATH\")\r\n> +       defer os.Setenv(\"PATH\", pathenv)\r\n> +\r\n> +       err = os.Setenv(\"PATH\", \"\")\r\n> +       if err != nil {\r\n> +               t.Fatal(\"Setenv failed: \", err)\r\n> +       }\r\n> +\r\n> +       path, err := LookPath(\"exec_me\")\r\n> +       if err == nil {\r\n> +               t.Fatal(\"LookPath found exec_me in empty $PATH\")\r\n> +       }\r\n> +       if path != \"\" {\r\n> +               t.Fatalf(\"LookPath path == %q when err != nil\", path)\r\n> +       }\r\n> +}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-07 14:36:57.284630",
			"approval": true
		},
		{
			"sender": "speter.go1@gmail.com",
			"recipients": [
				"speter.go1@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-07 12:33:24.305230",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Wow, nice catch.\r\nOn 7 Feb 2013 23:33, <speter.go1@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go\r\n>\r\n>\r\n> Description:\r\n> os/exec: LookPath on Unix shouldn't look in cwd when PATH is empty\r\n>\r\n> Please review this at https://codereview.appspot.**com/7305053/<https://codereview.appspot.com/7305053/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/os/exec/lp_unix.go\r\n>   A src/pkg/os/exec/lp_unix_test.**go\r\n>\r\n>\r\n> Index: src/pkg/os/exec/lp_unix.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/os/exec/lp_unix.go\r\n> +++ b/src/pkg/os/exec/lp_unix.go\r\n> @@ -42,6 +42,9 @@\r\n>                 return \"\", &Error{file, err}\r\n>         }\r\n>         pathenv := os.Getenv(\"PATH\")\r\n> +       if pathenv == \"\" {\r\n> +               return \"\", &Error{file, ErrNotFound}\r\n> +       }\r\n>         for _, dir := range strings.Split(pathenv, \":\") {\r\n>                 if dir == \"\" {\r\n>                         // Unix shell semantics: path element \"\" means \".\"\r\n> Index: src/pkg/os/exec/lp_unix_test.**go\r\n> ==============================**==============================**=======\r\n> new file mode 100644\r\n> --- /dev/null\r\n> +++ b/src/pkg/os/exec/lp_unix_**test.go\r\n> @@ -0,0 +1,52 @@\r\n> +// Copyright 2013 The Go Authors.  All rights reserved.\r\n> +// Use of this source code is governed by a BSD-style\r\n> +// license that can be found in the LICENSE file.\r\n> +\r\n> +// +build darwin freebsd linux netbsd openbsd\r\n> +\r\n> +package exec\r\n> +\r\n> +import (\r\n> +       \"io/ioutil\"\r\n> +       \"os\"\r\n> +       \"testing\"\r\n> +)\r\n> +\r\n> +func TestLookPathUnixEmptyPath(t *testing.T) {\r\n> +       tmp, err := ioutil.TempDir(\"\", \"TestLookPathUnixEmptyPath\")\r\n> +       if err != nil {\r\n> +               t.Fatal(\"TempDir failed: \", err)\r\n> +       }\r\n> +       defer os.RemoveAll(tmp)\r\n> +       wd, err := os.Getwd()\r\n> +       if err != nil {\r\n> +               t.Fatal(\"Getwd failed: \", err)\r\n> +       }\r\n> +       err = os.Chdir(tmp)\r\n> +       if err != nil {\r\n> +               t.Fatal(\"Chdir failed: \", err)\r\n> +       }\r\n> +       defer os.Chdir(wd)\r\n> +\r\n> +       f, err := os.OpenFile(\"exec_me\", os.O_CREATE|os.O_EXCL, 0700)\r\n> +       if err != nil {\r\n> +               t.Fatal(\"OpenFile failed: \", err)\r\n> +       }\r\n> +       defer f.Close()\r\n> +\r\n> +       pathenv := os.Getenv(\"PATH\")\r\n> +       defer os.Setenv(\"PATH\", pathenv)\r\n> +\r\n> +       err = os.Setenv(\"PATH\", \"\")\r\n> +       if err != nil {\r\n> +               t.Fatal(\"Setenv failed: \", err)\r\n> +       }\r\n> +\r\n> +       path, err := LookPath(\"exec_me\")\r\n> +       if err == nil {\r\n> +               t.Fatal(\"LookPath found exec_me in empty $PATH\")\r\n> +       }\r\n> +       if path != \"\" {\r\n> +               t.Fatalf(\"LookPath path == %q when err != nil\", path)\r\n> +       }\r\n> +}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-07 12:35:27.727880",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"speter.go1@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=f3ab80f38f60 ***\n\nos/exec: LookPath on Unix shouldn't look in cwd when PATH is empty\n\nR=golang-dev, dave, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7305053\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2013-02-07 14:41:40.612960",
			"approval": false
		}
	],
	"owner_email": "speter.go1@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "speter",
	"subject": "code review 7305053: os/exec: LookPath on Unix shouldn't look in cwd when PA...",
	"created": "2013-02-07 12:28:07.023520",
	"patchsets": [
		1,
		2001,
		5001
	],
	"modified": "2013-02-07 14:53:54.653150",
	"closed": true,
	"issue": 7305053
}