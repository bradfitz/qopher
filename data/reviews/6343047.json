{
	"description": "cmd/dist: Make windows.c's fatal() print to stderr\n\nGenerating env.bat using dist env -wp > env.bat failed silently\nif case of an error, because the message was redirected to env.bat.\nVerbose messages still go to stdout, causing problems, but that's\na seperate change.\nMade errprintf() identical to xprintf(), except for the output handle.\nYes, it's duplicate code, but most of the function is unpacking\nthe argument list and preparing it for WriteFile(), which has to be\ndone anyway.",
	"cc": [
		"golang-dev@googlegroups.com",
		"alex.brainman@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-06-27 11:18:25.548536",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThank you.\n\nAlex",
			"disapproval": false,
			"date": "2012-06-30 14:26:29.673284",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6343047/diff/5001/src/cmd/dist/windows.c\nFile src/cmd/dist/windows.c (right):\n\nhttp://codereview.appspot.com/6343047/diff/5001/src/cmd/dist/windows.c#newcode129\nsrc/cmd/dist/windows.c:129: vfprintf(stderr, fmt, arg);\nThis is different from xprintf does. I would rather have both output to stdout and stderr go via same code path - use vfprintf for both, or use WriteFile for both. Perhaps the later, because we all know what it does. I do not know what vfprintf does. I am concerned about non-ascii output, see http://code.google.com/p/go/issues/detail?id=3754 for related problem.\n\nPerhaps, you could copy xprintf into a new function and have it take one extra parameter - output handle. Then you could use that function from both xprintf and fatal.",
			"disapproval": false,
			"date": "2012-06-28 04:20:25.052222",
			"approval": false
		},
		{
			"sender": "pieter@binky.org.uk",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-29 13:30:19.450228",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"pieter@binky.org.uk",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3f7501fdb220 ***\n\ncmd/dist: Make windows.c's fatal() print to stderr\n\nGenerating env.bat using dist env -wp > env.bat failed silently\nif case of an error, because the message was redirected to env.bat.\nVerbose messages still go to stdout, causing problems, but that's\na seperate change.\nMade errprintf() identical to xprintf(), except for the output handle.\nYes, it's duplicate code, but most of the function is unpacking\nthe argument list and preparing it for WriteFile(), which has to be\ndone anyway.\n\nR=golang-dev, alex.brainman\nCC=golang-dev\nhttp://codereview.appspot.com/6343047\n\nCommitter: Alex Brainman <alex.brainman@gmail.com>",
			"disapproval": false,
			"date": "2012-06-30 14:27:15.089739",
			"approval": false
		}
	],
	"owner_email": "pieter@binky.org.uk",
	"private": false,
	"base_url": "",
	"owner": "peted",
	"subject": "code review 6343047: cmd/dist: Make windows.c's fatal() print to stderr",
	"created": "2012-06-27 11:17:54.083891",
	"patchsets": [
		1,
		2001,
		5001,
		7002
	],
	"modified": "2012-06-30 22:00:48.193218",
	"closed": true,
	"issue": 6343047
}