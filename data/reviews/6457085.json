{
	"description": "crypto/rand: Example for Read.",
	"cc": [
		"adg@golang.org",
		"remyoudompheng@gmail.com",
		"rsc@golang.org",
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "yves.junqueira@gmail.com",
			"recipients": [
				"yves.junqueira@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-08-06 20:25:49.793310",
			"approval": false
		},
		{
			"sender": "yves.junqueira@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please have another look.\r\n\r\nI also tried to change from ExampleRead() to ExampleReader() which\r\nseemed more appropriate, but godoc doesn't seem to display examples\r\nfor variables properly - even though the \"Examples\" section is shown\r\nin the page index, the content is not displayed.\r\n\r\nI left it as ExampleRead(). Let me know if it should be\r\nExampleReader() and if I should go fix godoc.\r\n",
			"disapproval": false,
			"date": "2012-08-06 20:42:37.299960",
			"approval": false
		},
		{
			"sender": "yves.junqueira@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Mon, Aug 6, 2012 at 10:27 PM,  <remyoudompheng@gmail.com> wrote:\r\n>\r\n> http://codereview.appspot.com/6457085/diff/5001/src/pkg/crypto/rand/example_test.go\r\n> File src/pkg/crypto/rand/example_test.go (right):\r\n>\r\n> http://codereview.appspot.com/6457085/diff/5001/src/pkg/crypto/rand/example_test.go#newcode28\r\n> src/pkg/crypto/rand/example_test.go:28: fmt.Println(reflect.DeepEqual(b,\r\n> make([]byte, count)))\r\n> i think a user-oriented example should use bytes.Equal and not the\r\n> reflect package.\r\n\r\nThanks, I was just going to ask for better ways to do that. I didn't\r\nknow about bytes.Equal. Changing now.\r\n\r\nAlso, I'm undecided if the for loop is a good idea - it's correct, but\r\nalso slightly complicated. Suggestions are welcomed.\r\n\r\n-- \r\nYves Junqueira <http://cetico.org/about>\r\n",
			"disapproval": false,
			"date": "2012-08-06 20:29:56.609440",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"yves.junqueira@gmail.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6457085/diff/5001/src/pkg/crypto/rand/example_test.go\nFile src/pkg/crypto/rand/example_test.go (right):\n\nhttp://codereview.appspot.com/6457085/diff/5001/src/pkg/crypto/rand/example_test.go#newcode28\nsrc/pkg/crypto/rand/example_test.go:28: fmt.Println(reflect.DeepEqual(b, make([]byte, count)))\ni think a user-oriented example should use bytes.Equal and not the reflect package.",
			"disapproval": false,
			"date": "2012-08-06 20:27:02.478520",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The example should use io.ReadFull.\r\n",
			"disapproval": false,
			"date": "2012-08-06 20:29:54.189120",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"yves.junqueira@gmail.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-08-08 01:40:52.446240",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"yves.junqueira@gmail.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6457085/diff/11001/src/pkg/crypto/rand/example_test.go\nFile src/pkg/crypto/rand/example_test.go (right):\n\nhttp://codereview.appspot.com/6457085/diff/11001/src/pkg/crypto/rand/example_test.go#newcode14\nsrc/pkg/crypto/rand/example_test.go:14: func ExampleRead() {\nthere should be a comment here.",
			"disapproval": false,
			"date": "2012-08-07 03:44:27.336260",
			"approval": false
		},
		{
			"sender": "yves.junqueira@gmail.com",
			"recipients": [
				"yves.junqueira@gmail.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6457085/diff/11001/src/pkg/crypto/rand/example_test.go\nFile src/pkg/crypto/rand/example_test.go (right):\n\nhttp://codereview.appspot.com/6457085/diff/11001/src/pkg/crypto/rand/example_test.go#newcode14\nsrc/pkg/crypto/rand/example_test.go:14: func ExampleRead() {\nOn 2012/08/07 03:44:27, r wrote:\n> there should be a comment here.\n\nDone.",
			"disapproval": false,
			"date": "2012-08-08 01:25:14.780140",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"yves.junqueira@gmail.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4738fd47e7a9 ***\n\ncrypto/rand: Example for Read.\n\nR=adg, remyoudompheng, rsc, r\nCC=golang-dev\nhttp://codereview.appspot.com/6457085\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2012-08-08 02:05:02.981130",
			"approval": false
		}
	],
	"owner_email": "yves.junqueira@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "nictuku",
	"subject": "code review 6457085: crypto/rand: Example for Read.",
	"created": "2012-08-06 20:19:20.005470",
	"patchsets": [
		1,
		2001,
		5001,
		9001,
		6004,
		11001,
		1006
	],
	"modified": "2012-10-28 21:42:27.574330",
	"closed": true,
	"issue": 6457085
}