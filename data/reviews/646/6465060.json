{
	"description": "misc/cgo/life: remove -lmsvcrt to fix windows/amd64 build\n        I guess this is the problem as I can't reproduce the failure.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"alex.brainman@gmail.com"
	],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=833bc91ca720 ***\n\nmisc/cgo/life: remove -lmsvcrt to fix windows/amd64 build\n        I guess this is the problem as I can't reproduce the failure.\n\nR=golang-dev, alex.brainman\nCC=golang-dev\nhttp://codereview.appspot.com/6465060",
			"disapproval": false,
			"date": "2012-08-17 01:10:26.313660",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-08-16 20:19:49.336250",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "could someone who can reproduce this problem help me test this CL?\r\n",
			"disapproval": false,
			"date": "2012-08-16 20:22:51.512300",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/16 20:22:51, minux wrote:\n> could someone who can reproduce this problem help me test this CL?\n\nI can see different error when building tip misc/cgo/life - test program crashes. And your change fixes that. So, I say it LGTM, lets submit and see.\n\nOn the other hand, 386 builder fails for different reason (see the output). I think, we have hit http://code.google.com/p/go/issues/detail?id=3358 again. I guess we should disable test at fault (as we did for other test) for now (in a later CL). I do not know how to tackle http://code.google.com/p/go/issues/detail?id=3358, so, perhaps, we should come up with a way to cheat and make these test work in a builder. I will think about that.\n\nAlex",
			"disapproval": false,
			"date": "2012-08-17 00:39:20.180390",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Aug 17, 2012 at 8:39 AM, <alex.brainman@gmail.com> wrote:\r\n\r\n> On the other hand, 386 builder fails for different reason (see the\r\n> output). I think, we have hit\r\n> http://code.google.com/p/go/**issues/detail?id=3358<http://code.google.com/p/go/issues/detail?id=3358>again. I guess we\r\n> should disable test at fault (as we did for other test) for now (in a\r\n> later CL). I do not know how to tackle\r\n> http://code.google.com/p/go/**issues/detail?id=3358<http://code.google.com/p/go/issues/detail?id=3358>,\r\n> so, perhaps, we\r\n> should come up with a way to cheat and make these test work in a\r\n> builder. I will think about that.\r\n>\r\ncan we shorten the path of the builder's temporary directory?\r\nchange it to C:\\t might help, as the complete path of it appears several\r\ntimes\r\nin the offending path.\r\n",
			"disapproval": false,
			"date": "2012-08-17 16:00:59.079140",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/17 16:00:59, minux wrote:\n> >\n> can we shorten the path of the builder's temporary directory?\n> change it to C:\\t might help,\n\nCertainly. I think gobuilder has flag where we can specify that directory instead of TEMP. But then we have to rely on people how run gobuilder to remember that.\n\n> ... as the complete path of it appears several\n> times\n> in the offending path.\n\nYes, I was trying to refresh my memory the other day about why go command use import paths that have double of absolute path. Perhaps, we can change that logic. Forget gobuilder, I am more concerned about people using long GOPATH (like \"c:\\Document and Settings ...\") together with long import paths (like \"code.google.com/p/...\").\n\nAlex",
			"disapproval": false,
			"date": "2012-08-18 07:42:25.065510",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/08/18 07:42:25, brainman wrote:\n> \n> Yes, I was trying to refresh my memory the other day about why go command use\n> import paths that have double of absolute path. ...\n\nLooked again, and here is how it works.\n\nFor directories outside of GOPATH it uses package directory absolute path as import path. Sounds sensible to me. Really it needs to be unique, but, if you are building more then one package in one command, then these should have separate import paths. We can use short hash of full path instead, but using absolute paths also makes it easy to reason about them.\n\nDuring tests, go command creates special test package that is different from tested package in a way that it includes *_test.go files. This package is treated as separate package and is copied into _test directory under package directory. So, for example, for package unicode/utf8 we create both $WORK/unicode/utf8.a and $WORK/unicode/utf8/_test/unicode/utf8.a (contains test version of the package). I tried moving it into $WORK/_test/unicode/utf8.a instead, and it works for our case, but it also breaks when multiple packages are tested in one command. So, as before, _test directory is not good enough, it needs to be unique. So keeping those in a privacy of package directory sounds reasonable.\n\nI have not found a good solution. But, on the other hand, I discovered that part of our problem is that we are running outside of GOPATH. Our scenario is special.\n\nI think, we should use directory with short absolute path on our go builder, as you suggested. If we could rely on builder owners to set it up correctly, we could just use -buildroot go builder flag to specify that. Alternatively, we could change go builder to use \"c:\\\" as default build root on windows.\n\nLets wait for Russ before we make decision.\n\nAlex",
			"disapproval": false,
			"date": "2012-08-27 02:27:21.370660",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6465060: misc/cgo/life: remove -lmsvcrt to fix windows/amd64 build",
	"created": "2012-08-16 20:04:25.804210",
	"patchsets": [
		1,
		2001,
		4001,
		8002
	],
	"modified": "2012-08-27 02:27:21.536490",
	"closed": true,
	"issue": 6465060
}