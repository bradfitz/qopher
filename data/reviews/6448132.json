{
	"description": "runtime: use sched_getaffinity for runtime.NumCPU() on Linux\n        Fixes issue 3921.",
	"cc": [
		"iant@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3532ab6bf5be ***\n\nruntime: use sched_getaffinity for runtime.NumCPU() on Linux\n        Fixes issue 3921.\n\nR=iant\nCC=golang-dev\nhttp://codereview.appspot.com/6448132\n\nhttp://codereview.appspot.com/6448132/diff/6001/src/pkg/runtime/thread_linux.c\nFile src/pkg/runtime/thread_linux.c (right):\n\nhttp://codereview.appspot.com/6448132/diff/6001/src/pkg/runtime/thread_linux.c#newcode83\nsrc/pkg/runtime/thread_linux.c:83: extern runtime\u00b7sched_getaffinity(int32 pid, int32 len, uintptr *buf);\nOn 2012/08/09 18:36:42, iant wrote:\n> Seems like both pid and len should be uintptr.\nfixed.\n\nhttp://codereview.appspot.com/6448132/diff/6001/src/pkg/runtime/thread_linux.c#newcode95\nsrc/pkg/runtime/thread_linux.c:95: t = t - ((t >> 1) & 0x5555555555555555ULL);\nOn 2012/08/09 18:36:42, iant wrote:\n> It's a nice algorithm but of course in SSE4.2 there is a single machine\n> instruction for it.  Let's stick with this for now, though.\nyes, the popcnt instruction. but i think this is not that performance\ncritical (besides, i will have to write 3 implementations if i want\nto take advantage of popcnt)",
			"disapproval": false,
			"date": "2012-08-10 02:05:38.636340",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks!\n\nhttp://codereview.appspot.com/6448132/diff/6001/src/pkg/runtime/thread_linux.c\nFile src/pkg/runtime/thread_linux.c (right):\n\nhttp://codereview.appspot.com/6448132/diff/6001/src/pkg/runtime/thread_linux.c#newcode83\nsrc/pkg/runtime/thread_linux.c:83: extern runtime\u00b7sched_getaffinity(int32 pid, int32 len, uintptr *buf);\nSeems like both pid and len should be uintptr.\n\nhttp://codereview.appspot.com/6448132/diff/6001/src/pkg/runtime/thread_linux.c#newcode95\nsrc/pkg/runtime/thread_linux.c:95: t = t - ((t >> 1) & 0x5555555555555555ULL);\nIt's a nice algorithm but of course in SSE4.2 there is a single machine instruction for it.  Let's stick with this for now, though.",
			"disapproval": false,
			"date": "2012-08-09 18:36:42.609700",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello iant@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-08-09 15:31:31.781140",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Very nice.\r\n\r\nOn Fri, Aug 10, 2012 at 12:05 PM,  <minux.ma@gmail.com> wrote:\r\n> *** Submitted as\r\n> http://code.google.com/p/go/source/detail?r=3532ab6bf5be ***\r\n>\r\n> runtime: use sched_getaffinity for runtime.NumCPU() on Linux\r\n>         Fixes issue 3921.\r\n>\r\n> R=iant\r\n> CC=golang-dev\r\n> http://codereview.appspot.com/6448132\r\n>\r\n>\r\n>\r\n>\r\n> http://codereview.appspot.com/6448132/diff/6001/src/pkg/runtime/thread_linux.c\r\n> File src/pkg/runtime/thread_linux.c (right):\r\n>\r\n> http://codereview.appspot.com/6448132/diff/6001/src/pkg/runtime/thread_linux.c#newcode83\r\n> src/pkg/runtime/thread_linux.c:83: extern\r\n> runtime\u00b7sched_getaffinity(int32 pid, int32 len, uintptr *buf);\r\n> On 2012/08/09 18:36:42, iant wrote:\r\n>>\r\n>> Seems like both pid and len should be uintptr.\r\n>\r\n> fixed.\r\n>\r\n>\r\n> http://codereview.appspot.com/6448132/diff/6001/src/pkg/runtime/thread_linux.c#newcode95\r\n> src/pkg/runtime/thread_linux.c:95: t = t - ((t >> 1) &\r\n> 0x5555555555555555ULL);\r\n> On 2012/08/09 18:36:42, iant wrote:\r\n>>\r\n>> It's a nice algorithm but of course in SSE4.2 there is a single\r\n>\r\n> machine\r\n>>\r\n>> instruction for it.  Let's stick with this for now, though.\r\n>\r\n> yes, the popcnt instruction. but i think this is not that performance\r\n> critical (besides, i will have to write 3 implementations if i want\r\n> to take advantage of popcnt)\r\n>\r\n> http://codereview.appspot.com/6448132/\r\n",
			"disapproval": false,
			"date": "2012-08-10 02:11:04.563710",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6448132: runtime: use sched_getaffinity for runtime.NumCPU()",
	"created": "2012-08-09 11:16:11.953590",
	"patchsets": [
		1,
		1002,
		1003,
		6001,
		13001,
		5005
	],
	"modified": "2012-08-10 02:11:04.657970",
	"closed": true,
	"issue": 6448132
}