{
	"description": "cmd/6g: peephole fixes/additions\n\n* Shift/rotate by constant doesn't have to stop subprop. (also in 8g)\n* Remove redundant MOVLQZX instructions.\n* An attempt at issuing loads early.\n  Good for 0.5% on a good day, might not be worth keeping.\n  Need to understand more about whether the x86\n  looks ahead to what loads might be coming up.",
	"cc": [
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-05-18 00:26:44.818432",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=3b320ce16e39 ***\n\ncmd/6g: peephole fixes/additions\n\n* Shift/rotate by constant doesn't have to stop subprop. (also in 8g)\n* Remove redundant MOVLQZX instructions.\n* An attempt at issuing loads early.\n  Good for 0.5% on a good day, might not be worth keeping.\n  Need to understand more about whether the x86\n  looks ahead to what loads might be coming up.\n\nR=ken2, ken\nCC=golang-dev\nhttp://codereview.appspot.com/6203091",
			"disapproval": false,
			"date": "2012-05-24 16:11:38.662553",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 6203091: cmd/6g: peephole fixes/additions",
	"created": "2012-05-17 22:59:24.194074",
	"patchsets": [
		1,
		2001,
		4002,
		7001
	],
	"modified": "2012-05-24 16:11:41.299657",
	"closed": true,
	"issue": 6203091
}