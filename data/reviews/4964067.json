{
	"description": "path/filepath: Simplify Walk interface\n\nThe last argument of filepath.Walk was removed, and the Visitor\ninterface now contains an Error method that is called on errors.\n\nFixes issue 2237.",
	"cc": [
		"golang-dev@googlegroups.com",
		"gri@golang.org",
		"r@google.com"
	],
	"reviewers": [
		"rsc@golang.org",
		"r@golang.org",
		"gustavo@niemeyer.net"
	],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Hang on please.  Let's see if others have different, maybe better ideas.\n",
			"disapproval": false,
			"date": "2011-09-07 21:51:22.253536",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "You beat me to it.\n\nLooks pretty good, but I have a couple of comments.\n\n- gri\n\nhttp://codereview.appspot.com/4964067/diff/5001/src/pkg/path/filepath/path.go\nFile src/pkg/path/filepath/path.go (right):\n\nhttp://codereview.appspot.com/4964067/diff/5001/src/pkg/path/filepath/path.go#newcode258\nsrc/pkg/path/filepath/path.go:258: // visited by Walk. The parameter path is the full path of f relative\nI think this might not be right anymore. E.g. if there's an error right in the beginning (say, Walk(\"nonexisting_dir\", v), then error is not called with path = \".\", that is, it is not relative to root.\n\nhttp://codereview.appspot.com/4964067/diff/5001/src/pkg/path/filepath/path_test.go\nFile src/pkg/path/filepath/path_test.go (right):\n\nhttp://codereview.appspot.com/4964067/diff/5001/src/pkg/path/filepath/path_test.go#newcode302\nsrc/pkg/path/filepath/path_test.go:302: type TestVisitor struct {\nshould this just be a chan os.Error now?",
			"disapproval": false,
			"date": "2011-09-07 21:05:06.114711",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nThanks for doing this.\n- gri\n\nPS: It would be nice to have a gofix module for this, but I fear w/o more type info this is not easily possible (except for removing the chan parameter to Walk, but it still requires manual fixes).",
			"disapproval": false,
			"date": "2011-09-07 21:45:18.543842",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "I don't see quite the anonymity, but more to the point this was an API\nchange that happened pretty fast, after I said I'd look into a\nsolution.  Moreover, this is an API change to fix a bug in the\nimplementation, which is a clue the issue requires more thought.\n\nBy the way, API change CLs should come with gofix modules. Ironically,\nyou changed gofix/main.go but didn't add a module.\n\nAgain, please pull this out for now.\n\n-rob\n",
			"disapproval": false,
			"date": "2011-09-07 22:10:30.291506",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-09-07 20:53:20.887650",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"r@google.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=661cb84cc6f0 ***\n\npath/filepath: Simplify Walk interface\n\nThe last argument of filepath.Walk was removed, and the Visitor\ninterface now contains an Error method that is called on errors.\n\nFixes issue 2237.\n\nR=golang-dev, gri, r\nCC=golang-dev\nhttp://codereview.appspot.com/4964067\n\nCommitter: Robert Griesemer <gri@golang.org>",
			"disapproval": false,
			"date": "2011-09-07 21:49:54.242346",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"n13m3y3r@gmail.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "> You beat me to it.\n\nSorry for jumping ahead. Want to use the new interface. :)\n\n> I think this might not be right anymore.\n\nGood catch. It looks like this was actually never true for \nany of the functions, since there's no logic to make the\npath relative. Fixed the doc.\n\n> should this just be a chan os.Error now?\n\nDone.\n\nPTAL",
			"disapproval": false,
			"date": "2011-09-07 21:31:33.080732",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Sep 7, 2011 at 18:28, Robert Griesemer <gri@golang.org> wrote:\n> I have thought about the gofix issue (and mentioned it in the code review),\n> but except for the parameter passing change to Walk, I'm not sure that the\n> gofix is strong enough to do the change in general. Only removing the\n> parameter is not going to make a difference - the compiler will still\n> complain about the missing Error method.\n\nEven with a working gofix, I think it would still help to\nhave more time to think about which API change to make.\n\nRuss\n",
			"disapproval": false,
			"date": "2011-09-08 02:03:36.750934",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "please hold off\n\ni'm not happy with this.\n\n-rob\n",
			"disapproval": false,
			"date": "2011-09-07 21:46:28.826244",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "Can we please hg undo this?\nThis is an API change and I don't think we\nwant it in this weekly without knowing it's\nthe change we want to make.\n",
			"disapproval": false,
			"date": "2011-09-07 21:52:19.966969",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"n13m3y3r@gmail.com",
				"rsc@golang.org",
				"r@golang.org",
				"gustavo@niemeyer.net",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"r@google.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\nthanks",
			"disapproval": false,
			"date": "2011-09-07 22:19:34.514237",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "On Wed, Sep 7, 2011 at 2:52 PM, Russ Cox <rsc@golang.org> wrote:\n> Can we please hg undo this?\n> This is an API change and I don't think we\n> want it in this weekly without knowing it's\n> the change we want to make.\n>\n\nHey, I said I would look into this. I want to reconsider the API\nbecause I think something much better overall should exist.  Please\nrevert this change.\n\n-rob\n",
			"disapproval": false,
			"date": "2011-09-07 21:59:24.160730",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> Hey, I said I would look into this. I want to reconsider the API\n> because I think something much better overall should exist. \u00a0Please\n> revert this change.\n\nSorry about that.  Wasn't trying to rule over your request.. I thought\nthere was already an internal agreement it was fine to go ahead with\nthis given further comments on the issue.\n\nRobert, Russ and I seem to agree this is a simple yet useful API\nchange, but I'm keen on learning your idea as well if you see\nsomething entirely different with the same benefits.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I never filed a patent.\n",
			"disapproval": false,
			"date": "2011-09-07 22:07:13.213164",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "ha ha\ns/anonymity/unanimity/\n\n-rob\n",
			"disapproval": false,
			"date": "2011-09-07 22:12:34.636154",
			"approval": false
		},
		{
			"sender": "gustavo@niemeyer.net",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "> I don't see quite the unanimity, but more to the point this was an API\n\nPlease read the thread in the issue.\n\n> change that happened pretty fast, after I said I'd look into a\n> solution. \u00a0Moreover, this is an API change to fix a bug in the\n> implementation, which is a clue the issue requires more thought.\n>\n> By the way, API change CLs should come with gofix modules. Ironically,\n> you changed gofix/main.go but didn't add a module.\n\nBecause indeed I wasn't planning on adding one due to the nature of\nthe change. I accept critiques on the choice, but it wasn't an\noverlook.\n\n> Again, please pull this out for now.\n\nDoing that now.\n\n-- \nGustavo Niemeyer\nhttp://niemeyer.net\nhttp://niemeyer.net/plus\nhttp://niemeyer.net/twitter\nhttp://niemeyer.net/blog\n\n-- I never filed a patent.\n",
			"disapproval": false,
			"date": "2011-09-07 22:15:56.439496",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "This is entirely my fault - I should have solicited more feedback. My\napologies.\n\nThat said, the changes required were so straight-forward (and existing code\nso easy to adjust) that I am inclined to think this is not a bad change and\neven a natural API for the particular problem. But there may be a more\ngeneral over-arching principle that applies elsewhere.\n\nI have thought about the gofix issue (and mentioned it in the code review),\nbut except for the parameter passing change to Walk, I'm not sure that the\ngofix is strong enough to do the change in general. Only removing the\nparameter is not going to make a difference - the compiler will still\ncomplain about the missing Error method.\n\n- gri\n\nOn Wed, Sep 7, 2011 at 2:59 PM, Rob 'Commander' Pike <r@golang.org> wrote:\n\n> On Wed, Sep 7, 2011 at 2:52 PM, Russ Cox <rsc@golang.org> wrote:\n> > Can we please hg undo this?\n> > This is an API change and I don't think we\n> > want it in this weekly without knowing it's\n> > the change we want to make.\n> >\n>\n> Hey, I said I would look into this. I want to reconsider the API\n> because I think something much better overall should exist.  Please\n> revert this change.\n>\n> -rob\n>\n",
			"disapproval": false,
			"date": "2011-09-07 22:28:27.291400",
			"approval": false
		}
	],
	"owner_email": "n13m3y3r@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "niemeyer",
	"subject": "code review 4964067: path/filepath: Simplify Walk interface",
	"created": "2011-09-07 20:49:39.143897",
	"patchsets": [
		1,
		2001,
		1002,
		5001,
		9001,
		12001
	],
	"modified": "2011-09-23 18:17:39.443727",
	"closed": true,
	"issue": 4964067
}