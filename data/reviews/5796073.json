{
	"description": "archive/tar: add FileInfoHeader function\n\nFixes issue 3295",
	"cc": [
		"adg@golang.org",
		"rsc@golang.org",
		"mike.rosset@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-03-12 22:15:02.651294",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 13 March 2012 09:18, Brad Fitzpatrick <bradfitz@golang.org> wrote:\n> Can you wait a couple hours on this? \u00a0(or just patch it in locally if you\n> need it for Windows?)\n\n\nSounds fine to me.\n",
			"disapproval": false,
			"date": "2012-03-12 22:34:37.588953",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-12 22:04:18.407369",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can you wait a couple hours on this?  (or just patch it in locally if you\nneed it for Windows?)\n\nRuss said I was doing this wrong before, so I'm curious if I'm still doing\nit wrong.\n\nOr if the API sucks (the optional filename parameter, which doesn't seem\navoidable, but I could also see being a readlink function instead of a\nstring...)\n\n\nOn Mon, Mar 12, 2012 at 3:15 PM, <adg@golang.org> wrote:\n\n> LGTM\n>\n> http://codereview.appspot.com/**5796073/<http://codereview.appspot.com/5796073/>\n>\n",
			"disapproval": false,
			"date": "2012-03-12 22:18:52.959894",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-03-12 21:44:39.181327",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/common.go\nFile src/pkg/archive/tar/common.go (right):\n\nhttp://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/common.go#newcode87\nsrc/pkg/archive/tar/common.go:87: case fi.Mode()&os.ModeSymlink != 0:\nh.Typeflag = TypeSymlink ?\n\nhttp://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/common.go#newcode99\nsrc/pkg/archive/tar/common.go:99: h.Mode |= c_ISCHR\nh.Typeflag = TypeChar ?\n\nhttp://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/common.go#newcode101\nsrc/pkg/archive/tar/common.go:101: h.Mode |= c_ISBLK\nh.Typeflag = TypeBlock ?\n\nhttp://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/stat_unix.go\nFile src/pkg/archive/tar/stat_unix.go (right):\n\nhttp://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/stat_unix.go#newcode28\nsrc/pkg/archive/tar/stat_unix.go:28: // TODO(bradfitz): major/minor device numbers?\nwhy not?",
			"disapproval": false,
			"date": "2012-03-12 22:01:29.950507",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/common.go\nFile src/pkg/archive/tar/common.go (right):\n\nhttp://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/common.go#newcode87\nsrc/pkg/archive/tar/common.go:87: case fi.Mode()&os.ModeSymlink != 0:\nOn 2012/03/12 22:01:30, adg wrote:\n> h.Typeflag = TypeSymlink ?\n\nDone.\n\nhttp://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/common.go#newcode99\nsrc/pkg/archive/tar/common.go:99: h.Mode |= c_ISCHR\nOn 2012/03/12 22:01:30, adg wrote:\n> h.Typeflag = TypeChar ?\n\nDone.\n\nhttp://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/common.go#newcode101\nsrc/pkg/archive/tar/common.go:101: h.Mode |= c_ISBLK\nOn 2012/03/12 22:01:30, adg wrote:\n> h.Typeflag = TypeBlock ?\n\nDone.\n\nhttp://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/stat_unix.go\nFile src/pkg/archive/tar/stat_unix.go (right):\n\nhttp://codereview.appspot.com/5796073/diff/6001/src/pkg/archive/tar/stat_unix.go#newcode28\nsrc/pkg/archive/tar/stat_unix.go:28: // TODO(bradfitz): major/minor device numbers?\nOn 2012/03/12 22:01:30, adg wrote:\n> why not?\n\nportably unpacking them",
			"disapproval": false,
			"date": "2012-03-12 22:03:53.407490",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "For the record, this CL is postponed until after Go 1.\n",
			"disapproval": false,
			"date": "2012-03-15 17:51:48.850075",
			"approval": false
		},
		{
			"sender": "Mike.Rosset@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"rsc@golang.org",
				"Mike.Rosset@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/12 21:44:39, bradfitz wrote:\n> Hello mailto:golang-dev@googlegroups.com,\n> \n> I'd like you to review this change to\n> https://go.googlecode.com/hg\n\n+1 one for this addition thanks Brad, Even if its not included in Go1 its a nice change. I currently have some code that does this but I'll port it to your new function and provide any feed back where I can.",
			"disapproval": false,
			"date": "2012-03-15 23:18:04.443489",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"rsc@golang.org",
				"mike.rosset@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Ping.",
			"disapproval": false,
			"date": "2012-05-01 03:35:19.670305",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"mike.rosset@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5796073/diff/2004/src/pkg/archive/tar/common.go\nFile src/pkg/archive/tar/common.go (right):\n\nhttp://codereview.appspot.com/5796073/diff/2004/src/pkg/archive/tar/common.go#newcode71\nsrc/pkg/archive/tar/common.go:71: // The filename parameter is used only in the case of symlinks, to call os.Readlink.\nThis seems wrong.  This is a data constructor.\nIt has no business making system calls.\nIf an argument is necessary, it should be the value to use as the symlink.\n\nhttp://codereview.appspot.com/5796073/diff/2004/src/pkg/archive/tar/stat_unix.go\nFile src/pkg/archive/tar/stat_unix.go (right):\n\nhttp://codereview.appspot.com/5796073/diff/2004/src/pkg/archive/tar/stat_unix.go#newcode16\nsrc/pkg/archive/tar/stat_unix.go:16: sysStat = func(fi os.FileInfo, h *Header) error {\nPlease declare a real function and use\n\nfunc init() { \n    sysStat = sysStatUnix\n}\n\nor something like that.",
			"disapproval": false,
			"date": "2012-05-03 21:41:47.415608",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"mike.rosset@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can we not check a symlink into the repository?\nSurely it could be created during the test if necessary.\n\nhttp://codereview.appspot.com/5796073/diff/22003/src/pkg/archive/tar/common.go\nFile src/pkg/archive/tar/common.go (right):\n\nhttp://codereview.appspot.com/5796073/diff/22003/src/pkg/archive/tar/common.go#newcode72\nsrc/pkg/archive/tar/common.go:72: // If fi represents a symlink, the provided symlink target is used.\n// If fi describes a symlink, FileInfoHeader records link as the link target.\n\nhttp://codereview.appspot.com/5796073/diff/22003/src/pkg/archive/tar/common.go#newcode73\nsrc/pkg/archive/tar/common.go:73: func FileInfoHeader(fi os.FileInfo, symlinkTarget string) (*Header, error) {\ns/symlinkTarget/link/",
			"disapproval": false,
			"date": "2012-05-24 20:48:53.306061",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"mike.rosset@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=608f3c08cb96 ***\n\narchive/tar: add FileInfoHeader function\n\nFixes issue 3295\n\nR=adg, rsc, mike.rosset\nCC=golang-dev\nhttp://codereview.appspot.com/5796073",
			"disapproval": false,
			"date": "2012-05-24 21:11:04.081082",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"mike.rosset@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, rsc@golang.org, mike.rosset@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-24 17:51:08.623899",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Russ didn't like the old mostly-data-constructor-but-also-does-Readlink.\r\n Maybe this way is less offensive.  Or at least differently offensive?\r\n\r\n2012/5/24 <bradfitz@golang.org>\r\n\r\n> Hello adg@golang.org, rsc@golang.org, mike.rosset@gmail.com (cc:\r\n> golang-dev@googlegroups.com),\r\n>\r\n> Please take another look.\r\n>\r\n>\r\n> http://codereview.appspot.com/**5796073/<http://codereview.appspot.com/5796073/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-24 17:55:38.099018",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "No.  The argument needs to be an os.FileInfo.\r\n",
			"disapproval": false,
			"date": "2012-05-24 17:58:37.059977",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> So all callers look like:\r\n\r\nNo, just the callers that think symlinks are worth worrying about.  :-)\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-05-24 18:34:19.964770",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, May 24, 2012 at 10:58 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> No.  The argument needs to be an os.FileInfo.\r\n>\r\n\r\nIt does? Okay. Signatures welcome.\r\n\r\nI couldn't come up with anything I liked that dealt with symlinks.\r\n",
			"disapproval": false,
			"date": "2012-05-24 18:06:44.451133",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Symlinks are a special case.  What's wrong with\r\n\r\nFileInfoHeader(fi os.FileInfo, symlink string)\r\n\r\n?\r\n",
			"disapproval": false,
			"date": "2012-05-24 18:16:12.895797",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, May 24, 2012 at 11:15 AM, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> Symlinks are a special case.  What's wrong with\r\n>\r\n> FileInfoHeader(fi os.FileInfo, symlink string)\r\n>\r\n> ?\r\n>\r\n\r\nSo all callers look like:\r\n\r\nfi, err := os.Lstat(filename)\r\n...\r\ntarget, _ := os.Readlink(filename)\r\nh, err := tar.FileInfoHeader(fi, target)\r\n\r\n?\r\n\r\nThat Readlink line before looks a little weird.  But sure, if you're happy\r\nwith that.\r\n",
			"disapproval": false,
			"date": "2012-05-24 18:25:14.680415",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"mike.rosset@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, rsc@golang.org, mike.rosset@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-24 21:00:03.877964",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Note that I also updated deps_test.go in this CL (after talking to Russ),\r\nas well as api/next.txt.\r\n\r\nWe probably don't need to update api/next.txt aggressively (it's not an\r\nerror if we forget it), but might as well if we remember.  I always do an\r\nall.bash run before submitting anyway, so I just pasted it in once I saw\r\nthe all.bash noise.\r\n\r\nOn Thu, May 24, 2012 at 2:11 PM, <bradfitz@golang.org> wrote:\r\n\r\n> *** Submitted as\r\n> http://code.google.com/p/go/**source/detail?r=608f3c08cb96<http://code.google.com/p/go/source/detail?r=608f3c08cb96>***\r\n>\r\n> archive/tar: add FileInfoHeader function\r\n>\r\n> Fixes issue 3295\r\n>\r\n> R=adg, rsc, mike.rosset\r\n> CC=golang-dev\r\n> http://codereview.appspot.com/**5796073<http://codereview.appspot.com/5796073>\r\n>\r\n>\r\n> http://codereview.appspot.com/**5796073/<http://codereview.appspot.com/5796073/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-24 21:13:21.993249",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"adg@golang.org",
				"rsc@golang.org",
				"mike.rosset@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, rsc@golang.org, mike.rosset@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-24 18:35:49.656475",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n",
			"disapproval": false,
			"date": "2012-05-24 21:03:12.773861",
			"approval": true
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5796073: archive/tar: add FileInfoHeader function",
	"created": "2012-03-12 21:36:47.921078",
	"patchsets": [
		1,
		1001,
		3001,
		6001,
		2004,
		14001,
		17001,
		22003,
		26002,
		28001
	],
	"modified": "2012-05-24 21:26:54.765726",
	"closed": true,
	"issue": 5796073
}