{
	"description": "cmd/gc: disallow switch _ := v.(type)\n\nFixes issue 2827.",
	"cc": [
		"ken@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"ken@google.com",
		"r@google.com",
		"iant@google.com",
		"gri@golang.org"
	],
	"messages": [
		{
			"sender": "ken@google.com",
			"recipients": [
				"rsc@golang.org",
				"ken@google.com",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "lgtm",
			"disapproval": false,
			"date": "2012-02-06 19:01:42.056850",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello ken2 (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-06 17:35:27.665828",
			"approval": false
		},
		{
			"sender": "iant@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Rob 'Commander' Pike <r@google.com> writes:\n\n> Does this need a spec change?\n\nNo.  You are never allowed to write \"_ := ...\", because it is a use of\n:= that defines no new variables.\n\nIan\n",
			"disapproval": false,
			"date": "2012-02-06 20:37:17.008136",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think one could make the argument that the spec does\nnot disallow _ := in a type switch (because the := and .() are\nsyntax, not part of a declaration; you can't s/:// to allow\nthe _ like you can in real declarations) but I chose instead\nto fix 6g to match gccgo's interpretation.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-02-06 20:47:54.978108",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If we feel compelled, we could add a clarifying sentence, but I don't\nthink it's necessary. For one, the type switch language says\nexplicitly:\n\n\"The TypeSwitchGuard may include a short variable declaration.\"\n\nand refers to \"short variable declaration\" for which we have\ncorresponding rules. It seems that this should be enough.\n- gri\n\nOn Mon, Feb 6, 2012 at 12:47 PM, Russ Cox <rsc@golang.org> wrote:\n> I think one could make the argument that the spec does\n> not disallow _ := in a type switch (because the := and .() are\n> syntax, not part of a declaration; you can't s/:// to allow\n> the _ like you can in real declarations) but I chose instead\n> to fix 6g to match gccgo's interpretation.\n>\n> Russ\n",
			"disapproval": false,
			"date": "2012-02-06 21:59:43.010629",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"ken@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b11c43f59dd9 ***\n\ncmd/gc: disallow switch _ := v.(type)\n\nFixes issue 2827.\n\nR=ken2\nCC=golang-dev\nhttp://codereview.appspot.com/5638045",
			"disapproval": false,
			"date": "2012-02-06 17:35:31.412329",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Does this need a spec change?\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-06 20:11:44.140311",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5638045: cmd/gc: disallow switch _ := v.(type)",
	"created": "2012-02-06 17:23:02.814848",
	"patchsets": [
		1,
		2001,
		3
	],
	"modified": "2012-02-06 21:59:43.127682",
	"closed": true,
	"issue": 5638045
}