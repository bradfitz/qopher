{
	"description": "exp/norm: introduced input interface to implement string versions\nof methods.",
	"cc": [
		"r@golang.org",
		"mpvl@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2011-10-01 00:46:44.768285",
			"approval": false
		},
		{
			"sender": "mpvl@google.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "That worked out well.  I thought the struct was needed to avoid another\nmalloc but this was incorrect.\nChanged.\n\nOn Wed, Oct 5, 2011 at 4:57 PM, <r@golang.org> wrote:\n\n>\n> http://codereview.appspot.com/**5166045/diff/10001/src/pkg/**\n> exp/norm/input.go<http://codereview.appspot.com/5166045/diff/10001/src/pkg/exp/norm/input.go>\n> File src/pkg/exp/norm/input.go (right):\n>\n> http://codereview.appspot.com/**5166045/diff/10001/src/pkg/**\n> exp/norm/input.go#newcode21<http://codereview.appspot.com/5166045/diff/10001/src/pkg/exp/norm/input.go#newcode21>\n> src/pkg/exp/norm/input.go:21: str string\n> if that change makes the code at the call site too messy (conversions\n> rather than field accesses), push back.\n>\n> http://codereview.appspot.com/**5166045/<http://codereview.appspot.com/5166045/>\n>\n\n\n\n-- \nTrying this for a while: http://go/OnlyCheckEmailTwiceADay.\nMarcel van Lohuizen -- Google Switzerland GmbH -- Identifikationsnummer:\nCH-020.4.028.116-1\n",
			"disapproval": false,
			"date": "2011-10-05 17:42:32.006158",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-04 21:26:13.217564",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "looks good but remove the unnecessary struct wrapper\n\nhttp://codereview.appspot.com/5166045/diff/10001/src/pkg/exp/norm/input.go\nFile src/pkg/exp/norm/input.go (right):\n\nhttp://codereview.appspot.com/5166045/diff/10001/src/pkg/exp/norm/input.go#newcode21\nsrc/pkg/exp/norm/input.go:21: str string\nthis can just be\ntype inputString string\nand then instead of\ninputString{\"x\"}\nwrite\ninputString(\"x\")\n\nhttp://codereview.appspot.com/5166045/diff/10001/src/pkg/exp/norm/input.go#newcode69\nsrc/pkg/exp/norm/input.go:69: str []byte\ntype inputBytes []byte",
			"disapproval": false,
			"date": "2011-10-05 16:56:58.948619",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5166045/diff/10001/src/pkg/exp/norm/input.go\nFile src/pkg/exp/norm/input.go (right):\n\nhttp://codereview.appspot.com/5166045/diff/10001/src/pkg/exp/norm/input.go#newcode21\nsrc/pkg/exp/norm/input.go:21: str string\nif that change makes the code at the call site too messy (conversions rather than field accesses), push back.",
			"disapproval": false,
			"date": "2011-10-05 16:57:55.940454",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-05 17:40:25.323484",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2011-10-05 17:42:22.117489",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"mpvl@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2b7b2480db5a ***\n\nexp/norm: introduced input interface to implement string versions\nof methods.\n\nR=r, mpvl\nCC=golang-dev\nhttp://codereview.appspot.com/5166045",
			"disapproval": false,
			"date": "2011-10-05 17:44:16.497897",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 5166045: exp/norm: introduced input interface to implement strin...",
	"created": "2011-10-01 00:46:13.815081",
	"patchsets": [
		1,
		2001,
		5001,
		10001,
		16001,
		3009,
		22001
	],
	"modified": "2011-10-05 17:44:17.552429",
	"closed": true,
	"issue": 5166045
}