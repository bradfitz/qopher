{
	"description": "go.tools/cmd/vet: update to new go/types package\nNow that it's in the same repository as the go/types package we can delete\nthe mechanism to build it without type checking.\n\nAdd a make rule to install it where the go tool can find it.\nWhy doesn't \"go install\" take a -o flag?",
	"cc": [
		"gobot@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"gri@golang.org"
	],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-05-18 04:44:37.934430",
			"approval": false
		},
		{
			"sender": "gobot@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "R=gri (assigned by r)",
			"disapproval": false,
			"date": "2013-05-18 16:53:58.913350",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"gobot@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/9526043/diff/1/cmd/vet/types.go\nFile cmd/vet/types.go (right):\n\nhttps://codereview.appspot.com/9526043/diff/1/cmd/vet/types.go#newcode43\ncmd/vet/types.go:43: if actual != nil && actual.Underlying() != nil {\nUnderlying should never be nil if actual != nil. That would be a bug in go/types. Besides, you are checking on the next line again, so this can just be:\n\nif actual != nil {\n  actual = actual.Underlying()\n}",
			"disapproval": false,
			"date": "2013-05-18 17:31:55.591960",
			"approval": true
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=e3a9e5e0b4d3&repo=tools ***\n\ngo.tools/cmd/vet: update to new go/types package\nNow that it's in the same repository as the go/types package we can delete\nthe mechanism to build it without type checking.\n\nAdd a make rule to install it where the go tool can find it.\nWhy doesn't \"go install\" take a -o flag?\n\nR=gri\nCC=gobot, golang-dev\nhttps://codereview.appspot.com/9526043\n\nhttps://codereview.appspot.com/9526043/diff/1/cmd/vet/types.go\nFile cmd/vet/types.go (right):\n\nhttps://codereview.appspot.com/9526043/diff/1/cmd/vet/types.go#newcode43\ncmd/vet/types.go:43: if actual != nil && actual.Underlying() != nil {\nit is undocumented that if actual is not a named type, Underlying == actual, which is what i think you are saying here. is that true?",
			"disapproval": false,
			"date": "2013-05-20 19:20:10.364180",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"r@golang.org",
				"gri@golang.org",
				"gobot@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9526043/diff/1/cmd/vet/types.go\nFile cmd/vet/types.go (right):\n\nhttps://codereview.appspot.com/9526043/diff/1/cmd/vet/types.go#newcode43\ncmd/vet/types.go:43: if actual != nil && actual.Underlying() != nil {\nOn 2013/05/20 19:20:10, r wrote:\n> it is undocumented that if actual is not a named type, Underlying == actual,\n> which is what i think you are saying here. is that true?\n\nThat is correct, very much like what the spec says about underlying types.",
			"disapproval": false,
			"date": "2013-05-20 19:55:43.550550",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 9526043: go.tools/cmd/vet: update to new go/types package",
	"created": "2013-05-18 04:44:32.257780",
	"patchsets": [
		1,
		5001
	],
	"modified": "2013-05-20 19:55:43.550550",
	"closed": true,
	"issue": 9526043
}