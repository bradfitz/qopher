{
	"description": "cmd/go: run main package when no files are listed\n\nFixes 5164.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org",
		"adg@golang.org"
	],
	"reviewers": [
		"minux.ma@gmail.com",
		"dave@cheney.net",
		"0xjnml@gmail.com",
		"r@golang.org",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "jonathan@titanous.com",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-03-30 23:30:31.111520",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It's hard for me to convince myself that it's a good idea to ignore files that were explicitly listed on the command line.",
			"disapproval": false,
			"date": "2013-03-31 03:25:29.804670",
			"approval": false
		},
		{
			"sender": "jonathan@titanous.com",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/31 03:25:29, iant wrote:\n> It's hard for me to convince myself that it's a good idea to ignore files that\n> were explicitly listed on the command line.\n\nThe check was originally added to fix this issue: https://code.google.com/p/go/issues/detail?id=4032\n\nAre you suggesting that the fix for 4032 should be reverted instead?",
			"disapproval": false,
			"date": "2013-03-31 13:51:10.658540",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/31 13:51:10, titanous wrote:\n> On 2013/03/31 03:25:29, iant wrote:\n> > It's hard for me to convince myself that it's a good idea to ignore files that\n> > were explicitly listed on the command line.\n> \n> The check was originally added to fix this issue:\n> https://code.google.com/p/go/issues/detail?id=4032\n> \n> Are you suggesting that the fix for 4032 should be reverted instead?\n\nI'm not sure I understand exactly what the fix changed.\n\nIf I write \"go run a.go b.go\" I don't see why it should ignore any of the files I explicitly listed.\n\nI guess I am not sure that 5164 is actually a bug.",
			"disapproval": false,
			"date": "2013-03-31 22:35:38.049970",
			"approval": false
		},
		{
			"sender": "jonathan@titanous.com",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/31 22:35:38, iant wrote:\n> On 2013/03/31 13:51:10, titanous wrote:\n> > On 2013/03/31 03:25:29, iant wrote:\n> > > It's hard for me to convince myself that it's a good idea to ignore files\n> that\n> > > were explicitly listed on the command line.\n> > \n> > The check was originally added to fix this issue:\n> > https://code.google.com/p/go/issues/detail?id=4032\n> > \n> > Are you suggesting that the fix for 4032 should be reverted instead?\n> \n> I'm not sure I understand exactly what the fix changed.\n> \n> If I write \"go run a.go b.go\" I don't see why it should ignore any of the files\n> I explicitly listed.\n> \n> I guess I am not sure that 5164 is actually a bug.\n\nBefore 58e1987657d6, `go run` silently ignored *_test.go files, allowing `go run *.go` to work when there are *_test.go files in the current directory listed by the *.go  glob. This also caused 4032, because of the silence ignorance.\n\nThe fix for 4032 causes `go run` to error if any *_test.go files are listed, causing `go run *.go` to fail.\n\nI and others on a golang-nuts thread[1] feel like this is a regression since Go 1.0.3, as `go run *.go` previously could be used as a shortcut for `go build; ./app` and now causes an error.\n\n[1] https://groups.google.com/forum/#!topic/golang-nuts/EOi0VAQNA4c",
			"disapproval": false,
			"date": "2013-03-31 22:46:44.554010",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/31 22:46:44, titanous wrote:\n> On 2013/03/31 22:35:38, iant wrote:\n> > On 2013/03/31 13:51:10, titanous wrote:\n> > > On 2013/03/31 03:25:29, iant wrote:\n> > > > It's hard for me to convince myself that it's a good idea to ignore files\n> > that\n> > > > were explicitly listed on the command line.\n> > > \n> > > The check was originally added to fix this issue:\n> > > https://code.google.com/p/go/issues/detail?id=4032\n> > > \n> > > Are you suggesting that the fix for 4032 should be reverted instead?\n> > \n> > I'm not sure I understand exactly what the fix changed.\n> > \n> > If I write \"go run a.go b.go\" I don't see why it should ignore any of the\n> files\n> > I explicitly listed.\n> > \n> > I guess I am not sure that 5164 is actually a bug.\n> \n> Before 58e1987657d6, `go run` silently ignored *_test.go files, allowing `go run\n> *.go` to work when there are *_test.go files in the current directory listed by\n> the *.go  glob. This also caused 4032, because of the silence ignorance.\n> \n> The fix for 4032 causes `go run` to error if any *_test.go files are listed,\n> causing `go run *.go` to fail.\n> \n> I and others on a golang-nuts thread[1] feel like this is a regression since Go\n> 1.0.3, as `go run *.go` previously could be used as a shortcut for `go build;\n> ./app` and now causes an error.\n> \n> [1] https://groups.google.com/forum/#%21topic/golang-nuts/EOi0VAQNA4c\n\n\nI would like to suggest that we make \"go run\" (with no arguments) pick up all the non _test*.go files, build them, and run them.\n\nWould that be a sufficient fix for this problem?",
			"disapproval": false,
			"date": "2013-03-31 22:51:02.856480",
			"approval": false
		},
		{
			"sender": "jonathan@titanous.com",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/03/31 22:51:02, iant wrote:\n> On 2013/03/31 22:46:44, titanous wrote:\n> > On 2013/03/31 22:35:38, iant wrote:\n> > > On 2013/03/31 13:51:10, titanous wrote:\n> > > > On 2013/03/31 03:25:29, iant wrote:\n> > > > > It's hard for me to convince myself that it's a good idea to ignore\n> files\n> > > that\n> > > > > were explicitly listed on the command line.\n> > > > \n> > > > The check was originally added to fix this issue:\n> > > > https://code.google.com/p/go/issues/detail?id=4032\n> > > > \n> > > > Are you suggesting that the fix for 4032 should be reverted instead?\n> > > \n> > > I'm not sure I understand exactly what the fix changed.\n> > > \n> > > If I write \"go run a.go b.go\" I don't see why it should ignore any of the\n> > files\n> > > I explicitly listed.\n> > > \n> > > I guess I am not sure that 5164 is actually a bug.\n> > \n> > Before 58e1987657d6, `go run` silently ignored *_test.go files, allowing `go\n> run\n> > *.go` to work when there are *_test.go files in the current directory listed\n> by\n> > the *.go  glob. This also caused 4032, because of the silence ignorance.\n> > \n> > The fix for 4032 causes `go run` to error if any *_test.go files are listed,\n> > causing `go run *.go` to fail.\n> > \n> > I and others on a golang-nuts thread[1] feel like this is a regression since\n> Go\n> > 1.0.3, as `go run *.go` previously could be used as a shortcut for `go build;\n> > ./app` and now causes an error.\n> > \n> > [1] https://groups.google.com/forum/#%2521topic/golang-nuts/EOi0VAQNA4c\n> \n> \n> I would like to suggest that we make \"go run\" (with no arguments) pick up all\n> the non _test*.go files, build them, and run them.\n> \n> Would that be a sufficient fix for this problem?\n\nYes, that would solve the problem for me.",
			"disapproval": false,
			"date": "2013-03-31 22:51:41.429940",
			"approval": false
		},
		{
			"sender": "jonathan@titanous.com",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I've added a naive implementation of the described functionality. Please let me know if there's a better approach that I don't know about.",
			"disapproval": false,
			"date": "2013-03-31 23:14:36.940390",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This needs a corresponding documentation change. The code looks ok to me.",
			"disapproval": false,
			"date": "2013-04-03 22:06:25.516430",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8119049/diff/17001/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/8119049/diff/17001/doc/go1.1.html#newcode400\ndoc/go1.1.html:400: an error is now returned if they are listed.\nIs the second sentence a change to the status quo? Doesn't seem so to me.\n\nhttps://codereview.appspot.com/8119049/diff/17001/src/cmd/go/run.go\nFile src/cmd/go/run.go (right):\n\nhttps://codereview.appspot.com/8119049/diff/17001/src/cmd/go/run.go#newcode20\nsrc/cmd/go/run.go:20: If no files are listed, all non-test Go source files in the current working\nIf no files are named, it compiles and runs all non-test Go source files.",
			"disapproval": false,
			"date": "2013-04-03 22:54:55.896530",
			"approval": false
		},
		{
			"sender": "jonathan@titanous.com",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/04/03 22:54:55, adg wrote:\n> https://codereview.appspot.com/8119049/diff/17001/doc/go1.1.html\n> File doc/go1.1.html (right):\n> \n> https://codereview.appspot.com/8119049/diff/17001/doc/go1.1.html#newcode400\n> doc/go1.1.html:400: an error is now returned if they are listed.\n> Is the second sentence a change to the status quo? Doesn't seem so to me.\n\nYes, see comment #5.\n\n> \n> https://codereview.appspot.com/8119049/diff/17001/src/cmd/go/run.go\n> File src/cmd/go/run.go (right):\n> \n> https://codereview.appspot.com/8119049/diff/17001/src/cmd/go/run.go#newcode20\n> src/cmd/go/run.go:20: If no files are listed, all non-test Go source files in\n> the current working\n> If no files are named, it compiles and runs all non-test Go source files.\n\nDone.",
			"disapproval": false,
			"date": "2013-04-03 22:58:14.736300",
			"approval": false
		},
		{
			"sender": "jonathan@titanous.com",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/04/03 22:06:25, adg wrote:\n> This needs a corresponding documentation change. The code looks ok to me.\n\nDone.",
			"disapproval": false,
			"date": "2013-04-03 22:42:56.034710",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8119049/diff/15002/doc/go1.1.html\nFile doc/go1.1.html (right):\n\nhttps://codereview.appspot.com/8119049/diff/15002/doc/go1.1.html#newcode399\ndoc/go1.1.html:399: directory if no file arguments are listed. Because test files are not run,\nAlso, the <code>go run</code> command now returns an error if test files are provided on the command line. In this sense, \"<code>go run</code>\"  replaces \"<code>go run *.go</code>\".",
			"disapproval": false,
			"date": "2013-04-04 00:47:02.287420",
			"approval": false
		},
		{
			"sender": "jonathan@titanous.com",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/04/04 00:47:02, adg wrote:\n> https://codereview.appspot.com/8119049/diff/15002/doc/go1.1.html\n> File doc/go1.1.html (right):\n> \n> https://codereview.appspot.com/8119049/diff/15002/doc/go1.1.html#newcode399\n> doc/go1.1.html:399: directory if no file arguments are listed. Because test\n> files are not run,\n> Also, the <code>go run</code> command now returns an error if test files are\n> provided on the command line. In this sense, \"<code>go run</code>\"  replaces\n> \"<code>go run *.go</code>\".\n\nDone.",
			"disapproval": false,
			"date": "2013-04-04 00:58:48.675330",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks!",
			"disapproval": false,
			"date": "2013-04-04 01:03:48.244190",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jonathan@titanous.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=2fc72d55ed99 ***\n\ncmd/go: run main package when no files are listed\n\nFixes 5164.\n\nR=golang-dev, iant, adg\nCC=golang-dev\nhttps://codereview.appspot.com/8119049\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2013-04-04 01:04:42.732480",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "i'm a little worried by this change.\r\ni think we shouldn't enhance \"go run\" beyond providing just a way to\r\nrun some one-off throwaway scripts.\r\ni think people are already abusing the command.\r\n",
			"disapproval": false,
			"date": "2013-04-04 07:14:44.756010",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I second this concern.\r\n\r\nOn Thu, Apr 4, 2013 at 6:14 PM, minux <minux.ma@gmail.com> wrote:\r\n> i'm a little worried by this change.\r\n> i think we shouldn't enhance \"go run\" beyond providing just a way to\r\n> run some one-off throwaway scripts.\r\n> i think people are already abusing the command.\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-04 07:15:12.565900",
			"approval": false
		},
		{
			"sender": "0xjnml@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 4, 2013 at 9:15 AM, Dave Cheney <dave@cheney.net> wrote:\r\n> I second this concern.\r\n\r\nMe too.\r\n\r\n(I would go as far as removing go run at all. Perhaps in one CL with\r\ndisabling relative imports support. Okay, I know I'm only\r\ndaydreaming.)\r\n\r\n-j\r\n",
			"disapproval": false,
			"date": "2013-04-04 07:18:03.645500",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 4, 2013 at 12:14 AM, minux <minux.ma@gmail.com> wrote:\r\n> i'm a little worried by this change.\r\n> i think we shouldn't enhance \"go run\" beyond providing just a way to\r\n> run some one-off throwaway scripts.\r\n> i think people are already abusing the command.\r\n\r\nAs long as we are keeping \"go run\" this seems like the right approach\r\nto me.  It corresponds to \"go build\".\r\n\r\nI'm also OK with removing \"go run\".\r\n\r\nIan\r\n",
			"disapproval": false,
			"date": "2013-04-04 17:41:27.579290",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm fine with \"go run\", and believe that if it's there, it should\r\nbehave like \"go build\", which this CL establishes. It's not really an\r\nenhancement, more a simplification by making it consistent.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-04-04 18:13:27.084630",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I doesn't quite behave like \"go build\", as I don't think it will build c or\r\nassembly files.\r\n\r\n\r\nOn 5 April 2013 05:13, Rob Pike <r@golang.org> wrote:\r\n\r\n> I'm fine with \"go run\", and believe that if it's there, it should\r\n> behave like \"go build\", which this CL establishes. It's not really an\r\n> enhancement, more a simplification by making it consistent.\r\n>\r\n> -rob\r\n>\r\n",
			"disapproval": false,
			"date": "2013-04-04 20:55:58.631960",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"jonathan@titanous.com",
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"0xjnml@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I would like to revert this CL for Go 1.1.\n\nThis makes the 'go run' command different from every other command.\nFor example, 'go test' does not mean 'go test *.go'.\n\nIf we were going to handle the no arguments case in 'go run', I would hope that it would scan the current directory to find a package just like 'go build' or 'go test' would, and then it would require that package to be 'package main', and then it would run that package. This would make it match 'go test' and 'go build' and 'go install' and so on. It would mean that if you are working on a command in a directory that is 'go install'able, then 'go run' will run the binary for you. The current CL does not accomplish that when build constraints or file name constraints are involved.\n\nFor example, if I am working on a program like:\n\n$ ls\nmain.go\nmain_386.s\nmain_arm.s\nmain_amd64.s\n$ \n\nThen 'go run' will fail here because the .s files are ignored.\n\nIf instead I am working on a program like:\n\n$ ls\nmain.go\nmain_386.go\nmain_arm.go\nmain_amd64.go\n$ \n\nthen 'go run' will fail because too many files are included. \n\nI would like to see this command implemented so that it is compatible with the other go subcommands. Since it is too late to do that for Go 1.1, I would like to see this CL reverted, to preserve the option to do it better later.",
			"disapproval": false,
			"date": "2013-04-29 18:35:14.202340",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "As you can see from the comments, this one took a while to sort out,\r\nand the decision wasn't filled with conviction. Happy to roll it back\r\nfor now. If you prepare the CL, I'll approve it. If you'd prefer I\r\nprepare it, just say so.\r\n\r\n-rob\r\n",
			"disapproval": false,
			"date": "2013-04-29 18:38:51.184670",
			"approval": false
		}
	],
	"owner_email": "jonathan@titanous.com",
	"private": false,
	"base_url": "",
	"owner": "titanous",
	"subject": "code review 8119049:     cmd/go: allow run if non-test files are listed",
	"created": "2013-03-30 23:30:27.447570",
	"patchsets": [
		1,
		9001,
		14001,
		17001,
		20002,
		15002,
		26002
	],
	"modified": "2013-04-29 18:35:14.604910",
	"closed": true,
	"issue": 8119049
}