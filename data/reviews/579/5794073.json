{
	"description": "os: IsNotExist() should also consider ERROR_PATH_NOT_FOUND on Windows\n    Also update documentation about IsExist() and IsNotExist(), they are not\n    about files only.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL, changed the description to:\nos: IsNotExist() should also consider ENOTDIR on Windows\n\nIsExist() is not affected by this CL.\n\nRationale for this CL:\nchdir(\"C:\\notexists\\notexists2\") return the error as ENOTDIR, but the same error\non Unix is ENOENT;\nwe already include both file and dir errors in IsExist(), so I think we should also\nmake IsNotExist() matching behavior in this regard.\n\nThis CL also updates the documentation about IsExist() and IsNotExist(), because\nthey are not only about files.",
			"disapproval": false,
			"date": "2012-03-13 09:00:04.050375",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5794073/diff/5/src/pkg/os/error_windows.go\nFile src/pkg/os/error_windows.go (right):\n\nhttp://codereview.appspot.com/5794073/diff/5/src/pkg/os/error_windows.go#newcode13\nsrc/pkg/os/error_windows.go:13: return err == syscall.EEXIST || err == syscall.ERROR_ALREADY_EXISTS ||\nNothing in package syscall for Windows generates EEXIST; please remove.\n\nhttp://codereview.appspot.com/5794073/diff/5/src/pkg/os/error_windows.go#newcode23\nsrc/pkg/os/error_windows.go:23: return err == syscall.ENOENT || err == syscall.ENOTDIR || err == ErrNotExist\ns/ENOENT/ERROR_FILE_NOT_FOUND/\ns/ENOTDIR/ERROR_PATH_NOT_FOUND/\n\nThen you don't need the comment.\nIt's unfortunate that we didn't remove those aliases a while back\nbut it is too late now.\n\nhttp://codereview.appspot.com/5794073/diff/5/src/pkg/os/error_windows.go#newcode30\nsrc/pkg/os/error_windows.go:30: return err == syscall.EACCES || err == syscall.EPERM || err == ErrPermission\nNothing on Windows generates EACCES or EPERM; please remove.",
			"disapproval": false,
			"date": "2012-03-13 13:24:38.506811",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-03-13 08:53:25.908039",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.\n\nOn Tue, Mar 13, 2012 at 9:24 PM, <rsc@golang.org> wrote:\n\n>\n> http://codereview.appspot.com/**5794073/diff/5/src/pkg/os/**\n> error_windows.go<http://codereview.appspot.com/5794073/diff/5/src/pkg/os/error_windows.go>\n> File src/pkg/os/error_windows.go (right):\n>\n> http://codereview.appspot.com/**5794073/diff/5/src/pkg/os/**\n> error_windows.go#newcode13<http://codereview.appspot.com/5794073/diff/5/src/pkg/os/error_windows.go#newcode13>\n> src/pkg/os/error_windows.go:**13: return err == syscall.EEXIST || err ==\n> syscall.ERROR_ALREADY_EXISTS ||\n> Nothing in package syscall for Windows generates EEXIST; please remove.\n>\nDone.\n\n>\n> http://codereview.appspot.com/**5794073/diff/5/src/pkg/os/**\n> error_windows.go#newcode23<http://codereview.appspot.com/5794073/diff/5/src/pkg/os/error_windows.go#newcode23>\n> src/pkg/os/error_windows.go:**23: return err == syscall.ENOENT || err ==\n> syscall.ENOTDIR || err == ErrNotExist\n> s/ENOENT/ERROR_FILE_NOT_FOUND/\n> s/ENOTDIR/ERROR_PATH_NOT_**FOUND/\n>\n> Then you don't need the comment.\n> It's unfortunate that we didn't remove those aliases a while back\n> but it is too late now.\n>\nDone. Should I add comment about these inaccurate aliases in syscall?\n\n>\n> http://codereview.appspot.com/**5794073/diff/5/src/pkg/os/**\n> error_windows.go#newcode30<http://codereview.appspot.com/5794073/diff/5/src/pkg/os/error_windows.go#newcode30>\n> src/pkg/os/error_windows.go:**30: return err == syscall.EACCES || err ==\n> syscall.EPERM || err == ErrPermission\n> Nothing on Windows generates EACCES or EPERM; please remove.\n>\nDone.\n",
			"disapproval": false,
			"date": "2012-03-13 13:42:11.702413",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThis is fine for now.  I don't think we need an explicit comment in syscall.",
			"disapproval": false,
			"date": "2012-03-14 15:44:46.811053",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=2fedbe9d1cc7 ***\n\nos: IsNotExist() should also consider ERROR_PATH_NOT_FOUND on Windows\n    Also update documentation about IsExist() and IsNotExist(), they are not\n    about files only.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5794073",
			"disapproval": false,
			"date": "2012-03-14 15:54:49.590676",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5794073: os: IsExist() and IsNotExist() should also consider ENO...",
	"created": "2012-03-13 06:34:06.380735",
	"patchsets": [
		1,
		1002,
		1003,
		1004,
		1005,
		2012,
		5,
		1006,
		8001
	],
	"modified": "2012-03-14 15:54:52.964352",
	"closed": true,
	"issue": 5794073
}