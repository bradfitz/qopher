{
	"description": "net/http: ensure triv.go compiles and runs",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"dsymonds@golang.org",
		"dave@cheney.net",
		"r@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Could this possibly converted an example_test ?\n\nOn 13/03/2012, at 13:48, David Symonds <dsymonds@golang.org> wrote:\n\n> Can we add a test or something to make sure it stays compiling?\n",
			"disapproval": false,
			"date": "2012-03-13 02:57:59.317110",
			"approval": false
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "An example only needs to compile. It won't be run if there is no expected output. I agree we should do something to guarantee it continues to compile, although ironically it is much less likely to rot given Go 1.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-03-13 03:17:02.770174",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Mon, Mar 12, 2012 at 9:06 PM, <robert.hencke@gmail.com> wrote:\n\n> On 2012/03/13 04:03:17, bradfitz wrote:\n>\n>> Seems arbitrary there, and it's not also in run.bat.\n>>\n>\n>  I'd just submit the fix, without the run.bash part.\n>>\n>\n>  Like Rob said, Go 1.  It's all stable now!\n>>\n>\n> Thanks for the review - done.  PTAL.\n>\n> http://codereview.appspot.com/**5795069/<http://codereview.appspot.com/5795069/>\n>\n",
			"disapproval": false,
			"date": "2012-03-13 04:13:36.353214",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Actually, NOT LGTM.  I just looked at what this program is actually trying\nto do and it's very ancient.\n\nCan you update the DateServer to use os/exec and Output instead?  Something\nlike:\n\n// exec a program, redirecting output\nfunc DateServer(rw http.ResponseWriter, req *http.Request) {\n\nrw.Header().Set(\"Content-Type\", \"text/plain; charset=utf-8\")\nout, err := exec.Command(\"date\").Output()\nif err != nil {\n   http.Error(...)\n   return\n}\nfmt.Fprintf(rw, \"date: %s\", out)\n}\n\n\n\nOn Mon, Mar 12, 2012 at 9:13 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\n\n> LGTM\n>\n>\n> On Mon, Mar 12, 2012 at 9:06 PM, <robert.hencke@gmail.com> wrote:\n>\n>> On 2012/03/13 04:03:17, bradfitz wrote:\n>>\n>>> Seems arbitrary there, and it's not also in run.bat.\n>>>\n>>\n>>  I'd just submit the fix, without the run.bash part.\n>>>\n>>\n>>  Like Rob said, Go 1.  It's all stable now!\n>>>\n>>\n>> Thanks for the review - done.  PTAL.\n>>\n>> http://codereview.appspot.com/**5795069/<http://codereview.appspot.com/5795069/>\n>>\n>\n>\n",
			"disapproval": true,
			"date": "2012-03-13 13:15:30.000028",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nman, this file is always rotting.\n\n\nOn Mon, Mar 12, 2012 at 7:47 PM, <robert.hencke@gmail.com> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> net/http: ensure triv.go compiles and runs\n>\n> Please review this at http://codereview.appspot.com/**5795069/<http://codereview.appspot.com/5795069/>\n>\n> Affected files:\n>  M src/pkg/net/http/triv.go\n>\n>\n> Index: src/pkg/net/http/triv.go\n> ==============================**==============================**=======\n> --- a/src/pkg/net/http/triv.go\n> +++ b/src/pkg/net/http/triv.go\n> @@ -109,19 +109,19 @@\n>                return\n>        }\n>        io.Copy(rw, r)\n> -       wait, err := p.Wait(0)\n> +       wait, err := p.Wait()\n>        if err != nil {\n>                fmt.Fprintf(rw, \"wait: %s\\n\", err)\n>                return\n>        }\n> -       if !wait.Exited() || wait.ExitStatus() != 0 {\n> +       if !wait.Exited() || !wait.Success() {\n>                fmt.Fprintf(rw, \"date: %v\\n\", wait)\n>                return\n>        }\n>  }\n>\n>  func Logger(w http.ResponseWriter, req *http.Request) {\n> -       log.Print(req.URL.Raw)\n> +       log.Print(req.URL)\n>        w.WriteHeader(404)\n>        w.Write([]byte(\"oops\"))\n>  }\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-03-13 02:48:27.397627",
			"approval": true
		},
		{
			"sender": "robert.hencke@gmail.com",
			"recipients": [
				"robert.hencke@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"dave@cheney.net",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/13 04:03:17, bradfitz wrote:\n> Seems arbitrary there, and it's not also in run.bat.\n> \n> I'd just submit the fix, without the run.bash part.\n> \n> Like Rob said, Go 1.  It's all stable now!\n\nThanks for the review - done.  PTAL.",
			"disapproval": false,
			"date": "2012-03-13 04:06:31.529138",
			"approval": false
		},
		{
			"sender": "robert.hencke@gmail.com",
			"recipients": [
				"robert.hencke@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-13 02:47:05.758064",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can we add a test or something to make sure it stays compiling?\n",
			"disapproval": false,
			"date": "2012-03-13 02:48:51.335947",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Seems arbitrary there, and it's not also in run.bat.\n\nI'd just submit the fix, without the run.bash part.\n\nLike Rob said, Go 1.  It's all stable now!\n\n\nOn Mon, Mar 12, 2012 at 9:01 PM, <robert.hencke@gmail.com> wrote:\n\n> Thank you all for the reviews.  PTAL.\n>\n> Compiling it in run.bash seemed the least disruptive, but I'm open to\n> trying again if that's not palatable.\n>\n> http://codereview.appspot.com/**5795069/<http://codereview.appspot.com/5795069/>\n>\n",
			"disapproval": false,
			"date": "2012-03-13 04:03:17.875815",
			"approval": false
		},
		{
			"sender": "robert.hencke@gmail.com",
			"recipients": [
				"robert.hencke@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/13 02:48:51, dsymonds wrote:\n> Can we add a test or something to make sure it stays compiling?\n\nWould adding (roughly) 'go build triv.go' to make.bash be acceptable to you?",
			"disapproval": false,
			"date": "2012-03-13 03:06:33.197088",
			"approval": false
		},
		{
			"sender": "robert.hencke@gmail.com",
			"recipients": [
				"robert.hencke@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/13 02:57:59, dfc wrote:\n> Could this possibly converted an example_test ?\n\nI am not sure how to translate it to example form, since it serves its examples as a web server.  I am open to suggestions, though.",
			"disapproval": false,
			"date": "2012-03-13 03:10:45.979133",
			"approval": false
		},
		{
			"sender": "robert.hencke@gmail.com",
			"recipients": [
				"robert.hencke@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"dave@cheney.net",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you all for the reviews.  PTAL.\n\nCompiling it in run.bash seemed the least disruptive, but I'm open to trying again if that's not palatable.",
			"disapproval": false,
			"date": "2012-03-13 04:01:05.374665",
			"approval": false
		},
		{
			"sender": "robert.hencke@gmail.com",
			"recipients": [
				"robert.hencke@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"dave@cheney.net",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm sorry this took so long.  PTAL.",
			"disapproval": false,
			"date": "2012-03-15 02:47:06.369282",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThere's other wrong/old stuff in here too, but this is much better, thanks.\n\n\nOn Wed, Mar 14, 2012 at 7:47 PM, <robert.hencke@gmail.com> wrote:\n\n> I'm sorry this took so long.  PTAL.\n>\n> http://codereview.appspot.com/**5795069/<http://codereview.appspot.com/5795069/>\n>\n",
			"disapproval": false,
			"date": "2012-03-15 03:25:49.494660",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"robert.hencke@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dsymonds@golang.org",
				"dave@cheney.net",
				"r@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=853314d3dbc4 ***\n\nnet/http: ensure triv.go compiles and runs\n\nR=golang-dev, bradfitz, dsymonds, dave, r\nCC=golang-dev\nhttp://codereview.appspot.com/5795069\n\nCommitter: Brad Fitzpatrick <bradfitz@golang.org>",
			"disapproval": false,
			"date": "2012-03-15 03:26:02.887112",
			"approval": false
		}
	],
	"owner_email": "robert.hencke@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "rh",
	"subject": "code review 5795069: net/http: ensure triv.go compiles and runs",
	"created": "2012-03-13 02:40:17.203433",
	"patchsets": [
		1,
		2001,
		1002,
		4002,
		1004,
		8001
	],
	"modified": "2012-03-16 04:16:50.848715",
	"closed": true,
	"issue": 5795069
}