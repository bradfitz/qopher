{
	"description": "misc/dist: use archive/zip, seek out windows deps, add --upload flag\n\nUse archive/zip instead of 7z on Windows.\n\nLook for all Windows deps before starting build, and include looking\nfor them in their common locations instead of making users update\ntheir PATHs.\n\nAdd an --upload flag that, if set to false, doesn't require credential\nfiles.",
	"cc": [
		"golang-dev@googlegroups.com",
		"alex.brainman@gmail.com",
		"adg@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode97\nmisc/dist/bindist.go:97: zip    bool\ndreg\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode122\nmisc/dist/bindist.go:122: log.Printf(\"Warning: running make.bash on Windows; source builds are intended to be run on Linux or OS X.\")\nPrintf? Print or Println\ns/Linux or OS X/a Unix machine/\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode516\nmisc/dist/bindist.go:516: if strings.HasSuffix(suffix, \".zip\") {\nthis prevents us from adding any zip in the whole tree\n\ncan't we just ignore any top-level file that isn't \"go\" ?",
			"disapproval": false,
			"date": "2012-03-12 03:29:43.529598",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5794046/diff/2003/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5794046/diff/2003/misc/dist/bindist.go#newcode33\nmisc/dist/bindist.go:33: noAuth             = flag.Bool(\"noauth\", false, \"Don't require auth and don't do uploads.\")\n-upload=true please\n\nhttp://codereview.appspot.com/5794046/diff/2003/misc/dist/bindist.go#newcode71\nmisc/dist/bindist.go:71: } else if targ == \"sourcezip\" {\nlet's just pick one and stick with it.\ni'm happy to use a zip instead of a tarball.\nlet's just make this one 'source'\n\nhttp://codereview.appspot.com/5794046/diff/2003/misc/dist/bindist.go#newcode171\nmisc/dist/bindist.go:171: case \"linux\", \"freebsd\", \"\":\njust make case \"\": separate and remove the zip field in Build\n\nhttp://codereview.appspot.com/5794046/diff/2003/misc/dist/bindist.go#newcode505\nmisc/dist/bindist.go:505: if strings.HasPrefix(suffix, \"/\") {\nuse filepath.IsAbs instead\n\nhttp://codereview.appspot.com/5794046/diff/2003/misc/dist/bindist.go#newcode508\nmisc/dist/bindist.go:508: log.Printf(\"adding %q\", suffix)\nthis tool doesn't print anything by default, and i'd prefer to keep it that way\n\nif you want to introduce verbose logging add a -v flag and put logs where appropriate.\n\nyou shouldn't need to though",
			"disapproval": false,
			"date": "2012-03-12 02:25:08.305915",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-12 03:04:51.064991",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5794046/diff/1008/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5794046/diff/1008/misc/dist/bindist.go#newcode527\nmisc/dist/bindist.go:527: fh, _ := zip.FileInfoHeader(fi)\nno error check? why not?\n\nhttp://codereview.appspot.com/5794046/diff/1008/misc/dist/bindist.go#newcode540\nmisc/dist/bindist.go:540: if err != nil {\nreturn err",
			"disapproval": false,
			"date": "2012-03-12 03:52:32.114190",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nPlease, also remove 7zip from list of dependencies in misc/dist/windows/README.txt.\n\nThank you.\n\nAlex\n\nhttp://codereview.appspot.com/5794046/diff/2003/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5794046/diff/2003/misc/dist/bindist.go#newcode33\nmisc/dist/bindist.go:33: noAuth             = flag.Bool(\"noauth\", false, \"Don't require auth and don't do uploads.\")\nI would change the program, so it only reads credentials if it needs them.\n\nhttp://codereview.appspot.com/5794046/diff/2003/misc/dist/bindist.go#newcode505\nmisc/dist/bindist.go:505: if strings.HasPrefix(suffix, \"/\") {\nUse path/filepath.Separator instead.",
			"disapproval": false,
			"date": "2012-03-10 08:49:26.680132",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-12 03:49:59.753642",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=4c2fa40128af ***\n\nmisc/dist: use archive/zip, seek out windows deps, add --upload flag\n\nUse archive/zip instead of 7z on Windows.\n\nLook for all Windows deps before starting build, and include looking\nfor them in their common locations instead of making users update\ntheir PATHs.\n\nAdd an --upload flag that, if set to false, doesn't require credential\nfiles.\n\nR=golang-dev, alex.brainman, adg\nCC=golang-dev\nhttp://codereview.appspot.com/5794046",
			"disapproval": false,
			"date": "2012-03-12 04:02:44.519714",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-12 03:55:22.986631",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-09 23:29:20.106190",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-12 03:15:35.028018",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-12 03:22:26.440190",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-12 03:52:31.168910",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-12 03:53:42.358823",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-12 03:12:31.903368",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode97\nmisc/dist/bindist.go:97: zip    bool\nOn 2012/03/12 03:29:43, adg wrote:\n> dreg\n\nDone.\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode122\nmisc/dist/bindist.go:122: log.Printf(\"Warning: running make.bash on Windows; source builds are intended to be run on Linux or OS X.\")\nOn 2012/03/12 03:29:43, adg wrote:\n> Printf? Print or Println\n> s/Linux or OS X/a Unix machine/\n\nDone.\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode516\nmisc/dist/bindist.go:516: if strings.HasSuffix(suffix, \".zip\") {\nOn 2012/03/12 03:29:43, adg wrote:\n> this prevents us from adding any zip in the whole tree\n\nfalse. read code again.\n\n> can't we just ignore any top-level file that isn't \"go\" ?",
			"disapproval": false,
			"date": "2012-03-12 03:32:10.346522",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, alex.brainman@gmail.com, adg@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-03-12 03:44:22.674848",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode509\nmisc/dist/bindist.go:509: suffix := path\ncall this name\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode510\nmisc/dist/bindist.go:510: if strings.HasPrefix(suffix, workdir) {\nthis should always be true, shouldn't it?\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode516\nmisc/dist/bindist.go:516: if strings.HasSuffix(suffix, \".zip\") {\ni'd prefer a test like this at the top of the loop (after the IsDir test)\n\npat := filepath.Join(workdir, \"go/*\")\nif !filepath.Match(pat, name) {\n  continue\n}\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode557\nmisc/dist/bindist.go:557: var wixTool = tool{\"http://wix.sourceforge.net/, version 3.5\",\nthe indentation is all wack\n\ntool{\n  \"url\",\n  []string{\n    \"foo\",\n    \"bar\",\n  },\n}\n\nhttp://codereview.appspot.com/5794046/diff/4003/misc/dist/bindist.go#newcode570\nmisc/dist/bindist.go:570: var windowsDeps = map[string]tool{\nOnly for windows? :-(",
			"disapproval": false,
			"date": "2012-03-12 03:46:15.187860",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5794046: misc/dist: use archive/zip, seek out windows deps, add ...",
	"created": "2012-03-09 23:26:19.816122",
	"patchsets": [
		1,
		2001,
		2003,
		2006,
		1002,
		3,
		1004,
		4003,
		1008,
		6005,
		4007,
		2009,
		4,
		3008
	],
	"modified": "2012-03-12 04:02:46.304846",
	"closed": true,
	"issue": 5794046
}