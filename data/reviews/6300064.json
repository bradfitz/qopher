{
	"description": "otr: add package\n\notr implements the Off-the-Record messaging protocol from\nhttp://www.cypherpunks.ca/otr/. It's often used on IRC and Jabber\nfor private conversations.",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"dchest@gmail.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nI am not sure why the message you sent did not include info about the repo URL. Can you check that your copy of the codereview.py plugin is up-to-date? (Or maybe you sent the review via the web instead of using hg mail?)\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go\nFile otr/otr.go (right):\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode5\notr/otr.go:5: // otr implements the Off The Record protocol as specified in\n// Package otr...\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode57\notr/otr.go:57: // QueryMessage can be sent to a peer to start an OTR conversation.\nYou might want to move this out of the var ( ) just for better doc formatting.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode170\notr/otr.go:170: // Once Process has returned NewKeys once, the following members are\ns/members/fields/\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode255\notr/otr.go:255: // Process handles a message from a peer. It returns a human readable message,\nReceive? to be the opposite of Send?\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode530\notr/otr.go:530: c.rand().Read(c.r[:])\nShould probably use io.ReadFull if you need it to fill, and check the error, maybe wrapped into a helper.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode1326\notr/otr.go:1326: out = append(out, byte(v>>8))\nFWIW, out = append(out, byte(v>>8), byte(v)) works too",
			"disapproval": false,
			"date": "2012-06-13 19:07:49.170520",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dchest@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, rsc@golang.org, dchest@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-06-14 17:36:11.887714",
			"approval": false
		},
		{
			"sender": "dchest@gmail.com",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dchest@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go\nFile otr/otr.go (right):\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode234\notr/otr.go:234: c.rand().Read(buf)\nio.ReadFull, with error checking there?\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode263\notr/otr.go:263: return\nShould there be an error set? processFragment() may return nil if it fails to parse the fragment.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode991\notr/otr.go:991: // Find an empty slot to write into\n.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode1057\notr/otr.go:1057: for i := range slot.theirLastCtr {\nzero(slot.theirLastCtr[:])\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode1161\notr/otr.go:1161: func (pk *PublicKey) Fingerprint() []byte {\nComment what it returns (that is, a non-hex encoded fingerprint)? Maybe it's obvious from the fact that it returns []byte, not string, though.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode1196\notr/otr.go:1196: copy(out[40-len(sBytes):], sBytes)\ns/40/len(out)/ ?\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/smp.go\nFile otr/smp.go (right):\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/smp.go#newcode93\notr/smp.go:93: for i := 0; i < int(numMPIs); i++ {\ncan simplify:\n\nfor i := range mpis {",
			"disapproval": false,
			"date": "2012-06-14 08:10:26.781928",
			"approval": true
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "",
			"disapproval": false,
			"date": "2012-06-07 23:20:33.964901",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jun 13, 2012 at 3:07 PM,  <rsc@golang.org> wrote:\r\n> I am not sure why the message you sent did not include info about the\r\n> repo URL. Can you check that your copy of the codereview.py plugin is\r\n> up-to-date? (Or maybe you sent the review via the web instead of using\r\n> hg mail?)\r\n\r\nI think that I used `hg mail`:\r\n\r\n$ cat .hg/hgrc\r\n[paths]\r\ndefault = https://code.google.com/p/go.crypto\r\n\r\n[extensions]\r\ncodereview = /agl/go/lib/codereview/codereview.py\r\n\r\n[ui]\r\nusername = Adam Langley <agl@golang.org>\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2012-06-14 17:35:43.013122",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dchest@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6300064/diff/2001/otr/otr.go\nFile otr/otr.go (right):\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode5\notr/otr.go:5: // otr implements the Off The Record protocol as specified in\nOn 2012/06/13 19:07:49, rsc wrote:\n> // Package otr...\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode57\notr/otr.go:57: // QueryMessage can be sent to a peer to start an OTR conversation.\nOn 2012/06/13 19:07:49, rsc wrote:\n> You might want to move this out of the var ( ) just for better doc formatting.\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode170\notr/otr.go:170: // Once Process has returned NewKeys once, the following members are\nOn 2012/06/13 19:07:49, rsc wrote:\n> s/members/fields/\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode234\notr/otr.go:234: c.rand().Read(buf)\nOn 2012/06/14 08:10:26, dchest wrote:\n> io.ReadFull, with error checking there?\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode255\notr/otr.go:255: // Process handles a message from a peer. It returns a human readable message,\nOn 2012/06/13 19:07:49, rsc wrote:\n> Receive? to be the opposite of Send?\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode263\notr/otr.go:263: return\nOn 2012/06/14 08:10:26, dchest wrote:\n> Should there be an error set? processFragment() may return nil if it fails to\n> parse the fragment.\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode530\notr/otr.go:530: c.rand().Read(c.r[:])\nOn 2012/06/13 19:07:49, rsc wrote:\n> Should probably use io.ReadFull if you need it to fill, and check the error,\n> maybe wrapped into a helper.\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode991\notr/otr.go:991: // Find an empty slot to write into\nOn 2012/06/14 08:10:26, dchest wrote:\n> .\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode1057\notr/otr.go:1057: for i := range slot.theirLastCtr {\nOn 2012/06/14 08:10:26, dchest wrote:\n> zero(slot.theirLastCtr[:])\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode1161\notr/otr.go:1161: func (pk *PublicKey) Fingerprint() []byte {\nOn 2012/06/14 08:10:26, dchest wrote:\n> Comment what it returns (that is, a non-hex encoded fingerprint)? Maybe it's\n> obvious from the fact that it returns []byte, not string, though.\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode1196\notr/otr.go:1196: copy(out[40-len(sBytes):], sBytes)\nOn 2012/06/14 08:10:26, dchest wrote:\n> s/40/len(out)/ ?\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/otr.go#newcode1326\notr/otr.go:1326: out = append(out, byte(v>>8))\nOn 2012/06/13 19:07:49, rsc wrote:\n> FWIW, out = append(out, byte(v>>8), byte(v)) works too\n\nDone.\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/smp.go\nFile otr/smp.go (right):\n\nhttp://codereview.appspot.com/6300064/diff/2001/otr/smp.go#newcode93\notr/smp.go:93: for i := 0; i < int(numMPIs); i++ {\nOn 2012/06/14 08:10:26, dchest wrote:\n> can simplify:\n> \n> for i := range mpis {\n\nDone.",
			"disapproval": false,
			"date": "2012-06-14 17:35:53.337067",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"dchest@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=6e3ad7e7a476&repo=crypto ***\n\notr: add package\n\notr implements the Off-the-Record messaging protocol from\nhttp://www.cypherpunks.ca/otr/. It's often used on IRC and Jabber\nfor private conversations.\n\nR=golang-dev, rsc, dchest\nCC=golang-dev\nhttp://codereview.appspot.com/6300064",
			"disapproval": false,
			"date": "2012-06-14 17:36:30.699392",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 6300064: otr: add package",
	"created": "2012-06-07 23:19:18.148452",
	"patchsets": [
		1,
		2001,
		7001
	],
	"modified": "2012-06-14 17:36:31.244709",
	"closed": true,
	"issue": 6300064
}