{
	"description": "runtime: cgo support for Linux/ARM\n        Part 2 of CL 5601044 (cgo: Linux/ARM support)",
	"cc": [
		"dave@cheney.net",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM - tested on Pandaboard ARMv7",
			"disapproval": false,
			"date": "2012-04-09 08:09:55.773989",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-04-07 19:28:01.614899",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/09 08:09:55, dfc wrote:\n> LGTM - tested on Pandaboard ARMv7\n\nLooks good on ARMv5 as well",
			"disapproval": false,
			"date": "2012-04-09 10:31:45.827731",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I found the TLS stuff I guess.  That's too much assembly for today; will try to read it again tomorrow.\n\nI'm very glad you're doing this and not me.  :-)\nThank you.",
			"disapproval": false,
			"date": "2012-04-10 20:25:06.554610",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Pretty good, just some confusion on my part.\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/asm_arm.s\nFile src/pkg/runtime/asm_arm.s (right):\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/asm_arm.s#newcode280\nsrc/pkg/runtime/asm_arm.s:280: BIC\t$0x7, R13\t// alignment for gcc ABI\nIt hardly matters but you might want to look at the disassembly in gdb or 5l -a.  I think AND $~0x7 assembles cheaper than BIC $0x7 due to the choices for constants on ARM, but I am not 100% sure.\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/asm_arm.s#newcode301\nsrc/pkg/runtime/asm_arm.s:301: SUB \t$4, R13 // XXX: how to use \"str r4, [sp, -4]!\"?\nI believe that is MOVW.P R4, -4(R13)\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/cgo/gcc_arm.S\nFile src/pkg/runtime/cgo/gcc_arm.S (right):\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/cgo/gcc_arm.S#newcode28\nsrc/pkg/runtime/cgo/gcc_arm.S:28: mov lr, pc\nWhat does this do?  My guess would be that it jumps to lr, but I don't know what lr might have in it right now, and I especially don't know how we get to the next instruction.\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/cgo/gcc_arm.S#newcode43\nsrc/pkg/runtime/cgo/gcc_arm.S:43: push {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, ip, lr}\nWhy are more registers saved here than above? And what happened to r3?",
			"disapproval": false,
			"date": "2012-04-25 02:25:19.959456",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/asm_arm.s\nFile src/pkg/runtime/asm_arm.s (right):\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/asm_arm.s#newcode280\nsrc/pkg/runtime/asm_arm.s:280: BIC\t$0x7, R13\t// alignment for gcc ABI\nOn 2012/04/25 02:25:20, rsc wrote:\n> It hardly matters but you might want to look at the disassembly in gdb or 5l -a.\n>  I think AND $~0x7 assembles cheaper than BIC $0x7 due to the choices for\n> constants on ARM, but I am not 100% sure.\nI've checked the output of objdump, and \"BIC $0x7, R13\" is encoded 0xe3cdd007.\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/asm_arm.s#newcode301\nsrc/pkg/runtime/asm_arm.s:301: SUB \t$4, R13 // XXX: how to use \"str r4, [sp, -4]!\"?\nOn 2012/04/25 02:25:20, rsc wrote:\n> I believe that is MOVW.P R4, -4(R13)\nthat will be \"str     r4, [sp], #-4\" as confirmed by objdump.\nAfter some experiments, I finally found out that \"str r4, [sp, #-4]!\"\nshould be \"MOVW.W R4, -4(SP)\".\n\nFor the record, these suffixes are defined in ARM instruction\nencoding.\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/cgo/gcc_arm.S\nFile src/pkg/runtime/cgo/gcc_arm.S (right):\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/cgo/gcc_arm.S#newcode28\nsrc/pkg/runtime/cgo/gcc_arm.S:28: mov lr, pc\nOn 2012/04/25 02:25:20, rsc wrote:\n> What does this do?  My guess would be that it jumps to lr, but I don't know what\n> lr might have in it right now, and I especially don't know how we get to the\n> next instruction.\nGNU as(1) is somewhat confusing that its operand order is reversed for ARM.\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/cgo/gcc_arm.S#newcode43\nsrc/pkg/runtime/cgo/gcc_arm.S:43: push {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, ip, lr}\nOn 2012/04/25 02:25:20, rsc wrote:\n> Why are more registers saved here than above? And what happened to r3?\nwe still have to save callee save registers (r4-r10, r11,  ip, lr)\nand we need to pass two parameter r1, r2 to the procedure,\nalso at 5a procedure entry, the first argument is at 4(R13) not 0(R13),\nso we push r0 for that slot.\nAnother reason for pushing r0 is that cgo_tls_get_gm will clobber\nr0, so we must save r0 somewhere.\n\nAnyway, I've changed the comment to present all the reasoning.",
			"disapproval": false,
			"date": "2012-04-25 07:45:05.706666",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dave@cheney.net, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-25 07:44:29.709434",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?",
			"disapproval": false,
			"date": "2012-05-03 08:34:13.235432",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/asm_arm.s\nFile src/pkg/runtime/asm_arm.s (right):\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/asm_arm.s#newcode301\nsrc/pkg/runtime/asm_arm.s:301: SUB \t$4, R13 // XXX: how to use \"str r4, [sp, -4]!\"?\nOn 2012/04/25 07:45:05, minux wrote:\n> On 2012/04/25 02:25:20, rsc wrote:\n> > I believe that is MOVW.P R4, -4(R13)\n> that will be \"str     r4, [sp], #-4\" as confirmed by objdump.\n> After some experiments, I finally found out that \"str r4, [sp, #-4]!\"\n> should be \"MOVW.W R4, -4(SP)\".\n> \n> For the record, these suffixes are defined in ARM instruction\n> encoding.\n\nDid you want to use MOVW.W R4, -4(SP) here instead of the MOVW+SUB?\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/cgo/gcc_arm.S\nFile src/pkg/runtime/cgo/gcc_arm.S (right):\n\nhttp://codereview.appspot.com/5989057/diff/4001/src/pkg/runtime/cgo/gcc_arm.S#newcode28\nsrc/pkg/runtime/cgo/gcc_arm.S:28: mov lr, pc\nOn 2012/04/25 07:45:05, minux wrote:\n> On 2012/04/25 02:25:20, rsc wrote:\n> > What does this do?  My guess would be that it jumps to lr, but I don't know\n> what\n> > lr might have in it right now, and I especially don't know how we get to the\n> > next instruction.\n> GNU as(1) is somewhat confusing that its operand order is reversed for ARM.\n\nAha!  Thanks.  That makes a lot more sense now.",
			"disapproval": false,
			"date": "2012-05-03 21:56:19.155212",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/05/03 21:56:19, rsc wrote:\n> Did you want to use MOVW.W R4, -4(SP) here instead of the MOVW+SUB?\nYes, I forgot to update the code here.",
			"disapproval": false,
			"date": "2012-05-04 10:08:41.169567",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1a7674b1f1ed ***\n\nruntime: cgo support for Linux/ARM\n        Part 2 of CL 5601044 (cgo: Linux/ARM support)\n\nR=dave, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5989057",
			"disapproval": false,
			"date": "2012-05-04 10:20:45.971113",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 5989057: runtime: cgo support for Linux/ARM",
	"created": "2012-04-07 18:50:32.705999",
	"patchsets": [
		1,
		2001,
		4001,
		10001,
		18001,
		24001
	],
	"modified": "2012-05-04 10:20:54.825681",
	"closed": true,
	"issue": 5989057
}