{
	"description": "misc/dist: require 10.6 or later for OS X .pkgs\n\nThis changes the misc/dist program to generate OS X\npackages using pkgbuild and productbuild.\n\nThe productbuild utility makes it easy to generate\npackages with a custom Distribution file.  This allows\nus to add an installcheck script that presents a\nfriendly message to users who are running on an old\nversion of Mac OS X.\n\nThe change also fixes a few issues with the\npostinstall script:\n\n - In-repo version of the script has been made\n   executable. Installers generated using the new\n   tools couldn't execute it otherwise.\n\n - It now uses -d for checking for the existence\n   of the Xcode specs directory.\n\n - The call to sudo.bash has been dropped since cov\n   and prof aren't bundled with the binary\n   distributions.\n\nFixes issue 3455.\n\nTested on 10.5.8, 10.6.0, 10.6.8 and 10.7.3.",
	"cc": [
		"adg@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Apr 5, 2012 at 4:19 PM,  <krautz@gmail.com> wrote:\n> Reviewers: adg, golang-dev_googlegroups.com,\n>\n> Message:\n> Hello adg@golang.org, golang-dev@googlegroups.com (cc:\n> golang-dev@googlegroups.com),\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go/\n>\n>\n> Description:\n> misc/dist: require 10.6 or later for OS X .pkgs\n>\n> This changes the misc/dist program to generate OS X\n> packages using pkgbuild and productbuild.\n>\n> The productbuild utility makes it easy to generate\n> packages with a custom Distribution file. \u00a0This allows\n> us to add an installcheck script that presents a\n> friendly message to users who are running on an old\n> version of Mac OS X.\n>\n> The change also fixes a few issues with the\n> postinstall script:\n>\n> \u00a0- In-repo version of the script has been made\n> \u00a0 executable. Installers generated using the new\n> \u00a0 tools couldn't execute it otherwise.\n>\n> \u00a0- It now uses -d for checking for the existence\n> \u00a0 of the Xcode specs directory.\n>\n> \u00a0- The call to sudo.bash has been dropped since cov\n> \u00a0 and prof aren't bundled with the binary\n> \u00a0 distributions.\n>\n> Tested on 10.5.8, 10.6.0, 10.6.8 and 10.7.3.\n>\n> Please review this at http://codereview.appspot.com/5987044/\n>\n> Affected files:\n> \u00a0M misc/dist/bindist.go\n> \u00a0A misc/dist/darwin/Distribution\n> \u00a0M misc/dist/darwin/scripts/postinstall\n>\n>\n> Index: misc/dist/bindist.go\n> ===================================================================\n> --- a/misc/dist/bindist.go\n> +++ b/misc/dist/bindist.go\n> @@ -13,7 +13,6 @@\n> \u00a0 \u00a0 \u00a0 \u00a0\"bytes\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"compress/gzip\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"encoding/base64\"\n> - \u00a0 \u00a0 \u00a0 \"errors\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"flag\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"fmt\"\n> \u00a0 \u00a0 \u00a0 \u00a0\"io\"\n> @@ -41,8 +40,7 @@\n> \u00a0)\n>\n> \u00a0const (\n> - \u00a0 \u00a0 \u00a0 packageMaker =\n> \"/Applications/Utilities/PackageMaker.app/Contents/MacOS/PackageMaker\"\n> - \u00a0 \u00a0 \u00a0 uploadURL \u00a0 \u00a0= \"https://go.googlecode.com/files\"\n> + \u00a0 \u00a0 \u00a0 uploadURL = \"https://go.googlecode.com/files\"\n> \u00a0)\n>\n> \u00a0var preBuildCleanFiles = []string{\n> @@ -231,7 +229,7 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return err\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0localDir := filepath.Join(work, \"usr/local\")\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 err = os.MkdirAll(localDir, 0744)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 err = os.MkdirAll(localDir, 0755)\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if err != nil {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return err\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> @@ -240,27 +238,28 @@\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return err\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// build package\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pkginfo, err := createPackageInfo(work)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pkgdest, err := ioutil.TempDir(\"\", \"pkgdest\")\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0if err != nil {\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0return err\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 defer os.Remove(pkginfo)\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pm := packageMaker\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if !exists(pm) {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pm = \"/Developer\" + pm\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if !exists(pm) {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return errors.New(\"couldn't find\n> PackageMaker\")\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 defer os.RemoveAll(pkgdest)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 _, err = b.run(\"\", \"pkgbuild\",\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"--identifier\", \"com.googlecode.go\",\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"--version\", \"1.0\",\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"--scripts\", \"darwin/scripts\",\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"--root\", work,\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 filepath.Join(pkgdest, \"com.googlecode.go.pkg\"))\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0targ := base + \".pkg\"\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 scripts := filepath.Join(work,\n> \"usr/local/go/misc/dist/darwin/scripts\")\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 _, err = b.run(\"\", pm, \"-v\",\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"-r\", work,\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"-o\", targ,\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"--info\", pkginfo,\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"--scripts\", scripts,\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"--title\", \"Go\",\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"--target\", \"10.5\")\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 _, err = b.run(\"\", \"productbuild\",\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"--distribution\", \"darwin/Distribution\",\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"--package-path\", pkgdest,\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 targ)\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if err != nil {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return err\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0targs = append(targs, targ)\n> \u00a0 \u00a0 \u00a0 \u00a0case \"windows\":\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0// Create ZIP file.\n> @@ -806,30 +805,3 @@\n> \u00a0 \u00a0 \u00a0 \u00a0}\n> \u00a0 \u00a0 \u00a0 \u00a0return h, nil\n> \u00a0}\n> -\n> -// createPackageInfo creates a PackageInfo template file for use with\n> PackageMaker.\n> -// The returned filename points to a file in a temporary directory on the\n> filesystem,\n> -// and should be removed after use.\n> -func createPackageInfo(work string) (filename string, err error) {\n> - \u00a0 \u00a0 \u00a0 var size, nfiles int64\n> - \u00a0 \u00a0 \u00a0 err = filepath.Walk(work, func(path string, info os.FileInfo, err\n> error) error {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 nfiles++\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 size += info.Size()\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return nil\n> - \u00a0 \u00a0 \u00a0 })\n> - \u00a0 \u00a0 \u00a0 if err != nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return \"\", err\n> - \u00a0 \u00a0 \u00a0 }\n> - \u00a0 \u00a0 \u00a0 pi, err := ioutil.TempFile(\"\", \"PackageInfo\")\n> - \u00a0 \u00a0 \u00a0 if err != nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return \"\", err\n> - \u00a0 \u00a0 \u00a0 }\n> - \u00a0 \u00a0 \u00a0 defer pi.Close()\n> - \u00a0 \u00a0 \u00a0 _, err = fmt.Fprintf(pi, \"<pkg-info identifier=\\\"com.googlecode.go\\\"\n> version=\\\"1.0\\\" followSymLinks=\\\"true\\\">\\n\"+\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"\\t<payload installKBytes=\\\"%v\\\" numberOfFiles=\\\"%v\\\"/>\\n\"+\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \"</pkg-info>\\n\", size/1024, nfiles)\n> - \u00a0 \u00a0 \u00a0 if err != nil {\n> - \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return \"\", err\n> - \u00a0 \u00a0 \u00a0 }\n> - \u00a0 \u00a0 \u00a0 return pi.Name(), nil\n> -}\n> Index: misc/dist/darwin/Distribution\n> ===================================================================\n> new file mode 100644\n> --- /dev/null\n> +++ b/misc/dist/darwin/Distribution\n> @@ -0,0 +1,25 @@\n> +<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n> +<installer-script minSpecVersion=\"1.000000\">\n> + \u00a0 \u00a0<title>Go</title>\n> + \u00a0 \u00a0<options customize=\"never\" allow-external-scripts=\"no\"/>\n> + \u00a0 \u00a0<domains enable_localSystem=\"true\" />\n> + \u00a0 \u00a0<installation-check script=\"installCheck();\"/>\n> + \u00a0 \u00a0<script>\n> +function installCheck() {\n> + \u00a0 \u00a0if(!(system.compareVersions(system.version.ProductVersion, '10.6.0')\n>>\n>> = 0)) {\n>\n> + \u00a0 \u00a0 \u00a0 \u00a0my.result.title = 'Unable to install';\n> + \u00a0 \u00a0 \u00a0 \u00a0my.result.message = 'Go requires Mac OS X 10.6 or later.';\n> + \u00a0 \u00a0 \u00a0 \u00a0my.result.type = 'Fatal';\n> + \u00a0 \u00a0 \u00a0 \u00a0return false;\n> + \u00a0 \u00a0}\n> + \u00a0 \u00a0return true;\n> +}\n> + \u00a0 \u00a0</script>\n> + \u00a0 \u00a0<choices-outline>\n> + \u00a0 \u00a0 \u00a0 \u00a0<line choice=\"com.googlecode.go.choice\"/>\n> + \u00a0 \u00a0</choices-outline>\n> + \u00a0 \u00a0<choice id=\"com.googlecode.go.choice\" title=\"Go\">\n> + \u00a0 \u00a0 \u00a0 \u00a0<pkg-ref id=\"com.googlecode.go.pkg\"/>\n> + \u00a0 \u00a0</choice>\n> + \u00a0 \u00a0<pkg-ref id=\"com.googlecode.go.pkg\"\n> auth=\"Root\">com.googlecode.go.pkg</pkg-ref>\n> +</installer-script>\n> Index: misc/dist/darwin/scripts/postinstall\n> ===================================================================\n> old mode 100644\n> new mode 100755\n> --- a/misc/dist/darwin/scripts/postinstall\n> +++ b/misc/dist/darwin/scripts/postinstall\n> @@ -9,14 +9,9 @@\n> \u00a0find . -type d -exec chmod ugo+rx \\{\\} \\;\n> \u00a0chmod o-w .\n>\n> -echo \"Fixing debuggers via sudo.bash\"\n> -# setgrp procmod the debuggers (sudo.bash)\n> -cd $GOROOT/src\n> -./sudo.bash\n> -\n> \u00a0echo \"Installing miscellaneous files:\"\n> \u00a0XCODE_MISC_DIR=\"/Library/Application\n> Support/Developer/Shared/Xcode/Specifications/\"\n> -if [ -f $XCODE_MISC_DIR ]; then\n> +if [ -d \"$XCODE_MISC_DIR\" ]; then\n> \u00a0 \u00a0 \u00a0 \u00a0echo \" \u00a0XCode\"\n> \u00a0 \u00a0 \u00a0 \u00a0cp $GOROOT/misc/xcode/* $XCODE_MISC_DIR\n> \u00a0fi\n>\n>\n\nNote:\n\nThis change also modifies the package tools to refer to some of the\nfiles-to-be-embedded from the current checkout (the checkout that\nbindist is being run from) instead of the bindist tool's own checkout.\n\nWithout this change, a rebuild of the installer would still refer to\nan outdated scripts directory, and a non-existant Distribution file.\n",
			"disapproval": false,
			"date": "2012-04-05 14:25:08.786156",
			"approval": false
		},
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-04-05 14:19:39.244025",
			"approval": false
		},
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "ping?",
			"disapproval": false,
			"date": "2012-04-20 18:56:50.169709",
			"approval": false
		},
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/23 17:04:09, adg wrote:\n> http://codereview.appspot.com/5987044/diff/8/misc/dist/bindist.go\n> File misc/dist/bindist.go (right):\n> \n> http://codereview.appspot.com/5987044/diff/8/misc/dist/bindist.go#newcode249\n> misc/dist/bindist.go:249: \"--scripts\", \"darwin/scripts\",\n> This requires that dist be run in $GOROOT/misc/dist, while that wasn't the case\n> before. Can we pull the script from the newly checked-out repository instead? Or\n> even look inside runtime.GOROOT ?\n\nWhat's your preference here?  If we refer to the newly checked-out repo, this new installer process can only build installers from this commit on (because some of the files aren't present in older checkouts.)",
			"disapproval": false,
			"date": "2012-04-23 17:23:14.187789",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"krautz@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5987044/diff/8/misc/dist/bindist.go\nFile misc/dist/bindist.go (right):\n\nhttp://codereview.appspot.com/5987044/diff/8/misc/dist/bindist.go#newcode249\nmisc/dist/bindist.go:249: \"--scripts\", \"darwin/scripts\",\nThis requires that dist be run in $GOROOT/misc/dist, while that wasn't the case before. Can we pull the script from the newly checked-out repository instead? Or even look inside runtime.GOROOT ?",
			"disapproval": false,
			"date": "2012-04-23 17:04:09.961974",
			"approval": false
		},
		{
			"sender": "krautz@gmail.com",
			"recipients": [
				"krautz@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adg@golang.org, golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-23 18:06:08.927216",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 23 April 2012 10:23,  <krautz@gmail.com> wrote:\n> On 2012/04/23 17:04:09, adg wrote:\n>>\n>> http://codereview.appspot.com/5987044/diff/8/misc/dist/bindist.go\n>> File misc/dist/bindist.go (right):\n>\n>\n>\n> http://codereview.appspot.com/5987044/diff/8/misc/dist/bindist.go#newcode249\n>>\n>> misc/dist/bindist.go:249: \"--scripts\", \"darwin/scripts\",\n>> This requires that dist be run in $GOROOT/misc/dist, while that wasn't\n>\n> the case\n>>\n>> before. Can we pull the script from the newly checked-out repository\n>\n> instead? Or\n>>\n>> even look inside runtime.GOROOT ?\n>\n>\n> What's your preference here? \u00a0If we refer to the newly checked-out repo,\n> this new installer process can only build installers from this commit on\n> (because some of the files aren't present in older checkouts.)\n\nI'd prefer to look in the current GOROOT.\n",
			"disapproval": false,
			"date": "2012-04-23 17:25:22.257024",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"krautz@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-04-23 18:14:00.121875",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"krautz@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=ddcc0c3cd32b ***\n\nmisc/dist: require 10.6 or later for OS X .pkgs\n\nThis changes the misc/dist program to generate OS X\npackages using pkgbuild and productbuild.\n\nThe productbuild utility makes it easy to generate\npackages with a custom Distribution file.  This allows\nus to add an installcheck script that presents a\nfriendly message to users who are running on an old\nversion of Mac OS X.\n\nThe change also fixes a few issues with the\npostinstall script:\n\n - In-repo version of the script has been made\n   executable. Installers generated using the new\n   tools couldn't execute it otherwise.\n\n - It now uses -d for checking for the existence\n   of the Xcode specs directory.\n\n - The call to sudo.bash has been dropped since cov\n   and prof aren't bundled with the binary\n   distributions.\n\nFixes issue 3455.\n\nTested on 10.5.8, 10.6.0, 10.6.8 and 10.7.3.\n\nR=adg, golang-dev\nCC=golang-dev\nhttp://codereview.appspot.com/5987044\n\nCommitter: Andrew Gerrand <adg@golang.org>",
			"disapproval": false,
			"date": "2012-04-23 21:56:14.756347",
			"approval": false
		}
	],
	"owner_email": "krautz@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mkrautz",
	"subject": "code review 5987044: misc/dist: require 10.6 or later for OS X .pkgs",
	"created": "2012-04-05 11:11:56.279895",
	"patchsets": [
		1,
		2001,
		3,
		4,
		5004,
		5005,
		8,
		11002,
		13001
	],
	"modified": "2012-04-23 22:30:24.667836",
	"closed": true,
	"issue": 5987044
}