{
	"description": "cmd/go: checkout from the master branch if no tag is found\n\nFixes issue 3491.",
	"cc": [
		"0xjnml@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"n13m3y3r@gmail.com",
		"julian@quantumfyre.co.uk",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The issue that I encountered is, when using go get to checkout\npackages onto my various machines for testing, the working copy was\nnot immediately useful as it wasn't on the master branch; you couldn't\ncommit changes to the master or trunk branch. eg;\n\nodessa(~/devel/src/github.com/davecheney) % go get github.com/davecheney/gmx\nodessa(~/devel/src/github.com/davecheney) % cd gmx\nodessa(~/devel/src/github.com/davecheney/gmx) % ls\nLICENCE\t\tREADME.md\texample\t\tgmx.go\t\tgmxc\t\tos.go\t\truntime.go\nodessa(~/devel/src/github.com/davecheney/gmx) % echo \"\\n\\n\" >> gmx.go\nodessa(~/devel/src/github.com/davecheney/gmx) % git commit -a\n[detached HEAD f28e4d3] Added more newlines\n 1 files changed, 1 insertions(+), 0 deletions(-)\n\nHowever with this patch applied, the working copy is a clone of trunk\nbranch, so commits can be pushed.\n\nOn Sat, Apr 7, 2012 at 11:32 PM,  <n13m3y3r@gmail.com> wrote:\n> It's not clear from the issue summary or the bug description what the\n> problem being solved actually is. It seems to be working as intended:\n>\n> https://groups.google.com/d/topic/golang-dev/h9XkxA3Sxu4/discussion\n> https://code.google.com/p/go/issues/detail?id=2109\n> http://codereview.appspot.com/5617057/\n>\n>\n> http://codereview.appspot.com/5988054/\n",
			"disapproval": false,
			"date": "2012-04-07 13:40:35.547082",
			"approval": false
		},
		{
			"sender": "julian@quantumfyre.co.uk",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"julian@quantumfyre.co.uk",
				"0xjnml@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/07 09:40:56, dfc wrote:\n> Hello mailto:golang-dev@googlegroups.com (cc: mailto:0xjnml@gmail.com,\n> mailto:golang-dev@googlegroups.com, mailto:julian@quantumfyre.co.uk),\n> \n> Please take another look.\n\nAs it stands this change will break get's -u switch.\n\nIf you are going to check out local branches, then you need to update those branches.  The command used to do the update (fetch) doesn't do this.\n\nSince \"go get\" is simply using git as a distribution mechanism, I'm not sure I would change anything.  You could try more complicated systems, but I think that asking people who are developing software to do their own cloning/updating and use \"go install\" is a much more versatile solution - and less fragile.\n\nI think a better approach would be a mechanism for asking the go command what branch/tag you currently have for all software in $GOPATH ...",
			"disapproval": false,
			"date": "2012-04-07 15:53:51.534944",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"0xjnml@gmail.com",
				"golang-dev@googlegroups.com",
				"julian@quantumfyre.co.uk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/04/07 13:40:35, dfc wrote:\n> The issue that I encountered is, when using go get to checkout\n> packages onto my various machines for testing, the working copy was\n> not immediately useful as it wasn't on the master branch; you couldn't\n> commit changes to the master or trunk branch. eg;\n\nIf we checked out \"master\" by default, it means that go get is checking out a local branch, with potential changes that you committed locally, rather than what is currently available in the upstream branch. If we pull from origin/master to master at that point, there may be conflicts, and even if there are no conflicts the end result is not what is in the upstream branch, so you're using \"go get\" to mean \"merge the remote into my changes\", which has left the realm of what \"go get\" should be concerned about.\n\nThat said, you can do all of that by yourself by using the git command yourself on top of what go get gives you, which seems like a fine assumption given that you're indeed intending to work on that code base with git.",
			"disapproval": false,
			"date": "2012-04-07 14:05:24.894267",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you all for your detailed replies. I think that in addition to\nthe confusing title of the issue, I have not been using the correct\nDVCS terminology, certainly when it comes to git.\n\nWhat I am trying to achieve is simply, when I go get one of my own\npackages, the local working copy is in a state that commits made to it\ncan be pushed back, and is go get -u' able by other working copies on\nmy other machines. I am in effect using go get to setup a development\ncopy of a package, which is very useful if those packages require a\nnumber of other dependant packages.This works today with mercurial\nbased packages, I had hoped that this small CL would fix it for git\nbased packages.\n\nPossibly the fix when working with the 'master/head/tip/trunk' of a\ngit repo, is to not do the 'git checkout origin/master' from the\nworking copy, but make that operation a no-op if not working on a tag,\nthat is to say, git clone $REPO and be done with it.\n\nCheers\n\nDave\n\nOn Sun, Apr 8, 2012 at 1:53 AM,  <julian@quantumfyre.co.uk> wrote:\n> On 2012/04/07 09:40:56, dfc wrote:\n>>\n>> Hello mailto:golang-dev@googlegroups.com (cc: mailto:0xjnml@gmail.com,\n>> mailto:golang-dev@googlegroups.com, mailto:julian@quantumfyre.co.uk),\n>\n>\n>> Please take another look.\n>\n>\n> As it stands this change will break get's -u switch.\n>\n> If you are going to check out local branches, then you need to update\n> those branches. \u00a0The command used to do the update (fetch) doesn't do\n> this.\n>\n> Since \"go get\" is simply using git as a distribution mechanism, I'm not\n> sure I would change anything. \u00a0You could try more complicated systems,\n> but I think that asking people who are developing software to do their\n> own cloning/updating and use \"go install\" is a much more versatile\n> solution - and less fragile.\n>\n> I think a better approach would be a mechanism for asking the go command\n> what branch/tag you currently have for all software in $GOPATH ...\n>\n> http://codereview.appspot.com/5988054/\n",
			"disapproval": false,
			"date": "2012-04-07 23:40:01.609345",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"0xjnml@gmail.com",
				"golang-dev@googlegroups.com",
				"julian@quantumfyre.co.uk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: 0xjnml@gmail.com, golang-dev@googlegroups.com, julian@quantumfyre.co.uk),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-04-07 09:40:56.876371",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Also, sorry about the issue title, if anyone has the power to edit the\ntitle to fix it I would be grateful.\n\nOn Sat, Apr 7, 2012 at 11:40 PM, Dave Cheney <dave@cheney.net> wrote:\n> The issue that I encountered is, when using go get to checkout\n> packages onto my various machines for testing, the working copy was\n> not immediately useful as it wasn't on the master branch; you couldn't\n> commit changes to the master or trunk branch. eg;\n>\n> odessa(~/devel/src/github.com/davecheney) % go get github.com/davecheney/gmx\n> odessa(~/devel/src/github.com/davecheney) % cd gmx\n> odessa(~/devel/src/github.com/davecheney/gmx) % ls\n> LICENCE \u00a0 \u00a0 \u00a0 \u00a0 README.md \u00a0 \u00a0 \u00a0 example \u00a0 \u00a0 \u00a0 \u00a0 gmx.go \u00a0 \u00a0 \u00a0 \u00a0 \u00a0gmxc \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0os.go \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 runtime.go\n> odessa(~/devel/src/github.com/davecheney/gmx) % echo \"\\n\\n\" >> gmx.go\n> odessa(~/devel/src/github.com/davecheney/gmx) % git commit -a\n> [detached HEAD f28e4d3] Added more newlines\n> \u00a01 files changed, 1 insertions(+), 0 deletions(-)\n>\n> However with this patch applied, the working copy is a clone of trunk\n> branch, so commits can be pushed.\n>\n> On Sat, Apr 7, 2012 at 11:32 PM, \u00a0<n13m3y3r@gmail.com> wrote:\n>> It's not clear from the issue summary or the bug description what the\n>> problem being solved actually is. It seems to be working as intended:\n>>\n>> https://groups.google.com/d/topic/golang-dev/h9XkxA3Sxu4/discussion\n>> https://code.google.com/p/go/issues/detail?id=2109\n>> http://codereview.appspot.com/5617057/\n>>\n>>\n>> http://codereview.appspot.com/5988054/\n",
			"disapproval": false,
			"date": "2012-04-07 13:41:02.339544",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-04-07 09:39:56.862045",
			"approval": false
		},
		{
			"sender": "n13m3y3r@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"0xjnml@gmail.com",
				"golang-dev@googlegroups.com",
				"julian@quantumfyre.co.uk",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It's not clear from the issue summary or the bug description what the problem being solved actually is. It seems to be working as intended:\n\nhttps://groups.google.com/d/topic/golang-dev/h9XkxA3Sxu4/discussion\nhttps://code.google.com/p/go/issues/detail?id=2109\nhttp://codereview.appspot.com/5617057/",
			"disapproval": false,
			"date": "2012-04-07 13:32:02.292603",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"julian@quantumfyre.co.uk",
				"rsc@golang.org",
				"0xjnml@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I think this should be abandoned; more detail on the issue tracker.",
			"disapproval": false,
			"date": "2012-04-10 19:24:08.914642",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I have abandoned this change.\n\nOn Wed, Apr 11, 2012 at 5:24 AM,  <rsc@golang.org> wrote:\n> I think this should be abandoned; more detail on the issue tracker.\n>\n>\n> http://codereview.appspot.com/5988054/\n",
			"disapproval": false,
			"date": "2012-04-10 21:50:02.969562",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"n13m3y3r@gmail.com",
				"julian@quantumfyre.co.uk",
				"rsc@golang.org",
				"0xjnml@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-04-17 12:40:59.153983",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 5988054: cmd/go: checkout from the master branch if no tag is found",
	"created": "2012-04-07 09:36:49.633225",
	"patchsets": [
		1,
		2001,
		4001,
		5002
	],
	"modified": "2012-04-17 12:41:02.145298",
	"closed": true,
	"issue": 5988054
}