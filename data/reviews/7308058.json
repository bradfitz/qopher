{
	"description": "net: add unixgram dial test\n\nAlso replaces testing.Errof with testing.Fatalf, make use of ICMP mock.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, dave@cheney.net (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-02-08 13:44:52.134000",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Feb 8, 2013 at 12:28 PM,  <dave@cheney.net> wrote:\r\n\r\n> https://codereview.appspot.com/7308058/diff/7001/src/pkg/net/conn_test.go#newcode99\r\n> src/pkg/net/conn_test.go:99: t.Fatalf(\"net.Listener.Accept failed: %v\",\r\n> err)\r\n> cannot use Fatalf here, it is running in a goroutine\r\n\r\nI thought so but after testing package re-read, now, wonder why?\r\nJust tested attached, it looks tRunner handles TestABC well.\r\n\r\n--\r\npackage net\r\n\r\nimport (\r\n        \"testing\"\r\n        \"time\"\r\n)\r\n\r\nfunc TestABC(t *testing.T) {\r\n        go wrecker(t)\r\n        time.Sleep(100 * time.Millisecond)\r\n        t.Fatal(\"gone\")\r\n}\r\n\r\nfunc wrecker(t *testing.T) {\r\n        t.Fatal(\"clash\")\r\n}\r\n",
			"disapproval": false,
			"date": "2013-02-08 12:28:55.984850",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": ">\r\n>> https://codereview.appspot.com/7308058/diff/7001/src/pkg/net/conn_test.go#newcode99\r\n>> src/pkg/net/conn_test.go:99: t.Fatalf(\"net.Listener.Accept failed: %v\",\r\n>> err)\r\n>> cannot use Fatalf here, it is running in a goroutine\r\n>\r\n> I thought so but after testing package re-read, now, wonder why?\r\n> Just tested attached, it looks tRunner handles TestABC well.\r\n\r\nIt used to be undocumented, but recently a note has been added to tell\r\npeople not to do Fatalf in a goroutine. Mostly it isn't a problem\r\nbecause the Fatalf path is unlikely.\r\n\r\n>\r\n> --\r\n> package net\r\n>\r\n> import (\r\n>         \"testing\"\r\n>         \"time\"\r\n> )\r\n>\r\n> func TestABC(t *testing.T) {\r\n>         go wrecker(t)\r\n>         time.Sleep(100 * time.Millisecond)\r\n>         t.Fatal(\"gone\")\r\n> }\r\n>\r\n> func wrecker(t *testing.T) {\r\n>         t.Fatal(\"clash\")\r\n> }\r\n",
			"disapproval": false,
			"date": "2013-02-08 12:33:31.881030",
			"approval": false
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-02-08 01:50:09.169090",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you, this is a nice cleanup. A few minor comments.\n\nhttps://codereview.appspot.com/7308058/diff/7001/src/pkg/net/conn_test.go\nFile src/pkg/net/conn_test.go (right):\n\nhttps://codereview.appspot.com/7308058/diff/7001/src/pkg/net/conn_test.go#newcode32\nsrc/pkg/net/conn_test.go:32: {\"unix\", testUnixAddr()},\nnice\n\nhttps://codereview.appspot.com/7308058/diff/7001/src/pkg/net/conn_test.go#newcode91\nsrc/pkg/net/conn_test.go:91: switch ln.(type) {\n        switch ln := ln.(type) {\n        case *net.TCPListener:\n                ln.SetDeadline(time.Now().Add(100 * time.Millisecond))\n        case *net.UnixListener:\n                ln.SetDeadline(time.Now().Add(100 * time.Millisecond))\n        }\n\nhttps://codereview.appspot.com/7308058/diff/7001/src/pkg/net/conn_test.go#newcode99\nsrc/pkg/net/conn_test.go:99: t.Fatalf(\"net.Listener.Accept failed: %v\", err)\ncannot use Fatalf here, it is running in a goroutine\n\nhttps://codereview.appspot.com/7308058/diff/7001/src/pkg/net/conn_test.go#newcode100\nsrc/pkg/net/conn_test.go:100: }\nmaybe a comment here to explain why we call the next two functions and ignore the results.\n\nhttps://codereview.appspot.com/7308058/diff/7001/src/pkg/net/conn_test.go#newcode111\nsrc/pkg/net/conn_test.go:111: t.Fatalf(\"net.Conn.Read failed: %v\", err)\nsame\n\nhttps://codereview.appspot.com/7308058/diff/7001/src/pkg/net/conn_test.go#newcode114\nsrc/pkg/net/conn_test.go:114: t.Fatalf(\"net.Conn.Write failed: %v\", err)\nsame",
			"disapproval": false,
			"date": "2013-02-08 03:28:22.985350",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM, modulo the comments to move the defers closer to the place the resources are allocated.\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/conn_test.go\nFile src/pkg/net/conn_test.go (right):\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/conn_test.go#newcode107\nsrc/pkg/net/conn_test.go:107: defer c.Close()\nplease move line 107 above 102, so if c.LocalAddr() or c.RemoteAddr() panic, we don't leak an fd.\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/packetconn_test.go\nFile src/pkg/net/packetconn_test.go (right):\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/packetconn_test.go#newcode139\nsrc/pkg/net/packetconn_test.go:139: defer closer(c1, netstr[0], tt.addr1, tt.addr2)\nsee previous comment\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/packetconn_test.go#newcode150\nsrc/pkg/net/packetconn_test.go:150: defer c2.Close()\nsame\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/protoconn_test.go\nFile src/pkg/net/protoconn_test.go (right):\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/protoconn_test.go#newcode258\nsrc/pkg/net/protoconn_test.go:258: defer c1.Close()\nsame",
			"disapproval": false,
			"date": "2013-02-19 02:02:57.017990",
			"approval": true
		},
		{
			"sender": "mikioh.mikioh@gmail.com",
			"recipients": [
				"mikioh.mikioh@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=2e9e27f95e17 ***\n\nnet: add unixgram dial test\n\nAlso replaces testing.Errof with testing.Fatalf, make use of ICMP mock.\n\nR=golang-dev, dave\nCC=golang-dev\nhttps://codereview.appspot.com/7308058\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/conn_test.go\nFile src/pkg/net/conn_test.go (right):\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/conn_test.go#newcode107\nsrc/pkg/net/conn_test.go:107: defer c.Close()\nOn 2013/02/19 02:02:57, dfc wrote:\n> please move line 107 above 102, so if c.LocalAddr() or c.RemoteAddr() panic, we\n> don't leak an fd.\n\nDone.\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/packetconn_test.go\nFile src/pkg/net/packetconn_test.go (right):\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/packetconn_test.go#newcode139\nsrc/pkg/net/packetconn_test.go:139: defer closer(c1, netstr[0], tt.addr1, tt.addr2)\nOn 2013/02/19 02:02:57, dfc wrote:\n> see previous comment\n\nDone.\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/protoconn_test.go\nFile src/pkg/net/protoconn_test.go (right):\n\nhttps://codereview.appspot.com/7308058/diff/3004/src/pkg/net/protoconn_test.go#newcode258\nsrc/pkg/net/protoconn_test.go:258: defer c1.Close()\nOn 2013/02/19 02:02:57, dfc wrote:\n> same\n\nDone.",
			"disapproval": false,
			"date": "2013-03-03 07:00:04.359790",
			"approval": false
		}
	],
	"owner_email": "mikioh.mikioh@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mikio",
	"subject": "code review 7308058: net: add unixgram dial test",
	"created": "2013-02-07 13:32:40.578360",
	"patchsets": [
		5001,
		7001,
		3004,
		14001
	],
	"modified": "2013-03-03 07:00:06.917050",
	"closed": true,
	"issue": 7308058
}