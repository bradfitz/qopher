{
	"description": "exp/cookiejar: infrastructure for upcoming implementation\n\nThis CL is the first of a handful of CLs which will provide\nthe implementation of cookiejar. It contains several helper\nfunctions and the skeleton of Cookies and SetCookies.\n\nProper host name handling requires the ToASCII transformation\nfrom package idna which currently lives in the go.net\nsubrepo. This CL thus contains just a TODO for this issue.",
	"cc": [
		"nigeltao@golang.org",
		"rsc@golang.org",
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org, rsc@golang.org, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-02-04 15:40:39.145320",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.\n\nAll my comments are minor. I'll fix them when I submit.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode81\nsrc/pkg/exp/cookiejar/jar.go:81: Name       string\nOn 2013/02/05 13:51:13, volker.dobler wrote:\n> I do not think that embedding a http.Cookie is right:\n\nWell, I guess we'll agree to disagree, then. But let's not that turn into a showstopper.\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go#newcode126\nsrc/pkg/exp/cookiejar/jar.go:126: j.entries[key] = submap\nThis won't be necessary if you modify submap in-place, but I guess we'll see that when you implement the TODOs.\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go#newcode150\nsrc/pkg/exp/cookiejar/jar.go:150: if len(cookies) == 0 {\nThis test is cheapest, I'd do it first.\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go#newcode187\nsrc/pkg/exp/cookiejar/jar.go:187: host = host[:len(host)-1]\nIs \"www.example.com...\" worth considering?\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go#newcode198\nsrc/pkg/exp/cookiejar/jar.go:198: // hostPort returns true whether host contains a port number. host may be a\ns/hostPort/hasPort/ and s/true//\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go#newcode208\nsrc/pkg/exp/cookiejar/jar.go:208: if host[0] == '[' && strings.Index(host, \"]:\") != -1 {\ns/Index/Contains/\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go#newcode237\nsrc/pkg/exp/cookiejar/jar.go:237: // isIP checks if host is an IP address.\ns/checks if/returns whether/\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar_test.go\nFile src/pkg/exp/cookiejar/jar_test.go (right):\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar_test.go#newcode88\nsrc/pkg/exp/cookiejar/jar_test.go:88: t.Errorf(\"%q: got %q, want \\\"com\\\"\", host, got)\nUse `` quotes.\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar_test.go#newcode104\nsrc/pkg/exp/cookiejar/jar_test.go:104: for h, want := range isIPTests {\ns/h/host/",
			"disapproval": false,
			"date": "2013-02-06 11:31:44.610330",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode81\nsrc/pkg/exp/cookiejar/jar.go:81: Name       string\nI would still rather that this embeds an http.Cookie. I don't find the memory argument compelling; you're using map[string]map[string]entry, which is easy to use, but it isn't the cheapest data structure, in terms of memory.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode98\nsrc/pkg/exp/cookiejar/jar.go:98: cookies := make([]*http.Cookie, 0)\nvar cookies []*http.Cookie\n\nor move this into the return value:\n\nfunc (j *Jar) Cookies(u *url.URL) (cookies []*http.Cookie) {\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode187\nsrc/pkg/exp/cookiejar/jar.go:187: // strip trailing dot from fully qualified domain names\nComments should be complete sentences, and thus start with a capital letter and end with a full stop.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode198\nsrc/pkg/exp/cookiejar/jar.go:198: // hostPort returns true if host contains a port number. host may be a host name,\ns/true if/whether/\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode220\nsrc/pkg/exp/cookiejar/jar.go:220: func (_ idnaT) ToASCII(s string) (string, error) { return s, nil }\nIf this is a no-op, just don't bother with the type, and move the TODO above.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode235\nsrc/pkg/exp/cookiejar/jar.go:235: // provided public suffix list psl is broken\n// The provided public etc\n// etc stopgap.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode243\nsrc/pkg/exp/cookiejar/jar.go:243: // isIP checks if host is formally an IP address.\ns/formally//\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode245\nsrc/pkg/exp/cookiejar/jar.go:245: ip := net.ParseIP(host)\nreturn net.ParseIP(host) != nil\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar_test.go\nFile src/pkg/exp/cookiejar/jar_test.go (right):\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar_test.go#newcode16\nsrc/pkg/exp/cookiejar/jar_test.go:16: func (_ testPSL) String() string {\nDrop the _.",
			"disapproval": false,
			"date": "2013-02-05 10:35:28.047440",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode81\nsrc/pkg/exp/cookiejar/jar.go:81: Name       string\nOn 2013/02/05 10:35:28, nigeltao wrote:\n> I would still rather that this embeds an http.Cookie. I don't find the memory\n> argument compelling; you're using map[string]map[string]entry, which is easy to\n> use, but it isn't the cheapest data structure, in terms of memory.\n\nI do not think that embedding a http.Cookie is right:\n - entry should not inherit the method of http.Cookie\n - nowhere in the implementation is a http.Cookie copied\n   to or from an entry, they are just too different.\n - if http.Cookie acquires more fields (e.g. Creation)\n   the code here must be changed anyway\n - completely new field for http.Cookie -- others than\n   needed by cookiejar -- are very unlikely and I believe\n   that these won't need storage in a jar\nThus I cannot see any advantage of embedding a http.Cookie\nin entry.\n\nOn the other hand: not embedding has the following\nadvantages:\n - it saves a few bytes (but I agree that this is peanuts\n   compared to the map overhead an the possible large\n   Value)\n - it is pretty clear what happens to Raw, Unparsed and\n   RawExpires\n\nI thus think, that a entry type with all fields is slighty\nbetter.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode98\nsrc/pkg/exp/cookiejar/jar.go:98: cookies := make([]*http.Cookie, 0)\nOn 2013/02/05 10:35:28, nigeltao wrote:\n> var cookies []*http.Cookie\n> \n> or move this into the return value:\n> \n> func (j *Jar) Cookies(u *url.URL) (cookies []*http.Cookie) {\n\nDone.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode187\nsrc/pkg/exp/cookiejar/jar.go:187: // strip trailing dot from fully qualified domain names\nOn 2013/02/05 10:35:28, nigeltao wrote:\n> Comments should be complete sentences, and thus start with a capital letter and\n> end with a full stop.\n\nDone.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode220\nsrc/pkg/exp/cookiejar/jar.go:220: func (_ idnaT) ToASCII(s string) (string, error) { return s, nil }\nOn 2013/02/05 10:35:28, nigeltao wrote:\n> If this is a no-op, just don't bother with the type, and move the TODO above.\n\nDone.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode235\nsrc/pkg/exp/cookiejar/jar.go:235: // provided public suffix list psl is broken\nOn 2013/02/05 10:35:28, nigeltao wrote:\n> // The provided public etc\n> // etc stopgap.\n\nDone.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode243\nsrc/pkg/exp/cookiejar/jar.go:243: // isIP checks if host is formally an IP address.\nOn 2013/02/05 10:35:28, nigeltao wrote:\n> s/formally//\n\nDone.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar.go#newcode245\nsrc/pkg/exp/cookiejar/jar.go:245: ip := net.ParseIP(host)\nOn 2013/02/05 10:35:28, nigeltao wrote:\n> return net.ParseIP(host) != nil\n\nDone.\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar_test.go\nFile src/pkg/exp/cookiejar/jar_test.go (right):\n\nhttps://codereview.appspot.com/7287046/diff/4001/src/pkg/exp/cookiejar/jar_test.go#newcode16\nsrc/pkg/exp/cookiejar/jar_test.go:16: func (_ testPSL) String() string {\nOn 2013/02/05 10:35:28, nigeltao wrote:\n> Drop the _.\n\nDone.",
			"disapproval": false,
			"date": "2013-02-05 13:51:13.353320",
			"approval": false
		},
		{
			"sender": "dr.volker.dobler@gmail.com",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go#newcode187\nsrc/pkg/exp/cookiejar/jar.go:187: host = host[:len(host)-1]\nOn 2013/02/06 11:31:44, nigeltao wrote:\n> Is \"www.example.com...\" worth considering?\n\nI don't think so: \"www.example.com...\" is not a valid\nhost name while \"www.example.com.\" is.",
			"disapproval": false,
			"date": "2013-02-06 11:50:03.305170",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=8f9b0fbf4c15 ***\n\nexp/cookiejar: infrastructure for upcoming implementation\n\nThis CL is the first of a handful of CLs which will provide\nthe implementation of cookiejar. It contains several helper\nfunctions and the skeleton of Cookies and SetCookies.\n\nProper host name handling requires the ToASCII transformation\nfrom package idna which currently lives in the go.net\nsubrepo. This CL thus contains just a TODO for this issue.\n\nR=nigeltao, rsc, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/7287046\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2013-02-06 11:37:48.498150",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"dr.volker.dobler@gmail.com",
				"nigeltao@golang.org",
				"rsc@golang.org",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go\nFile src/pkg/exp/cookiejar/jar.go (right):\n\nhttps://codereview.appspot.com/7287046/diff/9002/src/pkg/exp/cookiejar/jar.go#newcode107\nsrc/pkg/exp/cookiejar/jar.go:107: key := jarKey(host, j.psList)\nOne more thing: SetCookies checks if key == \"\". Should the two be consistent?",
			"disapproval": false,
			"date": "2013-02-06 11:36:54.672590",
			"approval": false
		}
	],
	"owner_email": "dr.volker.dobler@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "volker.dobler",
	"subject": "code review 7287046:        exp/cookiejar: infrastructure for upcoming imple...",
	"created": "2013-02-04 15:38:35.310480",
	"patchsets": [
		1,
		2001,
		4001,
		9001,
		9002
	],
	"modified": "2013-02-06 11:50:03.526790",
	"closed": true,
	"issue": 7287046
}