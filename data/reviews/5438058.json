{
	"description": "math/big: use recursive subdivision for significant speedup\n\nThis change adds the second aspect to the conversion code, the\nuse of large divisiors (powers of big base) to greatly speed up\nthe divsion of large numbers. Speedups of 30x are common in the\nlarge cases. Also includes new tests and tuning code for the\nkey internal parameters.",
	"cc": [
		"gri@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"michael.jones@gmail.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nPer off-line discussion I will send follow-up CL's.",
			"disapproval": false,
			"date": "2011-11-27 19:10:13.482800",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"michael.jones@gmail.com",
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=d0323ff8f6de ***\n\nmath/big: use recursive subdivision for significant speedup\n\nThis change adds the second aspect to the conversion code, the\nuse of large divisiors (powers of big base) to greatly speed up\nthe divsion of large numbers. Speedups of 30x are common in the\nlarge cases. Also includes new tests and tuning code for the\nkey internal parameters.\n\nR=gri\nCC=golang-dev\nhttp://codereview.appspot.com/5438058\n\nCommitter: Robert Griesemer <gri@golang.org>",
			"disapproval": false,
			"date": "2011-11-27 19:11:08.525291",
			"approval": false
		}
	],
	"owner_email": "michael.jones@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "mtj",
	"subject": "math/big: use recursive subdivision for significant speedup",
	"created": "2011-11-27 17:25:01.701140",
	"patchsets": [
		1,
		2001
	],
	"modified": "2011-11-28 15:19:29.890759",
	"closed": true,
	"issue": 5438058
}