{
	"description": "go/scanner: clean up error interface\n\nIssue 2856 asks for a rename of a few methods to a\nmore idiomatic Go style. This is a very early API\nthat evolved organically throughout the years.\nTogether with the fact that ErrorVectors were embedded\nin other data structures (e.g. Parser), just renaming\nmethods (e.g. GetError -> Error) would lead to undesired\nbehavior (e.g., Parser would act like an Error). Instead,\ncleaned up API a bit more:\n\n- removed ErrorVector in favor of ErrorList (already\npresent)\n- simplified Scanner.Init by making the error handler a\nfunction instead of requiring an ErrorHandler implementation\n- adjusted helper functions accordingly\n- updated Go 1 doc\n\nFixes issue 2856.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-02-03 23:54:13.814368",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttp://codereview.appspot.com/5624047/diff/1003/doc/go1.tmpl\nFile doc/go1.tmpl (right):\n\nhttp://codereview.appspot.com/5624047/diff/1003/doc/go1.tmpl#newcode865\ndoc/go1.tmpl:865: an <code>ErrorVector</code> in a client of the scanner, now a client should simply maintain\nOn 2012/02/06 17:38:18, rsc wrote:\n> s/simply //\n\nDone.\n\nhttp://codereview.appspot.com/5624047/diff/1003/src/pkg/go/scanner/errors.go\nFile src/pkg/go/scanner/errors.go (right):\n\nhttp://codereview.appspot.com/5624047/diff/1003/src/pkg/go/scanner/errors.go#newcode105\nsrc/pkg/go/scanner/errors.go:105: // OrNil returns nil for an empty ErrorList, otherwise it returns the list.\nOn 2012/02/06 17:38:18, rsc wrote:\n> We have written this method in a few other places, and always as Err() error.\n> OrNil focuses too much on a subtle detail of the implementation.\n> \n> // Err returns an error equivalent to this error list.\n> // If the list is empty, Err returns nil.\n> func (p ErrorList) Err() error {\n\nDone.",
			"disapproval": false,
			"date": "2012-02-06 17:43:37.857295",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5624047/diff/1003/doc/go1.tmpl\nFile doc/go1.tmpl (right):\n\nhttp://codereview.appspot.com/5624047/diff/1003/doc/go1.tmpl#newcode865\ndoc/go1.tmpl:865: an <code>ErrorVector</code> in a client of the scanner, now a client should simply maintain\ns/simply //\n\nhttp://codereview.appspot.com/5624047/diff/1003/src/pkg/go/scanner/errors.go\nFile src/pkg/go/scanner/errors.go (right):\n\nhttp://codereview.appspot.com/5624047/diff/1003/src/pkg/go/scanner/errors.go#newcode105\nsrc/pkg/go/scanner/errors.go:105: // OrNil returns nil for an empty ErrorList, otherwise it returns the list.\nWe have written this method in a few other places, and always as Err() error.\nOrNil focuses too much on a subtle detail of the implementation.\n\n// Err returns an error equivalent to this error list.\n// If the list is empty, Err returns nil.\nfunc (p ErrorList) Err() error {",
			"disapproval": false,
			"date": "2012-02-06 17:38:17.997857",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-06 18:00:57.352028",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "One sec. This needs some other adjustments.\n- gri\n\nOn Mon, Feb 6, 2012 at 9:43 AM,  <gri@golang.org> wrote:\n> PTAL\n>\n>\n>\n> http://codereview.appspot.com/5624047/diff/1003/doc/go1.tmpl\n> File doc/go1.tmpl (right):\n>\n> http://codereview.appspot.com/5624047/diff/1003/doc/go1.tmpl#newcode865\n> doc/go1.tmpl:865: an <code>ErrorVector</code> in a client of the\n> scanner, now a client should simply maintain\n> On 2012/02/06 17:38:18, rsc wrote:\n>>\n>> s/simply //\n>\n>\n> Done.\n>\n>\n> http://codereview.appspot.com/5624047/diff/1003/src/pkg/go/scanner/errors.go\n> File src/pkg/go/scanner/errors.go (right):\n>\n> http://codereview.appspot.com/5624047/diff/1003/src/pkg/go/scanner/errors.go#newcode105\n> src/pkg/go/scanner/errors.go:105: // OrNil returns nil for an empty\n> ErrorList, otherwise it returns the list.\n> On 2012/02/06 17:38:18, rsc wrote:\n>>\n>> We have written this method in a few other places, and always as Err()\n>\n> error.\n>>\n>> OrNil focuses too much on a subtle detail of the implementation.\n>\n>\n>> // Err returns an error equivalent to this error list.\n>> // If the list is empty, Err returns nil.\n>> func (p ErrorList) Err() error {\n>\n>\n> Done.\n>\n> http://codereview.appspot.com/5624047/\n",
			"disapproval": false,
			"date": "2012-02-06 17:45:42.778281",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as 531a26e7c3bf ***\n\ngo/scanner: clean up error interface\n\nIssue 2856 asks for a rename of a few methods to a\nmore idiomatic Go style. This is a very early API\nthat evolved organically throughout the years.\nTogether with the fact that ErrorVectors were embedded\nin other data structures (e.g. Parser), just renaming\nmethods (e.g. GetError -> Error) would lead to undesired\nbehavior (e.g., Parser would act like an Error). Instead,\ncleaned up API a bit more:\n\n- removed ErrorVector in favor of ErrorList (already\npresent)\n- simplified Scanner.Init by making the error handler a\nfunction instead of requiring an ErrorHandler implementation\n- adjusted helper functions accordingly\n- updated Go 1 doc\n\nFixes issue 2856.\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5624047",
			"disapproval": false,
			"date": "2012-02-08 19:41:34.897838",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"gri@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nSorry about the delay.\n\nhttp://codereview.appspot.com/5624047/diff/14001/doc/go1.tmpl\nFile doc/go1.tmpl (right):\n\nhttp://codereview.appspot.com/5624047/diff/14001/doc/go1.tmpl#newcode954\ndoc/go1.tmpl:954: an <code>ErrorList</code> instead.\ns/ instead//\nAlready in this sentence once.",
			"disapproval": false,
			"date": "2012-02-08 19:30:46.440201",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 5624047: go/scanner: clean up error interface",
	"created": "2012-02-03 23:23:52.899458",
	"patchsets": [
		1,
		2001,
		3,
		1002,
		5001,
		1003,
		9001,
		10010,
		13001,
		14001,
		16010,
		14011
	],
	"modified": "2012-02-08 19:41:36.193238",
	"closed": true,
	"issue": 5624047
}