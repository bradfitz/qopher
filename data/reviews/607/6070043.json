{
	"description": "runtime: add benchmark for complex128 division",
	"cc": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"minux.ma@gmail.com"
	],
	"reviewers": [
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "mchaten@gmail.com",
			"recipients": [
				"mchaten@gmail.com",
				"golang-dev@googlegroups.com",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: minux.ma@gmail.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-04-19 06:02:27.764621",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Have you filled in a CLA ?\n\nOn Thu, Apr 19, 2012 at 4:02 PM,  <mchaten@gmail.com> wrote:\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com (cc: minux.ma@gmail.com),\n>\n> I'd like you to review this change to\n> https://code.google.com/p/go/\n>\n>\n> Description:\n> runtime: add benchmark for complex128 division\n>\n> Please review this at http://codereview.appspot.com/6070043/\n>\n> Affected files:\n> \u00a0A src/pkg/runtime/complex_test.go\n>\n>\n> Index: src/pkg/runtime/complex_test.go\n> ===================================================================\n> new file mode 100644\n> --- /dev/null\n> +++ b/src/pkg/runtime/complex_test.go\n> @@ -0,0 +1,52 @@\n> +// Copyright 2012 The Go Authors. All rights reserved.\n> +// Use of this source code is governed by a BSD-style\n> +// license that can be found in the LICENSE file.\n> +\n> +package runtime_test\n> +\n> +import (\n> + \u00a0 \u00a0 \u00a0 \"math/cmplx\"\n> + \u00a0 \u00a0 \u00a0 \"testing\"\n> +)\n> +\n> +var result complex128\n> +\n> +func BenchmarkComplex128DivNormal(b *testing.B) {\n> + \u00a0 \u00a0 \u00a0 d := 15 + 2i\n> + \u00a0 \u00a0 \u00a0 n := 32 + 3i\n> + \u00a0 \u00a0 \u00a0 for i := 0; i < b.N; i++ {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result = n / d\n> + \u00a0 \u00a0 \u00a0 }\n> +}\n> +\n> +func BenchmarkComplex128DivNisNaN(b *testing.B) {\n> + \u00a0 \u00a0 \u00a0 d := cmplx.NaN()\n> + \u00a0 \u00a0 \u00a0 n := 32 + 3i\n> + \u00a0 \u00a0 \u00a0 for i := 0; i < b.N; i++ {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result = n / d\n> + \u00a0 \u00a0 \u00a0 }\n> +}\n> +\n> +func BenchmarkComplex128DivDisNaN(b *testing.B) {\n> + \u00a0 \u00a0 \u00a0 d := 15 + 2i\n> + \u00a0 \u00a0 \u00a0 n := cmplx.NaN()\n> + \u00a0 \u00a0 \u00a0 for i := 0; i < b.N; i++ {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result = n / d\n> + \u00a0 \u00a0 \u00a0 }\n> +}\n> +\n> +func BenchmarkComplex128DivNisInf(b *testing.B) {\n> + \u00a0 \u00a0 \u00a0 d := 15 + 2i\n> + \u00a0 \u00a0 \u00a0 n := cmplx.Inf()\n> + \u00a0 \u00a0 \u00a0 for i := 0; i < b.N; i++ {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result = n / d\n> + \u00a0 \u00a0 \u00a0 }\n> +}\n> +\n> +func BenchmarkComplex128DivDisInf(b *testing.B) {\n> + \u00a0 \u00a0 \u00a0 d := cmplx.Inf()\n> + \u00a0 \u00a0 \u00a0 n := 32 + 3i\n> + \u00a0 \u00a0 \u00a0 for i := 0; i < b.N; i++ {\n> + \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 result = n / d\n> + \u00a0 \u00a0 \u00a0 }\n> +}\n>\n>\n",
			"disapproval": false,
			"date": "2012-04-19 06:42:29.062488",
			"approval": true
		},
		{
			"sender": "mchaten@gmail.com",
			"recipients": [
				"mchaten@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Yes\nOn 2012/04/19 06:42:29, dfc wrote:\n> LGTM. Have you filled in a CLA ?\n> \n> On Thu, Apr 19, 2012 at 4:02 PM,  <mailto:mchaten@gmail.com> wrote:\n> > Reviewers: http://golang-dev_googlegroups.com,\n> >\n> > Message:\n> > Hello mailto:golang-dev@googlegroups.com (cc: mailto:minux.ma@gmail.com),\n> >\n> > I'd like you to review this change to\n> > https://code.google.com/p/go/\n> >\n> >\n> > Description:\n> > runtime: add benchmark for complex128 division\n> >\n> > Please review this at http://codereview.appspot.com/6070043/\n> >\n> > Affected files:\n> > &nbsp;A src/pkg/runtime/complex_test.go\n> >\n> >\n> > Index: src/pkg/runtime/complex_test.go\n> > ===================================================================\n> > new file mode 100644\n> > --- /dev/null\n> > +++ b/src/pkg/runtime/complex_test.go\n> > @@ -0,0 +1,52 @@\n> > +// Copyright 2012 The Go Authors. All rights reserved.\n> > +// Use of this source code is governed by a BSD-style\n> > +// license that can be found in the LICENSE file.\n> > +\n> > +package runtime_test\n> > +\n> > +import (\n> > + &nbsp; &nbsp; &nbsp; \"math/cmplx\"\n> > + &nbsp; &nbsp; &nbsp; \"testing\"\n> > +)\n> > +\n> > +var result complex128\n> > +\n> > +func BenchmarkComplex128DivNormal(b *testing.B) {\n> > + &nbsp; &nbsp; &nbsp; d := 15 + 2i\n> > + &nbsp; &nbsp; &nbsp; n := 32 + 3i\n> > + &nbsp; &nbsp; &nbsp; for i := 0; i < b.N; i++ {\n> > + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result = n / d\n> > + &nbsp; &nbsp; &nbsp; }\n> > +}\n> > +\n> > +func BenchmarkComplex128DivNisNaN(b *testing.B) {\n> > + &nbsp; &nbsp; &nbsp; d := cmplx.NaN()\n> > + &nbsp; &nbsp; &nbsp; n := 32 + 3i\n> > + &nbsp; &nbsp; &nbsp; for i := 0; i < b.N; i++ {\n> > + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result = n / d\n> > + &nbsp; &nbsp; &nbsp; }\n> > +}\n> > +\n> > +func BenchmarkComplex128DivDisNaN(b *testing.B) {\n> > + &nbsp; &nbsp; &nbsp; d := 15 + 2i\n> > + &nbsp; &nbsp; &nbsp; n := cmplx.NaN()\n> > + &nbsp; &nbsp; &nbsp; for i := 0; i < b.N; i++ {\n> > + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result = n / d\n> > + &nbsp; &nbsp; &nbsp; }\n> > +}\n> > +\n> > +func BenchmarkComplex128DivNisInf(b *testing.B) {\n> > + &nbsp; &nbsp; &nbsp; d := 15 + 2i\n> > + &nbsp; &nbsp; &nbsp; n := cmplx.Inf()\n> > + &nbsp; &nbsp; &nbsp; for i := 0; i < b.N; i++ {\n> > + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result = n / d\n> > + &nbsp; &nbsp; &nbsp; }\n> > +}\n> > +\n> > +func BenchmarkComplex128DivDisInf(b *testing.B) {\n> > + &nbsp; &nbsp; &nbsp; d := cmplx.Inf()\n> > + &nbsp; &nbsp; &nbsp; n := 32 + 3i\n> > + &nbsp; &nbsp; &nbsp; for i := 0; i < b.N; i++ {\n> > + &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; result = n / d\n> > + &nbsp; &nbsp; &nbsp; }\n> > +}\n> >\n> >",
			"disapproval": false,
			"date": "2012-04-19 16:05:35.318668",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mchaten@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "If there are no objections, I will submit this later today.",
			"disapproval": false,
			"date": "2012-04-21 01:21:48.162585",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n{\r\nn += n/d\r\n}\r\nresult = n\r\n\r\nmight work a little better for avoiding optimizations.\r\ni bet gccgo compiles the loop away.\r\n",
			"disapproval": false,
			"date": "2012-04-21 02:02:50.308598",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mchaten@gmail.com",
				"golang-dev@googlegroups.com",
				"dave@cheney.net",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=53bde4a93e92 ***\n\nruntime: add benchmark for complex128 division\n\nR=golang-dev, dave, rsc\nCC=golang-dev, minux.ma\nhttp://codereview.appspot.com/6070043\n\nCommitter: Dave Cheney <dave@cheney.net>",
			"disapproval": false,
			"date": "2012-04-21 03:24:56.326242",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"mchaten@gmail.com",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"minux.ma@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> might work a little better for avoiding optimizations.\n> i bet gccgo compiles the loop away.\n\nThanks Russ. I made your suggested change. There was no significant change in the benchmark results using this form.",
			"disapproval": false,
			"date": "2012-04-21 03:27:05.775614",
			"approval": false
		}
	],
	"owner_email": "mchaten@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "chaten",
	"subject": "code review 6070043: runtime: add benchmark for complex128 division",
	"created": "2012-04-19 06:01:37.153313",
	"patchsets": [
		1,
		2001
	],
	"modified": "2012-04-21 05:18:35.114401",
	"closed": true,
	"issue": 6070043
}