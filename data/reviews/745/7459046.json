{
	"description": "go.exp/locale: proposed API for Locale type.\n\n(Moved from exp/locale.)",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.exp/",
			"disapproval": false,
			"date": "2013-03-04 18:15:46.044100",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "just a few commentary cleanups.\n\nhttps://codereview.appspot.com/7459046/diff/5001/locale/locale.go\nFile locale/locale.go (right):\n\nhttps://codereview.appspot.com/7459046/diff/5001/locale/locale.go#newcode65\nlocale/locale.go:65: type Confidence int\nwhere did the decision to have four levels come from? it's a reasonable decision but i'm curious if it mimics other libraries\n\nhttps://codereview.appspot.com/7459046/diff/5001/locale/locale.go#newcode74\nlocale/locale.go:74: // String returns the canonical string representation of l.\n\"of l\" etc. reads funny. please rewrite this and others to be \"of the locale\".\n\nhttps://codereview.appspot.com/7459046/diff/5001/locale/locale.go#newcode274\nlocale/locale.go:274: // Scope returns a Set of all pre-defined sublocales applicable to r.\ns/to r/to the region/ etc. etc.",
			"disapproval": false,
			"date": "2013-03-08 21:25:31.378090",
			"approval": false
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sorry, noticed I didn't publish my comments before.\n\nIncorporated further changes based on feedback.  This includes some simplifications and stressing the fact that the Locale type is really an identifier only (it is now called ID, instead of Locale).\n\nPTAL\n\nhttps://codereview.appspot.com/7459046/diff/5001/locale/locale.go\nFile locale/locale.go (right):\n\nhttps://codereview.appspot.com/7459046/diff/5001/locale/locale.go#newcode65\nlocale/locale.go:65: type Confidence int\nI found this to be the right granularity.  You can really say in some cases yes or no for sure, and in cases where one cannot be entirely sure, it usually is pretty certain or not.  I found having more levels quite meaningless.\nIn other APIs, if there is a confidence, it is usually a float.  I find this to be a bad API, as it is harder to assign meaning to it.  Sure, it allows for ranking of scores, but it still doesn't give any meaning of the significance of one ranking above the other.\nThe other API's I've seen don't apply the confidence levels as much.  I received as feedback that it was a missed opportunity in APIs to do this more consistently. \n\nOn 2013/03/08 21:25:31, r wrote:\n> where did the decision to have four levels come from? it's a reasonable decision\n> but i'm curious if it mimics other libraries\n\nhttps://codereview.appspot.com/7459046/diff/5001/locale/locale.go#newcode74\nlocale/locale.go:74: // String returns the canonical string representation of l.\nOn 2013/03/08 21:25:31, r wrote:\n> \"of l\" etc. reads funny. please rewrite this and others to be \"of the locale\".\n\nDone.\n\nhttps://codereview.appspot.com/7459046/diff/5001/locale/locale.go#newcode274\nlocale/locale.go:274: // Scope returns a Set of all pre-defined sublocales applicable to r.\nOn 2013/03/08 21:25:31, r wrote:\n> s/to r/to the region/ etc. etc.\n\nDone.",
			"disapproval": false,
			"date": "2013-03-27 11:23:24.693130",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\napologies for the delay - i thought it was already done",
			"disapproval": false,
			"date": "2013-04-02 17:58:41.823950",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=709ef3cb906a&repo=exp ***\n\ngo.exp/locale: proposed API for Locale type.\n\n(Moved from exp/locale.)\n\nR=r\nCC=golang-dev\nhttps://codereview.appspot.com/7459046",
			"disapproval": false,
			"date": "2013-04-04 12:01:20.307050",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 7459046: go.exp/locale: proposed API for Locale type.",
	"created": "2013-03-04 18:13:54.881220",
	"patchsets": [
		1,
		2001,
		5001,
		11001,
		14001,
		19001,
		23001,
		28001,
		31001
	],
	"modified": "2013-04-04 12:01:21.593110",
	"closed": true,
	"issue": 7459046
}