{
	"description": "net: use windows sysSocket everywhere",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"dave@cheney.net"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-02-04 04:53:10.356290",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"dave@cheney.net",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=37eb20122f4c ***\n\nnet: use windows sysSocket everywhere\n\nR=golang-dev, bradfitz, dave\nCC=golang-dev\nhttps://codereview.appspot.com/7273046",
			"disapproval": false,
			"date": "2013-02-04 05:03:47.904050",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Sun, Feb 3, 2013 at 8:53 PM, <alex.brainman@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev_googlegroups.com,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> net: use windows sysSocket everywhere\r\n>\r\n> Please review this at https://codereview.appspot.**com/7273046/<https://codereview.appspot.com/7273046/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/net/fd_windows.go\r\n>   M src/pkg/net/interface_windows.**go\r\n>\r\n>\r\n> Index: src/pkg/net/fd_windows.go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/fd_windows.go\r\n> +++ b/src/pkg/net/fd_windows.go\r\n> @@ -619,15 +619,10 @@\r\n>         defer fd.decref()\r\n>\r\n>         // Get new socket.\r\n> -       // See ../syscall/exec_unix.go for description of ForkLock.\r\n> -       syscall.ForkLock.RLock()\r\n> -       s, err := syscall.Socket(fd.family, fd.sotype, 0)\r\n> +       s, err := sysSocket(fd.family, fd.sotype, 0)\r\n>         if err != nil {\r\n> -               syscall.ForkLock.RUnlock()\r\n>                 return nil, &OpError{\"socket\", fd.net, fd.laddr, err}\r\n>         }\r\n> -       syscall.CloseOnExec(s)\r\n> -       syscall.ForkLock.RUnlock()\r\n>\r\n>         // Associate our new socket with IOCP.\r\n>         onceStartServer.Do(**startServer)\r\n> Index: src/pkg/net/interface_windows.**go\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/net/interface_**windows.go\r\n> +++ b/src/pkg/net/interface_**windows.go\r\n> @@ -38,7 +38,7 @@\r\n>  }\r\n>\r\n>  func getInterfaceList() ([]syscall.InterfaceInfo, error) {\r\n> -       s, err := syscall.Socket(syscall.AF_**INET, syscall.SOCK_DGRAM,\r\n> syscall.IPPROTO_UDP)\r\n> +       s, err := sysSocket(syscall.AF_INET, syscall.SOCK_DGRAM,\r\n> syscall.IPPROTO_UDP)\r\n>         if err != nil {\r\n>                 return nil, os.NewSyscallError(\"Socket\", err)\r\n>         }\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-04 04:57:59.122360",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM. Nice\r\n\r\nOn Mon, Feb 4, 2013 at 3:57 PM, Brad Fitzpatrick <bradfitz@golang.org> wrote:\r\n> LGTM\r\n>\r\n>\r\n> On Sun, Feb 3, 2013 at 8:53 PM, <alex.brainman@gmail.com> wrote:\r\n>>\r\n>> Reviewers: golang-dev_googlegroups.com,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com,\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://go.googlecode.com/hg/\r\n>>\r\n>>\r\n>> Description:\r\n>> net: use windows sysSocket everywhere\r\n>>\r\n>> Please review this at https://codereview.appspot.com/7273046/\r\n>>\r\n>> Affected files:\r\n>>   M src/pkg/net/fd_windows.go\r\n>>   M src/pkg/net/interface_windows.go\r\n>>\r\n>>\r\n>> Index: src/pkg/net/fd_windows.go\r\n>> ===================================================================\r\n>> --- a/src/pkg/net/fd_windows.go\r\n>> +++ b/src/pkg/net/fd_windows.go\r\n>> @@ -619,15 +619,10 @@\r\n>>         defer fd.decref()\r\n>>\r\n>>         // Get new socket.\r\n>> -       // See ../syscall/exec_unix.go for description of ForkLock.\r\n>> -       syscall.ForkLock.RLock()\r\n>> -       s, err := syscall.Socket(fd.family, fd.sotype, 0)\r\n>> +       s, err := sysSocket(fd.family, fd.sotype, 0)\r\n>>         if err != nil {\r\n>> -               syscall.ForkLock.RUnlock()\r\n>>                 return nil, &OpError{\"socket\", fd.net, fd.laddr, err}\r\n>>         }\r\n>> -       syscall.CloseOnExec(s)\r\n>> -       syscall.ForkLock.RUnlock()\r\n>>\r\n>>         // Associate our new socket with IOCP.\r\n>>         onceStartServer.Do(startServer)\r\n>> Index: src/pkg/net/interface_windows.go\r\n>> ===================================================================\r\n>> --- a/src/pkg/net/interface_windows.go\r\n>> +++ b/src/pkg/net/interface_windows.go\r\n>> @@ -38,7 +38,7 @@\r\n>>  }\r\n>>\r\n>>  func getInterfaceList() ([]syscall.InterfaceInfo, error) {\r\n>> -       s, err := syscall.Socket(syscall.AF_INET, syscall.SOCK_DGRAM,\r\n>> syscall.IPPROTO_UDP)\r\n>> +       s, err := sysSocket(syscall.AF_INET, syscall.SOCK_DGRAM,\r\n>> syscall.IPPROTO_UDP)\r\n>>         if err != nil {\r\n>>                 return nil, os.NewSyscallError(\"Socket\", err)\r\n>>         }\r\n>>\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@googlegroups.com.\r\n>> For more options, visit https://groups.google.com/groups/opt_out.\r\n>>\r\n>>\r\n>\r\n> --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-02-04 05:00:07.610440",
			"approval": true
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 7273046: net: use windows sysSocket everywhere",
	"created": "2013-02-04 04:51:44.089570",
	"patchsets": [
		1,
		2001,
		5001,
		8002
	],
	"modified": "2013-02-04 05:03:50.447750",
	"closed": true,
	"issue": 7273046
}