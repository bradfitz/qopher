{
	"description": "time: add Location.Parse\n\nFixes issue 3653",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org",
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-02-03 21:58:16.357140",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 4 February 2013 12:06, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> If we make Parse a method on Location, then it becomes impossible to have\r\n> a time.Time in your program without also linking in the Parse code.\r\n\r\n\r\nAh, I see. Thanks.\r\n",
			"disapproval": false,
			"date": "2013-02-04 01:11:48.218380",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"adg@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-02-04 04:57:25.594540",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 4 February 2013 11:37, Russ Cox <rsc@golang.org> wrote:\r\n\r\n> Can it be func ParseInLocation instead? Location is required for using the\r\n> time package, but Parse is not. If we make Parse a method on Location it\r\n> becomes impossible to compile a binary without this code linked in.\r\n\r\n\r\nI might be being dense, but I don't understand this at all.\r\n\r\nParse or ParseInLocation each return a time.Time, so the code needs to be\r\nlinked in regardless. Or do you mean that time.Location and its methods\r\nmust be linked in?\r\n",
			"disapproval": false,
			"date": "2013-02-04 00:58:26.440690",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Can it be func ParseInLocation instead? Location is required for using the\r\ntime package, but Parse is not. If we make Parse a method on Location it\r\nbecomes impossible to compile a binary without this code linked in.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-02-04 00:37:10.056760",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Actually, I think the differences are a little more subtle. I'll include\r\nthe function in another time CL I am preparing.\r\n",
			"disapproval": false,
			"date": "2013-02-04 00:45:59.774310",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I mean that if you have a time.Time in your program, then by necessity you\r\nhave the code for time.Location, because time.Time's Location method\r\nreturns a time.Location. If we make Parse a method on Location, then it\r\nbecomes impossible to have a time.Time in your program without also linking\r\nin the Parse code. Right now you only have the Parse code in your program\r\nif you explicitly ask for it. It is a tiny thing, but it seems worth\r\npreserving. Also, it turns out that time.Parse and time.ParseInLocation\r\nhave slightly different semantics, so even if we did put a Parse method on\r\nLocation, time.Parse != time.Local.Parse. I'd rather use a different name\r\nfor something with different semantics.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-02-04 01:06:48.716250",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 7278049: time: add Location.Parse",
	"created": "2013-02-03 21:58:02.489000",
	"patchsets": [
		1,
		2001,
		4001,
		6001
	],
	"modified": "2013-02-04 04:57:27.136750",
	"closed": true,
	"issue": 7278049
}