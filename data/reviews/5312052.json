{
	"description": "http: add package comment\n\nFixes issue 2378",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-24 20:02:45.419212",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "PTAL\n\nRe-uploaded.\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go\nFile src/pkg/http/doc.go (right):\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode8\nsrc/pkg/http/doc.go:8: To use the HTTP client, use one of the high-level functions Get, Head,\nOn 2011/10/24 20:17:09, rsc wrote:\n> Get, Head, Post, and PostForm make HTTP requests:\n\nDone.\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode11\nsrc/pkg/http/doc.go:11: resp, err := http.Get(\"http://example.com/\")\nOn 2011/10/24 20:17:09, rsc wrote:\n> Please indent with tabs, so that it's easy to pick up and\n> drop into programs.\n\nDone.\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode18\nsrc/pkg/http/doc.go:18: The Response.Body should be closed after it's been read. Client code\nOn 2011/10/24 20:17:09, rsc wrote:\n> The client must close the response body when finished with it:\n\nDone.\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode29\nsrc/pkg/http/doc.go:29: A lower-level interface to the HTTP client is available by creating your\nOn 2011/10/24 20:17:09, rsc wrote:\n> For control over HTTP client headers or TLS settings, create a Transport and\n> Client:\n\nThis was the only feedback that felt awkward, implying you had to create both.  It also highlighted that I didn't have a custom header example (showing Do, which comes up frequently enough on the list).\n\nI broke it into a custom Client and custom Transport section.\n\nI also documented that it's thread-safe.\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode41\nsrc/pkg/http/doc.go:41: To use the HTTP server, use ListenAndServe with an address and\nOn 2011/10/24 20:17:09, rsc wrote:\n> ListenAndServe starts an HTTP server with a given address and handler.\n> The handler is usually nil, which means to use DefaultServeMux.\n> Handle and HandleFunc add handlers to DefaultServeMux:\n\nDone.\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode43\nsrc/pkg/http/doc.go:43: DefaultServeMux is used.  The functions Handle and HandleFunc register\nOn 2011/10/24 20:17:09, rsc wrote:\n> s/The functions //\n\nDone.",
			"disapproval": false,
			"date": "2011-10-24 20:49:03.442670",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nVery nice.\nCan shorten the text a bit.\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go\nFile src/pkg/http/doc.go (right):\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode8\nsrc/pkg/http/doc.go:8: To use the HTTP client, use one of the high-level functions Get, Head,\nGet, Head, Post, and PostForm make HTTP requests:\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode11\nsrc/pkg/http/doc.go:11: resp, err := http.Get(\"http://example.com/\")\nPlease indent with tabs, so that it's easy to pick up and\ndrop into programs.\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode18\nsrc/pkg/http/doc.go:18: The Response.Body should be closed after it's been read. Client code\nThe client must close the response body when finished with it:\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode29\nsrc/pkg/http/doc.go:29: A lower-level interface to the HTTP client is available by creating your\nFor control over HTTP client headers or TLS settings, create a Transport and Client:\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode41\nsrc/pkg/http/doc.go:41: To use the HTTP server, use ListenAndServe with an address and\nListenAndServe starts an HTTP server with a given address and handler.\nThe handler is usually nil, which means to use DefaultServeMux.\nHandle and HandleFunc add handlers to DefaultServeMux:\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode43\nsrc/pkg/http/doc.go:43: DefaultServeMux is used.  The functions Handle and HandleFunc register\ns/The functions //\n\nhttp://codereview.appspot.com/5312052/diff/2001/src/pkg/http/doc.go#newcode55\nsrc/pkg/http/doc.go:55: More control over the server's behavior is available by creating a\nFor control over timeouts and other settings, create a Server:",
			"disapproval": false,
			"date": "2011-10-24 20:17:09.697101",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n\nFantastic.",
			"disapproval": false,
			"date": "2011-10-24 20:57:49.613430",
			"approval": true
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=281afa375702 ***\n\nhttp: add package comment\n\nFixes issue 2378\n\nR=rsc\nCC=golang-dev\nhttp://codereview.appspot.com/5312052",
			"disapproval": false,
			"date": "2011-10-24 20:59:38.384859",
			"approval": false
		}
	],
	"owner_email": "bradfitz@golang.org",
	"private": false,
	"base_url": "",
	"owner": "bradfitz",
	"subject": "code review 5312052: http: add package comment",
	"created": "2011-10-24 20:02:31.355396",
	"patchsets": [
		1,
		2001,
		7001,
		10001
	],
	"modified": "2011-10-24 20:59:39.262405",
	"closed": true,
	"issue": 5312052
}