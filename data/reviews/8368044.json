{
	"description": "runtime: replace union in MHeap with a struct\nUnions break precise GC.\nUpdate issue 5193.",
	"cc": [
		"golang-dev@googlegroups.com",
		"iant@golang.org"
	],
	"reviewers": [
		"bradfitz@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-04-07 01:34:22.906490",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-04-07 03:00:21.395960",
			"approval": true
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b127aaab80eb ***\n\nruntime: replace union in MHeap with a struct\nUnions break precise GC.\nUpdate issue 5193.\n\nR=golang-dev, iant\nCC=golang-dev\nhttps://codereview.appspot.com/8368044",
			"disapproval": false,
			"date": "2013-04-07 03:02:07.495130",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8368044/diff/12001/src/pkg/runtime/malloc.h\nFile src/pkg/runtime/malloc.h (right):\n\nhttps://codereview.appspot.com/8368044/diff/12001/src/pkg/runtime/malloc.h#newcode424\nsrc/pkg/runtime/malloc.h:424: byte pad[CacheLineSize];\nwhy don't you adjust for sizeof(MCentral) like you did elsewhere, now that it's a struct instead of a union?",
			"disapproval": false,
			"date": "2013-04-07 03:31:23.542700",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/8368044/diff/12001/src/pkg/runtime/malloc.h\nFile src/pkg/runtime/malloc.h (right):\n\nhttps://codereview.appspot.com/8368044/diff/12001/src/pkg/runtime/malloc.h#newcode424\nsrc/pkg/runtime/malloc.h:424: byte pad[CacheLineSize];\nOn 2013/04/07 03:31:23, bradfitz wrote:\n> why don't you adjust for sizeof(MCentral) like you did elsewhere, now that it's\n> a struct instead of a union?\n\nActually this version is correct and all others are not (but they were incorrect before, so it's fine :)). If you use pad[CacheLineSize-sizeof(X)], then it only works if the array starts at cache line boundary. If it is not, then end one element is collocated in the same cache line with beginning of the next.\nIf the array is not aligned to cache line boundary then you need to use pad[CacheLineSize] to separate them for sure.",
			"disapproval": false,
			"date": "2013-04-07 03:37:17.255140",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 8368044: runtime: replace union in MHeap with a struct",
	"created": "2013-04-07 01:33:38.585270",
	"patchsets": [
		1,
		2001,
		4001,
		9001,
		12001
	],
	"modified": "2013-04-07 03:37:17.721210",
	"closed": true,
	"issue": 8368044
}