{
	"description": "exp/norm: a few minor changes in prepration for a table format change:\n - Unified bounary conditions for NFC and NFD and removed some indirections.\n   This enforces boundaries at the character level, which is typically what\n   the user expects. (NFD allows a boundary between 'a' and '`', for example,\n   which may give unexpected results for collation.  The current implementation\n   is already stricter than the standard, so nothing much changes.  This change\n   just formalizes it.\n - Moved methods of qcflags to runeInfo.\n - Swapped YesC and YesMaybe bits in qcFlags. This is to aid future changes.\n - runeInfo return values use named fields in preperation for struct change.\n - Replaced some left-over uint32s with rune.",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg",
			"disapproval": false,
			"date": "2012-02-01 14:41:24.992316",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-02-01 18:03:39.325295",
			"approval": true
		},
		{
			"sender": "mpvl@golang.org",
			"recipients": [
				"mpvl@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=1b6e7832103e ***\n\nexp/norm: a few minor changes in prepration for a table format change:\n - Unified bounary conditions for NFC and NFD and removed some indirections.\n   This enforces boundaries at the character level, which is typically what\n   the user expects. (NFD allows a boundary between 'a' and '`', for example,\n   which may give unexpected results for collation.  The current implementation\n   is already stricter than the standard, so nothing much changes.  This change\n   just formalizes it.\n - Moved methods of qcflags to runeInfo.\n - Swapped YesC and YesMaybe bits in qcFlags. This is to aid future changes.\n - runeInfo return values use named fields in preperation for struct change.\n - Replaced some left-over uint32s with rune.\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/5607050",
			"disapproval": false,
			"date": "2012-02-02 12:55:58.712879",
			"approval": false
		}
	],
	"owner_email": "mpvl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "mpvl",
	"subject": "code review 5607050: exp/norm: a few minor changes in prepration for a table...",
	"created": "2012-02-01 14:40:11.113663",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2012-02-02 12:55:59.820888",
	"closed": true,
	"issue": 5607050
}