{
	"description": "runtime: do not mark os memory as executable on windows",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"khr@google.com"
	],
	"reviewers": [
		"dave@cheney.net"
	],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-05-17 02:54:00.170100",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\n\r\n\r\nOn Thu, May 16, 2013 at 7:54 PM, <alex.brainman@gmail.com> wrote:\r\n\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://go.googlecode.com/hg/\r\n>\r\n>\r\n> Description:\r\n> runtime: do not mark os memory as executable on windows\r\n>\r\n> Please review this at https://codereview.appspot.**com/9235046/<https://codereview.appspot.com/9235046/>\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/mem_windows.c\r\n>\r\n>\r\n> Index: src/pkg/runtime/mem_windows.c\r\n> ==============================**==============================**=======\r\n> --- a/src/pkg/runtime/mem_windows.**c\r\n> +++ b/src/pkg/runtime/mem_windows.**c\r\n> @@ -13,6 +13,7 @@\r\n>         MEM_RESERVE = 0x2000,\r\n>         MEM_RELEASE = 0x8000,\r\n>\r\n> +       PAGE_READWRITE = 0x0004,\r\n>         PAGE_EXECUTE_READWRITE = 0x40,\r\n>  };\r\n>\r\n> @@ -25,7 +26,7 @@\r\n>  runtime\u00b7SysAlloc(uintptr n)\r\n>  {\r\n>         mstats.sys += n;\r\n> -       return runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, nil, n,\r\n> (uintptr)(MEM_COMMIT|MEM_**RESERVE), (uintptr)PAGE_EXECUTE_**READWRITE);\r\n> +       return runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, nil, n,\r\n> (uintptr)(MEM_COMMIT|MEM_**RESERVE), (uintptr)PAGE_READWRITE);\r\n>  }\r\n>\r\n>  void\r\n> @@ -51,12 +52,12 @@\r\n>  {\r\n>         // v is just a hint.\r\n>         // First try at v.\r\n> -       v = runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, v, n,\r\n> (uintptr)MEM_RESERVE, (uintptr)PAGE_EXECUTE_**READWRITE);\r\n> +       v = runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, v, n,\r\n> (uintptr)MEM_RESERVE, (uintptr)PAGE_READWRITE);\r\n>         if(v != nil)\r\n>                 return v;\r\n>\r\n>         // Next let the kernel choose the address.\r\n> -       return runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, nil, n,\r\n> (uintptr)MEM_RESERVE, (uintptr)PAGE_EXECUTE_**READWRITE);\r\n> +       return runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, nil, n,\r\n> (uintptr)MEM_RESERVE, (uintptr)PAGE_READWRITE);\r\n>  }\r\n>\r\n>  void\r\n> @@ -65,7 +66,7 @@\r\n>         void *p;\r\n>\r\n>         mstats.sys += n;\r\n> -       p = runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, v, n,\r\n> (uintptr)MEM_COMMIT, (uintptr)PAGE_EXECUTE_**READWRITE);\r\n> +       p = runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, v, n,\r\n> (uintptr)MEM_COMMIT, (uintptr)PAGE_READWRITE);\r\n>         if(p != v)\r\n>                 runtime\u00b7throw(\"runtime: cannot map pages in arena address\r\n> space\");\r\n>  }\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google\r\n> Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n> .\r\n> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n> .\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-17 03:17:49.786710",
			"approval": true
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"khr@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/17 03:26:17, khr1 wrote:\n> Is it worth calling GetSystemDEPPolicy/SetProcessDEPPolicy to make sure we\n> get it even if it is off for the host OS? ...\n\nI am not Windows expert - I don't know. I would leave it as is until one day we have a real issue.\n\nAlex",
			"disapproval": false,
			"date": "2013-05-17 03:38:06.913410",
			"approval": false
		},
		{
			"sender": "khr@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Is it worth calling GetSystemDEPPolicy/SetProcessDEPPolicy to make sure we\r\nget it even if it is off for the host OS?  Or is it on by default for all\r\nWindowsen we care about?\r\n\r\n\r\nOn Thu, May 16, 2013 at 8:17 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> LGTM\r\n>\r\n>\r\n>\r\n> On Thu, May 16, 2013 at 7:54 PM, <alex.brainman@gmail.com> wrote:\r\n>\r\n>> Reviewers: golang-dev1,\r\n>>\r\n>> Message:\r\n>> Hello golang-dev@googlegroups.com,\r\n>>\r\n>> I'd like you to review this change to\r\n>> https://go.googlecode.com/hg/\r\n>>\r\n>>\r\n>> Description:\r\n>> runtime: do not mark os memory as executable on windows\r\n>>\r\n>> Please review this at https://codereview.appspot.**com/9235046/<https://codereview.appspot.com/9235046/>\r\n>>\r\n>> Affected files:\r\n>>   M src/pkg/runtime/mem_windows.c\r\n>>\r\n>>\r\n>> Index: src/pkg/runtime/mem_windows.c\r\n>> ==============================**==============================**=======\r\n>> --- a/src/pkg/runtime/mem_windows.**c\r\n>> +++ b/src/pkg/runtime/mem_windows.**c\r\n>> @@ -13,6 +13,7 @@\r\n>>         MEM_RESERVE = 0x2000,\r\n>>         MEM_RELEASE = 0x8000,\r\n>>\r\n>> +       PAGE_READWRITE = 0x0004,\r\n>>         PAGE_EXECUTE_READWRITE = 0x40,\r\n>>  };\r\n>>\r\n>> @@ -25,7 +26,7 @@\r\n>>  runtime\u00b7SysAlloc(uintptr n)\r\n>>  {\r\n>>         mstats.sys += n;\r\n>> -       return runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, nil, n,\r\n>> (uintptr)(MEM_COMMIT|MEM_**RESERVE), (uintptr)PAGE_EXECUTE_**READWRITE);\r\n>> +       return runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, nil, n,\r\n>> (uintptr)(MEM_COMMIT|MEM_**RESERVE), (uintptr)PAGE_READWRITE);\r\n>>  }\r\n>>\r\n>>  void\r\n>> @@ -51,12 +52,12 @@\r\n>>  {\r\n>>         // v is just a hint.\r\n>>         // First try at v.\r\n>> -       v = runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, v, n,\r\n>> (uintptr)MEM_RESERVE, (uintptr)PAGE_EXECUTE_**READWRITE);\r\n>> +       v = runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, v, n,\r\n>> (uintptr)MEM_RESERVE, (uintptr)PAGE_READWRITE);\r\n>>         if(v != nil)\r\n>>                 return v;\r\n>>\r\n>>         // Next let the kernel choose the address.\r\n>> -       return runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, nil, n,\r\n>> (uintptr)MEM_RESERVE, (uintptr)PAGE_EXECUTE_**READWRITE);\r\n>> +       return runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, nil, n,\r\n>> (uintptr)MEM_RESERVE, (uintptr)PAGE_READWRITE);\r\n>>  }\r\n>>\r\n>>  void\r\n>> @@ -65,7 +66,7 @@\r\n>>         void *p;\r\n>>\r\n>>         mstats.sys += n;\r\n>> -       p = runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, v, n,\r\n>> (uintptr)MEM_COMMIT, (uintptr)PAGE_EXECUTE_**READWRITE);\r\n>> +       p = runtime\u00b7stdcall(runtime\u00b7**VirtualAlloc, 4, v, n,\r\n>> (uintptr)MEM_COMMIT, (uintptr)PAGE_READWRITE);\r\n>>         if(p != v)\r\n>>                 runtime\u00b7throw(\"runtime: cannot map pages in arena address\r\n>> space\");\r\n>>  }\r\n>>\r\n>>\r\n>> --\r\n>>\r\n>> ---You received this message because you are subscribed to the Google\r\n>> Groups \"golang-dev\" group.\r\n>> To unsubscribe from this group and stop receiving emails from it, send an\r\n>> email to golang-dev+unsubscribe@**googlegroups.com<golang-dev%2Bunsubscribe@googlegroups.com>\r\n>> .\r\n>> For more options, visit https://groups.google.com/**groups/opt_out<https://groups.google.com/groups/opt_out>\r\n>> .\r\n>>\r\n>>\r\n>>\r\n>  --\r\n>\r\n> ---\r\n> You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-05-17 03:26:17.509090",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"khr@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3c2cddfbdaec ***\n\nruntime: do not mark os memory as executable on windows\n\nR=golang-dev, bradfitz, khr\nCC=golang-dev\nhttps://codereview.appspot.com/9235046",
			"disapproval": false,
			"date": "2013-05-17 03:37:42.409650",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Sounds reasonable to me. \r\n\r\nOn 17/05/2013, at 13:38, alex.brainman@gmail.com wrote:\r\n\r\n> On 2013/05/17 03:26:17, khr1 wrote:\r\n>> Is it worth calling GetSystemDEPPolicy/SetProcessDEPPolicy to make\r\n> sure we\r\n>> get it even if it is off for the host OS? ...\r\n> \r\n> I am not Windows expert - I don't know. I would leave it as is until one\r\n> day we have a real issue.\r\n> \r\n> Alex\r\n> \r\n> https://codereview.appspot.com/9235046/\r\n> \r\n> -- \r\n> \r\n> ---You received this message because you are subscribed to the Google Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n> \r\n> \r\n",
			"disapproval": false,
			"date": "2013-05-17 03:39:05.752630",
			"approval": false
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 9235046: runtime: do not mark os memory as executable on windows",
	"created": "2013-05-17 02:34:44.091970",
	"patchsets": [
		1,
		3,
		4001,
		9002
	],
	"modified": "2013-05-17 03:39:05.879970",
	"closed": true,
	"issue": 9235046
}