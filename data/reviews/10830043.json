{
	"description": "go.tools/ssa: use go/types.LookupFieldOrMethod, and simplify.\n\nAdded tests.",
	"cc": [
		"golang-dev@googlegroups.com",
		"gri@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-07-01 17:08:28.913060",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/10830043/diff/6001/ssa/builder.go\nFile ssa/builder.go (right):\n\nhttps://codereview.appspot.com/10830043/diff/6001/ssa/builder.go#newcode338\nssa/builder.go:338: obj, indices, isIndirect := types.LookupFieldOrMethod(tx, fn.Pkg.Types, e.Sel.Name)\nfn.Pkg.Types doesn't sound like a package to me\n\nhttps://codereview.appspot.com/10830043/diff/6001/ssa/builder.go#newcode339\nssa/builder.go:339: if obj == nil || len(indices) == 0 {\nobj == nil is sufficient\n\nhttps://codereview.appspot.com/10830043/diff/6001/ssa/builder.go#newcode359\nssa/builder.go:359: // Apply field selections.\nIs this method only for field selections in structs (no methods)? Could be clearer in the beginning or comment.\n\nhttps://codereview.appspot.com/10830043/diff/6001/ssa/builder.go#newcode360\nssa/builder.go:360: st := tx.Deref().Underlying().(*types.Struct)\nI believe types.Deref is wrong here. If tx is a named type to a pointer, Deref will do the wrong thing.",
			"disapproval": false,
			"date": "2013-07-01 17:30:07.506220",
			"approval": true
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/10830043/diff/6001/ssa/builder.go\nFile ssa/builder.go (right):\n\nhttps://codereview.appspot.com/10830043/diff/6001/ssa/builder.go#newcode338\nssa/builder.go:338: obj, indices, isIndirect := types.LookupFieldOrMethod(tx, fn.Pkg.Types, e.Sel.Name)\nOn 2013/07/01 17:30:07, gri wrote:\n> fn.Pkg.Types doesn't sound like a package to me\n\n\nAgreed---see my other (renaming) CL.\n\nhttps://codereview.appspot.com/10830043/diff/6001/ssa/builder.go#newcode339\nssa/builder.go:339: if obj == nil || len(indices) == 0 {\nOn 2013/07/01 17:30:07, gri wrote:\n> obj == nil is sufficient\n\nDone.\n\nhttps://codereview.appspot.com/10830043/diff/6001/ssa/builder.go#newcode359\nssa/builder.go:359: // Apply field selections.\nOn 2013/07/01 17:30:07, gri wrote:\n> Is this method only for field selections in structs (no methods)? Could be\n> clearer in the beginning or comment.\n\nYes.  Done.  (Renamed to: \"selectField\".)\n\nCalled methods are found by looking in the method set.  Bound method closures are (now) handled in by expr(*ast.SelectorExpr).\n\nPerhaps there's more simplification/unification to do; let's take small steps though.\n\nhttps://codereview.appspot.com/10830043/diff/6001/ssa/builder.go#newcode360\nssa/builder.go:360: st := tx.Deref().Underlying().(*types.Struct)\nOn 2013/07/01 17:30:07, gri wrote:\n> I believe types.Deref is wrong here. If tx is a named type to a pointer, Deref\n> will do the wrong thing.\n\nI think it would be wrong if you changed Deref in the way you proposed recently, but its current spec does what I want:\n\n\t// For a pointer type (or a named type denoting a pointer type),\n\t// Deref returns the pointer's element type. For all other types,\n\t// Deref returns the receiver.\n\nFWIW: isPointer() <=> t.Deref() != t",
			"disapproval": false,
			"date": "2013-07-01 19:15:55.525900",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"adonovan@google.com",
				"golang-dev@googlegroups.com",
				"gri@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b9afa73c0994&repo=tools ***\n\ngo.tools/ssa: use go/types.LookupFieldOrMethod, and simplify.\n\nAdded tests.\n\nR=golang-dev, gri\nCC=golang-dev\nhttps://codereview.appspot.com/10830043",
			"disapproval": false,
			"date": "2013-07-01 19:17:38.969360",
			"approval": false
		}
	],
	"owner_email": "adonovan@google.com",
	"private": false,
	"base_url": "",
	"owner": "adonovan",
	"subject": "code review 10830043: go.tools/ssa: use go/types.LookupFieldOrMethod, and sim...",
	"created": "2013-07-01 17:04:48.848620",
	"patchsets": [
		1,
		3001,
		6001,
		13001
	],
	"modified": "2013-07-01 19:17:40.178480",
	"closed": true,
	"issue": 10830043
}