{
	"description": "go.crypto: various: fix appengine compatibility\n\nFixes issue 4102.",
	"cc": [
		"russross@gmail.com",
		"minux.ma@gmail.com",
		"rsc@golang.org",
		"agl@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/6623053/diff/5001/ssh/terminal/util.go\nFile ssh/terminal/util.go (right):\n\nhttps://codereview.appspot.com/6623053/diff/5001/ssh/terminal/util.go#newcode5\nssh/terminal/util.go:5: // +build linux,!appengine\nIf these functions are used from other packages in go.crypto, then you'll want a separate appengine.go that has // +build appengine that provides stubs.",
			"disapproval": false,
			"date": "2012-10-07 14:12:08.038780",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello russross@gmail.com, minux.ma@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-08 07:09:54.349460",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-10-07 11:25:46.670770",
			"approval": true
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hi Russ,\r\n\r\nI think I can fix those remaining issues as well, I'll rename this CL,\r\nand roll those fixes in as well (not sure about the go vet one :/)\r\n\r\nCheers\r\n\r\nDave\r\n\r\nOn Mon, Oct 8, 2012 at 11:02 AM, Russ Ross <russross@gmail.com> wrote:\r\n> On Sun, Oct 7, 2012 at 5:59 PM,  <dave@cheney.net> wrote:\r\n>> On 2012/10/07 23:50:12, russross wrote:\r\n>>>\r\n>>> > I've tested this in appengine 1.7.2 dev_server by copying\r\n>>> > code.google.com/p/go.crypto into the helloworld demo app.\r\n>>\r\n>>\r\n>>> I copied a fresh clone of code.google.com/p/go.crypto (changeset\r\n>>> 79:33051f713476) into my app and applied the patch to\r\n>>\r\n>> ssh/terminal/util.go.  I\r\n>>>\r\n>>> didn't see any errors related to util.go, but I did get:\r\n>>\r\n>>\r\n>>> 2012/10/07 17:28:09\r\n>>\r\n>> /.../code.google.com/p/go.crypto/ssh/client.go:415:10:\r\n>>>\r\n>>> composite struct literal net.TCPAddr with untagged fields\r\n>>\r\n>>\r\n>>> I changed the offending line from:\r\n>>>         return &net.TCPAddr{ip, int(port)}, b, true\r\n>>> to:\r\n>>>         return &net.TCPAddr{IP: ip, Port: int(port)}, b, true\r\n>>> and tried again.  This time I got:\r\n>>\r\n>>\r\n>>> ... ERROR Compile error:\r\n>>> syscall.errors:\r\n>>> code.google.com/p/go.crypto/salsa20/salsa.salsa2020XORKeyStream(0):\r\n>>\r\n>> not defined\r\n>>\r\n>>> I should note that I am using the amd64 version of the appengine SDK.\r\n>>\r\n>> The\r\n>>>\r\n>>> salsa20/salsa package appears to define a reference version and an\r\n>>\r\n>> assembly\r\n>>>\r\n>>> version for amd64.  A build directive in\r\n>>\r\n>> salsa20/salsa/salsa20_ref.go:5 disables\r\n>>>\r\n>>> building it for amd64, and I'm assuming the app engine SDK disables\r\n>>\r\n>> building the\r\n>>>\r\n>>> _amd64.* files.\r\n>>\r\n>>\r\n>>> If I delete the _amd64.* files from that directory, it breaks salsa20.\r\n>>\r\n>>  If I\r\n>>>\r\n>>> delete that (but leave salsa20/salsa/salsa208.go alone, because scrypt\r\n>>\r\n>> depends\r\n>>>\r\n>>> on it and that is my actual dependency), it breaks the go.crypto/nacl\r\n>>\r\n>> package.\r\n>>>\r\n>>> If I delete that, it finally works.\r\n>>\r\n>>\r\n>>> So that's the long way of saying the patch looks good, but the overall\r\n>>\r\n>> problem\r\n>>>\r\n>>> is still unresolved.  As far as I can tell, it would be fully resolved\r\n>>\r\n>> by fixing\r\n>>>\r\n>>> the untagged composite literal fields in ssh/client.go, and convincing\r\n>>\r\n>> the build\r\n>>>\r\n>>> system to use salsa20_ref.go on amd64 appengine.\r\n>>\r\n>>\r\n>>> All this has been from the development environment; I have not tried\r\n>>\r\n>> deploying.\r\n>>\r\n>> Thanks Russ. As a meta comment, the overarching issue is you used go get\r\n>> to get something in the go.crypto package and because of the way the\r\n>> repo is structured, it bought in a bunch of other code you didn't need.\r\n>> It is this code, which is not compatible with appengine, that is\r\n>> upsetting the dev server.\r\n>\r\n> That is true; I was using an older version of scrypt without problems\r\n> before it was merged into go.crypto.  The issue with amd64 in the\r\n> go.crypto/salsa package is in my direct line of dependencies, however,\r\n> so cherry picking packages would not help me there.\r\n>\r\n> Thanks,\r\n>\r\n> Russ\r\n",
			"disapproval": false,
			"date": "2012-10-08 03:19:50.632490",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/07 11:18:39, dfc wrote:\n> Hello mailto:russross@gmail.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> I'd like you to review this change to\n> https://code.google.com/p/go.crypto\n\nI've tested this in appengine 1.7.2 dev_server by copying code.google.com/p/go.crypto into the helloworld demo app.",
			"disapproval": false,
			"date": "2012-10-07 11:20:33.013070",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello russross@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.crypto",
			"disapproval": false,
			"date": "2012-10-07 11:18:39.014940",
			"approval": false
		},
		{
			"sender": "russross@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "> I've tested this in appengine 1.7.2 dev_server by copying\n> code.google.com/p/go.crypto into the helloworld demo app.\n\nI copied a fresh clone of code.google.com/p/go.crypto (changeset 79:33051f713476) into my app and applied the patch to ssh/terminal/util.go.  I didn't see any errors related to util.go, but I did get:\n\n2012/10/07 17:28:09 /.../code.google.com/p/go.crypto/ssh/client.go:415:10: composite struct literal net.TCPAddr with untagged fields\n\nI changed the offending line from:\n\treturn &net.TCPAddr{ip, int(port)}, b, true\nto:\n\treturn &net.TCPAddr{IP: ip, Port: int(port)}, b, true\nand tried again.  This time I got:\n\n... ERROR Compile error:\nsyscall.errors: code.google.com/p/go.crypto/salsa20/salsa.salsa2020XORKeyStream(0): not defined\n\nI should note that I am using the amd64 version of the appengine SDK.  The salsa20/salsa package appears to define a reference version and an assembly version for amd64.  A build directive in salsa20/salsa/salsa20_ref.go:5 disables building it for amd64, and I'm assuming the app engine SDK disables building the _amd64.* files.\n\nIf I delete the _amd64.* files from that directory, it breaks salsa20.  If I delete that (but leave salsa20/salsa/salsa208.go alone, because scrypt depends on it and that is my actual dependency), it breaks the go.crypto/nacl package.  If I delete that, it finally works.\n\nSo that's the long way of saying the patch looks good, but the overall problem is still unresolved.  As far as I can tell, it would be fully resolved by fixing the untagged composite literal fields in ssh/client.go, and convincing the build system to use salsa20_ref.go on amd64 appengine.\n\nAll this has been from the development environment; I have not tried deploying.",
			"disapproval": false,
			"date": "2012-10-07 23:50:12.086590",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thank you. I think this topic deserves more discussion, but there is\r\nno reason not to fix Russ' problem right now.\r\n\r\nOn Sun, Oct 7, 2012 at 10:25 PM,  <minux.ma@gmail.com> wrote:\r\n> LGTM.\r\n>\r\n> http://codereview.appspot.com/6623053/\r\n",
			"disapproval": false,
			"date": "2012-10-07 11:30:01.544090",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/07 23:50:12, russross wrote:\n> > I've tested this in appengine 1.7.2 dev_server by copying\n> > code.google.com/p/go.crypto into the helloworld demo app.\n> \n> I copied a fresh clone of code.google.com/p/go.crypto (changeset\n> 79:33051f713476) into my app and applied the patch to ssh/terminal/util.go.  I\n> didn't see any errors related to util.go, but I did get:\n> \n> 2012/10/07 17:28:09 /.../code.google.com/p/go.crypto/ssh/client.go:415:10:\n> composite struct literal net.TCPAddr with untagged fields\n> \n> I changed the offending line from:\n> \treturn &net.TCPAddr{ip, int(port)}, b, true\n> to:\n> \treturn &net.TCPAddr{IP: ip, Port: int(port)}, b, true\n> and tried again.  This time I got:\n> \n> ... ERROR Compile error:\n> syscall.errors:\n> code.google.com/p/go.crypto/salsa20/salsa.salsa2020XORKeyStream(0): not defined\n> \n> I should note that I am using the amd64 version of the appengine SDK.  The\n> salsa20/salsa package appears to define a reference version and an assembly\n> version for amd64.  A build directive in salsa20/salsa/salsa20_ref.go:5 disables\n> building it for amd64, and I'm assuming the app engine SDK disables building the\n> _amd64.* files.\n> \n> If I delete the _amd64.* files from that directory, it breaks salsa20.  If I\n> delete that (but leave salsa20/salsa/salsa208.go alone, because scrypt depends\n> on it and that is my actual dependency), it breaks the go.crypto/nacl package. \n> If I delete that, it finally works.\n> \n> So that's the long way of saying the patch looks good, but the overall problem\n> is still unresolved.  As far as I can tell, it would be fully resolved by fixing\n> the untagged composite literal fields in ssh/client.go, and convincing the build\n> system to use salsa20_ref.go on amd64 appengine.\n> \n> All this has been from the development environment; I have not tried deploying.\n\nThanks Russ. As a meta comment, the overarching issue is you used go get to get something in the go.crypto package and because of the way the repo is structured, it bought in a bunch of other code you didn't need. It is this code, which is not compatible with appengine, that is upsetting the dev server.",
			"disapproval": false,
			"date": "2012-10-07 23:59:02.069800",
			"approval": false
		},
		{
			"sender": "russross@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Sun, Oct 7, 2012 at 5:59 PM,  <dave@cheney.net> wrote:\r\n> On 2012/10/07 23:50:12, russross wrote:\r\n>>\r\n>> > I've tested this in appengine 1.7.2 dev_server by copying\r\n>> > code.google.com/p/go.crypto into the helloworld demo app.\r\n>\r\n>\r\n>> I copied a fresh clone of code.google.com/p/go.crypto (changeset\r\n>> 79:33051f713476) into my app and applied the patch to\r\n>\r\n> ssh/terminal/util.go.  I\r\n>>\r\n>> didn't see any errors related to util.go, but I did get:\r\n>\r\n>\r\n>> 2012/10/07 17:28:09\r\n>\r\n> /.../code.google.com/p/go.crypto/ssh/client.go:415:10:\r\n>>\r\n>> composite struct literal net.TCPAddr with untagged fields\r\n>\r\n>\r\n>> I changed the offending line from:\r\n>>         return &net.TCPAddr{ip, int(port)}, b, true\r\n>> to:\r\n>>         return &net.TCPAddr{IP: ip, Port: int(port)}, b, true\r\n>> and tried again.  This time I got:\r\n>\r\n>\r\n>> ... ERROR Compile error:\r\n>> syscall.errors:\r\n>> code.google.com/p/go.crypto/salsa20/salsa.salsa2020XORKeyStream(0):\r\n>\r\n> not defined\r\n>\r\n>> I should note that I am using the amd64 version of the appengine SDK.\r\n>\r\n> The\r\n>>\r\n>> salsa20/salsa package appears to define a reference version and an\r\n>\r\n> assembly\r\n>>\r\n>> version for amd64.  A build directive in\r\n>\r\n> salsa20/salsa/salsa20_ref.go:5 disables\r\n>>\r\n>> building it for amd64, and I'm assuming the app engine SDK disables\r\n>\r\n> building the\r\n>>\r\n>> _amd64.* files.\r\n>\r\n>\r\n>> If I delete the _amd64.* files from that directory, it breaks salsa20.\r\n>\r\n>  If I\r\n>>\r\n>> delete that (but leave salsa20/salsa/salsa208.go alone, because scrypt\r\n>\r\n> depends\r\n>>\r\n>> on it and that is my actual dependency), it breaks the go.crypto/nacl\r\n>\r\n> package.\r\n>>\r\n>> If I delete that, it finally works.\r\n>\r\n>\r\n>> So that's the long way of saying the patch looks good, but the overall\r\n>\r\n> problem\r\n>>\r\n>> is still unresolved.  As far as I can tell, it would be fully resolved\r\n>\r\n> by fixing\r\n>>\r\n>> the untagged composite literal fields in ssh/client.go, and convincing\r\n>\r\n> the build\r\n>>\r\n>> system to use salsa20_ref.go on amd64 appengine.\r\n>\r\n>\r\n>> All this has been from the development environment; I have not tried\r\n>\r\n> deploying.\r\n>\r\n> Thanks Russ. As a meta comment, the overarching issue is you used go get\r\n> to get something in the go.crypto package and because of the way the\r\n> repo is structured, it bought in a bunch of other code you didn't need.\r\n> It is this code, which is not compatible with appengine, that is\r\n> upsetting the dev server.\r\n\r\nThat is true; I was using an older version of scrypt without problems\r\nbefore it was merged into go.crypto.  The issue with amd64 in the\r\ngo.crypto/salsa package is in my direct line of dependencies, however,\r\nso cherry picking packages would not help me there.\r\n\r\nThanks,\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2012-10-08 00:03:27.179410",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6623053/diff/2005/salsa20/salsa/salsa20_ref.go\nFile salsa20/salsa/salsa20_ref.go (right):\n\nhttps://codereview.appspot.com/6623053/diff/2005/salsa20/salsa/salsa20_ref.go#newcode5\nsalsa20/salsa/salsa20_ref.go:5: // +build !amd64, appengine\ni think you want // +build !amd64 appengine",
			"disapproval": false,
			"date": "2012-10-08 08:06:01.870430",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello russross@gmail.com, minux.ma@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-10-08 09:58:11.836450",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/6623053/diff/2005/salsa20/salsa/salsa20_ref.go\nFile salsa20/salsa/salsa20_ref.go (right):\n\nhttps://codereview.appspot.com/6623053/diff/2005/salsa20/salsa/salsa20_ref.go#newcode5\nsalsa20/salsa/salsa20_ref.go:5: // +build !amd64, appengine\nOn 2012/10/08 08:06:02, minux wrote:\n> i think you want // +build !amd64 appengine\n\nYes, thank you.",
			"disapproval": false,
			"date": "2012-10-08 09:57:43.054740",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-10-08 14:31:51.799180",
			"approval": true
		},
		{
			"sender": "russross@gmail.com",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/10/08 09:58:11, dfc wrote:\n> Hello mailto:russross@gmail.com, mailto:minux.ma@gmail.com, mailto:rsc@golang.org (cc:\n> mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nThis one works great for me.\n\nThanks!",
			"disapproval": false,
			"date": "2012-10-08 16:37:48.943750",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"dave@cheney.net",
				"russross@gmail.com",
				"minux.ma@gmail.com",
				"rsc@golang.org",
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=29e4e1ec65e5&repo=crypto ***\n\ngo.crypto: various: fix appengine compatibility\n\nFixes issue 4102.\n\nR=russross, minux.ma, rsc, agl\nCC=golang-dev\nhttp://codereview.appspot.com/6623053",
			"disapproval": false,
			"date": "2012-10-09 02:15:48.476370",
			"approval": false
		}
	],
	"owner_email": "dave@cheney.net",
	"private": false,
	"base_url": "",
	"owner": "dfc",
	"subject": "code review 6623053: go.crypto: various: fix appengine compatibility",
	"created": "2012-10-07 11:17:02.307010",
	"patchsets": [
		1,
		2001,
		5001,
		2005,
		5003,
		16001
	],
	"modified": "2012-10-09 02:15:51.115030",
	"closed": true,
	"issue": 6623053
}