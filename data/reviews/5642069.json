{
	"description": "encoding/binary: slices are allowed; say so\n\nFixes issue 2629.",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org"
	],
	"reviewers": [
		"rsc@golang.org",
		"r@google.com"
	],
	"messages": [
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nOn Wed, Feb 8, 2012 at 4:35 PM, <r@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> encoding/binary: slices are allowed; say so\n>\n> Fixes issue 2629.\n>\n> Please review this at http://codereview.appspot.com/**5642069/<http://codereview.appspot.com/5642069/>\n>\n> Affected files:\n>  M src/pkg/encoding/binary/**binary.go\n>\n>\n> Index: src/pkg/encoding/binary/**binary.go\n> ==============================**==============================**=======\n> --- a/src/pkg/encoding/binary/**binary.go\n> +++ b/src/pkg/encoding/binary/**binary.go\n> @@ -117,11 +117,11 @@\n>  func (bigEndian) GoString() string { return \"binary.BigEndian\" }\n>\n>  // Read reads structured binary data from r into data.\n> -// Data must be a pointer to a fixed-size value or a slice\n> -// of fixed-size values.\n> -// A fixed-size value is either a fixed-size arithmetic\n> +// Data must be a pointer to a decodable value or a slice\n> +// of decodable values.\n> +// A decodable value is either a fixed-size arithmetic\n>  // type (int8, uint8, int16, float32, complex64, ...)\n> -// or an array or struct containing only fixed-size values.\n> +// or an array, slice or struct containing only decodable values.\n>  // Bytes read from r are decoded using the specified byte order\n>  // and written to successive fields of the data.\n>  func Read(r io.Reader, order ByteOrder, data interface{}) error {\n> @@ -176,11 +176,11 @@\n>  }\n>\n>  // Write writes the binary representation of data into w.\n> -// Data must be a fixed-size value or a pointer to\n> -// a fixed-size value.\n> -// A fixed-size value is either a fixed-size arithmetic\n> +// Data must be an encodable value or a pointer to\n> +// an encodable value.\n> +// An encodable value is either a fixed-size arithmetic\n>  // type (int8, uint8, int16, float32, complex64, ...)\n> -// or an array or struct containing only fixed-size values.\n> +// or an array, slice or struct containing only encodable values.\n>  // Bytes written to w are encoded using the specified byte order\n>  // and read from successive fields of the data.\n>  func Write(w io.Writer, order ByteOrder, data interface{}) error {\n> @@ -379,6 +379,7 @@\n>                for i := 0; i < l; i++ {\n>                        d.value(v.Index(i))\n>                }\n> +\n>        case reflect.Struct:\n>                l := v.NumField()\n>                for i := 0; i < l; i++ {\n> @@ -434,11 +435,13 @@\n>                for i := 0; i < l; i++ {\n>                        e.value(v.Index(i))\n>                }\n> +\n>        case reflect.Struct:\n>                l := v.NumField()\n>                for i := 0; i < l; i++ {\n>                        e.value(v.Field(i))\n>                }\n> +\n>        case reflect.Slice:\n>                l := v.Len()\n>                for i := 0; i < l; i++ {\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-09 00:37:06.653694",
			"approval": true
		},
		{
			"sender": "r@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "\nOn Feb 9, 2012, at 2:00 PM, Russ Cox wrote:\n\n> Slices are only allowed at the top level of Read or Write.\n> They are not allowed inside other structures.\n> If T is a fixed-size value, you can Read a T or a []T\n> (pre-sized to the appropriate length), and you can\n> Write a T or a []T.  But T cannot (being fixed-size)\n> itself contain slices.\n\nthis package has used up more of my time than any other package i've never used.\n\n-rob\n\n",
			"disapproval": false,
			"date": "2012-02-09 03:09:15.636875",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I thought log/syslog had that honor today.\n",
			"disapproval": false,
			"date": "2012-02-09 03:34:03.761789",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-09 00:35:00.297233",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=199e61e586c9 ***\n\nencoding/binary: slices are allowed; say so\n\nFixes issue 2629.\n\nR=golang-dev, bradfitz\nCC=golang-dev\nhttp://codereview.appspot.com/5642069",
			"disapproval": false,
			"date": "2012-02-09 00:42:15.860161",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Slices are only allowed at the top level of Read or Write.\nThey are not allowed inside other structures.\nIf T is a fixed-size value, you can Read a T or a []T\n(pre-sized to the appropriate length), and you can\nWrite a T or a []T.  But T cannot (being fixed-size)\nitself contain slices.\n",
			"disapproval": false,
			"date": "2012-02-09 03:00:07.628904",
			"approval": false
		}
	],
	"owner_email": "r@golang.org",
	"private": false,
	"base_url": "",
	"owner": "r",
	"subject": "code review 5642069: encoding/binary: slices are allowed; say so",
	"created": "2012-02-09 00:34:52.211865",
	"patchsets": [
		1,
		3001
	],
	"modified": "2012-02-09 03:09:15.707619",
	"closed": true,
	"issue": 5642069
}