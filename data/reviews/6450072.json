{
	"description": "exp/types: implement Type.String methods for testing/debugging\n\nAlso:\n- replaced existing test with a more comprehensive test\n- fixed bug in map type creation",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=068ecb0b00e2 ***\n\nexp/types: implement Type.String methods for testing/debugging\n\nAlso:\n- replaced existing test with a more comprehensive test\n- fixed bug in map type creation\n\nR=r\nCC=golang-dev\nhttp://codereview.appspot.com/6450072",
			"disapproval": false,
			"date": "2012-08-01 00:09:18.166260",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-07-31 23:46:39.774810",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"gri@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nmy only concern is all the string concatenation",
			"disapproval": false,
			"date": "2012-07-31 23:53:11.056750",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "One could have a separate set of methods, say writeTo(io.Writer), for\r\neach type that is used to serialize the type to a writer. Then each\r\nString method would do something like:\r\n\r\nfunc (t *T) String() string {\r\n    return stringFor(t)\r\n}\r\n\r\nwith a helper:\r\n\r\nfunc stringFor(t Type) string {\r\n    var buf bytes.Buffer\r\n    t.writeTo(&buf) // interface call\r\n    return buf.String()\r\n}\r\n\r\nbut these methods are for debugging/testing only and not performance\r\ncritical. I don't think it's worth it.\r\n- gri\r\n\r\nOn Tue, Jul 31, 2012 at 4:53 PM,  <r@golang.org> wrote:\r\n> LGTM\r\n> my only concern is all the string concatenation\r\n>\r\n> http://codereview.appspot.com/6450072/\r\n",
			"disapproval": false,
			"date": "2012-08-01 00:04:27.549620",
			"approval": false
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 6450072: exp/types: implement Type.String methods for testing/de...",
	"created": "2012-07-31 21:01:08.044460",
	"patchsets": [
		1,
		2001,
		5001,
		8001,
		10001,
		10002,
		3,
		12001,
		9002,
		14001
	],
	"modified": "2012-08-12 23:24:30.669440",
	"closed": true,
	"issue": 6450072
}