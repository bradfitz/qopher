{
	"description": "encoding: new package\n\nSee golang.org/s/go12encoding for design.",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-09 18:00:35.862040",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12541051/diff/6001/src/pkg/encoding/encoding.go\nFile src/pkg/encoding/encoding.go (right):\n\nhttps://codereview.appspot.com/12541051/diff/6001/src/pkg/encoding/encoding.go#newcode6\nsrc/pkg/encoding/encoding.go:6: // multiple encoding implementations.\nthis doesn't say much and encoding, although a fine package name, is pretty sweeping. what this does is more strictly defined.\n\nperhaps something like\n\nPackage encoding defines interfaces shared by other packages that convert data to and from byte-level and textual representations. Packages that implement these interfaces include encoding/json, ... (pick some good ones and include at least one unusual one). The interfaces come in pairs that, respectively, produce and consume encoded data.\n\nhttps://codereview.appspot.com/12541051/diff/6001/src/pkg/encoding/encoding.go#newcode20\nsrc/pkg/encoding/encoding.go:20: // UnmarshalBinary should be able to decode the form generated by MarshalBinary.\ns/should/must/ or rewrite to make it clear these are duals.\nsame below.\n\nhttps://codereview.appspot.com/12541051/diff/6001/src/pkg/encoding/encoding.go#newcode31\nsrc/pkg/encoding/encoding.go:31: // MarshalText encodes the receiver into UTF-8 text and returns the result.\nUTF-8-encoded text\n\nhttps://codereview.appspot.com/12541051/diff/6001/src/pkg/encoding/encoding.go#newcode33\nsrc/pkg/encoding/encoding.go:33: // MarshalText is expected to return a complete, preferably human-readable description\nthis is a very odd sentence that requires careful reading to understand. i'm not certain i do understand it. can you explain this more clearly? the \"preferably\" is wrong, i think. Stringer makes no claim of preference.",
			"disapproval": false,
			"date": "2013-08-10 21:24:47.486040",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/12541051/diff/6001/src/pkg/encoding/encoding.go\nFile src/pkg/encoding/encoding.go (right):\n\nhttps://codereview.appspot.com/12541051/diff/6001/src/pkg/encoding/encoding.go#newcode6\nsrc/pkg/encoding/encoding.go:6: // multiple encoding implementations.\nOn 2013/08/10 21:24:47, r wrote:\n> this doesn't say much and encoding, although a fine package name, is pretty\n> sweeping. what this does is more strictly defined.\n> \n> perhaps something like\n> \n> Package encoding defines interfaces shared by other packages that convert data\n> to and from byte-level and textual representations. Packages that implement\n> these interfaces include encoding/json, ... (pick some good ones and include at\n> least one unusual one). The interfaces come in pairs that, respectively, produce\n> and consume encoded data.\n> \n> \n\nDone.\n\nhttps://codereview.appspot.com/12541051/diff/6001/src/pkg/encoding/encoding.go#newcode20\nsrc/pkg/encoding/encoding.go:20: // UnmarshalBinary should be able to decode the form generated by MarshalBinary.\nOn 2013/08/10 21:24:47, r wrote:\n> s/should/must/ or rewrite to make it clear these are duals.\n> same below.\n\nDone.\n\nhttps://codereview.appspot.com/12541051/diff/6001/src/pkg/encoding/encoding.go#newcode31\nsrc/pkg/encoding/encoding.go:31: // MarshalText encodes the receiver into UTF-8 text and returns the result.\nOn 2013/08/10 21:24:47, r wrote:\n> UTF-8-encoded text\n\nDone.\n\nhttps://codereview.appspot.com/12541051/diff/6001/src/pkg/encoding/encoding.go#newcode33\nsrc/pkg/encoding/encoding.go:33: // MarshalText is expected to return a complete, preferably human-readable description\nOn 2013/08/10 21:24:47, r wrote:\n> this is a very odd sentence that requires careful reading to understand. i'm not\n> certain i do understand it. can you explain this more clearly? the \"preferably\"\n> is wrong, i think. Stringer makes no claim of preference.\n\nYes, it was very hard to write. I was trying to explain why TextMarshaler and fmt.Stringer are different. But maybe it's best not to bother. Deleted.",
			"disapproval": false,
			"date": "2013-08-13 13:22:54.027850",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/12541051/diff/12001/src/pkg/encoding/encoding.go\nFile src/pkg/encoding/encoding.go (right):\n\nhttps://codereview.appspot.com/12541051/diff/12001/src/pkg/encoding/encoding.go#newcode26\nsrc/pkg/encoding/encoding.go:26: //\nd\n\nhttps://codereview.appspot.com/12541051/diff/12001/src/pkg/encoding/encoding.go#newcode45\nsrc/pkg/encoding/encoding.go:45: //\nd",
			"disapproval": false,
			"date": "2013-08-13 22:27:12.986570",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=00b5a40ae411 ***\n\nencoding: new package\n\nSee golang.org/s/go12encoding for design.\n\nR=r\nCC=golang-dev\nhttps://codereview.appspot.com/12541051",
			"disapproval": false,
			"date": "2013-08-14 04:18:24.932720",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 12541051: encoding: new package",
	"created": "2013-08-09 17:58:40.080570",
	"patchsets": [
		1,
		3001,
		6001,
		12001,
		18001
	],
	"modified": "2013-08-14 04:18:26.981620",
	"closed": true,
	"issue": 12541051
}