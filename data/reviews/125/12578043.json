{
	"description": "go.tools/go/types: support for fake imports of package \"C\"\n\nAlso:\n- cleaner method set printing\n- disable debug mode internally (50% faster)",
	"cc": [
		"bradfitz@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"adonovan@google.com"
	],
	"messages": [
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello adonovan@google.com, bradfitz@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.tools",
			"disapproval": false,
			"date": "2013-08-07 18:37:54.364630",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/12578043/diff/13001/go/types/objects.go\nFile go/types/objects.go (right):\n\nhttps://codereview.appspot.com/12578043/diff/13001/go/types/objects.go#newcode146\ngo/types/objects.go:146: func NewPackage(pos token.Pos, path, name string, scope *Scope, imports map[string]*Package, complete, fake bool) *Package {\ngross.\n\nBool arguments are already pretty terrible.  Two in a row is especially bad.\n\nAdd a new constructor or take an options struct or something..",
			"disapproval": false,
			"date": "2013-08-07 18:46:30.354460",
			"approval": false
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL\n\nhttps://codereview.appspot.com/12578043/diff/13001/go/types/objects.go\nFile go/types/objects.go (right):\n\nhttps://codereview.appspot.com/12578043/diff/13001/go/types/objects.go#newcode146\ngo/types/objects.go:146: func NewPackage(pos token.Pos, path, name string, scope *Scope, imports map[string]*Package, complete, fake bool) *Package {\nOn 2013/08/07 18:46:30, bradfitz wrote:\n> gross.\n> \n> Bool arguments are already pretty terrible.  Two in a row is especially bad.\n> \n> Add a new constructor or take an options struct or something.. \n\nDone.\n\nRemoved bool args altogether. Not really needed here.",
			"disapproval": false,
			"date": "2013-08-07 21:03:33.483680",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-07 21:06:18.567330",
			"approval": true
		},
		{
			"sender": "gri@golang.org",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=6698ca2900e2&repo=tools ***\n\ngo.tools/go/types: support for fake imports of package \"C\"\n\nAlso:\n- cleaner method set printing\n- disable debug mode internally (50% faster)\n\nR=adonovan, bradfitz\nCC=golang-dev\nhttps://codereview.appspot.com/12578043",
			"disapproval": false,
			"date": "2013-08-07 21:09:53.267950",
			"approval": false
		},
		{
			"sender": "adonovan@google.com",
			"recipients": [
				"gri@golang.org",
				"adonovan@google.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/12578043/diff/29001/go/types/api.go\nFile go/types/api.go (right):\n\nhttps://codereview.appspot.com/12578043/diff/29001/go/types/api.go#newcode55\ngo/types/api.go:55: // and expressions with qualified identifiers referrring to package\ns/referrring/referring/\n\nhttps://codereview.appspot.com/12578043/diff/29001/go/types/api.go#newcode57\ngo/types/api.go:57: // Caution: Effects may be unpredictable - do not use casually!\nIs this a quick hack to work around a bug?  It seems to warrant at least \"TODO(gri): specify effects\".  \n\nDoes this just mean that the Selections and Objects mappings will not contain entries for selectors C.f and their Idents f, respectively?  Or perhaps that the type checker might crash?\n\nTests would be good.\n\nhttps://codereview.appspot.com/12578043/diff/29001/go/types/resolver.go\nFile go/types/resolver.go (right):\n\nhttps://codereview.appspot.com/12578043/diff/29001/go/types/resolver.go#newcode171\ngo/types/resolver.go:171: // TODO(gri) shouldn't create a new one each time\nCan't you achieve this by consulting/populating the 'pkg.imports' map?\n\n(BTW, I think the job of memoization using that map wants to be in go/types, not in the implementation of the importer function.  We can talk about that on your return.)",
			"disapproval": false,
			"date": "2013-08-14 22:37:14.641300",
			"approval": true
		}
	],
	"owner_email": "gri@golang.org",
	"private": false,
	"base_url": "",
	"owner": "gri",
	"subject": "code review 12578043: go.tools/go/types: support \"fake\" packages",
	"created": "2013-08-06 23:51:49.124010",
	"patchsets": [
		1,
		3001,
		6001,
		9001,
		11001,
		13001,
		19001,
		22001,
		24001,
		29001
	],
	"modified": "2013-08-14 22:37:15.257310",
	"closed": true,
	"issue": 12578043
}