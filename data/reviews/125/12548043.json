{
	"description": "runtime/pprof: adjust test\n\nNetBSD and OpenBSD are broken like OS X is. Good to know.\n\nDrop required count from avg/2 to avg/3, because the\nPlan 9 builder just barely missed avg/2 in one of its runs.",
	"cc": [
		"golang-dev@googlegroups.com",
		"dvyukov@google.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-08-06 17:16:12.969170",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\r\n\r\nOn Tue, Aug 6, 2013 at 9:16 PM,  <rsc@golang.org> wrote:\r\n> Reviewers: golang-dev1,\r\n>\r\n> Message:\r\n> Hello golang-dev@googlegroups.com,\r\n>\r\n> I'd like you to review this change to\r\n> https://code.google.com/p/go/\r\n>\r\n>\r\n> Description:\r\n> runtime/pprof: adjust test\r\n>\r\n> NetBSD and OpenBSD are broken like OS X is. Good to know.\r\n>\r\n> Drop required count from avg/2 to avg/3, because the\r\n> Plan 9 builder just barely missed avg/2 in one of its runs.\r\n>\r\n> Please review this at https://codereview.appspot.com/12548043/\r\n>\r\n> Affected files:\r\n>   M src/pkg/runtime/pprof/pprof.go\r\n>   M src/pkg/runtime/pprof/pprof_test.go\r\n>\r\n>\r\n> Index: src/pkg/runtime/pprof/pprof.go\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/pprof/pprof.go\r\n> +++ b/src/pkg/runtime/pprof/pprof.go\r\n> @@ -20,7 +20,8 @@\r\n>         \"text/tabwriter\"\r\n>  )\r\n>\r\n> -// BUG(rsc): Profiles are incomplete and inaccuate on OS X. See\r\n> http://golang.org/issue/6047 for details.\r\n> +// BUG(rsc): Profiles are incomplete and inaccuate on NetBSD, OpenBSD, and\r\n> OS X.\r\n> +// See http://golang.org/issue/6047 for details.\r\n>\r\n>  // A Profile is a collection of stack traces showing the call sequences\r\n>  // that led to instances of a particular event, such as allocation.\r\n> Index: src/pkg/runtime/pprof/pprof_test.go\r\n> ===================================================================\r\n> --- a/src/pkg/runtime/pprof/pprof_test.go\r\n> +++ b/src/pkg/runtime/pprof/pprof_test.go\r\n> @@ -78,11 +78,12 @@\r\n>         val = val[:l]\r\n>\r\n>         if l < 13 {\r\n> -               if runtime.GOOS == \"darwin\" {\r\n> -                       t.Logf(\"ignoring failure on OS X; see\r\n> golang.org/issue/6047\")\r\n> +               t.Logf(\"profile too short: %#x\", val)\r\n> +               if badOS[runtime.GOOS] {\r\n> +                       t.Skipf(\"ignoring failure on %s; see\r\n> golang.org/issue/6047\", runtime.GOOS)\r\n>                         return\r\n>                 }\r\n> -               t.Fatalf(\"profile too short: %#x\", val)\r\n> +               t.FailNow()\r\n>         }\r\n>\r\n>         hd, val, tl := val[:5], val[5:l-3], val[l-3:]\r\n> @@ -124,7 +125,7 @@\r\n>                 t.Logf(\"no CPU profile samples collected\")\r\n>                 ok = false\r\n>         }\r\n> -       min := total / uintptr(len(have)) / 2\r\n> +       min := total / uintptr(len(have)) / 3\r\n>         for i, name := range need {\r\n>                 if have[i] < min {\r\n>                         t.Logf(\"%s has %d samples out of %d, want at least\r\n> %d, ideally %d\", name, have[i], total, min, total/uintptr(len(have)))\r\n> @@ -133,10 +134,17 @@\r\n>         }\r\n>\r\n>         if !ok {\r\n> -               if runtime.GOOS == \"darwin\" {\r\n> -                       t.Logf(\"ignoring failure on OS X; see\r\n> golang.org/issue/6047\")\r\n> +               if badOS[runtime.GOOS] {\r\n> +                       t.Skipf(\"ignoring failure on %s; see\r\n> golang.org/issue/6047\", runtime.GOOS)\r\n>                         return\r\n>                 }\r\n>                 t.FailNow()\r\n>         }\r\n>  }\r\n> +\r\n> +// Operating systems that are expected to fail the tests. See issue 6047.\r\n> +var badOS = map[string]bool{\r\n> +       \"darwin\":  true,\r\n> +       \"netbsd\":  true,\r\n> +       \"openbsd\": true,\r\n> +}\r\n>\r\n>\r\n> --\r\n>\r\n> ---You received this message because you are subscribed to the Google Groups\r\n> \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an\r\n> email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n>\r\n>\r\n",
			"disapproval": false,
			"date": "2013-08-06 17:33:34.694240",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"dvyukov@google.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=045269edbbee ***\n\nruntime/pprof: adjust test\n\nNetBSD and OpenBSD are broken like OS X is. Good to know.\n\nDrop required count from avg/2 to avg/3, because the\nPlan 9 builder just barely missed avg/2 in one of its runs.\n\nR=golang-dev, dvyukov\nCC=golang-dev\nhttps://codereview.appspot.com/12548043",
			"disapproval": false,
			"date": "2013-08-06 18:49:57.581170",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 12548043: runtime/pprof: adjust test",
	"created": "2013-08-06 17:15:48.024720",
	"patchsets": [
		1,
		3001,
		8001
	],
	"modified": "2013-08-06 18:49:59.286130",
	"closed": true,
	"issue": 12548043
}