{
	"description": "go.net/html: fix the tokenizer when the underlying io.Reader returns\neither (0, nil) or an (n, err) such that n > 0 && err != nil. Both\ncases are valid by the io.Reader contract.",
	"cc": [
		"r@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "are you missing a test for ErrNoProgress?\n\nhttps://codereview.appspot.com/12513043/diff/6001/html/token.go\nFile html/token.go (right):\n\nhttps://codereview.appspot.com/12513043/diff/6001/html/token.go#newcode279\nhtml/token.go:279: // readAtLeast1Byte wraps an io.Reader so that reading cannot return (0, nil).\ni would s/1/One/ but it's ok as is if you prefer\n\nhttps://codereview.appspot.com/12513043/diff/6001/html/token_test.go\nFile html/token_test.go (right):\n\nhttps://codereview.appspot.com/12513043/diff/6001/html/token_test.go#newcode567\nhtml/token_test.go:567: // zeroOneByteReader is like a strings.Reader that alternates between\nsee, here's it's One",
			"disapproval": false,
			"date": "2013-08-06 08:36:48.987090",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.net",
			"disapproval": false,
			"date": "2013-08-06 08:25:32.474900",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "PTAL.",
			"disapproval": false,
			"date": "2013-08-06 09:08:28.759280",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-08-06 09:43:41.384720",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=3591c18acabc&repo=net ***\n\ngo.net/html: fix the tokenizer when the underlying io.Reader returns\neither (0, nil) or an (n, err) such that n > 0 && err != nil. Both\ncases are valid by the io.Reader contract.\n\nR=r\nCC=golang-dev\nhttps://codereview.appspot.com/12513043",
			"disapproval": false,
			"date": "2013-08-07 02:55:51.543010",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 12513043: go.net/html: fix the tokenizer when the underlying io.R...",
	"created": "2013-08-06 08:25:10.119530",
	"patchsets": [
		1,
		3001,
		6001,
		11001,
		16001
	],
	"modified": "2013-08-07 02:55:54.306700",
	"closed": true,
	"issue": 12513043
}