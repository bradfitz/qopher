{
	"description": "strconv: run garbage collection before counting allocations in test\n\nMy theory is that the call to f() allocates, which triggers\na garbage collection, which itself may do some allocation,\nwhich is being counted.  Running a garbage collection\nbefore starting the test should avoid this problem.\n\nFixes issue 2894 (I hope).",
	"cc": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"nigeltao@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 20 February 2012 12:08,  <rsc@golang.org> wrote:\n> Fixes issue 2984 (I hope).\n\ns/2984/2894/.\n",
			"disapproval": false,
			"date": "2012-02-20 02:53:42.438604",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"nigeltao@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=9af3fb3bc822 ***\n\nstrconv: run garbage collection before counting allocations in test\n\nMy theory is that the call to f() allocates, which triggers\na garbage collection, which itself may do some allocation,\nwhich is being counted.  Running a garbage collection\nbefore starting the test should avoid this problem.\n\nFixes issue 2894 (I hope).\n\nR=golang-dev, bradfitz, nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/5685046",
			"disapproval": false,
			"date": "2012-02-20 03:13:07.117953",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\nOn Feb 20, 2012 12:08 PM, <rsc@golang.org> wrote:\n\n> Reviewers: golang-dev_googlegroups.com,\n>\n> Message:\n> Hello golang-dev@googlegroups.com,\n>\n> I'd like you to review this change to\n> https://go.googlecode.com/hg/\n>\n>\n> Description:\n> strconv: run garbage collection before counting allocations in test\n>\n> My theory is that the call to f() allocates, which triggers\n> a garbage collection, which itself may do some allocation,\n> which is being counted.  Running a garbage collection\n> before starting the test should avoid this problem.\n>\n> Fixes issue 2984 (I hope).\n>\n> Please review this at http://codereview.appspot.com/**5685046/<http://codereview.appspot.com/5685046/>\n>\n> Affected files:\n>  M src/pkg/strconv/itoa_test.go\n>\n>\n> Index: src/pkg/strconv/itoa_test.go\n> ==============================**==============================**=======\n> --- a/src/pkg/strconv/itoa_test.go\n> +++ b/src/pkg/strconv/itoa_test.go\n> @@ -127,6 +127,7 @@\n>  }\n>\n>  func numAllocations(f func()) int {\n> +       runtime.GC()\n>        memstats := new(runtime.MemStats)\n>        runtime.ReadMemStats(memstats)\n>        n0 := memstats.Mallocs\n>\n>\n>\n",
			"disapproval": false,
			"date": "2012-02-20 01:21:12.853344",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-02-20 01:08:43.282936",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5685046: strconv: run garbage collection before counting allocat...",
	"created": "2012-02-20 01:08:33.298552",
	"patchsets": [
		1,
		2001,
		3001,
		3003
	],
	"modified": "2012-02-20 03:13:08.140901",
	"closed": true,
	"issue": 5685046
}