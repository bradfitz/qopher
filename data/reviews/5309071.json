{
	"description": "runtime: windows_386 sighandler to use correct g\n\nFixes issue 2403.",
	"cc": [
		"hectorchu@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello hectorchu@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-10-31 01:25:37.178611",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"hectorchu@gmail.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: hectorchu@gmail.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2011-10-27 04:37:25.535340",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "It's pretty straightforward actually. You need something like this:\n\nTEXT runtime\u00b7setstacklimits(SB),7,$0\n\tMOVL\t$0, 8(FS)\n\tMOVL\t$0xffffffff, 4(FS)\n\tRET",
			"disapproval": false,
			"date": "2011-10-28 09:01:28.457189",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Looks much better.  Can you make the code the same as the amd64 version please?",
			"disapproval": false,
			"date": "2011-11-03 10:16:23.399712",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5309071/diff/2002/src/pkg/runtime/windows/386/sys.s\nFile src/pkg/runtime/windows/386/sys.s (right):\n\nhttp://codereview.appspot.com/5309071/diff/2002/src/pkg/runtime/windows/386/sys.s#newcode56\nsrc/pkg/runtime/windows/386/sys.s:56: MOVL\t0(FS), BX\nIf we use setstacklimits this won't be required anymore.\n\nhttp://codereview.appspot.com/5309071/diff/2002/src/pkg/runtime/windows/386/sys.s#newcode67\nsrc/pkg/runtime/windows/386/sys.s:67: // ensure SEH frames lie within thread stack bounds\nIf we use setstacklimits this won't be required anymore.\nRemove the comment and the following two lines.\n\nhttp://codereview.appspot.com/5309071/diff/2002/src/pkg/runtime/windows/386/sys.s#newcode83\nsrc/pkg/runtime/windows/386/sys.s:83: // call windows default handler early\nThis code is all wrong now that the arguments to sighandler have been shuffled.  It might be possible to do away with it entirely.  If you copy the setstacklimits code from amd64 it should get around the checks in the exception dispatcher.\n\nhttp://codereview.appspot.com/5309071/diff/2002/src/pkg/runtime/windows/386/sys.s#newcode90\nsrc/pkg/runtime/windows/386/sys.s:90: MOVL\t12(SP), BX\nIf we use setstacklimits this won't be required anymore.",
			"disapproval": false,
			"date": "2011-10-27 20:40:55.978639",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5309071/diff/2002/src/pkg/runtime/windows/386/sys.s\nFile src/pkg/runtime/windows/386/sys.s (right):\n\nhttp://codereview.appspot.com/5309071/diff/2002/src/pkg/runtime/windows/386/sys.s#newcode83\nsrc/pkg/runtime/windows/386/sys.s:83: // call windows default handler early\nOn 2011/10/27 20:40:56, hector wrote:\n> This code is all wrong now that the arguments to sighandler have been shuffled. \n\nYeh. I have forgotten about it. I do not know what it does anyways.\n\nOur sighandler never returns with != 0 anyway. And wouldn't all exception handlers get called in turn anyway?\n\n> It might be possible to do away with it entirely. ...\n\nSounds good.\n\n> If you copy the\n> setstacklimits code from amd64 ...\n\nI tried to understand what it does and I can't find any documentation. I can see its changing something in PEB, but I can find what these fields are. Does PEB of 32bit process have same fields?",
			"disapproval": false,
			"date": "2011-10-28 06:40:38.710621",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/28 09:01:28, hector wrote:\n> ... You need something like this:\n> \n\nTried it. Now my exception handler does not get called alltogether.\n\nAlex",
			"disapproval": false,
			"date": "2011-10-31 01:24:19.561335",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "On 2011/10/31 01:25:37, brainman wrote:\n> Hello mailto:hectorchu@gmail.com (cc: mailto:golang-dev@googlegroups.com),\n> \n> Please take another look.\n\nEven though you can't make setstacklimits work are you still able to remove the code I suggested, as it's dead code and the arguments to the default handler are still wrong.  Obviously it's working for you because that code isn't even being executed.",
			"disapproval": false,
			"date": "2011-10-31 08:52:55.876425",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello hectorchu@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-03 01:04:09.177987",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5309071/diff/18001/src/pkg/runtime/windows/386/sys.s\nFile src/pkg/runtime/windows/386/sys.s (right):\n\nhttp://codereview.appspot.com/5309071/diff/18001/src/pkg/runtime/windows/386/sys.s#newcode52\nsrc/pkg/runtime/windows/386/sys.s:52: // cdecl\nOn 2011/11/04 09:55:59, hector wrote:\n> Don't bother with this comment, it looks out of place.\n\nDone.\n\nhttp://codereview.appspot.com/5309071/diff/18001/src/pkg/runtime/windows/386/sys.s#newcode71\nsrc/pkg/runtime/windows/386/sys.s:71: MOVL\tDI, 12(SP)\nOn 2011/11/04 09:55:59, hector wrote:\n> Sorry to be nitpicking, but can this be in the order BX, BP, SI, DI and the\n> addresses ascending, like the amd64 version. For consistency and also prevent\n> confusion when debugging.\n\nDone.\n\nhttp://codereview.appspot.com/5309071/diff/18001/src/pkg/runtime/windows/386/sys.s#newcode79\nsrc/pkg/runtime/windows/386/sys.s:79: MOVL\t24(SP), BP\nOn 2011/11/04 09:55:59, hector wrote:\n> Same here. Just make it same as amd64.\n\nDone.",
			"disapproval": false,
			"date": "2011-11-06 23:14:30.832183",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello hectorchu@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-04 03:23:27.713129",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=87b7bdc68d7f ***\n\nruntime: windows_386 sighandler to use correct g\n\nFixes issue 2403.\n\nR=hectorchu\nCC=golang-dev\nhttp://codereview.appspot.com/5309071",
			"disapproval": false,
			"date": "2011-11-07 00:00:23.164686",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5309071/diff/18001/src/pkg/runtime/windows/386/sys.s\nFile src/pkg/runtime/windows/386/sys.s (right):\n\nhttp://codereview.appspot.com/5309071/diff/18001/src/pkg/runtime/windows/386/sys.s#newcode52\nsrc/pkg/runtime/windows/386/sys.s:52: // cdecl\nDon't bother with this comment, it looks out of place.\n\nhttp://codereview.appspot.com/5309071/diff/18001/src/pkg/runtime/windows/386/sys.s#newcode71\nsrc/pkg/runtime/windows/386/sys.s:71: MOVL\tDI, 12(SP)\nSorry to be nitpicking, but can this be in the order BX, BP, SI, DI and the addresses ascending, like the amd64 version. For consistency and also prevent confusion when debugging.\n\nhttp://codereview.appspot.com/5309071/diff/18001/src/pkg/runtime/windows/386/sys.s#newcode79\nsrc/pkg/runtime/windows/386/sys.s:79: MOVL\t24(SP), BP\nSame here. Just make it same as amd64.",
			"disapproval": false,
			"date": "2011-11-04 09:55:58.841589",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"alex.brainman@gmail.com",
				"hectorchu@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview.appspotmail.com"
			],
			"text": "Hello hectorchu@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2011-11-06 23:14:03.287134",
			"approval": false
		},
		{
			"sender": "hectorchu@gmail.com",
			"recipients": [
				"reply@codereview.appspotmail.com"
			],
			"text": "LGTM\n",
			"disapproval": false,
			"date": "2011-11-06 23:51:23.988756",
			"approval": true
		}
	],
	"owner_email": "alex.brainman@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "brainman",
	"subject": "code review 5309071: runtime: windows_386 sighandler to use correct g",
	"created": "2011-10-27 04:36:30.112334",
	"patchsets": [
		1,
		2001,
		2002,
		1002,
		14001,
		18001,
		24001,
		29001
	],
	"modified": "2011-11-07 00:00:25.163389",
	"closed": true,
	"issue": 5309071
}