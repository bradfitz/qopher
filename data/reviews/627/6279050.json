{
	"description": "cmd/gc: fix a memory leak",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-06-04 06:45:36.636899",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nIn general the compiler doesn't bother to free things. It would be good to free the most significant leaks but I don't think it's worth your time to find every last one. Are you finding these with a memory profiler or are you inspecting the code by hand?",
			"disapproval": false,
			"date": "2012-06-04 14:37:39.669195",
			"approval": true
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 6279050: cmd/gc: fix a memory leak",
	"created": "2012-06-04 06:10:24.700142",
	"patchsets": [
		1,
		2001,
		1002
	],
	"modified": "2012-06-05 12:56:37.993007",
	"closed": true,
	"issue": 6279050
}