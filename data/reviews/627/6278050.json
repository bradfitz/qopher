{
	"description": "go.image/tiff: add a benchmark for the encoder\n\nThe idea is to see whether it is worthwhile to implement special cases.\n\nOn my Mac Book Pro:\n\nBenchmarkEncode\t    1000\t   1689656 ns/op\t  36.69 MB/s",
	"cc": [
		"nigeltao@golang.org",
		"minux.ma@gmail.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go\nFile tiff/writer_test.go (right):\n\nhttp://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go#newcode56\ntiff/writer_test.go:56: b.StartTimer()\nyou can use b.ResetTimer() instead of StopTimer+StartTimer.\n\nhttp://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go#newcode58\ntiff/writer_test.go:58: out.Truncate(0)\nwhy not out.Reset()?",
			"disapproval": false,
			"date": "2012-06-04 18:09:51.246256",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.image",
			"disapproval": false,
			"date": "2012-06-04 17:06:32.539980",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go\nFile tiff/writer_test.go (right):\n\nhttp://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go#newcode59\ntiff/writer_test.go:59: err = Encode(out, img)\nUse ioutil.Discard instead of out.\n\nhttp://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go#newcode64\ntiff/writer_test.go:64: b.SetBytes(int64(out.Len()))\nI suppose that you could argue either way, but the image/png encoding benchmarks (see $GOROOT/src/pkg/image/png/writer_test.go) calls SetBytes with the size of the decompressed image, not the compressed image. That means that achieving better compression without being actually slower doesn't result in a 'worse' MB/s number.",
			"disapproval": false,
			"date": "2012-06-05 01:12:55.902727",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "All done, PTAL. Funny that the tests still passed, \"../testdata/../testdata\" is the same directory.\n\nhttp://codereview.appspot.com/6278050/diff/10001/tiff/writer_test.go\nFile tiff/writer_test.go (right):\n\nhttp://codereview.appspot.com/6278050/diff/10001/tiff/writer_test.go#newcode31\ntiff/writer_test.go:31: img, err := openImage(testdataDir + filename)\nOn 2012/06/06 00:04:03, nigeltao wrote:\n> Drop the \"testdataDir\".\n\nDone.\n\nhttp://codereview.appspot.com/6278050/diff/10001/tiff/writer_test.go#newcode51\ntiff/writer_test.go:51: img, err := openImage(testdataDir + \"video-001.tiff\")\nOn 2012/06/06 00:04:03, nigeltao wrote:\n> Drop the \"testdataDir\".\n\nDone.",
			"disapproval": false,
			"date": "2012-06-06 21:02:52.795223",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org, minux.ma@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-06-05 17:43:48.830406",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go\nFile tiff/writer_test.go (right):\n\nhttp://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go#newcode56\ntiff/writer_test.go:56: b.StartTimer()\nOn 2012/06/04 18:09:51, minux wrote:\n> you can use b.ResetTimer() instead of StopTimer+StartTimer.\n\nDone.\n\nhttp://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go#newcode58\ntiff/writer_test.go:58: out.Truncate(0)\nOn 2012/06/04 18:09:51, minux wrote:\n> why not out.Reset()?\n\nYes, thanks. However, if I use ioutil.Discard, this is not necessary.\n\nhttp://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go#newcode59\ntiff/writer_test.go:59: err = Encode(out, img)\nOn 2012/06/05 01:12:56, nigeltao wrote:\n> Use ioutil.Discard instead of out.\n\nI originally used the Buffer to have the length for the SetBytes call. However, as per your suggestion, I just use the number of raw bytes.\n\nhttp://codereview.appspot.com/6278050/diff/5001/tiff/writer_test.go#newcode64\ntiff/writer_test.go:64: b.SetBytes(int64(out.Len()))\nOn 2012/06/05 01:12:56, nigeltao wrote:\n> I suppose that you could argue either way, but the image/png encoding benchmarks\n> (see $GOROOT/src/pkg/image/png/writer_test.go) calls SetBytes with the size of\n> the decompressed image, not the compressed image. That means that achieving\n> better compression without being actually slower doesn't result in a 'worse'\n> MB/s number.\n\nThanks for the suggestion. Done.",
			"disapproval": false,
			"date": "2012-06-05 17:44:57.105087",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6278050/diff/10001/tiff/writer_test.go\nFile tiff/writer_test.go (right):\n\nhttp://codereview.appspot.com/6278050/diff/10001/tiff/writer_test.go#newcode31\ntiff/writer_test.go:31: img, err := openImage(testdataDir + filename)\nDrop the \"testdataDir\".\n\nhttp://codereview.appspot.com/6278050/diff/10001/tiff/writer_test.go#newcode51\ntiff/writer_test.go:51: img, err := openImage(testdataDir + \"video-001.tiff\")\nDrop the \"testdataDir\".",
			"disapproval": false,
			"date": "2012-06-06 00:04:03.140153",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-06-06 23:36:38.767897",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"minux.ma@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=37300243245c&repo=image ***\n\ngo.image/tiff: add a benchmark for the encoder\n\nThe idea is to see whether it is worthwhile to implement special cases.\n\nOn my Mac Book Pro:\n\nBenchmarkEncode\t    1000\t   1689656 ns/op\t  36.69 MB/s\n\nR=nigeltao, minux.ma\nCC=golang-dev\nhttp://codereview.appspot.com/6278050\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2012-06-06 23:41:47.214984",
			"approval": false
		}
	],
	"owner_email": "bsiegert@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "bsiegert",
	"subject": "code review 6278050: go.image/tiff: add a benchmark for the encoder",
	"created": "2012-06-04 17:04:27.201804",
	"patchsets": [
		1,
		2001,
		5001,
		10001,
		16001
	],
	"modified": "2012-06-07 12:56:44.428205",
	"closed": true,
	"issue": 6278050
}