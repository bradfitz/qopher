{
	"description": "crypto/tls: use hash registry to construct hash functions.\n\nThis change causes crypto/tls to use the hash registry in crypto in\norder to construct hash functions. This is an extra indirection, but\nit only occurs once or twice per connection and is trivial compared to\nthe other overhead in a TLS connection.\n\nWith this in place, hash function implementations can be overridden in\nthe the registry.",
	"cc": [
		"golang-dev@googlegroups.com",
		"jgrahamc@gmail.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bradfitz@golang.org",
		"rsc@golang.org"
	],
	"messages": [
		{
			"sender": "agl@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Tue, Jan 29, 2013 at 4:14 PM, Russ Cox <rsc@golang.org> wrote:\r\n> I thought we decided not to do this?\r\n\r\nI didn't mind using the hash registry because it already exists -\r\nrather I disagreed with adding a specific registry to crypto/tls.\r\nHowever, this is obviously a little bit of a wart as the hash registry\r\nwas designed for optional hashes rather than for implementation\r\nreplacement.\r\n\r\n\r\nCheers\r\n\r\nAGL\r\n",
			"disapproval": false,
			"date": "2013-01-29 21:18:18.876170",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "not lgtm\r\n\r\nI thought we decided not to do this?\r\n",
			"disapproval": true,
			"date": "2013-01-29 21:14:06.299330",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"jgrahamc@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, jgrahamc@gmail.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-01-29 19:28:29.076970",
			"approval": false
		},
		{
			"sender": "agl@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"jgrahamc@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-01-29 21:52:53.306550",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"agl@golang.org",
				"golang-dev@googlegroups.com",
				"bradfitz@golang.org",
				"golang-dev@googlegroups.com",
				"jgrahamc@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/7221064/diff/4001/src/pkg/crypto/tls/cipher_suites.go\nFile src/pkg/crypto/tls/cipher_suites.go (right):\n\nhttps://codereview.appspot.com/7221064/diff/4001/src/pkg/crypto/tls/cipher_suites.go#newcode101\nsrc/pkg/crypto/tls/cipher_suites.go:101: return tls10MAC{hmac.New(newSHA1, key)}\nif only we had Issue 2280, then you could just write crypto.SHA1.New here.",
			"disapproval": false,
			"date": "2013-01-29 19:35:41.253370",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'd prefer not to do this. What if two packages import and register\r\ndifferent SHA1 implementations? Does the second registration panic?\r\nSilently replace the first? Silently do nothing?\r\n\r\nWe should make the Go SHA1 faster if it needs to be faster, and barring\r\nthat it is easy for people to rebuild the tree (or their sha1.a). I think\r\ntrying to create flexibility here will create more problems than it will\r\nsolve.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-29 21:20:48.884320",
			"approval": false
		}
	],
	"owner_email": "agl@golang.org",
	"private": false,
	"base_url": "",
	"owner": "agl1",
	"subject": "code review 7221064: crypto/tls: use hash registry to construct hash functions.",
	"created": "2013-01-29 19:25:41.761910",
	"patchsets": [
		1,
		2001,
		4001
	],
	"modified": "2013-01-29 21:52:54.670600",
	"closed": true,
	"issue": 7221064
}