{
	"description": "runtime: use new CNT_MASK in lfstack\n\nThis is for SPARC64, a 64-bit processor that uses all 64-bits\nof virtual addresses.  The idea is to use the low order 3 bits\nto at least get a small ABA counter.  That should work since\npointers are aligned.  The idea is for SPARC64 to set CNT_MASK\n== 7, PTR_BITS == 0, PTR_MASK == 0xffffffffffffff8.\n\nAlso add uintptr casts to avoid GCC warnings.  The gccgo\nruntime code is compiled with GCC, and GCC warns when casting\nbetween a pointer and a type of a different size.",
	"cc": [
		"dvyukov@google.com",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"iant@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-26 09:06:51.375710",
			"approval": true
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello dvyukov@google.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-01-25 23:36:32.272200",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"iant@golang.org",
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=aee6d7fe395a ***\n\nruntime: use new CNT_MASK in lfstack\n\nThis is for SPARC64, a 64-bit processor that uses all 64-bits\nof virtual addresses.  The idea is to use the low order 3 bits\nto at least get a small ABA counter.  That should work since\npointers are aligned.  The idea is for SPARC64 to set CNT_MASK\n== 7, PTR_BITS == 0, PTR_MASK == 0xffffffffffffff8.\n\nAlso add uintptr casts to avoid GCC warnings.  The gccgo\nruntime code is compiled with GCC, and GCC warns when casting\nbetween a pointer and a type of a different size.\n\nR=dvyukov\nCC=golang-dev\nhttps://codereview.appspot.com/7225043",
			"disapproval": false,
			"date": "2013-01-27 02:16:46.927850",
			"approval": false
		}
	],
	"owner_email": "iant@golang.org",
	"private": false,
	"base_url": "",
	"owner": "iant",
	"subject": "code review 7225043: runtime: use new CNT_MASK in lfstack",
	"created": "2013-01-25 23:36:28.099270",
	"patchsets": [
		1,
		3001
	],
	"modified": "2013-01-27 02:16:48.497090",
	"closed": true,
	"issue": 7225043
}