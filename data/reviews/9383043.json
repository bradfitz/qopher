{
	"description": "cmd/ld: emit .tbss section when doing dynamic internal linking\nFixes issue 5200.",
	"cc": [
		"iant@golang.org",
		"dave@cheney.net",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello iant@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2013-05-13 14:32:30.183710",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "do we need to add a strip(1) test to run.bash?",
			"disapproval": false,
			"date": "2013-05-13 14:33:00.017520",
			"approval": false
		},
		{
			"sender": "dave@cheney.net",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "People are going to keep stripping binaries regardless of our advice so I think it is important to have a test of stripping a variety of Go executables.  \r\n\r\n\r\n\r\nOn 13/05/2013, at 7:33, minux.ma@gmail.com wrote:\r\n\r\n> do we need to add a strip(1) test to run.bash?\r\n> \r\n> https://codereview.appspot.com/9383043/\r\n> \r\n> -- \r\n> \r\n> ---You received this message because you are subscribed to the Google Groups \"golang-dev\" group.\r\n> To unsubscribe from this group and stop receiving emails from it, send an email to golang-dev+unsubscribe@googlegroups.com.\r\n> For more options, visit https://groups.google.com/groups/opt_out.\r\n> \r\n> \r\n",
			"disapproval": false,
			"date": "2013-05-14 00:19:44.438850",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9383043/diff/4001/src/cmd/ld/elf.c\nFile src/cmd/ld/elf.c (right):\n\nhttps://codereview.appspot.com/9383043/diff/4001/src/cmd/ld/elf.c#newcode895\nsrc/cmd/ld/elf.c:895: if(!debug['d'] || linkmode == LinkExternal)\nI don't see a need to test debug['d'] here.  It's normal for a statically linked program to have a .tbss section.  Does something go wrong if we simply always add .tbss (except on OpenBSD)?",
			"disapproval": false,
			"date": "2013-05-15 13:40:58.285670",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9383043/diff/4001/src/cmd/ld/elf.c\nFile src/cmd/ld/elf.c (right):\n\nhttps://codereview.appspot.com/9383043/diff/4001/src/cmd/ld/elf.c#newcode895\nsrc/cmd/ld/elf.c:895: if(!debug['d'] || linkmode == LinkExternal)\nOn 2013/05/15 13:40:58, iant wrote:\n> I don't see a need to test debug['d'] here.  It's normal for a statically linked\n> program to have a .tbss section.  Does something go wrong if we simply always\n> add .tbss (except on OpenBSD)?\nfor internal static linking (debug['d'] is true), we manage TLS slots ourselves,\nso if we add .tbss section and people strip(1)/objcopy(1) the binary,\nthe binutils might incorrectly add PT_TLS to program header, which is of no use.\n\nof course, if you think it's ok, i will remove that condition.",
			"disapproval": false,
			"date": "2013-05-16 11:43:01.651020",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttps://codereview.appspot.com/9383043/diff/4001/src/cmd/ld/elf.c\nFile src/cmd/ld/elf.c (right):\n\nhttps://codereview.appspot.com/9383043/diff/4001/src/cmd/ld/elf.c#newcode895\nsrc/cmd/ld/elf.c:895: if(!debug['d'] || linkmode == LinkExternal)\nOn 2013/05/16 11:43:01, minux wrote:\n> On 2013/05/15 13:40:58, iant wrote:\n> > I don't see a need to test debug['d'] here.  It's normal for a statically\n> linked\n> > program to have a .tbss section.  Does something go wrong if we simply always\n> > add .tbss (except on OpenBSD)?\n> for internal static linking (debug['d'] is true), we manage TLS slots ourselves,\n> so if we add .tbss section and people strip(1)/objcopy(1) the binary,\n> the binutils might incorrectly add PT_TLS to program header, which is of no use.\n> \n> of course, if you think it's ok, i will remove that condition.\n\nOK, fair enough.",
			"disapproval": false,
			"date": "2013-05-17 16:44:48.644970",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"minux.ma@gmail.com",
				"iant@golang.org",
				"dave@cheney.net",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=b70aa9592f5b ***\n\ncmd/ld: emit .tbss section when doing dynamic internal linking\nFixes issue 5200.\n\nR=iant, dave\nCC=golang-dev\nhttps://codereview.appspot.com/9383043",
			"disapproval": false,
			"date": "2013-05-17 18:42:01.360290",
			"approval": false
		}
	],
	"owner_email": "minux.ma@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "minux",
	"subject": "code review 9383043: cmd/ld: emit .tbss section when doing dynamic internal ...",
	"created": "2013-05-13 13:29:47.924390",
	"patchsets": [
		1,
		2001,
		4001,
		14001
	],
	"modified": "2013-05-17 18:42:07.146030",
	"closed": true,
	"issue": 9383043
}