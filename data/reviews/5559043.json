{
	"description": "regexp: add SubexpNames\n\nFixes issue 2440.",
	"cc": [
		"r@golang.org",
		"dsymonds@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm not sure whether this totally fixes the issue though. It's not particularly usable in this form.\n\nhttp://codereview.appspot.com/5559043/diff/2001/src/pkg/regexp/regexp.go\nFile src/pkg/regexp/regexp.go (right):\n\nhttp://codereview.appspot.com/5559043/diff/2001/src/pkg/regexp/regexp.go#newcode230\nsrc/pkg/regexp/regexp.go:230: // SubexpNames returns a the names of the parenthesized subexpressions\nstray \"a\"",
			"disapproval": false,
			"date": "2012-01-19 04:29:39.713451",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-01-19 04:28:39.380010",
			"approval": true
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-19 04:25:20.997775",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Jan 18, 2012 at 23:29,  <dsymonds@golang.org> wrote:\n> I'm not sure whether this totally fixes the issue though. It's not\n> particularly usable in this form.\n\nI understand the objection, but it is now just as usable as\nthe numbered subexpressions.\n\nI'll let the new issue 2736 track making both more usable\nin functions like Replace.\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-19 06:22:59.573382",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jan 19, 2012 at 01:28, David Symonds <dsymonds@golang.org> wrote:\n> It's for matches too, which is what I'm most interested in, and which\n> I believe the original issue was about. There should be something like\n> a match object or a method that turns a string into either the\n> submatch index, or the submatch itself.\n\nPerhaps.  The mapping is not 1:1 (see the tests),\nso designing a good API is complicated.  This change\nexposes the relevant information, which is enough for\nsome lower-level uses and can provide a base for\nsomething higher level (like a subexpression-aware Replace).\n\nThis code is not ready for review yet, but see the use of\nSubexpNames in\nhttp://codereview.appspot.com/5553059/diff/2002/src/cmd/go/vcs.go\n\nRuss\n",
			"disapproval": false,
			"date": "2012-01-19 06:35:10.027958",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Submitted.  I added to the doc comment\n\"The slice should not be modified.\"\n",
			"disapproval": false,
			"date": "2012-01-19 06:24:28.739950",
			"approval": false
		},
		{
			"sender": "dsymonds@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, Jan 19, 2012 at 5:22 PM, Russ Cox <rsc@golang.org> wrote:\n\n> On Wed, Jan 18, 2012 at 23:29, \u00a0<dsymonds@golang.org> wrote:\n>> I'm not sure whether this totally fixes the issue though. It's not\n>> particularly usable in this form.\n>\n> I understand the objection, but it is now just as usable as\n> the numbered subexpressions.\n>\n> I'll let the new issue 2736 track making both more usable\n> in functions like Replace.\n\nIt's for matches too, which is what I'm most interested in, and which\nI believe the original issue was about. There should be something like\na match object or a method that turns a string into either the\nsubmatch index, or the submatch itself.\n\n\nDave.\n",
			"disapproval": false,
			"date": "2012-01-19 06:28:38.114791",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"rsc@golang.org",
				"r@golang.org",
				"dsymonds@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=96a40289f91a ***\n\nregexp: add SubexpNames\n\nFixes issue 2440.\n\nR=r, dsymonds\nCC=golang-dev\nhttp://codereview.appspot.com/5559043",
			"disapproval": false,
			"date": "2012-01-19 06:24:04.625905",
			"approval": false
		}
	],
	"owner_email": "rsc@golang.org",
	"private": false,
	"base_url": "",
	"owner": "rsc",
	"subject": "code review 5559043: regexp: add SubexpNames",
	"created": "2012-01-19 04:24:37.969890",
	"patchsets": [
		1,
		2001,
		6002
	],
	"modified": "2012-01-19 06:24:05.638808",
	"closed": true,
	"issue": 5559043
}