{
	"description": "tiff: new Options parameter for Encode.\n\nNo functional change at the moment but it will allow choosing\nthe compression type.\n\nThis is an incompatible, user-visible change. To get the old\nbehavior, callers of tiff.Encode need to add \", nil\" as the\nlast parameter.",
	"cc": [
		"nigeltao@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=097023221894&repo=image ***\n\ntiff: new Options parameter for Encode.\n\nNo functional change at the moment but it will allow choosing\nthe compression type.\n\nThis is an incompatible, user-visible change. To get the old\nbehavior, callers of tiff.Encode need to add \", nil\" as the\nlast parameter.\n\nR=nigeltao\nCC=golang-dev\nhttp://codereview.appspot.com/6479044\n\nCommitter: Nigel Tao <nigeltao@golang.org>",
			"disapproval": false,
			"date": "2012-08-23 10:17:21.475540",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM.",
			"disapproval": false,
			"date": "2012-08-23 10:14:50.071910",
			"approval": true
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello nigeltao@golang.org (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go.image",
			"disapproval": false,
			"date": "2012-08-22 11:26:58.431620",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for the review. All done, PTAL.\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/consts.go\nFile tiff/consts.go (right):\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/consts.go#newcode113\ntiff/consts.go:113: type CompressionType int\nOn 2012/08/23 00:54:51, nigeltao wrote:\n> What other compression types will you eventually support? I don't know TIFF that\n> well.\n\nThe easiest ones are PackBits and Deflate. I would like to get around to doing CCITT eventually. There is also JPEG compression, which I have not looked into yet; it is probably irrelevant, you could just write a .jpg directly instead. Finally, there is LZW, but there seems to be an incompatibility between our LZW package and what tiff expects.\n\nThere are internal constants for the compression types in this file (cXXX).\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/writer.go\nFile tiff/writer.go (right):\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/writer.go#newcode143\ntiff/writer.go:143: // Options encodes the options used for encoding a TIFF image.\nOn 2012/08/23 00:54:51, nigeltao wrote:\n> Using \"encodes\" twice is awkward. I'd just mimic what image/jpeg does:\n> // Options are the encoding parameters.\n\nDone.\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/writer.go#newcode144\ntiff/writer.go:144: // Compression is the type of compression used. Predictor determines\nOn 2012/08/23 00:54:51, nigeltao wrote:\n> These comments probably work better on the fields, not on the struct as as\n> whole.\n> \n> // Options are the encoding parameters.\n> type Options struct {\n>   // Compression is the type of compression used.\n>   Compression CompressionType\n>   // Predictor determines etc.\n>   Predictor bool\n> }\n\nDone.\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/writer.go#newcode159\ntiff/writer.go:159: opt = &Options{}\nOn 2012/08/23 00:54:51, nigeltao wrote:\n> I'd rather not allocate unnecessary garbage. image/jpeg does something like\n> \n> quality := DefaultQuality\n> if opt != nil {\n>   quality = opt.Quality\n> }\n\nDone.",
			"disapproval": false,
			"date": "2012-08-23 09:35:32.288250",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"bsiegert@gmail.com",
				"nigeltao@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6479044/diff/4001/tiff/consts.go\nFile tiff/consts.go (right):\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/consts.go#newcode113\ntiff/consts.go:113: type CompressionType int\nWhat other compression types will you eventually support? I don't know TIFF that well.\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/writer.go\nFile tiff/writer.go (right):\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/writer.go#newcode143\ntiff/writer.go:143: // Options encodes the options used for encoding a TIFF image.\nUsing \"encodes\" twice is awkward. I'd just mimic what image/jpeg does:\n// Options are the encoding parameters.\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/writer.go#newcode144\ntiff/writer.go:144: // Compression is the type of compression used. Predictor determines\nThese comments probably work better on the fields, not on the struct as as whole.\n\n// Options are the encoding parameters.\ntype Options struct {\n  // Compression is the type of compression used.\n  Compression CompressionType\n  // Predictor determines etc.\n  Predictor bool\n}\n\nhttp://codereview.appspot.com/6479044/diff/4001/tiff/writer.go#newcode159\ntiff/writer.go:159: opt = &Options{}\nI'd rather not allocate unnecessary garbage. image/jpeg does something like\n\nquality := DefaultQuality\nif opt != nil {\n  quality = opt.Quality\n}",
			"disapproval": false,
			"date": "2012-08-23 00:54:51.809710",
			"approval": false
		}
	],
	"owner_email": "bsiegert@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "bsiegert",
	"subject": "code review 6479044: tiff: new Options parameter for Encode.",
	"created": "2012-08-22 11:23:52.411540",
	"patchsets": [
		1,
		2001,
		4001,
		8002,
		11001
	],
	"modified": "2012-08-23 12:07:49.821240",
	"closed": true,
	"issue": 6479044
}