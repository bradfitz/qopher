{
	"description": "cgo: print line numbers in fatal errors when relevant.\n\nSignatures of fatalf and error_ helpers have been matched for\nconsistency.\nFixes issue 1800.",
	"cc": [
		"rsc@golang.org",
		"golang-dev@googlegroups.com",
		"remy@archlinux.org"
	],
	"reviewers": [
		"lvd@google.com",
		"jeff@somethingsimilar.com"
	],
	"messages": [
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I'm not sure the test should be in test/fixedbugs, but I couldn't find anything similar in the existing tree.\n\nR\u00e9my.",
			"disapproval": false,
			"date": "2012-01-29 11:22:24.277712",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-01-29 11:21:40.751462",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-01-31 07:16:52.455797",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for fixing this.  It looks like the overwhelming case\nis that you pass token.NoPos to fatalf; maybe that should\nnot be a dedicated argument.   Instead, you could write a\n\nfunc lineno(p token.Pos) string\n\nand then in the places where you need it, start the format\nwith \"%s: \" and pass lineno(pos) as the first argument.\n\nThis approach has the benefit of leaving fatalf with a signature\nthat go vet expects, with the format as the first argument.",
			"disapproval": false,
			"date": "2012-02-06 17:17:48.376306",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/02/06 17:17:48, rsc wrote:\n> Thanks for fixing this.  It looks like the overwhelming case\n> is that you pass token.NoPos to fatalf; maybe that should\n> not be a dedicated argument.   Instead, you could write a\n> \n> func lineno(p token.Pos) string\n> \n> and then in the places where you need it, start the format\n> with \"%s: \" and pass lineno(pos) as the first argument.\n> \n> This approach has the benefit of leaving fatalf with a signature\n> that go vet expects, with the format as the first argument.\n\nIndeed, that avoids polluting the diff with unnecessary changes.\n\nR\u00e9my.",
			"disapproval": false,
			"date": "2012-02-06 17:36:20.237658",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: golang-dev@googlegroups.com, remy@archlinux.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-02-06 17:36:37.278404",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=24ea565d3631 ***\n\ncgo: print line numbers in fatal errors when relevant.\n\nSignatures of fatalf and error_ helpers have been matched for\nconsistency.\nFixes issue 1800.\n\nR=rsc\nCC=golang-dev, remy\nhttp://codereview.appspot.com/5593049",
			"disapproval": false,
			"date": "2012-02-06 19:39:08.526894",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nThanks",
			"disapproval": false,
			"date": "2012-02-06 19:01:00.940298",
			"approval": true
		},
		{
			"sender": "lvd@google.com",
			"recipients": [
				"remyoudompheng@gmail.com",
				"lvd@google.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"remy@archlinux.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "on darwin/amd64, in 2 separate clean clients:\n\nparent: 11749:fae148fab2a7 tip\n flag: describe valid input for Duration flags.\nbranch: default\ncommit: (clean)\nupdate: (current)\n\n\nwith bin and pkg wiped before all.bash i end up with:\n\n> =========== fixedbugs/bug408.go\n> BUG: errchk: command succeeded unexpectedly\n> \n0 known bugs; 1 unexpected bugs; test output differs\n\nalthough the dashboard looks fine.",
			"disapproval": false,
			"date": "2012-02-07 10:50:28.959237",
			"approval": false
		},
		{
			"sender": "jeff@somethingsimilar.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Made an issue for this just earlier tonight:\nhttp://code.google.com/p/go/issues/detail?id=2902\n\nOn Tue, Feb 7, 2012 at 2:50 AM,  <lvd@google.com> wrote:\n> on darwin/amd64, in 2 separate clean clients:\n>\n> parent: 11749:fae148fab2a7 tip\n> \u00a0flag: describe valid input for Duration flags.\n> branch: default\n> commit: (clean)\n> update: (current)\n>\n>\n> with bin and pkg wiped before all.bash i end up with:\n>\n>> =========== fixedbugs/bug408.go\n>> BUG: errchk: command succeeded unexpectedly\n>\n>\n> 0 known bugs; 1 unexpected bugs; test output differs\n>\n> although the dashboard looks fine.\n>\n>\n>\n> http://codereview.appspot.com/5593049/\n",
			"disapproval": false,
			"date": "2012-02-07 11:16:58.239819",
			"approval": false
		}
	],
	"owner_email": "remyoudompheng@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "remyoudompheng",
	"subject": "code review 5593049: cgo: print line numbers in fatal errors when relevant.",
	"created": "2012-01-29 11:20:31.072439",
	"patchsets": [
		1,
		2001,
		3001,
		4001,
		9002,
		13001,
		14004
	],
	"modified": "2012-02-07 11:16:58.362657",
	"closed": true,
	"issue": 5593049
}