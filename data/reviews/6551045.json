{
	"description": "debug/pe: add symbol support\n\nAdd support for processing the COFF symbol table.",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"r@golang.org",
		"alex.brainman@gmail.com"
	],
	"messages": [
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"jsing@google.com",
				"alex.brainman@gmail.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nVery nice. Thank you. Maybe add test:\n\ndiff -r 6a46db330eb9 src/pkg/debug/pe/file_test.go\n--- a/src/pkg/debug/pe/file_test.go\tFri Sep 21 07:13:36 2012 +0900\n+++ b/src/pkg/debug/pe/file_test.go\tFri Sep 21 14:49:48 2012 +1000\n@@ -13,6 +13,7 @@\n \tfile     string\n \thdr      FileHeader\n \tsections []*SectionHeader\n+\tsymbols  []*Symbol\n }\n \n var fileTests = []fileTest{\n@@ -33,6 +34,24 @@\n \t\t\t{\".debug_pubtypes\", 0, 0, 38, 1370, 1580, 0, 1, 0, 1108344832},\n \t\t\t{\".debug_aranges\", 0, 0, 32, 1408, 1590, 0, 2, 0, 1108344832},\n \t\t},\n+\t\t[]*Symbol{\n+\t\t\t{\".file\", 0x0, -2, 0x0, 0x67},\n+\t\t\t{\"_main\", 0x0, 1, 0x20, 0x2},\n+\t\t\t{\".text\", 0x0, 1, 0x0, 0x3},\n+\t\t\t{\".data\", 0x0, 2, 0x0, 0x3},\n+\t\t\t{\".bss\", 0x0, 3, 0x0, 0x3},\n+\t\t\t{\".debug_abbrev\", 0x0, 4, 0x0, 0x3},\n+\t\t\t{\".debug_info\", 0x0, 5, 0x0, 0x3},\n+\t\t\t{\".debug_line\", 0x0, 6, 0x0, 0x3},\n+\t\t\t{\".rdata\", 0x0, 7, 0x0, 0x3},\n+\t\t\t{\".debug_frame\", 0x0, 8, 0x0, 0x3},\n+\t\t\t{\".debug_loc\", 0x0, 9, 0x0, 0x3},\n+\t\t\t{\".debug_pubnames\", 0x0, 10, 0x0, 0x3},\n+\t\t\t{\".debug_pubtypes\", 0x0, 11, 0x0, 0x3},\n+\t\t\t{\".debug_aranges\", 0x0, 12, 0x0, 0x3},\n+\t\t\t{\"___main\", 0x0, 0, 0x20, 0x2},\n+\t\t\t{\"_puts\", 0x0, 0, 0x20, 0x2},\n+\t\t},\n \t},\n \t{\n \t\t\"testdata/gcc-386-mingw-exec\",\n@@ -54,6 +73,7 @@\n \t\t\t{Name: \".debug_frame\", VirtualSize: 0x34, VirtualAddress: 0xe000, Size: 0x200, Offset: 0x3800, PointerToRelocations: 0x0, PointerToLineNumbers: 0x0, NumberOfRelocations: 0x0, NumberOfLineNumbers: 0x0, Characteristics: 0x42300000},\n \t\t\t{Name: \".debug_loc\", VirtualSize: 0x38, VirtualAddress: 0xf000, Size: 0x200, Offset: 0x3a00, PointerToRelocations: 0x0, PointerToLineNumbers: 0x0, NumberOfRelocations: 0x0, NumberOfLineNumbers: 0x0, Characteristics: 0x42100000},\n \t\t},\n+\t\t[]*Symbol{},\n \t},\n }\n \n@@ -86,7 +106,15 @@\n \t\tif tn != fn {\n \t\t\tt.Errorf(\"open %s: len(Sections) = %d, want %d\", tt.file, fn, tn)\n \t\t}\n-\n+\t\tfor i, have := range f.Symbols {\n+\t\t\tif i >= len(tt.symbols) {\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t\twant := tt.symbols[i]\n+\t\t\tif !reflect.DeepEqual(have, want) {\n+\t\t\t\tt.Errorf(\"open %s, symbol %d:\\n\\thave %#v\\n\\twant %#v\\n\", tt.file, i, have, want)\n+\t\t\t}\n+\t\t}\n \t}\n }\n\nhttps://codereview.appspot.com/6551045/diff/1001/src/pkg/debug/pe/file.go\nFile src/pkg/debug/pe/file.go (right):\n\nhttps://codereview.appspot.com/6551045/diff/1001/src/pkg/debug/pe/file.go#newcode179\nsrc/pkg/debug/pe/file.go:179: name = cstring(cs.Name[0:])\ns/0//",
			"disapproval": false,
			"date": "2012-09-21 04:52:01.823820",
			"approval": true
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=f56656ba8aac ***\n\ndebug/pe: add symbol support\n\nAdd support for processing the COFF symbol table.\n\nR=alex.brainman\nCC=golang-dev\nhttp://codereview.appspot.com/6551045",
			"disapproval": false,
			"date": "2012-09-22 07:57:33.986740",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello alex.brainman@gmail.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-09-21 17:27:32.778280",
			"approval": false
		},
		{
			"sender": "jsing@google.com",
			"recipients": [
				"jsing@google.com",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/21 04:52:01, brainman wrote:\n> LGTM\n> \n> Very nice. Thank you. Maybe add test:\n\nI had planned on adding a test - thanks for providing one :)\n\nAs an aside, I note that the debug/macho and debug/elf packages do not have symbol related tests.",
			"disapproval": false,
			"date": "2012-09-21 17:30:28.312980",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"jsing@google.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/09/22 08:12:15, r wrote:\n> is PE defined to be little-endian?\n\nYes. For example, look for Endian on http://www.thehackerslibrary.com/?p=377.\n\nAlex",
			"disapproval": false,
			"date": "2012-09-22 08:34:38.314270",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"jsing@google.com",
				"r@golang.org",
				"alex.brainman@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6551045/diff/3003/src/pkg/debug/pe/file.go\nFile src/pkg/debug/pe/file.go (right):\n\nhttp://codereview.appspot.com/6551045/diff/3003/src/pkg/debug/pe/file.go#newcode176\nsrc/pkg/debug/pe/file.go:176: si := int(binary.LittleEndian.Uint32(cs.Name[4:]))\nis PE defined to be little-endian?",
			"disapproval": false,
			"date": "2012-09-22 08:12:15.896200",
			"approval": false
		}
	],
	"owner_email": "jsing@google.com",
	"private": false,
	"base_url": "",
	"owner": "jsing",
	"subject": "code review 6551045: debug/pe: add symbol support",
	"created": "2012-09-20 16:16:29.328100",
	"patchsets": [
		1,
		1001,
		5002,
		7001,
		3003
	],
	"modified": "2012-09-22 08:34:38.472730",
	"closed": true,
	"issue": 6551045
}