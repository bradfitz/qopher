{
	"description": "exp/html: when parsing, compare atoms (ints) instead of strings.\n\nThis is the mechanical part of the 2-part change that started with\nhttp://codereview.appspot.com/6305053/",
	"cc": [
		"rsc@golang.org",
		"andybalholm@gmail.com",
		"golang-dev@googlegroups.com",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-06-07 03:40:13.011411",
			"approval": true
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "For the curious, a comparison with Python...\r\n\r\n$ cat g.go\r\npackage main\r\n\r\nimport (\r\n\t\"bytes\"\r\n\t\"exp/html\"\r\n\t\"fmt\"\r\n\t\"io/ioutil\"\r\n\t\"os\"\r\n)\r\n\r\nfunc main() {\r\n\tdata, err := ioutil.ReadFile(os.Getenv(\"GOROOT\") +\r\n\"/src/pkg/exp/html/testdata/go1.html\")\r\n\tif err != nil {\r\n\t\tfmt.Println(err)\r\n\t\treturn\r\n\t}\r\n\tconst n = 200\r\n\tfor i := 0; i < n; i++ {\r\n\t\thtml.Parse(bytes.NewBuffer(data))\r\n\t}\r\n\tfmt.Printf(\"%d bytes x %d reps\\n\", len(data), n)\r\n}\r\n$\r\n$ cat p.py\r\n#!/usr/bin/python\r\n\r\nimport html5lib\r\nimport os\r\n\r\nn = 200\r\ndata = file(os.environ['GOROOT'] + '/src/pkg/exp/html/testdata/go1.html').read()\r\nfor i in range(n):\r\n  html5lib.parse(data)\r\nprint '%d bytes x %d reps' % (len(data), n)\r\n$\r\n$ time go run g.go\r\n78163 bytes x 200 reps\r\n\r\nreal\t0m1.113s\r\nuser\t0m1.070s\r\nsys\t0m0.020s\r\n$\r\n$ time python p.py\r\n78163 bytes x 200 reps\r\n\r\nreal\t0m39.765s\r\nuser\t0m39.690s\r\nsys\t0m0.040s\r\n",
			"disapproval": false,
			"date": "2012-06-07 05:09:03.952373",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello rsc@golang.org (cc: andybalholm@gmail.com, golang-dev@googlegroups.com, r@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go/",
			"disapproval": false,
			"date": "2012-06-07 03:20:54.205660",
			"approval": false
		},
		{
			"sender": "nigeltao@golang.org",
			"recipients": [
				"nigeltao@golang.org",
				"rsc@golang.org",
				"andybalholm@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=b96a9405b3ee ***\n\nexp/html: when parsing, compare atoms (ints) instead of strings.\n\nThis is the mechanical part of the 2-part change that started with\nhttp://codereview.appspot.com/6305053/\n\nR=rsc\nCC=andybalholm, golang-dev, r\nhttp://codereview.appspot.com/6295055",
			"disapproval": false,
			"date": "2012-06-07 03:49:32.250410",
			"approval": false
		}
	],
	"owner_email": "nigeltao@golang.org",
	"private": false,
	"base_url": "",
	"owner": "nigeltao",
	"subject": "code review 6295055: exp/html: when parsing, compare atoms (ints) instead of...",
	"created": "2012-06-07 03:20:34.765652",
	"patchsets": [
		1,
		2001,
		4001,
		8001
	],
	"modified": "2012-06-07 03:49:34.280178",
	"closed": true,
	"issue": 6295055
}