{
	"description": "regexp/syntax: replace internal error on unexpected ) w/ ErrUnexpectedParen\n\nUnbalanced extra right parenthesis produced an internal error instead of\na more descriptive one.\n\nFixes issue 3406.",
	"cc": [
		"r@golang.org",
		"rsc@golang.org",
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"minux.ma@gmail.com",
		"bradfitz@golang.org",
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "befelemepeseveze@gmail.com",
			"recipients": [
				"befelemepeseveze@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/05/09 17:36:19, r wrote:\n> please s/Repleace/replace/ in the CL description. there are two characters to\n> change.\n\nDone.",
			"disapproval": false,
			"date": "2012-05-09 17:44:58.061669",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"befelemepeseveze@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go/source/detail?r=27d0a516b7eb ***\n\nregexp/syntax: replace internal error on unexpected ) w/ ErrUnexpectedParen\n\nUnbalanced extra right parenthesis produced an internal error instead of\na more descriptive one.\n\nFixes issue 3406.\n\nR=r, rsc\nCC=golang-dev\nhttp://codereview.appspot.com/6201063\n\nCommitter: Rob Pike <r@golang.org>",
			"disapproval": false,
			"date": "2012-05-14 18:50:32.984852",
			"approval": false
		},
		{
			"sender": "befelemepeseveze@gmail.com",
			"recipients": [
				"befelemepeseveze@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6201063/diff/4007/src/pkg/regexp/all_test.go\nFile src/pkg/regexp/all_test.go (right):\n\nhttp://codereview.appspot.com/6201063/diff/4007/src/pkg/regexp/all_test.go#newcode8\nsrc/pkg/regexp/all_test.go:8: \"regexp/syntax\"\nOn 2012/05/09 17:50:16, rsc wrote:\n> Instead of importing and testing regexp/syntax from the regexp test, please add\n> the appropriate cases to the regexp/syntax tests.\n> \n> regexp/syntax's TestParseInvalidRegexps would be a good candidate. \n\nDone.\n\nhttp://codereview.appspot.com/6201063/diff/4007/src/pkg/regexp/syntax/parse.go\nFile src/pkg/regexp/syntax/parse.go (right):\n\nhttp://codereview.appspot.com/6201063/diff/4007/src/pkg/regexp/syntax/parse.go#newcode1172\nsrc/pkg/regexp/syntax/parse.go:1172: return &Error{ErrUnexpectedParen, \"\"}\nOn 2012/05/09 17:50:16, rsc wrote:\n> Please use p.wholeRegexp here instead of \"\".\n\nDone.\n\nhttp://codereview.appspot.com/6201063/diff/4007/src/pkg/regexp/syntax/parse.go#newcode1178\nsrc/pkg/regexp/syntax/parse.go:1178: return &Error{ErrMissingParen, p.wholeRegexp}\nOn 2012/05/09 17:50:16, rsc wrote:\n> This error code is wrong too: it should be ErrUnexpectedParen.\n\nDone.",
			"disapproval": false,
			"date": "2012-05-09 18:48:42.733962",
			"approval": false
		},
		{
			"sender": "befelemepeseveze@gmail.com",
			"recipients": [
				"befelemepeseveze@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nI'd like you to review this change to\nhttps://code.google.com/p/go",
			"disapproval": false,
			"date": "2012-05-08 22:54:30.566016",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"befelemepeseveze@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "please s/Repleace/replace/ in the CL description. there are two characters to change.",
			"disapproval": false,
			"date": "2012-05-09 17:36:19.083328",
			"approval": false
		},
		{
			"sender": "befelemepeseveze@gmail.com",
			"recipients": [
				"befelemepeseveze@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello r@golang.org, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-09 18:48:11.376151",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 17 May 2012 17:23, Honza <befelemepeseveze@gmail.com> wrote:\r\n> Dne 17.5.2012 9:05 \"minux\" <minux.ma@gmail.com> napsal(a):\r\n>\r\n>\r\n>>\r\n>>\r\n>> On Thu, May 17, 2012 at 3:01 PM, Brad Fitzpatrick <bradfitz@golang.org>\r\n>> wrote:\r\n>>>\r\n>>> The plan is to never change it.\r\n>>>\r\n>>> We'll only add new files, one per promise.\r\n>>>\r\n>>> go1 is now a frozen promise.\r\n>>\r\n>> but this CL changed it.\r\n>> I meant to ask this before its submission, but I forgot to do so.\r\n>\r\n> Then it's my fault. I thought that bug fixes may not change existing API\r\n> entities semantics nor delete anything to keep all existing Go1 code\r\n> working. That said, I thought adding an entity to fix an issue is allowed.\r\n> What to do now?\r\n\r\nThe api tool now permits API additions. We can back out the go1.txt change.\r\n\r\nAndrew\r\n",
			"disapproval": false,
			"date": "2012-05-17 07:59:30.333267",
			"approval": false
		},
		{
			"sender": "befelemepeseveze@gmail.com",
			"recipients": [
				"befelemepeseveze@gmail.com",
				"golang-dev@googlegroups.com",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, r@golang.org (cc: golang-dev@googlegroups.com, rsc@golang.org),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-09 17:43:27.096061",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"befelemepeseveze@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Thanks for fixing this.\n\nhttp://codereview.appspot.com/6201063/diff/4007/src/pkg/regexp/all_test.go\nFile src/pkg/regexp/all_test.go (right):\n\nhttp://codereview.appspot.com/6201063/diff/4007/src/pkg/regexp/all_test.go#newcode8\nsrc/pkg/regexp/all_test.go:8: \"regexp/syntax\"\nInstead of importing and testing regexp/syntax from the regexp test, please add the appropriate cases to the regexp/syntax tests.\n\nregexp/syntax's TestParseInvalidRegexps would be a good candidate.\n\nhttp://codereview.appspot.com/6201063/diff/4007/src/pkg/regexp/syntax/parse.go\nFile src/pkg/regexp/syntax/parse.go (right):\n\nhttp://codereview.appspot.com/6201063/diff/4007/src/pkg/regexp/syntax/parse.go#newcode1172\nsrc/pkg/regexp/syntax/parse.go:1172: return &Error{ErrUnexpectedParen, \"\"}\nPlease use p.wholeRegexp here instead of \"\".\n\nhttp://codereview.appspot.com/6201063/diff/4007/src/pkg/regexp/syntax/parse.go#newcode1178\nsrc/pkg/regexp/syntax/parse.go:1178: return &Error{ErrMissingParen, p.wholeRegexp}\nThis error code is wrong too: it should be ErrUnexpectedParen.",
			"disapproval": false,
			"date": "2012-05-09 17:50:16.547763",
			"approval": false
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thu, May 17, 2012 at 3:01 PM, Brad Fitzpatrick <bradfitz@golang.org>wrote:\r\n\r\n> The plan is to never change it.\r\n>\r\nWe'll only add new files, one per promise.\r\n>\r\n> go1 is now a frozen promise.\r\n>\r\nbut this CL changed it.\r\nI meant to ask this before its submission, but I forgot to do so.\r\n",
			"disapproval": false,
			"date": "2012-05-17 07:05:43.728665",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"befelemepeseveze@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2012-05-14 18:49:25.489802",
			"approval": true
		},
		{
			"sender": "minux.ma@gmail.com",
			"recipients": [
				"befelemepeseveze@gmail.com",
				"minux.ma@gmail.com",
				"r@golang.org",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "is it ok to change api/go1.txt now?",
			"disapproval": false,
			"date": "2012-05-17 06:58:21.506724",
			"approval": false
		},
		{
			"sender": "bradfitz@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "The plan is to never change it.\r\n\r\nWe'll only add new files, one per promise.\r\n\r\ngo1 is now a frozen promise.\r\n On May 16, 2012 11:58 PM, <minux.ma@gmail.com> wrote:\r\n\r\n> is it ok to change api/go1.txt now?\r\n>\r\n> http://codereview.appspot.com/**6201063/<http://codereview.appspot.com/6201063/>\r\n>\r\n",
			"disapproval": false,
			"date": "2012-05-17 07:01:57.138587",
			"approval": false
		},
		{
			"sender": "befelemepeseveze@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Dne 17.5.2012 9:05 \"minux\" <minux.ma@gmail.com> napsal(a):\r\n>\r\n>\r\n> On Thu, May 17, 2012 at 3:01 PM, Brad Fitzpatrick <bradfitz@golang.org>\r\nwrote:\r\n>>\r\n>> The plan is to never change it.\r\n>>\r\n>> We'll only add new files, one per promise.\r\n>>\r\n>> go1 is now a frozen promise.\r\n>\r\n> but this CL changed it.\r\n> I meant to ask this before its submission, but I forgot to do so.\r\n\r\nThen it's my fault. I thought that bug fixes may not change existing API\r\nentities semantics nor delete anything to keep all existing Go1 code\r\nworking. That said, I thought adding an entity to fix an issue is allowed.\r\nWhat to do now?\r\n\r\n-jan\r\n",
			"disapproval": false,
			"date": "2012-05-17 07:23:04.551156",
			"approval": false
		}
	],
	"owner_email": "befelemepeseveze@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "jan_mercl",
	"subject": "code review 6201063: regexp/syntax: replace internal error on unexpected ) w...",
	"created": "2012-05-08 22:29:24.338041",
	"patchsets": [
		1,
		2001,
		3,
		4007,
		7
	],
	"modified": "2012-05-26 10:16:37.623348",
	"closed": true,
	"issue": 6201063
}