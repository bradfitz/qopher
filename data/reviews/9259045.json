{
	"description": "runtime: fix crash in select\nruntime.park() can access freed select descriptor\ndue to a racing free in another thread.\nSee the comment for details.\nFixes issue 5422.",
	"cc": [],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"iant@golang.org"
	],
	"messages": [
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9259045/diff/7001/src/pkg/runtime/chan.c\nFile src/pkg/runtime/chan.c (right):\n\nhttps://codereview.appspot.com/9259045/diff/7001/src/pkg/runtime/chan.c#newcode828\nsrc/pkg/runtime/chan.c:828: for(i=n; i-->r;) {\nplease look very carefully at this\nis there a simpler way to express this?",
			"disapproval": false,
			"date": "2013-05-08 18:00:31.673420",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/9259045/diff/7001/src/pkg/runtime/chan.c\nFile src/pkg/runtime/chan.c (right):\n\nhttps://codereview.appspot.com/9259045/diff/7001/src/pkg/runtime/chan.c#newcode828\nsrc/pkg/runtime/chan.c:828: for(i=n; i-->r;) {\nnote that lockorder can contain nil due to a default case, it should be the first after sorting\nlockorder can contain dups if the same chan participates in several cases, that's what we have in the test\n\nI suspect we don't have basic tests for all code paths in select, e.g.:\n        var c1, c2 chan int\n        select {\n        case <-c1:\n        case <-c2:\n        }",
			"disapproval": false,
			"date": "2013-05-08 18:05:17.426780",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://dvyukov%40google.com@code.google.com/p/go/",
			"disapproval": false,
			"date": "2013-05-08 17:59:35.365810",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Any chance we can write a test that fails more reliably?\n\nhttps://codereview.appspot.com/9259045/diff/7001/src/pkg/runtime/chan.c\nFile src/pkg/runtime/chan.c (right):\n\nhttps://codereview.appspot.com/9259045/diff/7001/src/pkg/runtime/chan.c#newcode828\nsrc/pkg/runtime/chan.c:828: for(i=n; i-->r;) {\nSuppose you change i, n, r and to be int32 rather than uint32 and write this as\n    for(i = n-1; i>=r; i--)\nHere ncase is uint16 so using int32 should be fine.\n\nhttps://codereview.appspot.com/9259045/diff/7001/src/pkg/runtime/chan.c#newcode830\nsrc/pkg/runtime/chan.c:830: if(i && sel->lockorder[i-1] == c)\ns/(i/(i>0/",
			"disapproval": false,
			"date": "2013-05-08 18:15:39.015290",
			"approval": false
		},
		{
			"sender": "iant@golang.org",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/05/08 18:15:39, iant wrote:\n> Any chance we can write a test that fails more reliably?\n> \n> https://codereview.appspot.com/9259045/diff/7001/src/pkg/runtime/chan.c\n> File src/pkg/runtime/chan.c (right):\n> \n> https://codereview.appspot.com/9259045/diff/7001/src/pkg/runtime/chan.c#newcode828\n> src/pkg/runtime/chan.c:828: for(i=n; i-->r;) {\n> Suppose you change i, n, r and to be int32 rather than uint32 and write this as\n>     for(i = n-1; i>=r; i--)\n> Here ncase is uint16 so using int32 should be fine.\n> \n> https://codereview.appspot.com/9259045/diff/7001/src/pkg/runtime/chan.c#newcode830\n> src/pkg/runtime/chan.c:830: if(i && sel->lockorder[i-1] == c)\n> s/(i/(i>0/\n\nI made these changes and submitted it as CL 9311043, so that we could make another release candidate.  Still no good test, though.\n\nIan",
			"disapproval": false,
			"date": "2013-05-08 21:59:58.330530",
			"approval": false
		},
		{
			"sender": "dvyukov@google.com",
			"recipients": [
				"dvyukov@google.com",
				"golang-dev@googlegroups.com",
				"iant@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2013-05-09 12:24:00.812270",
			"approval": false
		}
	],
	"owner_email": "dvyukov@google.com",
	"private": false,
	"base_url": "",
	"owner": "dvyukov",
	"subject": "code review 9259045: runtime: fix crash in select",
	"created": "2013-05-08 17:40:10.148860",
	"patchsets": [
		1,
		2001,
		4001,
		7001
	],
	"modified": "2013-05-09 12:24:01.989340",
	"closed": true,
	"issue": 9259045
}