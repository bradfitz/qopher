{
	"description": "windows: installer fixes\n\n* added/changed preprocessor definitions\n* setup 32/64 bit specific target install environment\n* shortcuts set gopath when calling godoc\n* desktop icon option box (Fixes issue 3287.)\n* set GOROOT environment variable\n* misc bug fixes (Fixes issue 3361.)\n\n",
	"cc": [
		"golang-dev@googlegroups.com"
	],
	"reviewers": [
		"golang-dev@googlegroups.com",
		"bsiegert@gmail.com",
		"aram@mgk.ro",
		"alex.brainman@gmail.com",
		"adg@golang.org"
	],
	"messages": [
		{
			"sender": "jdpoirier@gmail.com",
			"recipients": [
				"jdpoirier@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/21 07:37:24, bsiegert wrote:\n> http://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/MyWixUI_InstallDir.wxs#newcode4\n> misc/dist/windows/MyWixUI_InstallDir.wxs:4: Copyright (c) Microsoft Corporation.\n>  All rights reserved.\n> I am confused by the copyright notice in this file. Is this something you wrote?\n> Then maybe it should use the same license as the other files in the Go repo.\nAdding a user selectable checkbox option to a dialog box, for the godoc desktop icon, requires mods to the WiX source code; the standard way to make the changes is to copy, rename, and modify code from the WiX distribution.\n \n> http://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/README.txt#newcode2\n> misc/dist/windows/README.txt:2: Windows build dependencies\n> It seems that you changed line endings. The unified diff shows changes in all\n> lines but the text looks the same to me.\nCorrect, Nix to Windows...  Notepad is the default app when a txt file is double clicked on, and it doesn't understand just \\n.",
			"disapproval": false,
			"date": "2012-03-21 08:09:20.994827",
			"approval": false
		},
		{
			"sender": "aram@mgk.ro",
			"recipients": [
				"jdpoirier@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"aram@mgk.ro",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/installer.wxs\nFile misc/dist/windows/installer.wxs (right):\n\nhttp://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/installer.wxs#newcode56\nmisc/dist/windows/installer.wxs:56: <!-- <SetDirectory Id=\"INSTALLDIRROOT\" Value=\"[$(var.ProgFilesFolder)]\"/> -->\nWhy? I'm against this change. While Go should work in a $GOROOT containing spaces it seems to me we're making the default something we didn't really test. $(var.ProgFilesFolder) can also contain non-ASCII diacritical marks which should work fine, but nobody tested.\n\nI believe the aesthetic reason is significant as well, users are likely to cd in Go directories in a console window.\n\nThere are precedents to installing in the root even from Microsoft, the build tools for drivers install in \\WinDDK. Python is also installed in the root of the drive by default.\n\nMy opinion is that it's too late in the development cycle to change this.\n\nhttp://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/installer.wxs#newcode159\nmisc/dist/windows/installer.wxs:159: System=\"yes\"\nI'm happy with this being the default, but I wonder how difficult would be to make the msi user installable (as opposed to poweruser installable) and in that case make this user-specific.",
			"disapproval": false,
			"date": "2012-03-21 12:02:24.324547",
			"approval": false
		},
		{
			"sender": "jdpoirier@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 21, 2012 at 7:02 AM,  <aram@mgk.ro> wrote:\n> http://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/installer.wxs#newcode56\n> misc/dist/windows/installer.wxs:56: <!-- <SetDirectory\n> Id=\"INSTALLDIRROOT\" Value=\"[$(var.ProgFilesFolder)]\"/> -->\n> Why? I'm against this change. While Go should work in a $GOROOT\n> containing spaces it seems to me we're making the default something we\n> didn't really test. $(var.ProgFilesFolder) can also contain non-ASCII\n> diacritical marks which should work fine, but nobody tested.\n>\n> I believe the aesthetic reason is significant as well, users are likely\n> to cd in Go directories in a console window.\n>\n> There are precedents to installing in the root even from Microsoft, the\n> build tools for drivers install in \\WinDDK. Python is also installed in\n> the root of the drive by default.\n>\n> My opinion is that it's too late in the development cycle to change\n> this.\n\nI agree that it is late but I disagree that it's too late. To minimize\nany pain, we could create a daily test release that merges to tip once\ndeemed okay, but I think the weekly is okay.\n\nIf there are major hiccups we can always do a follow-up announcement\nto either A) reinstall using the root drive as the install\ndestination, it's user selectable, or B) upload another installer with\nmods.\n\nThere's nothing currently stopping someone from changing the\ninstallation directory to something other than root, so the change is\nmerely cosmetic IMHO.\n\n> http://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/installer.wxs#newcode159\n> misc/dist/windows/installer.wxs:159: System=\"yes\"\n> I'm happy with this being the default, but I wonder how difficult would\n> be to make the msi user installable (as opposed to poweruser\n> installable) and in that case make this user-specific.\n\nThe plan is to add two additional check box options to the installer.\nOne to select user installation scope and another for a system\ninstall. If the user has admin privileges both options would be\navailable, otherwise the default would be user scope.\n\n-joe\n",
			"disapproval": false,
			"date": "2012-03-21 15:58:28.703502",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 21, 2012 at 09:09,  <jdpoirier@gmail.com> wrote:\n> On 2012/03/21 07:37:24, bsiegert wrote:\n>\n> http://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/MyWixUI_InstallDir.wxs#newcode4\n>>\n>> misc/dist/windows/MyWixUI_InstallDir.wxs:4: Copyright (c) Microsoft\n>\n> Corporation.\n>>\n>> \u00a0All rights reserved.\n>> I am confused by the copyright notice in this file. Is this something\n>\n> you wrote?\n>>\n>> Then maybe it should use the same license as the other files in the Go\n>\n> repo.\n> Adding a user selectable checkbox option to a dialog box, for the godoc\n> desktop icon, requires mods to the WiX source code; the standard way to\n> make the changes is to copy, rename, and modify code from the WiX\n> distribution.\n\nOK, I see. Thanks for the explanation.\n\n--Benny.\n",
			"disapproval": false,
			"date": "2012-03-21 08:38:51.372391",
			"approval": false
		},
		{
			"sender": "jdpoirier@gmail.com",
			"recipients": [
				"jdpoirier@gmail.com",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2012-03-21 06:54:39.528551",
			"approval": false
		},
		{
			"sender": "bsiegert@gmail.com",
			"recipients": [
				"jdpoirier@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/MyWixUI_InstallDir.wxs\nFile misc/dist/windows/MyWixUI_InstallDir.wxs (right):\n\nhttp://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/MyWixUI_InstallDir.wxs#newcode4\nmisc/dist/windows/MyWixUI_InstallDir.wxs:4: Copyright (c) Microsoft Corporation.  All rights reserved.\nI am confused by the copyright notice in this file. Is this something you wrote? Then maybe it should use the same license as the other files in the Go repo.\n\nhttp://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/README.txt\nFile misc/dist/windows/README.txt (right):\n\nhttp://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/README.txt#newcode2\nmisc/dist/windows/README.txt:2: Windows build dependencies\nIt seems that you changed line endings. The unified diff shows changes in all lines but the text looks the same to me.",
			"disapproval": false,
			"date": "2012-03-21 07:37:24.321161",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wednesday, March 21, 2012 5:54:39 PM UTC+11, Joe Poirier wrote:\n>\n>\n> ... the godoc server shortcuts won't work until godoc\n> is updated to handle Windows path separators.\n>\n>\nDo you have an example to demonstrate the problem? Perhaps you could file \nand issue?\nThank you.\n\nAlex \n",
			"disapproval": false,
			"date": "2012-03-21 23:03:46.488406",
			"approval": false
		},
		{
			"sender": "jdpoirier@gmail.com",
			"recipients": [
				"jdpoirier@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"aram@mgk.ro",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI - went back to using C:\\Go as the default target directory.",
			"disapproval": false,
			"date": "2012-03-22 23:29:24.533688",
			"approval": false
		},
		{
			"sender": "jdpoirier@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 21, 2012 at 6:03 PM, brainman <alex.brainman@gmail.com> wrote:\n> On Wednesday, March 21, 2012 5:54:39 PM UTC+11, Joe Poirier wrote:\n>>\n>>\n>> ... the godoc server shortcuts won't work until godoc\n>>\n>>\n>> is updated to handle Windows path separators.\n>>\n>>\n>\n> Do you have an example to demonstrate the problem? Perhaps you could file\n> and issue?\n> Thank you.\n>\n> Alex\n\nSorry, I meant to do a follow-up on this.\n\ngodoc provides a -goroot command line option but it doesn't handle the\nWindows path separator's correctly, e.g. setting -goroot=\"C:\\apps\\go\"\ndoesn't work but both -goroot=\"C:\\\\apps\\\\go\" and -goroot=\"C:/apps/go\"\ndo.\n\nThe real problem though is how godoc gets GOROOT. Currently godoc\nchecks the system environment, if GOROOT is undefined, or empty, it\nhard codes it to C:\\go - I think bindist works the same way(?). But\nthey really should be trying to use the go tool first. If the go tool\nis sitting in PATH it should have priority when it comes to fetching\nenvironment information unless overridden.\n\nAs far as the godoc server shortcut goes, setting -goroot would be\nunnecessary if godoc did use the go tool.\n\n-joe\n",
			"disapproval": false,
			"date": "2012-03-22 01:19:38.998521",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Thursday, March 22, 2012 12:18:58 PM UTC+11, Joe Poirier wrote:\n\n> godoc provides a -goroot command line option but it doesn't handle the\n> Windows path separator's correctly, e.g. setting -goroot=\"C:\\apps\\go\"\n> doesn't work but both -goroot=\"C:\\\\apps\\\\go\" and -goroot=\"C:/apps/go\"\n> do.\n\nPlease file an issue about that. But I will investigate it regardless.\n\n> The real problem though is how godoc gets GOROOT. Currently godoc\n> checks the system environment, if GOROOT is undefined, or empty, it\n> hard codes it to C:\\go - I think bindist works the same way(?). But\n> they really should be trying to use the go tool first. If the go tool\n> is sitting in PATH it should have priority when it comes to fetching\n> environment information unless overridden.\n\nNot sure about that. But if you create an issue, we will get some \nresolution. One way or the other.\n\nAlex\n",
			"disapproval": false,
			"date": "2012-03-22 01:32:45.344882",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"jdpoirier@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"aram@mgk.ro",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/22 02:01:00, Joe Poirier wrote:\n> On Wed, Mar 21, 2012 at 8:32 PM, brainman <mailto:alex.brainman@gmail.com> wrote:\n> >\n> >> The real problem though is how godoc gets GOROOT. Currently godoc\n> >> checks the system environment, if GOROOT is undefined, or empty, it\n> >> hard codes it to C:\\go - I think bindist works the same way(?). But\n> >> they really should be trying to use the go tool first. If the go tool\n> >> is sitting in PATH it should have priority when it comes to fetching\n> >> environment information unless overridden.\n> >\n> > Not sure about that. But if you create an issue, we will get some\n> > resolution. One way or the other.\n> >\n> > Alex\n> \n> Thanks, will do...\n> \n\nPerhaps you are seeing something similar to:\n\nhttp://code.google.com/p/go/issues/detail?id=3347\n\nor\n\nhttp://code.google.com/p/go/issues/detail?id=3370\n\nAlex",
			"disapproval": false,
			"date": "2012-03-23 00:16:40.187039",
			"approval": false
		},
		{
			"sender": "jdpoirier@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Wed, Mar 21, 2012 at 8:32 PM, brainman <alex.brainman@gmail.com> wrote:\n> On Thursday, March 22, 2012 12:18:58 PM UTC+11, Joe Poirier wrote:\n>\n>> godoc provides a -goroot command line option but it doesn't handle the\n>> Windows path separator's correctly, e.g. setting -goroot=\"C:\\apps\\go\"\n>> doesn't work but both -goroot=\"C:\\\\apps\\\\go\" and -goroot=\"C:/apps/go\"\n>> do.\n>\n> Please file an issue about that. But I will investigate it regardless.\n>\n>\n>> The real problem though is how godoc gets GOROOT. Currently godoc\n>> checks the system environment, if GOROOT is undefined, or empty, it\n>> hard codes it to C:\\go - I think bindist works the same way(?). But\n>> they really should be trying to use the go tool first. If the go tool\n>> is sitting in PATH it should have priority when it comes to fetching\n>> environment information unless overridden.\n>\n> Not sure about that. But if you create an issue, we will get some\n> resolution. One way or the other.\n>\n> Alex\n\nThanks, will do...\n\n-joe\n",
			"disapproval": false,
			"date": "2012-03-22 02:01:00.225234",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "It is too late to change the default to \"c:\\program files\\go\". We must\nstick with \"c:\\go\" for the time being. This is what we have been\ntesting and I\u00a0do not want to ship an installer with potentially broken\ndefault settings. First impressions matter.\n\nOn 22 March 2012 12:18, Joseph Poirier <jdpoirier@gmail.com> wrote:\n> godoc provides a -goroot command line option but it doesn't handle the\n> Windows path separator's correctly, e.g. setting -goroot=\"C:\\apps\\go\"\n> doesn't work but both -goroot=\"C:\\\\apps\\\\go\" and -goroot=\"C:/apps/go\"\n> do.\n>\n> The real problem though is how godoc gets GOROOT. Currently godoc\n> checks the system environment, if GOROOT is undefined, or empty, it\n> hard codes it to C:\\go - I think bindist works the same way(?). But\n> they really should be trying to use the go tool first. If the go tool\n> is sitting in PATH it should have priority when it comes to fetching\n> environment information unless overridden.\n\ngodoc should be using runtime.GOROOT(), the same mechanism that the go\ntool does. Godoc needn't invoke the go tool.\n\nDuring the binary build, GOROOT_FINAL is set to c:\\go, which is the\nvalue that runtime.GOROOT() defaults to if it is not set in the\nenvironment.\n\n> As far as the godoc server shortcut goes, setting -goroot would be\n> unnecessary if godoc did use the go tool.\n\nI suggest dropping the local godoc server shortcut entirely for Go 1.\nWe can fix it in a point release.\n\nI really just want to get the Windows installer solid and secure. The\nbells and whistles can wait.\n\nAndrew\n",
			"disapproval": false,
			"date": "2012-03-22 02:04:58.675477",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"jdpoirier@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"aram@mgk.ro",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/installer.wxs\nFile misc/dist/windows/installer.wxs (right):\n\nhttp://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/installer.wxs#newcode10\nmisc/dist/windows/installer.wxs:10: <?define ProdId = {FF5B30B2-08C2-11E1-85A2-6ACA4824019B} ?>\nwhere did these UUIDs come from?\n\nhttp://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/installer.wxs#newcode56\nmisc/dist/windows/installer.wxs:56: <!-- <SetDirectory Id=\"INSTALLDIRROOT\" Value=\"[$(var.ProgFilesFolder)]\"/> -->\nso this line is commented out now? what's the story?\n\nhttp://codereview.appspot.com/5865050/diff/1007/misc/dist/windows/installer.wxs#newcode110\nmisc/dist/windows/installer.wxs:110: <!-- Desktop Shortcuts -->\nLet's drop this, for now. We'll revisit after the launch.",
			"disapproval": false,
			"date": "2012-03-22 02:06:45.388713",
			"approval": false
		},
		{
			"sender": "jdpoirier@gmail.com",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On Fri, Mar 23, 2012 at 12:50 AM,  <alex.brainman@gmail.com> wrote:\n> On 2012/03/22 01:19:38, Joe Poirier wrote:\n>>\n>> ... setting -goroot=\"C:\\apps\\go\"\n>> doesn't work ...\n>\n>\n> I tried both\n>\n> godoc -goroot=c:\\mingw\\go os File\n>\n> and\n>\n> godoc -goroot=\"c:\\mingw\\go\" os File\n>\n> I get help for os.File. I also tried\n>\n> godoc -goroot=c:\\mingw\\go -http=:6060\n>\n> and\n>\n> godoc -goroot=\"c:\\mingw\\go\" -http=:6060\n>\n> and I can see the site in my browser.\n>\n> If you provide more details, I will investigate.\n>\n> Alex\n>\n> http://codereview.appspot.com/5865050/\n\nI'm thinking it was really a problem with the \"Target\" argument string\nin the shortcut. Andrew had a problem setting goroot in his CL as well\nbut when I take out his fix it still works for me? The argument string\nhas been a source of aggravation and it makes more sense that the\nproblem originates with it, but has godoc changed since the last\nweekly?\n\n-joe\n",
			"disapproval": false,
			"date": "2012-03-23 06:39:47.372802",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "As discussed, let's leave this CL until after Go 1.\n",
			"disapproval": false,
			"date": "2012-03-23 00:42:38.260905",
			"approval": false
		},
		{
			"sender": "alex.brainman@gmail.com",
			"recipients": [
				"jdpoirier@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"aram@mgk.ro",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2012/03/22 01:19:38, Joe Poirier wrote:\n> ... setting -goroot=\"C:\\apps\\go\"\n> doesn't work ...\n\nI tried both\n\ngodoc -goroot=c:\\mingw\\go os File\n\nand\n\ngodoc -goroot=\"c:\\mingw\\go\" os File\n\nI get help for os.File. I also tried \n\ngodoc -goroot=c:\\mingw\\go -http=:6060\n\nand\n\ngodoc -goroot=\"c:\\mingw\\go\" -http=:6060\n\nand I can see the site in my browser.\n\nIf you provide more details, I will investigate.\n\nAlex",
			"disapproval": false,
			"date": "2012-03-23 05:50:10.631201",
			"approval": false
		},
		{
			"sender": "jdpoirier@gmail.com",
			"recipients": [
				"jdpoirier@gmail.com",
				"golang-dev@googlegroups.com",
				"bsiegert@gmail.com",
				"aram@mgk.ro",
				"alex.brainman@gmail.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Abandoned ***",
			"disapproval": false,
			"date": "2012-03-24 21:51:00.922319",
			"approval": false
		}
	],
	"owner_email": "jdpoirier@gmail.com",
	"private": false,
	"base_url": "",
	"owner": "Joe Poirier",
	"subject": "code review 5865050: windows: installer fixes",
	"created": "2012-03-21 06:51:32.568576",
	"patchsets": [
		1,
		2001,
		1007,
		12001
	],
	"modified": "2012-03-24 21:51:02.713266",
	"closed": true,
	"issue": 5865050
}