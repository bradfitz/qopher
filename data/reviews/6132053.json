{
	"description": "go-tour: add more about maps\n\nFixes issue 24.",
	"cc": [
		"golang-dev@googlegroups.com",
		"christoph@tux21b.org",
		"r@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://code.google.com/p/go-tour",
			"disapproval": false,
			"date": "2012-05-01 04:31:48.369771",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"christoph@tux21b.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6132053/diff/1/static/index.html\nFile static/index.html (right):\n\nhttp://codereview.appspot.com/6132053/diff/1/static/index.html#newcode849\nstatic/index.html:849: Insert or update a key/value entry:\ns/entry/& in map m/\n\nhttp://codereview.appspot.com/6132053/diff/1/static/index.html#newcode862\nstatic/index.html:862: <code>ok</code> is <code>true</code>.\nIf not, ok is false and value is the zero value for the map's element type.\n\n[if you s/value/elem/g in the examples this would read better and would also be consistent with other docs about map types]\n\nhttp://codereview.appspot.com/6132053/diff/1/static/index.html#newcode864\nstatic/index.html:864: When reading from a map, if the key is not present\nSimilarly, when reading from a map if the key is not present the result is  the zero value for the element type.",
			"disapproval": false,
			"date": "2012-05-01 07:35:16.059821",
			"approval": false
		},
		{
			"sender": "christoph@tux21b.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"christoph@tux21b.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6132053/diff/1/static/index.html\nFile static/index.html (right):\n\nhttp://codereview.appspot.com/6132053/diff/1/static/index.html#newcode856\nstatic/index.html:856: <pre>delete(map, key)</pre>\ns/map/m/",
			"disapproval": false,
			"date": "2012-05-01 06:42:53.948685",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"christoph@tux21b.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "http://codereview.appspot.com/6132053/diff/1/static/index.html\nFile static/index.html (right):\n\nhttp://codereview.appspot.com/6132053/diff/1/static/index.html#newcode849\nstatic/index.html:849: Insert or update a key/value entry:\nOn 2012/05/01 07:35:16, r wrote:\n> s/entry/& in map m/\n\nDone.\n\nhttp://codereview.appspot.com/6132053/diff/1/static/index.html#newcode856\nstatic/index.html:856: <pre>delete(map, key)</pre>\nOn 2012/05/01 06:42:54, tux21b wrote:\n> s/map/m/\n\nDone.\n\nhttp://codereview.appspot.com/6132053/diff/1/static/index.html#newcode862\nstatic/index.html:862: <code>ok</code> is <code>true</code>.\nOn 2012/05/01 07:35:16, r wrote:\n> If not, ok is false and value is the zero value for the map's element type.\n> \n> [if you s/value/elem/g in the examples this would read better and would also be\n> consistent with other docs about map types]\n\nDone.\n\nhttp://codereview.appspot.com/6132053/diff/1/static/index.html#newcode864\nstatic/index.html:864: When reading from a map, if the key is not present\nOn 2012/05/01 07:35:16, r wrote:\n> Similarly, when reading from a map if the key is not present the result is  the\n> zero value for the element type.\n\nDone.",
			"disapproval": false,
			"date": "2012-05-01 21:18:31.886716",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"christoph@tux21b.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, christoph@tux21b.org, r@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2012-05-01 21:18:42.554169",
			"approval": false
		},
		{
			"sender": "r@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"christoph@tux21b.org",
				"r@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM\n\nhttp://codereview.appspot.com/6132053/diff/5001/static/index.html\nFile static/index.html (right):\n\nhttp://codereview.appspot.com/6132053/diff/5001/static/index.html#newcode867\nstatic/index.html:867: the result is the zero value for the element type.\ns/element/map's element/ for parallel structure",
			"disapproval": false,
			"date": "2012-05-01 21:20:12.568604",
			"approval": true
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"christoph@tux21b.org",
				"r@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as http://code.google.com/p/go-tour/source/detail?r=90dc39a257e1 ***\n\ngo-tour: add more about maps\n\nFixes issue 24.\n\nR=golang-dev, christoph, r\nCC=golang-dev\nhttp://codereview.appspot.com/6132053\n\nhttp://codereview.appspot.com/6132053/diff/5001/static/index.html\nFile static/index.html (right):\n\nhttp://codereview.appspot.com/6132053/diff/5001/static/index.html#newcode867\nstatic/index.html:867: the result is the zero value for the element type.\nOn 2012/05/01 21:20:12, r wrote:\n> s/element/map's element/ for parallel structure\n\nDone.",
			"disapproval": false,
			"date": "2012-05-01 21:21:36.983922",
			"approval": false
		}
	],
	"owner_email": "adg@golang.org",
	"private": false,
	"base_url": "",
	"owner": "adg",
	"subject": "code review 6132053: go-tour: add more about maps",
	"created": "2012-05-01 04:31:41.580037",
	"patchsets": [
		1,
		5001,
		9001
	],
	"modified": "2012-05-01 21:21:39.271178",
	"closed": true,
	"issue": 6132053
}