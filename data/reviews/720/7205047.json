{
	"description": "fmt: improve go syntax handling of byte-derived arrays and slices\n\nFixes issue 4685.",
	"cc": [
		"golang-dev@googlegroups.com",
		"adg@golang.org",
		"remyoudompheng@gmail.com",
		"rsc@golang.org"
	],
	"reviewers": [],
	"messages": [
		{
			"sender": "kevlar@google.com",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "FYI\n\nhttps://codereview.appspot.com/7205047/diff/3/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttps://codereview.appspot.com/7205047/diff/3/src/pkg/fmt/print.go#newcode942\nsrc/pkg/fmt/print.go:942: if f.Type().Elem() == reflect.TypeOf(byte(0)) {\nI think you might want to keep the == reflect.Uint8 but then also ensure that .PkgPath() == \"\" (aka it's a predeclared type):\nhttp://play.golang.org/p/5DTBpto305\n\nBoth of these are direct comparisons, instead of computing TypeOf each time and requiring an interface comparison.",
			"disapproval": false,
			"date": "2013-01-25 09:08:35.957340",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com,\n\nI'd like you to review this change to\nhttps://go.googlecode.com/hg/",
			"disapproval": false,
			"date": "2013-01-24 01:03:03.558970",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-25 10:56:33.923300",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7205047/diff/7001/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttps://codereview.appspot.com/7205047/diff/7001/src/pkg/fmt/print.go#newcode942\nsrc/pkg/fmt/print.go:942: if f.Type().Elem().Kind() == reflect.Uint8 && f.Type().Elem().PkgPath() == \"\" {\nThis is two calls to .Type().Elem() rather than storing in an intermediate variable since this approach was very slightly faster in a micro-benchmark. Conciseness could easily trump this.",
			"disapproval": false,
			"date": "2013-01-25 11:07:36.964980",
			"approval": false
		},
		{
			"sender": "adg@golang.org",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7205047/diff/7001/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttps://codereview.appspot.com/7205047/diff/7001/src/pkg/fmt/print.go#newcode942\nsrc/pkg/fmt/print.go:942: if f.Type().Elem().Kind() == reflect.Uint8 && f.Type().Elem().PkgPath() == \"\" {\nOn 2013/01/25 11:07:37, kortschak wrote:\n> Conciseness could easily trump this.\n\nIMO it does. We should make the compiler better, not write verbose code.",
			"disapproval": false,
			"date": "2013-01-29 07:33:15.958670",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "On 2013/01/30 17:13:26, rsc wrote:\n> not lgtm\n> \n> This breaks %q on []myByte. fmtBytes still needs to be called. It should\n> just be passed an additional argument specifying the original type for use\n> in %#v.\n\nWhat is the expected behaviour for %q on []myByte? There is no test case for this in fmt. My reasoning was that since a []myByte behaves everywhere else as completely different to a []byte except for size and sign, it would probably behave differently here too.",
			"disapproval": false,
			"date": "2013-01-30 19:36:05.417270",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7205047/diff/18002/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttps://codereview.appspot.com/7205047/diff/18002/src/pkg/fmt/print.go#newcode556\nsrc/pkg/fmt/print.go:556: p.buf.WriteByte('{')\nSorry. Too early.",
			"disapproval": false,
			"date": "2013-01-30 22:01:16.954030",
			"approval": false
		},
		{
			"sender": "remyoudompheng@gmail.com",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7205047/diff/7001/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttps://codereview.appspot.com/7205047/diff/7001/src/pkg/fmt/print.go#newcode950\nsrc/pkg/fmt/print.go:950: bytes := make([]byte, f.Len())\nI wonder why this is not\n\nif f.Kind() == reflect.Array {\n    f = f.Slice(0, f.Len())\n}\nbytes := f.Bytes()\n\nif using this (which is also faster), the large comment should be removed.",
			"disapproval": false,
			"date": "2013-01-29 07:49:55.875410",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "I believe %q on []myByte should behave the same way it currently does, that\r\nthe goal for the CL should be to fix the type shown in %#v and leave\r\neverything else unchanged.\r\n\r\nRuss\r\n",
			"disapproval": false,
			"date": "2013-01-30 19:49:20.504240",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, remyoudompheng@gmail.com (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-29 10:53:13.759900",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, remyoudompheng@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-30 20:05:33.607380",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "not lgtm\r\n\r\nThis breaks %q on []myByte. fmtBytes still needs to be called. It should\r\njust be passed an additional argument specifying the original type for use\r\nin %#v.\r\n",
			"disapproval": true,
			"date": "2013-01-30 17:13:26.449190",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "OK. That's a pity. I'll rework this.",
			"disapproval": false,
			"date": "2013-01-30 19:56:37.381060",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "This breaks still %s, %xand %X.\n\nI will pass type to fmtBytes.",
			"disapproval": false,
			"date": "2013-01-30 20:28:55.052230",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "https://codereview.appspot.com/7205047/diff/19001/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttps://codereview.appspot.com/7205047/diff/19001/src/pkg/fmt/print.go#newcode942\nsrc/pkg/fmt/print.go:942: if e := f.Type().Elem(); e.Kind() == reflect.Uint8 && (e.PkgPath() == \"\" || verb == 'q') {\nThis is getting verbose, but I thought it less invasive that passing type information to fmtBytes.",
			"disapproval": false,
			"date": "2013-01-30 20:07:39.689110",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Please pass a new reflect.Type argument to fmtBytes. That should be enough.\n\nhttps://codereview.appspot.com/7205047/diff/19001/src/pkg/fmt/print.go\nFile src/pkg/fmt/print.go (right):\n\nhttps://codereview.appspot.com/7205047/diff/19001/src/pkg/fmt/print.go#newcode942\nsrc/pkg/fmt/print.go:942: if e := f.Type().Elem(); e.Kind() == reflect.Uint8 && (e.PkgPath() == \"\" || verb == 'q') {\nOkay but now it's broken for %s.",
			"disapproval": false,
			"date": "2013-01-30 20:32:33.614350",
			"approval": false
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, remyoudompheng@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-30 22:00:12.716060",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "LGTM",
			"disapproval": false,
			"date": "2013-01-31 01:51:14.038870",
			"approval": true
		},
		{
			"sender": "dan.kortschak@adelaide.edu.au",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"golang-dev@googlegroups.com",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "Hello golang-dev@googlegroups.com, adg@golang.org, remyoudompheng@gmail.com, rsc@golang.org (cc: golang-dev@googlegroups.com),\n\nPlease take another look.",
			"disapproval": false,
			"date": "2013-01-30 22:05:41.725670",
			"approval": false
		},
		{
			"sender": "rsc@golang.org",
			"recipients": [
				"dan.kortschak@adelaide.edu.au",
				"golang-dev@googlegroups.com",
				"adg@golang.org",
				"remyoudompheng@gmail.com",
				"rsc@golang.org",
				"reply@codereview-hr.appspotmail.com"
			],
			"text": "*** Submitted as https://code.google.com/p/go/source/detail?r=1af88804d685 ***\n\nfmt: improve go syntax handling of byte-derived arrays and slices\n\nFixes issue 4685.\n\nR=golang-dev, adg, remyoudompheng, rsc\nCC=golang-dev\nhttps://codereview.appspot.com/7205047\n\nCommitter: Russ Cox <rsc@golang.org>",
			"disapproval": false,
			"date": "2013-01-31 01:53:56.218910",
			"approval": false
		}
	],
	"owner_email": "dan.kortschak@adelaide.edu.au",
	"private": false,
	"base_url": "",
	"owner": "kortschak",
	"subject": "code review 7205047: fmt: improve go syntax handling of byte-derived arrays ...",
	"created": "2013-01-24 00:59:55.571090",
	"patchsets": [
		1,
		2001,
		3,
		7001,
		14001,
		19001,
		18002,
		26001
	],
	"modified": "2013-04-18 01:17:58.220380",
	"closed": true,
	"issue": 7205047
}